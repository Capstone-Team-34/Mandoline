okhttp3.Route extends java.lang.Object
final okhttp3.Address address
final java.net.InetSocketAddress inetSocketAddress
final java.net.Proxy proxy
    public void <init>(okhttp3.Address, java.net.Proxy, java.net.InetSocketAddress)
    {
        okhttp3.Route r0;
        okhttp3.Address $r1;
        java.net.Proxy $r2;
        java.net.InetSocketAddress $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: okhttp3.Route;

        $r1 := @parameter0: okhttp3.Address;

        $r2 := @parameter1: java.net.Proxy;

        $r3 := @parameter2: java.net.InetSocketAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("address == null");

        throw $r4;

     label1:
        if $r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("proxy == null");

        throw $r4;

     label2:
        if $r3 != null goto label3;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("inetSocketAddress == null");

        throw $r4;

     label3:
        r0.<okhttp3.Route: okhttp3.Address address> = $r1;

        r0.<okhttp3.Route: java.net.Proxy proxy> = $r2;

        r0.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress> = $r3;

        return;
    }
    public okhttp3.Address address()
    {
        okhttp3.Route r0;
        okhttp3.Address r1;

        r0 := @this: okhttp3.Route;

        r1 = r0.<okhttp3.Route: okhttp3.Address address>;

        return r1;
    }
    public boolean equals(java.lang.Object)
    {
        okhttp3.Route r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        okhttp3.Address $r3, $r4;
        java.net.Proxy $r5, $r6;
        java.net.InetSocketAddress $r7, $r8;

        r0 := @this: okhttp3.Route;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof okhttp3.Route;

        if $z0 == 0 goto label1;

        $r2 = (okhttp3.Route) $r1;

        $r3 = $r2.<okhttp3.Route: okhttp3.Address address>;

        $r4 = r0.<okhttp3.Route: okhttp3.Address address>;

        $z0 = virtualinvoke $r3.<okhttp3.Address: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r2 = (okhttp3.Route) $r1;

        $r5 = $r2.<okhttp3.Route: java.net.Proxy proxy>;

        $r6 = r0.<okhttp3.Route: java.net.Proxy proxy>;

        $z0 = virtualinvoke $r5.<java.net.Proxy: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r2 = (okhttp3.Route) $r1;

        $r7 = $r2.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress>;

        $r8 = r0.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress>;

        $z0 = virtualinvoke $r7.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        okhttp3.Route r0;
        okhttp3.Address $r1;
        int $i0, $i1;
        java.net.Proxy $r2;
        java.net.InetSocketAddress $r3;

        r0 := @this: okhttp3.Route;

        $r1 = r0.<okhttp3.Route: okhttp3.Address address>;

        $i0 = virtualinvoke $r1.<okhttp3.Address: int hashCode()>();

        $i0 = $i0 + 527;

        $i0 = $i0 * 31;

        $r2 = r0.<okhttp3.Route: java.net.Proxy proxy>;

        $i1 = virtualinvoke $r2.<java.net.Proxy: int hashCode()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r3 = r0.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress>;

        $i1 = virtualinvoke $r3.<java.net.InetSocketAddress: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public java.net.Proxy proxy()
    {
        okhttp3.Route r0;
        java.net.Proxy r1;

        r0 := @this: okhttp3.Route;

        r1 = r0.<okhttp3.Route: java.net.Proxy proxy>;

        return r1;
    }
    public boolean requiresTunnel()
    {
        okhttp3.Route r0;
        java.net.Proxy$Type $r1, $r2;
        okhttp3.Address $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.net.Proxy $r5;

        r0 := @this: okhttp3.Route;

        $r3 = r0.<okhttp3.Route: okhttp3.Address address>;

        $r4 = $r3.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r4 == null goto label1;

        $r5 = r0.<okhttp3.Route: java.net.Proxy proxy>;

        $r2 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r1 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.net.InetSocketAddress socketAddress()
    {
        okhttp3.Route r0;
        java.net.InetSocketAddress r1;

        r0 := @this: okhttp3.Route;

        r1 = r0.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress>;

        return r1;
    }
    public java.lang.String toString()
    {
        okhttp3.Route r0;
        java.lang.StringBuilder $r1;
        java.net.InetSocketAddress $r2;
        java.lang.String $r3;

        r0 := @this: okhttp3.Route;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Route{");

        $r2 = r0.<okhttp3.Route: java.net.InetSocketAddress inetSocketAddress>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
