okhttp3.CertificatePinner$Builder extends java.lang.Object
private final java.util.List pins
    public void <init>()
    {
        okhttp3.CertificatePinner$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: okhttp3.CertificatePinner$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<okhttp3.CertificatePinner$Builder: java.util.List pins> = $r1;

        return;
    }
    public transient okhttp3.CertificatePinner$Builder add(java.lang.String, java.lang.String[])
    {
        okhttp3.CertificatePinner$Builder r0;
        java.lang.String $r1, r3;
        java.lang.String[] $r2;
        java.util.List $r4;
        okhttp3.CertificatePinner$Pin $r5;
        java.lang.NullPointerException $r6;
        int $i0, $i1;

        r0 := @this: okhttp3.CertificatePinner$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        if $r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("pattern == null");

        throw $r6;

     label1:
        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r3 = $r2[$i1];

        $r4 = r0.<okhttp3.CertificatePinner$Builder: java.util.List pins>;

        $r5 = new okhttp3.CertificatePinner$Pin;

        specialinvoke $r5.<okhttp3.CertificatePinner$Pin: void <init>(java.lang.String,java.lang.String)>($r1, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return r0;
    }
    public okhttp3.CertificatePinner build()
    {
        okhttp3.CertificatePinner$Builder r0;
        okhttp3.CertificatePinner $r1;
        java.util.LinkedHashSet $r2;
        java.util.List $r3;

        r0 := @this: okhttp3.CertificatePinner$Builder;

        $r1 = new okhttp3.CertificatePinner;

        $r2 = new java.util.LinkedHashSet;

        $r3 = r0.<okhttp3.CertificatePinner$Builder: java.util.List pins>;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        specialinvoke $r1.<okhttp3.CertificatePinner: void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)>($r2, null);

        return $r1;
    }
