okhttp3.Credentials extends java.lang.Object
    private void <init>()
    {
        okhttp3.Credentials r0;

        r0 := @this: okhttp3.Credentials;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String basic(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.nio.charset.Charset $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        $r0 = staticinvoke <okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r0, $r1, $r2);

        return $r0;
    }
    public static java.lang.String basic(java.lang.String, java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String $r0, $r1;
        java.nio.charset.Charset $r2;
        java.lang.StringBuilder $r3;
        byte[] $r4;
        okio.ByteString $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.nio.charset.Charset;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r5 = staticinvoke <okio.ByteString: okio.ByteString of(byte[])>($r4);

        $r0 = virtualinvoke $r5.<okio.ByteString: java.lang.String base64()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
