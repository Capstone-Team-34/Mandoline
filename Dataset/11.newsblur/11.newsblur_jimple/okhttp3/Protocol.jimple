okhttp3.Protocol extends java.lang.Enum
private static final okhttp3.Protocol[] $VALUES
public static final enum okhttp3.Protocol HTTP_1_0
public static final enum okhttp3.Protocol HTTP_1_1
public static final enum okhttp3.Protocol HTTP_2
public static final enum okhttp3.Protocol SPDY_3
private final java.lang.String protocol
    static void <clinit>()
    {
        okhttp3.Protocol $r0;
        okhttp3.Protocol[] $r1;

        $r0 = new okhttp3.Protocol;

        specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_0", 0, "http/1.0");

        <okhttp3.Protocol: okhttp3.Protocol HTTP_1_0> = $r0;

        $r0 = new okhttp3.Protocol;

        specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_1_1", 1, "http/1.1");

        <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1> = $r0;

        $r0 = new okhttp3.Protocol;

        specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("SPDY_3", 2, "spdy/3.1");

        <okhttp3.Protocol: okhttp3.Protocol SPDY_3> = $r0;

        $r0 = new okhttp3.Protocol;

        specialinvoke $r0.<okhttp3.Protocol: void <init>(java.lang.String,int,java.lang.String)>("HTTP_2", 3, "h2");

        <okhttp3.Protocol: okhttp3.Protocol HTTP_2> = $r0;

        $r1 = newarray (okhttp3.Protocol)[4];

        $r0 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_0>;

        $r1[0] = $r0;

        $r0 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1>;

        $r1[1] = $r0;

        $r0 = <okhttp3.Protocol: okhttp3.Protocol SPDY_3>;

        $r1[2] = $r0;

        $r0 = <okhttp3.Protocol: okhttp3.Protocol HTTP_2>;

        $r1[3] = $r0;

        <okhttp3.Protocol: okhttp3.Protocol[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String)
    {
        okhttp3.Protocol r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: okhttp3.Protocol;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<okhttp3.Protocol: java.lang.String protocol> = $r2;

        return;
    }
    public static okhttp3.Protocol get(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r2;
        okhttp3.Protocol $r1;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_0>;

        $r2 = $r1.<okhttp3.Protocol: java.lang.String protocol>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_0>;

        return $r1;

     label1:
        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1>;

        $r2 = $r1.<okhttp3.Protocol: java.lang.String protocol>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_1_1>;

        return $r1;

     label2:
        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_2>;

        $r2 = $r1.<okhttp3.Protocol: java.lang.String protocol>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol HTTP_2>;

        return $r1;

     label3:
        $r1 = <okhttp3.Protocol: okhttp3.Protocol SPDY_3>;

        $r2 = $r1.<okhttp3.Protocol: java.lang.String protocol>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol SPDY_3>;

        return $r1;

     label4:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected protocol: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }
    public static okhttp3.Protocol valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        okhttp3.Protocol $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lokhttp3/Protocol;", $r0);

        $r2 = (okhttp3.Protocol) $r1;

        return $r2;
    }
    public static okhttp3.Protocol[] values()
    {
        java.lang.Object $r0;
        okhttp3.Protocol[] $r1;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (okhttp3.Protocol[]) $r0;

        return $r1;
    }
    public java.lang.String toString()
    {
        okhttp3.Protocol r0;
        java.lang.String r1;

        r0 := @this: okhttp3.Protocol;

        r1 = r0.<okhttp3.Protocol: java.lang.String protocol>;

        return r1;
    }
