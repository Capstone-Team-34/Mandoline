okhttp3.ConnectionSpec$Builder extends java.lang.Object
java.lang.String[] cipherSuites
boolean supportsTlsExtensions
boolean tls
java.lang.String[] tlsVersions
    public void <init>(okhttp3.ConnectionSpec)
    {
        okhttp3.ConnectionSpec$Builder r0;
        okhttp3.ConnectionSpec $r1;
        boolean $z0;
        java.lang.String[] $r2;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 := @parameter0: okhttp3.ConnectionSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = $r1.<okhttp3.ConnectionSpec: boolean tls>;

        r0.<okhttp3.ConnectionSpec$Builder: boolean tls> = $z0;

        $r2 = $r1.<okhttp3.ConnectionSpec: java.lang.String[] cipherSuites>;

        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites> = $r2;

        $r2 = $r1.<okhttp3.ConnectionSpec: java.lang.String[] tlsVersions>;

        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions> = $r2;

        $z0 = $r1.<okhttp3.ConnectionSpec: boolean supportsTlsExtensions>;

        r0.<okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions> = $z0;

        return;
    }
    void <init>(boolean)
    {
        okhttp3.ConnectionSpec$Builder r0;
        boolean $z0;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.ConnectionSpec$Builder: boolean tls> = $z0;

        return;
    }
    public okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
    {
        okhttp3.ConnectionSpec$Builder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no cipher suites for cleartext connections");

        throw $r1;

     label1:
        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites> = null;

        return r0;
    }
    public okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
    {
        okhttp3.ConnectionSpec$Builder r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS versions for cleartext connections");

        throw $r1;

     label1:
        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions> = null;

        return r0;
    }
    public okhttp3.ConnectionSpec build()
    {
        okhttp3.ConnectionSpec$Builder r0;
        okhttp3.ConnectionSpec $r1;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 = new okhttp3.ConnectionSpec;

        specialinvoke $r1.<okhttp3.ConnectionSpec: void <init>(okhttp3.ConnectionSpec$Builder)>(r0);

        return $r1;
    }
    public transient okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
    {
        okhttp3.ConnectionSpec$Builder r0;
        java.lang.String[] $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 := @parameter0: java.lang.String[];

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no cipher suites for cleartext connections");

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one cipher suite is required");

        throw $r4;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (java.lang.String[]) $r2;

        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites> = $r1;

        return r0;
    }
    public transient okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
    {
        okhttp3.ConnectionSpec$Builder r0;
        okhttp3.CipherSuite[] $r1;
        java.lang.String[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        int $i0, $i1;
        okhttp3.CipherSuite $r4;
        java.lang.String $r5;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 := @parameter0: okhttp3.CipherSuite[];

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no cipher suites for cleartext connections");

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r4 = $r1[$i0];

        $r5 = $r4.<okhttp3.CipherSuite: java.lang.String javaName>;

        r2[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        r0 = virtualinvoke r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])>(r2);

        return r0;
    }
    public okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
    {
        okhttp3.ConnectionSpec$Builder r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $z0 := @parameter0: boolean;

        $z1 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS extensions for cleartext connections");

        throw $r1;

     label1:
        r0.<okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions> = $z0;

        return r0;
    }
    public transient okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
    {
        okhttp3.ConnectionSpec$Builder r0;
        java.lang.String[] $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 := @parameter0: java.lang.String[];

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS versions for cleartext connections");

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one TLS version is required");

        throw $r4;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (java.lang.String[]) $r2;

        r0.<okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions> = $r1;

        return r0;
    }
    public transient okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
    {
        okhttp3.ConnectionSpec$Builder r0;
        okhttp3.TlsVersion[] $r1;
        java.lang.String[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        int $i0, $i1;
        okhttp3.TlsVersion $r4;
        java.lang.String $r5;

        r0 := @this: okhttp3.ConnectionSpec$Builder;

        $r1 := @parameter0: okhttp3.TlsVersion[];

        $z0 = r0.<okhttp3.ConnectionSpec$Builder: boolean tls>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no TLS versions for cleartext connections");

        throw $r3;

     label1:
        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r4 = $r1[$i0];

        $r5 = $r4.<okhttp3.TlsVersion: java.lang.String javaName>;

        r2[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        r0 = virtualinvoke r0.<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])>(r2);

        return r0;
    }
