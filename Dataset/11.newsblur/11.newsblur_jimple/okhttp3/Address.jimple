okhttp3.Address extends java.lang.Object
final okhttp3.CertificatePinner certificatePinner
final java.util.List connectionSpecs
final okhttp3.Dns dns
final javax.net.ssl.HostnameVerifier hostnameVerifier
final java.util.List protocols
final java.net.Proxy proxy
final okhttp3.Authenticator proxyAuthenticator
final java.net.ProxySelector proxySelector
final javax.net.SocketFactory socketFactory
final javax.net.ssl.SSLSocketFactory sslSocketFactory
final okhttp3.HttpUrl url
    public void <init>(java.lang.String, int, okhttp3.Dns, javax.net.SocketFactory, javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier, okhttp3.CertificatePinner, okhttp3.Authenticator, java.net.Proxy, java.util.List, java.util.List, java.net.ProxySelector)
    {
        okhttp3.Address r0;
        java.lang.String $r1, $r13;
        int $i0;
        okhttp3.Dns $r2;
        javax.net.SocketFactory $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        javax.net.ssl.HostnameVerifier $r5;
        okhttp3.CertificatePinner $r6;
        okhttp3.Authenticator $r7;
        java.net.Proxy $r8;
        java.util.List r9, r10;
        java.net.ProxySelector $r11;
        okhttp3.HttpUrl$Builder $r12;
        okhttp3.HttpUrl $r14;
        java.lang.NullPointerException $r15;

        r0 := @this: okhttp3.Address;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Dns;

        $r3 := @parameter3: javax.net.SocketFactory;

        $r4 := @parameter4: javax.net.ssl.SSLSocketFactory;

        $r5 := @parameter5: javax.net.ssl.HostnameVerifier;

        $r6 := @parameter6: okhttp3.CertificatePinner;

        $r7 := @parameter7: okhttp3.Authenticator;

        $r8 := @parameter8: java.net.Proxy;

        r9 := @parameter9: java.util.List;

        r10 := @parameter10: java.util.List;

        $r11 := @parameter11: java.net.ProxySelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r12 = new okhttp3.HttpUrl$Builder;

        specialinvoke $r12.<okhttp3.HttpUrl$Builder: void <init>()>();

        if $r4 == null goto label2;

        $r13 = "https";

     label1:
        $r12 = virtualinvoke $r12.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)>($i0);

        $r14 = virtualinvoke $r12.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        r0.<okhttp3.Address: okhttp3.HttpUrl url> = $r14;

        if $r2 != null goto label3;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dns == null");

        throw $r15;

     label2:
        $r13 = "http";

        goto label1;

     label3:
        r0.<okhttp3.Address: okhttp3.Dns dns> = $r2;

        if $r3 != null goto label4;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("socketFactory == null");

        throw $r15;

     label4:
        r0.<okhttp3.Address: javax.net.SocketFactory socketFactory> = $r3;

        if $r7 != null goto label5;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("proxyAuthenticator == null");

        throw $r15;

     label5:
        r0.<okhttp3.Address: okhttp3.Authenticator proxyAuthenticator> = $r7;

        if r9 != null goto label6;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("protocols == null");

        throw $r15;

     label6:
        r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>(r9);

        r0.<okhttp3.Address: java.util.List protocols> = r9;

        if r10 != null goto label7;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("connectionSpecs == null");

        throw $r15;

     label7:
        r9 = staticinvoke <okhttp3.internal.Util: java.util.List immutableList(java.util.List)>(r10);

        r0.<okhttp3.Address: java.util.List connectionSpecs> = r9;

        if $r11 != null goto label8;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("proxySelector == null");

        throw $r15;

     label8:
        r0.<okhttp3.Address: java.net.ProxySelector proxySelector> = $r11;

        r0.<okhttp3.Address: java.net.Proxy proxy> = $r8;

        r0.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r4;

        r0.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r5;

        r0.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner> = $r6;

        return;
    }
    public okhttp3.CertificatePinner certificatePinner()
    {
        okhttp3.Address r0;
        okhttp3.CertificatePinner r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner>;

        return r1;
    }
    public java.util.List connectionSpecs()
    {
        okhttp3.Address r0;
        java.util.List r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: java.util.List connectionSpecs>;

        return r1;
    }
    public okhttp3.Dns dns()
    {
        okhttp3.Address r0;
        okhttp3.Dns r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: okhttp3.Dns dns>;

        return r1;
    }
    public boolean equals(java.lang.Object)
    {
        okhttp3.Address r0, $r3;
        okhttp3.HttpUrl $r1, $r4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: okhttp3.Address;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof okhttp3.Address;

        if $z0 == 0 goto label1;

        $r1 = r0.<okhttp3.Address: okhttp3.HttpUrl url>;

        $r3 = (okhttp3.Address) $r2;

        $r4 = $r3.<okhttp3.Address: okhttp3.HttpUrl url>;

        $z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r3 = (okhttp3.Address) $r2;

        $z0 = virtualinvoke r0.<okhttp3.Address: boolean equalsNonHost(okhttp3.Address)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean equalsNonHost(okhttp3.Address)
    {
        okhttp3.Address r0, $r1;
        okhttp3.Dns $r2, $r3;
        boolean $z0;
        okhttp3.Authenticator $r4, $r5;
        java.util.List $r6, $r7;
        java.net.ProxySelector $r8, $r9;
        java.net.Proxy $r10, $r11;
        javax.net.ssl.SSLSocketFactory $r12, $r13;
        javax.net.ssl.HostnameVerifier $r14, $r15;
        okhttp3.CertificatePinner $r16, $r17;
        okhttp3.HttpUrl $r18;
        int $i0, $i1;

        r0 := @this: okhttp3.Address;

        $r1 := @parameter0: okhttp3.Address;

        $r2 = r0.<okhttp3.Address: okhttp3.Dns dns>;

        $r3 = $r1.<okhttp3.Address: okhttp3.Dns dns>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<okhttp3.Address: okhttp3.Authenticator proxyAuthenticator>;

        $r5 = $r1.<okhttp3.Address: okhttp3.Authenticator proxyAuthenticator>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = r0.<okhttp3.Address: java.util.List protocols>;

        $r7 = $r1.<okhttp3.Address: java.util.List protocols>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r6 = r0.<okhttp3.Address: java.util.List connectionSpecs>;

        $r7 = $r1.<okhttp3.Address: java.util.List connectionSpecs>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r8 = r0.<okhttp3.Address: java.net.ProxySelector proxySelector>;

        $r9 = $r1.<okhttp3.Address: java.net.ProxySelector proxySelector>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        $r10 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        $r11 = $r1.<okhttp3.Address: java.net.Proxy proxy>;

        $z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z0 == 0 goto label1;

        $r12 = r0.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r13 = $r1.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r12, $r13);

        if $z0 == 0 goto label1;

        $r14 = r0.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $r15 = $r1.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z0 == 0 goto label1;

        $r16 = r0.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner>;

        $r17 = $r1.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner>;

        $z0 = staticinvoke <okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r16, $r17);

        if $z0 == 0 goto label1;

        $r18 = virtualinvoke r0.<okhttp3.Address: okhttp3.HttpUrl url()>();

        $i0 = virtualinvoke $r18.<okhttp3.HttpUrl: int port()>();

        $r18 = virtualinvoke $r1.<okhttp3.Address: okhttp3.HttpUrl url()>();

        $i1 = virtualinvoke $r18.<okhttp3.HttpUrl: int port()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        okhttp3.Address r0;
        int $i0, $i1, $i2;
        okhttp3.HttpUrl $r1;
        okhttp3.Dns $r2;
        okhttp3.Authenticator $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        java.net.Proxy $r6;
        javax.net.ssl.SSLSocketFactory $r7;
        javax.net.ssl.HostnameVerifier $r8;
        okhttp3.CertificatePinner $r9;

        r0 := @this: okhttp3.Address;

        $i0 = 0;

        $r1 = r0.<okhttp3.Address: okhttp3.HttpUrl url>;

        $i1 = virtualinvoke $r1.<okhttp3.HttpUrl: int hashCode()>();

        $i1 = $i1 + 527;

        $i1 = $i1 * 31;

        $r2 = r0.<okhttp3.Address: okhttp3.Dns dns>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r3 = r0.<okhttp3.Address: okhttp3.Authenticator proxyAuthenticator>;

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r4 = r0.<okhttp3.Address: java.util.List protocols>;

        $i2 = interfaceinvoke $r4.<java.util.List: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r4 = r0.<okhttp3.Address: java.util.List connectionSpecs>;

        $i2 = interfaceinvoke $r4.<java.util.List: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r5 = r0.<okhttp3.Address: java.net.ProxySelector proxySelector>;

        $i2 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r6 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        if $r6 == null goto label5;

        $r6 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        $i2 = virtualinvoke $r6.<java.net.Proxy: int hashCode()>();

     label1:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r7 = r0.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r7 == null goto label6;

        $r7 = r0.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $i2 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label2:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r8 = r0.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        if $r8 == null goto label7;

        $r8 = r0.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $i2 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

     label3:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r9 = r0.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner>;

        if $r9 == null goto label4;

        $r9 = r0.<okhttp3.Address: okhttp3.CertificatePinner certificatePinner>;

        $i0 = virtualinvoke $r9.<okhttp3.CertificatePinner: int hashCode()>();

     label4:
        $i0 = $i1 + $i0;

        return $i0;

     label5:
        $i2 = 0;

        goto label1;

     label6:
        $i2 = 0;

        goto label2;

     label7:
        $i2 = 0;

        goto label3;
    }
    public javax.net.ssl.HostnameVerifier hostnameVerifier()
    {
        okhttp3.Address r0;
        javax.net.ssl.HostnameVerifier r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        return r1;
    }
    public java.util.List protocols()
    {
        okhttp3.Address r0;
        java.util.List r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: java.util.List protocols>;

        return r1;
    }
    public java.net.Proxy proxy()
    {
        okhttp3.Address r0;
        java.net.Proxy r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        return r1;
    }
    public okhttp3.Authenticator proxyAuthenticator()
    {
        okhttp3.Address r0;
        okhttp3.Authenticator r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: okhttp3.Authenticator proxyAuthenticator>;

        return r1;
    }
    public java.net.ProxySelector proxySelector()
    {
        okhttp3.Address r0;
        java.net.ProxySelector r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: java.net.ProxySelector proxySelector>;

        return r1;
    }
    public javax.net.SocketFactory socketFactory()
    {
        okhttp3.Address r0;
        javax.net.SocketFactory r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: javax.net.SocketFactory socketFactory>;

        return r1;
    }
    public javax.net.ssl.SSLSocketFactory sslSocketFactory()
    {
        okhttp3.Address r0;
        javax.net.ssl.SSLSocketFactory r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        return r1;
    }
    public java.lang.String toString()
    {
        okhttp3.Address r0;
        java.lang.StringBuilder $r1, $r5;
        okhttp3.HttpUrl $r2;
        java.lang.String $r3;
        int $i0;
        java.net.Proxy $r4;
        java.net.ProxySelector $r6;

        r0 := @this: okhttp3.Address;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Address{");

        $r2 = r0.<okhttp3.Address: okhttp3.HttpUrl url>;

        $r3 = virtualinvoke $r2.<okhttp3.HttpUrl: java.lang.String host()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = r0.<okhttp3.Address: okhttp3.HttpUrl url>;

        $i0 = virtualinvoke $r2.<okhttp3.HttpUrl: int port()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", proxy=");

        $r4 = r0.<okhttp3.Address: java.net.Proxy proxy>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", proxySelector=");

        $r6 = r0.<okhttp3.Address: java.net.ProxySelector proxySelector>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        goto label1;
    }
    public okhttp3.HttpUrl url()
    {
        okhttp3.Address r0;
        okhttp3.HttpUrl r1;

        r0 := @this: okhttp3.Address;

        r1 = r0.<okhttp3.Address: okhttp3.HttpUrl url>;

        return r1;
    }
