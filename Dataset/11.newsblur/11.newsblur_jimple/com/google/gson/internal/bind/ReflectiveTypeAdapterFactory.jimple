com.google.gson.internal.bind.ReflectiveTypeAdapterFactory extends java.lang.Object implements com.google.gson.TypeAdapterFactory
private final com.google.gson.internal.ConstructorConstructor constructorConstructor
private final com.google.gson.internal.Excluder excluder
private final com.google.gson.FieldNamingStrategy fieldNamingPolicy
private final com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory
    public void <init>(com.google.gson.internal.ConstructorConstructor, com.google.gson.FieldNamingStrategy, com.google.gson.internal.Excluder, com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        com.google.gson.internal.ConstructorConstructor $r1;
        com.google.gson.FieldNamingStrategy $r2;
        com.google.gson.internal.Excluder $r3;
        com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory $r4;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: com.google.gson.internal.ConstructorConstructor;

        $r2 := @parameter1: com.google.gson.FieldNamingStrategy;

        $r3 := @parameter2: com.google.gson.internal.Excluder;

        $r4 := @parameter3: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor> = $r1;

        r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.FieldNamingStrategy fieldNamingPolicy> = $r2;

        r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.Excluder excluder> = $r3;

        r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory> = $r4;

        return;
    }
    private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson, java.lang.reflect.Field, java.lang.String, com.google.gson.reflect.TypeToken, boolean, boolean)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        com.google.gson.Gson $r1;
        java.lang.reflect.Field $r2;
        java.lang.String $r3;
        com.google.gson.reflect.TypeToken r4;
        boolean $z0, $z1, $z2, z3;
        java.lang.Class $r5;
        java.lang.'annotation'.Annotation $r6;
        com.google.gson.annotations.JsonAdapter r7;
        com.google.gson.TypeAdapter r8;
        com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory $r9;
        com.google.gson.internal.ConstructorConstructor $r10;
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 $r11;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: com.google.gson.Gson;

        $r2 := @parameter1: java.lang.reflect.Field;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.google.gson.reflect.TypeToken;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        $r5 = virtualinvoke r4.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>();

        $z2 = staticinvoke <com.google.gson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)>($r5);

        $r6 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/google/gson/annotations/JsonAdapter;");

        r7 = (com.google.gson.annotations.JsonAdapter) $r6;

        r8 = null;

        if r7 == null goto label1;

        $r9 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory>;

        $r10 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor>;

        r8 = virtualinvoke $r9.<com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)>($r10, $r1, r4, r7);

     label1:
        if r8 == null goto label4;

        z3 = 1;

     label2:
        if r8 != null goto label3;

        r8 = virtualinvoke $r1.<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>(r4);

     label3:
        $r11 = new com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1;

        specialinvoke $r11.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean)>(r0, $r3, $z0, $z1, $r2, z3, r8, $r1, r4, $z2);

        return $r11;

     label4:
        z3 = 0;

        goto label2;
    }
    static boolean excludeField(java.lang.reflect.Field, boolean, com.google.gson.internal.Excluder)
    {
        java.lang.reflect.Field $r0;
        boolean $z0, $z1;
        com.google.gson.internal.Excluder $r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.reflect.Field;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: com.google.gson.internal.Excluder;

        $r2 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z1 = virtualinvoke $r1.<com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)>($r2, $z0);

        if $z1 != 0 goto label1;

        $z0 = virtualinvoke $r1.<com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)>($r0, $z0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private java.util.Map getBoundFields(com.google.gson.Gson, com.google.gson.reflect.TypeToken, java.lang.Class)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        com.google.gson.Gson $r1;
        java.lang.reflect.Field r2;
        java.util.LinkedHashMap r3;
        com.google.gson.reflect.TypeToken r4, $r14;
        java.lang.Class r5;
        boolean $z0, z1, $z2;
        java.lang.reflect.Type $r6, $r8, $r9;
        java.lang.reflect.Field[] $r7;
        int $i0, $i1, i2, $i3;
        java.util.List $r10;
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField r11, $r15;
        java.lang.Object $r12;
        java.lang.String r13;
        java.lang.IllegalArgumentException $r16;
        java.lang.StringBuilder $r17;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: com.google.gson.Gson;

        r4 := @parameter1: com.google.gson.reflect.TypeToken;

        r5 := @parameter2: java.lang.Class;

        r3 = new java.util.LinkedHashMap;

        specialinvoke r3.<java.util.LinkedHashMap: void <init>()>();

        $z0 = virtualinvoke r5.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label01;

        return r3;

     label01:
        $r6 = virtualinvoke r4.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

     label02:
        if r5 == class "Ljava/lang/Object;" goto label11;

        $r7 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label10;

        r2 = $r7[$i1];

        $z0 = virtualinvoke r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)>(r2, 1);

        z1 = $z0;

        $z2 = virtualinvoke r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)>(r2, 0);

        if $z0 != 0 goto label05;

        if $z2 != 0 goto label05;

     label04:
        $i1 = $i1 + 1;

        goto label03;

     label05:
        virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r8 = virtualinvoke r4.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $r8 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r8, r5, $r9);

        $r10 = specialinvoke r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.List getFieldNames(java.lang.reflect.Field)>(r2);

        r11 = null;

        i2 = 0;

     label06:
        $i3 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i2 >= $i3 goto label09;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i2);

        r13 = (java.lang.String) $r12;

        if i2 == 0 goto label07;

        z1 = 0;

     label07:
        $r14 = staticinvoke <com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)>($r8);

        $r15 = specialinvoke r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)>($r1, r2, r13, $r14, z1, $z2);

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r15);

        if r11 != null goto label08;

        r11 = (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) $r12;

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        if r11 == null goto label04;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declares multiple JSON fields named ");

        r13 = r11.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String name>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r13);

        throw $r16;

     label10:
        $r8 = virtualinvoke r4.<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r8 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r8, r5, $r9);

        $r14 = staticinvoke <com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)>($r8);

        r4 = $r14;

        r5 = virtualinvoke $r14.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>();

        goto label02;

     label11:
        return r3;
    }
    private java.util.List getFieldNames(java.lang.reflect.Field)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        java.lang.reflect.Field $r1;
        java.lang.String r2;
        int $i0, $i1;
        java.lang.'annotation'.Annotation $r3;
        com.google.gson.annotations.SerializedName r4;
        com.google.gson.FieldNamingStrategy $r5;
        java.util.List $r6;
        java.lang.String[] $r7;
        java.util.ArrayList r8;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/google/gson/annotations/SerializedName;");

        r4 = (com.google.gson.annotations.SerializedName) $r3;

        if r4 != null goto label1;

        $r5 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.FieldNamingStrategy fieldNamingPolicy>;

        r2 = interfaceinvoke $r5.<com.google.gson.FieldNamingStrategy: java.lang.String translateName(java.lang.reflect.Field)>($r1);

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        return $r6;

     label1:
        r2 = interfaceinvoke r4.<com.google.gson.annotations.SerializedName: java.lang.String value()>();

        $r7 = interfaceinvoke r4.<com.google.gson.annotations.SerializedName: java.lang.String[] alternate()>();

        $i0 = lengthof $r7;

        if $i0 != 0 goto label2;

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        return $r6;

     label2:
        r8 = new java.util.ArrayList;

        $i0 = lengthof $r7;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i0 = lengthof $r7;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        r2 = $r7[$i1];

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return r8;
    }
    public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        com.google.gson.Gson $r1;
        com.google.gson.reflect.TypeToken r2;
        java.lang.Class $r3, $r4;
        boolean $z0;
        com.google.gson.internal.ConstructorConstructor $r5;
        com.google.gson.internal.ObjectConstructor $r6;
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter $r7;
        java.util.Map $r8;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: com.google.gson.Gson;

        r2 := @parameter1: com.google.gson.reflect.TypeToken;

        $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>();

        $r4 = class "Ljava/lang/Object;";

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor>;

        $r6 = virtualinvoke $r5.<com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)>(r2);

        $r7 = new com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter;

        $r8 = specialinvoke r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)>($r1, r2, $r3);

        specialinvoke $r7.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map)>($r6, $r8);

        return $r7;
    }
    public boolean excludeField(java.lang.reflect.Field, boolean)
    {
        com.google.gson.internal.bind.ReflectiveTypeAdapterFactory r0;
        java.lang.reflect.Field $r1;
        boolean $z0;
        com.google.gson.internal.Excluder $r2;

        r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;

        $r1 := @parameter0: java.lang.reflect.Field;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.Excluder excluder>;

        $z0 = staticinvoke <com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)>($r1, $z0, $r2);

        return $z0;
    }
