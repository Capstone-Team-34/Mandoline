com.newsblur.domain.Folder$2 extends java.lang.Object implements java.util.Comparator
    void <init>()
    {
        com.newsblur.domain.Folder$2 r0;

        r0 := @this: com.newsblur.domain.Folder$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public int compare(com.newsblur.domain.Folder, com.newsblur.domain.Folder)
    {
        com.newsblur.domain.Folder$2 r0;
        com.newsblur.domain.Folder $r1, $r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: com.newsblur.domain.Folder$2;

        $r1 := @parameter0: com.newsblur.domain.Folder;

        $r2 := @parameter1: com.newsblur.domain.Folder;

        $r4 = $r1.<com.newsblur.domain.Folder: java.lang.String name>;

        $r3 = $r2.<com.newsblur.domain.Folder: java.lang.String name>;

        $i0 = staticinvoke <com.newsblur.domain.Folder: int access$000(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.newsblur.domain.Folder$2 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        com.newsblur.domain.Folder $r3, $r4;

        r0 := @this: com.newsblur.domain.Folder$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.newsblur.domain.Folder) $r1;

        $r4 = (com.newsblur.domain.Folder) $r2;

        $i0 = virtualinvoke r0.<com.newsblur.domain.Folder$2: int compare(com.newsblur.domain.Folder,com.newsblur.domain.Folder)>($r3, $r4);

        return $i0;
    }
