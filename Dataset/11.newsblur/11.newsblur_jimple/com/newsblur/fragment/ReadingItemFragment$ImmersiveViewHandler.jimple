com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler extends android.view.GestureDetector$SimpleOnGestureListener implements android.view.View$OnSystemUiVisibilityChangeListener
final com.newsblur.fragment.ReadingItemFragment this$0
private android.view.View view
    public void <init>(com.newsblur.fragment.ReadingItemFragment, android.view.View)
    {
        com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler r0;
        com.newsblur.fragment.ReadingItemFragment $r1;
        android.view.View $r2;

        r0 := @this: com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler;

        $r1 := @parameter0: com.newsblur.fragment.ReadingItemFragment;

        $r2 := @parameter1: android.view.View;

        r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: com.newsblur.fragment.ReadingItemFragment this$0> = $r1;

        specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>();

        r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view> = $r2;

        return;
    }
    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler r0;
        android.view.MotionEvent $r1;
        com.newsblur.fragment.ReadingItemFragment $r2;
        com.newsblur.view.NewsblurWebview $r3;
        boolean $z0;
        android.view.View $r4;
        android.app.Activity $r5;

        r0 := @this: com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: com.newsblur.fragment.ReadingItemFragment this$0>;

        $r3 = $r2.<com.newsblur.fragment.ReadingItemFragment: com.newsblur.view.NewsblurWebview web>;

        $z0 = virtualinvoke $r3.<com.newsblur.view.NewsblurWebview: boolean wasLinkClicked()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $r4 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view>;

        $z0 = staticinvoke <com.newsblur.util.ViewUtils: boolean isSystemUIHidden(android.view.View)>($r4);

        if $z0 == 0 goto label3;

        $r4 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view>;

        staticinvoke <com.newsblur.util.ViewUtils: void showSystemUI(android.view.View)>($r4);

     label2:
        $z0 = specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>($r1);

        return $z0;

     label3:
        $r2 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: com.newsblur.fragment.ReadingItemFragment this$0>;

        $r5 = virtualinvoke $r2.<com.newsblur.fragment.ReadingItemFragment: android.app.Activity getActivity()>();

        $z0 = staticinvoke <com.newsblur.util.PrefsUtils: boolean enterImmersiveReadingModeOnSingleTap(android.content.Context)>($r5);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view>;

        staticinvoke <com.newsblur.util.ViewUtils: void hideSystemUI(android.view.View)>($r4);

        goto label2;
    }
    public void onSystemUiVisibilityChange(int)
    {
        com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler r0;
        int $i0;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler;

        $i0 := @parameter0: int;

        $r1 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view>;

        $z0 = staticinvoke <com.newsblur.util.ViewUtils: boolean immersiveViewExitedViaSystemGesture(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.newsblur.fragment.ReadingItemFragment$ImmersiveViewHandler: android.view.View view>;

        staticinvoke <com.newsblur.util.ViewUtils: void showSystemUI(android.view.View)>($r1);

     label1:
        return;
    }
