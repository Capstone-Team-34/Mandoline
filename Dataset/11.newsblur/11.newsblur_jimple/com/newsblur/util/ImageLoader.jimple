com.newsblur.util.ImageLoader extends java.lang.Object
private final int emptyRID
private final java.util.concurrent.ExecutorService executorService
private final com.newsblur.util.FileCache fileCache
private final boolean hideMissing
private final java.util.Map imageViewMappings
private final com.newsblur.util.MemoryCache memoryCache
private final int minImgHeight
    private void <init>(com.newsblur.util.FileCache, int, int, boolean, long)
    {
        com.newsblur.util.ImageLoader r0;
        com.newsblur.util.FileCache $r1;
        int $i0, $i1;
        boolean $z0;
        long $l2;
        java.util.WeakHashMap $r2;
        java.util.Map $r3;
        com.newsblur.util.MemoryCache $r4;
        java.util.concurrent.ExecutorService $r5;

        r0 := @this: com.newsblur.util.ImageLoader;

        $r1 := @parameter0: com.newsblur.util.FileCache;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $l2 := @parameter4: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<com.newsblur.util.ImageLoader: java.util.Map imageViewMappings> = $r3;

        $r4 = new com.newsblur.util.MemoryCache;

        specialinvoke $r4.<com.newsblur.util.MemoryCache: void <init>(long)>($l2);

        r0.<com.newsblur.util.ImageLoader: com.newsblur.util.MemoryCache memoryCache> = $r4;

        r0.<com.newsblur.util.ImageLoader: com.newsblur.util.FileCache fileCache> = $r1;

        $r5 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(2);

        r0.<com.newsblur.util.ImageLoader: java.util.concurrent.ExecutorService executorService> = $r5;

        r0.<com.newsblur.util.ImageLoader: int emptyRID> = $i0;

        r0.<com.newsblur.util.ImageLoader: int minImgHeight> = $i1;

        r0.<com.newsblur.util.ImageLoader: boolean hideMissing> = $z0;

        return;
    }
    static com.newsblur.util.FileCache access$000(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        com.newsblur.util.FileCache r1;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        r1 = $r0.<com.newsblur.util.ImageLoader: com.newsblur.util.FileCache fileCache>;

        return r1;
    }
    static android.graphics.Bitmap access$100(java.io.File)
    {
        java.io.File $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <com.newsblur.util.ImageLoader: android.graphics.Bitmap decodeBitmap(java.io.File)>($r0);

        return $r1;
    }
    static com.newsblur.util.MemoryCache access$200(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        com.newsblur.util.MemoryCache r1;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        r1 = $r0.<com.newsblur.util.ImageLoader: com.newsblur.util.MemoryCache memoryCache>;

        return r1;
    }
    static void access$300(com.newsblur.util.ImageLoader, android.graphics.Bitmap, com.newsblur.util.ImageLoader$PhotoToLoad)
    {
        com.newsblur.util.ImageLoader $r0;
        android.graphics.Bitmap $r1;
        com.newsblur.util.ImageLoader$PhotoToLoad $r2;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r2 := @parameter2: com.newsblur.util.ImageLoader$PhotoToLoad;

        specialinvoke $r0.<com.newsblur.util.ImageLoader: void setViewImage(android.graphics.Bitmap,com.newsblur.util.ImageLoader$PhotoToLoad)>($r1, $r2);

        return;
    }
    static java.util.Map access$400(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        r1 = $r0.<com.newsblur.util.ImageLoader: java.util.Map imageViewMappings>;

        return r1;
    }
    static int access$500(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        int i0;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        i0 = $r0.<com.newsblur.util.ImageLoader: int minImgHeight>;

        return i0;
    }
    static boolean access$600(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        boolean z0;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        z0 = $r0.<com.newsblur.util.ImageLoader: boolean hideMissing>;

        return z0;
    }
    static int access$700(com.newsblur.util.ImageLoader)
    {
        com.newsblur.util.ImageLoader $r0;
        int i0;

        $r0 := @parameter0: com.newsblur.util.ImageLoader;

        i0 = $r0.<com.newsblur.util.ImageLoader: int emptyRID>;

        return i0;
    }
    public static com.newsblur.util.ImageLoader asIconLoader(android.content.Context)
    {
        android.content.Context $r0;
        com.newsblur.util.ImageLoader $r1;
        com.newsblur.util.FileCache $r2;
        java.lang.Runtime $r3;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.newsblur.util.ImageLoader;

        $r2 = staticinvoke <com.newsblur.util.FileCache: com.newsblur.util.FileCache asIconCache(android.content.Context)>($r0);

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r3.<java.lang.Runtime: long maxMemory()>();

        $l0 = $l0 / 20L;

        specialinvoke $r1.<com.newsblur.util.ImageLoader: void <init>(com.newsblur.util.FileCache,int,int,boolean,long)>($r2, 2130837638, 2, 0, $l0);

        return $r1;
    }
    public static com.newsblur.util.ImageLoader asThumbnailLoader(android.content.Context)
    {
        android.content.Context $r0;
        com.newsblur.util.ImageLoader $r1;
        com.newsblur.util.FileCache $r2;
        java.lang.Runtime $r3;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.newsblur.util.ImageLoader;

        $r2 = staticinvoke <com.newsblur.util.FileCache: com.newsblur.util.FileCache asThumbnailCache(android.content.Context)>($r0);

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r3.<java.lang.Runtime: long maxMemory()>();

        $l0 = $l0 / 5L;

        specialinvoke $r1.<com.newsblur.util.ImageLoader: void <init>(com.newsblur.util.FileCache,int,int,boolean,long)>($r2, 17170445, 32, 1, $l0);

        return $r1;
    }
    private static android.graphics.Bitmap decodeBitmap(java.io.File)
    {
        java.io.File $r0;
        java.lang.Exception r1;
        boolean $z0;
        java.lang.String $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static android.graphics.Bitmap getCachedImageSynchro(com.newsblur.util.FileCache, java.lang.String)
    {
        com.newsblur.util.FileCache $r0;
        java.lang.String $r1;
        boolean $z0;
        java.io.File $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: com.newsblur.util.FileCache;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.newsblur.network.APIConstants: java.lang.String buildUrl(java.lang.String)>($r1);

     label1:
        $r2 = virtualinvoke $r0.<com.newsblur.util.FileCache: java.io.File getCachedFile(java.lang.String)>($r1);

        $r3 = staticinvoke <com.newsblur.util.ImageLoader: android.graphics.Bitmap decodeBitmap(java.io.File)>($r2);

        return $r3;
    }
    private void setViewImage(android.graphics.Bitmap, com.newsblur.util.ImageLoader$PhotoToLoad)
    {
        com.newsblur.util.ImageLoader r0;
        android.graphics.Bitmap $r1;
        com.newsblur.util.ImageLoader$PhotoToLoad $r2;
        com.newsblur.util.ImageLoader$BitmapDisplayer r3;
        android.widget.ImageView $r4;
        android.content.Context $r5;
        android.app.Activity r6;

        r0 := @this: com.newsblur.util.ImageLoader;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: com.newsblur.util.ImageLoader$PhotoToLoad;

        r3 = new com.newsblur.util.ImageLoader$BitmapDisplayer;

        specialinvoke r3.<com.newsblur.util.ImageLoader$BitmapDisplayer: void <init>(com.newsblur.util.ImageLoader,android.graphics.Bitmap,com.newsblur.util.ImageLoader$PhotoToLoad)>(r0, $r1, $r2);

        $r4 = $r2.<com.newsblur.util.ImageLoader$PhotoToLoad: android.widget.ImageView imageView>;

        $r5 = virtualinvoke $r4.<android.widget.ImageView: android.content.Context getContext()>();

        r6 = (android.app.Activity) $r5;

        virtualinvoke r6.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>(r3);

        return;
    }
    public void displayImage(java.lang.String, android.widget.ImageView, float, boolean)
    {
        com.newsblur.util.ImageLoader r0;
        android.widget.ImageView $r1;
        float $f0;
        boolean $z0, $z1;
        com.newsblur.util.ImageLoader$PhotoToLoad r2;
        java.lang.String $r3;
        int $i0;
        java.util.Map $r4;
        com.newsblur.util.MemoryCache $r5;
        android.graphics.Bitmap $r6;
        java.util.concurrent.ExecutorService $r7;
        com.newsblur.util.ImageLoader$PhotosLoader $r8;

        r0 := @this: com.newsblur.util.ImageLoader;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.widget.ImageView;

        $f0 := @parameter2: float;

        $z0 := @parameter3: boolean;

        if $r3 != null goto label1;

        $i0 = r0.<com.newsblur.util.ImageLoader: int emptyRID>;

        virtualinvoke $r1.<android.widget.ImageView: void setImageResource(int)>($i0);

        return;

     label1:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label2;

        $r3 = staticinvoke <com.newsblur.network.APIConstants: java.lang.String buildUrl(java.lang.String)>($r3);

     label2:
        $r4 = r0.<com.newsblur.util.ImageLoader: java.util.Map imageViewMappings>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        r2 = new com.newsblur.util.ImageLoader$PhotoToLoad;

        specialinvoke r2.<com.newsblur.util.ImageLoader$PhotoToLoad: void <init>(com.newsblur.util.ImageLoader,java.lang.String,android.widget.ImageView,float,boolean)>(r0, $r3, $r1, $f0, $z0);

        $r5 = r0.<com.newsblur.util.ImageLoader: com.newsblur.util.MemoryCache memoryCache>;

        $r6 = virtualinvoke $r5.<com.newsblur.util.MemoryCache: android.graphics.Bitmap get(java.lang.String)>($r3);

        if $r6 == null goto label3;

        specialinvoke r0.<com.newsblur.util.ImageLoader: void setViewImage(android.graphics.Bitmap,com.newsblur.util.ImageLoader$PhotoToLoad)>($r6, r2);

        return;

     label3:
        $r7 = r0.<com.newsblur.util.ImageLoader: java.util.concurrent.ExecutorService executorService>;

        $r8 = new com.newsblur.util.ImageLoader$PhotosLoader;

        specialinvoke $r8.<com.newsblur.util.ImageLoader$PhotosLoader: void <init>(com.newsblur.util.ImageLoader,com.newsblur.util.ImageLoader$PhotoToLoad)>(r0, r2);

        interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r8);

        $i0 = r0.<com.newsblur.util.ImageLoader: int emptyRID>;

        virtualinvoke $r1.<android.widget.ImageView: void setImageResource(int)>($i0);

        return;
    }
