com.newsblur.util.FileCache extends java.lang.Object
private static final java.util.regex.Pattern POSTFIX_PATTERN
private final java.io.File cacheDir
private final long maxFileAgeMillis
private final int minValidCacheBytes
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\.[a-zA-Z0-9]+)[^\\.]*$");

        <com.newsblur.util.FileCache: java.util.regex.Pattern POSTFIX_PATTERN> = $r0;

        return;
    }
    private void <init>(android.content.Context, java.lang.String, long, int)
    {
        com.newsblur.util.FileCache r0;
        android.content.Context $r1;
        java.lang.String $r2;
        long $l0;
        int $i1;
        java.io.File $r3, $r4;
        boolean $z0;

        r0 := @this: com.newsblur.util.FileCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.newsblur.util.FileCache: long maxFileAgeMillis> = $l0;

        r0.<com.newsblur.util.FileCache: int minValidCacheBytes> = $i1;

        $r3 = new java.io.File;

        $r4 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r2);

        r0.<com.newsblur.util.FileCache: java.io.File cacheDir> = $r3;

        $r3 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }
    public static com.newsblur.util.FileCache asIconCache(android.content.Context)
    {
        android.content.Context $r0;
        com.newsblur.util.FileCache r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new com.newsblur.util.FileCache;

        specialinvoke r1.<com.newsblur.util.FileCache: void <init>(android.content.Context,java.lang.String,long,int)>($r0, "icons", 3888000000L, 128);

        return r1;
    }
    public static com.newsblur.util.FileCache asStoryImageCache(android.content.Context)
    {
        android.content.Context $r0;
        com.newsblur.util.FileCache r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new com.newsblur.util.FileCache;

        specialinvoke r1.<com.newsblur.util.FileCache: void <init>(android.content.Context,java.lang.String,long,int)>($r0, "olimages", 2592000000L, 512);

        return r1;
    }
    public static com.newsblur.util.FileCache asThumbnailCache(android.content.Context)
    {
        android.content.Context $r0;
        com.newsblur.util.FileCache r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new com.newsblur.util.FileCache;

        specialinvoke r1.<com.newsblur.util.FileCache: void <init>(android.content.Context,java.lang.String,long,int)>($r0, "thumbs", 1296000000L, 256);

        return r1;
    }
    public static void cleanUpOldCache1(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File r1, r3;
        java.lang.Exception r2;
        boolean $z0;
        java.io.File[] $r4;
        int $i0, $i1;
        java.lang.Class $r5;
        java.lang.String $r6;

        $r0 := @parameter0: android.content.Context;

        r1 = new java.io.File;

     label01:
        r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "NewsblurCache");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label03;

        return;

     label03:
        $r4 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

     label04:
        if $r4 == null goto label13;

     label05:
        $i0 = lengthof $r4;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label10;

     label08:
        r3 = $r4[$i1];

        virtualinvoke r3.<java.io.File: boolean delete()>();

     label09:
        $i1 = $i1 + 1;

        goto label07;

     label10:
        virtualinvoke r1.<java.io.File: boolean delete()>();

     label11:
        return;

     label12:
        r2 := @caughtexception;

        $r5 = class "Lcom/newsblur/util/FileCache;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "exception cleaning up legacy cache", r2);

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }
    public static void cleanUpOldCache2(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        java.io.File r2;
        java.io.File[] $r3;
        java.util.regex.Pattern $r4;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r5;
        java.util.regex.Matcher $r6;
        java.lang.Class $r7;

        $r0 := @parameter0: android.content.Context;

     label01:
        r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

     label02:
        if $r3 != null goto label03;

        return;

     label03:
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[0-9-]+$");

        $i0 = lengthof $r3;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label13;

     label06:
        r2 = $r3[$i1];

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

     label07:
        if $z0 != 0 goto label11;

     label08:
        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

     label09:
        if $z0 == 0 goto label11;

     label10:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label11:
        $i1 = $i1 + 1;

        goto label05;

     label12:
        r1 := @caughtexception;

        $r7 = class "Lcom/newsblur/util/FileCache;";

        $r5 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "exception cleaning up legacy cache", r1);

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }
    private java.lang.String getFileName(java.lang.String)
    {
        com.newsblur.util.FileCache r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        int $i0;

        r0 := @this: com.newsblur.util.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.newsblur.util.FileCache: java.util.regex.Pattern POSTFIX_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public void cacheFile(java.lang.String)
    {
        com.newsblur.util.FileCache r0;
        java.lang.String $r1, $r4;
        java.io.File r2, $r5;
        long $l0, $l3;
        byte $b1;
        java.lang.Class $r3;
        boolean $z0;
        java.net.URL $r6;
        int $i2;
        java.lang.Exception $r7;

        r0 := @this: com.newsblur.util.FileCache;

        $r1 := @parameter0: java.lang.String;

     label01:
        r2 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        $l0 = virtualinvoke r2.<java.io.File: long getFreeSpace()>();

     label02:
        $b1 = $l0 cmp 262144000L;

        if $b1 >= 0 goto label05;

     label03:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "device low on storage, not caching");

     label04:
        return;

     label05:
        $r4 = specialinvoke r0.<com.newsblur.util.FileCache: java.lang.String getFileName(java.lang.String)>($r1);

     label06:
        if $r4 == null goto label14;

        r2 = new java.io.File;

     label07:
        $r5 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r4);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

     label08:
        if $z0 != 0 goto label14;

        $r6 = new java.net.URL;

     label09:
        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1);

        $l0 = staticinvoke <com.newsblur.util.NetworkUtils: long loadURL(java.net.URL,java.io.File)>($r6, r2);

        $i2 = r0.<com.newsblur.util.FileCache: int minValidCacheBytes>;

     label10:
        $l3 = (long) $i2;

        $b1 = $l0 cmp $l3;

        if $b1 >= 0 goto label14;

     label11:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label12:
        return;

     label13:
        $r7 := @caughtexception;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
    public void cleanupOld()
    {
        com.newsblur.util.FileCache r0;
        java.lang.Exception r1;
        java.io.File r2;
        byte $b0;
        java.io.File[] $r3;
        int $i1, $i2;
        long $l3, $l4, $l5;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: com.newsblur.util.FileCache;

     label01:
        r2 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

     label02:
        if $r3 != null goto label03;

        return;

     label03:
        $i1 = lengthof $r3;

     label04:
        $i2 = 0;

     label05:
        if $i2 >= $i1 goto label11;

     label06:
        r2 = $r3[$i2];

        $l3 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = r0.<com.newsblur.util.FileCache: long maxFileAgeMillis>;

     label07:
        $l3 = $l5 + $l3;

        $b0 = $l4 cmp $l3;

        if $b0 <= 0 goto label09;

     label08:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label09:
        $i2 = $i2 + 1;

        goto label05;

     label10:
        r1 := @caughtexception;

        $r4 = class "Lcom/newsblur/util/FileCache;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "exception cleaning up cache", r1);

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    public void cleanupUnusedOrOld(java.util.Set)
    {
        com.newsblur.util.FileCache r0;
        java.util.Set r1;
        java.util.HashSet r2;
        java.lang.Exception r3;
        java.io.File r4;
        int $i0, $i1;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String r7;
        java.io.File[] $r8;
        long $l2, $l3, $l4;
        byte $b5;
        java.lang.Class $r9;

        r0 := @this: com.newsblur.util.FileCache;

        r1 := @parameter0: java.util.Set;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        r2 = new java.util.HashSet;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        specialinvoke r2.<java.util.HashSet: void <init>(int)>($i0);

        $r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        r7 = specialinvoke r0.<com.newsblur.util.FileCache: java.lang.String getFileName(java.lang.String)>(r7);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r7);

        goto label02;

     label03:
        r4 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        $r8 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();

     label04:
        if $r8 == null goto label15;

     label05:
        $i0 = lengthof $r8;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label15;

     label08:
        r4 = $r8[$i1];

        $l2 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = r0.<com.newsblur.util.FileCache: long maxFileAgeMillis>;

     label09:
        $l2 = $l4 + $l2;

        $b5 = $l3 cmp $l2;

        if $b5 > 0 goto label12;

     label10:
        r7 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r7);

     label11:
        if $z0 != 0 goto label13;

     label12:
        virtualinvoke r4.<java.io.File: boolean delete()>();

     label13:
        $i1 = $i1 + 1;

        goto label07;

     label14:
        r3 := @caughtexception;

        $r9 = class "Lcom/newsblur/util/FileCache;";

        r7 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r7, "exception cleaning up cache", r3);

     label15:
        return;

        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }
    public java.io.File getCachedFile(java.lang.String)
    {
        com.newsblur.util.FileCache r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        java.io.File $r3, $r4;
        java.lang.Class $r5;

        r0 := @this: com.newsblur.util.FileCache;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r1 = specialinvoke r0.<com.newsblur.util.FileCache: java.lang.String getFileName(java.lang.String)>($r1);

     label2:
        if $r1 != null goto label3;

        return null;

     label3:
        $r3 = new java.io.File;

     label4:
        $r4 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

     label5:
        return $r3;

     label6:
        r2 := @caughtexception;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "cache error", r2);

        return null;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public java.lang.String getCachedLocation(java.lang.String)
    {
        com.newsblur.util.FileCache r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        java.io.File r3, $r4;
        boolean $z0;
        java.lang.Class $r5;

        r0 := @this: com.newsblur.util.FileCache;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r1 = specialinvoke r0.<com.newsblur.util.FileCache: java.lang.String getFileName(java.lang.String)>($r1);

     label2:
        if $r1 != null goto label3;

        return null;

     label3:
        r3 = new java.io.File;

     label4:
        $r4 = r0.<com.newsblur.util.FileCache: java.io.File cacheDir>;

        specialinvoke r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label5:
        if $z0 == 0 goto label9;

     label6:
        $r1 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

     label7:
        return $r1;

     label8:
        r2 := @caughtexception;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "cache error", r2);

     label9:
        return null;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
