com.newsblur.util.Log extends java.lang.Object
private static java.text.DateFormat dateFormat
private static java.util.concurrent.ExecutorService executor
private static java.io.File logloc
private static java.util.Queue q
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentLinkedQueue $r0;
        java.util.concurrent.ExecutorService $r1;
        java.text.SimpleDateFormat $r2;
        java.text.DateFormat $r3;
        java.util.TimeZone $r4;

        <com.newsblur.util.Log: java.io.File logloc> = null;

        $r0 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r0.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        <com.newsblur.util.Log: java.util.Queue q> = $r0;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1);

        <com.newsblur.util.Log: java.util.concurrent.ExecutorService executor> = $r1;

        <com.newsblur.util.Log: java.text.DateFormat dateFormat> = null;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        <com.newsblur.util.Log: java.text.DateFormat dateFormat> = $r2;

        $r3 = <com.newsblur.util.Log: java.text.DateFormat dateFormat>;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        return;
    }
    private void <init>()
    {
        com.newsblur.util.Log r0;

        r0 := @this: com.newsblur.util.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static void access$000()
    {
        staticinvoke <com.newsblur.util.Log: void proc()>();

        return;
    }
    private static void add(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1, $r5, $r10;
        java.lang.Throwable $r2, $r13;
        com.newsblur.util.Log$1 r3;
        java.lang.StringBuilder r4, $r11;
        java.util.Queue $r6;
        int $i0;
        java.text.DateFormat $r7, $r8;
        java.util.Date $r9;
        java.util.concurrent.ExecutorService $r12;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r5 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.Throwable;

        $r6 = <com.newsblur.util.Log: java.util.Queue q>;

        $i0 = interfaceinvoke $r6.<java.util.Queue: int size()>();

        if $i0 >= 10 goto label5;

        if $r5 == null goto label1;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 2048 goto label1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, 2048);

     label1:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = <com.newsblur.util.Log: java.text.DateFormat dateFormat>;

        entermonitor $r7;

     label2:
        $r8 = <com.newsblur.util.Log: java.text.DateFormat dateFormat>;

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        $r10 = virtualinvoke $r8.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r9);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        exitmonitor $r7;

     label3:
        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        if $r2 == null goto label4;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r0 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r0 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label4:
        $r6 = <com.newsblur.util.Log: java.util.Queue q>;

        $r0 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.Queue: boolean offer(java.lang.Object)>($r0);

     label5:
        r3 = new com.newsblur.util.Log$1;

        specialinvoke r3.<com.newsblur.util.Log$1: void <init>()>();

        $r12 = <com.newsblur.util.Log: java.util.concurrent.ExecutorService executor>;

        interfaceinvoke $r12.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r3);

        return;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor $r7;

     label8:
        throw $r13;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
    public static void d(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.newsblur.util.Log: void d(java.lang.String,java.lang.String)>($r3, $r1);

        return;
    }
    public static void d(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.newsblur.util.Log: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("DEBUG ", $r0, $r1, null);

        return;
    }
    public static void e(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.newsblur.util.Log: void e(java.lang.String,java.lang.String)>($r3, $r1);

        return;
    }
    public static void e(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1);

        staticinvoke <com.newsblur.util.Log: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("ERROR ", $r0, $r1, null);

        return;
    }
    public static void e(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2);

        staticinvoke <com.newsblur.util.Log: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("ERROR ", $r0, $r1, $r2);

        return;
    }
    public static java.io.File getLogfile()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = <com.newsblur.util.Log: java.io.File logloc>;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "logbuffer.txt");

        return $r0;
    }
    public static void i(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.newsblur.util.Log: void i(java.lang.String,java.lang.String)>($r3, $r1);

        return;
    }
    public static void i(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1);

        staticinvoke <com.newsblur.util.Log: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("INFO  ", $r0, $r1, null);

        return;
    }
    public static void offerContext(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getExternalCacheDir()>();

        <com.newsblur.util.Log: java.io.File logloc> = $r1;

        return;
    }
    private static void proc()
    {
        java.io.File $r0;
        java.util.Queue $r1;
        java.lang.Object $r2;
        java.lang.String r3;

        $r0 = <com.newsblur.util.Log: java.io.File logloc>;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = <com.newsblur.util.Log: java.util.Queue q>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        r3 = (java.lang.String) $r2;

     label2:
        if r3 == null goto label3;

        staticinvoke <com.newsblur.util.Log: void writeLine(java.lang.String)>(r3);

        $r1 = <com.newsblur.util.Log: java.util.Queue q>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();

        r3 = (java.lang.String) $r2;

        goto label2;

     label3:
        return;
    }
    public static void w(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.newsblur.util.Log: void w(java.lang.String,java.lang.String)>($r3, $r1);

        return;
    }
    public static void w(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1);

        staticinvoke <com.newsblur.util.Log: void add(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>("WARN  ", $r0, $r1, null);

        return;
    }
    private static void writeLine(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1, $r4;
        java.util.ArrayList r2;
        int i0, $i3;
        java.io.BufferedReader r3;
        java.io.BufferedWriter r5;
        java.io.FileWriter $r6;
        long $l1;
        byte $b2;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.Class $r11;
        java.io.FileReader $r12;
        java.lang.Object $r13;
        java.lang.CharSequence $r14;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.File;

        $r4 = <com.newsblur.util.Log: java.io.File logloc>;

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "logbuffer.txt");

     label01:
        r5 = new java.io.BufferedWriter;

        $r6 = new java.io.FileWriter;

        specialinvoke $r6.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r1, 1);

        specialinvoke r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r6);

     label02:
        virtualinvoke r5.<java.io.BufferedWriter: java.io.Writer append(java.lang.CharSequence)>($r0);

        virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();

     label03:
        if r5 == null goto label04;

        goto label06;

     label04:
        $l1 = virtualinvoke r1.<java.io.File: long length()>();

        $b2 = $l1 cmp 4096000L;

        if $b2 >= 0 goto label18;

        return;

     label05:
        $r7 := @caughtexception;

        goto label04;

     label06:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label07:
        goto label04;

     label08:
        $r8 := @caughtexception;

     label09:
        throw $r8;

     label10:
        $r9 := @caughtexception;

        if r5 == null goto label12;

        if $r8 == null goto label16;

     label11:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label12:
        throw $r9;

     label13:
        $r10 := @caughtexception;

     label14:
        virtualinvoke $r8.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r10);

     label15:
        goto label12;

     label16:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label17:
        goto label12;

     label18:
        $r11 = class "Lcom/newsblur/util/Log;";

        $r0 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, "trimming");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(2000);

     label19:
        r3 = new java.io.BufferedReader;

        $r12 = new java.io.FileReader;

        specialinvoke $r12.<java.io.FileReader: void <init>(java.io.File)>(r1);

        specialinvoke r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

     label20:
        $r0 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label21:
        if $r0 == null goto label24;

     label22:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r0 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label23:
        goto label21;

     label24:
        if r3 == null goto label25;

        goto label33;

     label25:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label26:
        r5 = new java.io.BufferedWriter;

        $r6 = new java.io.FileWriter;

        specialinvoke $r6.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r1, 0);

        specialinvoke r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r6);

     label27:
        i0 = i0 + -1000;

     label28:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

     label29:
        if i0 >= $i3 goto label45;

     label30:
        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r14 = (java.lang.CharSequence) $r13;

        virtualinvoke r5.<java.io.BufferedWriter: java.io.Writer append(java.lang.CharSequence)>($r14);

        virtualinvoke r5.<java.io.BufferedWriter: void newLine()>();

     label31:
        i0 = i0 + 1;

        goto label28;

     label32:
        $r15 := @caughtexception;

        goto label25;

     label33:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label34:
        goto label25;

     label35:
        $r16 := @caughtexception;

     label36:
        throw $r16;

     label37:
        $r17 := @caughtexception;

        if r3 == null goto label39;

        if $r16 == null goto label43;

     label38:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label39:
        throw $r17;

     label40:
        $r18 := @caughtexception;

     label41:
        virtualinvoke $r16.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r18);

     label42:
        goto label39;

     label43:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label44:
        goto label39;

     label45:
        if r5 == null goto label59;

        goto label47;

     label46:
        $r19 := @caughtexception;

        return;

     label47:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label48:
        return;

     label49:
        $r20 := @caughtexception;

     label50:
        throw $r20;

     label51:
        $r21 := @caughtexception;

        if r5 == null goto label53;

        if $r20 == null goto label57;

     label52:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label53:
        throw $r21;

     label54:
        $r22 := @caughtexception;

     label55:
        virtualinvoke $r20.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r22);

     label56:
        goto label53;

     label57:
        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

     label58:
        goto label53;

     label59:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label14 to label15 with label05;
        catch java.lang.Throwable from label16 to label17 with label05;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Throwable from label26 to label27 with label46;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch java.lang.Throwable from label30 to label31 with label49;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label36 to label37 with label37;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label39 to label40 with label32;
        catch java.lang.Throwable from label41 to label42 with label32;
        catch java.lang.Throwable from label43 to label44 with label32;
        catch java.lang.Throwable from label47 to label48 with label46;
        catch java.lang.Throwable from label50 to label51 with label51;
        catch java.lang.Throwable from label52 to label53 with label54;
        catch java.lang.Throwable from label53 to label54 with label46;
        catch java.lang.Throwable from label55 to label56 with label46;
        catch java.lang.Throwable from label57 to label58 with label46;
    }
