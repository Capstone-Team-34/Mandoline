butterknife.ButterKnife extends java.lang.Object
static final java.util.Map BINDERS
static final butterknife.ButterKnife$ViewBinder NOP_VIEW_BINDER
private static final java.lang.String TAG
private static boolean debug
    static void <clinit>()
    {
        java.util.LinkedHashMap $r0;
        butterknife.ButterKnife$1 $r1;

        <butterknife.ButterKnife: boolean debug> = 0;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        <butterknife.ButterKnife: java.util.Map BINDERS> = $r0;

        $r1 = new butterknife.ButterKnife$1;

        specialinvoke $r1.<butterknife.ButterKnife$1: void <init>()>();

        <butterknife.ButterKnife: butterknife.ButterKnife$ViewBinder NOP_VIEW_BINDER> = $r1;

        return;
    }
    private void <init>()
    {
        butterknife.ButterKnife r0;
        java.lang.AssertionError $r1;

        r0 := @this: butterknife.ButterKnife;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("No instances.");

        throw $r1;
    }
    public static void apply(java.util.List, android.util.Property, java.lang.Object)
    {
        java.util.List r0;
        android.util.Property r1;
        java.lang.Object r2, $r3;
        int i0, $i1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: android.util.Property;

        r2 := @parameter2: java.lang.Object;

        i0 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label2;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        virtualinvoke r1.<android.util.Property: void set(java.lang.Object,java.lang.Object)>($r3, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static void apply(java.util.List, butterknife.ButterKnife$Action)
    {
        java.util.List r0;
        butterknife.ButterKnife$Action r1;
        int i0, $i1;
        java.lang.Object $r2;
        android.view.View $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: butterknife.ButterKnife$Action;

        i0 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (android.view.View) $r2;

        interfaceinvoke r1.<butterknife.ButterKnife$Action: void apply(android.view.View,int)>($r3, i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static void apply(java.util.List, butterknife.ButterKnife$Setter, java.lang.Object)
    {
        java.util.List r0;
        butterknife.ButterKnife$Setter r1;
        java.lang.Object r2, $r3;
        int i0, $i1;
        android.view.View $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: butterknife.ButterKnife$Setter;

        r2 := @parameter2: java.lang.Object;

        i0 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label2;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (android.view.View) $r3;

        interfaceinvoke r1.<butterknife.ButterKnife$Setter: void set(android.view.View,java.lang.Object,int)>($r4, r2, i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static void bind(android.app.Activity)
    {
        android.app.Activity $r0;
        butterknife.ButterKnife$Finder $r1;

        $r0 := @parameter0: android.app.Activity;

        $r1 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder ACTIVITY>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r0, $r1);

        return;
    }
    public static void bind(android.app.Dialog)
    {
        android.app.Dialog $r0;
        butterknife.ButterKnife$Finder $r1;

        $r0 := @parameter0: android.app.Dialog;

        $r1 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder DIALOG>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r0, $r1);

        return;
    }
    public static void bind(android.view.View)
    {
        android.view.View $r0;
        butterknife.ButterKnife$Finder $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder VIEW>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r0, $r1);

        return;
    }
    public static void bind(java.lang.Object, android.app.Activity)
    {
        java.lang.Object $r0;
        android.app.Activity $r1;
        butterknife.ButterKnife$Finder $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: android.app.Activity;

        $r2 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder ACTIVITY>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r1, $r2);

        return;
    }
    public static void bind(java.lang.Object, android.app.Dialog)
    {
        java.lang.Object $r0;
        android.app.Dialog $r1;
        butterknife.ButterKnife$Finder $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: android.app.Dialog;

        $r2 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder DIALOG>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r1, $r2);

        return;
    }
    public static void bind(java.lang.Object, android.view.View)
    {
        java.lang.Object $r0;
        android.view.View $r1;
        butterknife.ButterKnife$Finder $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: android.view.View;

        $r2 = <butterknife.ButterKnife$Finder: butterknife.ButterKnife$Finder VIEW>;

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>($r0, $r1, $r2);

        return;
    }
    static void bind(java.lang.Object, java.lang.Object, butterknife.ButterKnife$Finder)
    {
        java.lang.Object $r0, $r1;
        butterknife.ButterKnife$Finder $r2;
        java.lang.Exception r3;
        java.lang.Class $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        butterknife.ButterKnife$ViewBinder $r7;
        java.lang.RuntimeException $r8;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: butterknife.ButterKnife$Finder;

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up view binder for ");

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", $r6);

     label2:
        $r7 = staticinvoke <butterknife.ButterKnife: butterknife.ButterKnife$ViewBinder findViewBinderForClass(java.lang.Class)>($r4);

     label3:
        if $r7 == null goto label7;

     label4:
        interfaceinvoke $r7.<butterknife.ButterKnife$ViewBinder: void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object)>($r2, $r0, $r1);

     label5:
        return;

     label6:
        r3 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind views for ");

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r8;

     label7:
        return;

        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public static android.view.View findById(android.app.Activity, int)
    {
        android.app.Activity $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.View findViewById(int)>($i0);

        return $r1;
    }
    public static android.view.View findById(android.app.Dialog, int)
    {
        android.app.Dialog $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @parameter0: android.app.Dialog;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.app.Dialog: android.view.View findViewById(int)>($i0);

        return $r1;
    }
    public static android.view.View findById(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r0 = virtualinvoke $r0.<android.view.View: android.view.View findViewById(int)>($i0);

        return $r0;
    }
    private static butterknife.ButterKnife$ViewBinder findViewBinderForClass(java.lang.Class) throws java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.Class r0, $r7;
        java.lang.ClassNotFoundException r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        butterknife.ButterKnife$ViewBinder r4;
        boolean $z0;
        java.lang.String $r5;
        java.lang.StringBuilder $r6;

        r0 := @parameter0: java.lang.Class;

        $r2 = <butterknife.ButterKnife: java.util.Map BINDERS>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (butterknife.ButterKnife$ViewBinder) $r3;

        if r4 == null goto label02;

        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", "HIT: Cached in view binder map.");

     label01:
        return r4;

     label02:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("android.");

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z0 == 0 goto label05;

     label03:
        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label04;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", "MISS: Reached framework class. Abandoning search.");

     label04:
        r4 = <butterknife.ButterKnife: butterknife.ButterKnife$ViewBinder NOP_VIEW_BINDER>;

        return r4;

     label05:
        $r6 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$$ViewBinder");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

        $r3 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

     label07:
        r4 = (butterknife.ButterKnife$ViewBinder) $r3;

        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label09;

     label08:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", "HIT: Loaded view binder class.");

     label09:
        $r2 = <butterknife.ButterKnife: java.util.Map BINDERS>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r4);

        return r4;

     label10:
        r1 := @caughtexception;

        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label11;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found. Trying superclass ");

        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r5 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", $r5);

     label11:
        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        r4 = staticinvoke <butterknife.ButterKnife: butterknife.ButterKnife$ViewBinder findViewBinderForClass(java.lang.Class)>($r7);

        goto label09;

        catch java.lang.ClassNotFoundException from label06 to label07 with label10;
        catch java.lang.ClassNotFoundException from label08 to label09 with label10;
    }
    public static void setDebug(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <butterknife.ButterKnife: boolean debug> = $z0;

        return;
    }
    public static void unbind(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Exception r1;
        java.lang.Class $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        butterknife.ButterKnife$ViewBinder $r5;
        java.lang.RuntimeException $r6;

        $r0 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = <butterknife.ButterKnife: boolean debug>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up view binder for ");

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ButterKnife", $r4);

     label2:
        $r5 = staticinvoke <butterknife.ButterKnife: butterknife.ButterKnife$ViewBinder findViewBinderForClass(java.lang.Class)>($r2);

     label3:
        if $r5 == null goto label7;

     label4:
        interfaceinvoke $r5.<butterknife.ButterKnife$ViewBinder: void unbind(java.lang.Object)>($r0);

     label5:
        return;

     label6:
        r1 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unbind views for ");

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r4, r1);

        throw $r6;

     label7:
        return;

        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
