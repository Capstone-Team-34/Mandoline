okio.AsyncTimeout$1 extends java.lang.Object implements okio.Sink
final okio.AsyncTimeout this$0
final okio.Sink val$sink
    void <init>(okio.AsyncTimeout, okio.Sink)
    {
        okio.AsyncTimeout$1 r0;
        okio.AsyncTimeout $r1;
        okio.Sink $r2;

        r0 := @this: okio.AsyncTimeout$1;

        $r1 := @parameter0: okio.AsyncTimeout;

        $r2 := @parameter1: okio.Sink;

        r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0> = $r1;

        r0.<okio.AsyncTimeout$1: okio.Sink val$sink> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void close() throws java.io.IOException
    {
        okio.AsyncTimeout$1 r0;
        java.io.IOException r1;
        okio.AsyncTimeout $r2;
        okio.Sink $r3;
        java.lang.Throwable $r4;

        r0 := @this: okio.AsyncTimeout$1;

        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void enter()>();

     label1:
        $r3 = r0.<okio.AsyncTimeout$1: okio.Sink val$sink>;

     label2:
        interfaceinvoke $r3.<okio.Sink: void close()>();

     label3:
        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void exit(boolean)>(1);

        return;

     label4:
        r1 := @caughtexception;

     label5:
        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        r1 = virtualinvoke $r2.<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>(r1);

        throw r1;

     label6:
        $r4 := @caughtexception;

        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void exit(boolean)>(0);

        throw $r4;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
    public void flush() throws java.io.IOException
    {
        okio.AsyncTimeout$1 r0;
        java.io.IOException r1;
        okio.AsyncTimeout $r2;
        okio.Sink $r3;
        java.lang.Throwable $r4;

        r0 := @this: okio.AsyncTimeout$1;

        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void enter()>();

     label1:
        $r3 = r0.<okio.AsyncTimeout$1: okio.Sink val$sink>;

     label2:
        interfaceinvoke $r3.<okio.Sink: void flush()>();

     label3:
        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void exit(boolean)>(1);

        return;

     label4:
        r1 := @caughtexception;

     label5:
        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        r1 = virtualinvoke $r2.<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>(r1);

        throw r1;

     label6:
        $r4 := @caughtexception;

        $r2 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r2.<okio.AsyncTimeout: void exit(boolean)>(0);

        throw $r4;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
    public okio.Timeout timeout()
    {
        okio.AsyncTimeout$1 r0;
        okio.AsyncTimeout r1;

        r0 := @this: okio.AsyncTimeout$1;

        r1 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        return r1;
    }
    public java.lang.String toString()
    {
        okio.AsyncTimeout$1 r0;
        java.lang.StringBuilder $r1;
        okio.Sink $r2;
        java.lang.String $r3;

        r0 := @this: okio.AsyncTimeout$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AsyncTimeout.sink(");

        $r2 = r0.<okio.AsyncTimeout$1: okio.Sink val$sink>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public void write(okio.Buffer, long) throws java.io.IOException
    {
        okio.AsyncTimeout$1 r0;
        okio.Buffer $r1;
        java.io.IOException r2;
        int i0, $i4;
        long $l1, $l2, $l5;
        byte $b3;
        okio.Segment r3, $r4;
        okio.AsyncTimeout $r5;
        okio.Sink $r6;
        java.lang.Throwable $r7;

        r0 := @this: okio.AsyncTimeout$1;

        $r1 := @parameter0: okio.Buffer;

        $l1 := @parameter1: long;

        $l2 = $r1.<okio.Buffer: long size>;

        staticinvoke <okio.Util: void checkOffsetAndCount(long,long,long)>($l2, 0L, $l1);

     label01:
        $b3 = $l1 cmp 0L;

        if $b3 <= 0 goto label11;

        $l2 = 0L;

        r3 = $r1.<okio.Buffer: okio.Segment head>;

     label02:
        $b3 = $l2 cmp 65536L;

        if $b3 >= 0 goto label03;

        $r4 = $r1.<okio.Buffer: okio.Segment head>;

        i0 = $r4.<okio.Segment: int limit>;

        $r4 = $r1.<okio.Buffer: okio.Segment head>;

        $i4 = $r4.<okio.Segment: int pos>;

        i0 = i0 - $i4;

        $l5 = (long) i0;

        $l2 = $l2 + $l5;

        $b3 = $l2 cmp $l1;

        if $b3 < 0 goto label07;

        $l2 = $l1;

     label03:
        $r5 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r5.<okio.AsyncTimeout: void enter()>();

     label04:
        $r6 = r0.<okio.AsyncTimeout$1: okio.Sink val$sink>;

     label05:
        interfaceinvoke $r6.<okio.Sink: void write(okio.Buffer,long)>($r1, $l2);

     label06:
        $l1 = $l1 - $l2;

        $r5 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r5.<okio.AsyncTimeout: void exit(boolean)>(1);

        goto label01;

     label07:
        r3 = r3.<okio.Segment: okio.Segment next>;

        goto label02;

     label08:
        r2 := @caughtexception;

     label09:
        $r5 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        r2 = virtualinvoke $r5.<okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>(r2);

        throw r2;

     label10:
        $r7 := @caughtexception;

        $r5 = r0.<okio.AsyncTimeout$1: okio.AsyncTimeout this$0>;

        virtualinvoke $r5.<okio.AsyncTimeout: void exit(boolean)>(0);

        throw $r7;

     label11:
        return;

        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }
