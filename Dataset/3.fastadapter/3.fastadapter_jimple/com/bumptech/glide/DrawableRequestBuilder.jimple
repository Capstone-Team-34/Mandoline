com.bumptech.glide.DrawableRequestBuilder extends com.bumptech.glide.GenericRequestBuilder implements com.bumptech.glide.BitmapOptions com.bumptech.glide.DrawableOptions
    void <init>(android.content.Context, java.lang.Class, com.bumptech.glide.provider.LoadProvider, com.bumptech.glide.Glide, com.bumptech.glide.manager.RequestTracker, com.bumptech.glide.manager.Lifecycle)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.content.Context $r1;
        java.lang.Class r2;
        com.bumptech.glide.provider.LoadProvider r3;
        com.bumptech.glide.Glide $r4;
        com.bumptech.glide.manager.RequestTracker $r5;
        com.bumptech.glide.manager.Lifecycle $r6;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.provider.LoadProvider;

        $r4 := @parameter3: com.bumptech.glide.Glide;

        $r5 := @parameter4: com.bumptech.glide.manager.RequestTracker;

        $r6 := @parameter5: com.bumptech.glide.manager.Lifecycle;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle)>($r1, r2, r3, class "Lcom/bumptech/glide/load/resource/drawable/GlideDrawable;", $r4, $r5, $r6);

        virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder crossFade()>();

        return;
    }
    public com.bumptech.glide.DrawableRequestBuilder animate(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(int)>($i0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.view.animation.Animation $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.view.animation.Animation;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder animate(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder animate(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder animate(int)>($i0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.view.animation.Animation $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.view.animation.Animation;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder animate(android.view.animation.Animation)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder animate(com.bumptech.glide.request.animation.ViewPropertyAnimation$Animator)>($r1);

        return r0;
    }
    void applyCenterCrop()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder centerCrop()>();

        return;
    }
    void applyFitCenter()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder fitCenter()>();

        return;
    }
    public transient com.bumptech.glide.DrawableRequestBuilder bitmapTransform(com.bumptech.glide.load.Transformation[])
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] r1;
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation[] r2;
        com.bumptech.glide.load.Transformation $r3;
        int $i0, $i1;
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation $r4;
        com.bumptech.glide.Glide $r5;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r6;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation[];

        $i0 = lengthof r1;

        r2 = newarray (com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 >= $i1 goto label2;

        $r4 = new com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation;

        $r5 = r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.Glide glide>;

        $r6 = virtualinvoke $r5.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        $r3 = r1[$i0];

        specialinvoke $r4.<com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation)>($r6, $r3);

        r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[])>(r2);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder centerCrop()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] $r1;
        com.bumptech.glide.Glide $r2;
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation $r3;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 = newarray (com.bumptech.glide.load.Transformation)[1];

        $r2 = r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.Glide glide>;

        $r3 = virtualinvoke $r2.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableCenterCrop()>();

        $r1[0] = $r3;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[])>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder centerCrop()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder centerCrop()>();

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder clone()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.GenericRequestBuilder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder clone()>();

        r0 = (com.bumptech.glide.DrawableRequestBuilder) $r1;

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder clone()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder clone()>();

        return r0;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder clone()>();

        return r0;
    }
    public final com.bumptech.glide.DrawableRequestBuilder crossFade()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.request.animation.DrawableCrossFadeFactory $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 = new com.bumptech.glide.request.animation.DrawableCrossFadeFactory;

        specialinvoke $r1.<com.bumptech.glide.request.animation.DrawableCrossFadeFactory: void <init>()>();

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder crossFade(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;
        com.bumptech.glide.request.animation.DrawableCrossFadeFactory $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        $r1 = new com.bumptech.glide.request.animation.DrawableCrossFadeFactory;

        specialinvoke $r1.<com.bumptech.glide.request.animation.DrawableCrossFadeFactory: void <init>(int)>($i0);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder crossFade(int, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0, $i1;
        com.bumptech.glide.request.animation.DrawableCrossFadeFactory $r1;
        android.content.Context $r2;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new com.bumptech.glide.request.animation.DrawableCrossFadeFactory;

        $r2 = r0.<com.bumptech.glide.DrawableRequestBuilder: android.content.Context context>;

        specialinvoke $r1.<com.bumptech.glide.request.animation.DrawableCrossFadeFactory: void <init>(android.content.Context,int,int)>($r2, $i0, $i1);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder crossFade(android.view.animation.Animation, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.view.animation.Animation $r1;
        int $i0;
        com.bumptech.glide.request.animation.DrawableCrossFadeFactory $r2;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.view.animation.Animation;

        $i0 := @parameter1: int;

        $r2 = new com.bumptech.glide.request.animation.DrawableCrossFadeFactory;

        specialinvoke $r2.<com.bumptech.glide.request.animation.DrawableCrossFadeFactory: void <init>(android.view.animation.Animation,int)>($r1, $i0);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory)>($r2);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder crossFade()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder crossFade()>();

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder crossFade(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder crossFade(int)>($i0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder crossFade(int, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder crossFade(int,int)>($i0, $i1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder crossFade(android.view.animation.Animation, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.view.animation.Animation $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.view.animation.Animation;

        $i0 := @parameter1: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder crossFade(android.view.animation.Animation,int)>($r1, $i0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.engine.DiskCacheStrategy;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.engine.DiskCacheStrategy $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.engine.DiskCacheStrategy;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder dontAnimate()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder dontAnimate()>();

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder dontAnimate()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder dontAnimate()>();

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder dontTransform()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder dontTransform()>();

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder dontTransform()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder dontTransform()>();

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceEncoder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.ResourceEncoder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder error(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder error(int)>($i0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder error(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder error(int)>($i0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder error(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder fallback(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder fallback(int)>($i0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder fallback(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder fallback(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder fallback(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder fallback(int)>($i0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder fallback(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder fallback(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder fitCenter()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] $r1;
        com.bumptech.glide.Glide $r2;
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation $r3;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 = newarray (com.bumptech.glide.load.Transformation)[1];

        $r2 = r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.Glide glide>;

        $r3 = virtualinvoke $r2.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableFitCenter()>();

        $r1[0] = $r3;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[])>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder fitCenter()
    {
        com.bumptech.glide.DrawableRequestBuilder r0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder fitCenter()>();

        return r0;
    }
    public com.bumptech.glide.request.target.Target into(android.widget.ImageView)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.widget.ImageView $r1;
        com.bumptech.glide.request.target.Target $r2;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.widget.ImageView;

        $r2 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>($r1);

        return $r2;
    }
    public com.bumptech.glide.DrawableRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.request.RequestListener r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.request.RequestListener $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder listener(com.bumptech.glide.request.RequestListener)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder load(java.lang.Object)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        java.lang.Object r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder load(java.lang.Object)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder load(java.lang.Object)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        java.lang.Object $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: java.lang.Object;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder load(java.lang.Object)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder override(int, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder override(int,int)>($i0, $i1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder override(int, int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder override(int,int)>($i0, $i1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder placeholder(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder placeholder(int)>($i0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder placeholder(int)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder placeholder(int)>($i0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder placeholder(android.graphics.drawable.Drawable)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.Priority $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.Priority;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.Priority $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.Priority;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder priority(com.bumptech.glide.Priority)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder signature(com.bumptech.glide.load.Key)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Key $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.Key;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key)>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Key $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.Key;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder signature(com.bumptech.glide.load.Key)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        float $f0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $f0 := @parameter0: float;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)>($f0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        float $f0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $f0 := @parameter0: float;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder sizeMultiplier(float)>($f0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)>($z0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $z0 := @parameter0: boolean;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder skipMemoryCache(boolean)>($z0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Encoder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Encoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Encoder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.Encoder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        float $f0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $f0 := @parameter0: float;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(float)>($f0);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder thumbnail(com.bumptech.glide.DrawableRequestBuilder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0, r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.DrawableRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>(r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.GenericRequestBuilder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        float $f0;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $f0 := @parameter0: float;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder thumbnail(float)>($f0);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.GenericRequestBuilder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>($r1);

        return r0;
    }
    public com.bumptech.glide.DrawableRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r1);

        return r0;
    }
    public transient com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[])
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation[];

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[])>(r1);

        return r0;
    }
    public transient com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.resource.bitmap.BitmapTransformation[])
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.resource.bitmap.BitmapTransformation[] $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.BitmapTransformation[];

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder bitmapTransform(com.bumptech.glide.load.Transformation[])>($r1);

        return r0;
    }
    public volatile com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[])
    {
        com.bumptech.glide.DrawableRequestBuilder r0;
        com.bumptech.glide.load.Transformation[] $r1;

        r0 := @this: com.bumptech.glide.DrawableRequestBuilder;

        $r1 := @parameter0: com.bumptech.glide.load.Transformation[];

        r0 = virtualinvoke r0.<com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[])>($r1);

        return r0;
    }
