com.bumptech.glide.request.target.PreloadTarget extends com.bumptech.glide.request.target.SimpleTarget
    private void <init>(int, int)
    {
        com.bumptech.glide.request.target.PreloadTarget r0;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.request.target.PreloadTarget;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<com.bumptech.glide.request.target.SimpleTarget: void <init>(int,int)>($i0, $i1);

        return;
    }
    public static com.bumptech.glide.request.target.PreloadTarget obtain(int, int)
    {
        int $i0, $i1;
        com.bumptech.glide.request.target.PreloadTarget $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new com.bumptech.glide.request.target.PreloadTarget;

        specialinvoke $r0.<com.bumptech.glide.request.target.PreloadTarget: void <init>(int,int)>($i0, $i1);

        return $r0;
    }
    public void onResourceReady(java.lang.Object, com.bumptech.glide.request.animation.GlideAnimation)
    {
        com.bumptech.glide.request.target.PreloadTarget r0;
        java.lang.Object r1;
        com.bumptech.glide.request.animation.GlideAnimation r2;

        r0 := @this: com.bumptech.glide.request.target.PreloadTarget;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.bumptech.glide.request.animation.GlideAnimation;

        staticinvoke <com.bumptech.glide.Glide: void clear(com.bumptech.glide.request.target.Target)>(r0);

        return;
    }
