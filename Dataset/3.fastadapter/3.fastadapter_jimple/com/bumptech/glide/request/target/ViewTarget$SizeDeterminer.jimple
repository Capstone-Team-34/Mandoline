com.bumptech.glide.request.target.ViewTarget$SizeDeterminer extends java.lang.Object
private static final int PENDING_SIZE
private final java.util.List cbs
private android.graphics.Point displayDimens
private com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener
private final android.view.View view
    public void <init>(android.view.View)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.View $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs> = $r2;

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view> = $r1;

        return;
    }
    static void access$000(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer $r0;

        $r0 := @parameter0: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        specialinvoke $r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void checkCurrentDimens()>();

        return;
    }
    private void checkCurrentDimens()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        java.util.List $r1;
        boolean $z0;
        int $i0, $i1;
        android.view.View $r2;
        android.view.ViewTreeObserver $r3;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener $r4;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getViewWidthOrParam()>();

        $i1 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getViewHeightOrParam()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i0);

        if $z0 == 0 goto label3;

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i1);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)>($i0, $i1);

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $z0 = virtualinvoke $r3.<android.view.ViewTreeObserver: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener>;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r4);

     label2:
        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener> = null;

     label3:
        return;
    }
    private android.graphics.Point getDisplayDimens()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.graphics.Point $r1;
        android.view.View $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.WindowManager r5;
        android.view.Display $r6;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens>;

        return $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r3 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r5 = (android.view.WindowManager) $r4;

        $r6 = interfaceinvoke r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 13 goto label3;

        $r1 = new android.graphics.Point;

        specialinvoke $r1.<android.graphics.Point: void <init>()>();

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens> = $r1;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens>;

        virtualinvoke $r6.<android.view.Display: void getSize(android.graphics.Point)>($r1);

     label2:
        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens>;

        return $r1;

     label3:
        $r1 = new android.graphics.Point;

        $i0 = virtualinvoke $r6.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke $r6.<android.view.Display: int getHeight()>();

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point displayDimens> = $r1;

        goto label2;
    }
    private int getSizeForParam(int, boolean)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        int $i0;
        boolean $z0;
        android.graphics.Point $r1;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $i0 != -2 goto label2;

        $r1 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.graphics.Point getDisplayDimens()>();

        if $z0 == 0 goto label1;

        $i0 = $r1.<android.graphics.Point: int y>;

        return $i0;

     label1:
        $i0 = $r1.<android.graphics.Point: int x>;

     label2:
        return $i0;
    }
    private int getViewHeightOrParam()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        return $i0;

     label1:
        if $r2 == null goto label2;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getSizeForParam(int,boolean)>($i0, 1);

        return $i0;

     label2:
        return 0;
    }
    private int getViewWidthOrParam()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        return $i0;

     label1:
        if $r2 == null goto label2;

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getSizeForParam(int,boolean)>($i0, 0);

        return $i0;

     label2:
        return 0;
    }
    private boolean isSizeValid(int)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        if $i0 != -2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void notifyCbs(int, int)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        int $i0, $i1;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.bumptech.glide.request.target.SizeReadyCallback r4;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.bumptech.glide.request.target.SizeReadyCallback) $r3;

        interfaceinvoke r4.<com.bumptech.glide.request.target.SizeReadyCallback: void onSizeReady(int,int)>($i0, $i1);

        goto label1;

     label2:
        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    public void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        com.bumptech.glide.request.target.SizeReadyCallback $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener $r3;
        android.view.View $r4;
        android.view.ViewTreeObserver $r5;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 := @parameter0: com.bumptech.glide.request.target.SizeReadyCallback;

        $i0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getViewWidthOrParam()>();

        $i1 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getViewHeightOrParam()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i0);

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isSizeValid(int)>($i1);

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<com.bumptech.glide.request.target.SizeReadyCallback: void onSizeReady(int,int)>($i0, $i1);

        return;

     label1:
        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener>;

        if $r3 != null goto label3;

        $r4 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = new com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener;

        specialinvoke $r3.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener: void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer)>(r0);

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener> = $r3;

        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

     label3:
        return;
    }
