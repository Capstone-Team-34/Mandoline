com.bumptech.glide.request.target.GlideDrawableImageViewTarget extends com.bumptech.glide.request.target.ImageViewTarget
private static final float SQUARE_RATIO_MARGIN
private int maxLoopCount
private com.bumptech.glide.load.resource.drawable.GlideDrawable resource
    public void <init>(android.widget.ImageView)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        android.widget.ImageView $r1;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 := @parameter0: android.widget.ImageView;

        specialinvoke r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: void <init>(android.widget.ImageView,int)>($r1, -1);

        return;
    }
    public void <init>(android.widget.ImageView, int)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        android.widget.ImageView $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 := @parameter0: android.widget.ImageView;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.bumptech.glide.request.target.ImageViewTarget: void <init>(android.widget.ImageView)>($r1);

        r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: int maxLoopCount> = $i0;

        return;
    }
    public void onResourceReady(com.bumptech.glide.load.resource.drawable.GlideDrawable, com.bumptech.glide.request.animation.GlideAnimation)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        com.bumptech.glide.request.animation.GlideAnimation r1;
        float f0, f1, $f2;
        com.bumptech.glide.request.target.SquaringDrawable r2;
        com.bumptech.glide.load.resource.drawable.GlideDrawable r3;
        boolean $z0;
        android.view.View $r4;
        android.widget.ImageView $r5;
        int $i0;
        byte $b1;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        r3 := @parameter0: com.bumptech.glide.load.resource.drawable.GlideDrawable;

        r1 := @parameter1: com.bumptech.glide.request.animation.GlideAnimation;

        $z0 = virtualinvoke r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: boolean isAnimated()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: android.view.View view>;

        $r5 = (android.widget.ImageView) $r4;

        $i0 = virtualinvoke $r5.<android.widget.ImageView: int getWidth()>();

        f0 = (float) $i0;

        $r4 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: android.view.View view>;

        $r5 = (android.widget.ImageView) $r4;

        $i0 = virtualinvoke $r5.<android.widget.ImageView: int getHeight()>();

        f1 = (float) $i0;

        f1 = f0 / f1;

        $i0 = virtualinvoke r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getIntrinsicWidth()>();

        f0 = (float) $i0;

        $i0 = virtualinvoke r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: int getIntrinsicHeight()>();

        $f2 = (float) $i0;

        f0 = f0 / $f2;

        f1 = f1 - 1.0F;

        f1 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b1 = f1 cmpg 0.05F;

        if $b1 > 0 goto label1;

        f0 = f0 - 1.0F;

        f0 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b1 = f0 cmpg 0.05F;

        if $b1 > 0 goto label1;

        r2 = new com.bumptech.glide.request.target.SquaringDrawable;

        $r4 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: android.view.View view>;

        $r5 = (android.widget.ImageView) $r4;

        $i0 = virtualinvoke $r5.<android.widget.ImageView: int getWidth()>();

        specialinvoke r2.<com.bumptech.glide.request.target.SquaringDrawable: void <init>(com.bumptech.glide.load.resource.drawable.GlideDrawable,int)>(r3, $i0);

        r3 = r2;

     label1:
        specialinvoke r0.<com.bumptech.glide.request.target.ImageViewTarget: void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation)>(r3, r1);

        r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: com.bumptech.glide.load.resource.drawable.GlideDrawable resource> = r3;

        $i0 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: int maxLoopCount>;

        virtualinvoke r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void setLoopCount(int)>($i0);

        virtualinvoke r3.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void start()>();

        return;
    }
    public volatile void onResourceReady(java.lang.Object, com.bumptech.glide.request.animation.GlideAnimation)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        com.bumptech.glide.request.animation.GlideAnimation $r1;
        java.lang.Object $r2;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r3;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.bumptech.glide.request.animation.GlideAnimation;

        $r3 = (com.bumptech.glide.load.resource.drawable.GlideDrawable) $r2;

        virtualinvoke r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: void onResourceReady(com.bumptech.glide.load.resource.drawable.GlideDrawable,com.bumptech.glide.request.animation.GlideAnimation)>($r3, $r1);

        return;
    }
    public void onStart()
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: com.bumptech.glide.load.resource.drawable.GlideDrawable resource>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: com.bumptech.glide.load.resource.drawable.GlideDrawable resource>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void start()>();

     label1:
        return;
    }
    public void onStop()
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: com.bumptech.glide.load.resource.drawable.GlideDrawable resource>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: com.bumptech.glide.load.resource.drawable.GlideDrawable resource>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.drawable.GlideDrawable: void stop()>();

     label1:
        return;
    }
    protected void setResource(com.bumptech.glide.load.resource.drawable.GlideDrawable)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r1;
        android.view.View $r2;
        android.widget.ImageView $r3;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 := @parameter0: com.bumptech.glide.load.resource.drawable.GlideDrawable;

        $r2 = r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: android.view.View view>;

        $r3 = (android.widget.ImageView) $r2;

        virtualinvoke $r3.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    protected volatile void setResource(java.lang.Object)
    {
        com.bumptech.glide.request.target.GlideDrawableImageViewTarget r0;
        java.lang.Object $r1;
        com.bumptech.glide.load.resource.drawable.GlideDrawable $r2;

        r0 := @this: com.bumptech.glide.request.target.GlideDrawableImageViewTarget;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.bumptech.glide.load.resource.drawable.GlideDrawable) $r1;

        virtualinvoke r0.<com.bumptech.glide.request.target.GlideDrawableImageViewTarget: void setResource(com.bumptech.glide.load.resource.drawable.GlideDrawable)>($r2);

        return;
    }
