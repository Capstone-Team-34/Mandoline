com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory extends java.lang.Object implements com.bumptech.glide.request.animation.ViewAnimation$AnimationFactory
private final int animationId
private final android.content.Context context
    public void <init>(android.content.Context, int)
    {
        com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory: android.content.Context context> = $r1;

        r0.<com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory: int animationId> = $i0;

        return;
    }
    public android.view.animation.Animation build()
    {
        com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory r0;
        int $i0;
        android.view.animation.Animation $r1;
        android.content.Context $r2;

        r0 := @this: com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory;

        $r2 = r0.<com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory: android.content.Context context>;

        $i0 = r0.<com.bumptech.glide.request.animation.ViewAnimationFactory$ResourceAnimationFactory: int animationId>;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r2, $i0);

        return $r1;
    }
