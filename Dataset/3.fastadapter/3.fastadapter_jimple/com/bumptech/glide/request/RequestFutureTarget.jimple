com.bumptech.glide.request.RequestFutureTarget extends java.lang.Object implements com.bumptech.glide.request.FutureTarget java.lang.Runnable
private static final com.bumptech.glide.request.RequestFutureTarget$Waiter DEFAULT_WAITER
private final boolean assertBackgroundThread
private java.lang.Exception exception
private boolean exceptionReceived
private final int height
private boolean isCancelled
private final android.os.Handler mainHandler
private com.bumptech.glide.request.Request request
private java.lang.Object resource
private boolean resultReceived
private final com.bumptech.glide.request.RequestFutureTarget$Waiter waiter
private final int width
    static void <clinit>()
    {
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r0;

        $r0 = new com.bumptech.glide.request.RequestFutureTarget$Waiter;

        specialinvoke $r0.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void <init>()>();

        <com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter DEFAULT_WAITER> = $r0;

        return;
    }
    public void <init>(android.os.Handler, int, int)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        android.os.Handler $r1;
        int $i0, $i1;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r2;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter DEFAULT_WAITER>;

        specialinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: void <init>(android.os.Handler,int,int,boolean,com.bumptech.glide.request.RequestFutureTarget$Waiter)>($r1, $i0, $i1, 1, $r2);

        return;
    }
    void <init>(android.os.Handler, int, int, boolean, com.bumptech.glide.request.RequestFutureTarget$Waiter)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        android.os.Handler $r1;
        int $i0, $i1;
        boolean $z0;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r2;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r2 := @parameter4: com.bumptech.glide.request.RequestFutureTarget$Waiter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.request.RequestFutureTarget: android.os.Handler mainHandler> = $r1;

        r0.<com.bumptech.glide.request.RequestFutureTarget: int width> = $i0;

        r0.<com.bumptech.glide.request.RequestFutureTarget: int height> = $i1;

        r0.<com.bumptech.glide.request.RequestFutureTarget: boolean assertBackgroundThread> = $z0;

        r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter> = $r2;

        return;
    }
    private java.lang.Object doGet(java.lang.Long) throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        java.lang.Long $r1;
        boolean $z0;
        java.util.concurrent.CancellationException $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.ExecutionException $r4;
        java.lang.Exception $r5;
        java.lang.Object $r6;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r7;
        java.lang.InterruptedException $r8;
        long $l0;
        byte $b1;
        java.util.concurrent.TimeoutException $r9;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: java.lang.Long;

        entermonitor r0;

     label01:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean assertBackgroundThread>;

        if $z0 == 0 goto label02;

        staticinvoke <com.bumptech.glide.util.Util: void assertBackgroundThread()>();

     label02:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled>;

        if $z0 == 0 goto label04;

        $r2 = new java.util.concurrent.CancellationException;

        specialinvoke $r2.<java.util.concurrent.CancellationException: void <init>()>();

        throw $r2;

     label03:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label04:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean exceptionReceived>;

        if $z0 == 0 goto label05;

        $r4 = new java.util.concurrent.ExecutionException;

        $r5 = r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Exception exception>;

        specialinvoke $r4.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

     label05:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean resultReceived>;

        if $z0 == 0 goto label07;

        $r6 = r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Object resource>;

     label06:
        exitmonitor r0;

        return $r6;

     label07:
        if $r1 != null goto label10;

     label08:
        $r7 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter>;

        virtualinvoke $r7.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void waitForTimeout(java.lang.Object,long)>(r0, 0L);

     label09:
        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label11;

        $r8 = new java.lang.InterruptedException;

        specialinvoke $r8.<java.lang.InterruptedException: void <init>()>();

        throw $r8;

     label10:
        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label09;

        $r7 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke $r7.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void waitForTimeout(java.lang.Object,long)>(r0, $l0);

        goto label09;

     label11:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean exceptionReceived>;

        if $z0 == 0 goto label12;

        $r4 = new java.util.concurrent.ExecutionException;

        $r5 = r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Exception exception>;

        specialinvoke $r4.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

     label12:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled>;

        if $z0 == 0 goto label13;

        $r2 = new java.util.concurrent.CancellationException;

        specialinvoke $r2.<java.util.concurrent.CancellationException: void <init>()>();

        throw $r2;

     label13:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean resultReceived>;

        if $z0 != 0 goto label14;

        $r9 = new java.util.concurrent.TimeoutException;

        specialinvoke $r9.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r9;

     label14:
        $r6 = r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Object resource>;

     label15:
        goto label06;

        catch java.lang.Throwable from label01 to label03 with label03;
        catch java.lang.Throwable from label04 to label06 with label03;
        catch java.lang.Throwable from label08 to label15 with label03;
    }
    public boolean cancel(boolean)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        boolean $z0, $z1, z2;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $z0 := @parameter0: boolean;

        z2 = 1;

        entermonitor r0;

     label1:
        $z1 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled>;

     label2:
        if $z1 == 0 goto label4;

     label3:
        exitmonitor r0;

        return z2;

     label4:
        $z1 = virtualinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isDone()>();

        if $z1 != 0 goto label9;

     label5:
        if z2 == 0 goto label3;

        r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled> = 1;

        if $z0 == 0 goto label6;

        virtualinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: void clear()>();

     label6:
        $r1 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter>;

        virtualinvoke $r1.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void notifyAll(java.lang.Object)>(r0);

     label7:
        goto label3;

     label8:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label9:
        z2 = 0;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label7 with label8;
    }
    public void clear()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        android.os.Handler $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 = r0.<com.bumptech.glide.request.RequestFutureTarget: android.os.Handler mainHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        return;
    }
    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        java.util.concurrent.TimeoutException r1;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

     label1:
        $r2 = specialinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Object doGet(java.lang.Long)>(null);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r3;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }
    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = specialinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Object doGet(java.lang.Long)>($r2);

        return $r3;
    }
    public com.bumptech.glide.request.Request getRequest()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        com.bumptech.glide.request.Request r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        r1 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.Request request>;

        return r1;
    }
    public void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        com.bumptech.glide.request.target.SizeReadyCallback $r1;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: com.bumptech.glide.request.target.SizeReadyCallback;

        $i0 = r0.<com.bumptech.glide.request.RequestFutureTarget: int width>;

        $i1 = r0.<com.bumptech.glide.request.RequestFutureTarget: int height>;

        interfaceinvoke $r1.<com.bumptech.glide.request.target.SizeReadyCallback: void onSizeReady(int,int)>($i0, $i1);

        return;
    }
    public boolean isCancelled()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        entermonitor r0;

     label1:
        z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean isDone()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        entermonitor r0;

     label1:
        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean isCancelled>;

        if $z0 != 0 goto label3;

        $z0 = r0.<com.bumptech.glide.request.RequestFutureTarget: boolean resultReceived>;

     label2:
        if $z0 == 0 goto label5;

     label3:
        $z0 = 1;

     label4:
        exitmonitor r0;

        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
    }
    public void onDestroy()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        return;
    }
    public void onLoadCleared(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }
    public void onLoadFailed(java.lang.Exception, android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        java.lang.Exception $r1;
        android.graphics.drawable.Drawable $r2;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: java.lang.Exception;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        entermonitor r0;

     label1:
        r0.<com.bumptech.glide.request.RequestFutureTarget: boolean exceptionReceived> = 1;

        r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Exception exception> = $r1;

        $r3 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter>;

        virtualinvoke $r3.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void notifyAll(java.lang.Object)>(r0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void onLoadStarted(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }
    public void onResourceReady(java.lang.Object, com.bumptech.glide.request.animation.GlideAnimation)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        java.lang.Object r1;
        com.bumptech.glide.request.animation.GlideAnimation r2;
        com.bumptech.glide.request.RequestFutureTarget$Waiter $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.bumptech.glide.request.animation.GlideAnimation;

        entermonitor r0;

     label1:
        r0.<com.bumptech.glide.request.RequestFutureTarget: boolean resultReceived> = 1;

        r0.<com.bumptech.glide.request.RequestFutureTarget: java.lang.Object resource> = r1;

        $r3 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.RequestFutureTarget$Waiter waiter>;

        virtualinvoke $r3.<com.bumptech.glide.request.RequestFutureTarget$Waiter: void notifyAll(java.lang.Object)>(r0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void onStart()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        return;
    }
    public void onStop()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        return;
    }
    public void run()
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        com.bumptech.glide.request.Request $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.Request request>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.Request request>;

        interfaceinvoke $r1.<com.bumptech.glide.request.Request: void clear()>();

        virtualinvoke r0.<com.bumptech.glide.request.RequestFutureTarget: boolean cancel(boolean)>(0);

     label1:
        return;
    }
    public void setRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.request.RequestFutureTarget r0;
        com.bumptech.glide.request.Request $r1;

        r0 := @this: com.bumptech.glide.request.RequestFutureTarget;

        $r1 := @parameter0: com.bumptech.glide.request.Request;

        r0.<com.bumptech.glide.request.RequestFutureTarget: com.bumptech.glide.request.Request request> = $r1;

        return;
    }
