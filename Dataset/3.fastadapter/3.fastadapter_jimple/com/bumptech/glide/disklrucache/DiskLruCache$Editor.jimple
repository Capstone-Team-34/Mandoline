com.bumptech.glide.disklrucache.DiskLruCache$Editor extends java.lang.Object
private boolean committed
private final com.bumptech.glide.disklrucache.DiskLruCache$Entry entry
final com.bumptech.glide.disklrucache.DiskLruCache this$0
private final boolean[] written
    private void <init>(com.bumptech.glide.disklrucache.DiskLruCache, com.bumptech.glide.disklrucache.DiskLruCache$Entry)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r2;
        boolean $z0;
        boolean[] $r3;
        int $i0;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $r1 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache;

        $r2 := @parameter1: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry> = $r2;

        $z0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r2);

        if $z0 == 0 goto label2;

        $r3 = null;

     label1:
        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean[] written> = $r3;

        return;

     label2:
        $i0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: int access$1800(com.bumptech.glide.disklrucache.DiskLruCache)>($r1);

        $r3 = newarray (boolean)[$i0];

        goto label1;
    }
    void <init>(com.bumptech.glide.disklrucache.DiskLruCache, com.bumptech.glide.disklrucache.DiskLruCache$Entry, com.bumptech.glide.disklrucache.DiskLruCache$1)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r2;
        com.bumptech.glide.disklrucache.DiskLruCache$1 $r3;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $r1 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache;

        $r2 := @parameter1: com.bumptech.glide.disklrucache.DiskLruCache$Entry;

        $r3 := @parameter2: com.bumptech.glide.disklrucache.DiskLruCache$1;

        specialinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r1, $r2);

        return;
    }
    static com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1400(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor $r0;
        com.bumptech.glide.disklrucache.DiskLruCache$Entry r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        r1 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        return r1;
    }
    static boolean[] access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor $r0;
        boolean[] r1;

        $r0 := @parameter0: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        r1 = $r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean[] written>;

        return r1;
    }
    private java.io.InputStream newInputStream(int) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0, $r4;
        int $i0;
        java.io.FileNotFoundException r1;
        com.bumptech.glide.disklrucache.DiskLruCache $r2;
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r3;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r6;
        boolean $z0;
        java.io.FileInputStream $r7;
        java.io.File $r8;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        entermonitor $r2;

     label01:
        $r3 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        $r4 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r3);

        if $r4 == r0 goto label04;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label02:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label03:
        throw $r6;

     label04:
        $r3 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r3);

        if $z0 != 0 goto label06;

        exitmonitor $r2;

     label05:
        return null;

     label06:
        $r7 = new java.io.FileInputStream;

        $r3 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

     label07:
        $r8 = virtualinvoke $r3.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getCleanFile(int)>($i0);

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

     label08:
        exitmonitor $r2;

     label09:
        return $r7;

     label10:
        r1 := @caughtexception;

        exitmonitor $r2;

     label11:
        return null;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.io.FileNotFoundException from label07 to label08 with label10;
        catch java.lang.Throwable from label06 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
    }
    public void abort() throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: void access$2000(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)>($r1, r0, 0);

        return;
    }
    public void abortUnlessCommitted()
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $z0 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean committed>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: void abort()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void commit() throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: void access$2000(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)>($r1, r0, 1);

        r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean committed> = 1;

        return;
    }
    public java.io.File getFile(int) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0, $r3;
        int $i0;
        com.bumptech.glide.disklrucache.DiskLruCache $r1, $r8;
        com.bumptech.glide.disklrucache.DiskLruCache$Entry $r2;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;
        boolean $z0;
        boolean[] $r6;
        java.io.File $r7, $r9;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        $r3 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r2);

        if $r3 == r0 goto label4;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label2:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label3:
        throw $r5;

     label4:
        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry)>($r2);

        if $z0 != 0 goto label5;

        $r6 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean[] written>;

        $r6[$i0] = 1;

     label5:
        $r2 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry>;

        $r7 = virtualinvoke $r2.<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getDirtyFile(int)>($i0);

        $r8 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        $r9 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache)>($r8);

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label6;

        $r8 = r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0>;

        $r9 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache)>($r8);

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

     label6:
        exitmonitor $r1;

     label7:
        return $r7;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label7 with label2;
    }
    public java.lang.String getString(int) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        int $i0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: java.io.InputStream newInputStream(int)>($i0);

        if $r1 == null goto label1;

        $r2 = staticinvoke <com.bumptech.glide.disklrucache.DiskLruCache: java.lang.String access$1700(java.io.InputStream)>($r1);

        return $r2;

     label1:
        return null;
    }
    public void set(int, java.lang.String) throws java.io.IOException
    {
        com.bumptech.glide.disklrucache.DiskLruCache$Editor r0;
        int $i0;
        java.lang.String $r1;
        java.io.FileOutputStream r2;
        java.io.OutputStreamWriter r3, r5;
        java.io.File $r4;
        java.nio.charset.Charset $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.bumptech.glide.disklrucache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        r5 = null;

     label1:
        r2 = new java.io.FileOutputStream;

        $r4 = virtualinvoke r0.<com.bumptech.glide.disklrucache.DiskLruCache$Editor: java.io.File getFile(int)>($i0);

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

        r3 = new java.io.OutputStreamWriter;

        $r6 = <com.bumptech.glide.disklrucache.Util: java.nio.charset.Charset UTF_8>;

        specialinvoke r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, $r6);

     label2:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r1);

     label3:
        staticinvoke <com.bumptech.glide.disklrucache.Util: void closeQuietly(java.io.Closeable)>(r3);

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <com.bumptech.glide.disklrucache.Util: void closeQuietly(java.io.Closeable)>(r5);

        throw $r7;

     label6:
        $r7 := @caughtexception;

        r5 = r3;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }
