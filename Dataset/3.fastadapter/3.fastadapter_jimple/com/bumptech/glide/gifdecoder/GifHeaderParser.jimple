com.bumptech.glide.gifdecoder.GifHeaderParser extends java.lang.Object
static final int DEFAULT_FRAME_DELAY
private static final int MAX_BLOCK_SIZE
static final int MIN_FRAME_DELAY
public static final java.lang.String TAG
private final byte[] block
private int blockSize
private com.bumptech.glide.gifdecoder.GifHeader header
private java.nio.ByteBuffer rawData
    public void <init>()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        byte[] $r1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[256];

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block> = $r1;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize> = 0;

        return;
    }
    private boolean err()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int status>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private int read()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.lang.Exception r1;
        byte $b0;
        java.nio.ByteBuffer $r2;
        int i1;
        com.bumptech.glide.gifdecoder.GifHeader $r3;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

     label1:
        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

     label2:
        i1 = $b0 & 255;

        return i1;

     label3:
        r1 := @caughtexception;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void readBitmap()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, $i1;
        double $d0;
        boolean $z0, z1;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        com.bumptech.glide.gifdecoder.GifFrame $r2;
        int[] $r3;
        java.nio.ByteBuffer $r4;
        java.util.List $r5;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $z0 = 1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int ix> = $i1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int iy> = $i1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int iw> = $i1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int ih> = $i1;

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        i0 = $i1 & 128;

        if i0 == 0 goto label4;

        z1 = 1;

     label1:
        i0 = $i1 & 7;

        i0 = i0 + 1;

        $d0 = (double) i0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        i0 = (int) $d0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = $i1 & 64;

        if $i1 == 0 goto label5;

     label2:
        $r2.<com.bumptech.glide.gifdecoder.GifFrame: boolean interlace> = $z0;

        if z1 == 0 goto label6;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r3 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int[] readColorTable(int)>(i0);

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct> = $r3;

     label3:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $i1 = virtualinvoke $r4.<java.nio.ByteBuffer: int position()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int bufferFrameStart> = $i1;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skipImageData()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label7;

        return;

     label4:
        z1 = 0;

        goto label1;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct> = null;

        goto label3;

     label7:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        $i1 = $i1 + 1;

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount> = $i1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r5 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }
    private int readBlock()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.lang.Exception r1;
        int $i0, $i1, $i2;
        java.nio.ByteBuffer $r2;
        byte[] $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.bumptech.glide.gifdecoder.GifHeader $r6;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize> = $i0;

        $i0 = 0;

        $i1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if $i1 <= 0 goto label09;

        $i1 = 0;

     label01:
        $i2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

     label02:
        if $i0 >= $i2 goto label10;

     label03:
        $i2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

     label04:
        $i1 = $i2 - $i0;

     label05:
        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r3, $i0, $i1);

     label06:
        $i0 = $i0 + $i1;

        goto label01;

     label07:
        r1 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GifHeaderParser", 3);

        if $z0 == 0 goto label08;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error Reading Block n: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blockSize: ");

        $i1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GifHeaderParser", $r5, r1);

     label08:
        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return $i0;

     label09:
        return 0;

     label10:
        return $i0;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label07;
    }
    private int[] readColorTable(int)
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int $i0, i1, i2, i3, i4, i5, i7;
        byte[] r1;
        java.nio.BufferUnderflowException r2;
        boolean $z0;
        java.nio.ByteBuffer $r3;
        int[] r4;
        byte $b6;
        com.bumptech.glide.gifdecoder.GifHeader $r5;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $i0 := @parameter0: int;

        i3 = $i0 * 3;

        r1 = newarray (byte)[i3];

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

     label1:
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

     label2:
        r4 = newarray (int)[256];

        i1 = 0;

        i3 = 0;

     label3:
        if i3 >= $i0 goto label6;

        i5 = i1 + 1;

        $b6 = r1[i1];

        i4 = $b6 & 255;

        i7 = i5 + 1;

        $b6 = r1[i5];

        i2 = $b6 & 255;

        $b6 = r1[i7];

        i1 = $b6 & 255;

        i4 = i4 << 16;

        i4 = -16777216 | i4;

        i2 = i2 << 8;

        i2 = i4 | i2;

        i1 = i2 | i1;

        r4[i3] = i1;

        i1 = i7 + 1;

        i3 = i3 + 1;

        goto label3;

     label4:
        r2 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GifHeaderParser", 3);

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GifHeaderParser", "Format Error Reading Color Table", r2);

     label5:
        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r5.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return null;

     label6:
        return r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label4;
    }
    private void readContents()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        boolean z0, $z1;
        int $i0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        com.bumptech.glide.gifdecoder.GifFrame $r2;
        java.lang.String r3;
        java.lang.StringBuilder $r4;
        byte[] $r5;
        byte $b1;
        char $c2;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        z0 = 0;

     label01:
        if z0 != 0 goto label15;

        $z1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z1 != 0 goto label15;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        lookupswitch($i0)
        {
            case 33: goto label05;
            case 44: goto label03;
            case 59: goto label14;
            default: goto label02;
        };

     label02:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        goto label01;

     label03:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        if $r2 != null goto label04;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = new com.bumptech.glide.gifdecoder.GifFrame;

        specialinvoke $r2.<com.bumptech.glide.gifdecoder.GifFrame: void <init>()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame> = $r2;

     label04:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readBitmap()>();

        goto label01;

     label05:
        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        lookupswitch($i0)
        {
            case 1: goto label13;
            case 249: goto label07;
            case 254: goto label12;
            case 255: goto label08;
            default: goto label06;
        };

     label06:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label01;

     label07:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = new com.bumptech.glide.gifdecoder.GifFrame;

        specialinvoke $r2.<com.bumptech.glide.gifdecoder.GifFrame: void <init>()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame> = $r2;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readGraphicControlExt()>();

        goto label01;

     label08:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        r3 = "";

        $i0 = 0;

     label09:
        if $i0 >= 11 goto label10;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b1 = $r5[$i0];

        $c2 = (char) $b1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label09;

     label10:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("NETSCAPE2.0");

        if $z1 == 0 goto label11;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readNetscapeExt()>();

        goto label01;

     label11:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label01;

     label12:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label01;

     label13:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label01;

     label14:
        z0 = 1;

        goto label01;

     label15:
        return;
    }
    private void readGraphicControlExt()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        boolean $z0;
        int $i0, $i1;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        com.bumptech.glide.gifdecoder.GifFrame $r2;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $z0 = 1;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = $i0 & 28;

        $i1 = $i1 >> 2;

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose> = $i1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = $r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose>;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose> = 1;

     label1:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

     label2:
        $r2.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency> = $z0;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $i1 = $i0;

        if $i0 >= 3 goto label3;

        $i1 = 10;

     label3:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i0 = $i1 * 10;

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int delay> = $i0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex> = $i0;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        return;

     label4:
        $z0 = 0;

        goto label2;
    }
    private void readHeader()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        char $c2;
        boolean $z0;
        com.bumptech.glide.gifdecoder.GifHeader $r3, $r4;
        int[] $r5;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        r1 = "";

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $c2 = (char) $i1;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("GIF");

        if $z0 != 0 goto label3;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return;

     label3:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readLSD()>();

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z0 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: boolean gctFlag>;

        if $z0 == 0 goto label4;

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        i0 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: int gctSize>;

        $r5 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int[] readColorTable(int)>(i0);

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int[] gct> = $r5;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r5 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: int[] gct>;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        i0 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: int bgIndex>;

        i0 = $r5[i0];

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int bgColor> = i0;

     label4:
        return;
    }
    private void readLSD()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int $i0, $i1;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int width> = $i0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int height> = $i0;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label2;

        $z0 = 1;

     label1:
        $r1.<com.bumptech.glide.gifdecoder.GifHeader: boolean gctFlag> = $z0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $i0 & 7;

        $i0 = 2 << $i0;

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int gctSize> = $i0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int bgIndex> = $i0;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int pixelAspect> = $i0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    private void readNetscapeExt()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, i1;
        boolean $z0;
        byte[] $r1;
        byte $b2;
        com.bumptech.glide.gifdecoder.GifHeader $r2;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

     label1:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b2 = $r1[0];

        if $b2 != 1 goto label2;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b2 = $r1[1];

        i0 = $b2 & 255;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b2 = $r1[2];

        i1 = $b2 & 255;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        i1 = i1 << 8;

        i0 = i1 | i0;

        $r2.<com.bumptech.glide.gifdecoder.GifHeader: int loopCount> = i0;

     label2:
        i0 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if i0 <= 0 goto label3;

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label1;

     label3:
        return;
    }
    private int readShort()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        short $s0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

        return $s0;
    }
    private void reset()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        byte[] $r1;
        com.bumptech.glide.gifdecoder.GifHeader $r2;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = null;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, 0);

        $r2 = new com.bumptech.glide.gifdecoder.GifHeader;

        specialinvoke $r2.<com.bumptech.glide.gifdecoder.GifHeader: void <init>()>();

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header> = $r2;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize> = 0;

        return;
    }
    private void skip()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.nio.ByteBuffer $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

     label1:
        $i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $i1 = $i1 + $i0;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        if $i0 > 0 goto label1;

        return;
    }
    private void skipImageData()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        return;
    }
    public void clear()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = null;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header> = null;

        return;
    }
    public com.bumptech.glide.gifdecoder.GifHeader parseHeader()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.nio.ByteBuffer $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;
        com.bumptech.glide.gifdecoder.GifHeader $r3;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must call setData() before parseHeader()");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        return $r3;

     label2:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readHeader()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readContents()>();

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        if $i0 >= 0 goto label3;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label3:
        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        return $r3;
    }
    public com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[])
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2;
        java.nio.ByteOrder $r3;
        com.bumptech.glide.gifdecoder.GifHeader $r4;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void reset()>();

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = $r2;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        return r0;

     label1:
        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = null;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 2;

        return r0;
    }
