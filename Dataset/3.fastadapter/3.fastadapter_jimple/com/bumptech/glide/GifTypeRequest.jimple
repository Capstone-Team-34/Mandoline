com.bumptech.glide.GifTypeRequest extends com.bumptech.glide.GifRequestBuilder
private final com.bumptech.glide.RequestManager$OptionsApplier optionsApplier
private final com.bumptech.glide.load.model.ModelLoader streamModelLoader
    void <init>(com.bumptech.glide.GenericRequestBuilder, com.bumptech.glide.load.model.ModelLoader, com.bumptech.glide.RequestManager$OptionsApplier)
    {
        com.bumptech.glide.GifTypeRequest r0;
        com.bumptech.glide.GenericRequestBuilder r1;
        com.bumptech.glide.load.model.ModelLoader r2;
        com.bumptech.glide.RequestManager$OptionsApplier $r3;
        com.bumptech.glide.provider.FixedLoadProvider $r4;
        com.bumptech.glide.Glide $r5;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        r2 := @parameter1: com.bumptech.glide.load.model.ModelLoader;

        $r3 := @parameter2: com.bumptech.glide.RequestManager$OptionsApplier;

        $r5 = r1.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r4 = staticinvoke <com.bumptech.glide.GifTypeRequest: com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r5, r2, class "Lcom/bumptech/glide/load/resource/gif/GifDrawable;", null);

        specialinvoke r0.<com.bumptech.glide.GifRequestBuilder: void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder)>($r4, class "Lcom/bumptech/glide/load/resource/gif/GifDrawable;", r1);

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.load.model.ModelLoader streamModelLoader> = r2;

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier> = $r3;

        virtualinvoke r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.GifRequestBuilder crossFade()>();

        return;
    }
    private static com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide, com.bumptech.glide.load.model.ModelLoader, java.lang.Class, com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.Glide $r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        java.lang.Class r2;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r3;
        com.bumptech.glide.provider.DataLoadProvider $r4;
        com.bumptech.glide.provider.FixedLoadProvider $r5;

        $r0 := @parameter0: com.bumptech.glide.Glide;

        r1 := @parameter1: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        if r1 != null goto label1;

        return null;

     label1:
        if r3 != null goto label2;

        r3 = virtualinvoke $r0.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.transcode.ResourceTranscoder buildTranscoder(java.lang.Class,java.lang.Class)>(class "Lcom/bumptech/glide/load/resource/gif/GifDrawable;", r2);

     label2:
        $r4 = virtualinvoke $r0.<com.bumptech.glide.Glide: com.bumptech.glide.provider.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class)>(class "Ljava/io/InputStream;", class "Lcom/bumptech/glide/load/resource/gif/GifDrawable;");

        $r5 = new com.bumptech.glide.provider.FixedLoadProvider;

        specialinvoke $r5.<com.bumptech.glide.provider.FixedLoadProvider: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.provider.DataLoadProvider)>(r1, r3, $r4);

        return $r5;
    }
    public com.bumptech.glide.GenericRequestBuilder toBytes()
    {
        com.bumptech.glide.GifTypeRequest r0;
        com.bumptech.glide.GenericRequestBuilder $r1;
        com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder $r2;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        $r2 = new com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder;

        specialinvoke $r2.<com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder: void <init>()>();

        $r1 = virtualinvoke r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.GenericRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder,java.lang.Class)>($r2, class "[B");

        return $r1;
    }
    public com.bumptech.glide.GenericRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder, java.lang.Class)
    {
        com.bumptech.glide.GifTypeRequest r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;
        java.lang.Class r2;
        com.bumptech.glide.Glide $r3;
        com.bumptech.glide.load.model.ModelLoader $r4;
        com.bumptech.glide.provider.FixedLoadProvider $r5;
        com.bumptech.glide.RequestManager$OptionsApplier $r6;
        com.bumptech.glide.GenericRequestBuilder $r7;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.Glide glide>;

        $r4 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.load.model.ModelLoader streamModelLoader>;

        $r5 = staticinvoke <com.bumptech.glide.GifTypeRequest: com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r3, $r4, r2, r1);

        $r6 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r7 = new com.bumptech.glide.GenericRequestBuilder;

        specialinvoke $r7.<com.bumptech.glide.GenericRequestBuilder: void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder)>($r5, r2, r0);

        $r7 = virtualinvoke $r6.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(com.bumptech.glide.GenericRequestBuilder)>($r7);

        return $r7;
    }
