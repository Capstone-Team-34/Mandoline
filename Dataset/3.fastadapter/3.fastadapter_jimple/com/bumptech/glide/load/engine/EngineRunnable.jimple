com.bumptech.glide.load.engine.EngineRunnable extends java.lang.Object implements java.lang.Runnable com.bumptech.glide.load.engine.executor.Prioritized
private static final java.lang.String TAG
private final com.bumptech.glide.load.engine.DecodeJob decodeJob
private volatile boolean isCancelled
private final com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager manager
private final com.bumptech.glide.Priority priority
private com.bumptech.glide.load.engine.EngineRunnable$Stage stage
    public void <init>(com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager, com.bumptech.glide.load.engine.DecodeJob, com.bumptech.glide.Priority)
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager $r1;
        com.bumptech.glide.load.engine.DecodeJob r2;
        com.bumptech.glide.Priority $r3;
        com.bumptech.glide.load.engine.EngineRunnable$Stage $r4;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r1 := @parameter0: com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager;

        r2 := @parameter1: com.bumptech.glide.load.engine.DecodeJob;

        $r3 := @parameter2: com.bumptech.glide.Priority;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager manager> = $r1;

        r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.DecodeJob decodeJob> = r2;

        $r4 = <com.bumptech.glide.load.engine.EngineRunnable$Stage: com.bumptech.glide.load.engine.EngineRunnable$Stage CACHE>;

        r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$Stage stage> = $r4;

        r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.Priority priority> = $r3;

        return;
    }
    private com.bumptech.glide.load.engine.Resource decode() throws java.lang.Exception
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        boolean $z0;
        com.bumptech.glide.load.engine.Resource $r1;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $z0 = specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: boolean isDecodingFromCache()>();

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.Resource decodeFromCache()>();

        return $r1;

     label1:
        $r1 = specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.Resource decodeFromSource()>();

        return $r1;
    }
    private com.bumptech.glide.load.engine.Resource decodeFromCache() throws java.lang.Exception
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        java.lang.Exception r1;
        com.bumptech.glide.load.engine.Resource r2, $r4;
        com.bumptech.glide.load.engine.DecodeJob $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        r2 = null;

     label1:
        $r3 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.DecodeJob decodeJob>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource decodeResultFromCache()>();

     label2:
        r2 = $r4;

     label3:
        if r2 != null goto label5;

        $r3 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.DecodeJob decodeJob>;

        r2 = virtualinvoke $r3.<com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource decodeSourceFromCache()>();

        return r2;

     label4:
        r1 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("EngineRunnable", 3);

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception decoding result from cache: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EngineRunnable", $r6);

        goto label3;

     label5:
        return r2;

        catch java.lang.Exception from label1 to label2 with label4;
    }
    private com.bumptech.glide.load.engine.Resource decodeFromSource() throws java.lang.Exception
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        com.bumptech.glide.load.engine.Resource $r1;
        com.bumptech.glide.load.engine.DecodeJob $r2;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r2 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.DecodeJob decodeJob>;

        $r1 = virtualinvoke $r2.<com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource decodeFromSource()>();

        return $r1;
    }
    private boolean isDecodingFromCache()
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        com.bumptech.glide.load.engine.EngineRunnable$Stage $r1, $r2;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r2 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$Stage stage>;

        $r1 = <com.bumptech.glide.load.engine.EngineRunnable$Stage: com.bumptech.glide.load.engine.EngineRunnable$Stage CACHE>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onLoadComplete(com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        com.bumptech.glide.load.engine.Resource $r1;
        com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager $r2;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $r2 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager manager>;

        interfaceinvoke $r2.<com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager: void onResourceReady(com.bumptech.glide.load.engine.Resource)>($r1);

        return;
    }
    private void onLoadFailed(java.lang.Exception)
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        java.lang.Exception $r1;
        boolean $z0;
        com.bumptech.glide.load.engine.EngineRunnable$Stage $r2;
        com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager $r3;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r1 := @parameter0: java.lang.Exception;

        $z0 = specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: boolean isDecodingFromCache()>();

        if $z0 == 0 goto label1;

        $r2 = <com.bumptech.glide.load.engine.EngineRunnable$Stage: com.bumptech.glide.load.engine.EngineRunnable$Stage SOURCE>;

        r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$Stage stage> = $r2;

        $r3 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager manager>;

        interfaceinvoke $r3.<com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager: void submitForSource(com.bumptech.glide.load.engine.EngineRunnable)>(r0);

        return;

     label1:
        $r3 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager manager>;

        interfaceinvoke $r3.<com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager: void onException(java.lang.Exception)>($r1);

        return;
    }
    public void cancel()
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        com.bumptech.glide.load.engine.DecodeJob $r1;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        r0.<com.bumptech.glide.load.engine.EngineRunnable: boolean isCancelled> = 1;

        $r1 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.DecodeJob decodeJob>;

        virtualinvoke $r1.<com.bumptech.glide.load.engine.DecodeJob: void cancel()>();

        return;
    }
    public int getPriority()
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        int $i0;
        com.bumptech.glide.Priority $r1;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $r1 = r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.Priority priority>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.Priority: int ordinal()>();

        return $i0;
    }
    public void run()
    {
        com.bumptech.glide.load.engine.EngineRunnable r0;
        java.lang.Exception r1;
        boolean $z0;
        com.bumptech.glide.load.engine.Resource r2, $r3;

        r0 := @this: com.bumptech.glide.load.engine.EngineRunnable;

        $z0 = r0.<com.bumptech.glide.load.engine.EngineRunnable: boolean isCancelled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = null;

        r2 = null;

     label2:
        $r3 = specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: com.bumptech.glide.load.engine.Resource decode()>();

     label3:
        r2 = $r3;

     label4:
        $z0 = r0.<com.bumptech.glide.load.engine.EngineRunnable: boolean isCancelled>;

        if $z0 == 0 goto label7;

        if r2 == null goto label9;

        interfaceinvoke r2.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        return;

     label5:
        r1 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("EngineRunnable", 2);

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("EngineRunnable", "Exception decoding", r1);

     label6:
        goto label4;

     label7:
        if r2 != null goto label8;

        specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: void onLoadFailed(java.lang.Exception)>(r1);

        return;

     label8:
        specialinvoke r0.<com.bumptech.glide.load.engine.EngineRunnable: void onLoadComplete(com.bumptech.glide.load.engine.Resource)>(r2);

     label9:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }
