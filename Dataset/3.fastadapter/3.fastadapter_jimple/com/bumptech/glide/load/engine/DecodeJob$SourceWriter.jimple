com.bumptech.glide.load.engine.DecodeJob$SourceWriter extends java.lang.Object implements com.bumptech.glide.load.engine.cache.DiskCache$Writer
private final java.lang.Object data
private final com.bumptech.glide.load.Encoder encoder
final com.bumptech.glide.load.engine.DecodeJob this$0
    public void <init>(com.bumptech.glide.load.engine.DecodeJob, com.bumptech.glide.load.Encoder, java.lang.Object)
    {
        com.bumptech.glide.load.engine.DecodeJob$SourceWriter r0;
        com.bumptech.glide.load.engine.DecodeJob $r1;
        com.bumptech.glide.load.Encoder r2;
        java.lang.Object r3;

        r0 := @this: com.bumptech.glide.load.engine.DecodeJob$SourceWriter;

        $r1 := @parameter0: com.bumptech.glide.load.engine.DecodeJob;

        r2 := @parameter1: com.bumptech.glide.load.Encoder;

        r3 := @parameter2: java.lang.Object;

        r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: com.bumptech.glide.load.engine.DecodeJob this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: com.bumptech.glide.load.Encoder encoder> = r2;

        r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: java.lang.Object data> = r3;

        return;
    }
    public boolean write(java.io.File)
    {
        com.bumptech.glide.load.engine.DecodeJob$SourceWriter r0;
        java.io.File $r1;
        java.io.FileNotFoundException r2;
        java.io.OutputStream r3, $r6;
        com.bumptech.glide.load.engine.DecodeJob $r4;
        com.bumptech.glide.load.engine.DecodeJob$FileOpener $r5;
        com.bumptech.glide.load.Encoder $r7;
        java.lang.Object $r8;
        boolean $z0;
        java.io.IOException $r9, $r11, $r12;
        java.lang.Throwable $r10;

        r0 := @this: com.bumptech.glide.load.engine.DecodeJob$SourceWriter;

        $r1 := @parameter0: java.io.File;

        r3 = null;

     label01:
        $r4 = r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: com.bumptech.glide.load.engine.DecodeJob this$0>;

     label02:
        $r5 = staticinvoke <com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$FileOpener access$000(com.bumptech.glide.load.engine.DecodeJob)>($r4);

        $r6 = virtualinvoke $r5.<com.bumptech.glide.load.engine.DecodeJob$FileOpener: java.io.OutputStream open(java.io.File)>($r1);

     label03:
        r3 = $r6;

     label04:
        $r7 = r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: com.bumptech.glide.load.Encoder encoder>;

        $r8 = r0.<com.bumptech.glide.load.engine.DecodeJob$SourceWriter: java.lang.Object data>;

     label05:
        $z0 = interfaceinvoke $r7.<com.bumptech.glide.load.Encoder: boolean encode(java.lang.Object,java.io.OutputStream)>($r8, $r6);

     label06:
        if $r6 == null goto label22;

     label07:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label08:
        return $z0;

     label09:
        r2 := @caughtexception;

     label10:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DecodeJob", 3);

     label11:
        if $z0 == 0 goto label13;

     label12:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("DecodeJob", "Failed to find file to write to disk cache", r2);

     label13:
        if r3 == null goto label23;

     label14:
        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label15:
        return 0;

     label16:
        $r9 := @caughtexception;

        return 0;

     label17:
        $r10 := @caughtexception;

        if r3 == null goto label19;

     label18:
        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label19:
        throw $r10;

     label20:
        $r11 := @caughtexception;

        return $z0;

     label21:
        $r12 := @caughtexception;

        goto label19;

     label22:
        return $z0;

     label23:
        return 0;

        catch java.io.FileNotFoundException from label02 to label03 with label09;
        catch java.io.FileNotFoundException from label05 to label06 with label09;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label04 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label18 to label19 with label21;
    }
