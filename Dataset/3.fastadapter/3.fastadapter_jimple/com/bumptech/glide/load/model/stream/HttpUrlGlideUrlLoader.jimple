com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader extends java.lang.Object implements com.bumptech.glide.load.model.ModelLoader
private final com.bumptech.glide.load.model.ModelCache modelCache
    public void <init>()
    {
        com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader r0;

        r0 := @this: com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader;

        specialinvoke r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: void <init>(com.bumptech.glide.load.model.ModelCache)>(null);

        return;
    }
    public void <init>(com.bumptech.glide.load.model.ModelCache)
    {
        com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader r0;
        com.bumptech.glide.load.model.ModelCache r1;

        r0 := @this: com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache> = r1;

        return;
    }
    public com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.load.model.GlideUrl, int, int)
    {
        com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader r0;
        com.bumptech.glide.load.model.GlideUrl $r1, r3;
        int $i0, $i1;
        java.lang.Object $r2;
        com.bumptech.glide.load.model.ModelCache $r4;
        com.bumptech.glide.load.data.HttpUrlFetcher $r5;

        r0 := @this: com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader;

        $r1 := @parameter0: com.bumptech.glide.load.model.GlideUrl;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r3 = $r1;

        $r4 = r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        if $r4 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        $r2 = virtualinvoke $r4.<com.bumptech.glide.load.model.ModelCache: java.lang.Object get(java.lang.Object,int,int)>($r1, 0, 0);

        r3 = (com.bumptech.glide.load.model.GlideUrl) $r2;

        if r3 != null goto label1;

        $r4 = r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        virtualinvoke $r4.<com.bumptech.glide.load.model.ModelCache: void put(java.lang.Object,int,int,java.lang.Object)>($r1, 0, 0, $r1);

        r3 = $r1;

     label1:
        $r5 = new com.bumptech.glide.load.data.HttpUrlFetcher;

        specialinvoke $r5.<com.bumptech.glide.load.data.HttpUrlFetcher: void <init>(com.bumptech.glide.load.model.GlideUrl)>(r3);

        return $r5;
    }
    public volatile com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object, int, int)
    {
        com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader r0;
        int $i0, $i1;
        com.bumptech.glide.load.data.DataFetcher $r1;
        java.lang.Object $r2;
        com.bumptech.glide.load.model.GlideUrl $r3;

        r0 := @this: com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = (com.bumptech.glide.load.model.GlideUrl) $r2;

        $r1 = virtualinvoke r0.<com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader: com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.load.model.GlideUrl,int,int)>($r3, $i0, $i1);

        return $r1;
    }
