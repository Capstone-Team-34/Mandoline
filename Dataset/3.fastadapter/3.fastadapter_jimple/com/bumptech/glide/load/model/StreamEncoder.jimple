com.bumptech.glide.load.model.StreamEncoder extends java.lang.Object implements com.bumptech.glide.load.Encoder
private static final java.lang.String TAG
    public void <init>()
    {
        com.bumptech.glide.load.model.StreamEncoder r0;

        r0 := @this: com.bumptech.glide.load.model.StreamEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public boolean encode(java.io.InputStream, java.io.OutputStream)
    {
        com.bumptech.glide.load.model.StreamEncoder r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        java.io.IOException r3;
        com.bumptech.glide.util.ByteArrayPool $r4;
        byte[] $r5;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r6;

        r0 := @this: com.bumptech.glide.load.model.StreamEncoder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $r4 = staticinvoke <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool get()>();

        $r5 = virtualinvoke $r4.<com.bumptech.glide.util.ByteArrayPool: byte[] getBytes()>();

     label01:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r5);

     label02:
        if $i0 == -1 goto label10;

     label03:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i0);

     label04:
        goto label01;

     label05:
        r3 := @caughtexception;

     label06:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StreamEncoder", 3);

     label07:
        if $z0 == 0 goto label09;

     label08:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("StreamEncoder", "Failed to encode data onto the OutputStream", r3);

     label09:
        $r4 = staticinvoke <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool get()>();

        virtualinvoke $r4.<com.bumptech.glide.util.ByteArrayPool: boolean releaseBytes(byte[])>($r5);

        return 0;

     label10:
        $r4 = staticinvoke <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool get()>();

        virtualinvoke $r4.<com.bumptech.glide.util.ByteArrayPool: boolean releaseBytes(byte[])>($r5);

        return 1;

     label11:
        $r6 := @caughtexception;

        $r4 = staticinvoke <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool get()>();

        virtualinvoke $r4.<com.bumptech.glide.util.ByteArrayPool: boolean releaseBytes(byte[])>($r5);

        throw $r6;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }
    public volatile boolean encode(java.lang.Object, java.io.OutputStream)
    {
        com.bumptech.glide.load.model.StreamEncoder r0;
        java.io.OutputStream $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.io.InputStream $r3;

        r0 := @this: com.bumptech.glide.load.model.StreamEncoder;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.io.OutputStream;

        $r3 = (java.io.InputStream) $r2;

        $z0 = virtualinvoke r0.<com.bumptech.glide.load.model.StreamEncoder: boolean encode(java.io.InputStream,java.io.OutputStream)>($r3, $r1);

        return $z0;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.model.StreamEncoder r0;

        r0 := @this: com.bumptech.glide.load.model.StreamEncoder;

        return "";
    }
