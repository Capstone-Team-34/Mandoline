com.bumptech.glide.load.model.stream.BaseGlideUrlLoader extends java.lang.Object implements com.bumptech.glide.load.model.stream.StreamModelLoader
private final com.bumptech.glide.load.model.ModelLoader concreteLoader
private final com.bumptech.glide.load.model.ModelCache modelCache
    public void <init>(android.content.Context)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        android.content.Context $r1;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context,com.bumptech.glide.load.model.ModelCache)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, com.bumptech.glide.load.model.ModelCache)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        android.content.Context $r1;
        com.bumptech.glide.load.model.ModelCache r2;
        com.bumptech.glide.load.model.ModelLoader $r3;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.bumptech.glide.load.model.ModelCache;

        $r3 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>(class "Lcom/bumptech/glide/load/model/GlideUrl;", class "Ljava/io/InputStream;", $r1);

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelCache)>($r3, r2);

        return;
    }
    public void <init>(com.bumptech.glide.load.model.ModelLoader)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        com.bumptech.glide.load.model.ModelLoader r1;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelCache)>(r1, null);

        return;
    }
    public void <init>(com.bumptech.glide.load.model.ModelLoader, com.bumptech.glide.load.model.ModelCache)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        com.bumptech.glide.load.model.ModelCache r2;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter1: com.bumptech.glide.load.model.ModelCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader concreteLoader> = r1;

        r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache> = r2;

        return;
    }
    protected com.bumptech.glide.load.model.Headers getHeaders(java.lang.Object, int, int)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        java.lang.Object r1;
        int $i0, $i1;
        com.bumptech.glide.load.model.Headers r2;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = <com.bumptech.glide.load.model.Headers: com.bumptech.glide.load.model.Headers DEFAULT>;

        return r2;
    }
    public com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object, int, int)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        java.lang.Object r1, $r4;
        int $i0, $i1;
        com.bumptech.glide.load.model.GlideUrl r2;
        com.bumptech.glide.load.model.ModelCache $r3;
        java.lang.String $r5;
        boolean $z0;
        com.bumptech.glide.load.model.Headers $r6;
        com.bumptech.glide.load.model.ModelLoader $r7;
        com.bumptech.glide.load.data.DataFetcher $r8;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = null;

        $r3 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        if $r3 == null goto label1;

        $r3 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.load.model.ModelCache: java.lang.Object get(java.lang.Object,int,int)>(r1, $i0, $i1);

        r2 = (com.bumptech.glide.load.model.GlideUrl) $r4;

     label1:
        if r2 != null goto label3;

        $r5 = virtualinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: java.lang.String getUrl(java.lang.Object,int,int)>(r1, $i0, $i1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label2;

        return null;

     label2:
        r2 = new com.bumptech.glide.load.model.GlideUrl;

        $r6 = virtualinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.Headers getHeaders(java.lang.Object,int,int)>(r1, $i0, $i1);

        specialinvoke r2.<com.bumptech.glide.load.model.GlideUrl: void <init>(java.lang.String,com.bumptech.glide.load.model.Headers)>($r5, $r6);

        $r3 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        if $r3 == null goto label3;

        $r3 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        virtualinvoke $r3.<com.bumptech.glide.load.model.ModelCache: void put(java.lang.Object,int,int,java.lang.Object)>(r1, $i0, $i1, r2);

     label3:
        $r7 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader concreteLoader>;

        $r8 = interfaceinvoke $r7.<com.bumptech.glide.load.model.ModelLoader: com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int)>(r2, $i0, $i1);

        return $r8;
    }
protected abstract java.lang.String getUrl(java.lang.Object, int, int) { 
// no body
} 
