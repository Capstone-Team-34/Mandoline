com.bumptech.glide.load.model.GenericLoaderFactory extends java.lang.Object
private static final com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER
private final java.util.Map cachedModelLoaders
private final android.content.Context context
private final java.util.Map modelClassToResourceFactories
    static void <clinit>()
    {
        com.bumptech.glide.load.model.GenericLoaderFactory$1 $r0;

        $r0 = new com.bumptech.glide.load.model.GenericLoaderFactory$1;

        specialinvoke $r0.<com.bumptech.glide.load.model.GenericLoaderFactory$1: void <init>()>();

        <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER> = $r0;

        return;
    }
    public void <init>(android.content.Context)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        android.content.Context $r1;
        java.util.HashMap $r2;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders> = $r2;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.bumptech.glide.load.model.GenericLoaderFactory: android.content.Context context> = $r1;

        return;
    }
    private void cacheModelLoader(java.lang.Class, java.lang.Class, com.bumptech.glide.load.model.ModelLoader)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoader r3;
        java.lang.Object $r4;
        java.util.Map $r5, $r6;
        java.util.HashMap $r7;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoader;

        $r5 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        $r4 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.Map) $r4;

        if $r5 != null goto label1;

        $r7 = new java.util.HashMap;

        $r5 = $r7;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r6 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label1:
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }
    private void cacheNullLoader(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoader $r3;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER>;

        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader)>(r1, r2, $r3);

        return;
    }
    private com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.bumptech.glide.load.model.ModelLoader r5;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.util.Map) $r4;

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.bumptech.glide.load.model.ModelLoader) $r4;

        return r5;

     label1:
        return null;
    }
    private com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2, r8;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.bumptech.glide.load.model.ModelLoaderFactory r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.util.Map) $r4;

        r5 = null;

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r4;

     label1:
        if r5 != null goto label3;

        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r6 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Class) $r4;

        $z0 = virtualinvoke r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r3 = (java.util.Map) $r4;

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r4;

        if r5 == null goto label2;

     label3:
        return r5;
    }
    public com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoader $r3, r4;
        boolean $z0;
        com.bumptech.glide.load.model.ModelLoaderFactory $r5;
        android.content.Context $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        entermonitor r0;

     label1:
        $r3 = specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class,java.lang.Class)>(r1, r2);

        r4 = $r3;

        if $r3 == null goto label5;

        r4 = <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER>;

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

     label2:
        if $z0 == 0 goto label4;

        $r3 = null;

     label3:
        exitmonitor r0;

        return $r3;

     label4:
        goto label3;

     label5:
        $r5 = specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class,java.lang.Class)>(r1, r2);

        if $r5 == null goto label7;

        $r6 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: android.content.Context context>;

        $r3 = interfaceinvoke $r5.<com.bumptech.glide.load.model.ModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory)>($r6, r0);

        r4 = $r3;

        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader)>(r1, r2, $r3);

     label6:
        $r3 = r4;

        goto label3;

     label7:
        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheNullLoader(java.lang.Class,java.lang.Class)>(r1, r2);

     label8:
        goto label6;

     label9:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label5 to label8 with label9;
    }
    public com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class, java.lang.Class, android.content.Context)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        android.content.Context $r3;
        com.bumptech.glide.load.model.ModelLoader $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: android.content.Context;

        entermonitor r0;

     label1:
        $r4 = virtualinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class)>(r1, r2);

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.bumptech.glide.load.model.ModelLoaderFactory register(java.lang.Class, java.lang.Class, com.bumptech.glide.load.model.ModelLoaderFactory)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoaderFactory r3;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;
        java.util.Collection $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Throwable $r9;
        java.util.HashMap $r10;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoaderFactory;

        entermonitor r0;

     label1:
        $r4 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        $r4 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Map) $r5;

        if $r4 != null goto label2;

        $r10 = new java.util.HashMap;

        $r4 = $r10;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r6 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        r3 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r5;

        if r3 == null goto label5;

        $r4 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r7 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map) $r5;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);

     label4:
        if $z0 == 0 goto label3;

        r3 = null;

     label5:
        exitmonitor r0;

        return r3;

     label6:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label4 with label6;
    }
    public com.bumptech.glide.load.model.ModelLoaderFactory unregister(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        java.util.Map $r3;
        com.bumptech.glide.load.model.ModelLoaderFactory r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        entermonitor r0;

     label1:
        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        r4 = null;

        $r3 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (java.util.Map) $r5;

        if $r3 == null goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        r4 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r5;

     label2:
        exitmonitor r0;

        return r4;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
