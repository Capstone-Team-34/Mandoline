com.bumptech.glide.load.model.LazyHeaders$Builder extends java.lang.Object
private static final java.lang.String DEFAULT_ENCODING
private static final java.util.Map DEFAULT_HEADERS
private static final java.lang.String DEFAULT_USER_AGENT
private static final java.lang.String ENCODING_HEADER
private static final java.lang.String USER_AGENT_HEADER
private boolean copyOnModify
private java.util.Map headers
private boolean isEncodingDefault
private boolean isUserAgentDefault
    static void <clinit>()
    {
        java.util.HashMap r0;
        java.lang.String $r1;
        boolean $z0;
        com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory $r2;
        java.util.List $r3;
        java.util.Map $r4;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent");

        <com.bumptech.glide.load.model.LazyHeaders$Builder: java.lang.String DEFAULT_USER_AGENT> = $r1;

        r0 = new java.util.HashMap;

        specialinvoke r0.<java.util.HashMap: void <init>(int)>(2);

        $r1 = <com.bumptech.glide.load.model.LazyHeaders$Builder: java.lang.String DEFAULT_USER_AGENT>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory;

        $r1 = <com.bumptech.glide.load.model.LazyHeaders$Builder: java.lang.String DEFAULT_USER_AGENT>;

        specialinvoke $r2.<com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: void <init>(java.lang.String)>($r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", $r3);

     label1:
        $r2 = new com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory;

        specialinvoke $r2.<com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: void <init>(java.lang.String)>("identity");

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Encoding", $r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);

        <com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map DEFAULT_HEADERS> = $r4;

        return;
    }
    public void <init>()
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.util.Map $r1;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean copyOnModify> = 1;

        $r1 = <com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map DEFAULT_HEADERS>;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers> = $r1;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isEncodingDefault> = 1;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isUserAgentDefault> = 1;

        return;
    }
    private java.util.Map copyHeaders()
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.util.HashMap r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;
        int $i0;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry r7;
        java.util.Collection $r9;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        r1 = new java.util.HashMap;

        $r3 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        specialinvoke r1.<java.util.HashMap: void <init>(int)>($i0);

        $r3 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = new java.util.ArrayList;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.util.Collection) $r8;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

        goto label1;

     label2:
        return r1;
    }
    private void copyIfNecessary()
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $z0 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean copyOnModify>;

        if $z0 == 0 goto label1;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean copyOnModify> = 0;

        $r1 = specialinvoke r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map copyHeaders()>();

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers> = $r1;

     label1:
        return;
    }
    private java.util.List getFactories(java.lang.String)
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        java.util.List r4;
        java.util.ArrayList r5;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.util.List) $r2;

        if r4 != null goto label1;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r5);

        return r5;

     label1:
        return r4;
    }
    public com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String, com.bumptech.glide.load.model.LazyHeaderFactory)
    {
        java.lang.String $r0, $r3;
        com.bumptech.glide.load.model.LazyHeaderFactory $r1;
        com.bumptech.glide.load.model.LazyHeaders$Builder r2;
        boolean $z0;
        java.util.List $r4;

        r2 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.bumptech.glide.load.model.LazyHeaderFactory;

        $z0 = r2.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isEncodingDefault>;

        if $z0 == 0 goto label1;

        $r3 = "Accept-Encoding";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 != 0 goto label2;

     label1:
        $z0 = r2.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isUserAgentDefault>;

        if $z0 == 0 goto label3;

        $r3 = "User-Agent";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

     label2:
        r2 = virtualinvoke r2.<com.bumptech.glide.load.model.LazyHeaders$Builder: com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory)>($r0, $r1);

        return r2;

     label3:
        specialinvoke r2.<com.bumptech.glide.load.model.LazyHeaders$Builder: void copyIfNecessary()>();

        $r4 = specialinvoke r2.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.List getFactories(java.lang.String)>($r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r2;
    }
    public com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.lang.String $r1, $r2;
        com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory $r3;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory;

        specialinvoke $r3.<com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: void <init>(java.lang.String)>($r2);

        r0 = virtualinvoke r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory)>($r1, $r3);

        return r0;
    }
    public com.bumptech.glide.load.model.LazyHeaders build()
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.util.Map $r1;
        com.bumptech.glide.load.model.LazyHeaders $r2;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean copyOnModify> = 1;

        $r2 = new com.bumptech.glide.load.model.LazyHeaders;

        $r1 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        specialinvoke $r2.<com.bumptech.glide.load.model.LazyHeaders: void <init>(java.util.Map)>($r1);

        return $r2;
    }
    public com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String, com.bumptech.glide.load.model.LazyHeaderFactory)
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.lang.String $r1, $r4;
        com.bumptech.glide.load.model.LazyHeaderFactory $r2;
        java.util.Map $r3;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.bumptech.glide.load.model.LazyHeaderFactory;

        specialinvoke r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: void copyIfNecessary()>();

        if $r2 != null goto label3;

        $r3 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        $z0 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isEncodingDefault>;

        if $z0 == 0 goto label2;

        $r4 = "Accept-Encoding";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isEncodingDefault> = 0;

     label2:
        $z0 = r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isUserAgentDefault>;

        if $z0 == 0 goto label4;

        $r4 = "User-Agent";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isUserAgentDefault> = 0;

        return r0;

     label3:
        $r5 = specialinvoke r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.List getFactories(java.lang.String)>($r1);

        interfaceinvoke $r5.<java.util.List: void clear()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label4:
        return r0;
    }
    public com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String, java.lang.String)
    {
        com.bumptech.glide.load.model.LazyHeaders$Builder r0;
        java.lang.String $r1, $r2;
        com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory $r3;

        r0 := @this: com.bumptech.glide.load.model.LazyHeaders$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label2;

        $r3 = null;

     label1:
        r0 = virtualinvoke r0.<com.bumptech.glide.load.model.LazyHeaders$Builder: com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory)>($r1, $r3);

        return r0;

     label2:
        $r3 = new com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory;

        specialinvoke $r3.<com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: void <init>(java.lang.String)>($r2);

        goto label1;
    }
