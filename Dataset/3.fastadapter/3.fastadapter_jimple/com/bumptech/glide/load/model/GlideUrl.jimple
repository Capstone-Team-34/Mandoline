com.bumptech.glide.load.model.GlideUrl extends java.lang.Object
private static final java.lang.String ALLOWED_URI_CHARS
private final com.bumptech.glide.load.model.Headers headers
private java.lang.String safeStringUrl
private java.net.URL safeUrl
private final java.lang.String stringUrl
private final java.net.URL url
    public void <init>(java.lang.String)
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        com.bumptech.glide.load.model.Headers $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.bumptech.glide.load.model.Headers: com.bumptech.glide.load.model.Headers DEFAULT>;

        specialinvoke r0.<com.bumptech.glide.load.model.GlideUrl: void <init>(java.lang.String,com.bumptech.glide.load.model.Headers)>($r1, $r2);

        return;
    }
    public void <init>(java.lang.String, com.bumptech.glide.load.model.Headers)
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        com.bumptech.glide.load.model.Headers $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.bumptech.glide.load.model.Headers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String url must not be empty or null: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Headers must not be null");

        throw $r3;

     label2:
        r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl> = $r1;

        r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL url> = null;

        r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers> = $r2;

        return;
    }
    public void <init>(java.net.URL)
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.net.URL $r1;
        com.bumptech.glide.load.model.Headers $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 := @parameter0: java.net.URL;

        $r2 = <com.bumptech.glide.load.model.Headers: com.bumptech.glide.load.model.Headers DEFAULT>;

        specialinvoke r0.<com.bumptech.glide.load.model.GlideUrl: void <init>(java.net.URL,com.bumptech.glide.load.model.Headers)>($r1, $r2);

        return;
    }
    public void <init>(java.net.URL, com.bumptech.glide.load.model.Headers)
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.net.URL $r1;
        com.bumptech.glide.load.model.Headers $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: com.bumptech.glide.load.model.Headers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URL must not be null!");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Headers must not be null");

        throw $r3;

     label2:
        r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL url> = $r1;

        r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl> = null;

        r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers> = $r2;

        return;
    }
    private java.lang.String getSafeStringUrl()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        boolean $z0;
        java.net.URL $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String safeStringUrl>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        $r1 = r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL url>;

        $r1 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

     label1:
        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "@#&=*+-_.,:!?()/~\'%");

        r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String safeStringUrl> = $r1;

     label2:
        $r1 = r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String safeStringUrl>;

        return $r1;
    }
    private java.net.URL getSafeUrl() throws java.net.MalformedURLException
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        java.net.URL $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL safeUrl>;

        if $r2 != null goto label1;

        $r2 = new java.net.URL;

        $r1 = specialinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getSafeStringUrl()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL safeUrl> = $r2;

     label1:
        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL safeUrl>;

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        com.bumptech.glide.load.model.GlideUrl r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        com.bumptech.glide.load.model.Headers $r5, $r6;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.bumptech.glide.load.model.GlideUrl;

        if $z0 == 0 goto label1;

        r2 = (com.bumptech.glide.load.model.GlideUrl) $r1;

        $r3 = virtualinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getCacheKey()>();

        $r4 = virtualinvoke r2.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getCacheKey()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers>;

        $r6 = r2.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.String getCacheKey()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        java.net.URL $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl>;

        if $r1 == null goto label1;

        $r1 = r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl>;

        return $r1;

     label1:
        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL url>;

        $r1 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        return $r1;
    }
    public java.util.Map getHeaders()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.util.Map $r1;
        com.bumptech.glide.load.model.Headers $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers>;

        $r1 = interfaceinvoke $r2.<com.bumptech.glide.load.model.Headers: java.util.Map getHeaders()>();

        return $r1;
    }
    public int hashCode()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;
        int $i0, $i1;
        com.bumptech.glide.load.model.Headers $r2;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = virtualinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getCacheKey()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = $i0 * 31;

        $r2 = r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.bumptech.glide.load.model.Headers $r3;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getCacheKey()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r3 = r0.<com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String toStringUrl()
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.lang.String $r1;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = specialinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.lang.String getSafeStringUrl()>();

        return $r1;
    }
    public java.net.URL toURL() throws java.net.MalformedURLException
    {
        com.bumptech.glide.load.model.GlideUrl r0;
        java.net.URL $r1;

        r0 := @this: com.bumptech.glide.load.model.GlideUrl;

        $r1 = specialinvoke r0.<com.bumptech.glide.load.model.GlideUrl: java.net.URL getSafeUrl()>();

        return $r1;
    }
