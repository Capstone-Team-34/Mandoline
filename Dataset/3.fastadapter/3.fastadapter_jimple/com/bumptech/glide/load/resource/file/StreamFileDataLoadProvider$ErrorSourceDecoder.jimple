com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder extends java.lang.Object implements com.bumptech.glide.load.ResourceDecoder
    private void <init>()
    {
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder r0;

        r0 := @this: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$1)
    {
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder r0;
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$1 $r1;

        r0 := @this: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder;

        $r1 := @parameter0: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$1;

        specialinvoke r0.<com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder: void <init>()>();

        return;
    }
    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream, int, int)
    {
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        java.lang.Error $r2;

        r0 := @this: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("You cannot decode a File from an InputStream by default, try either #diskCacheStratey(DiskCacheStrategy.SOURCE) to avoid this call or #decoder(ResourceDecoder) to replace this Decoder");

        throw $r2;
    }
    public volatile com.bumptech.glide.load.engine.Resource decode(java.lang.Object, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder r0;
        int $i0, $i1;
        com.bumptech.glide.load.engine.Resource $r1;
        java.lang.Object $r2;
        java.io.InputStream $r3;

        r0 := @this: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = (java.io.InputStream) $r2;

        $r1 = virtualinvoke r0.<com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int)>($r3, $i0, $i1);

        return $r1;
    }
    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder r0;

        r0 := @this: com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder;

        return "";
    }
