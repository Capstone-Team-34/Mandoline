com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream extends java.io.FilterInputStream
private static final java.lang.String TAG
private volatile byte[] buf
private int count
private int marklimit
private int markpos
private int pos
    public void <init>(java.io.InputStream, byte[])
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        java.io.InputStream $r1;
        byte[] $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos> = -1;

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buffer is null or empty");

        throw $r3;

     label2:
        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf> = $r2;

        return;
    }
    private int fillbuf(java.io.InputStream, byte[]) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        java.io.InputStream $r1;
        byte[] r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r3 := @parameter1: byte[];

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if $i0 == -1 goto label1;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        $i0 = $i0 - $i1;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

        if $i0 < $i1 goto label3;

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

        if $i0 <= 0 goto label2;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos> = -1;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = 0;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count> = $i0;

     label2:
        return $i0;

     label3:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if $i0 != 0 goto label8;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

        $i1 = lengthof $r3;

        if $i0 <= $i1 goto label8;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i1 = lengthof $r3;

        if $i0 != $i1 goto label8;

        $i0 = lengthof $r3;

        $i0 = $i0 * 2;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

        if $i0 <= $i1 goto label4;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

     label4:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("BufferedIs", 3);

        if $z0 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate buffer of length: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BufferedIs", $r5);

     label5:
        r2 = newarray (byte)[$i0];

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i0);

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf> = r2;

        $r3 = r2;

     label6:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        $i0 = $i0 - $i1;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i0;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos> = 0;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count> = 0;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = lengthof $r3;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = $i1 - $i2;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r3, $i0, $i1);

        if $i0 > 0 goto label9;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

     label7:
        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count> = $i1;

        return $i0;

     label8:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if $i0 <= 0 goto label6;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        $i1 = lengthof $r3;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        $i1 = $i1 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, $r3, 0, $i1);

        goto label6;

     label9:
        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = $i1 + $i0;

        goto label7;
    }
    private static java.io.IOException streamClosed() throws java.io.IOException
    {
        java.io.IOException $r0;

        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("BufferedInputStream is closed");

        throw $r0;
    }
    public int available() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        java.io.InputStream r1;
        byte[] $r2;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        entermonitor r0;

     label1:
        r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in>;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if $r2 == null goto label2;

        if r1 != null goto label4;

     label2:
        $r3 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label4:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r1.<java.io.InputStream: int available()>();

     label5:
        $i0 = $i0 + $i1;

        exitmonitor r0;

        return $i0;

        catch java.lang.Throwable from label1 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public void close() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf> = null;

        r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in>;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in> = null;

        if r1 == null goto label1;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label1:
        return;
    }
    public void fixMarkLimit()
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        byte[] $r1;
        int $i0;
        java.lang.Throwable $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        $i0 = lengthof $r1;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void mark(int)
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit> = $i0;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean markSupported()
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        return 1;
    }
    public int read() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        java.io.InputStream r1;
        int $i0, $i1, $i2;
        byte[] r2, $r5;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        byte $b3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        $i0 = -1;

        entermonitor r0;

     label1:
        r2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in>;

        if r2 == null goto label2;

        if r1 != null goto label4;

     label2:
        $r3 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label4:
        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        if $i1 < $i2 goto label7;

        $i1 = specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int fillbuf(java.io.InputStream,byte[])>(r1, r2);

     label5:
        if $i1 != -1 goto label7;

     label6:
        exitmonitor r0;

        return $i0;

     label7:
        $r5 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if r2 == $r5 goto label8;

        r2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if r2 != null goto label8;

        $r3 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r3;

     label8:
        $i1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = $i1 - $i2;

        if $i1 <= 0 goto label6;

        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i1 = $i0 + 1;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i1;

        $b3 = r2[$i0];

     label9:
        $i0 = $b3 & 255;

        goto label6;

        catch java.lang.Throwable from label1 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label7 to label9 with label3;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        byte[] $r1, r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.InputStream r2;
        java.io.IOException $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = -1;

        entermonitor r0;

     label01:
        r3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if r3 != null goto label03;

        $r4 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r4;

     label02:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label03:
        if $i0 != 0 goto label05;

        $i2 = 0;

     label04:
        exitmonitor r0;

        return $i2;

     label05:
        r2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in>;

        if r2 != null goto label06;

        $r4 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r4;

     label06:
        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        if $i3 >= $i4 goto label12;

        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i3 = $i3 - $i4;

        if $i3 < $i0 goto label09;

        $i3 = $i0;

     label07:
        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i4, $r1, $i1, $i3);

        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i4 = $i4 + $i3;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i4;

        if $i3 == $i0 goto label08;

        $i4 = virtualinvoke r2.<java.io.InputStream: int available()>();

        if $i4 != 0 goto label10;

     label08:
        $i2 = $i3;

        goto label04;

     label09:
        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i3 = $i3 - $i4;

        goto label07;

     label10:
        $i1 = $i1 + $i3;

        $i3 = $i0 - $i3;

     label11:
        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if $i4 != -1 goto label13;

        $i4 = lengthof r3;

        if $i3 < $i4 goto label13;

        $i5 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i3);

        $i4 = $i5;

        if $i5 != -1 goto label17;

        if $i3 == $i0 goto label04;

        $i2 = $i0 - $i3;

        goto label04;

     label12:
        $i3 = $i0;

        goto label11;

     label13:
        $i4 = specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int fillbuf(java.io.InputStream,byte[])>(r2, r3);

        if $i4 != -1 goto label14;

        if $i3 == $i0 goto label04;

        $i2 = $i0 - $i3;

        goto label04;

     label14:
        $r6 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if r3 == $r6 goto label15;

        r3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if r3 != null goto label15;

        $r4 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r4;

     label15:
        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i5 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i4 = $i4 - $i5;

        if $i4 < $i3 goto label18;

        $i4 = $i3;

     label16:
        $i5 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i5, $r1, $i1, $i4);

        $i5 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i5 = $i5 + $i4;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i5;

     label17:
        $i3 = $i3 - $i4;

        if $i3 != 0 goto label19;

        $i2 = $i0;

        goto label04;

     label18:
        $i4 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i5 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i4 = $i4 - $i5;

        goto label16;

     label19:
        $i5 = virtualinvoke r2.<java.io.InputStream: int available()>();

     label20:
        if $i5 != 0 goto label21;

        $i2 = $i0 - $i3;

        goto label04;

     label21:
        $i1 = $i1 + $i4;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label05 to label20 with label02;
    }
    public void reset() throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        byte[] $r1;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        int $i0;
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException $r4;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        if $r1 != null goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream is closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if -1 != $i0 goto label4;

        $r4 = new com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException;

        specialinvoke $r4.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException: void <init>(java.lang.String)>("Mark has been invalidated");

        throw $r4;

     label4:
        $i0 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i0;

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    public long skip(long) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream r0;
        byte[] r1;
        java.io.InputStream r2;
        long l0, $l4, $l5, $l6;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        byte $b1;
        int $i2, $i3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream;

        l0 := @parameter0: long;

        entermonitor r0;

     label01:
        r1 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf>;

        r2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.InputStream in>;

        if r1 != null goto label03;

        $r3 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r3;

     label02:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label03:
        $b1 = l0 cmp 1L;

        if $b1 >= 0 goto label05;

        l0 = 0L;

     label04:
        exitmonitor r0;

        return l0;

     label05:
        if r2 != null goto label07;

     label06:
        $r3 = staticinvoke <com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>();

        throw $r3;

     label07:
        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i2 = $i2 - $i3;

        $l4 = (long) $i2;

        $b1 = $l4 cmp l0;

        if $b1 < 0 goto label08;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $l4 = (long) $i2;

        $l4 = $l4 + l0;

        $i2 = (int) $l4;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i2;

        goto label04;

     label08:
        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i2 = $i2 - $i3;

        $l4 = (long) $i2;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i2;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos>;

        if $i2 == -1 goto label11;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit>;

        $l5 = (long) $i2;

        $b1 = l0 cmp $l5;

        if $b1 > 0 goto label11;

        $i2 = specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int fillbuf(java.io.InputStream,byte[])>(r2, r1);

        if $i2 != -1 goto label09;

        l0 = $l4;

        goto label04;

     label09:
        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        $i3 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $i2 = $i2 - $i3;

        $l5 = (long) $i2;

        $l6 = l0 - $l4;

        $b1 = $l5 cmp $l6;

        if $b1 < 0 goto label10;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $l5 = (long) $i2;

        $l4 = l0 - $l4;

        $l4 = $l5 + $l4;

        $i2 = (int) $l4;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i2;

        goto label04;

     label10:
        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        l0 = (long) $i2;

        l0 = l0 + $l4;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos>;

        $l4 = (long) $i2;

        $i2 = r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count>;

        r0.<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos> = $i2;

        l0 = l0 - $l4;

        goto label04;

     label11:
        l0 = l0 - $l4;

        l0 = virtualinvoke r2.<java.io.InputStream: long skip(long)>(l0);

     label12:
        l0 = $l4 + l0;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label06 to label12 with label02;
    }
