com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType extends java.lang.Enum
private static final com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] $VALUES
public static final enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType GIF
public static final enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType JPEG
public static final enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG
public static final enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG_A
public static final enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType UNKNOWN
private final boolean hasAlpha
    static void <clinit>()
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType $r0;
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] $r1;

        $r0 = new com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: void <init>(java.lang.String,int,boolean)>("GIF", 0, 1);

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType GIF> = $r0;

        $r0 = new com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: void <init>(java.lang.String,int,boolean)>("JPEG", 1, 0);

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType JPEG> = $r0;

        $r0 = new com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: void <init>(java.lang.String,int,boolean)>("PNG_A", 2, 1);

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG_A> = $r0;

        $r0 = new com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: void <init>(java.lang.String,int,boolean)>("PNG", 3, 0);

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG> = $r0;

        $r0 = new com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        specialinvoke $r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: void <init>(java.lang.String,int,boolean)>("UNKNOWN", 4, 0);

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType UNKNOWN> = $r0;

        $r1 = newarray (com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType)[5];

        $r0 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType GIF>;

        $r1[0] = $r0;

        $r0 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType JPEG>;

        $r1[1] = $r0;

        $r0 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG_A>;

        $r1[2] = $r0;

        $r0 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType PNG>;

        $r1[3] = $r0;

        $r0 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType UNKNOWN>;

        $r1[4] = $r0;

        <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, boolean)
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: boolean hasAlpha> = $z0;

        return;
    }
    public static com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/bumptech/glide/load/resource/bitmap/ImageHeaderParser$ImageType;", $r0);

        $r2 = (com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType) $r1;

        return $r2;
    }
    public static com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] values()
    {
        java.lang.Object $r0;
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] $r1;

        $r1 = <com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[]) $r0;

        return $r1;
    }
    public boolean hasAlpha()
    {
        com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType;

        z0 = r0.<com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType: boolean hasAlpha>;

        return z0;
    }
