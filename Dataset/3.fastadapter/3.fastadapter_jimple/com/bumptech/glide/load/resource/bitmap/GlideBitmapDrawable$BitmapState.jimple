com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState extends android.graphics.drawable.Drawable$ConstantState
private static final android.graphics.Paint DEFAULT_PAINT
private static final int DEFAULT_PAINT_FLAGS
private static final int GRAVITY
final android.graphics.Bitmap bitmap
android.graphics.Paint paint
int targetDensity
    static void <clinit>()
    {
        android.graphics.Paint $r0;

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>(int)>(6);

        <com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint DEFAULT_PAINT> = $r0;

        return;
    }
    public void <init>(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        android.graphics.Bitmap $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        $r2 = <com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint DEFAULT_PAINT>;

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint> = $r2;

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap> = $r1;

        return;
    }
    void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0, $r1;
        android.graphics.Bitmap $r2;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r2 = $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Bitmap bitmap>;

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r2);

        $i0 = $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: int targetDensity>;

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: int targetDensity> = $i0;

        return;
    }
    public int getChangingConfigurations()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        return 0;
    }
    void mutatePaint()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 = <com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint DEFAULT_PAINT>;

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        if $r1 != $r2 goto label1;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>(int)>(6);

        r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint> = $r1;

     label1:
        return;
    }
    public android.graphics.drawable.Drawable newDrawable()
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 = new com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        specialinvoke $r1.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: void <init>(android.content.res.Resources,com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)>(null, r0);

        return $r1;
    }
    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        android.content.res.Resources $r1;
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 = new com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;

        specialinvoke $r2.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable: void <init>(android.content.res.Resources,com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState)>($r1, r0);

        return $r2;
    }
    void setAlpha(int)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void mutatePaint()>();

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }
    void setColorFilter(android.graphics.ColorFilter)
    {
        com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState;

        $r1 := @parameter0: android.graphics.ColorFilter;

        virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: void mutatePaint()>();

        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }
