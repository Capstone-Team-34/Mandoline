com.mikepenz.aboutlibraries.util.RippleForegroundListener extends java.lang.Object implements android.view.View$OnTouchListener
private int rippleViewId
    public void <init>(int)
    {
        com.mikepenz.aboutlibraries.util.RippleForegroundListener r0;
        int $i0;

        r0 := @this: com.mikepenz.aboutlibraries.util.RippleForegroundListener;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.aboutlibraries.util.RippleForegroundListener: int rippleViewId> = -1;

        r0.<com.mikepenz.aboutlibraries.util.RippleForegroundListener: int rippleViewId> = $i0;

        return;
    }
    public android.view.View findRippleView(android.view.View)
    {
        com.mikepenz.aboutlibraries.util.RippleForegroundListener r0;
        int $i0, $i1;
        android.view.View r1;
        android.view.ViewParent $r2;
        boolean $z0;

        r0 := @this: com.mikepenz.aboutlibraries.util.RippleForegroundListener;

        r1 := @parameter0: android.view.View;

        $i1 = virtualinvoke r1.<android.view.View: int getId()>();

        $i0 = r0.<com.mikepenz.aboutlibraries.util.RippleForegroundListener: int rippleViewId>;

        if $i1 != $i0 goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        r1 = (android.view.View) $r2;

        r1 = virtualinvoke r0.<com.mikepenz.aboutlibraries.util.RippleForegroundListener: android.view.View findRippleView(android.view.View)>(r1);

        return r1;

     label2:
        return null;
    }
    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.mikepenz.aboutlibraries.util.RippleForegroundListener r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        float f0, f1, $f2;
        int $i0;

        r0 := @this: com.mikepenz.aboutlibraries.util.RippleForegroundListener;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        f1 = (float) $i0;

        f0 = f0 + f1;

        f1 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $f2 = (float) $i0;

        f1 = f1 + $f2;

        $r1 = virtualinvoke r0.<com.mikepenz.aboutlibraries.util.RippleForegroundListener: android.view.View findRippleView(android.view.View)>($r1);

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        virtualinvoke $r1.<android.view.View: void drawableHotspotChanged(float,float)>(f0, f1);

     label2:
        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        virtualinvoke $r1.<android.view.View: void setPressed(boolean)>(1);

        return 0;

     label5:
        virtualinvoke $r1.<android.view.View: void setPressed(boolean)>(0);

        return 0;
    }
