com.mikepenz.aboutlibraries.util.UIUtils extends java.lang.Object
    public void <init>()
    {
        com.mikepenz.aboutlibraries.util.UIUtils r0;

        r0 := @this: com.mikepenz.aboutlibraries.util.UIUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static float convertDpToPixel(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 * $f1;

        return $f0;
    }
    public static float convertPixelsToDp(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 / $f1;

        return $f0;
    }
    public static android.graphics.drawable.Drawable getCompatDrawable(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r0, $i0);

        return $r1;
    }
    public static int getSelectableBackground(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.util.TypedValue r1;
        android.content.res.Resources$Theme $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <com.mikepenz.aboutlibraries.R$attr: int selectableItemBackground>;

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        $i0 = r1.<android.util.TypedValue: int resourceId>;

        return $i0;

     label1:
        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843056, r1, 1);

        $i0 = r1.<android.util.TypedValue: int resourceId>;

        return $i0;
    }
    public static int getThemeAttributeDimensionSize(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.TypedArray r1, $r4;
        android.content.res.Resources$Theme $r2;
        int[] $r3;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r1 = null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = newarray (int)[1];

        $r3[0] = $i0;

        $r4 = virtualinvoke $r2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

     label2:
        r1 = $r4;

     label3:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

     label4:
        if $r4 == null goto label7;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return $i0;

     label5:
        $r5 := @caughtexception;

        if r1 == null goto label6;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

     label6:
        throw $r5;

     label7:
        return $i0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    public static int getThemeColor(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.util.TypedValue r1;
        android.content.res.Resources$Theme $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        if $z0 == 0 goto label1;

        $i0 = r1.<android.util.TypedValue: int data>;

        return $i0;

     label1:
        return 0;
    }
    public static int getThemeColorFromAttrOrRes(android.content.Context, int, int)
    {
        android.content.Context $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <com.mikepenz.aboutlibraries.util.UIUtils: int getThemeColor(android.content.Context,int)>($r0, $i0);

        if $i0 != 0 goto label1;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r0, $i1);

     label1:
        return $i0;
    }
    public static void setBackground(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = staticinvoke <com.mikepenz.aboutlibraries.util.UIUtils: android.graphics.drawable.Drawable getCompatDrawable(android.content.Context,int)>($r1, $i0);

        staticinvoke <com.mikepenz.aboutlibraries.util.UIUtils: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r0, $r2);

        return;
    }
    public static void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.view.View $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        virtualinvoke $r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        virtualinvoke $r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }
