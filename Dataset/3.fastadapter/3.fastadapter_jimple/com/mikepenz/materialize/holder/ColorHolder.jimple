com.mikepenz.materialize.holder.ColorHolder extends java.lang.Object
private int mColorInt
private int mColorRes
    public void <init>()
    {
        com.mikepenz.materialize.holder.ColorHolder r0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt> = 0;

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes> = -1;

        return;
    }
    public static void applyToOr(com.mikepenz.materialize.holder.ColorHolder, android.widget.TextView, android.content.res.ColorStateList)
    {
        com.mikepenz.materialize.holder.ColorHolder $r0;
        android.widget.TextView $r1;
        android.content.res.ColorStateList $r2;

        $r0 := @parameter0: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter1: android.widget.TextView;

        $r2 := @parameter2: android.content.res.ColorStateList;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        virtualinvoke $r0.<com.mikepenz.materialize.holder.ColorHolder: void applyToOr(android.widget.TextView,android.content.res.ColorStateList)>($r1, $r2);

        return;

     label1:
        if $r1 == null goto label2;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r2);

     label2:
        return;
    }
    public static void applyToOrTransparent(com.mikepenz.materialize.holder.ColorHolder, android.content.Context, android.graphics.drawable.GradientDrawable)
    {
        com.mikepenz.materialize.holder.ColorHolder $r0;
        android.content.Context $r1;
        android.graphics.drawable.GradientDrawable $r2;

        $r0 := @parameter0: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: android.graphics.drawable.GradientDrawable;

        if $r0 == null goto label1;

        if $r2 == null goto label1;

        virtualinvoke $r0.<com.mikepenz.materialize.holder.ColorHolder: void applyTo(android.content.Context,android.graphics.drawable.GradientDrawable)>($r1, $r2);

        return;

     label1:
        if $r2 == null goto label2;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable: void setColor(int)>(0);

     label2:
        return;
    }
    public static int color(com.mikepenz.materialize.holder.ColorHolder, android.content.Context)
    {
        com.mikepenz.materialize.holder.ColorHolder $r0;
        android.content.Context $r1;
        int $i0;

        $r0 := @parameter0: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter1: android.content.Context;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>($r1);

        return $i0;
    }
    public static int color(com.mikepenz.materialize.holder.ColorHolder, android.content.Context, int, int)
    {
        com.mikepenz.materialize.holder.ColorHolder $r0;
        android.content.Context $r1;
        int $i0, $i1;

        $r0 := @parameter0: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter1: android.content.Context;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $r0 != null goto label1;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>($r1, $i0, $i1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context,int,int)>($r1, $i0, $i1);

        return $i0;
    }
    public static com.mikepenz.materialize.holder.ColorHolder fromColor(int)
    {
        int $i0;
        com.mikepenz.materialize.holder.ColorHolder r0;

        $i0 := @parameter0: int;

        r0 = new com.mikepenz.materialize.holder.ColorHolder;

        specialinvoke r0.<com.mikepenz.materialize.holder.ColorHolder: void <init>()>();

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt> = $i0;

        return r0;
    }
    public static com.mikepenz.materialize.holder.ColorHolder fromColorRes(int)
    {
        int $i0;
        com.mikepenz.materialize.holder.ColorHolder r0;

        $i0 := @parameter0: int;

        r0 = new com.mikepenz.materialize.holder.ColorHolder;

        specialinvoke r0.<com.mikepenz.materialize.holder.ColorHolder: void <init>()>();

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes> = $i0;

        return r0;
    }
    public void applyTo(android.content.Context, android.graphics.drawable.GradientDrawable)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        android.content.Context $r1;
        android.graphics.drawable.GradientDrawable $r2;
        int $i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i0);

        return;

     label1:
        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        if $i0 == -1 goto label2;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i0);

     label2:
        return;
    }
    public void applyToBackground(android.view.View)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter0: android.view.View;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        virtualinvoke $r1.<android.view.View: void setBackgroundColor(int)>($i0);

        return;

     label1:
        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        if $i0 == -1 goto label2;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        virtualinvoke $r1.<android.view.View: void setBackgroundResource(int)>($i0);

     label2:
        return;
    }
    public void applyToOr(android.widget.TextView, android.content.res.ColorStateList)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        android.widget.TextView $r1;
        android.content.res.ColorStateList $r2;
        int $i0;
        android.content.Context $r3;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.content.res.ColorStateList;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

        return;

     label1:
        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        if $i0 == -1 goto label2;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.content.Context getContext()>();

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i0);

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

        return;

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r2);

     label3:
        return;
    }
    public int color(android.content.Context)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter0: android.content.Context;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        if $i0 != 0 goto label1;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        if $i0 == -1 goto label1;

        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, $i0);

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt> = $i0;

     label1:
        $i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        return $i0;
    }
    public int color(android.content.Context, int, int)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        android.content.Context $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.mikepenz.materialize.holder.ColorHolder: int color(android.content.Context)>($r1);

        if $i2 != 0 goto label1;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>($r1, $i0, $i1);

        return $i0;

     label1:
        return $i2;
    }
    public int getColorInt()
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        int i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt>;

        return i0;
    }
    public int getColorRes()
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        int i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        i0 = r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes>;

        return i0;
    }
    public void setColorInt(int)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        int $i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $i0 := @parameter0: int;

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorInt> = $i0;

        return;
    }
    public void setColorRes(int)
    {
        com.mikepenz.materialize.holder.ColorHolder r0;
        int $i0;

        r0 := @this: com.mikepenz.materialize.holder.ColorHolder;

        $i0 := @parameter0: int;

        r0.<com.mikepenz.materialize.holder.ColorHolder: int mColorRes> = $i0;

        return;
    }
