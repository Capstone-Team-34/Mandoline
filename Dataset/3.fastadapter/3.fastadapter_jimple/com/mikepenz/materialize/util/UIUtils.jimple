com.mikepenz.materialize.util.UIUtils extends java.lang.Object
    public void <init>()
    {
        com.mikepenz.materialize.util.UIUtils r0;

        r0 := @this: com.mikepenz.materialize.util.UIUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int adjustAlpha(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = $i1 << 24;

        $i0 = 16777215 & $i0;

        $i0 = $i1 | $i0;

        return $i0;
    }
    public static float convertDpToPixel(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 * $f1;

        return $f0;
    }
    public static float convertPixelsToDp(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 / $f1;

        return $f0;
    }
    public static int getActionBarHeight(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.mikepenz.materialize.R$attr: int actionBarSize>;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getThemeAttributeDimensionSize(android.content.Context,int)>($r0, $i0);

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.mikepenz.materialize.R$dimen: int abc_action_bar_default_height_material>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

     label1:
        return $i0;
    }
    public static android.graphics.drawable.Drawable getCompatDrawable(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;
        android.content.res.Resources$Theme $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 21 goto label3;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label2:
        return $r2;

     label3:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r3);

     label4:
        return $r2;

     label5:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public static android.graphics.drawable.StateListDrawable getIconStateList(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0, $r1;
        android.graphics.drawable.StateListDrawable r2;
        int[] $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        r2 = new android.graphics.drawable.StateListDrawable;

        specialinvoke r2.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r3 = newarray (int)[1];

        $r3[0] = 16842913;

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r1);

        $r3 = newarray (int)[0];

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r0);

        return r2;
    }
    public static int getNavigationBarHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1, $r2;
        android.content.res.Configuration $r3;
        int $i0;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int orientation>;

        if $i0 != 1 goto label2;

        $r4 = "navigation_bar_height";

     label1:
        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r4, "dimen", "android");

        if $i0 <= 0 goto label3;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;

     label2:
        $r4 = "navigation_bar_height_landscape";

        goto label1;

     label3:
        return 0;
    }
    public static int getScreenHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        return i0;
    }
    public static int getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        return i0;
    }
    public static android.graphics.drawable.Drawable getSelectableBackground(android.content.Context)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getSelectableBackgroundRes(android.content.Context)>($r0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 11 goto label1;

        $r1 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r0, $i0);

        return $r1;

     label1:
        $r1 = staticinvoke <com.mikepenz.materialize.util.UIUtils: android.graphics.drawable.Drawable getCompatDrawable(android.content.Context,int)>($r0, $i0);

        return $r1;
    }
    public static android.graphics.drawable.StateListDrawable getSelectableBackground(android.content.Context, int, boolean)
    {
        android.content.Context $r0;
        int $i0;
        boolean $z0;
        android.graphics.drawable.ColorDrawable r1;
        android.graphics.drawable.StateListDrawable r2;
        int[] $r3;
        android.graphics.drawable.Drawable $r4;
        android.content.res.Resources $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        r2 = new android.graphics.drawable.StateListDrawable;

        specialinvoke r2.<android.graphics.drawable.StateListDrawable: void <init>()>();

        r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        $r3 = newarray (int)[1];

        $r3[0] = 16842913;

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, r1);

        $r3 = newarray (int)[0];

        $r4 = staticinvoke <com.mikepenz.materialize.util.UIUtils: android.graphics.drawable.Drawable getSelectableBackground(android.content.Context)>($r0);

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r4);

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694720);

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void setEnterFadeDuration(int)>($i0);

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void setExitFadeDuration(int)>($i0);

     label1:
        return r2;
    }
    public static int getSelectableBackgroundRes(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.util.TypedValue r1;
        android.content.res.Resources$Theme $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <com.mikepenz.materialize.R$attr: int selectableItemBackground>;

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        $i0 = r1.<android.util.TypedValue: int resourceId>;

        return $i0;

     label1:
        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843056, r1, 1);

        $i0 = r1.<android.util.TypedValue: int resourceId>;

        return $i0;
    }
    public static android.graphics.drawable.StateListDrawable getSelectablePressedBackground(android.content.Context, int, int, boolean)
    {
        android.content.Context $r0;
        int $i0, $i1;
        boolean $z0;
        android.graphics.drawable.ColorDrawable r1;
        android.graphics.drawable.StateListDrawable $r2;
        int[] $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r2 = staticinvoke <com.mikepenz.materialize.util.UIUtils: android.graphics.drawable.StateListDrawable getSelectableBackground(android.content.Context,int,boolean)>($r0, $i0, $z0);

        r1 = new android.graphics.drawable.ColorDrawable;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int adjustAlpha(int,int)>($i0, $i1);

        specialinvoke r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        $r3 = newarray (int)[1];

        $r3[0] = 16842919;

        virtualinvoke $r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, r1);

        return $r2;
    }
    public static int getStatusBarHeight(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getStatusBarHeight(android.content.Context,boolean)>($r0, 0);

        return $i0;
    }
    public static int getStatusBarHeight(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        int i0, $i1;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        i0 = 0;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("status_bar_height", "dimen", "android");

        if $i1 <= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.mikepenz.materialize.R$dimen: int tool_bar_top_padding>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        if $i1 != 0 goto label2;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        if i0 == 0 goto label3;

        return i0;

     label3:
        return $i1;
    }
    public static int getThemeAttributeDimensionSize(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.TypedArray r1, $r4;
        android.content.res.Resources$Theme $r2;
        int[] $r3;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r1 = null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = newarray (int)[1];

        $r3[0] = $i0;

        $r4 = virtualinvoke $r2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

     label2:
        r1 = $r4;

     label3:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

     label4:
        if $r4 == null goto label7;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return $i0;

     label5:
        $r5 := @caughtexception;

        if r1 == null goto label6;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

     label6:
        throw $r5;

     label7:
        return $i0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
    public static int getThemeColor(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.util.TypedValue r1;
        android.content.res.Resources$Theme $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        if $z0 == 0 goto label1;

        $i0 = r1.<android.util.TypedValue: int data>;

        return $i0;

     label1:
        return 0;
    }
    public static int getThemeColorFromAttrOrRes(android.content.Context, int, int)
    {
        android.content.Context $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getThemeColor(android.content.Context,int)>($r0, $i0);

        if $i0 != 0 goto label1;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r0, $i1);

     label1:
        return $i0;
    }
    public static void setAlpha(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.view.animation.AlphaAnimation r1;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        r1 = new android.view.animation.AlphaAnimation;

        specialinvoke r1.<android.view.animation.AlphaAnimation: void <init>(float,float)>($f0, $f0);

        virtualinvoke r1.<android.view.animation.AlphaAnimation: void setDuration(long)>(0L);

        virtualinvoke r1.<android.view.animation.AlphaAnimation: void setFillAfter(boolean)>(1);

        virtualinvoke $r0.<android.view.View: void startAnimation(android.view.animation.Animation)>(r1);

        return;

     label1:
        virtualinvoke $r0.<android.view.View: void setAlpha(float)>($f0);

        return;
    }
    public static void setBackground(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = staticinvoke <com.mikepenz.materialize.util.UIUtils: android.graphics.drawable.Drawable getCompatDrawable(android.content.Context,int)>($r1, $i0);

        staticinvoke <com.mikepenz.materialize.util.UIUtils: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r0, $r2);

        return;
    }
    public static void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.view.View $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        virtualinvoke $r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        virtualinvoke $r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    public static void setFlag(android.app.Activity, int, boolean)
    {
        android.app.Activity $r0;
        int $i0, $i1;
        boolean $z0;
        android.view.Window $r1;
        android.view.WindowManager$LayoutParams $r2;

        $r0 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        if $z0 == 0 goto label2;

        $i1 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i0 = $i1 | $i0;

        $r2.<android.view.WindowManager$LayoutParams: int flags> = $i0;

     label1:
        virtualinvoke $r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>($r2);

        return;

     label2:
        $i1 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i0 = $i0 ^ -1;

        $i0 = $i1 & $i0;

        $r2.<android.view.WindowManager$LayoutParams: int flags> = $i0;

        goto label1;
    }
    public static void setTranslucentNavigationFlag(android.app.Activity, boolean)
    {
        android.app.Activity $r0;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        staticinvoke <com.mikepenz.materialize.util.UIUtils: void setFlag(android.app.Activity,int,boolean)>($r0, 134217728, $z0);

     label1:
        return;
    }
    public static void setTranslucentStatusFlag(android.app.Activity, boolean)
    {
        android.app.Activity $r0;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        staticinvoke <com.mikepenz.materialize.util.UIUtils: void setFlag(android.app.Activity,int,boolean)>($r0, 67108864, $z0);

     label1:
        return;
    }
