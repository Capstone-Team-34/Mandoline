com.mikepenz.fastadapter.adapters.ItemAdapter extends com.mikepenz.fastadapter.AbstractAdapter implements com.mikepenz.fastadapter.IItemAdapter
protected java.util.Comparator mComparator
private com.mikepenz.fastadapter.IItemAdapter$Predicate mFilterPredicate
private final com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter mItemFilter
protected com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilterListener mItemFilterListener
private java.util.List mItems
private boolean mUseIdDistributor
    public void <init>()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.ArrayList $r1;
        com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        specialinvoke r0.<com.mikepenz.fastadapter.AbstractAdapter: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems> = $r1;

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor> = 1;

        $r2 = new com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter;

        specialinvoke $r2.<com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter: void <init>(com.mikepenz.fastadapter.adapters.ItemAdapter)>(r0);

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter mItemFilter> = $r2;

        return;
    }
    static java.util.List access$000(com.mikepenz.fastadapter.adapters.ItemAdapter)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter $r0;
        java.util.List r1;

        $r0 := @parameter0: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 = $r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        return r1;
    }
    static com.mikepenz.fastadapter.IItemAdapter$Predicate access$100(com.mikepenz.fastadapter.adapters.ItemAdapter)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter $r0;
        com.mikepenz.fastadapter.IItemAdapter$Predicate r1;

        $r0 := @parameter0: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 = $r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.IItemAdapter$Predicate mFilterPredicate>;

        return r1;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(int,java.util.List)>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(int, com.mikepenz.fastadapter.IItem[])
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        com.mikepenz.fastadapter.IItem[] $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mikepenz.fastadapter.IItem[];

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(int,com.mikepenz.fastadapter.IItem[])>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(java.util.List)>($r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(com.mikepenz.fastadapter.IItem[])
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.IItem[] $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: com.mikepenz.fastadapter.IItem[];

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(com.mikepenz.fastadapter.IItem[])>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter add(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1;
        java.util.List r1, $r2;
        boolean $z0;
        com.mikepenz.fastadapter.FastAdapter $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        if r1 == null goto label2;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i1 = $i0 - $i1;

        interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>($i1, r1);

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeInserted(int,int)>($i0, $i1);

     label2:
        return r0;
    }
    public final transient com.mikepenz.fastadapter.adapters.ItemAdapter add(int, com.mikepenz.fastadapter.IItem[])
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        com.mikepenz.fastadapter.IItem[] r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: com.mikepenz.fastadapter.IItem[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(int,java.util.List)>($i0, $r2);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter add(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List r1, $r2;
        boolean $z0;
        int $i0, $i1;
        java.util.Comparator $r3;
        com.mikepenz.fastadapter.FastAdapter $r4, $r5;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $r5 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: int getOrder()>();

        $i1 = virtualinvoke $r5.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        $i0 = $i1 + $i0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeInserted(int,int)>($i0, $i1);

        return r0;

     label2:
        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r3);

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

        return r0;
    }
    public final transient com.mikepenz.fastadapter.adapters.ItemAdapter add(com.mikepenz.fastadapter.IItem[])
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.IItem[] r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IItem[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter add(java.util.List)>($r2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter clear()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter clear()>();

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter clear()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List $r1;
        int $i0, $i1;
        com.mikepenz.fastadapter.FastAdapter $r2, $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: int getOrder()>();

        $i1 = virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i1, $i0);

        return r0;
    }
    public void filter(java.lang.CharSequence)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.lang.CharSequence $r1;
        com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter mItemFilter>;

        virtualinvoke $r2.<com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter: void filter(java.lang.CharSequence)>($r1);

        return;
    }
    public com.mikepenz.fastadapter.IItem getAdapterItem(int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        java.lang.Object $r1;
        java.util.List $r2;
        com.mikepenz.fastadapter.IItem $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.mikepenz.fastadapter.IItem) $r1;

        return $r3;
    }
    public int getAdapterItemCount()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
    public java.util.List getAdapterItems()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        return r1;
    }
    public int getAdapterPosition(com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.IItem r1, $r4;
        java.util.List $r2;
        int $i0, i1;
        java.lang.Object $r3;
        long $l2, $l3;
        byte $b4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IItem;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (com.mikepenz.fastadapter.IItem) $r3;

        $l2 = interfaceinvoke $r4.<com.mikepenz.fastadapter.IItem: long getIdentifier()>();

        $l3 = interfaceinvoke r1.<com.mikepenz.fastadapter.IItem: long getIdentifier()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }
    public java.util.Comparator getComparator()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.Comparator r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        return r1;
    }
    public int getGlobalPosition(int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1;
        com.mikepenz.fastadapter.FastAdapter $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: int getOrder()>();

        $i1 = virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        $i0 = $i1 + $i0;

        return $i0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter getItemFilter()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilter mItemFilter>;

        return r1;
    }
    public int getOrder()
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        return 500;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter move(int, int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1, $i2, $i3;
        com.mikepenz.fastadapter.FastAdapter $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        com.mikepenz.fastadapter.IItem r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i3 = $i0 - $i2;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        r4 = (com.mikepenz.fastadapter.IItem) $r3;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i3 = $i0 - $i2;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i3);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i2 = $i1 - $i2;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i2, r4);

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemMoved(int,int)>($i0, $i1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter remove(int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter remove(int)>($i0);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter remove(int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1;
        java.util.List $r1;
        com.mikepenz.fastadapter.FastAdapter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i1 = $i0 - $i1;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRemoved(int)>($i0);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter removeRange(int, int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter removeRange(int,int)>($i0, $i1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter removeRange(int, int)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1, $i2, $i3, i4;
        java.util.List $r1;
        com.mikepenz.fastadapter.FastAdapter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i3 = virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i2 = $i2 - $i0;

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        i4 = 0;

     label1:
        if i4 >= $i2 goto label2;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i1 = $i0 - $i3;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i0, $i2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter set(int, com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0;
        com.mikepenz.fastadapter.IItem $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mikepenz.fastadapter.IItem;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter set(int,com.mikepenz.fastadapter.IItem)>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter set(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter set(java.util.List)>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter set(int, com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        int $i0, $i1;
        com.mikepenz.fastadapter.IItem r1;
        boolean $z0;
        java.util.List $r2;
        com.mikepenz.fastadapter.FastAdapter $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: com.mikepenz.fastadapter.IItem;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable)>(r1);

     label1:
        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i1 = $i0 - $i1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: void mapPossibleType(com.mikepenz.fastadapter.IItem)>(r1);

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemChanged(int)>($i0);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter set(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List r1, $r3;
        boolean $z0;
        com.mikepenz.fastadapter.FastAdapter $r2;
        int $i0, $i1, $i2;
        java.util.Comparator $r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void collapse(boolean)>(0);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: int getOrder()>();

        $i2 = virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i2);

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        if r1 == $r3 goto label3;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label2:
        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label3:
        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r4 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        if $r4 == null goto label4;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r4 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);

     label4:
        if $i0 <= $i1 goto label6;

        if $i1 <= 0 goto label5;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeChanged(int,int)>($i2, $i1);

     label5:
        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = $i2 + $i1;

        $i0 = $i0 - $i1;

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeInserted(int,int)>($i2, $i0);

        return r0;

     label6:
        if $i0 <= 0 goto label7;

        if $i0 >= $i1 goto label7;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeChanged(int,int)>($i2, $i0);

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = $i2 + $i0;

        $i0 = $i1 - $i0;

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i2, $i0);

        return r0;

     label7:
        if $i0 != 0 goto label8;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i2, $i1);

        return r0;

     label8:
        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter setNewList(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter setNewList(java.util.List)>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter setNewList(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.List r1;
        java.util.Comparator $r2;
        com.mikepenz.fastadapter.FastAdapter $r3;
        boolean $z0;
        java.util.ArrayList $r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems> = $r4;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        if $r2 == null goto label2;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r2);

     label2:
        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

        return r0;
    }
    public java.lang.Object setSubItems(com.mikepenz.fastadapter.IExpandable, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.IExpandable r1;
        java.util.List r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IExpandable;

        r2 := @parameter1: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: java.util.List checkIds(java.util.List)>(r2);

     label1:
        $r3 = interfaceinvoke r1.<com.mikepenz.fastadapter.IExpandable: java.lang.Object withSubItems(java.util.List)>(r2);

        return $r3;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter withComparator(java.util.Comparator)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.Comparator r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: java.util.Comparator;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter withComparator(java.util.Comparator,boolean)>(r1, 1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter withComparator(java.util.Comparator, boolean)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        java.util.Comparator r1;
        boolean $z0;
        com.mikepenz.fastadapter.FastAdapter $r2;
        java.util.List $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: java.util.Comparator;

        $z0 := @parameter1: boolean;

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator> = r1;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        if $r3 == null goto label1;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        if r1 == null goto label1;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.List mItems>;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, r1);

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

     label1:
        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter withFilterPredicate(com.mikepenz.fastadapter.IItemAdapter$Predicate)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.IItemAdapter$Predicate r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IItemAdapter$Predicate;

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.IItemAdapter$Predicate mFilterPredicate> = r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter withItemFilterListener(com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilterListener)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilterListener $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $r1 := @parameter0: com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilterListener;

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: com.mikepenz.fastadapter.adapters.ItemAdapter$ItemFilterListener mItemFilterListener> = $r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ItemAdapter withUseIdDistributor(boolean)
    {
        com.mikepenz.fastadapter.adapters.ItemAdapter r0;
        boolean $z0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ItemAdapter;

        $z0 := @parameter0: boolean;

        r0.<com.mikepenz.fastadapter.adapters.ItemAdapter: boolean mUseIdDistributor> = $z0;

        return r0;
    }
