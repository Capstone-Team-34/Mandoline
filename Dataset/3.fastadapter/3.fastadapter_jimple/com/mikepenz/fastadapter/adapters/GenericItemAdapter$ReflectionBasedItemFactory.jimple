com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory extends java.lang.Object implements com.mikepenz.fastadapter.utils.Function
private final java.lang.Class itemClass
private final java.lang.Class modelClass
    public void <init>(java.lang.Class, java.lang.Class)
    {
        com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory r0;
        java.lang.Class r1, r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory: java.lang.Class modelClass> = r1;

        r0.<com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory: java.lang.Class itemClass> = r2;

        return;
    }
    public java.lang.Object apply(java.lang.Object)
    {
        com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory r0;
        java.lang.Object r1;
        java.lang.Exception r2;
        java.lang.Class $r3, $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Constructor $r6;
        java.lang.Object[] $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory: java.lang.Class itemClass>;

        $r5 = newarray (java.lang.Class)[1];

        $r3 = r0.<com.mikepenz.fastadapter.adapters.GenericItemAdapter$ReflectionBasedItemFactory: java.lang.Class modelClass>;

        $r5[0] = $r3;

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r5);

        virtualinvoke $r6.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        r1 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

     label2:
        return r1;

     label3:
        r2 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Please provide a constructor that takes a model as an argument");

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }
