com.mikepenz.fastadapter.utils.IdDistributor extends java.lang.Object
private static final java.util.concurrent.atomic.AtomicLong idDistributor
    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r0;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(9000000000000000000L);

        <com.mikepenz.fastadapter.utils.IdDistributor: java.util.concurrent.atomic.AtomicLong idDistributor> = $r0;

        return;
    }
    public void <init>()
    {
        com.mikepenz.fastadapter.utils.IdDistributor r0;

        r0 := @this: com.mikepenz.fastadapter.utils.IdDistributor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable)
    {
        com.mikepenz.fastadapter.IIdentifyable r0;
        long $l0;
        byte $b1;
        java.util.concurrent.atomic.AtomicLong $r1;

        r0 := @parameter0: com.mikepenz.fastadapter.IIdentifyable;

        $l0 = interfaceinvoke r0.<com.mikepenz.fastadapter.IIdentifyable: long getIdentifier()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r1 = <com.mikepenz.fastadapter.utils.IdDistributor: java.util.concurrent.atomic.AtomicLong idDistributor>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        interfaceinvoke r0.<com.mikepenz.fastadapter.IIdentifyable: java.lang.Object withIdentifier(long)>($l0);

     label1:
        return r0;
    }
    public static java.util.List checkIds(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        com.mikepenz.fastadapter.IIdentifyable r3;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.mikepenz.fastadapter.IIdentifyable) $r2;

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable)>(r3);

        goto label1;

     label2:
        return r0;
    }
    public static transient com.mikepenz.fastadapter.IIdentifyable[] checkIds(com.mikepenz.fastadapter.IIdentifyable[])
    {
        com.mikepenz.fastadapter.IIdentifyable[] r0;
        com.mikepenz.fastadapter.IIdentifyable r1;
        int $i0, $i1;

        r0 := @parameter0: com.mikepenz.fastadapter.IIdentifyable[];

        $i0 = lengthof r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r1 = r0[$i1];

        staticinvoke <com.mikepenz.fastadapter.utils.IdDistributor: com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable)>(r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r0;
    }
