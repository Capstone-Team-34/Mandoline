com.mikepenz.fastadapter.utils.AdapterUtil extends java.lang.Object
    public void <init>()
    {
        com.mikepenz.fastadapter.utils.AdapterUtil r0;

        r0 := @this: com.mikepenz.fastadapter.utils.AdapterUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static android.util.SparseIntArray adjustPosition(android.util.SparseIntArray, int, int, int)
    {
        android.util.SparseIntArray $r0, r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;

        $r0 := @parameter0: android.util.SparseIntArray;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r1 = new android.util.SparseIntArray;

        specialinvoke r1.<android.util.SparseIntArray: void <init>()>();

        $i3 = virtualinvoke $r0.<android.util.SparseIntArray: int size()>();

        i4 = 0;

     label1:
        if i4 >= $i3 goto label7;

        $i5 = virtualinvoke $r0.<android.util.SparseIntArray: int keyAt(int)>(i4);

        if $i5 < $i0 goto label2;

        if $i5 <= $i1 goto label4;

     label2:
        $i6 = virtualinvoke $r0.<android.util.SparseIntArray: int valueAt(int)>(i4);

        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>($i5, $i6);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        if $i2 <= 0 goto label5;

        $i5 = $i5 + $i2;

        $i6 = virtualinvoke $r0.<android.util.SparseIntArray: int valueAt(int)>(i4);

        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>($i5, $i6);

        goto label3;

     label5:
        if $i2 >= 0 goto label3;

        $i6 = $i0 + $i2;

        if $i5 <= $i6 goto label6;

        if $i5 <= $i0 goto label3;

     label6:
        $i5 = $i5 + $i2;

        $i6 = virtualinvoke $r0.<android.util.SparseIntArray: int valueAt(int)>(i4);

        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>($i5, $i6);

        goto label3;

     label7:
        return r1;
    }
    public static java.util.SortedSet adjustPosition(java.util.Set, int, int, int)
    {
        java.util.Set r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.TreeSet r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Integer r4;

        r0 := @parameter0: java.util.Set;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r1 = new java.util.TreeSet;

        specialinvoke r1.<java.util.TreeSet: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i3 < $i0 goto label2;

        if $i3 <= $i1 goto label3;

     label2:
        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r1.<java.util.SortedSet: boolean add(java.lang.Object)>(r4);

        goto label1;

     label3:
        if $i2 <= 0 goto label4;

        $i3 = $i3 + $i2;

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r1.<java.util.SortedSet: boolean add(java.lang.Object)>(r4);

        goto label1;

     label4:
        if $i2 >= 0 goto label1;

        $i4 = $i0 + $i2;

        if $i3 <= $i4 goto label5;

        if $i3 <= $i0 goto label1;

     label5:
        $i3 = $i3 + $i2;

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r1.<java.util.SortedSet: boolean add(java.lang.Object)>(r4);

        goto label1;

     label6:
        return r1;
    }
    public static void handleStates(com.mikepenz.fastadapter.FastAdapter, int, int)
    {
        com.mikepenz.fastadapter.FastAdapter $r0;
        int $i0, $i1, $i2;
        com.mikepenz.fastadapter.IItem $r1;
        boolean $z0;
        java.util.Set $r2;
        java.lang.Integer $r3;
        com.mikepenz.fastadapter.IExpandable r4;
        android.util.SparseIntArray $r5;

        $r0 := @parameter0: com.mikepenz.fastadapter.FastAdapter;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        if $i1 < $i0 goto label5;

        $r1 = virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: com.mikepenz.fastadapter.IItem getItem(int)>($i1);

        $z0 = interfaceinvoke $r1.<com.mikepenz.fastadapter.IItem: boolean isSelected()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: java.util.Set getSelections()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label2:
        $z0 = $r1 instanceof com.mikepenz.fastadapter.IExpandable;

        if $z0 == 0 goto label3;

        r4 = (com.mikepenz.fastadapter.IExpandable) $r1;

        $z0 = interfaceinvoke r4.<com.mikepenz.fastadapter.IExpandable: boolean isExpanded()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: android.util.SparseIntArray getExpanded()>();

        $i2 = virtualinvoke $r5.<android.util.SparseIntArray: int indexOfKey(int)>($i1);

        if $i2 >= 0 goto label3;

        virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: void expand(int)>($i1);

     label3:
        $i1 = $i1 + -1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: java.util.Set getSelections()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<com.mikepenz.fastadapter.FastAdapter: java.util.Set getSelections()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        goto label2;

     label5:
        return;
    }
