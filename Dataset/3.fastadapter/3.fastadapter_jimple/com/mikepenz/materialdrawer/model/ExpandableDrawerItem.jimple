com.mikepenz.materialdrawer.model.ExpandableDrawerItem extends com.mikepenz.materialdrawer.model.BasePrimaryDrawerItem
protected com.mikepenz.materialdrawer.holder.ColorHolder arrowColor
private com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnArrowDrawerItemClickListener
private com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnDrawerItemClickListener
    public void <init>()
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem$1 $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        specialinvoke r0.<com.mikepenz.materialdrawer.model.BasePrimaryDrawerItem: void <init>()>();

        $r1 = new com.mikepenz.materialdrawer.model.ExpandableDrawerItem$1;

        specialinvoke $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$1: void <init>(com.mikepenz.materialdrawer.model.ExpandableDrawerItem)>(r0);

        r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnArrowDrawerItemClickListener> = $r1;

        return;
    }
    static com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener access$000(com.mikepenz.materialdrawer.model.ExpandableDrawerItem)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem $r0;
        com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener r1;

        $r0 := @parameter0: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        r1 = $r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnDrawerItemClickListener>;

        return r1;
    }
    public volatile void bindView(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder $r2;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 = (com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder) $r1;

        virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder)>($r2);

        return;
    }
    public void bindView(com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder $r1;
        android.view.View $r2;
        android.content.Context $r3;
        com.mikepenz.iconics.view.IconicsImageView $r4;
        com.mikepenz.materialdrawer.holder.ColorHolder $r5;
        int $i0;
        boolean $z0;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $r1 := @parameter0: com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder;

        $r2 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void bindViewHelper(com.mikepenz.materialdrawer.model.BaseViewHolder)>($r1);

        $r4 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: com.mikepenz.iconics.view.IconicsImageView arrow>;

        $r5 = r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.holder.ColorHolder arrowColor>;

        if $r5 == null goto label3;

        $r5 = r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.holder.ColorHolder arrowColor>;

        $i0 = virtualinvoke $r5.<com.mikepenz.materialdrawer.holder.ColorHolder: int color(android.content.Context)>($r3);

     label1:
        virtualinvoke $r4.<com.mikepenz.iconics.view.IconicsImageView: void setColor(int)>($i0);

        $r4 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: com.mikepenz.iconics.view.IconicsImageView arrow>;

        virtualinvoke $r4.<com.mikepenz.iconics.view.IconicsImageView: void clearAnimation()>();

        $z0 = virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: boolean isExpanded()>();

        if $z0 != 0 goto label4;

        $r4 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: com.mikepenz.iconics.view.IconicsImageView arrow>;

        staticinvoke <android.support.v4.view.ViewCompat: void setRotation(android.view.View,float)>($r4, 0.0F);

     label2:
        $r2 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: android.view.View itemView>;

        virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: void onPostBindView(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,android.view.View)>(r0, $r2);

        return;

     label3:
        $i0 = virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: int getIconColor(android.content.Context)>($r3);

        goto label1;

     label4:
        $r4 = $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ViewHolder: com.mikepenz.iconics.view.IconicsImageView arrow>;

        staticinvoke <android.support.v4.view.ViewCompat: void setRotation(android.view.View,float)>($r4, 180.0F);

        goto label2;
    }
    public com.mikepenz.fastadapter.utils.ViewHolderFactory getFactory()
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ItemFactory $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $r1 = new com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ItemFactory;

        specialinvoke $r1.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem$ItemFactory: void <init>()>();

        return $r1;
    }
    public int getLayoutRes()
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        int i0;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        i0 = <com.mikepenz.materialdrawer.R$layout: int material_drawer_item_expandable>;

        return i0;
    }
    public com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener getOnDrawerItemClickListener()
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        r1 = r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnArrowDrawerItemClickListener>;

        return r1;
    }
    public int getType()
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        int i0;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        i0 = <com.mikepenz.materialdrawer.R$id: int material_drawer_item_expandable>;

        return i0;
    }
    public com.mikepenz.materialdrawer.model.ExpandableDrawerItem withArrowColor(int)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i0);

        r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.holder.ColorHolder arrowColor> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.model.ExpandableDrawerItem withArrowColorRes(int)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColorRes(int)>($i0);

        r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.holder.ColorHolder arrowColor> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.model.ExpandableDrawerItem withOnDrawerItemClickListener(com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $r1 := @parameter0: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener;

        r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener mOnDrawerItemClickListener> = $r1;

        return r0;
    }
    public volatile java.lang.Object withOnDrawerItemClickListener(com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener)
    {
        com.mikepenz.materialdrawer.model.ExpandableDrawerItem r0;
        com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.ExpandableDrawerItem;

        $r1 := @parameter0: com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener;

        r0 = virtualinvoke r0.<com.mikepenz.materialdrawer.model.ExpandableDrawerItem: com.mikepenz.materialdrawer.model.ExpandableDrawerItem withOnDrawerItemClickListener(com.mikepenz.materialdrawer.Drawer$OnDrawerItemClickListener)>($r1);

        return r0;
    }
