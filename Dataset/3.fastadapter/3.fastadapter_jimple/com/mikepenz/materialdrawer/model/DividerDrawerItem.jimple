com.mikepenz.materialdrawer.model.DividerDrawerItem extends com.mikepenz.materialdrawer.model.AbstractDrawerItem
    public void <init>()
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        specialinvoke r0.<com.mikepenz.materialdrawer.model.AbstractDrawerItem: void <init>()>();

        return;
    }
    public volatile void bindView(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder $r2;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 = (com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder) $r1;

        virtualinvoke r0.<com.mikepenz.materialdrawer.model.DividerDrawerItem: void bindView(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r2);

        return;
    }
    public void bindView(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;
        com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder $r1;
        android.view.View $r2;
        android.content.Context $r3;
        int $i0, $i1;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        $r1 := @parameter0: com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder;

        $r2 = $r1.<com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        $r2 = $r1.<com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View itemView>;

        $i0 = virtualinvoke r0.<com.mikepenz.materialdrawer.model.DividerDrawerItem: int hashCode()>();

        virtualinvoke $r2.<android.view.View: void setId(int)>($i0);

        $r2 = staticinvoke <com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View access$000(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r1);

        virtualinvoke $r2.<android.view.View: void setClickable(boolean)>(0);

        $r2 = staticinvoke <com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View access$000(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r1);

        virtualinvoke $r2.<android.view.View: void setEnabled(boolean)>(0);

        $r2 = staticinvoke <com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View access$000(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r1);

        virtualinvoke $r2.<android.view.View: void setMinimumHeight(int)>(1);

        $r2 = staticinvoke <com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View access$000(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r1);

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r2, 2);

        $r2 = staticinvoke <com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View access$100(com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder)>($r1);

        $i0 = <com.mikepenz.materialdrawer.R$attr: int material_drawer_divider>;

        $i1 = <com.mikepenz.materialdrawer.R$color: int material_drawer_divider>;

        $i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getThemeColorFromAttrOrRes(android.content.Context,int,int)>($r3, $i0, $i1);

        virtualinvoke $r2.<android.view.View: void setBackgroundColor(int)>($i0);

        $r2 = $r1.<com.mikepenz.materialdrawer.model.DividerDrawerItem$ViewHolder: android.view.View itemView>;

        virtualinvoke r0.<com.mikepenz.materialdrawer.model.DividerDrawerItem: void onPostBindView(com.mikepenz.materialdrawer.model.interfaces.IDrawerItem,android.view.View)>(r0, $r2);

        return;
    }
    public com.mikepenz.fastadapter.utils.ViewHolderFactory getFactory()
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;
        com.mikepenz.materialdrawer.model.DividerDrawerItem$ItemFactory $r1;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        $r1 = new com.mikepenz.materialdrawer.model.DividerDrawerItem$ItemFactory;

        specialinvoke $r1.<com.mikepenz.materialdrawer.model.DividerDrawerItem$ItemFactory: void <init>()>();

        return $r1;
    }
    public int getLayoutRes()
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;
        int i0;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        i0 = <com.mikepenz.materialdrawer.R$layout: int material_drawer_item_divider>;

        return i0;
    }
    public int getType()
    {
        com.mikepenz.materialdrawer.model.DividerDrawerItem r0;
        int i0;

        r0 := @this: com.mikepenz.materialdrawer.model.DividerDrawerItem;

        i0 = <com.mikepenz.materialdrawer.R$id: int material_drawer_item_divider>;

        return i0;
    }
