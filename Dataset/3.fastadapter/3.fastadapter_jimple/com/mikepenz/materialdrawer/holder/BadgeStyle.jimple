com.mikepenz.materialdrawer.holder.BadgeStyle extends java.lang.Object
private android.graphics.drawable.Drawable mBadgeBackground
private com.mikepenz.materialdrawer.holder.ColorHolder mColor
private com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed
private com.mikepenz.materialdrawer.holder.DimenHolder mCorners
private int mGradientDrawable
private com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth
private com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight
private com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom
private com.mikepenz.materialdrawer.holder.ColorHolder mTextColor
    public void <init>()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <com.mikepenz.materialdrawer.R$drawable: int material_drawer_badge>;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = $i0;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(2);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(3);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(20);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth> = $r1;

        return;
    }
    public void <init>(int, int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0, $i1, $i2;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;
        com.mikepenz.materialdrawer.holder.ColorHolder $r2;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = <com.mikepenz.materialdrawer.R$drawable: int material_drawer_badge>;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = $i2;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(2);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(3);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(20);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth> = $r1;

        $r2 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColor> = $r2;

        $r2 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i1);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed> = $r2;

        return;
    }
    public void <init>(int, int, int, int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;
        com.mikepenz.materialdrawer.holder.ColorHolder $r2;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i4 = <com.mikepenz.materialdrawer.R$drawable: int material_drawer_badge>;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = $i4;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(2);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(3);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>(20);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth> = $r1;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = $i0;

        $r2 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i1);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColor> = $r2;

        $r2 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i2);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed> = $r2;

        $r2 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i3);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor> = $r2;

        return;
    }
    public android.graphics.drawable.Drawable getBadgeBackground()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: android.graphics.drawable.Drawable mBadgeBackground>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.ColorHolder getColor()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.ColorHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColor>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.ColorHolder getColorPressed()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.ColorHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.DimenHolder getCorners()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.DimenHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mCorners>;

        return r1;
    }
    public int getGradientDrawable()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int i0;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        i0 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable>;

        return i0;
    }
    public com.mikepenz.materialdrawer.holder.DimenHolder getMinWidth()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.DimenHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.DimenHolder getPaddingLeftRight()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.DimenHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.DimenHolder getPaddingTopBottom()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.DimenHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom>;

        return r1;
    }
    public com.mikepenz.materialdrawer.holder.ColorHolder getTextColor()
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        com.mikepenz.materialdrawer.holder.ColorHolder r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        r1 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor>;

        return r1;
    }
    public void style(android.widget.TextView)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        android.widget.TextView $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $r1 := @parameter0: android.widget.TextView;

        virtualinvoke r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: void style(android.widget.TextView,android.content.res.ColorStateList)>($r1, null);

        return;
    }
    public void style(android.widget.TextView, android.content.res.ColorStateList)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        android.widget.TextView $r1;
        android.content.res.ColorStateList $r2;
        android.content.Context $r3;
        android.graphics.drawable.Drawable $r4;
        com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder $r5;
        android.graphics.drawable.StateListDrawable $r6;
        com.mikepenz.materialdrawer.holder.ColorHolder $r7;
        com.mikepenz.materialdrawer.holder.DimenHolder $r8;
        int $i0, $i1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $r1 := @parameter0: android.widget.TextView;

        $r2 := @parameter1: android.content.res.ColorStateList;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: android.graphics.drawable.Drawable mBadgeBackground>;

        if $r4 != null goto label3;

        $r5 = new com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder;

        specialinvoke $r5.<com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder: void <init>(com.mikepenz.materialdrawer.holder.BadgeStyle)>(r0);

        $r6 = virtualinvoke $r5.<com.mikepenz.materialdrawer.model.utils.BadgeDrawableBuilder: android.graphics.drawable.StateListDrawable build(android.content.Context)>($r3);

        staticinvoke <com.mikepenz.materialize.util.UIUtils: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r1, $r6);

     label1:
        $r7 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor>;

        if $r7 == null goto label4;

        $r7 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor>;

        staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: void applyToOr(com.mikepenz.materialize.holder.ColorHolder,android.widget.TextView,android.content.res.ColorStateList)>($r7, $r1, null);

     label2:
        $r8 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight>;

        $i0 = virtualinvoke $r8.<com.mikepenz.materialdrawer.holder.DimenHolder: int asPixel(android.content.Context)>($r3);

        $r8 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom>;

        $i1 = virtualinvoke $r8.<com.mikepenz.materialdrawer.holder.DimenHolder: int asPixel(android.content.Context)>($r3);

        virtualinvoke $r1.<android.widget.TextView: void setPadding(int,int,int,int)>($i0, $i1, $i0, $i1);

        $r8 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth>;

        $i0 = virtualinvoke $r8.<com.mikepenz.materialdrawer.holder.DimenHolder: int asPixel(android.content.Context)>($r3);

        virtualinvoke $r1.<android.widget.TextView: void setMinWidth(int)>($i0);

        return;

     label3:
        $r4 = r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: android.graphics.drawable.Drawable mBadgeBackground>;

        staticinvoke <com.mikepenz.materialize.util.UIUtils: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r1, $r4);

        goto label1;

     label4:
        if $r2 == null goto label2;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r2);

        goto label2;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withBadgeBackground(android.graphics.drawable.Drawable)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: android.graphics.drawable.Drawable mBadgeBackground> = $r1;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = -1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withColor(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColor> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withColorPressed(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withColorPressedRes(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColorRes(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColorPressed> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withColorRes(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColorRes(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mColor> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withCorners(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mCorners> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withCornersDp(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mCorners> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withGradientDrawable(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: int mGradientDrawable> = $i0;

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: android.graphics.drawable.Drawable mBadgeBackground> = null;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withMinWidth(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mMinWidth> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withPadding(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withPaddingLeftRightDp(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withPaddingLeftRightPx(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingLeftRight> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withPaddingTopBottomDp(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromDp(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withPaddingTopBottomPx(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.DimenHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.DimenHolder: com.mikepenz.materialdrawer.holder.DimenHolder fromPixel(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.DimenHolder mPaddingTopBottom> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withTextColor(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColor(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor> = $r1;

        return r0;
    }
    public com.mikepenz.materialdrawer.holder.BadgeStyle withTextColorRes(int)
    {
        com.mikepenz.materialdrawer.holder.BadgeStyle r0;
        int $i0;
        com.mikepenz.materialdrawer.holder.ColorHolder $r1;

        r0 := @this: com.mikepenz.materialdrawer.holder.BadgeStyle;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <com.mikepenz.materialdrawer.holder.ColorHolder: com.mikepenz.materialdrawer.holder.ColorHolder fromColorRes(int)>($i0);

        r0.<com.mikepenz.materialdrawer.holder.BadgeStyle: com.mikepenz.materialdrawer.holder.ColorHolder mTextColor> = $r1;

        return r0;
    }
