com.mikepenz.materialdrawer.util.DrawerUIUtils extends java.lang.Object
    public void <init>()
    {
        com.mikepenz.materialdrawer.util.DrawerUIUtils r0;

        r0 := @this: com.mikepenz.materialdrawer.util.DrawerUIUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static android.graphics.drawable.StateListDrawable getDrawerItemBackground(int)
    {
        int $i0;
        android.graphics.drawable.ColorDrawable r0;
        android.graphics.drawable.StateListDrawable r1;
        int[] $r2;

        $i0 := @parameter0: int;

        r0 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r0.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        r1 = new android.graphics.drawable.StateListDrawable;

        specialinvoke r1.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r2 = newarray (int)[1];

        $r2[0] = 16842913;

        virtualinvoke r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, r0);

        return r1;
    }
    public static android.graphics.drawable.StateListDrawable getIconStateList(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0, $r1;
        android.graphics.drawable.StateListDrawable r2;
        int[] $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        r2 = new android.graphics.drawable.StateListDrawable;

        specialinvoke r2.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r3 = newarray (int)[1];

        $r3[0] = 16842913;

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r1);

        $r3 = newarray (int)[0];

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r3, $r0);

        return r2;
    }
    public static int getOptimalDrawerWidth(android.content.Context)
    {
        android.content.Context $r0;
        int i0, $i1;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        i0 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getScreenWidth(android.content.Context)>($r0);

        $i1 = staticinvoke <com.mikepenz.materialize.util.UIUtils: int getActionBarHeight(android.content.Context)>($r0);

        i0 = i0 - $i1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.mikepenz.materialdrawer.R$dimen: int material_drawer_width>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        return i0;
    }
    public static android.graphics.drawable.Drawable getPlaceHolder(android.content.Context)
    {
        android.content.Context $r0;
        com.mikepenz.iconics.IconicsDrawable $r1;
        com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.mikepenz.iconics.IconicsDrawable;

        $r2 = <com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon: com.mikepenz.materialdrawer.icons.MaterialDrawerFont$Icon mdf_person>;

        specialinvoke $r1.<com.mikepenz.iconics.IconicsDrawable: void <init>(android.content.Context,com.mikepenz.iconics.typeface.IIcon)>($r0, $r2);

        $i0 = <com.mikepenz.materialdrawer.R$color: int accent>;

        $r1 = virtualinvoke $r1.<com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable colorRes(int)>($i0);

        $i0 = <com.mikepenz.materialdrawer.R$color: int primary>;

        $r1 = virtualinvoke $r1.<com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable backgroundColorRes(int)>($i0);

        $r1 = virtualinvoke $r1.<com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable sizeDp(int)>(56);

        $r1 = virtualinvoke $r1.<com.mikepenz.iconics.IconicsDrawable: com.mikepenz.iconics.IconicsDrawable paddingDp(int)>(16);

        return $r1;
    }
    public static android.content.res.ColorStateList getTextColorStateList(int, int)
    {
        int $i0, $i1;
        android.content.res.ColorStateList $r0;
        int[][] $r1;
        int[] $r2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new android.content.res.ColorStateList;

        $r1 = newarray (int[])[2];

        $r2 = newarray (int)[1];

        $r2[0] = 16842913;

        $r1[0] = $r2;

        $r2 = newarray (int)[0];

        $r1[1] = $r2;

        $r2 = newarray (int)[2];

        $r2[0] = $i1;

        $r2[1] = $i0;

        specialinvoke $r0.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r1, $r2);

        return $r0;
    }
    public static void setDrawerVerticalPadding(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.mikepenz.materialdrawer.R$dimen: int material_drawer_vertical_padding>;

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        virtualinvoke $r0.<android.view.View: void setPadding(int,int,int,int)>($i0, 0, $i0, 0);

        return;
    }
    public static void setDrawerVerticalPadding(android.view.View, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.mikepenz.materialdrawer.R$dimen: int material_drawer_vertical_padding>;

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 17 goto label1;

        $i0 = $i1 * $i0;

        virtualinvoke $r0.<android.view.View: void setPaddingRelative(int,int,int,int)>($i0, 0, $i1, 0);

        return;

     label1:
        $i0 = $i1 * $i0;

        virtualinvoke $r0.<android.view.View: void setPadding(int,int,int,int)>($i0, 0, $i1, 0);

        return;
    }
