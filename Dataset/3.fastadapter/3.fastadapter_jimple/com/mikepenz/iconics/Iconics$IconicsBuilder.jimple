com.mikepenz.iconics.Iconics$IconicsBuilder extends java.lang.Object
private android.content.Context ctx
private java.util.List fonts
private java.util.List styles
private java.util.HashMap stylesFor
    public void <init>()
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        java.util.LinkedList $r1;
        java.util.HashMap $r2;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List styles> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor> = $r2;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List fonts> = $r1;

        return;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilder ctx(android.content.Context)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.content.Context $r1;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: android.content.Context;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: android.content.Context ctx> = $r1;

        return r0;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilder font(com.mikepenz.iconics.typeface.ITypeface)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        com.mikepenz.iconics.typeface.ITypeface $r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: com.mikepenz.iconics.typeface.ITypeface;

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List fonts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderString on(android.text.Spanned)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.text.Spanned $r1;
        com.mikepenz.iconics.Iconics$IconicsBuilderString $r2;
        android.content.Context $r3;
        java.util.List $r4, $r5;
        java.util.HashMap $r6;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: android.text.Spanned;

        $r2 = new com.mikepenz.iconics.Iconics$IconicsBuilderString;

        $r3 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: android.content.Context ctx>;

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List fonts>;

        $r5 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List styles>;

        $r6 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        specialinvoke $r2.<com.mikepenz.iconics.Iconics$IconicsBuilderString: void <init>(android.content.Context,java.util.List,android.text.Spanned,java.util.List,java.util.HashMap)>($r3, $r4, $r1, $r5, $r6);

        return $r2;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderString on(java.lang.CharSequence)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        com.mikepenz.iconics.Iconics$IconicsBuilderString $r3;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = virtualinvoke r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: com.mikepenz.iconics.Iconics$IconicsBuilderString on(java.lang.String)>($r2);

        return $r3;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderString on(java.lang.String)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        java.lang.String $r1;
        com.mikepenz.iconics.Iconics$IconicsBuilderString $r2;
        android.text.SpannableString $r3;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: java.lang.String;

        $r3 = new android.text.SpannableString;

        specialinvoke $r3.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r1);

        $r2 = virtualinvoke r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: com.mikepenz.iconics.Iconics$IconicsBuilderString on(android.text.Spanned)>($r3);

        return $r2;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderString on(java.lang.StringBuilder)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.mikepenz.iconics.Iconics$IconicsBuilderString $r3;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: com.mikepenz.iconics.Iconics$IconicsBuilderString on(java.lang.String)>($r2);

        return $r3;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderView on(android.widget.Button)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.widget.Button $r1;
        com.mikepenz.iconics.Iconics$IconicsBuilderView $r2;
        android.content.Context $r3;
        java.util.List $r4, $r5;
        java.util.HashMap $r6;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: android.widget.Button;

        $r2 = new com.mikepenz.iconics.Iconics$IconicsBuilderView;

        $r3 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: android.content.Context ctx>;

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List fonts>;

        $r5 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List styles>;

        $r6 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        specialinvoke $r2.<com.mikepenz.iconics.Iconics$IconicsBuilderView: void <init>(android.content.Context,java.util.List,android.widget.TextView,java.util.List,java.util.HashMap)>($r3, $r4, $r1, $r5, $r6);

        return $r2;
    }
    public com.mikepenz.iconics.Iconics$IconicsBuilderView on(android.widget.TextView)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.widget.TextView $r1;
        com.mikepenz.iconics.Iconics$IconicsBuilderView $r2;
        android.content.Context $r3;
        java.util.List $r4, $r5;
        java.util.HashMap $r6;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: android.widget.TextView;

        $r2 = new com.mikepenz.iconics.Iconics$IconicsBuilderView;

        $r3 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: android.content.Context ctx>;

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List fonts>;

        $r5 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List styles>;

        $r6 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        specialinvoke $r2.<com.mikepenz.iconics.Iconics$IconicsBuilderView: void <init>(android.content.Context,java.util.List,android.widget.TextView,java.util.List,java.util.HashMap)>($r3, $r4, $r1, $r5, $r6);

        return $r2;
    }
    public transient com.mikepenz.iconics.Iconics$IconicsBuilder style(android.text.style.CharacterStyle[])
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.text.style.CharacterStyle[] $r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: android.text.style.CharacterStyle[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.List styles>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r2, $r1);

     label1:
        return r0;
    }
    public transient com.mikepenz.iconics.Iconics$IconicsBuilder styleFor(com.mikepenz.iconics.typeface.IIcon, android.text.style.CharacterStyle[])
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        com.mikepenz.iconics.typeface.IIcon $r1;
        android.text.style.CharacterStyle[] $r2;
        java.lang.String $r3;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r1 := @parameter0: com.mikepenz.iconics.typeface.IIcon;

        $r2 := @parameter1: android.text.style.CharacterStyle[];

        $r3 = interfaceinvoke $r1.<com.mikepenz.iconics.typeface.IIcon: java.lang.String getName()>();

        r0 = virtualinvoke r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: com.mikepenz.iconics.Iconics$IconicsBuilder styleFor(java.lang.String,android.text.style.CharacterStyle[])>($r3, $r2);

        return r0;
    }
    public transient com.mikepenz.iconics.Iconics$IconicsBuilder styleFor(java.lang.String, android.text.style.CharacterStyle[])
    {
        com.mikepenz.iconics.Iconics$IconicsBuilder r0;
        android.text.style.CharacterStyle[] $r1;
        android.text.style.CharacterStyle r2;
        int $i0, $i1;
        java.lang.String $r3;
        java.util.HashMap $r4;
        boolean $z0;
        java.util.LinkedList $r5;
        java.lang.Object $r6;
        java.util.List $r7;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilder;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.text.style.CharacterStyle[];

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_");

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        if $r1 == null goto label3;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label3;

        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r2 = $r1[$i1];

        $r4 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilder: java.util.HashMap stylesFor>;

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return r0;
    }
