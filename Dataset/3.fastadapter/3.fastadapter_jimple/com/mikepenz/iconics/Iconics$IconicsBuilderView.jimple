com.mikepenz.iconics.Iconics$IconicsBuilderView extends java.lang.Object
private android.content.Context ctx
private java.util.List fonts
private android.widget.TextView view
private java.util.List withStyles
private java.util.HashMap withStylesFor
    public void <init>(android.content.Context, java.util.List, android.widget.TextView, java.util.List, java.util.HashMap)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilderView r0;
        android.content.Context $r1;
        java.util.List r2, r4;
        android.widget.TextView $r3;
        java.util.HashMap r5;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilderView;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: android.widget.TextView;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.content.Context ctx> = $r1;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.List fonts> = r2;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view> = $r3;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.List withStyles> = r4;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.HashMap withStylesFor> = r5;

        return;
    }
    public void build()
    {
        com.mikepenz.iconics.Iconics$IconicsBuilderView r0;
        java.util.HashMap r1, $r12;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.mikepenz.iconics.typeface.ITypeface r5;
        java.lang.String $r6;
        android.widget.TextView $r7, $r10;
        java.lang.CharSequence $r8;
        android.content.Context $r9;
        android.text.Spanned $r11;
        int $i0;
        android.text.SpannableString $r13;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilderView;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.List fonts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.mikepenz.iconics.typeface.ITypeface) $r4;

        $r6 = interfaceinvoke r5.<com.mikepenz.iconics.typeface.ITypeface: java.lang.String getMappingPrefix()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r5);

        goto label1;

     label2:
        $r7 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = $r8 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $r7 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $r9 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.content.Context ctx>;

        $r10 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $r8 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r11 = (android.text.Spanned) $r8;

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.List withStyles>;

        $r12 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.HashMap withStylesFor>;

        $r11 = staticinvoke <com.mikepenz.iconics.Iconics: android.text.Spanned style(android.content.Context,java.util.HashMap,android.text.Spanned,java.util.List,java.util.HashMap)>($r9, r1, $r11, $r2, $r12);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label5;

        $r7 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $z0 = $r7 instanceof android.widget.Button;

        if $z0 == 0 goto label5;

        $r7 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        virtualinvoke $r7.<android.widget.TextView: void setAllCaps(boolean)>(0);

        return;

     label4:
        $r7 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $r9 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.content.Context ctx>;

        $r13 = new android.text.SpannableString;

        $r10 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: android.widget.TextView view>;

        $r8 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        specialinvoke $r13.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r8);

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.List withStyles>;

        $r12 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderView: java.util.HashMap withStylesFor>;

        $r11 = staticinvoke <com.mikepenz.iconics.Iconics: android.text.Spanned style(android.content.Context,java.util.HashMap,android.text.Spanned,java.util.List,java.util.HashMap)>($r9, r1, $r13, $r2, $r12);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

        goto label3;

     label5:
        return;
    }
