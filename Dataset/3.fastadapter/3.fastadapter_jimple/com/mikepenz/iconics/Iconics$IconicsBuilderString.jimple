com.mikepenz.iconics.Iconics$IconicsBuilderString extends java.lang.Object
private android.content.Context ctx
private java.util.List fonts
private android.text.Spanned text
private java.util.List withStyles
private java.util.HashMap withStylesFor
    public void <init>(android.content.Context, java.util.List, android.text.Spanned, java.util.List, java.util.HashMap)
    {
        com.mikepenz.iconics.Iconics$IconicsBuilderString r0;
        android.content.Context $r1;
        java.util.List r2, r4;
        android.text.Spanned $r3;
        java.util.HashMap r5;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilderString;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: android.text.Spanned;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: android.content.Context ctx> = $r1;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.List fonts> = r2;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: android.text.Spanned text> = $r3;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.List withStyles> = r4;

        r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.HashMap withStylesFor> = r5;

        return;
    }
    public android.text.Spanned build()
    {
        com.mikepenz.iconics.Iconics$IconicsBuilderString r0;
        java.util.HashMap r1, $r3;
        java.util.List $r2;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.mikepenz.iconics.typeface.ITypeface r6;
        java.lang.String $r7;
        android.content.Context $r8;
        android.text.Spanned $r9;

        r0 := @this: com.mikepenz.iconics.Iconics$IconicsBuilderString;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.List fonts>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.mikepenz.iconics.typeface.ITypeface) $r5;

        $r7 = interfaceinvoke r6.<com.mikepenz.iconics.typeface.ITypeface: java.lang.String getMappingPrefix()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r6);

        goto label1;

     label2:
        $r8 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: android.content.Context ctx>;

        $r9 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: android.text.Spanned text>;

        $r2 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.List withStyles>;

        $r3 = r0.<com.mikepenz.iconics.Iconics$IconicsBuilderString: java.util.HashMap withStylesFor>;

        $r9 = staticinvoke <com.mikepenz.iconics.Iconics: android.text.Spanned style(android.content.Context,java.util.HashMap,android.text.Spanned,java.util.List,java.util.HashMap)>($r8, r1, $r9, $r2, $r3);

        return $r9;
    }
