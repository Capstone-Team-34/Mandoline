com.mikepenz.iconics.utils.GenericsUtil extends java.lang.Object
    public void <init>()
    {
        com.mikepenz.iconics.utils.GenericsUtil r0;

        r0 := @this: com.mikepenz.iconics.utils.GenericsUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String[] getDefinedFonts(android.content.Context, java.lang.reflect.Field[])
    {
        android.content.Context $r0;
        java.lang.reflect.Field[] $r1;
        java.lang.reflect.Field r2;
        java.util.ArrayList r3;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;
        java.lang.String[] $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.reflect.Field[];

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r1[$i1];

        $r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("define_font_");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r4 = staticinvoke <com.mikepenz.iconics.utils.GenericsUtil: java.lang.String getStringResourceByName(android.content.Context,java.lang.String)>($r0, $r4);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r6;

        return $r5;
    }
    public static java.lang.String[] getFields(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        java.lang.reflect.Field[] $r3;
        java.lang.String[] $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = staticinvoke <com.mikepenz.iconics.utils.GenericsUtil: java.lang.Class resolveRClass(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        $r4 = staticinvoke <com.mikepenz.iconics.utils.GenericsUtil: java.lang.String[] getDefinedFonts(android.content.Context,java.lang.reflect.Field[])>($r0, $r3);

        return $r4;

     label1:
        $r4 = newarray (java.lang.String)[0];

        return $r4;
    }
    private static java.lang.String getStringResourceByName(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        android.content.res.Resources $r3;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "string", $r2);

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        return $r1;
    }
    private static java.lang.Class resolveRClass(java.lang.String)
    {
        java.lang.ClassNotFoundException r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        boolean $z0;
        int $i0;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".R$string");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

     label3:
        return $r4;

     label4:
        r0 := @caughtexception;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label5:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label6:
        $r1 = "";

        goto label5;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }
