com.mikepenz.iconics.Iconics extends java.lang.Object
private static java.util.HashMap FONTS
private static boolean INIT_DONE
public static final java.lang.String TAG
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.util.HashMap $r2;

        $r1 = class "Lcom/mikepenz/iconics/Iconics;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.mikepenz.iconics.Iconics: java.lang.String TAG> = $r0;

        <com.mikepenz.iconics.Iconics: boolean INIT_DONE> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS> = $r2;

        return;
    }
    private void <init>()
    {
        com.mikepenz.iconics.Iconics r0;

        r0 := @this: com.mikepenz.iconics.Iconics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static com.mikepenz.iconics.typeface.ITypeface findFont(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        com.mikepenz.iconics.typeface.ITypeface $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.mikepenz.iconics.Iconics: void init(android.content.Context)>($r0);

        $r3 = <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.mikepenz.iconics.typeface.ITypeface) $r2;

        return $r4;
    }
    public static com.mikepenz.iconics.typeface.ITypeface findFont(com.mikepenz.iconics.typeface.IIcon)
    {
        com.mikepenz.iconics.typeface.IIcon $r0;
        com.mikepenz.iconics.typeface.ITypeface $r1;

        $r0 := @parameter0: com.mikepenz.iconics.typeface.IIcon;

        $r1 = interfaceinvoke $r0.<com.mikepenz.iconics.typeface.IIcon: com.mikepenz.iconics.typeface.ITypeface getTypeface()>();

        return $r1;
    }
    public static java.util.Collection getRegisteredFonts(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Collection $r1;
        java.util.HashMap $r2;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.mikepenz.iconics.Iconics: void init(android.content.Context)>($r0);

        $r2 = <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        return $r1;
    }
    private static java.util.HashMap init(android.content.Context, java.util.HashMap)
    {
        android.content.Context $r0;
        int $i0;
        java.util.HashMap r1;

        $r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.HashMap;

        staticinvoke <com.mikepenz.iconics.Iconics: void init(android.content.Context)>($r0);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label2;

     label1:
        r1 = <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS>;

     label2:
        return r1;
    }
    public static void init(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        java.lang.String r2, $r8;
        int $i0, $i1;
        boolean $z0;
        java.lang.String[] $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        com.mikepenz.iconics.typeface.ITypeface r6;
        java.util.HashMap $r7;
        java.lang.StringBuilder $r9;

        $r0 := @parameter0: android.content.Context;

        $z0 = <com.mikepenz.iconics.Iconics: boolean INIT_DONE>;

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <com.mikepenz.iconics.utils.GenericsUtil: java.lang.String[] getFields(android.content.Context)>($r0);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label7;

        r2 = $r3[$i1];

     label2:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        r6 = (com.mikepenz.iconics.typeface.ITypeface) $r5;

     label3:
        $r7 = <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS>;

     label4:
        $r8 = interfaceinvoke r6.<com.mikepenz.iconics.typeface.ITypeface: java.lang.String getMappingPrefix()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r6);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        r1 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t init: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Android-Iconics", r2);

        goto label5;

     label7:
        <com.mikepenz.iconics.Iconics: boolean INIT_DONE> = 1;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public static boolean registerFont(com.mikepenz.iconics.typeface.ITypeface)
    {
        com.mikepenz.iconics.typeface.ITypeface $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        $r0 := @parameter0: com.mikepenz.iconics.typeface.ITypeface;

        $r2 = <com.mikepenz.iconics.Iconics: java.util.HashMap FONTS>;

        $r1 = interfaceinvoke $r0.<com.mikepenz.iconics.typeface.ITypeface: java.lang.String getMappingPrefix()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);

        return 1;
    }
    public static android.text.Spanned style(android.content.Context, android.text.Spanned)
    {
        android.content.Context $r0;
        android.text.Spanned $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.text.Spanned;

        $r1 = staticinvoke <com.mikepenz.iconics.Iconics: android.text.Spanned style(android.content.Context,java.util.HashMap,android.text.Spanned,java.util.List,java.util.HashMap)>($r0, null, $r1, null, null);

        return $r1;
    }
    public static android.text.Spanned style(android.content.Context, java.util.HashMap, android.text.Spanned, java.util.List, java.util.HashMap)
    {
        android.content.Context $r0;
        android.text.Spanned $r1;
        java.util.List r2;
        java.util.HashMap r3, r4;
        com.mikepenz.iconics.utils.TextStyleContainer $r5;
        android.text.SpannableStringBuilder $r6;
        android.text.SpannableString $r7;
        java.util.LinkedList $r8;

        $r0 := @parameter0: android.content.Context;

        r4 := @parameter1: java.util.HashMap;

        $r1 := @parameter2: android.text.Spanned;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.util.HashMap;

        r4 = staticinvoke <com.mikepenz.iconics.Iconics: java.util.HashMap init(android.content.Context,java.util.HashMap)>($r0, r4);

        $r5 = staticinvoke <com.mikepenz.iconics.utils.IconicsUtils: com.mikepenz.iconics.utils.TextStyleContainer findIcons(android.text.Spanned,java.util.HashMap)>($r1, r4);

        $r6 = $r5.<com.mikepenz.iconics.utils.TextStyleContainer: android.text.SpannableStringBuilder spannableStringBuilder>;

        $r7 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r6);

        $r8 = $r5.<com.mikepenz.iconics.utils.TextStyleContainer: java.util.LinkedList styleContainers>;

        staticinvoke <com.mikepenz.iconics.utils.IconicsUtils: void applyStyles(android.content.Context,android.text.Spannable,java.util.List,java.util.List,java.util.HashMap)>($r0, $r7, $r8, r2, r3);

        return $r7;
    }
    public static void styleEditable(android.content.Context, android.text.Editable)
    {
        android.content.Context $r0;
        android.text.Editable $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.text.Editable;

        staticinvoke <com.mikepenz.iconics.Iconics: void styleEditable(android.content.Context,java.util.HashMap,android.text.Editable,java.util.List,java.util.HashMap)>($r0, null, $r1, null, null);

        return;
    }
    public static void styleEditable(android.content.Context, java.util.HashMap, android.text.Editable, java.util.List, java.util.HashMap)
    {
        android.content.Context $r0;
        android.text.Editable $r1;
        java.util.List r2;
        java.util.HashMap r3, r4;
        java.util.LinkedList $r5;

        $r0 := @parameter0: android.content.Context;

        r4 := @parameter1: java.util.HashMap;

        $r1 := @parameter2: android.text.Editable;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.util.HashMap;

        r4 = staticinvoke <com.mikepenz.iconics.Iconics: java.util.HashMap init(android.content.Context,java.util.HashMap)>($r0, r4);

        $r5 = staticinvoke <com.mikepenz.iconics.utils.IconicsUtils: java.util.LinkedList findIconsFromEditable(android.text.Editable,java.util.HashMap)>($r1, r4);

        staticinvoke <com.mikepenz.iconics.utils.IconicsUtils: void applyStyles(android.content.Context,android.text.Spannable,java.util.List,java.util.List,java.util.HashMap)>($r0, $r1, $r5, r2, r3);

        return;
    }
