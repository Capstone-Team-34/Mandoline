com.turingtechnologies.materialscrollbar.MaterialScrollBar extends android.widget.RelativeLayout
private android.content.res.TypedArray a
private android.view.View background
com.turingtechnologies.materialscrollbar.Handle handle
int handleColour
int handleOffColour
private boolean hidden
boolean hiddenByUser
com.turingtechnologies.materialscrollbar.Indicator indicator
boolean lightOnTouch
boolean programmatic
android.support.v7.widget.RecyclerView recyclerView
com.turingtechnologies.materialscrollbar.ScrollingUtilities scrollUtils
private int seekId
boolean sizeUnchecked
private int textColour
    void <init>(android.content.Context, android.support.v7.widget.RecyclerView, boolean)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1, $r4;
        android.support.v7.widget.RecyclerView $r2;
        boolean $z0, $z1;
        android.widget.RelativeLayout$LayoutParams r3;
        int $i0;
        com.turingtechnologies.materialscrollbar.ScrollingUtilities $r5;
        android.view.ViewParent $r6;
        com.turingtechnologies.materialscrollbar.CustomExceptions$UnsupportedParentException $r7;
        android.view.View $r8;
        java.lang.Boolean $r9;
        com.turingtechnologies.materialscrollbar.Handle $r10;
        android.view.ViewGroup $r11;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#9c9c9c");

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour> = $i0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden> = 1;

        $r4 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r4, 17170443);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour> = $i0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hiddenByUser> = 0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int seekId> = 0;

        $r5 = new com.turingtechnologies.materialscrollbar.ScrollingUtilities;

        specialinvoke $r5.<com.turingtechnologies.materialscrollbar.ScrollingUtilities: void <init>(com.turingtechnologies.materialscrollbar.MaterialScrollBar)>(r0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.ScrollingUtilities scrollUtils> = $r5;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean sizeUnchecked> = 1;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean programmatic> = 1;

        $r6 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.ViewParent getParent()>();

        $z1 = $r6 instanceof android.widget.RelativeLayout;

        if $z1 != 0 goto label1;

        $r7 = new com.turingtechnologies.materialscrollbar.CustomExceptions$UnsupportedParentException;

        specialinvoke $r7.<com.turingtechnologies.materialscrollbar.CustomExceptions$UnsupportedParentException: void <init>()>();

        throw $r7;

     label1:
        $i0 = <com.turingtechnologies.materialscrollbar.R$id: int reservedNamedId>;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setId(int)>($i0);

        $r8 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View setUpBackground(android.content.Context)>($r1);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void addView(android.view.View)>($r8);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r10 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle setUpHanlde(android.content.Context,java.lang.Boolean)>($r1, $r9);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void addView(android.view.View)>($r10);

        r3 = new android.widget.RelativeLayout$LayoutParams;

        $i0 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>(20, r0);

        specialinvoke r3.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>($i0, -1);

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getId()>();

        virtualinvoke r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(7, $i0);

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getId()>();

        virtualinvoke r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(6, $i0);

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getId()>();

        virtualinvoke r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(8, $i0);

        $r6 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.ViewParent getParent()>();

        $r11 = (android.view.ViewGroup) $r6;

        virtualinvoke $r11.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r0, r3);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.support.v7.widget.RecyclerView recyclerView> = $r2;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void generalSetup()>();

        return;
    }
    void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1, $r3;
        android.util.AttributeSet $r2;
        int $i0;
        com.turingtechnologies.materialscrollbar.ScrollingUtilities $r4;
        android.view.View $r5;
        android.content.res.TypedArray $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        com.turingtechnologies.materialscrollbar.Handle $r8;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#9c9c9c");

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour> = $i0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden> = 1;

        $r3 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, 17170443);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour> = $i0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hiddenByUser> = 0;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int seekId> = 0;

        $r4 = new com.turingtechnologies.materialscrollbar.ScrollingUtilities;

        specialinvoke $r4.<com.turingtechnologies.materialscrollbar.ScrollingUtilities: void <init>(com.turingtechnologies.materialscrollbar.MaterialScrollBar)>(r0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.ScrollingUtilities scrollUtils> = $r4;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean sizeUnchecked> = 1;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean programmatic> = 0;

        $r5 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View setUpBackground(android.content.Context)>($r1);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void addView(android.view.View)>($r5);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setUpProps(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r6 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_lightOnTouch>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r8 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle setUpHanlde(android.content.Context,java.lang.Boolean)>($r1, $r7);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void addView(android.view.View)>($r8);

        $z0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_recyclerView>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int seekId> = $i0;

     label1:
        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void implementPreferences()>();

        $r6 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    static int access$000(com.turingtechnologies.materialscrollbar.MaterialScrollBar)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar $r0;
        int i0;

        $r0 := @parameter0: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        i0 = $r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour>;

        return i0;
    }
    private int fetchAccentColour(android.content.Context)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1;
        android.util.TypedValue r2;
        int $i0;
        int[] $r3;
        android.content.res.TypedArray $r4;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        r2 = new android.util.TypedValue;

        specialinvoke r2.<android.util.TypedValue: void <init>()>();

        $i0 = r2.<android.util.TypedValue: int data>;

        $r3 = newarray (int)[1];

        $r3[0] = 16843829;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r3);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return $i0;
    }
    private void generalSetup()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.view.animation.TranslateAnimation r1;
        float $f0;
        android.support.v7.widget.RecyclerView $r2;
        com.turingtechnologies.materialscrollbar.MaterialScrollBar$scrollListener $r3;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.support.v7.widget.RecyclerView recyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void setVerticalScrollBarEnabled(boolean)>(0);

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.support.v7.widget.RecyclerView recyclerView>;

        $r3 = new com.turingtechnologies.materialscrollbar.MaterialScrollBar$scrollListener;

        specialinvoke $r3.<com.turingtechnologies.materialscrollbar.MaterialScrollBar$scrollListener: void <init>(com.turingtechnologies.materialscrollbar.MaterialScrollBar)>(r0);

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)>($r3);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setTouchIntercept()>();

        r1 = new android.view.animation.TranslateAnimation;

        $f0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: float getHideRatio()>();

        specialinvoke r1.<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>(2, 0.0F, 1, $f0, 2, 0.0F, 2, 0.0F);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setDuration(long)>(0L);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setFillAfter(boolean)>(1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden> = 1;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void startAnimation(android.view.animation.Animation)>(r1);

        return;
    }
    private void setHandleColour()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.graphics.drawable.Drawable $r1;
        com.turingtechnologies.materialscrollbar.Indicator $r2;
        android.graphics.drawable.GradientDrawable $r3;
        int $i0;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.Handle $r4;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        if $r2 == null goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        $r1 = virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Indicator: android.graphics.drawable.Drawable getBackground()>();

        $r3 = (android.graphics.drawable.GradientDrawable) $r1;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable: void setColor(int)>($i0);

     label1:
        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean lightOnTouch>;

        if $z0 != 0 goto label2;

        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour>;

        virtualinvoke $r4.<com.turingtechnologies.materialscrollbar.Handle: void setBackgroundColor(int)>($i0);

     label2:
        return;
    }
    public java.lang.Object addIndicator(com.turingtechnologies.materialscrollbar.Indicator, boolean)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        com.turingtechnologies.materialscrollbar.Indicator $r1;
        boolean $z0;
        java.lang.Thread $r2;
        com.turingtechnologies.materialscrollbar.MaterialScrollBar$1attachListener $r3;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: com.turingtechnologies.materialscrollbar.Indicator;

        $z0 := @parameter1: boolean;

        $r2 = new java.lang.Thread;

        $r3 = new com.turingtechnologies.materialscrollbar.MaterialScrollBar$1attachListener;

        specialinvoke $r3.<com.turingtechnologies.materialscrollbar.MaterialScrollBar$1attachListener: void <init>(com.turingtechnologies.materialscrollbar.MaterialScrollBar,com.turingtechnologies.materialscrollbar.MaterialScrollBar,com.turingtechnologies.materialscrollbar.Indicator,boolean)>(r0, r0, $r1, $z0);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return r0;
    }
    void fadeIn()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.view.animation.TranslateAnimation r1;
        boolean $z0;
        float $f0;
        com.turingtechnologies.materialscrollbar.Handle $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean getHide()>();

        if $z0 == 0 goto label1;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hiddenByUser>;

        if $z0 != 0 goto label1;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden> = 0;

        r1 = new android.view.animation.TranslateAnimation;

        $f0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: float getHideRatio()>();

        specialinvoke r1.<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>(1, $f0, 1, 0.0F, 2, 0.0F, 2, 0.0F);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setDuration(long)>(150L);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setFillAfter(boolean)>(1);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void startAnimation(android.view.animation.Animation)>(r1);

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Handle: void collapseHandle()>();

     label1:
        return;
    }
    void fadeOut()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.view.animation.TranslateAnimation r1;
        boolean $z0;
        float $f0;
        com.turingtechnologies.materialscrollbar.MaterialScrollBar$1 $r2;
        long $l0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden>;

        if $z0 != 0 goto label1;

        r1 = new android.view.animation.TranslateAnimation;

        $f0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: float getHideRatio()>();

        specialinvoke r1.<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>(2, 0.0F, 1, $f0, 2, 0.0F, 2, 0.0F);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setDuration(long)>(150L);

        virtualinvoke r1.<android.view.animation.TranslateAnimation: void setFillAfter(boolean)>(1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hidden> = 1;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void startAnimation(android.view.animation.Animation)>(r1);

        $r2 = new com.turingtechnologies.materialscrollbar.MaterialScrollBar$1;

        specialinvoke $r2.<com.turingtechnologies.materialscrollbar.MaterialScrollBar$1: void <init>(com.turingtechnologies.materialscrollbar.MaterialScrollBar)>(r0);

        $l0 = virtualinvoke r1.<android.view.animation.TranslateAnimation: long getDuration()>();

        $l0 = $l0 / 3L;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean postDelayed(java.lang.Runnable,long)>($r2, $l0);

     label1:
        return;
    }
abstract boolean getHide() { 
// no body
} 
abstract float getHideRatio() { 
// no body
} 
abstract int getMode() { 
// no body
} 
abstract void implementFlavourPreferences(android.content.res.TypedArray) { 
// no body
} 
    void implementPreferences()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.res.TypedArray $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_barColour>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_barColour>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: java.lang.Object setBarColour(int)>($i0);

     label1:
        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_handleColour>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label2;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_handleColour>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: java.lang.Object setHandleColour(int)>($i0);

     label2:
        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_handleOffColour>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label3;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_handleOffColour>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: java.lang.Object setHandleOffColour(int)>($i0);

     label3:
        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_textColour>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label4;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_textColour>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: java.lang.Object setTextColour(int)>($i0);

     label4:
        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_barThickness>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label5;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_barThickness>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInteger(int,int)>($i0, 0);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: java.lang.Object setBarThickness(int)>($i0);

     label5:
        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void implementFlavourPreferences(android.content.res.TypedArray)>($r1);

        return;
    }
    protected void onAttachedToWindow()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        specialinvoke r0.<android.widget.RelativeLayout: void onAttachedToWindow()>();

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int seekId>;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View getRootView()>();

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int seekId>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r2 = (android.support.v7.widget.RecyclerView) $r1;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.support.v7.widget.RecyclerView recyclerView> = $r2;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void generalSetup()>();

     label1:
        return;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.turingtechnologies.materialscrollbar.ScrollingUtilities $r1;
        android.view.View $r2;
        com.turingtechnologies.materialscrollbar.Handle $r3;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean sizeUnchecked>;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean isInEditMode()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.ScrollingUtilities scrollUtils>;

        virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.ScrollingUtilities: void getCurScrollState()>();

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.ScrollingUtilities scrollUtils>;

        $i0 = virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.ScrollingUtilities: int getAvailableScrollHeight()>();

        if $i0 > 0 goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(8);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r3.<com.turingtechnologies.materialscrollbar.Handle: void setVisibility(int)>(8);

        return;

     label1:
        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r3.<com.turingtechnologies.materialscrollbar.Handle: void setVisibility(int)>(0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean sizeUnchecked> = 0;

     label2:
        return;
    }
    protected void onMeasure(int, int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>(12, r0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i3 != 1073741824 goto label3;

        $i2 = $i4;

     label1:
        if $i5 != 1073741824 goto label5;

        $i5 = $i6;

     label2:
        specialinvoke r0.<android.widget.RelativeLayout: void onMeasure(int,int)>($i0, $i1);

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setMeasuredDimension(int,int)>($i2, $i5);

        return;

     label3:
        if $i3 != -2147483648 goto label4;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

        goto label1;

     label4:
        goto label1;

     label5:
        if $i5 != -2147483648 goto label6;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(100, $i6);

        goto label2;

     label6:
        $i5 = 100;

        goto label2;
    }
abstract void onScroll() { 
// no body
} 
    public java.lang.Object removeIndicator()
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator> = null;

        return r0;
    }
    public java.lang.Object setBarColour(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        virtualinvoke $r1.<android.view.View: void setBackgroundColor(int)>($i0);

        return r0;
    }
    public java.lang.Object setBarColour(java.lang.String)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        java.lang.String $r1;
        android.view.View $r2;
        int $i0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

        virtualinvoke $r2.<android.view.View: void setBackgroundColor(int)>($i0);

        return r0;
    }
    public java.lang.Object setBarColourRes(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.view.View $r1;
        android.content.Context $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        $r2 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r2, $i0);

        virtualinvoke $r1.<android.view.View: void setBackgroundColor(int)>($i0);

        return r0;
    }
    public java.lang.Object setBarThickness(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        com.turingtechnologies.materialscrollbar.Handle $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.RelativeLayout$LayoutParams r3;
        android.view.View $r4;
        com.turingtechnologies.materialscrollbar.Indicator $r5;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>($i0, r0);

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        $r2 = virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.Handle: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.RelativeLayout$LayoutParams) $r2;

        r3.<android.widget.RelativeLayout$LayoutParams: int width> = $i0;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.Handle: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        $r2 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.RelativeLayout$LayoutParams) $r2;

        r3.<android.widget.RelativeLayout$LayoutParams: int width> = $i0;

        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        virtualinvoke $r4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        $r5 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        if $r5 == null goto label1;

        $r5 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        virtualinvoke $r5.<com.turingtechnologies.materialscrollbar.Indicator: void setSizeCustom(int)>($i0);

     label1:
        return r0;
    }
    public java.lang.Object setHandleColour(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour> = $i0;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setHandleColour()>();

        return r0;
    }
    public java.lang.Object setHandleColour(java.lang.String)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour> = $i0;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setHandleColour()>();

        return r0;
    }
    public java.lang.Object setHandleColourRes(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.content.Context $r1;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, $i0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour> = $i0;

        specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void setHandleColour()>();

        return r0;
    }
    public java.lang.Object setHandleOffColour(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.Handle $r1;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour> = $i0;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean lightOnTouch>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour>;

        virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.Handle: void setBackgroundColor(int)>($i0);

     label1:
        return r0;
    }
    public java.lang.Object setHandleOffColour(java.lang.String)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.Handle $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour> = $i0;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean lightOnTouch>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour>;

        virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Handle: void setBackgroundColor(int)>($i0);

     label1:
        return r0;
    }
    public java.lang.Object setHandleOffColourRes(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.content.Context $r1;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.Handle $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, $i0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour> = $i0;

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean lightOnTouch>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleOffColour>;

        virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Handle: void setBackgroundColor(int)>($i0);

     label1:
        return r0;
    }
    public void setScrollBarHidden(boolean)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        boolean $z0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $z0 := @parameter0: boolean;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean hiddenByUser> = $z0;

        virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: void fadeOut()>();

        return;
    }
    public java.lang.Object setTextColour(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        com.turingtechnologies.materialscrollbar.Indicator $r1;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour> = $i0;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        if $r1 == null goto label1;

        $r1 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour>;

        virtualinvoke $r1.<com.turingtechnologies.materialscrollbar.Indicator: void setTextColour(int)>($i0);

     label1:
        return r0;
    }
    public java.lang.Object setTextColour(java.lang.String)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        java.lang.String $r1;
        int $i0;
        com.turingtechnologies.materialscrollbar.Indicator $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour> = $i0;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        if $r2 == null goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour>;

        virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Indicator: void setTextColour(int)>($i0);

     label1:
        return r0;
    }
    public java.lang.Object setTextColourRes(int)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        int $i0;
        android.content.Context $r1;
        com.turingtechnologies.materialscrollbar.Indicator $r2;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.Context getContext()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, $i0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour> = $i0;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        if $r2 == null goto label1;

        $r2 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Indicator indicator>;

        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int textColour>;

        virtualinvoke $r2.<com.turingtechnologies.materialscrollbar.Indicator: void setTextColour(int)>($i0);

     label1:
        return r0;
    }
abstract void setTouchIntercept() { 
// no body
} 
    android.view.View setUpBackground(android.content.Context)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1;
        android.widget.RelativeLayout$LayoutParams r2;
        android.view.View $r3;
        int $i0;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r3 = new android.view.View;

        specialinvoke $r3.<android.view.View: void <init>(android.content.Context)>($r1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background> = $r3;

        r2 = new android.widget.RelativeLayout$LayoutParams;

        $i0 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>(12, r0);

        specialinvoke r2.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>($i0, -1);

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(11);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        virtualinvoke $r3.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, 17170432);

        virtualinvoke $r3.<android.view.View: void setBackgroundColor(int)>($i0);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        staticinvoke <com.nineoldandroids.view.ViewHelper: void setAlpha(android.view.View,float)>($r3, 0.4F);

        $r3 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.view.View background>;

        return $r3;
    }
    com.turingtechnologies.materialscrollbar.Handle setUpHanlde(android.content.Context, java.lang.Boolean)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1;
        java.lang.Boolean $r2;
        android.widget.RelativeLayout$LayoutParams r3;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.Handle $r4;
        int $i0, $i1;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.Boolean;

        $r4 = new com.turingtechnologies.materialscrollbar.Handle;

        $i0 = virtualinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int getMode()>();

        $z0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean programmatic>;

        specialinvoke $r4.<com.turingtechnologies.materialscrollbar.Handle: void <init>(android.content.Context,int,boolean)>($r1, $i0, $z0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle> = $r4;

        r3 = new android.widget.RelativeLayout$LayoutParams;

        $i0 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>(12, r0);

        $i1 = staticinvoke <com.turingtechnologies.materialscrollbar.Utils: int getDP(int,android.view.View)>(72, r0);

        specialinvoke r3.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(11);

        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r4.<com.turingtechnologies.materialscrollbar.Handle: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: boolean lightOnTouch> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $i0 = specialinvoke r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int fetchAccentColour(android.content.Context)>($r1);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour> = $i0;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#9c9c9c");

     label2:
        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        virtualinvoke $r4.<com.turingtechnologies.materialscrollbar.Handle: void setBackgroundColor(int)>($i0);

        $r4 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: com.turingtechnologies.materialscrollbar.Handle handle>;

        return $r4;

     label3:
        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#9c9c9c");

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour> = $i0;

        goto label1;

     label4:
        $i0 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: int handleColour>;

        goto label2;
    }
    void setUpProps(android.content.Context, android.util.AttributeSet)
    {
        com.turingtechnologies.materialscrollbar.MaterialScrollBar r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.util.ArrayList r3;
        android.content.res.Resources$Theme $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0;
        boolean $z0;
        com.turingtechnologies.materialscrollbar.CustomExceptions$MissingAttributesException $r7;

        r0 := @this: com.turingtechnologies.materialscrollbar.MaterialScrollBar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = <com.turingtechnologies.materialscrollbar.R$styleable: int[] MaterialScrollBar>;

        $r6 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, 0, 0);

        r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a> = $r6;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_recyclerView>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 != 0 goto label1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("recyclerView");

     label1:
        $r6 = r0.<com.turingtechnologies.materialscrollbar.MaterialScrollBar: android.content.res.TypedArray a>;

        $i0 = <com.turingtechnologies.materialscrollbar.R$styleable: int MaterialScrollBar_lightOnTouch>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 != 0 goto label2;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("lightOnTouch");

     label2:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label3;

        $r7 = new com.turingtechnologies.materialscrollbar.CustomExceptions$MissingAttributesException;

        specialinvoke $r7.<com.turingtechnologies.materialscrollbar.CustomExceptions$MissingAttributesException: void <init>(java.util.ArrayList)>(r3);

        throw $r7;

     label3:
        return;
    }
