com.nineoldandroids.animation.AnimatorSet$Builder extends java.lang.Object
private com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode
final com.nineoldandroids.animation.AnimatorSet this$0
    void <init>(com.nineoldandroids.animation.AnimatorSet, com.nineoldandroids.animation.Animator)
    {
        com.nineoldandroids.animation.AnimatorSet$Builder r0;
        com.nineoldandroids.animation.AnimatorSet $r1;
        com.nineoldandroids.animation.Animator $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.nineoldandroids.animation.AnimatorSet$Node $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Builder;

        $r1 := @parameter0: com.nineoldandroids.animation.AnimatorSet;

        $r2 := @parameter1: com.nineoldandroids.animation.Animator;

        r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r1);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (com.nineoldandroids.animation.AnimatorSet$Node) $r4;

        r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode> = $r5;

        $r5 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        if $r5 != null goto label1;

        $r5 = new com.nineoldandroids.animation.AnimatorSet$Node;

        specialinvoke $r5.<com.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.nineoldandroids.animation.Animator)>($r2);

        r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode> = $r5;

        $r3 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r1);

        $r5 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r6 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet)>($r1);

        $r5 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label1:
        return;
    }
    public com.nineoldandroids.animation.AnimatorSet$Builder after(long)
    {
        com.nineoldandroids.animation.AnimatorSet$Builder r0;
        long $l0;
        com.nineoldandroids.animation.ValueAnimator $r1;
        float[] $r2;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Builder;

        $l0 := @parameter0: long;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r1 = staticinvoke <com.nineoldandroids.animation.ValueAnimator: com.nineoldandroids.animation.ValueAnimator ofFloat(float[])>($r2);

        virtualinvoke $r1.<com.nineoldandroids.animation.ValueAnimator: com.nineoldandroids.animation.ValueAnimator setDuration(long)>($l0);

        virtualinvoke r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator)>($r1);

        return r0;
    }
    public com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator)
    {
        com.nineoldandroids.animation.AnimatorSet$Builder r0;
        com.nineoldandroids.animation.Animator $r1;
        com.nineoldandroids.animation.AnimatorSet$Dependency r2;
        com.nineoldandroids.animation.AnimatorSet $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.nineoldandroids.animation.AnimatorSet$Node r6;
        java.util.ArrayList $r7;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Builder;

        $r1 := @parameter0: com.nineoldandroids.animation.Animator;

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (com.nineoldandroids.animation.AnimatorSet$Node) $r5;

        if r6 != null goto label1;

        r6 = new com.nineoldandroids.animation.AnimatorSet$Node;

        specialinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.nineoldandroids.animation.Animator)>($r1);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r7 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label1:
        r2 = new com.nineoldandroids.animation.AnimatorSet$Dependency;

        specialinvoke r2.<com.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.nineoldandroids.animation.AnimatorSet$Node,int)>(r6, 1);

        r6 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency)>(r2);

        return r0;
    }
    public com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator)
    {
        com.nineoldandroids.animation.AnimatorSet$Builder r0;
        com.nineoldandroids.animation.Animator $r1;
        com.nineoldandroids.animation.AnimatorSet$Dependency r2;
        com.nineoldandroids.animation.AnimatorSet $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.nineoldandroids.animation.AnimatorSet$Node r6, $r8;
        java.util.ArrayList $r7;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Builder;

        $r1 := @parameter0: com.nineoldandroids.animation.Animator;

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (com.nineoldandroids.animation.AnimatorSet$Node) $r5;

        if r6 != null goto label1;

        r6 = new com.nineoldandroids.animation.AnimatorSet$Node;

        specialinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.nineoldandroids.animation.Animator)>($r1);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r7 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label1:
        r2 = new com.nineoldandroids.animation.AnimatorSet$Dependency;

        $r8 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        specialinvoke r2.<com.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.nineoldandroids.animation.AnimatorSet$Node,int)>($r8, 1);

        virtualinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency)>(r2);

        return r0;
    }
    public com.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.nineoldandroids.animation.Animator)
    {
        com.nineoldandroids.animation.AnimatorSet$Builder r0;
        com.nineoldandroids.animation.Animator $r1;
        com.nineoldandroids.animation.AnimatorSet$Dependency r2;
        com.nineoldandroids.animation.AnimatorSet $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.nineoldandroids.animation.AnimatorSet$Node r6, $r8;
        java.util.ArrayList $r7;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Builder;

        $r1 := @parameter0: com.nineoldandroids.animation.Animator;

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (com.nineoldandroids.animation.AnimatorSet$Node) $r5;

        if r6 != null goto label1;

        r6 = new com.nineoldandroids.animation.AnimatorSet$Node;

        specialinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.nineoldandroids.animation.Animator)>($r1);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet this$0>;

        $r7 = staticinvoke <com.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet)>($r3);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label1:
        r2 = new com.nineoldandroids.animation.AnimatorSet$Dependency;

        $r8 = r0.<com.nineoldandroids.animation.AnimatorSet$Builder: com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode>;

        specialinvoke r2.<com.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.nineoldandroids.animation.AnimatorSet$Node,int)>($r8, 0);

        virtualinvoke r6.<com.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency)>(r2);

        return r0;
    }
