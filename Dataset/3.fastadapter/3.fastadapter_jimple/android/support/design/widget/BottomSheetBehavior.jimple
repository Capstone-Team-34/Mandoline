android.support.design.widget.BottomSheetBehavior extends android.support.design.widget.CoordinatorLayout$Behavior
private static final float HIDE_FRICTION
private static final float HIDE_THRESHOLD
public static final int STATE_COLLAPSED
public static final int STATE_DRAGGING
public static final int STATE_EXPANDED
public static final int STATE_HIDDEN
public static final int STATE_SETTLING
private int mActivePointerId
private android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback
private final android.support.v4.widget.ViewDragHelper$Callback mDragCallback
private boolean mHideable
private boolean mIgnoreEvents
private int mInitialY
private int mLastNestedScrollDy
private int mMaxOffset
private float mMaximumVelocity
private int mMinOffset
private boolean mNestedScrolled
private java.lang.ref.WeakReference mNestedScrollingChildRef
private int mParentHeight
private int mPeekHeight
private int mState
private boolean mTouchingScrollingChild
private android.view.VelocityTracker mVelocityTracker
private android.support.v4.widget.ViewDragHelper mViewDragHelper
private java.lang.ref.WeakReference mViewRef
    public void <init>()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.BottomSheetBehavior$1 $r1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: void <init>()>();

        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = 4;

        $r1 = new android.support.design.widget.BottomSheetBehavior$1;

        specialinvoke $r1.<android.support.design.widget.BottomSheetBehavior$1: void <init>(android.support.design.widget.BottomSheetBehavior)>(r0);

        r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback> = $r1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.support.design.widget.BottomSheetBehavior$1 $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        int $i0;
        boolean $z0;
        android.view.ViewConfiguration $r6;
        float $f0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = 4;

        $r3 = new android.support.design.widget.BottomSheetBehavior$1;

        specialinvoke $r3.<android.support.design.widget.BottomSheetBehavior$1: void <init>(android.support.design.widget.BottomSheetBehavior)>(r0);

        r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback> = $r3;

        $r4 = <android.support.design.R$styleable: int[] BottomSheetBehavior_Params>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r4);

        $i0 = <android.support.design.R$styleable: int BottomSheetBehavior_Params_behavior_peekHeight>;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setPeekHeight(int)>($i0);

        $i0 = <android.support.design.R$styleable: int BottomSheetBehavior_Params_behavior_hideable>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setHideable(boolean)>($z0);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r6 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke $r6.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $f0 = (float) $i0;

        r0.<android.support.design.widget.BottomSheetBehavior: float mMaximumVelocity> = $f0;

        return;
    }
    static int access$000(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        i0 = $r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        return i0;
    }
    static boolean access$100(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        boolean z0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        z0 = $r0.<android.support.design.widget.BottomSheetBehavior: boolean mTouchingScrollingChild>;

        return z0;
    }
    static int access$1000(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        i0 = $r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        return i0;
    }
    static int access$1100(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        i0 = $r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        return i0;
    }
    static android.support.v4.widget.ViewDragHelper access$1200(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        android.support.v4.widget.ViewDragHelper r1;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        r1 = $r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        return r1;
    }
    static int access$200(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        i0 = $r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId>;

        return i0;
    }
    static java.lang.ref.WeakReference access$300(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        java.lang.ref.WeakReference r1;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        r1 = $r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        return r1;
    }
    static java.lang.ref.WeakReference access$400(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        java.lang.ref.WeakReference r1;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        r1 = $r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef>;

        return r1;
    }
    static void access$500(android.support.design.widget.BottomSheetBehavior, int)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int $i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.support.design.widget.BottomSheetBehavior: void dispatchOnSlide(int)>($i0);

        return;
    }
    static void access$600(android.support.design.widget.BottomSheetBehavior, int)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int $i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>($i0);

        return;
    }
    static int access$700(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        i0 = $r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        return i0;
    }
    static boolean access$800(android.support.design.widget.BottomSheetBehavior)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        boolean z0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        z0 = $r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        return z0;
    }
    static boolean access$900(android.support.design.widget.BottomSheetBehavior, android.view.View, float)
    {
        android.support.design.widget.BottomSheetBehavior $r0;
        android.view.View $r1;
        float $f0;
        boolean $z0;

        $r0 := @parameter0: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter1: android.view.View;

        $f0 := @parameter2: float;

        $z0 = specialinvoke $r0.<android.support.design.widget.BottomSheetBehavior: boolean shouldHide(android.view.View,float)>($r1, $f0);

        return $z0;
    }
    private void dispatchOnSlide(int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        android.view.View r3;
        android.support.design.widget.BottomSheetBehavior$BottomSheetCallback $r4;
        float $f0, $f1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.View) $r1;

        if r3 == null goto label2;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback>;

        if $r4 == null goto label2;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        if $i0 <= $i1 goto label1;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback>;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mPeekHeight>;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        virtualinvoke $r4.<android.support.design.widget.BottomSheetBehavior$BottomSheetCallback: void onSlide(android.view.View,float)>(r3, $f0);

        return;

     label1:
        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback>;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $i0 = $i1 - $i0;

        $f0 = (float) $i0;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        virtualinvoke $r4.<android.support.design.widget.BottomSheetBehavior$BottomSheetCallback: void onSlide(android.view.View,float)>(r3, $f0);

     label2:
        return;
    }
    private android.view.View findScrollingChild(android.view.View)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.view.View r1;
        boolean $z0;
        android.view.ViewGroup r2;
        int i0, $i1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        r2 = (android.view.ViewGroup) r1;

        i0 = 0;

        $i1 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

     label2:
        if i0 >= $i1 goto label4;

        r1 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        r1 = specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>(r1);

        if r1 == null goto label3;

        return r1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return null;
    }
    public static android.support.design.widget.BottomSheetBehavior 'from'(android.view.View)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        android.support.design.widget.CoordinatorLayout$Behavior $r4;
        android.support.design.widget.BottomSheetBehavior r5;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r1 instanceof android.support.design.widget.CoordinatorLayout$LayoutParams;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not a child of CoordinatorLayout");

        throw $r2;

     label1:
        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r1;

        $r4 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        $z0 = $r4 instanceof android.support.design.widget.BottomSheetBehavior;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The view is not associated with BottomSheetBehavior");

        throw $r2;

     label2:
        r5 = (android.support.design.widget.BottomSheetBehavior) $r4;

        return r5;
    }
    private float getYVelocity()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        float $f0;
        android.view.VelocityTracker $r1;
        int $i0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        $f0 = r0.<android.support.design.widget.BottomSheetBehavior: float mMaximumVelocity>;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r1, $i0);

        return $f0;
    }
    private void reset()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.view.VelocityTracker $r1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId> = -1;

        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }
    private void setStateInternal(int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        android.view.View r3;
        android.support.design.widget.BottomSheetBehavior$BottomSheetCallback $r4;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = $i0;

        $r2 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.View) $r1;

        if r3 == null goto label2;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback>;

        virtualinvoke $r4.<android.support.design.widget.BottomSheetBehavior$BottomSheetCallback: void onStateChanged(android.view.View,int)>(r3, $i0);

     label2:
        return;
    }
    private boolean shouldHide(android.view.View, float)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.view.View $r1;
        float $f0, $f1;
        int $i0, $i1;
        byte $b2;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        if $i0 >= $i1 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $f1 = (float) $i0;

        $f0 = 0.1F * $f0;

        $f0 = $f1 + $f0;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mPeekHeight>;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $b2 = $f0 cmpl 0.5F;

        if $b2 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public final int getPeekHeight()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mPeekHeight>;

        return i0;
    }
    public final int getState()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        return i0;
    }
    public boolean isHideable()
    {
        android.support.design.widget.BottomSheetBehavior r0;
        boolean z0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        return z0;
    }
    public boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2, r8;
        android.view.MotionEvent $r3;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.view.VelocityTracker $r4;
        android.support.v4.widget.ViewDragHelper $r5;
        float $f0, $f1;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        byte $b3;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 = 1;

        $z1 = virtualinvoke r2.<android.view.View: boolean isShown()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r3);

        if $i1 != 0 goto label02;

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void reset()>();

     label02:
        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label03;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker> = $r4;

     label03:
        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r3);

        lookupswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label05;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label04;
        };

     label04:
        $z1 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents>;

        if $z1 != 0 goto label10;

        $r5 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $z1 = virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>($r3);

        if $z1 == 0 goto label10;

        return 1;

     label05:
        r0.<android.support.design.widget.BottomSheetBehavior: boolean mTouchingScrollingChild> = 0;

        r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId> = -1;

        $z1 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents>;

        if $z1 == 0 goto label04;

        r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents> = 0;

        return 0;

     label06:
        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $i2 = (int) $f0;

        r0.<android.support.design.widget.BottomSheetBehavior: int mInitialY> = $i2;

        $r6 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r8 = (android.view.View) $r7;

        if r8 == null goto label07;

        $i2 = r0.<android.support.design.widget.BottomSheetBehavior: int mInitialY>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>(r8, i0, $i2);

        if $z1 == 0 goto label07;

        $i2 = virtualinvoke $r3.<android.view.MotionEvent: int getActionIndex()>();

        $i2 = virtualinvoke $r3.<android.view.MotionEvent: int getPointerId(int)>($i2);

        r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId> = $i2;

        r0.<android.support.design.widget.BottomSheetBehavior: boolean mTouchingScrollingChild> = 1;

     label07:
        $i2 = r0.<android.support.design.widget.BottomSheetBehavior: int mActivePointerId>;

        if $i2 != -1 goto label09;

        $i2 = r0.<android.support.design.widget.BottomSheetBehavior: int mInitialY>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>(r2, i0, $i2);

        if $z1 != 0 goto label09;

        $z1 = 1;

     label08:
        r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents> = $z1;

        goto label04;

     label09:
        $z1 = 0;

        goto label08;

     label10:
        $r6 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.View) $r7;

        if $i1 != 2 goto label12;

        if r2 == null goto label12;

        $z1 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents>;

        if $z1 != 0 goto label12;

        i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if i0 == 1 goto label12;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z1 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>(r2, i0, $i1);

        if $z1 != 0 goto label12;

        i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mInitialY>;

        $f0 = (float) i0;

        $f1 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $r5 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        i0 = virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f1 = (float) i0;

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label12;

     label11:
        return $z0;

     label12:
        $z0 = 0;

        goto label11;
    }
    public boolean onLayoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v4.widget.ViewDragHelper $r3;
        android.support.v4.widget.ViewDragHelper$Callback $r4;
        java.lang.ref.WeakReference $r5;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i1 == 1 goto label2;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i1 == 2 goto label2;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r2);

        if $z0 != 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>(r2, 1);

     label1:
        virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>(r2, $i0);

     label2:
        $i0 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight> = $i0;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        $i1 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset> = $i0;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mPeekHeight>;

        $i0 = $i0 - $i1;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset> = $i0;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i0 != 3 goto label5;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

     label3:
        $r3 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        if $r3 != null goto label4;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback>;

        $r3 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r1, $r4);

        r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper> = $r3;

     label4:
        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef> = $r5;

        $r5 = new java.lang.ref.WeakReference;

        r2 = specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>(r2);

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef> = $r5;

        return 1;

     label5:
        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        if $z0 == 0 goto label6;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i0 != 5 goto label6;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        goto label3;

     label6:
        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i0 != 4 goto label3;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        goto label3;
    }
    public boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View, float, float)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2, $r3;
        float $f0, $f1;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 != $r5 goto label2;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i0 != 3 goto label1;

        $z0 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>($r1, r2, $r3, $f0, $f1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void onNestedPreScroll(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View, int, int, int[])
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2, $r3, r7;
        int $i0, $i1, i2, $i3;
        int[] $r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: int[];

        $r5 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.view.View) $r6;

        if $r3 == r7 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        i2 = $i0 - $i1;

        if $i1 <= 0 goto label4;

        $i3 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        if i2 >= $i3 goto label3;

        i2 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        $i0 = $i0 - i2;

        $r4[1] = $i0;

        $i0 = $r4[1];

        $i0 = neg $i0;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(3);

     label2:
        $i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void dispatchOnSlide(int)>($i0);

        r0.<android.support.design.widget.BottomSheetBehavior: int mLastNestedScrollDy> = $i1;

        r0.<android.support.design.widget.BottomSheetBehavior: boolean mNestedScrolled> = 1;

        return;

     label3:
        $r4[1] = $i1;

        $i0 = neg $i1;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(1);

        goto label2;

     label4:
        if $i1 >= 0 goto label2;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r3, -1);

        if $z0 != 0 goto label2;

        $i3 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        if i2 <= $i3 goto label5;

        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        if $z0 == 0 goto label6;

     label5:
        $r4[1] = $i1;

        $i0 = neg $i1;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(1);

        goto label2;

     label6:
        i2 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $i0 = $i0 - i2;

        $r4[1] = $i0;

        $i0 = $r4[1];

        $i0 = neg $i0;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>(r2, $i0);

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(4);

        goto label2;
    }
    public void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout, android.view.View, android.os.Parcelable)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        android.os.Parcelable $r3;
        android.support.design.widget.BottomSheetBehavior$SavedState r4;
        int $i0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.os.Parcelable;

        r4 = (android.support.design.widget.BottomSheetBehavior$SavedState) $r3;

        $r3 = virtualinvoke r4.<android.support.design.widget.BottomSheetBehavior$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>($r1, r2, $r3);

        $i0 = r4.<android.support.design.widget.BottomSheetBehavior$SavedState: int state>;

        if $i0 == 1 goto label1;

        $i0 = r4.<android.support.design.widget.BottomSheetBehavior$SavedState: int state>;

        if $i0 != 2 goto label2;

     label1:
        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = 4;

        return;

     label2:
        $i0 = r4.<android.support.design.widget.BottomSheetBehavior$SavedState: int state>;

        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = $i0;

        return;
    }
    public android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout, android.view.View)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        android.support.design.widget.BottomSheetBehavior$SavedState $r3;
        int $i0;
        android.os.Parcelable $r4;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 = new android.support.design.widget.BottomSheetBehavior$SavedState;

        $r4 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View)>($r1, r2);

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        specialinvoke $r3.<android.support.design.widget.BottomSheetBehavior$SavedState: void <init>(android.os.Parcelable,int)>($r4, $i0);

        return $r3;
    }
    public boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View, android.view.View, int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2, $r3, $r4;
        int $i0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $r4 := @parameter3: android.view.View;

        $i0 := @parameter4: int;

        r0.<android.support.design.widget.BottomSheetBehavior: int mLastNestedScrollDy> = 0;

        r0.<android.support.design.widget.BottomSheetBehavior: boolean mNestedScrolled> = 0;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void onStopNestedScroll(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2, $r3;
        int $i0, $i1, $i3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        boolean $z0;
        byte b2;
        android.support.v4.widget.ViewDragHelper $r6;
        android.support.design.widget.BottomSheetBehavior$SettleRunnable $r7;
        float $f0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(3);

        return;

     label1:
        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mNestedScrollingChildRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 != $r5 goto label9;

        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mNestedScrolled>;

        if $z0 == 0 goto label9;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mLastNestedScrollDy>;

        if $i0 <= 0 goto label4;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        b2 = 3;

     label2:
        $r6 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $i1 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $z0 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r2, $i1, $i0);

        if $z0 == 0 goto label8;

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(2);

        $r7 = new android.support.design.widget.BottomSheetBehavior$SettleRunnable;

        specialinvoke $r7.<android.support.design.widget.BottomSheetBehavior$SettleRunnable: void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int)>(r0, r2, b2);

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r2, $r7);

     label3:
        r0.<android.support.design.widget.BottomSheetBehavior: boolean mNestedScrolled> = 0;

        return;

     label4:
        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        if $z0 == 0 goto label5;

        $f0 = specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: float getYVelocity()>();

        $z0 = specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: boolean shouldHide(android.view.View,float)>(r2, $f0);

        if $z0 == 0 goto label5;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        b2 = 5;

        goto label2;

     label5:
        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mLastNestedScrollDy>;

        if $i0 != 0 goto label7;

        $i0 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i1 >= $i0 goto label6;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        b2 = 3;

        goto label2;

     label6:
        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        b2 = 4;

        goto label2;

     label7:
        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

        b2 = 4;

        goto label2;

     label8:
        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(b2);

        goto label3;

     label9:
        return;
    }
    public boolean onTouchEvent(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        android.view.MotionEvent $r3;
        boolean $z0;
        int $i0, $i1;
        android.support.v4.widget.ViewDragHelper $r4;
        android.view.VelocityTracker $r5;
        float $f0, $f1;
        byte $b2;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.MotionEvent;

        $z0 = virtualinvoke r2.<android.view.View: boolean isShown()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r3);

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i1 != 1 goto label2;

        if $i0 == 0 goto label5;

     label2:
        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>($r3);

        if $i0 != 0 goto label3;

        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void reset()>();

     label3:
        $r5 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        if $r5 != null goto label4;

        $r5 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker> = $r5;

     label4:
        $r5 = r0.<android.support.design.widget.BottomSheetBehavior: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r3);

        if $i0 != 2 goto label5;

        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mIgnoreEvents>;

        if $z0 != 0 goto label5;

        $i0 = r0.<android.support.design.widget.BottomSheetBehavior: int mInitialY>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $i0 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f1 = (float) $i0;

        $b2 = $f0 cmpl $f1;

        if $b2 <= 0 goto label5;

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $i0 = virtualinvoke $r3.<android.view.MotionEvent: int getActionIndex()>();

        $i0 = virtualinvoke $r3.<android.view.MotionEvent: int getPointerId(int)>($i0);

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>(r2, $i0);

     label5:
        return 1;
    }
    public void setBottomSheetCallback(android.support.design.widget.BottomSheetBehavior$BottomSheetCallback)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        android.support.design.widget.BottomSheetBehavior$BottomSheetCallback $r1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $r1 := @parameter0: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback;

        r0.<android.support.design.widget.BottomSheetBehavior: android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback> = $r1;

        return;
    }
    public void setHideable(boolean)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $z0 := @parameter0: boolean;

        r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable> = $z0;

        return;
    }
    public final void setPeekHeight(int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        r0.<android.support.design.widget.BottomSheetBehavior: int mPeekHeight> = $i1;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        $i0 = $i1 - $i0;

        r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset> = $i0;

        return;
    }
    public final void setState(int)
    {
        android.support.design.widget.BottomSheetBehavior r0;
        int $i0, $i1, $i2;
        java.lang.ref.WeakReference $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.view.View r3;
        android.support.v4.widget.ViewDragHelper $r4;
        android.support.design.widget.BottomSheetBehavior$SettleRunnable $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: android.support.design.widget.BottomSheetBehavior;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mState>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef>;

        if $r1 != null goto label3;

        if $i0 == 4 goto label2;

        if $i0 == 3 goto label2;

        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        if $z0 == 0 goto label8;

        if $i0 != 5 goto label8;

     label2:
        r0.<android.support.design.widget.BottomSheetBehavior: int mState> = $i0;

        return;

     label3:
        $r1 = r0.<android.support.design.widget.BottomSheetBehavior: java.lang.ref.WeakReference mViewRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.View) $r2;

        if r3 == null goto label8;

        if $i0 != 4 goto label5;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMaxOffset>;

     label4:
        specialinvoke r0.<android.support.design.widget.BottomSheetBehavior: void setStateInternal(int)>(2);

        $r4 = r0.<android.support.design.widget.BottomSheetBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $i2 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $z0 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r3, $i2, $i1);

        if $z0 == 0 goto label8;

        $r5 = new android.support.design.widget.BottomSheetBehavior$SettleRunnable;

        specialinvoke $r5.<android.support.design.widget.BottomSheetBehavior$SettleRunnable: void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int)>(r0, r3, $i0);

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r3, $r5);

        return;

     label5:
        if $i0 != 3 goto label6;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mMinOffset>;

        goto label4;

     label6:
        $z0 = r0.<android.support.design.widget.BottomSheetBehavior: boolean mHideable>;

        if $z0 == 0 goto label7;

        if $i0 != 5 goto label7;

        $i1 = r0.<android.support.design.widget.BottomSheetBehavior: int mParentHeight>;

        goto label4;

     label7:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal state argument: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label8:
        return;
    }
