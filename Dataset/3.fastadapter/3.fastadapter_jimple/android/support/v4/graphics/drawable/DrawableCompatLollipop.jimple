android.support.v4.graphics.drawable.DrawableCompatLollipop extends java.lang.Object
    void <init>()
    {
        android.support.v4.graphics.drawable.DrawableCompatLollipop r0;

        r0 := @this: android.support.v4.graphics.drawable.DrawableCompatLollipop;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void applyTheme(android.graphics.drawable.Drawable, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.Drawable $r0;
        android.content.res.Resources$Theme $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.Resources$Theme;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>($r1);

        return;
    }
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        return $z0;
    }
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.ColorFilter $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>();

        return $r1;
    }
    public static void inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.Drawable $r0;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        android.util.AttributeSet $r3;
        android.content.res.Resources$Theme $r4;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter3: android.util.AttributeSet;

        $r4 := @parameter4: android.content.res.Resources$Theme;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4);

        return;
    }
    public static void setHotspot(android.graphics.drawable.Drawable, float, float)
    {
        android.graphics.drawable.Drawable $r0;
        float $f0, $f1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspot(float,float)>($f0, $f1);

        return;
    }
    public static void setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.graphics.drawable.Drawable $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public static void setTint(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable $r0;
        int $i0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setTint(int)>($i0);

        return;
    }
    public static void setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList)
    {
        android.graphics.drawable.Drawable $r0;
        android.content.res.ColorStateList $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.content.res.ColorStateList;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r1);

        return;
    }
    public static void setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r1);

        return;
    }
    public static android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = $r0 instanceof android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        if $z0 != 0 goto label1;

        $r1 = new android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        specialinvoke $r1.<android.support.v4.graphics.drawable.DrawableWrapperLollipop: void <init>(android.graphics.drawable.Drawable)>($r0);

        return $r1;

     label1:
        return $r0;
    }
