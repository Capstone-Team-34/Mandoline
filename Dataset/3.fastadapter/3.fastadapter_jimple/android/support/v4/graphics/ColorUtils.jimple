android.support.v4.graphics.ColorUtils extends java.lang.Object
private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
private static final int MIN_ALPHA_SEARCH_PRECISION
private static final java.lang.ThreadLocal TEMP_ARRAY
private static final double XYZ_EPSILON
private static final double XYZ_KAPPA
private static final double XYZ_WHITE_REFERENCE_X
private static final double XYZ_WHITE_REFERENCE_Y
private static final double XYZ_WHITE_REFERENCE_Z
    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.support.v4.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY> = $r0;

        return;
    }
    private void <init>()
    {
        android.support.v4.graphics.ColorUtils r0;

        r0 := @this: android.support.v4.graphics.ColorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int HSLToColor(float[])
    {
        float[] $r0;
        float f0, f1, f2, f3;
        int i0, $i1, i2, i3;

        $r0 := @parameter0: float[];

        f1 = $r0[0];

        f0 = $r0[1];

        f2 = $r0[2];

        f3 = 2.0F * f2;

        f3 = f3 - 1.0F;

        f3 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        f3 = 1.0F - f3;

        f0 = f3 * f0;

        f3 = 0.5F * f0;

        f2 = f2 - f3;

        f3 = f1 / 60.0F;

        f3 = f3 % 2.0F;

        f3 = f3 - 1.0F;

        f3 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        f3 = 1.0F - f3;

        f3 = f0 * f3;

        $i1 = (int) f1;

        i0 = $i1 / 60;

        $i1 = 0;

        i2 = 0;

        i3 = 0;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label7;
            default: goto label1;
        };

     label1:
        $i1 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i1, 0, 255);

        i2 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>(i2, 0, 255);

        i3 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>(i3, 0, 255);

        $i1 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i1, i2, i3);

        return $i1;

     label2:
        f0 = f0 + f2;

        f0 = 255.0F * f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f0 = f3 + f2;

        f0 = 255.0F * f0;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;

     label3:
        f1 = f3 + f2;

        f1 = 255.0F * f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f0 = f0 + f2;

        f0 = 255.0F * f0;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;

     label4:
        f1 = 255.0F * f2;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f0 = f0 + f2;

        f0 = 255.0F * f0;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f2 = f3 + f2;

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;

     label5:
        f1 = 255.0F * f2;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f1 = f3 + f2;

        f1 = 255.0F * f1;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f2 = f0 + f2;

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;

     label6:
        f1 = f3 + f2;

        f1 = 255.0F * f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f1 = 255.0F * f2;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f1);

        f2 = f0 + f2;

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;

     label7:
        f0 = f0 + f2;

        f0 = 255.0F * f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f0 = 255.0F * f2;

        i2 = staticinvoke <java.lang.Math: int round(float)>(f0);

        f2 = f3 + f2;

        f2 = 255.0F * f2;

        i3 = staticinvoke <java.lang.Math: int round(float)>(f2);

        goto label1;
    }
    public static int LABToColor(double, double, double)
    {
        double $d0, $d1, $d2;
        double[] $r0;
        int $i0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $r0 = staticinvoke <android.support.v4.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <android.support.v4.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])>($d0, $d1, $d2, $r0);

        $d0 = $r0[0];

        $d1 = $r0[1];

        $d2 = $r0[2];

        $i0 = staticinvoke <android.support.v4.graphics.ColorUtils: int XYZToColor(double,double,double)>($d0, $d1, $d2);

        return $i0;
    }
    public static void LABToXYZ(double, double, double, double[])
    {
        double $d0, $d1, $d2, d3, d4;
        double[] $r0;
        byte $b0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $r0 := @parameter3: double[];

        d4 = 16.0 + $d0;

        d4 = d4 / 116.0;

        $d1 = $d1 / 500.0;

        d3 = $d1 + d4;

        $d1 = $d2 / 200.0;

        $d1 = d4 - $d1;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(d3, 3.0);

        $b0 = $d2 cmpl 0.008856;

        if $b0 <= 0 goto label4;

     label1:
        $b0 = $d0 cmpl 7.9996247999999985;

        if $b0 <= 0 goto label5;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(d4, 3.0);

     label2:
        d4 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 3.0);

        $b0 = d4 cmpl 0.008856;

        if $b0 <= 0 goto label6;

        $d1 = d4;

     label3:
        $d2 = 95.047 * $d2;

        $r0[0] = $d2;

        $d0 = 100.0 * $d0;

        $r0[1] = $d0;

        $d0 = 108.883 * $d1;

        $r0[2] = $d0;

        return;

     label4:
        $d2 = 116.0 * d3;

        $d2 = $d2 - 16.0;

        $d2 = $d2 / 903.3;

        goto label1;

     label5:
        $d0 = $d0 / 903.3;

        goto label2;

     label6:
        $d1 = 116.0 * $d1;

        $d1 = $d1 - 16.0;

        $d1 = $d1 / 903.3;

        goto label3;
    }
    public static void RGBToHSL(int, int, int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;
        float f0, f1, f2, f3, f4, $f5, $f6;
        byte $b3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: float[];

        f3 = (float) $i0;

        f4 = f3 / 255.0F;

        f3 = (float) $i1;

        f2 = f3 / 255.0F;

        f3 = (float) $i2;

        f0 = f3 / 255.0F;

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f2, f0);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>(f4, f3);

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(f2, f0);

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>(f4, f3);

        f1 = $f5 - $f6;

        f3 = $f5 + $f6;

        f3 = f3 / 2.0F;

        $b3 = $f5 cmpl $f6;

        if $b3 != 0 goto label3;

        f1 = 0.0F;

        f4 = 0.0F;

     label1:
        f4 = 60.0F * f4;

        f4 = f4 % 360.0F;

        $b3 = f4 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        f4 = f4 + 360.0F;

     label2:
        f4 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>(f4, 0.0F, 360.0F);

        $r0[0] = f4;

        f1 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>(f1, 0.0F, 1.0F);

        $r0[1] = f1;

        f3 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>(f3, 0.0F, 1.0F);

        $r0[2] = f3;

        return;

     label3:
        $b3 = $f5 cmpl f4;

        if $b3 != 0 goto label5;

        f4 = f2 - f0;

        f4 = f4 / f1;

        f4 = f4 % 6.0F;

     label4:
        f2 = 2.0F * f3;

        f2 = f2 - 1.0F;

        f2 = staticinvoke <java.lang.Math: float abs(float)>(f2);

        f2 = 1.0F - f2;

        f1 = f1 / f2;

        goto label1;

     label5:
        $b3 = $f5 cmpl f2;

        if $b3 != 0 goto label6;

        f4 = f0 - f4;

        f4 = f4 / f1;

        f4 = f4 + 2.0F;

        goto label4;

     label6:
        f4 = f4 - f2;

        f4 = f4 / f1;

        f4 = f4 + 4.0F;

        goto label4;
    }
    public static void RGBToLAB(int, int, int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;
        double $d0, $d1, $d2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: double[];

        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>($i0, $i1, $i2, $r0);

        $d0 = $r0[0];

        $d1 = $r0[1];

        $d2 = $r0[2];

        staticinvoke <android.support.v4.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])>($d0, $d1, $d2, $r0);

        return;
    }
    public static void RGBToXYZ(int, int, int, double[])
    {
        int $i0, $i1, $i2, $i3;
        double[] $r0;
        java.lang.IllegalArgumentException $r1;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: double[];

        $i3 = lengthof $r0;

        if $i3 == 3 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outXyz must have a length of 3.");

        throw $r1;

     label1:
        $d0 = (double) $i0;

        $d0 = $d0 / 255.0;

        $b4 = $d0 cmpg 0.04045;

        if $b4 >= 0 goto label5;

        $d0 = $d0 / 12.92;

     label2:
        $d1 = (double) $i1;

        $d1 = $d1 / 255.0;

        $b4 = $d1 cmpg 0.04045;

        if $b4 >= 0 goto label6;

        $d1 = $d1 / 12.92;

     label3:
        $d2 = (double) $i2;

        $d2 = $d2 / 255.0;

        $b4 = $d2 cmpg 0.04045;

        if $b4 >= 0 goto label7;

        $d2 = $d2 / 12.92;

     label4:
        $d3 = 0.4124 * $d0;

        $d4 = 0.3576 * $d1;

        $d3 = $d3 + $d4;

        $d4 = 0.1805 * $d2;

        $d3 = $d3 + $d4;

        $d3 = 100.0 * $d3;

        $r0[0] = $d3;

        $d3 = 0.2126 * $d0;

        $d4 = 0.7152 * $d1;

        $d3 = $d3 + $d4;

        $d4 = 0.0722 * $d2;

        $d3 = $d3 + $d4;

        $d3 = 100.0 * $d3;

        $r0[1] = $d3;

        $d0 = 0.0193 * $d0;

        $d1 = 0.1192 * $d1;

        $d0 = $d0 + $d1;

        $d1 = 0.9505 * $d2;

        $d0 = $d0 + $d1;

        $d0 = 100.0 * $d0;

        $r0[2] = $d0;

        return;

     label5:
        $d0 = 0.055 + $d0;

        $d0 = $d0 / 1.055;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.4);

        goto label2;

     label6:
        $d1 = 0.055 + $d1;

        $d1 = $d1 / 1.055;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.4);

        goto label3;

     label7:
        $d2 = 0.055 + $d2;

        $d2 = $d2 / 1.055;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.4);

        goto label4;
    }
    public static int XYZToColor(double, double, double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0;
        long $l1;
        int $i2, $i3, $i4;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 = 3.2406 * $d0;

        $d4 = -1.5372 * $d1;

        $d3 = $d3 + $d4;

        $d4 = -0.4986 * $d2;

        $d3 = $d3 + $d4;

        $d3 = $d3 / 100.0;

        $d4 = -0.9689 * $d0;

        $d5 = 1.8758 * $d1;

        $d4 = $d4 + $d5;

        $d5 = 0.0415 * $d2;

        $d4 = $d4 + $d5;

        $d4 = $d4 / 100.0;

        $d0 = 0.0557 * $d0;

        $d1 = -0.204 * $d1;

        $d0 = $d0 + $d1;

        $d1 = 1.057 * $d2;

        $d0 = $d0 + $d1;

        $d0 = $d0 / 100.0;

        $b0 = $d3 cmpl 0.0031308;

        if $b0 <= 0 goto label4;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 0.4166666666666667);

        $d1 = 1.055 * $d1;

        $d1 = $d1 - 0.055;

     label1:
        $b0 = $d4 cmpl 0.0031308;

        if $b0 <= 0 goto label5;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 0.4166666666666667);

        $d2 = 1.055 * $d2;

        $d2 = $d2 - 0.055;

     label2:
        $b0 = $d0 cmpl 0.0031308;

        if $b0 <= 0 goto label6;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.4166666666666667);

        $d0 = 1.055 * $d0;

        $d0 = $d0 - 0.055;

     label3:
        $d1 = 255.0 * $d1;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d1);

        $i2 = (int) $l1;

        $i2 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i2, 0, 255);

        $d1 = 255.0 * $d2;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d1);

        $i3 = (int) $l1;

        $i3 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i3, 0, 255);

        $d0 = 255.0 * $d0;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i4 = (int) $l1;

        $i4 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i4, 0, 255);

        $i2 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i2, $i3, $i4);

        return $i2;

     label4:
        $d1 = $d3 * 12.92;

        goto label1;

     label5:
        $d2 = $d4 * 12.92;

        goto label2;

     label6:
        $d0 = $d0 * 12.92;

        goto label3;
    }
    public static void XYZToLAB(double, double, double, double[])
    {
        double[] $r0;
        double $d0, $d1, $d2, $d3;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $r0 := @parameter3: double[];

        $i0 = lengthof $r0;

        if $i0 == 3 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outLab must have a length of 3.");

        throw $r1;

     label1:
        $d0 = $d0 / 95.047;

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double pivotXyzComponent(double)>($d0);

        $d1 = $d1 / 100.0;

        $d1 = staticinvoke <android.support.v4.graphics.ColorUtils: double pivotXyzComponent(double)>($d1);

        $d2 = $d2 / 108.883;

        $d2 = staticinvoke <android.support.v4.graphics.ColorUtils: double pivotXyzComponent(double)>($d2);

        $d3 = 116.0 * $d1;

        $d3 = $d3 - 16.0;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d3);

        $r0[0] = $d3;

        $d0 = $d0 - $d1;

        $d0 = 500.0 * $d0;

        $r0[1] = $d0;

        $d0 = $d1 - $d2;

        $d0 = 200.0 * $d0;

        $r0[2] = $d0;

        return;
    }
    public static int blendARGB(int, int, float)
    {
        int $i0, $i1, $i2, $i3;
        float $f0, f1, f2, f3, f4, $f5;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        f3 = 1.0F - $f0;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        f1 = (float) $i2;

        f1 = f1 * f3;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        f4 = (float) $i2;

        f4 = f4 * $f0;

        f1 = f1 + f4;

        $i2 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        f4 = (float) $i2;

        f4 = f4 * f3;

        $i2 = staticinvoke <android.graphics.Color: int red(int)>($i1);

        f2 = (float) $i2;

        f2 = f2 * $f0;

        f4 = f4 + f2;

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        f2 = (float) $i2;

        f2 = f2 * f3;

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i1);

        $f5 = (float) $i2;

        $f5 = $f5 * $f0;

        f2 = f2 + $f5;

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $f5 = (float) $i0;

        f3 = $f5 * f3;

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i1);

        $f5 = (float) $i0;

        $f0 = $f5 * $f0;

        $f0 = f3 + $f0;

        $i2 = (int) f1;

        $i3 = (int) f4;

        $i0 = (int) f2;

        $i1 = (int) $f0;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i2, $i3, $i0, $i1);

        return $i0;
    }
    public static void blendHSL(float[], float[], float, float[])
    {
        float[] $r0, $r1, $r2;
        float $f0, f1, $f2, $f3;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: float[];

        $f0 := @parameter2: float;

        $r2 := @parameter3: float[];

        $i0 = lengthof $r2;

        if $i0 == 3 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("result must have a length of 3.");

        throw $r3;

     label1:
        f1 = 1.0F - $f0;

        $f2 = $r0[0];

        $f3 = $r1[0];

        $f2 = staticinvoke <android.support.v4.graphics.ColorUtils: float circularInterpolate(float,float,float)>($f2, $f3, $f0);

        $r2[0] = $f2;

        $f2 = $r0[1];

        $f2 = $f2 * f1;

        $f3 = $r1[1];

        $f3 = $f3 * $f0;

        $f2 = $f2 + $f3;

        $r2[1] = $f2;

        $f2 = $r0[2];

        f1 = $f2 * f1;

        $f2 = $r1[2];

        $f0 = $f2 * $f0;

        $f0 = f1 + $f0;

        $r2[2] = $f0;

        return;
    }
    public static void blendLAB(double[], double[], double, double[])
    {
        double[] $r0, $r1, $r2;
        double $d0, d1, $d2, $d3;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        $d0 := @parameter2: double;

        $r2 := @parameter3: double[];

        $i0 = lengthof $r2;

        if $i0 == 3 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outResult must have a length of 3.");

        throw $r3;

     label1:
        d1 = 1.0 - $d0;

        $d2 = $r0[0];

        $d2 = $d2 * d1;

        $d3 = $r1[0];

        $d3 = $d3 * $d0;

        $d2 = $d2 + $d3;

        $r2[0] = $d2;

        $d2 = $r0[1];

        $d2 = $d2 * d1;

        $d3 = $r1[1];

        $d3 = $d3 * $d0;

        $d2 = $d2 + $d3;

        $r2[1] = $d2;

        $d2 = $r0[2];

        d1 = $d2 * d1;

        $d2 = $r1[2];

        $d0 = $d2 * $d0;

        $d0 = d1 + $d0;

        $r2[2] = $d0;

        return;
    }
    public static double calculateContrast(int, int)
    {
        int $i0, $i1, $i2;
        double d0, d1, $d2;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i2 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        if $i2 >= 255 goto label2;

        $i1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

     label2:
        d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i1);

        d0 = d0 + 0.05;

        $d2 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i0);

        d1 = $d2 + 0.05;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        d0 = $d2 / d0;

        return d0;
    }
    public static double calculateLuminance(int)
    {
        int $i0;
        double[] $r0;
        double $d0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <android.support.v4.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <android.support.v4.graphics.ColorUtils: void colorToXYZ(int,double[])>($i0, $r0);

        $d0 = $r0[1];

        $d0 = $d0 / 100.0;

        return $d0;
    }
    public static int calculateMinimumAlpha(int, int, float)
    {
        int $i0, $i1, i2, $i3, i5, i6, $i7;
        float $f0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0, $d1;
        byte $b4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        if $i3 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        $i3 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, 255);

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i3, $i1);

        $d1 = (double) $f0;

        $b4 = $d0 cmpg $d1;

        if $b4 >= 0 goto label2;

        return -1;

     label2:
        $i3 = 0;

        i5 = 0;

        i6 = 255;

     label3:
        if $i3 > 10 goto label6;

        i2 = i6 - i5;

        if i2 <= 1 goto label6;

        i2 = i5 + i6;

        i2 = i2 / 2;

        $i7 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, i2);

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i7, $i1);

        $d1 = (double) $f0;

        $b4 = $d0 cmpg $d1;

        if $b4 >= 0 goto label5;

        i5 = i2;

     label4:
        $i3 = $i3 + 1;

        goto label3;

     label5:
        i6 = i2;

        goto label4;

     label6:
        return i6;
    }
    static float circularInterpolate(float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $f2 := @parameter0: float;

        $f3 := @parameter1: float;

        $f0 := @parameter2: float;

        $f1 = $f3 - $f2;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $b0 = $f1 cmpl 180.0F;

        if $b0 <= 0 goto label1;

        $b0 = $f3 cmpl $f2;

        if $b0 <= 0 goto label2;

        $f2 = $f2 + 360.0F;

     label1:
        $f3 = $f3 - $f2;

        $f3 = $f3 * $f0;

        $f2 = $f3 + $f2;

        $f2 = $f2 % 360.0F;

        return $f2;

     label2:
        $f3 = $f3 + 360.0F;

        goto label1;
    }
    public static void colorToHSL(int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: float[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i1, $i2, $i0, $r0);

        return;
    }
    public static void colorToLAB(int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])>($i1, $i2, $i0, $r0);

        return;
    }
    public static void colorToXYZ(int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>($i1, $i2, $i0, $r0);

        return;
    }
    private static int compositeAlpha(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = 255 - $i1;

        $i0 = 255 - $i0;

        $i0 = $i1 * $i0;

        $i0 = $i0 / 255;

        $i0 = 255 - $i0;

        return $i0;
    }
    public static int compositeColors(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i4 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeAlpha(int,int)>($i3, $i2);

        $i5 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i6 = staticinvoke <android.graphics.Color: int red(int)>($i1);

        $i5 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i5, $i3, $i6, $i2, $i4);

        $i6 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i7 = staticinvoke <android.graphics.Color: int green(int)>($i1);

        $i6 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i6, $i3, $i7, $i2, $i4);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $i1 = staticinvoke <android.graphics.Color: int blue(int)>($i1);

        $i0 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i0, $i3, $i1, $i2, $i4);

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i4, $i5, $i6, $i0);

        return $i0;
    }
    private static int compositeComponent(int, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        if $i4 != 0 goto label1;

        return 0;

     label1:
        $i0 = $i0 * 255;

        $i0 = $i0 * $i1;

        $i2 = $i2 * $i3;

        $i1 = 255 - $i1;

        $i1 = $i2 * $i1;

        $i0 = $i0 + $i1;

        $i1 = $i4 * 255;

        $i0 = $i0 / $i1;

        return $i0;
    }
    private static float constrain(float, float, float)
    {
        float $f0, $f1, f2;
        byte $b0;

        $f0 := @parameter0: float;

        f2 := @parameter1: float;

        $f1 := @parameter2: float;

        $b0 = $f0 cmpg f2;

        if $b0 >= 0 goto label1;

        return f2;

     label1:
        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label2;

        return $f1;

     label2:
        return $f0;
    }
    private static int constrain(int, int, int)
    {
        int $i0, $i1, i2;

        $i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 >= i2 goto label1;

        return i2;

     label1:
        if $i0 <= $i1 goto label2;

        return $i1;

     label2:
        return $i0;
    }
    public static double distanceEuclidean(double[], double[])
    {
        double[] $r0, $r1;
        double $d0, $d1, $d2;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        $d0 = $r0[0];

        $d1 = $r1[0];

        $d0 = $d0 - $d1;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $d1 = $r0[1];

        $d2 = $r1[1];

        $d1 = $d1 - $d2;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $d0 = $d0 + $d1;

        $d1 = $r0[2];

        $d2 = $r1[2];

        $d1 = $d1 - $d2;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $d0 = $d0 + $d1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        return $d0;
    }
    private static double[] getTempDouble3Array()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal $r1;
        double[] r2;

        $r1 = <android.support.v4.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        $r0 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (double[]) $r0;

        if r2 != null goto label1;

        r2 = newarray (double)[3];

        $r1 = <android.support.v4.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label1:
        return r2;
    }
    private static double pivotXyzComponent(double)
    {
        double $d0;
        byte $b0;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 0.008856;

        if $b0 <= 0 goto label1;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.3333333333333333);

        return $d0;

     label1:
        $d0 = 903.3 * $d0;

        $d0 = $d0 + 16.0;

        $d0 = $d0 / 116.0;

        return $d0;
    }
    public static int setAlphaComponent(int, int)
    {
        int $i0, $i1;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 < 0 goto label1;

        if $i1 <= 255 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.");

        throw $r0;

     label2:
        $i0 = 16777215 & $i0;

        $i1 = $i1 << 24;

        $i0 = $i0 | $i1;

        return $i0;
    }
