android.support.v7.widget.RoundRectDrawableWithShadow extends android.graphics.drawable.Drawable
static final double COS_45
static final float SHADOW_MULTIPLIER
static android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper
private boolean mAddPaddingForCorners
final android.graphics.RectF mCardBounds
float mCornerRadius
android.graphics.Paint mCornerShadowPaint
android.graphics.Path mCornerShadowPath
private boolean mDirty
android.graphics.Paint mEdgeShadowPaint
final int mInsetShadow
float mMaxShadowSize
android.graphics.Paint mPaint
private boolean mPrintedShadowClipWarning
float mRawMaxShadowSize
float mRawShadowSize
private final int mShadowEndColor
float mShadowSize
private final int mShadowStartColor
    static void <clinit>()
    {
        double $d0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        <android.support.v7.widget.RoundRectDrawableWithShadow: double COS_45> = $d0;

        return;
    }
    void <init>(android.content.res.Resources, int, float, float, float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.content.res.Resources $r1;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.Paint $r2, $r5;
        android.graphics.Paint$Style $r3;
        android.graphics.RectF $r4;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2 := @parameter4: float;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty> = 1;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mAddPaddingForCorners> = 1;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mPrintedShadowClipWarning> = 0;

        $i1 = <android.support.v7.cardview.R$color: int cardview_shadow_start_color>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowStartColor> = $i1;

        $i1 = <android.support.v7.cardview.R$color: int cardview_shadow_end_color>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowEndColor> = $i1;

        $i1 = <android.support.v7.cardview.R$dimen: int cardview_compat_inset_shadow>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow> = $i1;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(5);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint> = $r2;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(5);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint> = $r2;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $f0 = 0.5F + $f0;

        $i0 = (int) $f0;

        $f0 = (float) $i0;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius> = $f0;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds> = $r4;

        $r2 = new android.graphics.Paint;

        $r5 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        specialinvoke $r2.<android.graphics.Paint: void <init>(android.graphics.Paint)>($r5);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint> = $r2;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(0);

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void setShadowSize(float,float)>($f1, $f2);

        return;
    }
    private void buildComponents(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Rect $r1;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.RectF $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Rect;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        f0 = f0 * 1.5F;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $f1 = (float) $i0;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = $f1 + $f2;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $f2 = (float) $i0;

        $f2 = $f2 + f0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $f3 = (float) $i0;

        $f4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f3 = $f3 - $f4;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $f4 = (float) $i0;

        f0 = $f4 - f0;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f1, $f2, $f3, f0);

        specialinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void buildShadowCorners()>();

        return;
    }
    private void buildShadowCorners()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.RectF r1, r2, $r9;
        float f0, $f1, $f2, $f3;
        android.graphics.Paint $r3;
        android.graphics.Path $r4, $r10;
        android.graphics.Path$FillType $r5;
        int[] $r6;
        int $i0;
        float[] $r7;
        android.graphics.Shader$TileMode $r8;
        android.graphics.RadialGradient $r11;
        android.graphics.LinearGradient $r12;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        r2 = new android.graphics.RectF;

        r1 = r2;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        f0 = neg f0;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f1 = neg $f1;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        specialinvoke r2.<android.graphics.RectF: void <init>(float,float,float,float)>(f0, $f1, $f2, $f3);

        $r9 = new android.graphics.RectF;

        specialinvoke $r9.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r1);

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        f0 = neg f0;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        $f1 = neg $f1;

        virtualinvoke $r9.<android.graphics.RectF: void inset(float,float)>(f0, $f1);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        if $r4 != null goto label2;

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath> = $r10;

     label1:
        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        $r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        virtualinvoke $r4.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r5);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        f0 = neg f0;

        virtualinvoke $r4.<android.graphics.Path: void moveTo(float,float)>(f0, 0.0F);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        f0 = neg f0;

        virtualinvoke $r4.<android.graphics.Path: void rLineTo(float,float)>(f0, 0.0F);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        virtualinvoke $r4.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r9, 180.0F, 90.0F, 0);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        virtualinvoke $r4.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>(r1, 270.0F, -90.0F, 0);

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        virtualinvoke $r4.<android.graphics.Path: void close()>();

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        $f1 = $f1 + $f2;

        f0 = f0 / $f1;

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        $r11 = new android.graphics.RadialGradient;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        $f1 = $f1 + $f2;

        $r6 = newarray (int)[3];

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowStartColor>;

        $r6[0] = $i0;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowStartColor>;

        $r6[1] = $i0;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowEndColor>;

        $r6[2] = $i0;

        $r7 = newarray (float)[3];

        $r7[0] = 0.0F;

        $r7[1] = f0;

        $r7[2] = 1.06535322E9F;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r11.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(0.0F, 0.0F, $f1, $r6, $r7, $r8);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r11);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        $r12 = new android.graphics.LinearGradient;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        f0 = neg f0;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        f0 = f0 + $f1;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f1 = neg $f1;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        $f1 = $f1 - $f2;

        $r6 = newarray (int)[3];

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowStartColor>;

        $r6[0] = $i0;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowStartColor>;

        $r6[1] = $i0;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mShadowEndColor>;

        $r6[2] = $i0;

        $r7 = newarray (float)[3];

        $r7[0] = 0.0F;

        $r7[1] = 0.5F;

        $r7[2] = 1.0F;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r12.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(0.0F, f0, 0.0F, $f1, $r6, $r7, $r8);

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r12);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(0);

        return;

     label2:
        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        virtualinvoke $r4.<android.graphics.Path: void reset()>();

        goto label1;
    }
    static float calculateHorizontalPadding(float, float, boolean)
    {
        float $f0, $f1;
        boolean $z0;
        double $d0, $d1, $d2;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $d0 = (double) $f1;

        $d1 = <android.support.v7.widget.RoundRectDrawableWithShadow: double COS_45>;

        $d1 = 1.0 - $d1;

        $d2 = (double) $f0;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $f1 = (float) $d0;

     label1:
        return $f1;
    }
    static float calculateVerticalPadding(float, float, boolean)
    {
        float $f0, $f1;
        boolean $z0;
        double $d0, $d1, $d2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $f0 = 1.5F * $f0;

        $d0 = (double) $f0;

        $d1 = <android.support.v7.widget.RoundRectDrawableWithShadow: double COS_45>;

        $d1 = 1.0 - $d1;

        $d2 = (double) $f1;

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        return $f0;

     label1:
        $f0 = 1.5F * $f0;

        return $f0;
    }
    private void drawShadow(android.graphics.Canvas)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Canvas $r1;
        float f0, f1, $f2, $f3, $f4;
        int $i0;
        android.graphics.RectF $r2;
        byte $b1;
        boolean z0, z1;
        android.graphics.Path $r3;
        android.graphics.Paint $r4;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Canvas;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        f0 = neg f0;

        f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        f0 = f0 - f1;

        f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i0;

        f1 = f1 + $f2;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        $f2 = $f2 / 2.0F;

        f1 = f1 + $f2;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f3 = 2.0F * f1;

        $f2 = $f2 - $f3;

        $b1 = $f2 cmpl 0.0F;

        if $b1 <= 0 goto label7;

        z0 = 1;

     label1:
        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $f3 = 2.0F * f1;

        $f2 = $f2 - $f3;

        $b1 = $f2 cmpl 0.0F;

        if $b1 <= 0 goto label8;

        z1 = 1;

     label2:
        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = $r2.<android.graphics.RectF: float left>;

        $f2 = $f2 + f1;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f3 = $r2.<android.graphics.RectF: float top>;

        $f3 = $f3 + f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        if z0 == 0 goto label3;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f3 = 2.0F * f1;

        $f2 = $f2 - $f3;

        $f3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f3 = neg $f3;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, f0, $f2, $f3, $r4);

     label3:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = $r2.<android.graphics.RectF: float right>;

        $f2 = $f2 - f1;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f3 = $r2.<android.graphics.RectF: float bottom>;

        $f3 = $f3 - f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        if z0 == 0 goto label4;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f3 = 2.0F * f1;

        $f2 = $f2 - $f3;

        $f3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f3 = neg $f3;

        $f4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize>;

        $f3 = $f4 + $f3;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, f0, $f2, $f3, $r4);

     label4:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = $r2.<android.graphics.RectF: float left>;

        $f2 = $f2 + f1;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f3 = $r2.<android.graphics.RectF: float bottom>;

        $f3 = $f3 - f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        if z1 == 0 goto label5;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $f3 = 2.0F * f1;

        $f2 = $f2 - $f3;

        $f3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f3 = neg $f3;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, f0, $f2, $f3, $r4);

     label5:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = $r2.<android.graphics.RectF: float right>;

        $f2 = $f2 - f1;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f3 = $r2.<android.graphics.RectF: float top>;

        $f3 = $f3 + f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $r3 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Path mCornerShadowPath>;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        if z1 == 0 goto label6;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f2 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        f1 = 2.0F * f1;

        f1 = $f2 - f1;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $f2 = neg $f2;

        $r4 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, f0, f1, $f2, $r4);

     label6:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        return;

     label7:
        z0 = 0;

        goto label1;

     label8:
        z1 = 0;

        goto label2;
    }
    private int toEven(float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float $f0;
        int i0, $i1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $f0 := @parameter0: float;

        $f0 = 0.5F + $f0;

        i0 = (int) $f0;

        $i1 = i0 % 2;

        if $i1 != 1 goto label1;

        i0 = i0 + -1;

     label1:
        return i0;
    }
    public void draw(android.graphics.Canvas)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        android.graphics.Rect $r3;
        boolean $z0;
        float $f0;
        android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper $r4;
        android.graphics.RectF $r5;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Rect getBounds()>();

        specialinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void buildComponents(android.graphics.Rect)>($r3);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty> = 0;

     label1:
        $f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        $f0 = $f0 / 2.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        specialinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void drawShadow(android.graphics.Canvas)>($r1);

        $f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        $f0 = neg $f0;

        $f0 = $f0 / 2.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        $r4 = <android.support.v7.widget.RoundRectDrawableWithShadow: android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper>;

        $r5 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.RectF mCardBounds>;

        $f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint>;

        interfaceinvoke $r4.<android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper: void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)>($r1, $r5, $f0, $r2);

        return;
    }
    float getCornerRadius()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float f0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        return f0;
    }
    void getMaxShadowAndCornerPadding(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Rect $r1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean getPadding(android.graphics.Rect)>($r1);

        return;
    }
    float getMaxShadowSize()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float f0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        return f0;
    }
    float getMinHeight()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float f0, $f1, $f2;
        int $i0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f2 = $f2 * 1.5F;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f1);

        f0 = 2.0F * f0;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = $f1 * 1.5F;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f1 = $f1 * 2.0F;

        f0 = $f1 + f0;

        return f0;
    }
    float getMinWidth()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float f0, $f1, $f2;
        int $i0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f1);

        f0 = 2.0F * f0;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $i0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f1 = $f1 * 2.0F;

        f0 = $f1 + f0;

        return f0;
    }
    public int getOpacity()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        return -3;
    }
    public boolean getPadding(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Rect $r1;
        int i0, i1;
        float $f0, $f1;
        boolean $z0;
        double $d0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Rect;

        $f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $z0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mAddPaddingForCorners>;

        $f0 = staticinvoke <android.support.v7.widget.RoundRectDrawableWithShadow: float calculateVerticalPadding(float,float,boolean)>($f0, $f1, $z0);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i1 = (int) $d0;

        $f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $z0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mAddPaddingForCorners>;

        $f0 = staticinvoke <android.support.v7.widget.RoundRectDrawableWithShadow: float calculateHorizontalPadding(float,float,boolean)>($f0, $f1, $z0);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d0;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i0, i1);

        return 1;
    }
    float getShadowSize()
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float f0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        f0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        return f0;
    }
    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.Rect $r1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty> = 1;

        return;
    }
    public void setAddPaddingForCorners(boolean)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mAddPaddingForCorners> = $z0;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void invalidateSelf()>();

        return;
    }
    public void setAlpha(int)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        $r1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mCornerShadowPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        $r1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mEdgeShadowPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }
    public void setColor(int)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void invalidateSelf()>();

        return;
    }
    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }
    void setCornerRadius(float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float $f0, $f1;
        byte $b0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid radius ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Must be >= 0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $f0 = 0.5F + $f0;

        $i1 = (int) $f0;

        $f0 = (float) $i1;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label2;

        return;

     label2:
        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mCornerRadius> = $f0;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty> = 1;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void invalidateSelf()>();

        return;
    }
    void setMaxShadowSize(float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float $f0, $f1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void setShadowSize(float,float)>($f1, $f0);

        return;
    }
    void setShadowSize(float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float $f0, $f1;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void setShadowSize(float,float)>($f0, $f1);

        return;
    }
    void setShadowSize(float, float)
    {
        android.support.v7.widget.RoundRectDrawableWithShadow r0;
        float $f0, $f1, $f2;
        byte $b0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RoundRectDrawableWithShadow;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid shadow size ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Must be >= 0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $b0 = $f1 cmpg 0.0F;

        if $b0 >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid max shadow size ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Must be >= 0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = specialinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int toEven(float)>($f0);

        $f2 = (float) $i1;

        $i1 = specialinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int toEven(float)>($f1);

        $f0 = (float) $i1;

        $b0 = $f2 cmpl $f0;

        if $b0 <= 0 goto label3;

        $f2 = $f0;

        $z0 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mPrintedShadowClipWarning>;

        if $z0 != 0 goto label3;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mPrintedShadowClipWarning> = 1;

     label3:
        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize>;

        $b0 = $f1 cmpl $f2;

        if $b0 != 0 goto label4;

        $f1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label4;

        return;

     label4:
        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawShadowSize> = $f2;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mRawMaxShadowSize> = $f0;

        $f1 = 1.5F * $f2;

        $i1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f2 = (float) $i1;

        $f1 = $f1 + $f2;

        $f1 = $f1 + 0.5F;

        $i1 = (int) $f1;

        $f1 = (float) $i1;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mShadowSize> = $f1;

        $i1 = r0.<android.support.v7.widget.RoundRectDrawableWithShadow: int mInsetShadow>;

        $f1 = (float) $i1;

        $f0 = $f1 + $f0;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: float mMaxShadowSize> = $f0;

        r0.<android.support.v7.widget.RoundRectDrawableWithShadow: boolean mDirty> = 1;

        virtualinvoke r0.<android.support.v7.widget.RoundRectDrawableWithShadow: void invalidateSelf()>();

        return;
    }
