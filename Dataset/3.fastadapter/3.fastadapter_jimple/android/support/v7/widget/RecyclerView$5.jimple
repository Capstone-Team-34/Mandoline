android.support.v7.widget.RecyclerView$5 extends java.lang.Object implements android.support.v7.widget.ChildHelper$Callback
final android.support.v7.widget.RecyclerView this$0
    void <init>(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void addView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        int $i0;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void addView(android.view.View,int)>($r1, $i0);

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1100(android.support.v7.widget.RecyclerView,android.view.View)>($r2, $r1);

        return;
    }
    public void attachViewToParent(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.support.v7.widget.RecyclerView $r7;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called attach on a child which is not detached: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

     label2:
        $r7 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1300(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)>($r7, $r1, $i0, $r2);

        return;
    }
    public void detachViewFromParent(int)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.support.v7.widget.RecyclerView $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$5: android.view.View getChildAt(int)>($i0);

        if $r1 == null goto label2;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called detach on an already detached child ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(256);

     label2:
        $r6 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1400(android.support.v7.widget.RecyclerView,int)>($r6, $i0);

        return;
    }
    public android.view.View getChildAt(int)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.View getChildAt(int)>($i0);

        return $r1;
    }
    public int getChildCount()
    {
        android.support.v7.widget.RecyclerView$5 r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getChildCount()>();

        return $i0;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        return $r2;
    }
    public int indexOfChild(android.view.View)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        int $i0;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int indexOfChild(android.view.View)>($r1);

        return $i0;
    }
    public void onEnteredHiddenState(android.view.View)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        staticinvoke <android.support.v7.widget.RecyclerView$ViewHolder: void access$1500(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label1:
        return;
    }
    public void onLeftHiddenState(android.view.View)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        staticinvoke <android.support.v7.widget.RecyclerView$ViewHolder: void access$1600(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label1:
        return;
    }
    public void removeAllViews()
    {
        android.support.v7.widget.RecyclerView$5 r0;
        int $i0, i1;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$5: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$5: android.view.View getChildAt(int)>(i1);

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1200(android.support.v7.widget.RecyclerView,android.view.View)>($r1, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void removeAllViews()>();

        return;
    }
    public void removeViewAt(int)
    {
        android.support.v7.widget.RecyclerView$5 r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$5;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.View getChildAt(int)>($i0);

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1200(android.support.v7.widget.RecyclerView,android.view.View)>($r2, $r1);

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView$5: android.support.v7.widget.RecyclerView this$0>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void removeViewAt(int)>($i0);

        return;
    }
