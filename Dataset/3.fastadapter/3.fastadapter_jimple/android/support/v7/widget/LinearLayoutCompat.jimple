android.support.v7.widget.LinearLayoutCompat extends android.view.ViewGroup
public static final int HORIZONTAL
private static final int INDEX_BOTTOM
private static final int INDEX_CENTER_VERTICAL
private static final int INDEX_FILL
private static final int INDEX_TOP
public static final int SHOW_DIVIDER_BEGINNING
public static final int SHOW_DIVIDER_END
public static final int SHOW_DIVIDER_MIDDLE
public static final int SHOW_DIVIDER_NONE
public static final int VERTICAL
private static final int VERTICAL_GRAVITY_COUNT
private boolean mBaselineAligned
private int mBaselineAlignedChildIndex
private int mBaselineChildTop
private android.graphics.drawable.Drawable mDivider
private int mDividerHeight
private int mDividerPadding
private int mDividerWidth
private int mGravity
private int[] mMaxAscent
private int[] mMaxDescent
private int mOrientation
private int mShowDividers
private int mTotalLength
private boolean mUseLargestChild
private float mWeightSum
    public void <init>(android.content.Context)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.content.Context $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        int[] $r3;
        android.support.v7.widget.TintTypedArray $r4;
        boolean $z0;
        float $f0;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned> = 1;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = -1;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop> = 0;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = 8388659;

        $r3 = <android.support.v7.appcompat.R$styleable: int[] LinearLayoutCompat>;

        $r4 = staticinvoke <android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r1, $r2, $r3, $i0, 0);

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_orientation>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, -1);

        if $i0 < 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setOrientation(int)>($i0);

     label1:
        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_gravity>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, -1);

        if $i0 < 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setGravity(int)>($i0);

     label2:
        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setBaselineAligned(boolean)>($z0);

     label3:
        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum>;

        $f0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: float getFloat(int,float)>($i0, -1.0F);

        r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum> = $f0;

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, -1);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = $i0;

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild> = $z0;

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_divider>;

        $r5 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)>($r5);

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_showDividers>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, 0);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers> = $i0;

        $i0 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding> = $i0;

        virtualinvoke $r4.<android.support.v7.widget.TintTypedArray: void recycle()>();

        return;
    }
    private void forceUniformHeight(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, i2, $i3, i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getMeasuredHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i4);

        i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if i2 == 8 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        i2 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if i2 != -1 goto label2;

        i2 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = $i5;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, 0, $i3, 0);

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = i2;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }
    private void forceUniformWidth(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, i2, $i3, i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getMeasuredWidth()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i4);

        i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if i2 == 8 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        i2 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if i2 != -1 goto label2;

        i2 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = $i5;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i3, 0, $i1, 0);

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = i2;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }
    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i2 = $i0 + $i2;

        $i3 = $i1 + $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.v7.widget.LinearLayoutCompat$LayoutParams;

        return $z0;
    }
    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.Canvas $r1;
        int $i0, i1, $i2, $i3;
        boolean $z0, $z1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        $z0 = staticinvoke <android.support.v7.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>(r0);

        i1 = 0;

     label01:
        if i1 >= $i0 goto label05;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i1);

        if $r2 == null goto label03;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label03;

        $z1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>(i1);

        if $z1 == 0 goto label03;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;

        if $z0 == 0 goto label04;

        $i2 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $i3 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i2 = $i2 + $i3;

     label02:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $i2 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i3 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i2 = $i2 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i2 = $i2 - $i3;

        goto label02;

     label05:
        $z1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i0);

        if $z1 == 0 goto label10;

        $i0 = $i0 + -1;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i0);

        if $r2 != null goto label08;

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

     label06:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i0);

        return;

     label07:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getWidth()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i0 = $i0 - i1;

        i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i0 = $i0 - i1;

        goto label06;

     label08:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;

        if $z0 == 0 goto label09;

        $i0 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        i1 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i0 = $i0 - i1;

        i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i0 = $i0 - i1;

        goto label06;

     label09:
        $i0 = virtualinvoke $r2.<android.view.View: int getRight()>();

        i1 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i0 = $i0 + i1;

        goto label06;

     label10:
        return;
    }
    void drawDividersVertical(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.Canvas $r1;
        int i0, $i1, i2, $i3;
        android.view.View $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i2);

        if $r2 == null goto label2;

        i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if i0 == 8 goto label2;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>(i2);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;

        i0 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i3 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        i0 = i0 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        i0 = i0 - $i3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label6;

        $i1 = $i1 + -1;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i1);

        if $r2 != null goto label5;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getHeight()>();

        i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i1 = $i1 - i2;

        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        $i1 = $i1 - i2;

     label4:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i1);

        return;

     label5:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        i2 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i1 = $i1 + i2;

        goto label4;

     label6:
        return;
    }
    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getWidth()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;

        $i2 = $i2 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        $i3 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i2, $i3);

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }
    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i2 = $i2 + $i0;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getHeight()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i4 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;

        $i3 = $i3 - $i4;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }
    protected android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i0 != 0 goto label1;

        $r1 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;

        specialinvoke $r1.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;

     label1:
        $i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i0 != 1 goto label2;

        $r1 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;

        specialinvoke $r1.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;

     label2:
        return null;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    public android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.util.AttributeSet $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }
    protected android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;

        specialinvoke $r2.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.util.AttributeSet $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    public int getBaseline()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        if $i1 >= 0 goto label1;

        $i1 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i1;

     label1:
        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        if $i2 > $i1 goto label2;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");

        throw $r1;

     label2:
        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

        if $i1 != -1 goto label3;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        if $i1 == 0 goto label7;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");

        throw $r1;

     label3:
        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop>;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if i0 != 1 goto label4;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        i0 = i0 & 112;

        if i0 == 48 goto label4;

        lookupswitch(i0)
        {
            case 16: goto label6;
            case 80: goto label5;
            default: goto label4;
        };

     label4:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;

        i0 = r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i2 = i0 + $i2;

        $i1 = $i2 + $i1;

        return $i1;

     label5:
        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getBottom()>();

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getTop()>();

        $i2 = $i2 - i0;

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i2 = $i2 - i0;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i2 = $i2 - i0;

        goto label4;

     label6:
        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getBottom()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getTop()>();

        i0 = i0 - $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        i0 = i0 - $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        i0 = i0 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i0 = i0 - $i3;

        i0 = i0 / 2;

        $i2 = $i2 + i0;

        goto label4;

     label7:
        return -1;
    }
    public int getBaselineAlignedChildIndex()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        return i0;
    }
    int getChildrenSkipCount(android.view.View, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return 0;
    }
    public android.graphics.drawable.Drawable getDividerDrawable()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        r1 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        return r1;
    }
    public int getDividerPadding()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;

        return i0;
    }
    public int getDividerWidth()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        return i0;
    }
    int getLocationOffset(android.view.View)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    int getNextLocationOffset(android.view.View)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.View;

        return 0;
    }
    public int getOrientation()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        return i0;
    }
    public int getShowDividers()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;

        return i0;
    }
    android.view.View getVirtualChildAt(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i0);

        return $r1;
    }
    int getVirtualChildCount()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();

        return $i0;
    }
    public float getWeightSum()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        float f0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        f0 = r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

        return f0;
    }
    protected boolean hasDividerBeforeChildAt(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;
        boolean z0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        $i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();

        if $i0 != $i1 goto label3;

        $i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;

        $i0 = $i0 & 4;

        if $i0 != 0 goto label8;

        return 0;

     label3:
        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label7;

        z0 = 0;

        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label5;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 == 8 goto label6;

        z0 = 1;

     label5:
        return z0;

     label6:
        $i0 = $i0 + -1;

        goto label4;

     label7:
        return 0;

     label8:
        return 1;
    }
    public boolean isBaselineAligned()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        z0 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;

        return z0;
    }
    public boolean isMeasureWithLargestChildEnabled()
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        z0 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;

        return z0;
    }
    void layoutHorizontal(int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, $i11, $i12, $i13, i14;
        boolean z0, $z1;
        int[] $r1, $r2;
        byte b10;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r5;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z1 = staticinvoke <android.support.v7.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>(r0);

        $i7 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i3 = $i3 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i1 = $i3 - $i1;

        $i3 = $i3 - $i7;

        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i3 = $i3 - $i8;

        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        i6 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        i4 = i6 & 8388615;

        i6 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        i6 = i6 & 112;

        z0 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;

        $r1 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;

        $i9 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i4 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i4, $i9);

        lookupswitch(i4)
        {
            case 1: goto label07;
            case 5: goto label06;
            default: goto label01;
        };

     label01:
        $i9 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

     label02:
        $i0 = 0;

        b10 = 1;

        if $z1 == 0 goto label03;

        $i0 = $i8 + -1;

        b10 = -1;

     label03:
        $i2 = 0;

     label04:
        if $i2 >= $i8 goto label17;

        i4 = b10 * $i2;

        i4 = $i0 + i4;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i4);

        if $r3 != null goto label08;

        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>(i4);

        $i9 = $i9 + i4;

     label05:
        $i2 = $i2 + 1;

        goto label04;

     label06:
        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i2 = i4 + $i2;

        $i0 = $i2 - $i0;

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i9 = $i0 - $i2;

        goto label02;

     label07:
        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i0 = $i2 - $i0;

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i0 = $i0 - $i2;

        $i0 = $i0 / 2;

        $i9 = i4 + $i0;

        goto label02;

     label08:
        $i11 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i11 == 8 goto label05;

        $i11 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        i5 = -1;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        if z0 == 0 goto label09;

        $i13 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i13 == -1 goto label09;

        i5 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

     label09:
        $i13 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        i14 = $i13;

        if $i13 >= 0 goto label10;

        i14 = i6;

     label10:
        $i13 = i14 & 112;

        lookupswitch($i13)
        {
            case 16: goto label15;
            case 48: goto label14;
            case 80: goto label16;
            default: goto label11;
        };

     label11:
        $i13 = $i7;

     label12:
        $z1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>(i4);

        if $z1 == 0 goto label13;

        i5 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i9 = $i9 + i5;

     label13:
        i5 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i9 = $i9 + i5;

        i5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)>($r3);

        i5 = $i9 + i5;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)>($r3, i5, $i13, $i11, $i12);

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i11 = $i12 + $i11;

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i11 = $i11 + $i12;

        $i9 = $i9 + $i11;

        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, i4);

        $i2 = $i2 + i4;

        goto label05;

     label14:
        $i13 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i13 = $i7 + $i13;

        if i5 == -1 goto label12;

        i14 = $r1[1];

        i5 = i14 - i5;

        $i13 = $i13 + i5;

        goto label12;

     label15:
        $i13 = $i3 - $i12;

        $i13 = $i13 / 2;

        $i13 = $i13 + $i7;

        i5 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i13 = $i13 + i5;

        i5 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i13 = $i13 - i5;

        goto label12;

     label16:
        $i13 = $i1 - $i12;

        i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i13 = $i13 - i14;

        if i5 == -1 goto label12;

        i14 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        i5 = i14 - i5;

        i14 = $r2[2];

        i5 = i14 - i5;

        $i13 = $i13 - i5;

        goto label12;

     label17:
        return;
    }
    void layoutVertical(int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, i9, $i10;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i0 = $i2 - $i0;

        $i2 = $i2 - $i6;

        $i7 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i2 = $i2 - $i7;

        $i7 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        i5 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        i4 = i5 & 112;

        i5 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        i5 = i5 & 8388615;

        lookupswitch(i4)
        {
            case 16: goto label06;
            case 80: goto label05;
            default: goto label01;
        };

     label01:
        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i7 goto label14;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i1);

        if $r1 != null goto label07;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i1);

        i4 = i4 + $i3;

     label04:
        $i1 = $i1 + 1;

        goto label03;

     label05:
        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i3 = i4 + $i3;

        $i1 = $i3 - $i1;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i4 = $i1 - $i3;

        goto label02;

     label06:
        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i1 = $i3 - $i1;

        $i3 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i1 = $i1 - $i3;

        $i1 = $i1 / 2;

        i4 = i4 + $i1;

        goto label02;

     label07:
        $i3 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label04;

        $i8 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        i9 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        if i9 >= 0 goto label08;

        i9 = i5;

     label08:
        $i10 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i9 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i9, $i10);

        i9 = i9 & 7;

        lookupswitch(i9)
        {
            case 1: goto label12;
            case 5: goto label13;
            default: goto label09;
        };

     label09:
        i9 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        i9 = $i6 + i9;

     label10:
        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label11;

        $i10 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        i4 = i4 + $i10;

     label11:
        $i10 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        i4 = i4 + $i10;

        $i10 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)>($r1);

        $i10 = i4 + $i10;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)>($r1, i9, $i10, $i8, $i3);

        $i8 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i3 = $i8 + $i3;

        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r1);

        $i3 = $i3 + $i8;

        i4 = i4 + $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r1, $i1);

        $i1 = $i1 + $i3;

        goto label04;

     label12:
        i9 = $i2 - $i8;

        i9 = i9 / 2;

        i9 = i9 + $i6;

        $i10 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        i9 = i9 + $i10;

        $i10 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        i9 = i9 - $i10;

        goto label10;

     label13:
        i9 = $i0 - $i8;

        $i10 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        i9 = i9 - $i10;

        goto label10;

     label14:
        return;
    }
    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);

        return;
    }
    void measureHorizontal(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, i9, i10, $i11, $i12, $i14, $i15, $i16;
        boolean z0, z1, z2, z3, $z4, z5, $z6;
        float f0, $f1, $f2;
        int[] $r1, $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r5;
        byte $b13;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        z1 = 1;

        f0 = 0.0F;

        $i6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        z2 = 0;

        z3 = 0;

        $r1 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;

        if $r1 == null goto label01;

        $r1 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;

        if $r1 != null goto label02;

     label01:
        $r1 = newarray (int)[4];

        r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent> = $r1;

        $r1 = newarray (int)[4];

        r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent> = $r1;

     label02:
        $r1 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;

        $r1[3] = -1;

        $r1[2] = -1;

        $r1[1] = -1;

        $r1[0] = -1;

        $r2[3] = -1;

        $r2[2] = -1;

        $r2[1] = -1;

        $r2[0] = -1;

        z0 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;

        $z4 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;

        if $i7 != 1073741824 goto label06;

        z5 = 1;

     label03:
        i9 = -2147483648;

        i10 = 0;

     label04:
        if i10 >= $i6 goto label33;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i10);

        if $r3 != null goto label07;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>(i10);

        $i11 = $i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

     label05:
        i10 = i10 + 1;

        goto label04;

     label06:
        z5 = 0;

        goto label03;

     label07:
        $i11 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i11 != 8 goto label08;

        $i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, i10);

        i10 = i10 + $i11;

        goto label05;

     label08:
        $z6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>(i10);

        if $z6 == 0 goto label09;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        $i11 = $i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

     label09:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        $f1 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        f0 = f0 + $f1;

        if $i7 != 1073741824 goto label20;

        $i11 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i11 != 0 goto label20;

        $f1 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b13 = $f1 cmpl 0.0F;

        if $b13 <= 0 goto label20;

        if z5 == 0 goto label18;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i11 = $i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

     label10:
        if z0 == 0 goto label19;

        $i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i11, $i11);

     label11:
        $z6 = 0;

        if $i8 == 1073741824 goto label12;

        $i11 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i11 != -1 goto label12;

        z2 = 1;

        $z6 = 1;

     label12:
        $i11 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i11 = $i11 + $i12;

        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + $i11;

        $i14 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r3);

        i3 = staticinvoke <android.support.v7.widget.ViewUtils: int combineMeasuredStates(int,int)>(i3, $i14);

        if z0 == 0 goto label14;

        $i14 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

        if $i14 == -1 goto label14;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        if $i15 >= 0 goto label27;

        $i15 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

     label13:
        $i15 = $i15 & 112;

        $i15 = $i15 >> 4;

        $i15 = $i15 & -2;

        $i15 = $i15 >> 1;

        $i16 = $r1[$i15];

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i14);

        $r1[$i15] = $i16;

        $i16 = $r2[$i15];

        $i14 = $i12 - $i14;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i14);

        $r2[$i15] = $i14;

     label14:
        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i12);

        if z1 == 0 goto label28;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i14 != -1 goto label28;

        z1 = 1;

     label15:
        $f1 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b13 = $f1 cmpl 0.0F;

        if $b13 <= 0 goto label30;

        if $z6 == 0 goto label29;

     label16:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i11);

     label17:
        $i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, i10);

        i10 = i10 + $i11;

        goto label05;

     label18:
        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = $i12 + $i11;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

        goto label10;

     label19:
        z3 = 1;

        goto label11;

     label20:
        $i11 = -2147483648;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i12 != 0 goto label21;

        $f1 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b13 = $f1 cmpl 0.0F;

        if $b13 <= 0 goto label21;

        $i11 = 0;

        r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = -2;

     label21:
        $b13 = f0 cmpl 0.0F;

        if $b13 != 0 goto label25;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

     label22:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r3, i10, $i0, $i12, $i1, 0);

        if $i11 == -2147483648 goto label23;

        r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = $i11;

     label23:
        $i11 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        if z5 == 0 goto label26;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i14 = $i14 + $i11;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i14 = $i14 + $i15;

        $i15 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i14 = $i14 + $i15;

        $i12 = $i12 + $i14;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i12;

     label24:
        if $z4 == 0 goto label11;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>($i11, i9);

        goto label11;

     label25:
        $i12 = 0;

        goto label22;

     label26:
        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i14 = $i12 + $i11;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i14 = $i14 + $i15;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i14 = $i14 + $i15;

        $i15 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i14 = $i14 + $i15;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i14);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i12;

        goto label24;

     label27:
        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        goto label13;

     label28:
        z1 = 0;

        goto label15;

     label29:
        $i11 = $i12;

        goto label16;

     label30:
        if $z6 == 0 goto label32;

     label31:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i11);

        goto label17;

     label32:
        $i11 = $i12;

        goto label31;

     label33:
        i10 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        if i10 <= 0 goto label34;

        $z6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i6);

        if $z6 == 0 goto label34;

        i10 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;

        i10 = i10 + $i11;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i10;

     label34:
        i10 = $r1[1];

        if i10 != -1 goto label35;

        i10 = $r1[0];

        if i10 != -1 goto label35;

        i10 = $r1[2];

        if i10 != -1 goto label35;

        i10 = $r1[3];

        if i10 == -1 goto label36;

     label35:
        i10 = $r1[3];

        $i11 = $r1[0];

        $i12 = $r1[1];

        $i14 = $r1[2];

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i14);

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i11);

        $i11 = $r2[3];

        $i12 = $r2[0];

        $i14 = $r2[1];

        $i15 = $r2[2];

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i14);

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        i10 = i10 + $i11;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i10);

     label36:
        if $z4 == 0 goto label43;

        if $i7 == -2147483648 goto label37;

        if $i7 != 0 goto label43;

     label37:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i10 = 0;

     label38:
        if i10 >= $i6 goto label43;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i10);

        if $r3 != null goto label40;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>(i10);

        $i11 = $i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

     label39:
        i10 = i10 + 1;

        goto label38;

     label40:
        $i11 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i11 != 8 goto label41;

        $i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, i10);

        i10 = i10 + $i11;

        goto label39;

     label41:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        if z5 == 0 goto label42;

        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = $i12 + i9;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i14 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i12 = $i12 + $i14;

        $i11 = $i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

        goto label39;

     label42:
        $i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = $i11 + i9;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = $i12 + $i14;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i14 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i12 = $i12 + $i14;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i11;

        goto label39;

     label43:
        i10 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i11 = $i11 + $i12;

        i10 = i10 + $i11;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i10;

        i10 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumWidth()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i11);

        i10 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>(i10, $i0, 0);

        $i11 = i10 & 16777215;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i11 = $i11 - $i12;

        if z3 != 0 goto label44;

        if $i11 == 0 goto label71;

        $b13 = f0 cmpl 0.0F;

        if $b13 <= 0 goto label71;

     label44:
        $f1 = r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

        $b13 = $f1 cmpl 0.0F;

        if $b13 <= 0 goto label48;

        f0 = r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

     label45:
        $r1[3] = -1;

        $r1[2] = -1;

        $r1[1] = -1;

        $r1[0] = -1;

        $r2[3] = -1;

        $r2[2] = -1;

        $r2[1] = -1;

        $r2[0] = -1;

        i2 = -1;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i9 = 0;

     label46:
        if i9 >= $i6 goto label67;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i9);

        if $r3 == null goto label47;

        i5 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if i5 != 8 goto label49;

     label47:
        i9 = i9 + 1;

        goto label46;

     label48:
        goto label45;

     label49:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        $f1 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b13 = $f1 cmpl 0.0F;

        if $b13 <= 0 goto label53;

        $f2 = (float) $i11;

        $f2 = $f2 * $f1;

        $f2 = $f2 / f0;

        i5 = (int) $f2;

        $i12 = i5;

        f0 = f0 - $f1;

        $i11 = $i11 - i5;

        $i14 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i15 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i14 = $i14 + $i15;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i14 = $i14 + $i15;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i14 = $i14 + $i15;

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        $i14 = staticinvoke <android.support.v7.widget.LinearLayoutCompat: int getChildMeasureSpec(int,int,int)>($i1, $i14, $i15);

        $i15 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i15 != 0 goto label50;

        if $i7 == 1073741824 goto label59;

     label50:
        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        i5 = $i12 + i5;

        if i5 >= 0 goto label51;

        i5 = 0;

     label51:
        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>(i5, $i14);

     label52:
        i5 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r3);

        i5 = i5 & -16777216;

        i3 = staticinvoke <android.support.v7.widget.ViewUtils: int combineMeasuredStates(int,int)>(i3, i5);

     label53:
        if z5 == 0 goto label62;

        i5 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = $i12 + $i14;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i14 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i12 = $i12 + $i14;

        i5 = i5 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i5;

     label54:
        if $i8 == 1073741824 goto label63;

        i5 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if i5 != -1 goto label63;

        z3 = 1;

     label55:
        i5 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i12 = i5 + $i12;

        i5 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        i5 = i5 + $i12;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i5);

        if z3 == 0 goto label64;

     label56:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i12);

        if z1 == 0 goto label65;

        $i12 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i12 != -1 goto label65;

        z1 = 1;

     label57:
        if z0 == 0 goto label47;

        $i12 = virtualinvoke $r3.<android.view.View: int getBaseline()>();

        if $i12 == -1 goto label47;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        if $i14 >= 0 goto label66;

        $i14 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

     label58:
        $i14 = $i14 & 112;

        $i14 = $i14 >> 4;

        $i14 = $i14 & -2;

        $i14 = $i14 >> 1;

        $i15 = $r1[$i14];

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i12);

        $r1[$i14] = $i15;

        $i15 = $r2[$i14];

        i5 = i5 - $i12;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i15, i5);

        $r2[$i14] = i5;

        goto label47;

     label59:
        if i5 <= 0 goto label61;

     label60:
        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>(i5, $i14);

        goto label52;

     label61:
        $i12 = 0;

        goto label60;

     label62:
        i5 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i12 = $i12 + i5;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = $i12 + $i14;

        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i14;

        $i14 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);

        $i12 = $i12 + $i14;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i12);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i5;

        goto label54;

     label63:
        z3 = 0;

        goto label55;

     label64:
        $i12 = i5;

        goto label56;

     label65:
        z1 = 0;

        goto label57;

     label66:
        $i14 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;

        goto label58;

     label67:
        $i7 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i9 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        i5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        i9 = i9 + i5;

        $i7 = $i7 + i9;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i7;

        $i7 = $r1[1];

        if $i7 != -1 goto label68;

        $i7 = $r1[0];

        if $i7 != -1 goto label68;

        $i7 = $r1[2];

        if $i7 != -1 goto label68;

        $i7 = $r1[3];

        if $i7 == -1 goto label69;

     label68:
        $i7 = $r1[3];

        i9 = $r1[0];

        i5 = $r1[1];

        $i11 = $r1[2];

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i11);

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i9, i5);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, i9);

        i9 = $r2[3];

        i5 = $r2[0];

        $i11 = $r2[1];

        $i12 = $r2[2];

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i11);

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i9, i5);

        $i7 = $i7 + i9;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i7);

     label69:
        if z1 != 0 goto label70;

        if $i8 == 1073741824 goto label70;

        i2 = i4;

     label70:
        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        $i8 = $i8 + i4;

        $i8 = i2 + $i8;

        i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumHeight()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, i2);

        i2 = -16777216 & i3;

        i2 = i2 | i10;

        i3 = i3 << 16;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i8, $i1, i3);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setMeasuredDimension(int,int)>(i2, $i1);

        if z2 == 0 goto label75;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void forceUniformHeight(int,int)>($i6, $i0);

        return;

     label71:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        if $z4 == 0 goto label69;

        if $i7 == 1073741824 goto label69;

        $i7 = 0;

     label72:
        if $i7 >= $i6 goto label69;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i7);

        if $r3 == null goto label73;

        i5 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if i5 != 8 goto label74;

     label73:
        $i7 = $i7 + 1;

        goto label72;

     label74:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;

        f0 = r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b13 = f0 cmpl 0.0F;

        if $b13 <= 0 goto label73;

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i9, 1073741824);

        $i11 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>(i5, $i11);

        goto label73;

     label75:
        return;
    }
    int measureNullChild(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        return 0;
    }
    void measureVertical(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, i10, i11, $i12, $i13, $i15, $i16;
        boolean z0, z1, z2, $z3, $z4;
        float f0, $f1, $f2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams r3;
        byte $b14;
        java.lang.RuntimeException $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        i6 = 0;

        z0 = 1;

        f0 = 0.0F;

        $i7 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i9 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        z1 = 0;

        z2 = 0;

        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;

        $z3 = r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;

        i10 = -2147483648;

        i11 = 0;

     label01:
        if i11 >= $i7 goto label23;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i11);

        if $r1 != null goto label03;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i13 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>(i11);

        $i12 = $i12 + $i13;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i12;

     label02:
        i11 = i11 + 1;

        goto label01;

     label03:
        $i12 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i12 != 8 goto label04;

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r1, i11);

        i11 = i11 + $i12;

        goto label02;

     label04:
        $z4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>(i11);

        if $z4 == 0 goto label05;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i13 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        $i12 = $i12 + $i13;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i12;

     label05:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        f0 = f0 + $f1;

        if $i9 != 1073741824 goto label08;

        $i12 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i12 != 0 goto label08;

        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label08;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i13 = $i13 + $i12;

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i13 = $i13 + $i15;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i12;

        z2 = 1;

     label06:
        if i2 < 0 goto label07;

        $i12 = i11 + 1;

        if i2 != $i12 goto label07;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop> = $i12;

     label07:
        if i11 >= i2 goto label13;

        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label13;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");

        throw $r4;

     label08:
        $i12 = -2147483648;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i13 != 0 goto label09;

        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label09;

        $i12 = 0;

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = -2;

     label09:
        $b14 = f0 cmpl 0.0F;

        if $b14 != 0 goto label12;

        $i13 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

     label10:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r1, i11, $i0, 0, $i1, $i13);

        if $i12 == -2147483648 goto label11;

        r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = $i12;

     label11:
        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i15 = $i13 + $i12;

        $i16 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i15 = $i15 + $i16;

        $i16 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i15 = $i15 + $i16;

        $i16 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r1);

        $i15 = $i15 + $i16;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i15);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;

        if $z3 == 0 goto label06;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>($i12, i10);

        goto label06;

     label12:
        $i13 = 0;

        goto label10;

     label13:
        $z4 = 0;

        if $i8 == 1073741824 goto label14;

        $i12 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i12 != -1 goto label14;

        z1 = 1;

        $z4 = 1;

     label14:
        $i12 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i12 = $i12 + $i13;

        $i13 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i13 = $i13 + $i12;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i13);

        $i15 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r1);

        i4 = staticinvoke <android.support.v7.widget.ViewUtils: int combineMeasuredStates(int,int)>(i4, $i15);

        if z0 == 0 goto label18;

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i15 != -1 goto label18;

        z0 = 1;

     label15:
        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label20;

        if $z4 == 0 goto label19;

     label16:
        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i12);

     label17:
        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r1, i11);

        i11 = i11 + $i12;

        goto label02;

     label18:
        z0 = 0;

        goto label15;

     label19:
        $i12 = $i13;

        goto label16;

     label20:
        if $z4 == 0 goto label22;

     label21:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i12);

        goto label17;

     label22:
        $i12 = $i13;

        goto label21;

     label23:
        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        if i2 <= 0 goto label24;

        $z4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i7);

        if $z4 == 0 goto label24;

        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;

        i2 = i2 + i11;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i2;

     label24:
        if $z3 == 0 goto label30;

        if $i9 == -2147483648 goto label25;

        if $i9 != 0 goto label30;

     label25:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i2 = 0;

     label26:
        if i2 >= $i7 goto label30;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i2);

        if $r1 != null goto label28;

        i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>(i2);

        i11 = i11 + $i12;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i11;

     label27:
        i2 = i2 + 1;

        goto label26;

     label28:
        i11 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if i11 != 8 goto label29;

        i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r1, i2);

        i2 = i2 + i11;

        goto label27;

     label29:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        i11 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = i11 + i10;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i12 = $i12 + $i13;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i12 = $i12 + $i13;

        $i13 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r1);

        $i12 = $i12 + $i13;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i12);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i11;

        goto label27;

     label30:
        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        $i12 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        i11 = i11 + $i12;

        i2 = i2 + i11;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i2;

        i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i11 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumHeight()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i11);

        i2 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>(i2, $i1, 0);

        i11 = i2 & 16777215;

        $i12 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i11 = i11 - $i12;

        if z2 != 0 goto label31;

        if i11 == 0 goto label53;

        $b14 = f0 cmpl 0.0F;

        if $b14 <= 0 goto label53;

     label31:
        $f1 = r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label35;

        f0 = r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

     label32:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;

        i10 = 0;

     label33:
        if i10 >= $i7 goto label50;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>(i10);

        i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if i6 != 8 goto label36;

     label34:
        i10 = i10 + 1;

        goto label33;

     label35:
        goto label32;

     label36:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        $f1 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = $f1 cmpl 0.0F;

        if $b14 <= 0 goto label40;

        $f2 = (float) i11;

        $f2 = $f2 * $f1;

        $f2 = $f2 / f0;

        i6 = (int) $f2;

        $i12 = i6;

        f0 = f0 - $f1;

        i11 = i11 - i6;

        $i13 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        $i15 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i13 = $i13 + $i15;

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i13 = $i13 + $i15;

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        $i13 = $i13 + $i15;

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        $i13 = staticinvoke <android.support.v7.widget.LinearLayoutCompat: int getChildMeasureSpec(int,int,int)>($i0, $i13, $i15);

        $i15 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;

        if $i15 != 0 goto label37;

        if $i9 == 1073741824 goto label44;

     label37:
        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        i6 = $i12 + i6;

        if i6 >= 0 goto label38;

        i6 = 0;

     label38:
        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i13, i6);

     label39:
        i6 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r1);

        i6 = i6 & -256;

        i4 = staticinvoke <android.support.v7.widget.ViewUtils: int combineMeasuredStates(int,int)>(i4, i6);

     label40:
        i6 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;

        $i12 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;

        i6 = i6 + $i12;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i12 = $i12 + i6;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i12);

        if $i8 == 1073741824 goto label47;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if $i13 != -1 goto label47;

        z2 = 1;

     label41:
        if z2 == 0 goto label48;

     label42:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i6);

        if z0 == 0 goto label49;

        i6 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;

        if i6 != -1 goto label49;

        z0 = 1;

     label43:
        i6 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + i6;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;

        $i12 = $i12 + $i13;

        $i13 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;

        $i12 = $i12 + $i13;

        $i13 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r1);

        $i12 = $i12 + $i13;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i12);

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = i6;

        goto label34;

     label44:
        if i6 <= 0 goto label46;

     label45:
        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i13, i6);

        goto label39;

     label46:
        $i12 = 0;

        goto label45;

     label47:
        z2 = 0;

        goto label41;

     label48:
        i6 = $i12;

        goto label42;

     label49:
        z0 = 0;

        goto label43;

     label50:
        $i9 = r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

        i10 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

        i6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();

        i10 = i10 + i6;

        $i9 = $i9 + i10;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i9;

     label51:
        if z0 != 0 goto label52;

        if $i8 == 1073741824 goto label52;

        i3 = i5;

     label52:
        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

        i5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();

        $i8 = $i8 + i5;

        i3 = i3 + $i8;

        $i8 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumWidth()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i8);

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>(i3, $i0, i4);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setMeasuredDimension(int,int)>($i0, i2);

        if z1 == 0 goto label57;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void forceUniformWidth(int,int)>($i7, $i1);

        return;

     label53:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i6);

        if $z3 == 0 goto label51;

        if $i9 == 1073741824 goto label51;

        $i9 = 0;

     label54:
        if $i9 >= $i7 goto label51;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i9);

        if $r1 == null goto label55;

        i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if i6 != 8 goto label56;

     label55:
        $i9 = $i9 + 1;

        goto label54;

     label56:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;

        f0 = r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;

        $b14 = f0 cmpl 0.0F;

        if $b14 <= 0 goto label55;

        i6 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, 1073741824);

        i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i10, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>(i6, i11);

        goto label55;

     label57:
        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i0 != 1 goto label2;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)>($r1);

        return;

     label2:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)>($r1);

        return;
    }
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.Class $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        $r3 = class "Landroid/support/v7/widget/LinearLayoutCompat;";

        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r2);

     label1:
        return;
    }
    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.Class $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        $r3 = class "Landroid/support/v7/widget/LinearLayoutCompat;";

        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r2);

     label1:
        return;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i4 != 1 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i2 != 1 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureVertical(int,int)>($i0, $i1);

        return;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void measureHorizontal(int,int)>($i0, $i1);

        return;
    }
    public void setBaselineAligned(boolean)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned> = $z0;

        return;
    }
    public void setBaselineAlignedChildIndex(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = $i0;

        return;
    }
    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = 0;

        $r2 = r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider> = $r1;

        if $r1 == null goto label4;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight> = $i0;

     label2:
        if $r1 != null goto label3;

        $z0 = 1;

     label3:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void setWillNotDraw(boolean)>($z0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

        return;

     label4:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth> = 0;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight> = 0;

        goto label2;
    }
    public void setDividerPadding(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding> = $i0;

        return;
    }
    public void setGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        if $i1 == $i0 goto label3;

        $i1 = 8388615 & $i0;

        if $i1 != 0 goto label1;

        $i0 = $i0 | 8388611;

     label1:
        $i1 = $i0 & 112;

        if $i1 != 0 goto label2;

        $i0 = $i0 | 48;

     label2:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label3:
        return;
    }
    public void setHorizontalGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i0 = $i0 & 8388615;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        $i1 = $i1 & 8388615;

        if $i1 == $i0 goto label1;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        $i1 = $i1 & -8388616;

        $i0 = $i1 | $i0;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label1:
        return;
    }
    public void setMeasureWithLargestChildEnabled(boolean)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild> = $z0;

        return;
    }
    public void setOrientation(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation> = $i0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label1:
        return;
    }
    public void setShowDividers(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;

        if $i0 == $i1 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label1:
        r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers> = $i0;

        return;
    }
    public void setVerticalGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $i0 := @parameter0: int;

        $i0 = $i0 & 112;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        $i1 = $i1 & 112;

        if $i1 == $i0 goto label1;

        $i1 = r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

        $i1 = $i1 & -113;

        $i0 = $i1 | $i0;

        r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label1:
        return;
    }
    public void setWeightSum(float)
    {
        android.support.v7.widget.LinearLayoutCompat r0;
        float $f0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum> = $f0;

        return;
    }
    public boolean shouldDelayChildPressedState()
    {
        android.support.v7.widget.LinearLayoutCompat r0;

        r0 := @this: android.support.v7.widget.LinearLayoutCompat;

        return 0;
    }
