butterknife.internal.ViewBindings extends java.lang.Object
private final java.util.Set fieldBindings
private final int id
private final java.util.LinkedHashMap methodBindings
    void <init>(int)
    {
        butterknife.internal.ViewBindings r0;
        int $i0;
        java.util.LinkedHashSet $r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: butterknife.internal.ViewBindings;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<butterknife.internal.ViewBindings: java.util.Set fieldBindings> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings> = $r2;

        r0.<butterknife.internal.ViewBindings: int id> = $i0;

        return;
    }
    public void addFieldBinding(butterknife.internal.FieldViewBinding)
    {
        butterknife.internal.ViewBindings r0;
        butterknife.internal.FieldViewBinding $r1;
        java.util.Set $r2;

        r0 := @this: butterknife.internal.ViewBindings;

        $r1 := @parameter0: butterknife.internal.FieldViewBinding;

        $r2 = r0.<butterknife.internal.ViewBindings: java.util.Set fieldBindings>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void addMethodBinding(butterknife.internal.ListenerClass, butterknife.internal.ListenerMethod, butterknife.internal.MethodViewBinding)
    {
        butterknife.internal.ViewBindings r0;
        butterknife.internal.ListenerClass $r1;
        butterknife.internal.ListenerMethod $r2;
        butterknife.internal.MethodViewBinding $r3;
        java.util.LinkedHashMap $r4;
        java.lang.Object $r5;
        java.util.Map r6;
        java.util.Set r7;
        java.util.LinkedHashSet $r8;

        r0 := @this: butterknife.internal.ViewBindings;

        $r1 := @parameter0: butterknife.internal.ListenerClass;

        $r2 := @parameter1: butterknife.internal.ListenerMethod;

        $r3 := @parameter2: butterknife.internal.MethodViewBinding;

        $r4 = r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings>;

        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.util.Map) $r5;

        r7 = null;

        if r6 != null goto label3;

        $r4 = new java.util.LinkedHashMap;

        r6 = $r4;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        $r4 = r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings>;

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

     label1:
        if r7 != null goto label2;

        $r8 = new java.util.LinkedHashSet;

        r7 = $r8;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r8);

     label2:
        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r3);

        return;

     label3:
        $r5 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r7 = (java.util.Set) $r5;

        goto label1;
    }
    public java.util.Collection getFieldBindings()
    {
        butterknife.internal.ViewBindings r0;
        java.util.Set r1;

        r0 := @this: butterknife.internal.ViewBindings;

        r1 = r0.<butterknife.internal.ViewBindings: java.util.Set fieldBindings>;

        return r1;
    }
    public int getId()
    {
        butterknife.internal.ViewBindings r0;
        int i0;

        r0 := @this: butterknife.internal.ViewBindings;

        i0 = r0.<butterknife.internal.ViewBindings: int id>;

        return i0;
    }
    public java.util.Map getMethodBindings()
    {
        butterknife.internal.ViewBindings r0;
        java.util.LinkedHashMap r1;

        r0 := @this: butterknife.internal.ViewBindings;

        r1 = r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings>;

        return r1;
    }
    public java.util.List getRequiredBindings()
    {
        butterknife.internal.ViewBindings r0;
        java.util.ArrayList r1;
        java.util.Set $r2;
        java.util.Iterator $r3, $r9, $r10;
        boolean $z0;
        java.lang.Object $r4;
        butterknife.internal.FieldViewBinding r5;
        java.util.LinkedHashMap $r6;
        java.util.Collection $r7;
        java.util.Map r8;
        butterknife.internal.MethodViewBinding r11;

        r0 := @this: butterknife.internal.ViewBindings;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<butterknife.internal.ViewBindings: java.util.Set fieldBindings>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (butterknife.internal.FieldViewBinding) $r4;

        $z0 = virtualinvoke r5.<butterknife.internal.FieldViewBinding: boolean isRequired()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        $r6 = r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map) $r4;

        $r7 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>();

        $r9 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Set) $r4;

        $r10 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (butterknife.internal.MethodViewBinding) $r4;

        $z0 = virtualinvoke r11.<butterknife.internal.MethodViewBinding: boolean isRequired()>();

        if $z0 == 0 goto label5;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label5;

     label6:
        return r1;
    }
    public boolean hasMethodBinding(butterknife.internal.ListenerClass, butterknife.internal.ListenerMethod)
    {
        butterknife.internal.ViewBindings r0;
        butterknife.internal.ListenerClass $r1;
        butterknife.internal.ListenerMethod $r2;
        java.util.LinkedHashMap $r3;
        java.lang.Object $r4;
        java.util.Map r5;
        boolean $z0;

        r0 := @this: butterknife.internal.ViewBindings;

        $r1 := @parameter0: butterknife.internal.ListenerClass;

        $r2 := @parameter1: butterknife.internal.ListenerMethod;

        $r3 = r0.<butterknife.internal.ViewBindings: java.util.LinkedHashMap methodBindings>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.util.Map) $r4;

        if r5 == null goto label1;

        $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
