net.objecthunter.exp4j.Expression$1 extends java.lang.Object implements java.util.concurrent.Callable
final net.objecthunter.exp4j.Expression this$0
    void <init>(net.objecthunter.exp4j.Expression)
    {
        net.objecthunter.exp4j.Expression$1 r0;
        net.objecthunter.exp4j.Expression $r1;

        r0 := @this: net.objecthunter.exp4j.Expression$1;

        $r1 := @parameter0: net.objecthunter.exp4j.Expression;

        r0.<net.objecthunter.exp4j.Expression$1: net.objecthunter.exp4j.Expression this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Double call() throws java.lang.Exception
    {
        net.objecthunter.exp4j.Expression$1 r0;
        net.objecthunter.exp4j.Expression $r1;
        double $d0;
        java.lang.Double $r2;

        r0 := @this: net.objecthunter.exp4j.Expression$1;

        $r1 = r0.<net.objecthunter.exp4j.Expression$1: net.objecthunter.exp4j.Expression this$0>;

        $d0 = virtualinvoke $r1.<net.objecthunter.exp4j.Expression: double evaluate()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        net.objecthunter.exp4j.Expression$1 r0;
        java.lang.Double $r1;

        r0 := @this: net.objecthunter.exp4j.Expression$1;

        $r1 = virtualinvoke r0.<net.objecthunter.exp4j.Expression$1: java.lang.Double call()>();

        return $r1;
    }
