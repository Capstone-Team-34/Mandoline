net.objecthunter.exp4j.operator.Operators$6 extends net.objecthunter.exp4j.operator.Operator
    void <init>(java.lang.String, int, boolean, int)
    {
        net.objecthunter.exp4j.operator.Operators$6 r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.objecthunter.exp4j.operator.Operators$6;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 := @parameter3: int;

        specialinvoke r0.<net.objecthunter.exp4j.operator.Operator: void <init>(java.lang.String,int,boolean,int)>($r1, $i0, $z0, $i1);

        return;
    }
    public transient double apply(double[])
    {
        net.objecthunter.exp4j.operator.Operators$6 r0;
        double[] $r1;
        double $d0, $d1;
        byte $b0;
        java.lang.ArithmeticException $r2;

        r0 := @this: net.objecthunter.exp4j.operator.Operators$6;

        $r1 := @parameter0: double[];

        $d0 = $r1[1];

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r2 = new java.lang.ArithmeticException;

        specialinvoke $r2.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Division by zero!");

        throw $r2;

     label1:
        $d0 = $r1[0];

        $d1 = $r1[1];

        $d0 = $d0 / $d1;

        return $d0;
    }
