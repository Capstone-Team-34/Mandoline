oauth.signpost.basic.HttpURLConnectionRequestAdapter extends java.lang.Object implements oauth.signpost.http.HttpRequest
protected java.net.HttpURLConnection connection
    public void <init>(java.net.HttpURLConnection)
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 := @parameter0: java.net.HttpURLConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection> = $r1;

        return;
    }
    public java.util.Map getAllHeaders()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.util.HashMap r1;
        java.net.HttpURLConnection $r2;
        java.util.Map $r3;
        int $i0;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String r7;
        java.util.List r8;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r2 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.util.Map getRequestProperties()>();

        r1 = new java.util.HashMap;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        specialinvoke r1.<java.util.HashMap: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (java.util.List) $r6;

        $z0 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r6);

        goto label1;

     label2:
        return r1;
    }
    public java.lang.String getContentType()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.lang.String $r1;
        java.net.HttpURLConnection $r2;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r2 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type");

        return $r1;
    }
    public java.lang.String getHeader(java.lang.String)
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.lang.String $r1;
        java.net.HttpURLConnection $r2;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1);

        return $r1;
    }
    public java.io.InputStream getMessagePayload() throws java.io.IOException
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        return null;
    }
    public java.lang.String getMethod()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.lang.String $r1;
        java.net.HttpURLConnection $r2;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r2 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        return $r1;
    }
    public java.lang.String getRequestUrl()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.net.HttpURLConnection $r1;
        java.net.URL $r2;
        java.lang.String $r3;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toExternalForm()>();

        return $r3;
    }
    public void setHeader(java.lang.String, java.lang.String)
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.lang.String $r1, $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setRequestUrl(java.lang.String)
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.lang.String $r1;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        return;
    }
    public volatile java.lang.Object unwrap()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r1 = virtualinvoke r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection unwrap()>();

        return $r1;
    }
    public java.net.HttpURLConnection unwrap()
    {
        oauth.signpost.basic.HttpURLConnectionRequestAdapter r0;
        java.net.HttpURLConnection r1;

        r0 := @this: oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        r1 = r0.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: java.net.HttpURLConnection connection>;

        return r1;
    }
