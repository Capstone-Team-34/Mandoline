com.uservoice.uservoicesdk.model.CustomField extends com.uservoice.uservoicesdk.model.BaseModel
private java.lang.String name
private java.util.List predefinedValues
private boolean required
    public void <init>()
    {
        com.uservoice.uservoicesdk.model.CustomField r0;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        specialinvoke r0.<com.uservoice.uservoicesdk.model.BaseModel: void <init>()>();

        return;
    }
    public java.lang.String getName()
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        java.lang.String r1;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        r1 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.lang.String name>;

        return r1;
    }
    public java.util.List getPredefinedValues()
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        java.util.List r1;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        r1 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.util.List predefinedValues>;

        return r1;
    }
    public boolean isPredefined()
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        $r1 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.util.List predefinedValues>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isRequired()
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        boolean z0;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        z0 = r0.<com.uservoice.uservoicesdk.model.CustomField: boolean required>;

        return z0;
    }
    public void load(org.json.JSONObject) throws org.json.JSONException
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;
        boolean $z0;
        java.util.ArrayList $r3;
        org.json.JSONArray $r4;
        int i0, $i1;
        java.util.List $r5;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<com.uservoice.uservoicesdk.model.BaseModel: void load(org.json.JSONObject)>($r1);

        $r2 = virtualinvoke r0.<com.uservoice.uservoicesdk.model.CustomField: java.lang.String getString(org.json.JSONObject,java.lang.String)>($r1, "name");

        r0.<com.uservoice.uservoicesdk.model.CustomField: java.lang.String name> = $r2;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("allow_blank");

        if $z0 != 0 goto label3;

        $z0 = 1;

     label1:
        r0.<com.uservoice.uservoicesdk.model.CustomField: boolean required> = $z0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.uservoice.uservoicesdk.model.CustomField: java.util.List predefinedValues> = $r3;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("possible_values");

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("possible_values");

        i0 = 0;

     label2:
        $i1 = virtualinvoke $r4.<org.json.JSONArray: int length()>();

        if i0 >= $i1 goto label4;

        $r1 = virtualinvoke $r4.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r5 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.util.List predefinedValues>;

        $r2 = virtualinvoke r0.<com.uservoice.uservoicesdk.model.CustomField: java.lang.String getString(org.json.JSONObject,java.lang.String)>($r1, "value");

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        i0 = i0 + 1;

        goto label2;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        return;
    }
    public void save(org.json.JSONObject) throws org.json.JSONException
    {
        com.uservoice.uservoicesdk.model.CustomField r0;
        org.json.JSONObject $r1, r3;
        org.json.JSONArray r2;
        java.lang.String $r4;
        boolean $z0;
        java.util.List $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.uservoice.uservoicesdk.model.CustomField;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<com.uservoice.uservoicesdk.model.BaseModel: void save(org.json.JSONObject)>($r1);

        $r4 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.lang.String name>;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r4);

        $z0 = r0.<com.uservoice.uservoicesdk.model.CustomField: boolean required>;

        if $z0 != 0 goto label3;

        $z0 = 1;

     label1:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("allow_blank", $z0);

        r2 = new org.json.JSONArray;

        specialinvoke r2.<org.json.JSONArray: void <init>()>();

        $r5 = r0.<com.uservoice.uservoicesdk.model.CustomField: java.util.List predefinedValues>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r7;

        r3 = new org.json.JSONObject;

        specialinvoke r3.<org.json.JSONObject: void <init>()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("value", $r4);

        virtualinvoke r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r3);

        goto label2;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("possible_values", r2);

        return;
    }
