com.crashlytics.android.beta.DeviceTokenLoader extends java.lang.Object implements io.fabric.sdk.android.services.cache.ValueLoader
private static final java.lang.String DIRFACTOR_DEVICE_TOKEN_PREFIX
    public void <init>()
    {
        com.crashlytics.android.beta.DeviceTokenLoader r0;

        r0 := @this: com.crashlytics.android.beta.DeviceTokenLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    java.lang.String determineDeviceToken(java.util.zip.ZipInputStream) throws java.io.IOException
    {
        com.crashlytics.android.beta.DeviceTokenLoader r0;
        java.util.zip.ZipInputStream $r1;
        java.util.zip.ZipEntry $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.crashlytics.android.beta.DeviceTokenLoader;

        $r1 := @parameter0: java.util.zip.ZipInputStream;

     label1:
        $r2 = virtualinvoke $r1.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("assets/com.crashlytics.android.beta/dirfactor-device-token=");

        if $z0 == 0 goto label1;

        $r4 = "assets/com.crashlytics.android.beta/dirfactor-device-token=";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r3;

     label2:
        return "";
    }
    java.util.zip.ZipInputStream getZipInputStreamOfAppApkFrom(android.content.Context) throws android.content.pm.PackageManager$NameNotFoundException, java.io.FileNotFoundException
    {
        com.crashlytics.android.beta.DeviceTokenLoader r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        java.util.zip.ZipInputStream $r5;
        java.io.FileInputStream $r6;

        r0 := @this: com.crashlytics.android.beta.DeviceTokenLoader;

        $r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, 0);

        $r5 = new java.util.zip.ZipInputStream;

        $r6 = new java.io.FileInputStream;

        $r2 = $r4.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>($r2);

        specialinvoke $r5.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r6);

        return $r5;
    }
    public volatile java.lang.Object load(android.content.Context) throws java.lang.Exception
    {
        com.crashlytics.android.beta.DeviceTokenLoader r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.beta.DeviceTokenLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<com.crashlytics.android.beta.DeviceTokenLoader: java.lang.String load(android.content.Context)>($r1);

        return $r2;
    }
    public java.lang.String load(android.content.Context) throws java.lang.Exception
    {
        com.crashlytics.android.beta.DeviceTokenLoader r0;
        android.content.Context $r1;
        double d0;
        long $l0, $l1;
        java.lang.String r2, $r5;
        java.util.zip.ZipInputStream r3, $r4;
        io.fabric.sdk.android.Logger $r6;
        java.lang.StringBuilder $r7;
        java.io.IOException r8, r10, r12, r13, r14, r16;
        android.content.pm.PackageManager$NameNotFoundException r9;
        java.io.FileNotFoundException r11;
        java.lang.Throwable $r15;

        r0 := @this: com.crashlytics.android.beta.DeviceTokenLoader;

        $r1 := @parameter0: android.content.Context;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r2 = "";

        r3 = null;

     label01:
        $r4 = virtualinvoke r0.<com.crashlytics.android.beta.DeviceTokenLoader: java.util.zip.ZipInputStream getZipInputStreamOfAppApkFrom(android.content.Context)>($r1);

     label02:
        r3 = $r4;

     label03:
        $r5 = virtualinvoke r0.<com.crashlytics.android.beta.DeviceTokenLoader: java.lang.String determineDeviceToken(java.util.zip.ZipInputStream)>($r4);

     label04:
        r2 = $r5;

        if $r4 == null goto label06;

     label05:
        virtualinvoke $r4.<java.util.zip.ZipInputStream: void close()>();

     label06:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l0 = $l1 - $l0;

        d0 = (double) $l0;

        d0 = d0 / 1000000.0;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beta device token load took ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r5);

        return r2;

     label07:
        r8 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to close the APK file", r8);

        goto label06;

     label08:
        r9 := @caughtexception;

     label09:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to find this app in the PackageManager", r9);

     label10:
        if r3 == null goto label06;

     label11:
        virtualinvoke r3.<java.util.zip.ZipInputStream: void close()>();

     label12:
        goto label06;

     label13:
        r10 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to close the APK file", r10);

        goto label06;

     label14:
        r11 := @caughtexception;

     label15:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to find the APK file", r11);

     label16:
        if r3 == null goto label06;

     label17:
        virtualinvoke r3.<java.util.zip.ZipInputStream: void close()>();

     label18:
        goto label06;

     label19:
        r12 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to close the APK file", r12);

        goto label06;

     label20:
        r13 := @caughtexception;

     label21:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to read the APK file", r13);

     label22:
        if r3 == null goto label06;

     label23:
        virtualinvoke r3.<java.util.zip.ZipInputStream: void close()>();

     label24:
        goto label06;

     label25:
        r14 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to close the APK file", r14);

        goto label06;

     label26:
        $r15 := @caughtexception;

        if r3 == null goto label28;

     label27:
        virtualinvoke r3.<java.util.zip.ZipInputStream: void close()>();

     label28:
        throw $r15;

     label29:
        r16 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to close the APK file", r16);

        goto label28;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label08;
        catch java.io.FileNotFoundException from label01 to label02 with label14;
        catch java.io.FileNotFoundException from label03 to label04 with label14;
        catch java.io.IOException from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label27 to label28 with label29;
    }
