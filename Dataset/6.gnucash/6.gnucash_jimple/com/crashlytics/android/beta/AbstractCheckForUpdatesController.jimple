com.crashlytics.android.beta.AbstractCheckForUpdatesController extends java.lang.Object implements com.crashlytics.android.beta.UpdatesController
static final long LAST_UPDATE_CHECK_DEFAULT
static final java.lang.String LAST_UPDATE_CHECK_KEY
private static final long MILLIS_PER_SECOND
private com.crashlytics.android.beta.Beta beta
private io.fabric.sdk.android.services.settings.BetaSettingsData betaSettings
private com.crashlytics.android.beta.BuildProperties buildProps
private android.content.Context context
private io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider
private final java.util.concurrent.atomic.AtomicBoolean externallyReady
private io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory
private io.fabric.sdk.android.services.common.IdManager idManager
private final java.util.concurrent.atomic.AtomicBoolean initialized
private long lastCheckTimeMillis
private io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore
    public void <init>()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        specialinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void <init>(boolean)>(0);

        return;
    }
    public void <init>(boolean)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized> = $r1;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis> = 0L;

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>($z0);

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady> = $r1;

        return;
    }
    private void performUpdateCheck()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        com.crashlytics.android.beta.CheckForUpdatesRequest r1;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r2;
        com.crashlytics.android.beta.CheckForUpdatesResponseTransform $r3;
        io.fabric.sdk.android.Logger $r4;
        io.fabric.sdk.android.services.common.ApiKey $r5;
        android.content.Context $r6;
        java.lang.String $r7, $r10, $r13, $r15;
        io.fabric.sdk.android.services.common.IdManager $r8;
        com.crashlytics.android.beta.BuildProperties $r9;
        com.crashlytics.android.beta.Beta $r11, $r12;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r14;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Performing update check");

        $r5 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r5.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r6 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: android.content.Context context>;

        $r7 = virtualinvoke $r5.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r6);

        $r8 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r9 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.BuildProperties buildProps>;

        $r10 = $r9.<com.crashlytics.android.beta.BuildProperties: java.lang.String packageName>;

        $r10 = virtualinvoke $r8.<io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>($r7, $r10);

        r1 = new com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r11 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta>;

        $r12 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta>;

        $r13 = virtualinvoke $r12.<com.crashlytics.android.beta.Beta: java.lang.String getOverridenSpiEndpoint()>();

        $r14 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.settings.BetaSettingsData betaSettings>;

        $r15 = $r14.<io.fabric.sdk.android.services.settings.BetaSettingsData: java.lang.String updateUrl>;

        $r2 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        $r3 = new com.crashlytics.android.beta.CheckForUpdatesResponseTransform;

        specialinvoke $r3.<com.crashlytics.android.beta.CheckForUpdatesResponseTransform: void <init>()>();

        specialinvoke r1.<com.crashlytics.android.beta.CheckForUpdatesRequest: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory,com.crashlytics.android.beta.CheckForUpdatesResponseTransform)>($r11, $r13, $r15, $r2, $r3);

        $r9 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.BuildProperties buildProps>;

        virtualinvoke r1.<com.crashlytics.android.beta.CheckForUpdatesRequest: com.crashlytics.android.beta.CheckForUpdatesResponse invoke(java.lang.String,java.lang.String,com.crashlytics.android.beta.BuildProperties)>($r7, $r10, $r9);

        return;
    }
    protected void checkForUpdates()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        long l0, $l1, $l3;
        io.fabric.sdk.android.services.persistence.PreferenceStore $r1, $r2, $r4;
        android.content.SharedPreferences $r3;
        boolean $z0;
        android.content.SharedPreferences$Editor $r5;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r6;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r7;
        int $i2;
        io.fabric.sdk.android.Logger $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        byte $b4;
        java.lang.Throwable $r11, $r12;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore>;

        entermonitor $r1;

     label01:
        $r2 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore>;

        $r3 = interfaceinvoke $r2.<io.fabric.sdk.android.services.persistence.PreferenceStore: android.content.SharedPreferences get()>();

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean contains(java.lang.String)>("last_update_check");

        if $z0 == 0 goto label02;

        $r2 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore>;

        $r4 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore>;

        $r5 = interfaceinvoke $r4.<io.fabric.sdk.android.services.persistence.PreferenceStore: android.content.SharedPreferences$Editor edit()>();

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("last_update_check");

        interfaceinvoke $r2.<io.fabric.sdk.android.services.persistence.PreferenceStore: boolean save(android.content.SharedPreferences$Editor)>($r5);

     label02:
        exitmonitor $r1;

     label03:
        $r6 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $l1 = interfaceinvoke $r6.<io.fabric.sdk.android.services.common.CurrentTimeProvider: long getCurrentTimeMillis()>();

        $r7 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.settings.BetaSettingsData betaSettings>;

        $i2 = $r7.<io.fabric.sdk.android.services.settings.BetaSettingsData: int updateSuspendDurationSeconds>;

        l0 = (long) $i2;

        l0 = l0 * 1000L;

        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates delay: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r10);

        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates last check time: ");

        $l3 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long getLastCheckTimeMillis()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r10);

        $l3 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long getLastCheckTimeMillis()>();

        l0 = $l3 + l0;

        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check for updates current time: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", next check time: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r10);

        $b4 = $l1 cmp l0;

        if $b4 < 0 goto label10;

     label04:
        specialinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void performUpdateCheck()>();

     label05:
        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void setLastCheckTimeMillis(long)>($l1);

        return;

     label06:
        $r11 := @caughtexception;

     label07:
        exitmonitor $r1;

     label08:
        throw $r11;

     label09:
        $r12 := @caughtexception;

        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void setLastCheckTimeMillis(long)>($l1);

        throw $r12;

     label10:
        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Check for updates next check time was not passed");

        return;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label06;
    }
    long getLastCheckTimeMillis()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        long l0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        l0 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis>;

        return l0;
    }
    public void initialize(android.content.Context, com.crashlytics.android.beta.Beta, io.fabric.sdk.android.services.common.IdManager, io.fabric.sdk.android.services.settings.BetaSettingsData, com.crashlytics.android.beta.BuildProperties, io.fabric.sdk.android.services.persistence.PreferenceStore, io.fabric.sdk.android.services.common.CurrentTimeProvider, io.fabric.sdk.android.services.network.HttpRequestFactory)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        android.content.Context $r1;
        com.crashlytics.android.beta.Beta $r2;
        io.fabric.sdk.android.services.common.IdManager $r3;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r4;
        com.crashlytics.android.beta.BuildProperties $r5;
        io.fabric.sdk.android.services.persistence.PreferenceStore $r6;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r7;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r8;
        boolean $z0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.crashlytics.android.beta.Beta;

        $r3 := @parameter2: io.fabric.sdk.android.services.common.IdManager;

        $r4 := @parameter3: io.fabric.sdk.android.services.settings.BetaSettingsData;

        $r5 := @parameter4: com.crashlytics.android.beta.BuildProperties;

        $r6 := @parameter5: io.fabric.sdk.android.services.persistence.PreferenceStore;

        $r7 := @parameter6: io.fabric.sdk.android.services.common.CurrentTimeProvider;

        $r8 := @parameter7: io.fabric.sdk.android.services.network.HttpRequestFactory;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: android.content.Context context> = $r1;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.Beta beta> = $r2;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.common.IdManager idManager> = $r3;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.settings.BetaSettingsData betaSettings> = $r4;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: com.crashlytics.android.beta.BuildProperties buildProps> = $r5;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.persistence.PreferenceStore preferenceStore> = $r6;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider> = $r7;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r8;

        $z0 = virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: boolean signalInitialized()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void checkForUpdates()>();

     label1:
        return;
    }
    void setLastCheckTimeMillis(long)
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        long $l0;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $l0 := @parameter0: long;

        r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: long lastCheckTimeMillis> = $l0;

        return;
    }
    protected boolean signalExternallyReady()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
    boolean signalInitialized()
    {
        com.crashlytics.android.beta.AbstractCheckForUpdatesController r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.beta.AbstractCheckForUpdatesController;

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean initialized>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r1 = r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: java.util.concurrent.atomic.AtomicBoolean externallyReady>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
