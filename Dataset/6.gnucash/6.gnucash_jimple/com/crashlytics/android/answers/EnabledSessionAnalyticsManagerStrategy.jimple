com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy extends io.fabric.sdk.android.services.events.EnabledEventsStrategy implements com.crashlytics.android.answers.SessionAnalyticsManagerStrategy
io.fabric.sdk.android.services.common.ApiKey apiKey
boolean customEventsEnabled
com.crashlytics.android.answers.EventFilter eventFilter
io.fabric.sdk.android.services.events.FilesSender filesSender
private final io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory
private final io.fabric.sdk.android.Kit kit
final com.crashlytics.android.answers.SessionEventMetadata metadata
boolean predefinedEventsEnabled
    public void <init>(io.fabric.sdk.android.Kit, android.content.Context, java.util.concurrent.ScheduledExecutorService, com.crashlytics.android.answers.SessionAnalyticsFilesManager, io.fabric.sdk.android.services.network.HttpRequestFactory, com.crashlytics.android.answers.SessionEventMetadata)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        io.fabric.sdk.android.Kit $r1;
        android.content.Context $r2;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r4;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r5;
        com.crashlytics.android.answers.SessionEventMetadata $r6;
        com.crashlytics.android.answers.KeepAllEventFilter $r7;
        io.fabric.sdk.android.services.common.ApiKey $r8;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r4 := @parameter3: com.crashlytics.android.answers.SessionAnalyticsFilesManager;

        $r5 := @parameter4: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r6 := @parameter5: com.crashlytics.android.answers.SessionEventMetadata;

        specialinvoke r0.<io.fabric.sdk.android.services.events.EnabledEventsStrategy: void <init>(android.content.Context,java.util.concurrent.ScheduledExecutorService,io.fabric.sdk.android.services.events.EventsFilesManager)>($r2, $r3, $r4);

        $r7 = new com.crashlytics.android.answers.KeepAllEventFilter;

        specialinvoke $r7.<com.crashlytics.android.answers.KeepAllEventFilter: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r7;

        $r8 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r8.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.common.ApiKey apiKey> = $r8;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = 1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = 1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.Kit kit> = $r1;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r5;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6;

        return;
    }
    public io.fabric.sdk.android.services.events.FilesSender getFilesSender()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        io.fabric.sdk.android.services.events.FilesSender r1;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        r1 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.events.FilesSender filesSender>;

        return r1;
    }
    public void processEvent(com.crashlytics.android.answers.SessionEvent$Builder)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        com.crashlytics.android.answers.SessionEvent$Builder $r1;
        com.crashlytics.android.answers.SessionEventMetadata $r2;
        com.crashlytics.android.answers.SessionEvent $r3;
        boolean $z0;
        com.crashlytics.android.answers.SessionEvent$Type $r4, $r5;
        io.fabric.sdk.android.Logger $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        com.crashlytics.android.answers.EventFilter $r9;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: com.crashlytics.android.answers.SessionEvent$Builder;

        $r2 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata>;

        $r3 = virtualinvoke $r1.<com.crashlytics.android.answers.SessionEvent$Builder: com.crashlytics.android.answers.SessionEvent build(com.crashlytics.android.answers.SessionEventMetadata)>($r2);

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 != 0 goto label1;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type CUSTOM>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom events tracking disabled - skipping event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label1:
        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 != 0 goto label2;

        $r4 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type PREDEFINED>;

        $r5 = $r3.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0 = virtualinvoke $r4.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined events tracking disabled - skipping event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label2:
        $r9 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter>;

        $z0 = interfaceinvoke $r9.<com.crashlytics.android.answers.EventFilter: boolean skipEvent(com.crashlytics.android.answers.SessionEvent)>($r3);

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping filtered event: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r8);

        return;

     label3:
        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void recordEvent(java.lang.Object)>($r3);

        return;
    }
    public void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData, java.lang.String)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy r0;
        io.fabric.sdk.android.services.settings.AnalyticsSettingsData $r1;
        java.lang.String $r2, $r6, $r9;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesSender $r4;
        io.fabric.sdk.android.Kit $r5;
        io.fabric.sdk.android.services.common.ApiKey $r7;
        android.content.Context $r8;
        com.crashlytics.android.answers.AnswersRetryFilesSender $r10;
        io.fabric.sdk.android.services.events.EventsFilesManager $r11;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r12;
        boolean $z0;
        io.fabric.sdk.android.Logger $r13;
        java.lang.StringBuilder $r14;
        int $i0;
        com.crashlytics.android.answers.SamplingEventFilter $r15;

        r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.AnalyticsSettingsData;

        $r2 := @parameter1: java.lang.String;

        $r4 = new com.crashlytics.android.answers.SessionAnalyticsFilesSender;

        $r5 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.Kit kit>;

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: java.lang.String analyticsURL>;

        $r3 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        $r7 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.common.ApiKey apiKey>;

        $r8 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: android.content.Context context>;

        $r9 = virtualinvoke $r7.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r8);

        specialinvoke $r4.<com.crashlytics.android.answers.SessionAnalyticsFilesSender: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory,java.lang.String)>($r5, $r2, $r6, $r3, $r9);

        $r10 = staticinvoke <com.crashlytics.android.answers.AnswersRetryFilesSender: com.crashlytics.android.answers.AnswersRetryFilesSender build(com.crashlytics.android.answers.SessionAnalyticsFilesSender)>($r4);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.events.FilesSender filesSender> = $r10;

        $r11 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.events.EventsFilesManager filesManager>;

        $r12 = (com.crashlytics.android.answers.SessionAnalyticsFilesManager) $r11;

        virtualinvoke $r12.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData)>($r1);

        $z0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: boolean trackCustomEvents>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = $z0;

        $r13 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0 == 0 goto label4;

        $r2 = "enabled";

     label1:
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r2);

        $z0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: boolean trackPredefinedEvents>;

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = $z0;

        $r13 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined event tracking ");

        $z0 = r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0 == 0 goto label5;

        $r2 = "enabled";

     label2:
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r2);

        $i0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int samplingRate>;

        if $i0 <= 1 goto label3;

        $r13 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r13.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", "Event sampling enabled");

        $r15 = new com.crashlytics.android.answers.SamplingEventFilter;

        $i0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int samplingRate>;

        specialinvoke $r15.<com.crashlytics.android.answers.SamplingEventFilter: void <init>(int)>($i0);

        r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r15;

     label3:
        $i0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int flushIntervalSeconds>;

        virtualinvoke r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void configureRollover(int)>($i0);

        return;

     label4:
        $r2 = "disabled";

        goto label1;

     label5:
        $r2 = "disabled";

        goto label2;
    }
