com.crashlytics.android.answers.Answers extends io.fabric.sdk.android.Kit
static final java.lang.String CRASHLYTICS_API_ENDPOINT
static final long FIRST_LAUNCH_INTERVAL_IN_MS
static final java.lang.String PREF_STORE_NAME
public static final java.lang.String TAG
com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager
private long installedAt
io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager
com.crashlytics.android.answers.AnswersPreferenceManager preferenceManager
private java.lang.String versionCode
private java.lang.String versionName
    public void <init>()
    {
        com.crashlytics.android.answers.Answers r0;

        r0 := @this: com.crashlytics.android.answers.Answers;

        specialinvoke r0.<io.fabric.sdk.android.Kit: void <init>()>();

        return;
    }
    public static com.crashlytics.android.answers.Answers getInstance()
    {
        io.fabric.sdk.android.Kit $r0;
        com.crashlytics.android.answers.Answers $r1;

        $r0 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/answers/Answers;");

        $r1 = (com.crashlytics.android.answers.Answers) $r0;

        return $r1;
    }
    private void initializeSessionAnalytics(android.content.Context)
    {
        com.crashlytics.android.answers.Answers r0;
        android.content.Context $r1;
        com.crashlytics.android.answers.AnswersEventsHandler r2;
        com.crashlytics.android.answers.AnswersFilesManagerProvider r3;
        com.crashlytics.android.answers.SessionMetadataCollector r4;
        java.lang.Exception r5;
        long $l0;
        io.fabric.sdk.android.services.common.IdManager $r6;
        java.lang.String $r7, $r8;
        io.fabric.sdk.android.services.persistence.FileStoreImpl $r9;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r10;
        io.fabric.sdk.android.Logger $r11;
        com.crashlytics.android.answers.SessionAnalyticsManager $r12;
        io.fabric.sdk.android.ActivityLifecycleManager $r13;
        com.crashlytics.android.answers.AnswersLifecycleCallbacks $r14;
        boolean $z0;
        com.crashlytics.android.answers.AnswersPreferenceManager $r15;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: android.content.Context;

        r4 = new com.crashlytics.android.answers.SessionMetadataCollector;

     label01:
        $r6 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r7 = r0.<com.crashlytics.android.answers.Answers: java.lang.String versionCode>;

        $r8 = r0.<com.crashlytics.android.answers.Answers: java.lang.String versionName>;

        specialinvoke r4.<com.crashlytics.android.answers.SessionMetadataCollector: void <init>(android.content.Context,io.fabric.sdk.android.services.common.IdManager,java.lang.String,java.lang.String)>($r1, $r6, $r7, $r8);

     label02:
        r3 = new com.crashlytics.android.answers.AnswersFilesManagerProvider;

        $r9 = new io.fabric.sdk.android.services.persistence.FileStoreImpl;

     label03:
        specialinvoke $r9.<io.fabric.sdk.android.services.persistence.FileStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

        specialinvoke r3.<com.crashlytics.android.answers.AnswersFilesManagerProvider: void <init>(android.content.Context,io.fabric.sdk.android.services.persistence.FileStore)>($r1, $r9);

     label04:
        r2 = new com.crashlytics.android.answers.AnswersEventsHandler;

        $r10 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

     label05:
        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        specialinvoke $r10.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>(io.fabric.sdk.android.Logger)>($r11);

        specialinvoke r2.<com.crashlytics.android.answers.AnswersEventsHandler: void <init>(io.fabric.sdk.android.Kit,android.content.Context,com.crashlytics.android.answers.AnswersFilesManagerProvider,com.crashlytics.android.answers.SessionMetadataCollector,io.fabric.sdk.android.services.network.HttpRequestFactory)>(r0, $r1, r3, r4, $r10);

        virtualinvoke r2.<com.crashlytics.android.answers.AnswersEventsHandler: void enable()>();

     label06:
        $r12 = new com.crashlytics.android.answers.SessionAnalyticsManager;

     label07:
        specialinvoke $r12.<com.crashlytics.android.answers.SessionAnalyticsManager: void <init>(com.crashlytics.android.answers.AnswersEventsHandler)>(r2);

        r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager> = $r12;

        $r13 = r0.<com.crashlytics.android.answers.Answers: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>;

     label08:
        $r14 = new com.crashlytics.android.answers.AnswersLifecycleCallbacks;

     label09:
        $r12 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        specialinvoke $r14.<com.crashlytics.android.answers.AnswersLifecycleCallbacks: void <init>(com.crashlytics.android.answers.SessionAnalyticsManager)>($r12);

        virtualinvoke $r13.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r14);

        $l0 = r0.<com.crashlytics.android.answers.Answers: long installedAt>;

        $z0 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: boolean isFirstLaunch(long)>($l0);

     label10:
        if $z0 == 0 goto label14;

     label11:
        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", "New app install detected");

        $r12 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r12.<com.crashlytics.android.answers.SessionAnalyticsManager: void onInstall()>();

        $r15 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.AnswersPreferenceManager preferenceManager>;

        virtualinvoke $r15.<com.crashlytics.android.answers.AnswersPreferenceManager: void setAnalyticsLaunched()>();

     label12:
        return;

     label13:
        r5 := @caughtexception;

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", "Failed to initialize", r5);

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
    protected java.lang.Boolean doInBackground()
    {
        com.crashlytics.android.answers.Answers r0;
        java.lang.Exception r1;
        io.fabric.sdk.android.services.settings.Settings $r2;
        io.fabric.sdk.android.services.settings.SettingsData $r3;
        io.fabric.sdk.android.Logger $r4;
        java.lang.Boolean $r5;
        io.fabric.sdk.android.services.settings.FeaturesSettingsData $r6;
        boolean $z0;
        com.crashlytics.android.answers.SessionAnalyticsManager $r7;
        io.fabric.sdk.android.services.settings.AnalyticsSettingsData $r8;
        java.lang.String $r9;
        io.fabric.sdk.android.ActivityLifecycleManager $r10;

        r0 := @this: com.crashlytics.android.answers.Answers;

     label01:
        $r2 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

     label02:
        if $r3 != null goto label05;

     label03:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String)>("Answers", "Failed to retrieve settings");

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label04:
        return $r5;

     label05:
        $r6 = $r3.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.FeaturesSettingsData featuresData>;

        $z0 = $r6.<io.fabric.sdk.android.services.settings.FeaturesSettingsData: boolean collectAnalytics>;

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", "Analytics collection enabled");

        $r7 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        $r8 = $r3.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.AnalyticsSettingsData analyticsSettingsData>;

        $r9 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: java.lang.String getOverridenSpiEndpoint()>();

        virtualinvoke $r7.<com.crashlytics.android.answers.SessionAnalyticsManager: void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData,java.lang.String)>($r8, $r9);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label08:
        return $r5;

     label09:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", "Analytics collection disabled");

        $r10 = r0.<com.crashlytics.android.answers.Answers: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager>;

        virtualinvoke $r10.<io.fabric.sdk.android.ActivityLifecycleManager: void resetCallbacks()>();

        $r7 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r7.<com.crashlytics.android.answers.SessionAnalyticsManager: void disable()>();

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label10:
        return $r5;

     label11:
        r1 := @caughtexception;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", "Error dealing with settings", r1);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r5;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
    protected volatile java.lang.Object doInBackground()
    {
        com.crashlytics.android.answers.Answers r0;
        java.lang.Boolean $r1;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: java.lang.Boolean doInBackground()>();

        return $r1;
    }
    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.answers.Answers r0;

        r0 := @this: com.crashlytics.android.answers.Answers;

        return "com.crashlytics.sdk.android:answers";
    }
    java.lang.String getOverridenSpiEndpoint()
    {
        com.crashlytics.android.answers.Answers r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: android.content.Context getContext()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r1, "com.crashlytics.ApiEndpoint");

        return $r2;
    }
    public java.lang.String getVersion()
    {
        com.crashlytics.android.answers.Answers r0;

        r0 := @this: com.crashlytics.android.answers.Answers;

        return "1.3.2.79";
    }
    boolean installedRecently(long)
    {
        com.crashlytics.android.answers.Answers r0;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $b2 = $l0 cmp 3600000L;

        if $b2 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isFirstLaunch(long)
    {
        com.crashlytics.android.answers.Answers r0;
        long $l0;
        com.crashlytics.android.answers.AnswersPreferenceManager $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $l0 := @parameter0: long;

        $r1 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.AnswersPreferenceManager preferenceManager>;

        $z0 = virtualinvoke $r1.<com.crashlytics.android.answers.AnswersPreferenceManager: boolean hasAnalyticsLaunched()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: boolean installedRecently(long)>($l0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void logAddToCart(com.crashlytics.android.answers.AddToCartEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.AddToCartEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.AddToCartEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logContentView(com.crashlytics.android.answers.ContentViewEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.ContentViewEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.ContentViewEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logCustom(com.crashlytics.android.answers.CustomEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.CustomEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.CustomEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onCustom(com.crashlytics.android.answers.CustomEvent)>($r1);

     label2:
        return;
    }
    public void logInvite(com.crashlytics.android.answers.InviteEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.InviteEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.InviteEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logLevelEnd(com.crashlytics.android.answers.LevelEndEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.LevelEndEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.LevelEndEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logLevelStart(com.crashlytics.android.answers.LevelStartEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.LevelStartEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.LevelStartEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logLogin(com.crashlytics.android.answers.LoginEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.LoginEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.LoginEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logPurchase(com.crashlytics.android.answers.PurchaseEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.PurchaseEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.PurchaseEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logRating(com.crashlytics.android.answers.RatingEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.RatingEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.RatingEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logSearch(com.crashlytics.android.answers.SearchEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.SearchEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.SearchEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logShare(com.crashlytics.android.answers.ShareEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.ShareEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.ShareEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logSignUp(com.crashlytics.android.answers.SignUpEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.SignUpEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.SignUpEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void logStartCheckout(com.crashlytics.android.answers.StartCheckoutEvent)
    {
        com.crashlytics.android.answers.Answers r0;
        com.crashlytics.android.answers.StartCheckoutEvent $r1;
        java.lang.NullPointerException $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: com.crashlytics.android.answers.StartCheckoutEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("event must not be null");

        throw $r2;

     label1:
        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onPredefined(com.crashlytics.android.answers.PredefinedEvent)>($r1);

     label2:
        return;
    }
    public void onException(io.fabric.sdk.android.services.common.Crash$FatalException)
    {
        com.crashlytics.android.answers.Answers r0;
        io.fabric.sdk.android.services.common.Crash$FatalException $r1;
        java.lang.String $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: io.fabric.sdk.android.services.common.Crash$FatalException;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label1;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.Crash$FatalException: java.lang.String getSessionId()>();

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onCrash(java.lang.String)>($r2);

     label1:
        return;
    }
    public void onException(io.fabric.sdk.android.services.common.Crash$LoggedException)
    {
        com.crashlytics.android.answers.Answers r0;
        io.fabric.sdk.android.services.common.Crash$LoggedException $r1;
        java.lang.String $r2;
        com.crashlytics.android.answers.SessionAnalyticsManager $r3;

        r0 := @this: com.crashlytics.android.answers.Answers;

        $r1 := @parameter0: io.fabric.sdk.android.services.common.Crash$LoggedException;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        if $r3 == null goto label1;

        $r3 = r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.SessionAnalyticsManager analyticsManager>;

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.Crash$LoggedException: java.lang.String getSessionId()>();

        virtualinvoke $r3.<com.crashlytics.android.answers.SessionAnalyticsManager: void onError(java.lang.String)>($r2);

     label1:
        return;
    }
    protected boolean onPreExecute()
    {
        com.crashlytics.android.answers.Answers r0;
        java.lang.Exception r1;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl r2;
        android.content.Context $r3;
        com.crashlytics.android.answers.AnswersPreferenceManager $r4;
        io.fabric.sdk.android.ActivityLifecycleManager $r5;
        android.content.pm.PackageManager $r6;
        java.lang.String $r7;
        android.content.pm.PackageInfo $r8;
        int $i0;
        long $l1;
        android.content.pm.ApplicationInfo $r9;
        java.io.File $r10;
        io.fabric.sdk.android.Logger $r11;

        r0 := @this: com.crashlytics.android.answers.Answers;

     label01:
        $r3 = virtualinvoke r0.<com.crashlytics.android.answers.Answers: android.content.Context getContext()>();

     label02:
        r2 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

     label03:
        specialinvoke r2.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(android.content.Context,java.lang.String)>($r3, "settings");

     label04:
        $r4 = new com.crashlytics.android.answers.AnswersPreferenceManager;

     label05:
        specialinvoke $r4.<com.crashlytics.android.answers.AnswersPreferenceManager: void <init>(io.fabric.sdk.android.services.persistence.PreferenceStore)>(r2);

        r0.<com.crashlytics.android.answers.Answers: com.crashlytics.android.answers.AnswersPreferenceManager preferenceManager> = $r4;

     label06:
        $r5 = new io.fabric.sdk.android.ActivityLifecycleManager;

     label07:
        specialinvoke $r5.<io.fabric.sdk.android.ActivityLifecycleManager: void <init>(android.content.Context)>($r3);

        r0.<com.crashlytics.android.answers.Answers: io.fabric.sdk.android.ActivityLifecycleManager lifecycleManager> = $r5;

        $r6 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r7, 0);

        $i0 = $r8.<android.content.pm.PackageInfo: int versionCode>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r0.<com.crashlytics.android.answers.Answers: java.lang.String versionCode> = $r7;

        $r7 = $r8.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label08:
        if $r7 != null goto label14;

        $r7 = "0.0";

     label09:
        r0.<com.crashlytics.android.answers.Answers: java.lang.String versionName> = $r7;

     label10:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label16;

     label11:
        $l1 = $r8.<android.content.pm.PackageInfo: long firstInstallTime>;

        r0.<com.crashlytics.android.answers.Answers: long installedAt> = $l1;

     label12:
        specialinvoke r0.<com.crashlytics.android.answers.Answers: void initializeSessionAnalytics(android.content.Context)>($r3);

     label13:
        return 1;

     label14:
        $r7 = $r8.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label15:
        goto label09;

     label16:
        $r6 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r9 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r7, 0);

     label17:
        $r10 = new java.io.File;

     label18:
        $r7 = $r9.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r7);

        $l1 = virtualinvoke $r10.<java.io.File: long lastModified()>();

        r0.<com.crashlytics.android.answers.Answers: long installedAt> = $l1;

     label19:
        goto label12;

     label20:
        r1 := @caughtexception;

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Answers", "Error retrieving app properties", r1);

        return 0;

        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Exception from label11 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
    }
