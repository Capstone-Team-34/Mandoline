com.crashlytics.android.core.CrashlyticsCore extends io.fabric.sdk.android.Kit
static final float CLS_DEFAULT_PROCESS_DELAY
static final java.lang.String COLLECT_CUSTOM_KEYS
static final java.lang.String COLLECT_CUSTOM_LOGS
static final java.lang.String CRASHLYTICS_API_ENDPOINT
static final java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID
static final boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT
static final int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC
private static final java.lang.String INITIALIZATION_MARKER_FILE_NAME
static final int MAX_ATTRIBUTES
static final int MAX_ATTRIBUTE_SIZE
private static final java.lang.String PREF_ALWAYS_SEND_REPORTS_KEY
private static final boolean SHOULD_PROMPT_BEFORE_SENDING_REPORTS_DEFAULT
public static final java.lang.String TAG
private final java.util.concurrent.ConcurrentHashMap attributes
private java.lang.String buildId
private float delay
private boolean disabled
private com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper
private com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider
private com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler
private io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory
private java.io.File initializationMarkerFile
private java.lang.String installerPackageName
private com.crashlytics.android.core.CrashlyticsListener listener
private java.lang.String packageName
private final com.crashlytics.android.core.PinningInfoProvider pinningInfo
private java.io.File sdkDir
private final long startTime
private java.lang.String userEmail
private java.lang.String userId
private java.lang.String userName
private java.lang.String versionCode
private java.lang.String versionName
    public void <init>()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean)>(1.0F, null, null, 0);

        return;
    }
    void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        com.crashlytics.android.core.PinningInfoProvider $r2;
        boolean $z0;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r2 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.ExecutorUtils: java.util.concurrent.ExecutorService buildSingleThreadExecutorService(java.lang.String)>("Crashlytics Exception Handler");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean,java.util.concurrent.ExecutorService)>($f0, $r1, $r2, $z0, $r3);

        return;
    }
    void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean, java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        com.crashlytics.android.core.PinningInfoProvider $r2;
        boolean $z0;
        java.util.concurrent.ExecutorService $r3;
        long $l0;
        java.util.concurrent.ConcurrentHashMap $r4;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r2 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: java.util.concurrent.ExecutorService;

        specialinvoke r0.<io.fabric.sdk.android.Kit: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = null;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes> = $r4;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime> = $l0;

        r0.<com.crashlytics.android.core.CrashlyticsCore: float delay> = $f0;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo> = $r2;

        r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled> = $z0;

        $r5 = new com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: void <init>(java.util.concurrent.ExecutorService)>($r3);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper> = $r5;

        return;
    }
    static java.io.File access$000(com.crashlytics.android.core.CrashlyticsCore)
    {
        com.crashlytics.android.core.CrashlyticsCore $r0;
        java.io.File r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File initializationMarkerFile>;

        return r1;
    }
    static boolean access$100(com.crashlytics.android.core.CrashlyticsCore, android.app.Activity, io.fabric.sdk.android.services.settings.PromptSettingsData)
    {
        com.crashlytics.android.core.CrashlyticsCore $r0;
        android.app.Activity $r1;
        io.fabric.sdk.android.services.settings.PromptSettingsData $r2;
        boolean $z0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter1: android.app.Activity;

        $r2 := @parameter2: io.fabric.sdk.android.services.settings.PromptSettingsData;

        $z0 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsCore: boolean getSendDecisionFromUser(android.app.Activity,io.fabric.sdk.android.services.settings.PromptSettingsData)>($r1, $r2);

        return $z0;
    }
    static int access$300(com.crashlytics.android.core.CrashlyticsCore, float, int)
    {
        com.crashlytics.android.core.CrashlyticsCore $r0;
        float $f0;
        int $i0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter1: float;

        $i0 := @parameter2: int;

        $i0 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsCore: int dipsToPixels(float,int)>($f0, $i0);

        return $i0;
    }
    private int dipsToPixels(float, int)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    private void doLog(int, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.String $r1, $r2;
        long l1, $l2;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging messages.");

        if $z0 == 0 goto label2;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime>;

        l1 = $l2 - l1;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String formatLogMessage(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeToLog(long,java.lang.String)>(l1, $r1);

     label2:
        return;
    }
    private static boolean ensureFabricWithCalled(java.lang.String)
    {
        java.lang.String $r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsCore getInstance()>();

        if $r1 == null goto label1;

        $r2 = $r1.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        if $r2 != null goto label2;

     label1:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics must be initialized by calling Fabric.with(Context) ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r0, null);

        return 0;

     label2:
        return 1;
    }
    private void finishInitSynchronously()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$1 r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        io.fabric.sdk.android.services.concurrency.Task r5;
        io.fabric.sdk.android.Fabric $r6;
        java.util.concurrent.ExecutorService $r7;
        java.util.concurrent.Future $r8;
        io.fabric.sdk.android.Logger $r9;
        java.util.concurrent.TimeUnit $r10;
        java.lang.InterruptedException r11;
        java.util.concurrent.ExecutionException r12;
        java.util.concurrent.TimeoutException r13;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = new com.crashlytics.android.core.CrashlyticsCore$1;

        specialinvoke r1.<com.crashlytics.android.core.CrashlyticsCore$1: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.Collection getDependencies()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (io.fabric.sdk.android.services.concurrency.Task) $r4;

        virtualinvoke r1.<io.fabric.sdk.android.services.concurrency.PriorityCallable: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>(r5);

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.Fabric getFabric()>();

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService getExecutorService()>();

        $r8 = interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r1);

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics detected incomplete initialization on previous app launch. Will initialize synchronously.");

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label3:
        interfaceinvoke $r8.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r10);

     label4:
        return;

     label5:
        r11 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was interrupted during initialization.", r11);

        return;

     label6:
        r12 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Problem encountered during Crashlytics initialization.", r12);

        return;

     label7:
        r13 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics timed out during initialization.", r13);

        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label6;
        catch java.util.concurrent.TimeoutException from label3 to label4 with label7;
    }
    private static java.lang.String formatLogMessage(int, java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r1, $r3;
        java.lang.StringBuilder $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String logPriorityToString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static com.crashlytics.android.core.CrashlyticsCore getInstance()
    {
        io.fabric.sdk.android.Kit $r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;

        $r0 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/core/CrashlyticsCore;");

        $r1 = (com.crashlytics.android.core.CrashlyticsCore) $r0;

        return $r1;
    }
    private boolean getSendDecisionFromUser(android.app.Activity, io.fabric.sdk.android.services.settings.PromptSettingsData)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.app.Activity $r1;
        io.fabric.sdk.android.services.settings.PromptSettingsData $r2;
        com.crashlytics.android.core.CrashlyticsCore$OptInLatch r3;
        com.crashlytics.android.core.DialogStringResolver r4;
        com.crashlytics.android.core.CrashlyticsCore$7 $r5;
        io.fabric.sdk.android.Logger $r6;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.PromptSettingsData;

        r4 = new com.crashlytics.android.core.DialogStringResolver;

        specialinvoke r4.<com.crashlytics.android.core.DialogStringResolver: void <init>(android.content.Context,io.fabric.sdk.android.services.settings.PromptSettingsData)>($r1, $r2);

        r3 = new com.crashlytics.android.core.CrashlyticsCore$OptInLatch;

        specialinvoke r3.<com.crashlytics.android.core.CrashlyticsCore$OptInLatch: void <init>(com.crashlytics.android.core.CrashlyticsCore,com.crashlytics.android.core.CrashlyticsCore$1)>(r0, null);

        $r5 = new com.crashlytics.android.core.CrashlyticsCore$7;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsCore$7: void <init>(com.crashlytics.android.core.CrashlyticsCore,android.app.Activity,com.crashlytics.android.core.CrashlyticsCore$OptInLatch,com.crashlytics.android.core.DialogStringResolver,io.fabric.sdk.android.services.settings.PromptSettingsData)>(r0, $r1, r3, r4, $r2);

        virtualinvoke $r1.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r5);

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Waiting for user opt-in.");

        virtualinvoke r3.<com.crashlytics.android.core.CrashlyticsCore$OptInLatch: void await()>();

        $z0 = virtualinvoke r3.<com.crashlytics.android.core.CrashlyticsCore$OptInLatch: boolean getOptIn()>();

        return $z0;
    }
    private boolean isRequiringBuildId(android.content.Context)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.content.Context;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.RequireBuildId", 1);

        return $z0;
    }
    static void recordFatalExceptionEvent(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.Kit $r1;
        com.crashlytics.android.answers.Answers r2;
        io.fabric.sdk.android.services.common.Crash$FatalException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/answers/Answers;");

        r2 = (com.crashlytics.android.answers.Answers) $r1;

        if r2 == null goto label1;

        $r3 = new io.fabric.sdk.android.services.common.Crash$FatalException;

        specialinvoke $r3.<io.fabric.sdk.android.services.common.Crash$FatalException: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<com.crashlytics.android.answers.Answers: void onException(io.fabric.sdk.android.services.common.Crash$FatalException)>($r3);

     label1:
        return;
    }
    static void recordLoggedExceptionEvent(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.Kit $r1;
        com.crashlytics.android.answers.Answers r2;
        io.fabric.sdk.android.services.common.Crash$LoggedException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/answers/Answers;");

        r2 = (com.crashlytics.android.answers.Answers) $r1;

        if r2 == null goto label1;

        $r3 = new io.fabric.sdk.android.services.common.Crash$LoggedException;

        specialinvoke $r3.<io.fabric.sdk.android.services.common.Crash$LoggedException: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<com.crashlytics.android.answers.Answers: void onException(io.fabric.sdk.android.services.common.Crash$LoggedException)>($r3);

     label1:
        return;
    }
    private static java.lang.String sanitizeAttribute(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1024 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1024);

     label1:
        return $r0;
    }
    private void setAndValidateKitProperties(android.content.Context, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1;
        java.lang.String $r2, $r9;
        java.lang.Exception r3;
        com.crashlytics.android.core.PinningInfoProvider $r4;
        com.crashlytics.android.core.CrashlyticsPinningInfoProvider r5;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r6;
        io.fabric.sdk.android.Logger $r7;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r8;
        io.fabric.sdk.android.services.common.IdManager $r10;
        java.lang.StringBuilder $r11;
        android.content.pm.PackageManager $r12;
        android.content.pm.PackageInfo $r13;
        int $i0;
        boolean $z0;
        com.crashlytics.android.core.BuildIdValidator $r14;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        if $r4 == null goto label08;

        r5 = new com.crashlytics.android.core.CrashlyticsPinningInfoProvider;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        specialinvoke r5.<com.crashlytics.android.core.CrashlyticsPinningInfoProvider: void <init>(com.crashlytics.android.core.PinningInfoProvider)>($r4);

     label01:
        $r6 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        specialinvoke $r6.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>(io.fabric.sdk.android.Logger)>($r7);

        r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r6;

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        interfaceinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequestFactory: void setPinningInfoProvider(io.fabric.sdk.android.services.network.PinningInfoProvider)>(r5);

     label02:
        $r9 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String packageName> = $r9;

        $r10 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r9 = virtualinvoke $r10.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String installerPackageName> = $r9;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label03:
        $r11 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installer package name is: ");

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String installerPackageName>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r9);

        $r12 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String packageName>;

        $r13 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r9, 0);

        $i0 = $r13.<android.content.pm.PackageInfo: int versionCode>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String versionCode> = $r9;

        $r9 = $r13.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label05:
        if $r9 != null goto label09;

        $r9 = "0.0";

     label06:
        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String versionName> = $r9;

        $r9 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String resolveBuildId(android.content.Context)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String buildId> = $r9;

     label07:
        $r10 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        virtualinvoke $r10.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getBluetoothMacAddress()>();

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String buildId>;

        $z0 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean isRequiringBuildId(android.content.Context)>($r1);

        $r14 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.BuildIdValidator getBuildIdValidator(java.lang.String,boolean)>($r9, $z0);

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String packageName>;

        virtualinvoke $r14.<com.crashlytics.android.core.BuildIdValidator: void validate(java.lang.String,java.lang.String)>($r2, $r9);

        return;

     label08:
        r5 = null;

        goto label01;

     label09:
        $r9 = $r13.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label10:
        goto label06;

     label11:
        r3 := @caughtexception;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error setting up app properties", r3);

        goto label07;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
    boolean canSendWithUserApproval()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$6 $r1;
        io.fabric.sdk.android.services.settings.Settings $r2;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r1 = new com.crashlytics.android.core.CrashlyticsCore$6;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore$6: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r4 = virtualinvoke $r2.<io.fabric.sdk.android.services.settings.Settings: java.lang.Object withSettings(io.fabric.sdk.android.services.settings.Settings$SettingsAccess,java.lang.Object)>($r1, $r3);

        $r3 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    public void crash()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashTest $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = new com.crashlytics.android.core.CrashTest;

        specialinvoke $r1.<com.crashlytics.android.core.CrashTest: void <init>()>();

        virtualinvoke $r1.<com.crashlytics.android.core.CrashTest: void indexOutOfBounds()>();

        return;
    }
    boolean didPreviousInitializationComplete()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$4 $r1;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r1 = new com.crashlytics.android.core.CrashlyticsCore$4;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore$4: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r3 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.lang.Object executeSyncLoggingException(java.util.concurrent.Callable)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    protected volatile java.lang.Object doInBackground()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Void $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.Void doInBackground()>();

        return $r1;
    }
    protected java.lang.Void doInBackground()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r1;
        boolean z0, $z1;
        io.fabric.sdk.android.services.settings.Settings $r2;
        io.fabric.sdk.android.services.settings.SettingsData $r3;
        io.fabric.sdk.android.Logger $r4;
        io.fabric.sdk.android.services.settings.FeaturesSettingsData $r5;
        com.crashlytics.android.core.CreateReportSpiCall $r6;
        com.crashlytics.android.core.ReportUploader $r7;
        float $f0;
        java.lang.Exception r8, r9;
        java.lang.Throwable $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationStarted()>();

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void cleanInvalidTempFiles()>();

        z0 = 1;

     label01:
        $r2 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

     label02:
        if $r3 != null goto label05;

     label03:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Received null settings, skipping initialization!");

     label04:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label05:
        $r5 = $r3.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.FeaturesSettingsData featuresData>;

        $z1 = $r5.<io.fabric.sdk.android.services.settings.FeaturesSettingsData: boolean collectReports>;

     label06:
        if $z1 == 0 goto label11;

        z0 = 0;

     label07:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: boolean finalizeSessions()>();

        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CreateReportSpiCall getCreateReportSpiCall(io.fabric.sdk.android.services.settings.SettingsData)>($r3);

     label08:
        if $r6 == null goto label14;

     label09:
        $r7 = new com.crashlytics.android.core.ReportUploader;

     label10:
        specialinvoke $r7.<com.crashlytics.android.core.ReportUploader: void <init>(com.crashlytics.android.core.CreateReportSpiCall)>($r6);

        $f0 = r0.<com.crashlytics.android.core.CrashlyticsCore: float delay>;

        virtualinvoke $r7.<com.crashlytics.android.core.ReportUploader: void uploadReports(float)>($f0);

     label11:
        if z0 == 0 goto label13;

     label12:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crash reporting disabled.");

     label13:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label14:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Unable to create a call to upload reports.");

     label15:
        goto label11;

     label16:
        r8 := @caughtexception;

     label17:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error dealing with settings", r8);

     label18:
        goto label11;

     label19:
        r9 := @caughtexception;

     label20:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Problem encountered during Crashlytics initialization.", r9);

     label21:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label22:
        $r10 := @caughtexception;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        throw $r10;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }
    java.util.Map getAttributes()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.util.Map $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        return $r1;
    }
    java.lang.String getBuildId()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String buildId>;

        return r1;
    }
    com.crashlytics.android.core.BuildIdValidator getBuildIdValidator(java.lang.String, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1;
        boolean $z0;
        com.crashlytics.android.core.BuildIdValidator $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new com.crashlytics.android.core.BuildIdValidator;

        specialinvoke $r2.<com.crashlytics.android.core.BuildIdValidator: void <init>(java.lang.String,boolean)>($r1, $z0);

        return $r2;
    }
    com.crashlytics.android.core.CreateReportSpiCall getCreateReportSpiCall(io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r2;
        java.lang.String $r3, $r6;
        com.crashlytics.android.core.DefaultCreateReportSpiCall $r4;
        io.fabric.sdk.android.services.settings.AppSettingsData $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsData;

        if $r1 == null goto label1;

        $r4 = new com.crashlytics.android.core.DefaultCreateReportSpiCall;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getOverridenSpiEndpoint()>();

        $r5 = $r1.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.AppSettingsData appData>;

        $r6 = $r5.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String reportsUrl>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        specialinvoke $r4.<com.crashlytics.android.core.DefaultCreateReportSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory)>(r0, $r3, $r6, $r2);

        return $r4;

     label1:
        return null;
    }
    com.crashlytics.android.core.internal.models.SessionEventData getExternalCrashEventData()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;
        com.crashlytics.android.core.internal.CrashEventDataProvider $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider>;

        $r1 = interfaceinvoke $r2.<com.crashlytics.android.core.internal.CrashEventDataProvider: com.crashlytics.android.core.internal.models.SessionEventData getCrashEventData()>();

        return $r1;

     label1:
        return null;
    }
    com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler getHandler()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        return r1;
    }
    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "com.crashlytics.sdk.android.crashlytics-core";
    }
    java.lang.String getInstallerPackageName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String installerPackageName>;

        return r1;
    }
    java.lang.String getOverridenSpiEndpoint()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r1, "com.crashlytics.ApiEndpoint");

        return $r2;
    }
    java.lang.String getPackageName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String packageName>;

        return r1;
    }
    public com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;
        com.crashlytics.android.core.PinningInfoProvider r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        return r1;

     label1:
        return null;
    }
    java.io.File getSdkDirectory()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.io.File $r1;
        io.fabric.sdk.android.services.persistence.FileStoreImpl $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File sdkDir>;

        if $r1 != null goto label1;

        $r2 = new io.fabric.sdk.android.services.persistence.FileStoreImpl;

        specialinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

        $r1 = virtualinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File getFilesDir()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File sdkDir> = $r1;

     label1:
        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File sdkDir>;

        return $r1;
    }
    io.fabric.sdk.android.services.settings.SessionSettingsData getSessionSettingsData()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.settings.Settings $r1;
        io.fabric.sdk.android.services.settings.SettingsData $r2;
        io.fabric.sdk.android.services.settings.SessionSettingsData r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

        if $r2 != null goto label1;

        return null;

     label1:
        r3 = $r2.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.SessionSettingsData sessionData>;

        return r3;
    }
    java.lang.String getUserEmail()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        return r2;

     label1:
        return null;
    }
    java.lang.String getUserIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        return r2;

     label1:
        return null;
    }
    java.lang.String getUserName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        return r2;

     label1:
        return null;
    }
    public java.lang.String getVersion()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "2.3.5.79";
    }
    java.lang.String getVersionCode()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String versionCode>;

        return r1;
    }
    java.lang.String getVersionName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String versionName>;

        return r1;
    }
    boolean internalVerifyPinning(java.net.URL)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.net.URL $r1;
        io.fabric.sdk.android.services.network.HttpMethod $r2;
        com.crashlytics.android.core.PinningInfoProvider $r3;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r4;
        java.lang.String $r5;
        io.fabric.sdk.android.services.network.HttpRequest $r6;
        java.net.HttpURLConnection $r7;
        javax.net.ssl.HttpsURLConnection r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.net.URL;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        $r2 = <io.fabric.sdk.android.services.network.HttpMethod: io.fabric.sdk.android.services.network.HttpMethod GET>;

        $r5 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        $r6 = interfaceinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequestFactory: io.fabric.sdk.android.services.network.HttpRequest buildHttpRequest(io.fabric.sdk.android.services.network.HttpMethod,java.lang.String)>($r2, $r5);

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        r8 = (javax.net.ssl.HttpsURLConnection) $r7;

        virtualinvoke r8.<javax.net.ssl.HttpsURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        return 1;

     label1:
        return 0;
    }
    public void log(int, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.String $r1, $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void log(int,java.lang.String,java.lang.String,boolean)>($i0, $r1, $r2, 1);

        return;
    }
    public void log(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>(3, "CrashlyticsCore", $r1);

        return;
    }
    public void logException(java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Throwable $r1;
        boolean $z0;
        io.fabric.sdk.android.Logger $r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r3;
        java.lang.Thread $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging exceptions.");

        if $z0 == 0 goto label3;

        if $r1 != null goto label2;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void log(int,java.lang.String,java.lang.String)>(5, "CrashlyticsCore", "Crashlytics is ignoring a request to log a null exception.");

        return;

     label2:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void writeNonFatalException(java.lang.Thread,java.lang.Throwable)>($r4, $r1);

     label3:
        return;
    }
    void markInitializationComplete()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r1;
        com.crashlytics.android.core.CrashlyticsCore$3 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$3;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$3: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)>($r2);

        return;
    }
    void markInitializationStarted()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r1;
        com.crashlytics.android.core.CrashlyticsCore$2 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$2;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$2: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.lang.Object executeSyncLoggingException(java.util.concurrent.Callable)>($r2);

        return;
    }
    protected boolean onPreExecute()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean onPreExecute(android.content.Context)>($r1);

        return $z0;
    }
    boolean onPreExecute(android.content.Context)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1, $r10;
        com.crashlytics.android.core.SessionDataWriter r2;
        boolean $z0, $z1;
        io.fabric.sdk.android.services.common.ApiKey $r3;
        java.lang.String $r4, $r7;
        io.fabric.sdk.android.Logger $r5;
        java.lang.StringBuilder $r6;
        java.io.File $r8, $r9;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r11;
        java.lang.Thread$UncaughtExceptionHandler $r12;
        com.crashlytics.android.core.CrashlyticsListener $r13;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r14;
        io.fabric.sdk.android.services.common.IdManager $r15;
        java.lang.Exception r16, r19;
        com.crashlytics.android.core.CrashlyticsMissingDependencyException r17;
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException $r18;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.content.Context;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r3 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r3.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r4 = virtualinvoke $r3.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r1);

        if $r4 != null goto label02;

        return 0;

     label02:
        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing Crashlytics ");

        $r7 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersion()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void i(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        $r8 = new java.io.File;

        $r9 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File getSdkDirectory()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "initialization_marker");

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.io.File initializationMarkerFile> = $r8;

        $z0 = 0;

     label03:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setAndValidateKitProperties(android.content.Context,java.lang.String)>($r1, $r4);

     label04:
        r2 = new com.crashlytics.android.core.SessionDataWriter;

     label05:
        $r10 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String buildId>;

        $r7 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getPackageName()>();

        specialinvoke r2.<com.crashlytics.android.core.SessionDataWriter: void <init>(android.content.Context,java.lang.String,java.lang.String)>($r10, $r4, $r7);

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Installing exception handler...");

     label06:
        $r11 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

     label07:
        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        $r13 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener>;

        $r14 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper executorServiceWrapper>;

        $r15 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void <init>(java.lang.Thread$UncaughtExceptionHandler,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper,io.fabric.sdk.android.services.common.IdManager,com.crashlytics.android.core.SessionDataWriter,com.crashlytics.android.core.CrashlyticsCore)>($r12, $r13, $r14, $r15, r2, r0);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler> = $r11;

        $z1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean didPreviousInitializationComplete()>();

     label08:
        $z0 = $z1;

     label09:
        $r11 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        virtualinvoke $r11.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void openSession()>();

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r11);

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Successfully installed exception handler.");

     label10:
        if $z0 == 0 goto label19;

     label11:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>($r1);

     label12:
        if $z0 == 0 goto label19;

     label13:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void finishInitSynchronously()>();

     label14:
        return 0;

     label15:
        r16 := @caughtexception;

     label16:
        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "There was a problem installing the exception handler.", r16);

     label17:
        goto label10;

     label18:
        r17 := @caughtexception;

        $r18 = new io.fabric.sdk.android.services.concurrency.UnmetDependencyException;

        specialinvoke $r18.<io.fabric.sdk.android.services.concurrency.UnmetDependencyException: void <init>(java.lang.Throwable)>(r17);

        throw $r18;

     label19:
        return 1;

     label20:
        r19 := @caughtexception;

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was not started due to an exception during initialization", r19);

        return 0;

        catch com.crashlytics.android.core.CrashlyticsMissingDependencyException from label03 to label04 with label18;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch com.crashlytics.android.core.CrashlyticsMissingDependencyException from label11 to label12 with label18;
        catch com.crashlytics.android.core.CrashlyticsMissingDependencyException from label13 to label14 with label18;
        catch com.crashlytics.android.core.CrashlyticsMissingDependencyException from label16 to label17 with label18;
        catch java.lang.Exception from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
    }
    public void setBool(java.lang.String, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setDouble(java.lang.String, double)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        double $d0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    void setExternalCrashEventDataProvider(com.crashlytics.android.core.internal.CrashEventDataProvider)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.internal.CrashEventDataProvider $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: com.crashlytics.android.core.internal.CrashEventDataProvider;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider> = $r1;

        return;
    }
    public void setFloat(java.lang.String, float)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        float $f0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setInt(java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setListener(com.crashlytics.android.core.CrashlyticsListener)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        io.fabric.sdk.android.Logger $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsListener;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Use of setListener is deprecated.");

        if $r1 != null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = $r1;

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void setLong(java.lang.String, long)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        long $l0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    void setShouldSendUserReportsWithoutPrompting(boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl r1;
        android.content.SharedPreferences$Editor $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $z0 := @parameter0: boolean;

        r1 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

        specialinvoke r1.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

        $r2 = interfaceinvoke r1.<io.fabric.sdk.android.services.persistence.PreferenceStore: android.content.SharedPreferences$Editor edit()>();

        $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("always_send_reports_opt_in", $z0);

        interfaceinvoke r1.<io.fabric.sdk.android.services.persistence.PreferenceStore: boolean save(android.content.SharedPreferences$Editor)>($r2);

        return;
    }
    public void setString(java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r4;
        io.fabric.sdk.android.Logger $r5;
        java.util.concurrent.ConcurrentHashMap $r6;
        int $i0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        if $r1 != null goto label3;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        if $r3 == null goto label2;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isAppDebuggable(android.content.Context)>($r3);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Custom attribute key must not be null.");

        throw $r4;

     label2:
        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Attempting to set custom attribute with null key, ignoring.", null);

        return;

     label3:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: int size()>();

        if $i0 < 64 goto label4;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label7;

     label4:
        if $r2 != null goto label6;

        $r2 = "";

     label5:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void cacheKeyData(java.util.Map)>($r6);

        return;

     label6:
        $r2 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r2);

        goto label5;

     label7:
        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Exceeded maximum number of custom attributes (64)");

        return;
    }
    public void setUserEmail(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }
    public void setUserIdentifier(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }
    public void setUserName(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler handler>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }
    boolean shouldPromptUserBeforeSendingCrashReports()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$5 $r1;
        io.fabric.sdk.android.services.settings.Settings $r2;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r1 = new com.crashlytics.android.core.CrashlyticsCore$5;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore$5: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r4 = virtualinvoke $r2.<io.fabric.sdk.android.services.settings.Settings: java.lang.Object withSettings(io.fabric.sdk.android.services.settings.Settings$SettingsAccess,java.lang.Object)>($r1, $r3);

        $r3 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    boolean shouldSendReportsWithoutPrompting()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl r1;
        android.content.SharedPreferences $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

        specialinvoke r1.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

        $r2 = interfaceinvoke r1.<io.fabric.sdk.android.services.persistence.PreferenceStore: android.content.SharedPreferences get()>();

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("always_send_reports_opt_in", 0);

        return $z0;
    }
    public boolean verifyPinning(java.net.URL)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.net.URL $r1;
        java.lang.Exception r2;
        boolean $z0;
        io.fabric.sdk.android.Logger $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.net.URL;

     label1:
        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean internalVerifyPinning(java.net.URL)>($r1);

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Could not verify SSL pinning", r2);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
