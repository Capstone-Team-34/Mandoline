com.github.mikephil.charting.utils.PointD extends java.lang.Object
public double x
public double y
    public void <init>(double, double)
    {
        com.github.mikephil.charting.utils.PointD r0;
        double $d0, $d1;

        r0 := @this: com.github.mikephil.charting.utils.PointD;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.utils.PointD: double x> = $d0;

        r0.<com.github.mikephil.charting.utils.PointD: double y> = $d1;

        return;
    }
    public java.lang.String toString()
    {
        com.github.mikephil.charting.utils.PointD r0;
        java.lang.StringBuilder $r1;
        double $d0;
        java.lang.String $r2;

        r0 := @this: com.github.mikephil.charting.utils.PointD;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PointD, x: ");

        $d0 = r0.<com.github.mikephil.charting.utils.PointD: double x>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y: ");

        $d0 = r0.<com.github.mikephil.charting.utils.PointD: double y>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
