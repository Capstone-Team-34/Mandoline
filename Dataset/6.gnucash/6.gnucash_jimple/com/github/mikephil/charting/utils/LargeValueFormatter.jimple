com.github.mikephil.charting.utils.LargeValueFormatter extends java.lang.Object implements com.github.mikephil.charting.utils.ValueFormatter
private static final int MAX_LENGTH
private static final java.lang.String[] SUFFIX
private java.text.DecimalFormat mFormat
private java.lang.String mText
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "";

        $r0[1] = "k";

        $r0[2] = "m";

        $r0[3] = "b";

        $r0[4] = "t";

        <com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String[] SUFFIX> = $r0;

        return;
    }
    public void <init>()
    {
        com.github.mikephil.charting.utils.LargeValueFormatter r0;
        java.text.DecimalFormat $r1;

        r0 := @this: com.github.mikephil.charting.utils.LargeValueFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String mText> = "";

        $r1 = new java.text.DecimalFormat;

        specialinvoke $r1.<java.text.DecimalFormat: void <init>(java.lang.String)>("###E0");

        r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.text.DecimalFormat mFormat> = $r1;

        return;
    }
    public void <init>(java.lang.String)
    {
        com.github.mikephil.charting.utils.LargeValueFormatter r0;
        java.lang.String $r1;

        r0 := @this: com.github.mikephil.charting.utils.LargeValueFormatter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.github.mikephil.charting.utils.LargeValueFormatter: void <init>()>();

        r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String mText> = $r1;

        return;
    }
    private java.lang.String makePretty(double)
    {
        com.github.mikephil.charting.utils.LargeValueFormatter r0;
        double $d0;
        java.text.DecimalFormat $r1;
        java.lang.String $r2, $r4;
        java.lang.String[] $r3;
        int $i0;
        char $c1;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: com.github.mikephil.charting.utils.LargeValueFormatter;

        $d0 := @parameter0: double;

        $r1 = r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.text.DecimalFormat mFormat>;

        $r2 = virtualinvoke $r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r3 = <com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String[] SUFFIX>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i0 = staticinvoke <java.lang.Character: int getNumericValue(char)>($c1);

        $i0 = $i0 / 3;

        $r4 = $r3[$i0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("E[0-9]", $r4);

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 > 4 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("[0-9]+\\.[a-z]");

        if $z0 == 0 goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -2;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label3:
        return $r2;
    }
    public java.lang.String getFormattedValue(float)
    {
        com.github.mikephil.charting.utils.LargeValueFormatter r0;
        float $f0;
        double $d0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.github.mikephil.charting.utils.LargeValueFormatter;

        $f0 := @parameter0: float;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $d0 = (double) $f0;

        $r2 = specialinvoke r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String makePretty(double)>($d0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = r0.<com.github.mikephil.charting.utils.LargeValueFormatter: java.lang.String mText>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
