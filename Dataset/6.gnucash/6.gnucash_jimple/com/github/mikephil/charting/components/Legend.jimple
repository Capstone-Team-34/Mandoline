com.github.mikephil.charting.components.Legend extends com.github.mikephil.charting.components.ComponentBase
private java.lang.Boolean[] mCalculatedLabelBreakPoints
private com.github.mikephil.charting.utils.FSize[] mCalculatedLabelSizes
private com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes
private int[] mColors
private com.github.mikephil.charting.components.Legend$LegendDirection mDirection
private int[] mExtraColors
private java.lang.String[] mExtraLabels
private float mFormSize
private float mFormToTextSpace
private boolean mIsLegendCustom
private java.lang.String[] mLabels
private float mMaxSizePercent
public float mNeededHeight
public float mNeededWidth
private com.github.mikephil.charting.components.Legend$LegendPosition mPosition
private com.github.mikephil.charting.components.Legend$LegendForm mShape
private float mStackSpace
public float mTextHeightMax
public float mTextWidthMax
private boolean mWordWrapEnabled
private float mXEntrySpace
private float mYEntrySpace
    public void <init>()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendPosition $r1;
        com.github.mikephil.charting.components.Legend$LegendDirection $r2;
        com.github.mikephil.charting.components.Legend$LegendForm $r3;
        com.github.mikephil.charting.utils.FSize[] $r4;
        java.lang.Boolean[] $r5;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        specialinvoke r0.<com.github.mikephil.charting.components.ComponentBase: void <init>()>();

        r0.<com.github.mikephil.charting.components.Legend: boolean mIsLegendCustom> = 0;

        $r1 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_LEFT>;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition> = $r1;

        $r2 = <com.github.mikephil.charting.components.Legend$LegendDirection: com.github.mikephil.charting.components.Legend$LegendDirection LEFT_TO_RIGHT>;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendDirection mDirection> = $r2;

        $r3 = <com.github.mikephil.charting.components.Legend$LegendForm: com.github.mikephil.charting.components.Legend$LegendForm SQUARE>;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendForm mShape> = $r3;

        r0.<com.github.mikephil.charting.components.Legend: float mFormSize> = 8.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace> = 6.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace> = 0.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace> = 5.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mStackSpace> = 3.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mMaxSizePercent> = 0.95F;

        r0.<com.github.mikephil.charting.components.Legend: float mNeededWidth> = 0.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mNeededHeight> = 0.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mTextHeightMax> = 0.0F;

        r0.<com.github.mikephil.charting.components.Legend: float mTextWidthMax> = 0.0F;

        r0.<com.github.mikephil.charting.components.Legend: boolean mWordWrapEnabled> = 0;

        $r4 = newarray (com.github.mikephil.charting.utils.FSize)[0];

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLabelSizes> = $r4;

        $r5 = newarray (java.lang.Boolean)[0];

        r0.<com.github.mikephil.charting.components.Legend: java.lang.Boolean[] mCalculatedLabelBreakPoints> = $r5;

        $r4 = newarray (com.github.mikephil.charting.utils.FSize)[0];

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes> = $r4;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(8.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mFormSize> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(6.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(0.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mTextSize> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(3.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mStackSpace> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mXOffset> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(7.0F);

        r0.<com.github.mikephil.charting.components.Legend: float mYOffset> = $f0;

        return;
    }
    public void <init>(java.util.List, java.util.List)
    {
        com.github.mikephil.charting.components.Legend r0;
        java.util.List r1, r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1;
        int[] $r4;
        java.lang.String[] $r5;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.github.mikephil.charting.components.Legend: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array or labels array is NULL");

        throw $r3;

     label2:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array and labels array need to be of same size");

        throw $r3;

     label3:
        $r4 = staticinvoke <com.github.mikephil.charting.utils.Utils: int[] convertIntegers(java.util.List)>(r1);

        r0.<com.github.mikephil.charting.components.Legend: int[] mColors> = $r4;

        $r5 = staticinvoke <com.github.mikephil.charting.utils.Utils: java.lang.String[] convertStrings(java.util.List)>(r2);

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels> = $r5;

        return;
    }
    public void <init>(int[], java.lang.String[])
    {
        com.github.mikephil.charting.components.Legend r0;
        int[] $r1;
        java.lang.String[] $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<com.github.mikephil.charting.components.Legend: void <init>()>();

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array or labels array is NULL");

        throw $r3;

     label2:
        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array and labels array need to be of same size");

        throw $r3;

     label3:
        r0.<com.github.mikephil.charting.components.Legend: int[] mColors> = $r1;

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels> = $r2;

        return;
    }
    public void calculateDimensions(android.graphics.Paint, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.components.Legend r0;
        android.graphics.Paint $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        java.util.ArrayList r3, r4, r5;
        int i0, i1, i2, $i3;
        float f0, $f1, $f2, f3, f4, f5, $f6, $f7, $f8;
        com.github.mikephil.charting.components.Legend$LegendPosition $r6, $r7;
        java.lang.String[] $r8;
        int[] $r9;
        boolean z0;
        java.lang.Boolean $r10;
        java.lang.String $r11;
        com.github.mikephil.charting.utils.FSize $r12;
        java.lang.Object $r13;
        byte $b4;
        com.github.mikephil.charting.utils.FSize[] $r14;
        java.lang.Object[] $r15;
        java.lang.Boolean[] $r16;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: android.graphics.Paint;

        $r2 := @parameter1: com.github.mikephil.charting.utils.ViewPortHandler;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART>;

        if $r6 == $r7 goto label01;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART_CENTER>;

        if $r6 == $r7 goto label01;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART>;

        if $r6 == $r7 goto label01;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART_CENTER>;

        if $r6 == $r7 goto label01;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition PIECHART_CENTER>;

        if $r6 != $r7 goto label02;

     label01:
        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryWidth(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mNeededWidth> = f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getFullHeight(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mNeededHeight> = f0;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mNeededWidth>;

        r0.<com.github.mikephil.charting.components.Legend: float mTextWidthMax> = f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryHeight(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mTextHeightMax> = f0;

        return;

     label02:
        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_LEFT>;

        if $r6 == $r7 goto label03;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_RIGHT>;

        if $r6 == $r7 goto label03;

        $r6 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        $r7 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_CENTER>;

        if $r6 != $r7 goto label28;

     label03:
        $r8 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        i0 = lengthof $r8;

        $f1 = staticinvoke <com.github.mikephil.charting.utils.Utils: float getLineHeight(android.graphics.Paint)>($r1);

        f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float getLineSpacing(android.graphics.Paint)>($r1);

        $f2 = r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace>;

        f0 = f0 + $f2;

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float contentWidth()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(i0);

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>(i0);

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        f3 = 0.0F;

        f4 = 0.0F;

        f5 = 0.0F;

        i1 = -1;

        i2 = 0;

     label04:
        if i2 >= i0 goto label25;

        $r9 = r0.<com.github.mikephil.charting.components.Legend: int[] mColors>;

        $i3 = $r9[i2];

        if $i3 == -2 goto label15;

        z0 = 1;

     label05:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        if i1 != -1 goto label16;

        f5 = 0.0F;

     label06:
        $r8 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r11 = $r8[i2];

        if $r11 == null goto label18;

        $r8 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r11 = $r8[i2];

        $r12 = staticinvoke <com.github.mikephil.charting.utils.Utils: com.github.mikephil.charting.utils.FSize calcTextSize(android.graphics.Paint,java.lang.String)>($r1, $r11);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        if z0 == 0 goto label17;

        $f6 = r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace>;

        $f7 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

        $f6 = $f6 + $f7;

     label07:
        f5 = f5 + $f6;

        $r13 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r12 = (com.github.mikephil.charting.utils.FSize) $r13;

        $f6 = $r12.<com.github.mikephil.charting.utils.FSize: float width>;

        f5 = f5 + $f6;

     label08:
        $r8 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r11 = $r8[i2];

        if $r11 != null goto label09;

        $i3 = i0 + -1;

        if i2 != $i3 goto label13;

     label09:
        $b4 = f4 cmpl 0.0F;

        if $b4 != 0 goto label21;

        $f6 = 0.0F;

     label10:
        z0 = r0.<com.github.mikephil.charting.components.Legend: boolean mWordWrapEnabled>;

        if z0 == 0 goto label11;

        $b4 = f4 cmpl 0.0F;

        if $b4 == 0 goto label11;

        $f7 = $f2 - f4;

        $f8 = $f6 + f5;

        $b4 = $f7 cmpl $f8;

        if $b4 < 0 goto label22;

     label11:
        $f6 = $f6 + f5;

        f4 = f4 + $f6;

     label12:
        $i3 = i0 + -1;

        if i2 != $i3 goto label13;

        $r12 = new com.github.mikephil.charting.utils.FSize;

        specialinvoke $r12.<com.github.mikephil.charting.utils.FSize: void <init>(float,float)>(f4, $f1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f3, f4);

     label13:
        $r8 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r11 = $r8[i2];

        if $r11 == null goto label14;

        i1 = -1;

     label14:
        i2 = i2 + 1;

        goto label04;

     label15:
        z0 = 0;

        goto label05;

     label16:
        $f6 = r0.<com.github.mikephil.charting.components.Legend: float mStackSpace>;

        f5 = f5 + $f6;

        goto label06;

     label17:
        $f6 = 0.0F;

        goto label07;

     label18:
        $r12 = new com.github.mikephil.charting.utils.FSize;

        specialinvoke $r12.<com.github.mikephil.charting.utils.FSize: void <init>(float,float)>(0.0F, 0.0F);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        if z0 == 0 goto label20;

        $f6 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

     label19:
        f5 = f5 + $f6;

        if i1 != -1 goto label08;

        i1 = i2;

        goto label08;

     label20:
        $f6 = 0.0F;

        goto label19;

     label21:
        $f6 = r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace>;

        goto label10;

     label22:
        $r12 = new com.github.mikephil.charting.utils.FSize;

        specialinvoke $r12.<com.github.mikephil.charting.utils.FSize: void <init>(float,float)>(f4, $f1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f3, f4);

        if i1 <= -1 goto label24;

        $i3 = i1;

     label23:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i3, $r10);

        f4 = f5;

        goto label12;

     label24:
        $i3 = i2;

        goto label23;

     label25:
        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r14 = newarray (com.github.mikephil.charting.utils.FSize)[i0];

        $r15 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r14 = (com.github.mikephil.charting.utils.FSize[]) $r15;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLabelSizes> = $r14;

        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r16 = newarray (java.lang.Boolean)[i0];

        $r15 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r16 = (java.lang.Boolean[]) $r15;

        r0.<com.github.mikephil.charting.components.Legend: java.lang.Boolean[] mCalculatedLabelBreakPoints> = $r16;

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $r14 = newarray (com.github.mikephil.charting.utils.FSize)[i0];

        $r15 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r14 = (com.github.mikephil.charting.utils.FSize[]) $r15;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes> = $r14;

        $f2 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryWidth(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mTextWidthMax> = $f2;

        $f2 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryHeight(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mTextHeightMax> = $f2;

        r0.<com.github.mikephil.charting.components.Legend: float mNeededWidth> = f3;

        $r14 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes>;

        i0 = lengthof $r14;

        $f2 = (float) i0;

        $f1 = $f1 * $f2;

        $r14 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes>;

        i0 = lengthof $r14;

        if i0 != 0 goto label27;

        i0 = 0;

     label26:
        $f2 = (float) i0;

        f0 = $f2 * f0;

        f0 = f0 + $f1;

        r0.<com.github.mikephil.charting.components.Legend: float mNeededHeight> = f0;

        return;

     label27:
        $r14 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes>;

        i0 = lengthof $r14;

        i0 = i0 + -1;

        goto label26;

     label28:
        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getFullWidth(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mNeededWidth> = f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryHeight(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mNeededHeight> = f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.components.Legend: float getMaximumEntryWidth(android.graphics.Paint)>($r1);

        r0.<com.github.mikephil.charting.components.Legend: float mTextWidthMax> = f0;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mNeededHeight>;

        r0.<com.github.mikephil.charting.components.Legend: float mTextHeightMax> = f0;

        return;
    }
    public java.lang.Boolean[] getCalculatedLabelBreakPoints()
    {
        com.github.mikephil.charting.components.Legend r0;
        java.lang.Boolean[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: java.lang.Boolean[] mCalculatedLabelBreakPoints>;

        return r1;
    }
    public com.github.mikephil.charting.utils.FSize[] getCalculatedLabelSizes()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.utils.FSize[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLabelSizes>;

        return r1;
    }
    public com.github.mikephil.charting.utils.FSize[] getCalculatedLineSizes()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.utils.FSize[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.utils.FSize[] mCalculatedLineSizes>;

        return r1;
    }
    public int[] getColors()
    {
        com.github.mikephil.charting.components.Legend r0;
        int[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: int[] mColors>;

        return r1;
    }
    public com.github.mikephil.charting.components.Legend$LegendDirection getDirection()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendDirection r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendDirection mDirection>;

        return r1;
    }
    public int[] getExtraColors()
    {
        com.github.mikephil.charting.components.Legend r0;
        int[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: int[] mExtraColors>;

        return r1;
    }
    public java.lang.String[] getExtraLabels()
    {
        com.github.mikephil.charting.components.Legend r0;
        java.lang.String[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mExtraLabels>;

        return r1;
    }
    public com.github.mikephil.charting.components.Legend$LegendForm getForm()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendForm r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendForm mShape>;

        return r1;
    }
    public float getFormSize()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

        return f0;
    }
    public float getFormToTextSpace()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace>;

        return f0;
    }
    public float getFullHeight(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.Legend r0;
        android.graphics.Paint $r1;
        int $i0, i1;
        float f0, $f1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: android.graphics.Paint;

        f0 = 0.0F;

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r1, $r3);

        $f1 = (float) $i0;

        f0 = f0 + $f1;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        if i1 >= $i0 goto label2;

        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace>;

        f0 = f0 + $f1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return f0;
    }
    public float getFullWidth(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.Legend r0;
        android.graphics.Paint $r1;
        int $i0, i1;
        float f0, $f1, $f2;
        java.lang.String[] $r2;
        java.lang.String $r3;
        int[] $r4;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: android.graphics.Paint;

        f0 = 0.0F;

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label5;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        if $r3 == null goto label4;

        $r4 = r0.<com.github.mikephil.charting.components.Legend: int[] mColors>;

        $i0 = $r4[i1];

        if $i0 == -2 goto label2;

        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

        $f2 = r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace>;

        $f1 = $f1 + $f2;

        f0 = f0 + $f1;

     label2:
        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r1, $r3);

        $f1 = (float) $i0;

        f0 = f0 + $f1;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        if i1 >= $i0 goto label3;

        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace>;

        f0 = f0 + $f1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

        f0 = f0 + $f1;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        if i1 >= $i0 goto label3;

        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mStackSpace>;

        f0 = f0 + $f1;

        goto label3;

     label5:
        return f0;
    }
    public java.lang.String getLabel(int)
    {
        com.github.mikephil.charting.components.Legend r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String[] getLabels()
    {
        com.github.mikephil.charting.components.Legend r0;
        java.lang.String[] r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        return r1;
    }
    public float getMaxSizePercent()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mMaxSizePercent>;

        return f0;
    }
    public float getMaximumEntryHeight(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.Legend r0;
        android.graphics.Paint $r1;
        float f0, f1;
        int $i0, i1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: android.graphics.Paint;

        f1 = 0.0F;

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r1, $r3);

        f0 = (float) $i0;

        $b2 = f0 cmpl f1;

        if $b2 <= 0 goto label2;

        f1 = f0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return f1;
    }
    public float getMaximumEntryWidth(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.Legend r0;
        android.graphics.Paint $r1;
        float f0, $f1;
        int $i0, i1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: android.graphics.Paint;

        $f1 = 0.0F;

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r2 = r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels>;

        $r3 = $r2[i1];

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r1, $r3);

        f0 = (float) $i0;

        $b2 = f0 cmpl $f1;

        if $b2 <= 0 goto label2;

        $f1 = f0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        f0 = r0.<com.github.mikephil.charting.components.Legend: float mFormSize>;

        f0 = f0 + $f1;

        $f1 = r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace>;

        $f1 = f0 + $f1;

        return $f1;
    }
    public com.github.mikephil.charting.components.Legend$LegendPosition getPosition()
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendPosition r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 = r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition>;

        return r1;
    }
    public float getStackSpace()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mStackSpace>;

        return f0;
    }
    public float getXEntrySpace()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace>;

        return f0;
    }
    public float getYEntrySpace()
    {
        com.github.mikephil.charting.components.Legend r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        f0 = r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace>;

        return f0;
    }
    public boolean isLegendCustom()
    {
        com.github.mikephil.charting.components.Legend r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        z0 = r0.<com.github.mikephil.charting.components.Legend: boolean mIsLegendCustom>;

        return z0;
    }
    public boolean isWordWrapEnabled()
    {
        com.github.mikephil.charting.components.Legend r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        z0 = r0.<com.github.mikephil.charting.components.Legend: boolean mWordWrapEnabled>;

        return z0;
    }
    public void resetCustom()
    {
        com.github.mikephil.charting.components.Legend r0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r0.<com.github.mikephil.charting.components.Legend: boolean mIsLegendCustom> = 0;

        return;
    }
    public void setComputedColors(java.util.List)
    {
        com.github.mikephil.charting.components.Legend r0;
        java.util.List r1;
        int[] $r2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <com.github.mikephil.charting.utils.Utils: int[] convertIntegers(java.util.List)>(r1);

        r0.<com.github.mikephil.charting.components.Legend: int[] mColors> = $r2;

        return;
    }
    public void setComputedLabels(java.util.List)
    {
        com.github.mikephil.charting.components.Legend r0;
        java.util.List r1;
        java.lang.String[] $r2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <com.github.mikephil.charting.utils.Utils: java.lang.String[] convertStrings(java.util.List)>(r1);

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels> = $r2;

        return;
    }
    public void setCustom(java.util.List, java.util.List)
    {
        com.github.mikephil.charting.components.Legend r0;
        java.util.List r1, r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        int[] $r4;
        java.lang.String[] $r5;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array and labels array need to be of same size");

        throw $r3;

     label1:
        $r4 = staticinvoke <com.github.mikephil.charting.utils.Utils: int[] convertIntegers(java.util.List)>(r1);

        r0.<com.github.mikephil.charting.components.Legend: int[] mColors> = $r4;

        $r5 = staticinvoke <com.github.mikephil.charting.utils.Utils: java.lang.String[] convertStrings(java.util.List)>(r2);

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels> = $r5;

        r0.<com.github.mikephil.charting.components.Legend: boolean mIsLegendCustom> = 1;

        return;
    }
    public void setCustom(int[], java.lang.String[])
    {
        com.github.mikephil.charting.components.Legend r0;
        int[] $r1;
        java.lang.String[] $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.String[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("colors array and labels array need to be of same size");

        throw $r3;

     label1:
        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mLabels> = $r2;

        r0.<com.github.mikephil.charting.components.Legend: int[] mColors> = $r1;

        r0.<com.github.mikephil.charting.components.Legend: boolean mIsLegendCustom> = 1;

        return;
    }
    public void setDirection(com.github.mikephil.charting.components.Legend$LegendDirection)
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendDirection $r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: com.github.mikephil.charting.components.Legend$LegendDirection;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendDirection mDirection> = $r1;

        return;
    }
    public void setExtra(java.util.List, java.util.List)
    {
        com.github.mikephil.charting.components.Legend r0;
        java.util.List r1, r2;
        int[] $r3;
        java.lang.String[] $r4;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r3 = staticinvoke <com.github.mikephil.charting.utils.Utils: int[] convertIntegers(java.util.List)>(r1);

        r0.<com.github.mikephil.charting.components.Legend: int[] mExtraColors> = $r3;

        $r4 = staticinvoke <com.github.mikephil.charting.utils.Utils: java.lang.String[] convertStrings(java.util.List)>(r2);

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mExtraLabels> = $r4;

        return;
    }
    public void setExtra(int[], java.lang.String[])
    {
        com.github.mikephil.charting.components.Legend r0;
        int[] $r1;
        java.lang.String[] $r2;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.String[];

        r0.<com.github.mikephil.charting.components.Legend: int[] mExtraColors> = $r1;

        r0.<com.github.mikephil.charting.components.Legend: java.lang.String[] mExtraLabels> = $r2;

        return;
    }
    public void setForm(com.github.mikephil.charting.components.Legend$LegendForm)
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendForm $r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: com.github.mikephil.charting.components.Legend$LegendForm;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendForm mShape> = $r1;

        return;
    }
    public void setFormSize(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.Legend: float mFormSize> = $f0;

        return;
    }
    public void setFormToTextSpace(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.Legend: float mFormToTextSpace> = $f0;

        return;
    }
    public void setMaxSizePercent(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.Legend: float mMaxSizePercent> = $f0;

        return;
    }
    public void setPosition(com.github.mikephil.charting.components.Legend$LegendPosition)
    {
        com.github.mikephil.charting.components.Legend r0;
        com.github.mikephil.charting.components.Legend$LegendPosition $r1;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $r1 := @parameter0: com.github.mikephil.charting.components.Legend$LegendPosition;

        r0.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition mPosition> = $r1;

        return;
    }
    public void setStackSpace(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.Legend: float mStackSpace> = $f0;

        return;
    }
    public void setWordWrapEnabled(boolean)
    {
        com.github.mikephil.charting.components.Legend r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.Legend: boolean mWordWrapEnabled> = $z0;

        return;
    }
    public void setXEntrySpace(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.Legend: float mXEntrySpace> = $f0;

        return;
    }
    public void setYEntrySpace(float)
    {
        com.github.mikephil.charting.components.Legend r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.Legend;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.Legend: float mYEntrySpace> = $f0;

        return;
    }
