com.github.mikephil.charting.components.MarkerView extends android.widget.RelativeLayout
    public void <init>(android.content.Context, int)
    {
        com.github.mikephil.charting.components.MarkerView r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.MarkerView;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        specialinvoke r0.<com.github.mikephil.charting.components.MarkerView: void setupLayoutResource(int)>($i0);

        return;
    }
    private void setupLayoutResource(int)
    {
        com.github.mikephil.charting.components.MarkerView r0;
        int $i0, $i1;
        android.content.Context $r1;
        android.view.LayoutInflater $r2;
        android.view.View $r3;
        android.widget.RelativeLayout$LayoutParams $r4;

        r0 := @this: com.github.mikephil.charting.components.MarkerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.components.MarkerView: android.content.Context getContext()>();

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, r0);

        $r4 = new android.widget.RelativeLayout$LayoutParams;

        specialinvoke $r4.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke $r3.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();

        $i1 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        virtualinvoke $r3.<android.view.View: void layout(int,int,int,int)>(0, 0, $i0, $i1);

        return;
    }
    public void draw(android.graphics.Canvas, float, float)
    {
        com.github.mikephil.charting.components.MarkerView r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.MarkerView;

        $r1 := @parameter0: android.graphics.Canvas;

        $f1 := @parameter1: float;

        $f0 := @parameter2: float;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.components.MarkerView: int getXOffset()>();

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.components.MarkerView: int getYOffset()>();

        $f2 = (float) $i0;

        $f0 = $f0 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        virtualinvoke r0.<com.github.mikephil.charting.components.MarkerView: void draw(android.graphics.Canvas)>($r1);

        $f1 = neg $f1;

        $f0 = neg $f0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        return;
    }
public abstract int getXOffset() { 
// no body
} 
public abstract int getYOffset() { 
// no body
} 
public abstract void refreshContent(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.highlight.Highlight) { 
// no body
} 
