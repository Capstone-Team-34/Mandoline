com.github.mikephil.charting.buffer.CandleShadowBuffer extends com.github.mikephil.charting.buffer.AbstractBuffer
    public void <init>(int)
    {
        com.github.mikephil.charting.buffer.CandleShadowBuffer r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.CandleShadowBuffer;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.github.mikephil.charting.buffer.AbstractBuffer: void <init>(int)>($i0);

        return;
    }
    private void addShadow(float, float, float, float)
    {
        com.github.mikephil.charting.buffer.CandleShadowBuffer r0;
        float $f0, $f1, $f2, $f3;
        float[] $r1;
        int $i0, $i1;

        r0 := @this: com.github.mikephil.charting.buffer.CandleShadowBuffer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index> = $i1;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index> = $i1;

        $r1[$i0] = $f1;

        $r1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index> = $i1;

        $r1[$i0] = $f2;

        $r1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int index> = $i1;

        $r1[$i0] = $f3;

        return;
    }
    public void feed(java.util.List)
    {
        com.github.mikephil.charting.buffer.CandleShadowBuffer r0;
        java.util.List r1;
        int i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0;
        java.lang.Object $r2;
        com.github.mikephil.charting.data.CandleEntry r3;

        r0 := @this: com.github.mikephil.charting.buffer.CandleShadowBuffer;

        r1 := @parameter0: java.util.List;

        i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int mTo>;

        $i1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int mFrom>;

        i0 = i0 - $i1;

        $f1 = (float) i0;

        $f2 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float phaseX>;

        $f1 = $f1 * $f2;

        i0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int mFrom>;

        $f2 = (float) i0;

        $f1 = $f1 + $f2;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d0;

        $i1 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: int mFrom>;

     label1:
        if $i1 >= i0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        r3 = (com.github.mikephil.charting.data.CandleEntry) $r2;

        $i2 = virtualinvoke r3.<com.github.mikephil.charting.data.CandleEntry: int getXIndex()>();

        $f1 = (float) $i2;

        $f2 = virtualinvoke r3.<com.github.mikephil.charting.data.CandleEntry: float getHigh()>();

        $f3 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float phaseY>;

        $f2 = $f2 * $f3;

        $i2 = virtualinvoke r3.<com.github.mikephil.charting.data.CandleEntry: int getXIndex()>();

        $f3 = (float) $i2;

        $f4 = virtualinvoke r3.<com.github.mikephil.charting.data.CandleEntry: float getLow()>();

        $f0 = r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: float phaseY>;

        $f0 = $f4 * $f0;

        specialinvoke r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: void addShadow(float,float,float,float)>($f1, $f2, $f3, $f0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.github.mikephil.charting.buffer.CandleShadowBuffer: void reset()>();

        return;
    }
