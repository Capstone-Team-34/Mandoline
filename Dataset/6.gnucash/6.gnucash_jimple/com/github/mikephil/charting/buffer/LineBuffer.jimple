com.github.mikephil.charting.buffer.LineBuffer extends com.github.mikephil.charting.buffer.AbstractBuffer
    public void <init>(int)
    {
        com.github.mikephil.charting.buffer.LineBuffer r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.LineBuffer;

        $i0 := @parameter0: int;

        if $i0 >= 4 goto label1;

        $i0 = 4;

     label1:
        specialinvoke r0.<com.github.mikephil.charting.buffer.AbstractBuffer: void <init>(int)>($i0);

        return;
    }
    public void feed(java.util.List)
    {
        com.github.mikephil.charting.buffer.LineBuffer r0;
        java.util.List r1;
        int i0, i1, $i2;
        java.lang.Object $r2;
        com.github.mikephil.charting.data.Entry $r3;
        float $f0, $f1, $f2;
        double $d0;

        r0 := @this: com.github.mikephil.charting.buffer.LineBuffer;

        r1 := @parameter0: java.util.List;

        i1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mFrom>;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (com.github.mikephil.charting.data.Entry) $r2;

        i1 = virtualinvoke $r3.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f0 = (float) i1;

        i1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mFrom>;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (com.github.mikephil.charting.data.Entry) $r2;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f2 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float phaseY>;

        $f1 = $f1 * $f2;

        virtualinvoke r0.<com.github.mikephil.charting.buffer.LineBuffer: void moveTo(float,float)>($f0, $f1);

        i1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mTo>;

        i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mFrom>;

        i1 = i1 - i0;

        $f0 = (float) i1;

        $f1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float phaseX>;

        $f0 = $f0 * $f1;

        i1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mFrom>;

        $f1 = (float) i1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i1 = (int) $d0;

        i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int mFrom>;

        i0 = i0 + 1;

     label1:
        if i0 >= i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.github.mikephil.charting.data.Entry) $r2;

        $i2 = virtualinvoke $r3.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f0 = (float) $i2;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f2 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float phaseY>;

        $f1 = $f1 * $f2;

        virtualinvoke r0.<com.github.mikephil.charting.buffer.LineBuffer: void lineTo(float,float)>($f0, $f1);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.github.mikephil.charting.buffer.LineBuffer: void reset()>();

        return;
    }
    public void lineTo(float, float)
    {
        com.github.mikephil.charting.buffer.LineBuffer r0;
        float $f0, $f1, f2, f3;
        int $i0, $i1;
        float[] $r1;

        r0 := @this: com.github.mikephil.charting.buffer.LineBuffer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        if $i0 != 2 goto label1;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f1;

        return;

     label1:
        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i0 = $i0 + -2;

        f2 = $r1[$i0];

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i0 = $i0 + -1;

        f3 = $r1[$i0];

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = f2;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = f3;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f1;

        return;
    }
    public void moveTo(float, float)
    {
        com.github.mikephil.charting.buffer.LineBuffer r0;
        float $f0, $f1;
        int $i0, $i1;
        float[] $r1;

        r0 := @this: com.github.mikephil.charting.buffer.LineBuffer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.LineBuffer: int index> = $i1;

        $r1[$i0] = $f1;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.LineBuffer: int index>;

        $i0 = $i0 + 1;

        $r1[$i0] = $f1;

        return;
    }
