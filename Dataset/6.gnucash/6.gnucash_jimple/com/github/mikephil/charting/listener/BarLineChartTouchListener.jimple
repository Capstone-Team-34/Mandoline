com.github.mikephil.charting.listener.BarLineChartTouchListener extends com.github.mikephil.charting.listener.ChartTouchListener
private com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch
private android.graphics.PointF mDecelerationCurrentPoint
private long mDecelerationLastTime
private android.graphics.PointF mDecelerationVelocity
private android.graphics.Matrix mMatrix
private float mSavedDist
private android.graphics.Matrix mSavedMatrix
private float mSavedXDist
private float mSavedYDist
private android.graphics.PointF mTouchPointCenter
private android.graphics.PointF mTouchStartPoint
private android.view.VelocityTracker mVelocityTracker
    public void <init>(com.github.mikephil.charting.charts.BarLineChartBase, android.graphics.Matrix)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        com.github.mikephil.charting.charts.BarLineChartBase r1;
        android.graphics.Matrix $r2, $r3;
        android.graphics.PointF $r4;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        r1 := @parameter0: com.github.mikephil.charting.charts.BarLineChartBase;

        $r2 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: void <init>(com.github.mikephil.charting.charts.Chart)>(r1);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix> = $r3;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix> = $r3;

        $r4 = new android.graphics.PointF;

        specialinvoke $r4.<android.graphics.PointF: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint> = $r4;

        $r4 = new android.graphics.PointF;

        specialinvoke $r4.<android.graphics.PointF: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchPointCenter> = $r4;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedXDist> = 1.0F;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedYDist> = 1.0F;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedDist> = 1.0F;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: long mDecelerationLastTime> = 0L;

        $r4 = new android.graphics.PointF;

        specialinvoke $r4.<android.graphics.PointF: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint> = $r4;

        $r4 = new android.graphics.PointF;

        specialinvoke $r4.<android.graphics.PointF: void <init>()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity> = $r4;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix> = $r2;

        return;
    }
    private static float getXDist(android.view.MotionEvent)
    {
        android.view.MotionEvent $r0;
        float $f0, $f1;

        $r0 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke $r0.<android.view.MotionEvent: float getX(int)>(0);

        $f1 = virtualinvoke $r0.<android.view.MotionEvent: float getX(int)>(1);

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        return $f0;
    }
    private static float getYDist(android.view.MotionEvent)
    {
        android.view.MotionEvent $r0;
        float $f0, $f1;

        $r0 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke $r0.<android.view.MotionEvent: float getY(int)>(0);

        $f1 = virtualinvoke $r0.<android.view.MotionEvent: float getY(int)>(1);

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        return $f0;
    }
    private static void midPoint(android.graphics.PointF, android.view.MotionEvent)
    {
        android.graphics.PointF $r0;
        android.view.MotionEvent $r1;
        float f0, f1, $f2;

        $r0 := @parameter0: android.graphics.PointF;

        $r1 := @parameter1: android.view.MotionEvent;

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>(0);

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>(1);

        f0 = f0 + f1;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>(0);

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>(1);

        f1 = f1 + $f2;

        f0 = f0 / 2.0F;

        f1 = f1 / 2.0F;

        virtualinvoke $r0.<android.graphics.PointF: void set(float,float)>(f0, f1);

        return;
    }
    private void performDrag(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        android.graphics.Matrix $r2, $r3;
        com.github.mikephil.charting.charts.Chart $r4;
        com.github.mikephil.charting.charts.BarLineChartBase $r5;
        com.github.mikephil.charting.listener.OnChartGestureListener $r6;
        boolean $z0;
        com.github.mikephil.charting.data.DataSet $r7;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r8;
        com.github.mikephil.charting.components.YAxis $r9;
        float $f0, $f1, $f2;
        android.graphics.PointF $r10;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r5 = (com.github.mikephil.charting.charts.BarLineChartBase) $r4;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r5 = (com.github.mikephil.charting.charts.BarLineChartBase) $r4;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isAnyAxisInverted()>();

        if $z0 == 0 goto label3;

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch>;

        if $r7 == null goto label3;

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r5 = (com.github.mikephil.charting.charts.BarLineChartBase) $r4;

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch>;

        $r8 = virtualinvoke $r7.<com.github.mikephil.charting.data.DataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r9 = virtualinvoke $r5.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r8);

        $z0 = virtualinvoke $r9.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $z0 = $r4 instanceof com.github.mikephil.charting.charts.HorizontalBarChart;

        if $z0 == 0 goto label2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f1 = $r10.<android.graphics.PointF: float x>;

        $f0 = $f0 - $f1;

        $f0 = neg $f0;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f2 = $r10.<android.graphics.PointF: float y>;

        $f1 = $f1 - $f2;

     label1:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        if $r6 == null goto label4;

        interfaceinvoke $r6.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartTranslate(android.view.MotionEvent,float,float)>($r1, $f0, $f1);

        return;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f1 = $r10.<android.graphics.PointF: float x>;

        $f0 = $f0 - $f1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f2 = $r10.<android.graphics.PointF: float y>;

        $f1 = $f1 - $f2;

        $f1 = neg $f1;

        goto label1;

     label3:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f1 = $r10.<android.graphics.PointF: float x>;

        $f0 = $f0 - $f1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r10 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f2 = $r10.<android.graphics.PointF: float y>;

        $f1 = $f1 - $f2;

        goto label1;

     label4:
        return;
    }
    private void performHighlight(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r4, $r5;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float)>($f0, $f1);

        if $r4 == null goto label1;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.highlight.Highlight: boolean equalTo(com.github.mikephil.charting.highlight.Highlight)>($r5);

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void highlightTouch(com.github.mikephil.charting.highlight.Highlight)>(null);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted> = null;

        return;

     label2:
        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted> = $r4;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void highlightTouch(com.github.mikephil.charting.highlight.Highlight)>($r4);

        return;
    }
    private void performHighlightDrag(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r4, $r5;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float)>($f0, $f1);

        if $r4 == null goto label1;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.highlight.Highlight: boolean equalTo(com.github.mikephil.charting.highlight.Highlight)>($r5);

        if $z0 != 0 goto label1;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted> = $r4;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void highlightTouch(com.github.mikephil.charting.highlight.Highlight)>($r4);

     label1:
        return;
    }
    private void performZoom(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        float f0, $f1, $f2, $f3;
        int $i0;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3;
        com.github.mikephil.charting.listener.OnChartGestureListener $r4;
        byte $b1;
        android.graphics.PointF $r5;
        boolean z0, $z1;
        com.github.mikephil.charting.utils.ViewPortHandler $r6;
        android.graphics.Matrix $r7, $r8;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i0 < 2 goto label16;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        $f1 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float spacing(android.view.MotionEvent)>($r1);

        $b1 = $f1 cmpl 10.0F;

        if $b1 <= 0 goto label16;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchPointCenter>;

        f0 = $r5.<android.graphics.PointF: float x>;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchPointCenter>;

        $f2 = $r5.<android.graphics.PointF: float y>;

        $r5 = virtualinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF getTrans(float,float)>(f0, $f2);

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 4 goto label10;

        f0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedDist>;

        f0 = $f1 / f0;

        $b1 = f0 cmpg 1.0F;

        if $b1 >= 0 goto label06;

        z0 = 1;

     label01:
        if z0 == 0 goto label07;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r6 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        z0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: boolean canZoomOutMoreX()>();

     label02:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleXEnabled()>();

        if $z1 == 0 goto label08;

        $f1 = f0;

     label03:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if $z1 == 0 goto label09;

     label04:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if $z1 != 0 goto label05;

        if z0 == 0 goto label16;

     label05:
        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r8 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix>;

        virtualinvoke $r7.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r8);

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $f2 = $r5.<android.graphics.PointF: float x>;

        $f3 = $r5.<android.graphics.PointF: float y>;

        virtualinvoke $r7.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f1, f0, $f2, $f3);

        if $r4 == null goto label16;

        interfaceinvoke $r4.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartScale(android.view.MotionEvent,float,float)>($r1, $f1, f0);

        return;

     label06:
        z0 = 0;

        goto label01;

     label07:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r6 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        z0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: boolean canZoomInMoreX()>();

        goto label02;

     label08:
        $f1 = 1.0F;

        goto label03;

     label09:
        f0 = 1.0F;

        goto label04;

     label10:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 2 goto label15;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        z0 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleXEnabled()>();

        if z0 == 0 goto label15;

        $f1 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float getXDist(android.view.MotionEvent)>($r1);

        f0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedXDist>;

        $f1 = $f1 / f0;

        $b1 = $f1 cmpg 1.0F;

        if $b1 >= 0 goto label13;

        z0 = 1;

     label11:
        if z0 == 0 goto label14;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r6 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        z0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: boolean canZoomOutMoreX()>();

     label12:
        if z0 == 0 goto label16;

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r8 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix>;

        virtualinvoke $r7.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r8);

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        f0 = $r5.<android.graphics.PointF: float x>;

        $f2 = $r5.<android.graphics.PointF: float y>;

        virtualinvoke $r7.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f1, 1.0F, f0, $f2);

        if $r4 == null goto label16;

        interfaceinvoke $r4.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartScale(android.view.MotionEvent,float,float)>($r1, $f1, 1.0F);

        return;

     label13:
        z0 = 0;

        goto label11;

     label14:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r6 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        z0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: boolean canZoomInMoreX()>();

        goto label12;

     label15:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 3 goto label16;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        z0 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if z0 == 0 goto label16;

        $f1 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float getYDist(android.view.MotionEvent)>($r1);

        f0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedYDist>;

        $f1 = $f1 / f0;

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r8 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix>;

        virtualinvoke $r7.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r8);

        $r7 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        f0 = $r5.<android.graphics.PointF: float x>;

        $f2 = $r5.<android.graphics.PointF: float y>;

        virtualinvoke $r7.<android.graphics.Matrix: boolean postScale(float,float,float,float)>(1.0F, $f1, f0, $f2);

        if $r4 == null goto label16;

        interfaceinvoke $r4.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartScale(android.view.MotionEvent,float,float)>($r1, 1.0F, $f1);

     label16:
        return;
    }
    private void saveTouchStart(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        android.graphics.Matrix $r2, $r3;
        android.graphics.PointF $r4;
        float $f0, $f1;
        com.github.mikephil.charting.charts.Chart $r5;
        com.github.mikephil.charting.charts.BarLineChartBase $r6;
        com.github.mikephil.charting.data.BarLineScatterCandleDataSet $r7;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mSavedMatrix>;

        $r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r4.<android.graphics.PointF: void set(float,float)>($f0, $f1);

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.BarLineScatterCandleDataSet getDataSetByTouchPoint(float,float)>($f0, $f1);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch> = $r7;

        return;
    }
    private static float spacing(android.view.MotionEvent)
    {
        android.view.MotionEvent $r0;
        float f0, f1, $f2;
        double $d0;

        $r0 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke $r0.<android.view.MotionEvent: float getX(int)>(0);

        f1 = virtualinvoke $r0.<android.view.MotionEvent: float getX(int)>(1);

        f0 = f0 - f1;

        f1 = virtualinvoke $r0.<android.view.MotionEvent: float getY(int)>(0);

        $f2 = virtualinvoke $r0.<android.view.MotionEvent: float getY(int)>(1);

        f1 = f1 - $f2;

        f0 = f0 * f0;

        f1 = f1 * f1;

        f0 = f0 + f1;

        $d0 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f0 = (float) $d0;

        return f0;
    }
    public void computeScroll()
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        float $f0, $f1, $f2;
        android.graphics.PointF $r1;
        byte $b0;
        long $l1, $l2;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3;
        android.view.MotionEvent $r4;
        com.github.mikephil.charting.utils.ViewPortHandler $r5;
        android.graphics.Matrix $r6;
        double $d0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        return;

     label1:
        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: float getDragDecelerationFrictionCoef()>();

        $f0 = $f1 * $f0;

        $r1.<android.graphics.PointF: float x> = $f0;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: float getDragDecelerationFrictionCoef()>();

        $f0 = $f1 * $f0;

        $r1.<android.graphics.PointF: float y> = $f0;

        $l2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: long mDecelerationLastTime>;

        $l2 = $l1 - $l2;

        $f0 = (float) $l2;

        $f1 = $f0 / 1000.0F;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f0 = $f0 * $f1;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f2 = $r1.<android.graphics.PointF: float y>;

        $f1 = $f2 * $f1;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint>;

        $f2 = $r1.<android.graphics.PointF: float x>;

        $f0 = $f2 + $f0;

        $r1.<android.graphics.PointF: float x> = $f0;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $f0 = $f0 + $f1;

        $r1.<android.graphics.PointF: float y> = $f0;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint>;

        $f1 = $r1.<android.graphics.PointF: float y>;

        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l1, $l1, 2, $f0, $f1, 0);

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void performDrag(android.view.MotionEvent)>($r4);

        virtualinvoke $r4.<android.view.MotionEvent: void recycle()>();

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r5 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        $r6 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r6, $r2, 0);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix> = $r6;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: long mDecelerationLastTime> = $l1;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b0 = $d0 cmpl 0.01;

        if $b0 >= 0 goto label2;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b0 = $d0 cmpl 0.01;

        if $b0 < 0 goto label3;

     label2:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        staticinvoke <com.github.mikephil.charting.utils.Utils: void postInvalidateOnAnimation(android.view.View)>($r2);

        return;

     label3:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

        virtualinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void stopDeceleration()>();

        return;
    }
    public android.graphics.Matrix getMatrix()
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.graphics.Matrix r1;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        return r1;
    }
    public android.graphics.PointF getTrans(float, float)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        float $f0, $f1, $f2;
        com.github.mikephil.charting.charts.Chart $r1;
        com.github.mikephil.charting.charts.BarLineChartBase $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        boolean $z0;
        com.github.mikephil.charting.data.DataSet $r4;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r5;
        android.graphics.PointF $r6;
        int $i0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r2 = (com.github.mikephil.charting.charts.BarLineChartBase) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $f0 = $f0 - $f2;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r2 = (com.github.mikephil.charting.charts.BarLineChartBase) $r1;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isAnyAxisInverted()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch>;

        if $r4 == null goto label2;

        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r2 = (com.github.mikephil.charting.charts.BarLineChartBase) $r1;

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.data.DataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r5);

        if $z0 == 0 goto label2;

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetTop()>();

        $f1 = $f1 - $f2;

        $f1 = neg $f1;

     label1:
        $r6 = new android.graphics.PointF;

        specialinvoke $r6.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r6;

     label2:
        $r1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r2 = (com.github.mikephil.charting.charts.BarLineChartBase) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.BarLineChartBase: int getMeasuredHeight()>();

        $f2 = (float) $i0;

        $f1 = $f2 - $f1;

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetBottom()>();

        $f1 = $f1 - $f2;

        $f1 = neg $f1;

        goto label1;
    }
    public boolean onDoubleTap(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2, $f3;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3, $r6;
        com.github.mikephil.charting.listener.OnChartGestureListener $r4;
        boolean $z0;
        android.graphics.PointF $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $f0 = 1.4F;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        if $r4 == null goto label1;

        interfaceinvoke $r4.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartDoubleTapped(android.view.MotionEvent)>($r1);

        $z0 = specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onDoubleTap(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isDoubleTapToZoomEnabled()>();

        if $z0 == 0 goto label4;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r5 = virtualinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF getTrans(float,float)>($f1, $f2);

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleXEnabled()>();

        if $z0 == 0 goto label5;

        $f1 = 1.4F;

     label2:
        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if $z0 == 0 goto label6;

     label3:
        $f2 = $r5.<android.graphics.PointF: float x>;

        $f3 = $r5.<android.graphics.PointF: float y>;

        virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: void zoom(float,float,float,float)>($f1, $f0, $f2, $f3);

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isLogEnabled()>();

        if $z0 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Double-Tap, Zooming In, x: ");

        $f0 = $r5.<android.graphics.PointF: float x>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y: ");

        $f0 = $r5.<android.graphics.PointF: float y>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BarlineChartTouch", $r8);

     label4:
        $z0 = specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onDoubleTap(android.view.MotionEvent)>($r1);

        return $z0;

     label5:
        $f1 = 1.0F;

        goto label2;

     label6:
        $f0 = 1.0F;

        goto label3;
    }
    public boolean onFling(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1, $r2;
        float $f0, $f1;
        com.github.mikephil.charting.charts.Chart $r3;
        com.github.mikephil.charting.charts.BarLineChartBase $r4;
        com.github.mikephil.charting.listener.OnChartGestureListener $r5;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 := @parameter1: android.view.MotionEvent;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r4 = (com.github.mikephil.charting.charts.BarLineChartBase) $r3;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        if $r5 == null goto label1;

        interfaceinvoke $r5.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>($r1, $r2, $f0, $f1);

     label1:
        $z0 = specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>($r1, $r2, $f0, $f1);

        return $z0;
    }
    public void onLongPress(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        com.github.mikephil.charting.listener.OnChartGestureListener $r2;
        com.github.mikephil.charting.charts.Chart $r3;
        com.github.mikephil.charting.charts.BarLineChartBase $r4;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r4 = (com.github.mikephil.charting.charts.BarLineChartBase) $r3;

        $r2 = virtualinvoke $r4.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        if $r2 == null goto label1;

        interfaceinvoke $r2.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartLongPressed(android.view.MotionEvent)>($r1);

     label1:
        return;
    }
    public boolean onSingleTapConfirmed(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        com.github.mikephil.charting.charts.Chart $r2;
        com.github.mikephil.charting.charts.BarLineChartBase $r3;
        com.github.mikephil.charting.listener.OnChartGestureListener $r4;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r3 = (com.github.mikephil.charting.charts.BarLineChartBase) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()>();

        if $r4 == null goto label1;

        interfaceinvoke $r4.<com.github.mikephil.charting.listener.OnChartGestureListener: void onChartSingleTapped(android.view.MotionEvent)>($r1);

     label1:
        $z0 = specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void performHighlight(android.view.MotionEvent)>($r1);

        $z0 = specialinvoke r0.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onSingleTapUp(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        android.view.VelocityTracker r3;
        int $i0, $i2;
        android.view.GestureDetector $r4;
        com.github.mikephil.charting.charts.Chart $r5;
        com.github.mikephil.charting.charts.BarLineChartBase $r6;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r7;
        android.graphics.Matrix $r8;
        float $f0, $f1, $f2, $f3;
        byte $b1;
        android.graphics.PointF $r9;
        long $l3;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        if r3 != null goto label01;

        r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker> = r3;

     label01:
        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r2);

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 3 goto label02;

        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        if r3 == null goto label02;

        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke r3.<android.view.VelocityTracker: void recycle()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker> = null;

     label02:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 0 goto label03;

        $r4 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r4.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>($r2);

     label03:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isDragEnabled()>();

        if $z0 != 0 goto label04;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleXEnabled()>();

        if $z0 != 0 goto label04;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if $z0 != 0 goto label04;

        return 1;

     label04:
        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        $i0 = $i0 & 255;

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label18;
            case 2: goto label11;
            case 3: goto label24;
            case 4: goto label05;
            case 5: goto label07;
            case 6: goto label23;
            default: goto label05;
        };

     label05:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()>();

        $r8 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix>;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r8 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r8, $r5, 1);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.Matrix mMatrix> = $r8;

        return 1;

     label06:
        virtualinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void stopDeceleration()>();

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void saveTouchStart(android.view.MotionEvent)>($r2);

        goto label05;

     label07:
        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getPointerCount()>();

        if $i0 < 2 goto label05;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void disableScroll()>();

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void saveTouchStart(android.view.MotionEvent)>($r2);

        $f0 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float getXDist(android.view.MotionEvent)>($r2);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedXDist> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float getYDist(android.view.MotionEvent)>($r2);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedYDist> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float spacing(android.view.MotionEvent)>($r2);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedDist> = $f0;

        $f0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedDist>;

        $b1 = $f0 cmpl 10.0F;

        if $b1 <= 0 goto label08;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isPinchZoomEnabled()>();

        if $z0 == 0 goto label09;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 4;

     label08:
        $r9 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchPointCenter>;

        staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: void midPoint(android.graphics.PointF,android.view.MotionEvent)>($r9, $r2);

        goto label05;

     label09:
        $f0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedXDist>;

        $f1 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: float mSavedYDist>;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label10;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 2;

        goto label08;

     label10:
        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 3;

        goto label08;

     label11:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 1 goto label12;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void disableScroll()>();

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void performDrag(android.view.MotionEvent)>($r2);

        goto label05;

     label12:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 == 2 goto label13;

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 == 3 goto label13;

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 4 goto label15;

     label13:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void disableScroll()>();

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleXEnabled()>();

        if $z0 != 0 goto label14;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isScaleYEnabled()>();

        if $z0 == 0 goto label05;

     label14:
        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void performZoom(android.view.MotionEvent)>($r2);

        goto label05;

     label15:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 0 goto label05;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $r9 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f1 = $r9.<android.graphics.PointF: float x>;

        $f2 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $r9 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mTouchStartPoint>;

        $f3 = $r9.<android.graphics.PointF: float y>;

        $f0 = staticinvoke <com.github.mikephil.charting.listener.BarLineChartTouchListener: float distance(float,float,float,float)>($f0, $f1, $f2, $f3);

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b1 = $f0 cmpl 5.0F;

        if $b1 <= 0 goto label05;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean hasNoDragOffset()>();

        if $z0 == 0 goto label17;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isFullyZoomedOut()>();

        if $z0 != 0 goto label16;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isDragEnabled()>();

        if $z0 == 0 goto label16;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 1;

        goto label05;

     label16:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isHighlightPerDragEnabled()>();

        if $z0 == 0 goto label05;

        specialinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void performHighlightDrag(android.view.MotionEvent)>($r2);

        goto label05;

     label17:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isDragEnabled()>();

        if $z0 == 0 goto label05;

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 1;

        goto label05;

     label18:
        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getPointerId(int)>(0);

        $i2 = staticinvoke <com.github.mikephil.charting.utils.Utils: int getMaximumFlingVelocity()>();

        $f0 = (float) $i2;

        virtualinvoke r3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $f0 = virtualinvoke r3.<android.view.VelocityTracker: float getYVelocity(int)>($i0);

        $f1 = virtualinvoke r3.<android.view.VelocityTracker: float getXVelocity(int)>($i0);

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int getMinimumFlingVelocity()>();

        $f3 = (float) $i0;

        $b1 = $f2 cmpl $f3;

        if $b1 > 0 goto label19;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int getMinimumFlingVelocity()>();

        $f3 = (float) $i0;

        $b1 = $f2 cmpl $f3;

        if $b1 <= 0 goto label20;

     label19:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 1 goto label20;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        $z0 = virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: boolean isDragDecelerationEnabled()>();

        if $z0 == 0 goto label20;

        virtualinvoke r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void stopDeceleration()>();

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: long mDecelerationLastTime> = $l3;

        $r9 = new android.graphics.PointF;

        $f2 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        specialinvoke $r9.<android.graphics.PointF: void <init>(float,float)>($f2, $f3);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationCurrentPoint> = $r9;

        $r9 = new android.graphics.PointF;

        specialinvoke $r9.<android.graphics.PointF: void <init>(float,float)>($f1, $f0);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity> = $r9;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        staticinvoke <com.github.mikephil.charting.utils.Utils: void postInvalidateOnAnimation(android.view.View)>($r5);

     label20:
        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 == 2 goto label21;

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 == 3 goto label21;

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 == 4 goto label21;

        $i0 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode>;

        if $i0 != 5 goto label22;

     label21:
        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

     label22:
        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 0;

        $r5 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: com.github.mikephil.charting.charts.Chart mChart>;

        $r6 = (com.github.mikephil.charting.charts.BarLineChartBase) $r5;

        virtualinvoke $r6.<com.github.mikephil.charting.charts.BarLineChartBase: void enableScroll()>();

        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        if r3 == null goto label05;

        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke r3.<android.view.VelocityTracker: void recycle()>();

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker> = null;

        goto label05;

     label23:
        r3 = r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.view.VelocityTracker mVelocityTracker>;

        staticinvoke <com.github.mikephil.charting.utils.Utils: void velocityTrackerPointerUpCleanUpIfNecessary(android.view.MotionEvent,android.view.VelocityTracker)>($r2, r3);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 5;

        goto label05;

     label24:
        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: int mTouchMode> = 0;

        goto label05;
    }
    public void stopDeceleration()
    {
        com.github.mikephil.charting.listener.BarLineChartTouchListener r0;
        android.graphics.PointF $r1;

        r0 := @this: com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r1 = new android.graphics.PointF;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);

        r0.<com.github.mikephil.charting.listener.BarLineChartTouchListener: android.graphics.PointF mDecelerationVelocity> = $r1;

        return;
    }
