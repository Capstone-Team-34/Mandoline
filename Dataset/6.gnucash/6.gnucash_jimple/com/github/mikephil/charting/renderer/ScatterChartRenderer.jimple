com.github.mikephil.charting.renderer.ScatterChartRenderer extends com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer
protected com.github.mikephil.charting.interfaces.ScatterDataProvider mChart
protected com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers
    public void <init>(com.github.mikephil.charting.interfaces.ScatterDataProvider, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        android.graphics.Paint $r4;
        float $f0;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.interfaces.ScatterDataProvider;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer: void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r2, $r3);

        r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart> = $r1;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(1.0F);

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        return;
    }
    public void drawData(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r2;
        com.github.mikephil.charting.data.ScatterData $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.github.mikephil.charting.data.ScatterDataSet r7;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r3 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.data.ScatterData: java.util.List getDataSets()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.github.mikephil.charting.data.ScatterDataSet) $r6;

        $z0 = virtualinvoke r7.<com.github.mikephil.charting.data.ScatterDataSet: boolean isVisible()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.ScatterDataSet)>($r1, r7);

        goto label1;

     label2:
        return;
    }
    protected void drawDataSet(android.graphics.Canvas, com.github.mikephil.charting.data.ScatterDataSet)
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.ScatterDataSet $r2;
        com.github.mikephil.charting.buffer.ScatterBuffer r3;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Path r4;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r5;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r6;
        com.github.mikephil.charting.utils.Transformer $r7;
        com.github.mikephil.charting.animation.ChartAnimator $r8;
        java.util.List $r9;
        com.github.mikephil.charting.charts.ScatterChart$ScatterShape $r10;
        com.github.mikephil.charting.buffer.ScatterBuffer[] $r11;
        com.github.mikephil.charting.data.ScatterData $r12;
        int $i0, $i1;
        float[] $r13;
        int[] $r14;
        android.graphics.Paint $r15;
        android.graphics.Paint$Style $r16;
        com.github.mikephil.charting.utils.ViewPortHandler $r17;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.ScatterDataSet;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r6 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r7 = interfaceinvoke $r5.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r6);

        $r8 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r8.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r8 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r8.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $r9 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: java.util.List getYVals()>();

        f0 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: float getScatterShapeSize()>();

        f0 = f0 / 2.0F;

        $r10 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: com.github.mikephil.charting.charts.ScatterChart$ScatterShape getScatterShape()>();

        $r11 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers>;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r12 = interfaceinvoke $r5.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $i0 = virtualinvoke $r12.<com.github.mikephil.charting.data.ScatterData: int getIndexOfDataSet(com.github.mikephil.charting.data.DataSet)>($r2);

        r3 = $r11[$i0];

        virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: void setPhases(float,float)>($f1, $f2);

        virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: void feed(java.util.List)>($r9);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        virtualinvoke $r7.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>($r13);

        $r14 = <com.github.mikephil.charting.renderer.ScatterChartRenderer$1: int[] $SwitchMap$com$github$mikephil$charting$charts$ScatterChart$ScatterShape>;

        $i0 = virtualinvoke $r10.<com.github.mikephil.charting.charts.ScatterChart$ScatterShape: int ordinal()>();

        $i0 = $r14[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label10;
            case 4: goto label14;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);

        $i0 = 0;

     label03:
        $i1 = virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: int size()>();

        if $i0 >= $i1 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f1);

        if $z0 == 0 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f1);

        if $z0 == 0 goto label04;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f1 = $r13[$i1];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>($f1);

        if $z0 != 0 goto label05;

     label04:
        $i0 = $i0 + 2;

        goto label03;

     label05:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = $i0 / 2;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: int getColor(int)>($i1);

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>($i1);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $f1 = $f1 - f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $f2 = $f2 - f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f3 = $r13[$i0];

        $f3 = $f3 + f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f4 = $r13[$i1];

        $f4 = $f4 + f0;

        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f4, $r15);

        goto label04;

     label06:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);

        $i0 = 0;

     label07:
        $i1 = virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: int size()>();

        if $i0 >= $i1 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f1);

        if $z0 == 0 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f1);

        if $z0 == 0 goto label08;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f1 = $r13[$i1];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>($f1);

        if $z0 != 0 goto label09;

     label08:
        $i0 = $i0 + 2;

        goto label07;

     label09:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = $i0 / 2;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: int getColor(int)>($i1);

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>($i1);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, f0, $r15);

        goto label08;

     label10:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);

        r4 = new android.graphics.Path;

        specialinvoke r4.<android.graphics.Path: void <init>()>();

        $i0 = 0;

     label11:
        $i1 = virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: int size()>();

        if $i0 >= $i1 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f1);

        if $z0 == 0 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f1);

        if $z0 == 0 goto label12;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f1 = $r13[$i1];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>($f1);

        if $z0 != 0 goto label13;

     label12:
        $i0 = $i0 + 2;

        goto label11;

     label13:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = $i0 / 2;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: int getColor(int)>($i1);

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>($i1);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $f2 = $f2 - f0;

        virtualinvoke r4.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $f1 = $f1 + f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $f2 = $f2 + f0;

        virtualinvoke r4.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $f1 = $f1 - f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $f2 = $f2 + f0;

        virtualinvoke r4.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        virtualinvoke r4.<android.graphics.Path: void close()>();

        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r4, $r15);

        virtualinvoke r4.<android.graphics.Path: void reset()>();

        goto label12;

     label14:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);

        $i0 = 0;

     label15:
        $i1 = virtualinvoke r3.<com.github.mikephil.charting.buffer.ScatterBuffer: int size()>();

        if $i0 >= $i1 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f1);

        if $z0 == 0 goto label18;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f1);

        if $z0 == 0 goto label16;

        $r17 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f1 = $r13[$i1];

        $z0 = virtualinvoke $r17.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>($f1);

        if $z0 != 0 goto label17;

     label16:
        $i0 = $i0 + 2;

        goto label15;

     label17:
        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = $i0 / 2;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.ScatterDataSet: int getColor(int)>($i1);

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>($i1);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $f1 = $f1 - f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f3 = $r13[$i0];

        $f3 = $f3 + f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f4 = $r13[$i1];

        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f4, $r15);

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f1 = $r13[$i0];

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f2 = $r13[$i1];

        $f2 = $f2 - f0;

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $f3 = $r13[$i0];

        $r13 = r3.<com.github.mikephil.charting.buffer.ScatterBuffer: float[] buffer>;

        $i1 = $i0 + 1;

        $f4 = $r13[$i1];

        $f4 = $f4 + f0;

        $r15 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f2, $f3, $f4, $r15);

        goto label16;

     label18:
        return;
    }
    public void drawExtras(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        return;
    }
    public void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        float[] r3;
        float f0, $f1, $f2;
        int i0, $i1;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r4;
        com.github.mikephil.charting.data.ScatterData $r5;
        com.github.mikephil.charting.highlight.Highlight $r6;
        com.github.mikephil.charting.data.DataSet $r7;
        com.github.mikephil.charting.data.ScatterDataSet r8;
        boolean $z0, $z1;
        android.graphics.Paint $r9;
        com.github.mikephil.charting.animation.ChartAnimator $r10;
        byte $b2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r11;
        com.github.mikephil.charting.utils.Transformer $r12;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight[];

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r5 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $r6 = $r2[i0];

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $r7 = virtualinvoke $r5.<com.github.mikephil.charting.data.ScatterData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i1);

        r8 = (com.github.mikephil.charting.data.ScatterDataSet) $r7;

        if r8 == null goto label2;

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: boolean isHighlightEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r9 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mHighlightPaint>;

        $i1 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: int getHighLightColor()>();

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i1);

        $r9 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mHighlightPaint>;

        f0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: float getHighlightLineWidth()>();

        virtualinvoke $r9.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r6 = $r2[i0];

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        f0 = (float) $i1;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: float getXChartMax()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r10.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $f1 = $f1 * $f2;

        $b2 = f0 cmpl $f1;

        if $b2 > 0 goto label2;

        f0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: float getYValForXIndex(int)>($i1);

        $b2 = f0 cmpl #NaNF;

        if $b2 == 0 goto label2;

        $r10 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r10.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f0 = f0 * $f1;

        r3 = newarray (float)[8];

        $f1 = (float) $i1;

        r3[0] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: float getYChartMax()>();

        r3[1] = $f1;

        $f1 = (float) $i1;

        r3[2] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: float getYChartMin()>();

        r3[3] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: float getXChartMin()>();

        r3[4] = $f1;

        r3[5] = f0;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: float getXChartMax()>();

        r3[6] = $f1;

        r3[7] = f0;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r11 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r12 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r11);

        virtualinvoke $r12.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: boolean isHorizontalHighlightIndicatorEnabled()>();

        $z1 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: boolean isVerticalHighlightIndicatorEnabled()>();

        virtualinvoke r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: void drawHighlightLines(android.graphics.Canvas,float[],boolean,boolean)>($r1, r3, $z0, $z1);

        goto label2;

     label4:
        return;
    }
    public void drawValues(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r3;
        com.github.mikephil.charting.data.ScatterData $r4;
        int $i0, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        com.github.mikephil.charting.utils.ViewPortHandler $r5;
        byte $b1;
        java.util.List $r6, $r9;
        java.lang.Object $r7;
        com.github.mikephil.charting.data.ScatterDataSet r8;
        boolean $z0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r10;
        com.github.mikephil.charting.utils.Transformer $r11;
        com.github.mikephil.charting.animation.ChartAnimator $r12;
        float[] $r13;
        com.github.mikephil.charting.data.Entry $r14;
        com.github.mikephil.charting.utils.ValueFormatter $r15;
        java.lang.String $r16;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r4 = interfaceinvoke $r3.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $i0 = virtualinvoke $r4.<com.github.mikephil.charting.data.ScatterData: int getYValCount()>();

        $f0 = (float) $i0;

        $r3 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $i0 = interfaceinvoke $r3.<com.github.mikephil.charting.interfaces.ScatterDataProvider: int getMaxVisibleCount()>();

        $f1 = (float) $i0;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleX()>();

        $f1 = $f1 * $f2;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label7;

        $r3 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r4 = interfaceinvoke $r3.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.data.ScatterData: java.util.List getDataSets()>();

        $i0 = 0;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r4 = interfaceinvoke $r3.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $i2 = virtualinvoke $r4.<com.github.mikephil.charting.data.ScatterData: int getDataSetCount()>();

        if $i0 >= $i2 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        r8 = (com.github.mikephil.charting.data.ScatterDataSet) $r7;

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: boolean isDrawValuesEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: void applyValueTextStyle(com.github.mikephil.charting.data.DataSet)>(r8);

        $r9 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: java.util.List getYVals()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r10 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r11 = interfaceinvoke $r3.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r10);

        $r12 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f0 = virtualinvoke $r12.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $r13 = virtualinvoke $r11.<com.github.mikephil.charting.utils.Transformer: float[] generateTransformedValuesScatter(java.util.List,float)>($r9, $f0);

        $f0 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: float getScatterShapeSize()>();

        $i2 = 0;

     label4:
        $f1 = (float) $i2;

        $i3 = lengthof $r13;

        $f2 = (float) $i3;

        $r12 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f3 = virtualinvoke $r12.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $f2 = $f2 * $f3;

        $b1 = $f1 cmpg $f2;

        if $b1 >= 0 goto label2;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = $r13[$i2];

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f1);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = $r13[$i2];

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f1);

        if $z0 == 0 goto label5;

        $r5 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $i3 = $i2 + 1;

        $f1 = $r13[$i3];

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>($f1);

        if $z0 != 0 goto label6;

     label5:
        $i2 = $i2 + 2;

        goto label4;

     label6:
        $i3 = $i2 / 2;

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);

        $r14 = (com.github.mikephil.charting.data.Entry) $r7;

        $f1 = virtualinvoke $r14.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r15 = virtualinvoke r8.<com.github.mikephil.charting.data.ScatterDataSet: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()>();

        $r16 = interfaceinvoke $r15.<com.github.mikephil.charting.utils.ValueFormatter: java.lang.String getFormattedValue(float)>($f1);

        $f1 = $r13[$i2];

        $i3 = $i2 + 1;

        $f2 = $r13[$i3];

        $f2 = $f2 - $f0;

        $r2 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r16, $f1, $f2, $r2);

        goto label5;

     label7:
        return;
    }
    public void initBuffers()
    {
        com.github.mikephil.charting.renderer.ScatterChartRenderer r0;
        com.github.mikephil.charting.buffer.ScatterBuffer $r1;
        com.github.mikephil.charting.interfaces.ScatterDataProvider $r2;
        com.github.mikephil.charting.data.ScatterData $r3;
        int $i0, $i1;
        com.github.mikephil.charting.buffer.ScatterBuffer[] $r4;
        com.github.mikephil.charting.data.DataSet $r5;
        com.github.mikephil.charting.data.ScatterDataSet r6;

        r0 := @this: com.github.mikephil.charting.renderer.ScatterChartRenderer;

        $r2 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.interfaces.ScatterDataProvider mChart>;

        $r3 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.ScatterDataProvider: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        $i0 = virtualinvoke $r3.<com.github.mikephil.charting.data.ScatterData: int getDataSetCount()>();

        $r4 = newarray (com.github.mikephil.charting.buffer.ScatterBuffer)[$i0];

        r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers> = $r4;

        $i0 = 0;

     label1:
        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r5 = virtualinvoke $r3.<com.github.mikephil.charting.data.ScatterData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i0);

        r6 = (com.github.mikephil.charting.data.ScatterDataSet) $r5;

        $r4 = r0.<com.github.mikephil.charting.renderer.ScatterChartRenderer: com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers>;

        $r1 = new com.github.mikephil.charting.buffer.ScatterBuffer;

        $i1 = virtualinvoke r6.<com.github.mikephil.charting.data.ScatterDataSet: int getEntryCount()>();

        $i1 = $i1 * 2;

        specialinvoke $r1.<com.github.mikephil.charting.buffer.ScatterBuffer: void <init>(int)>($i1);

        $r4[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
