com.github.mikephil.charting.renderer.PieChartRenderer extends com.github.mikephil.charting.renderer.DataRenderer
protected android.graphics.Canvas mBitmapCanvas
private android.graphics.RectF mCenterTextLastBounds
private java.lang.String mCenterTextLastValue
private android.text.StaticLayout mCenterTextLayout
private android.text.TextPaint mCenterTextPaint
protected com.github.mikephil.charting.charts.PieChart mChart
protected android.graphics.Bitmap mDrawBitmap
protected android.graphics.Paint mHolePaint
private android.graphics.RectF[] mRectBuffer
protected android.graphics.Paint mTransparentCirclePaint
    public void <init>(com.github.mikephil.charting.charts.PieChart, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        com.github.mikephil.charting.charts.PieChart $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        android.graphics.RectF $r4;
        android.graphics.RectF[] $r5;
        android.graphics.Paint $r6;
        android.graphics.Paint$Style $r7;
        android.text.TextPaint $r8;
        float $f0;
        android.graphics.Paint$Align $r9;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.charts.PieChart;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.DataRenderer: void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r2, $r3);

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF mCenterTextLastBounds> = $r4;

        $r5 = newarray (android.graphics.RectF)[3];

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        $r5[0] = $r4;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        $r5[1] = $r4;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        $r5[2] = $r4;

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF[] mRectBuffer> = $r5;

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart> = $r1;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mHolePaint> = $r6;

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mHolePaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(-1);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mHolePaint>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r6.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint> = $r6;

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(-1);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r6.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>(100);

        $r8 = new android.text.TextPaint;

        specialinvoke $r8.<android.text.TextPaint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint> = $r8;

        $r8 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        virtualinvoke $r8.<android.text.TextPaint: void setColor(int)>(-16777216);

        $r8 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(12.0F);

        virtualinvoke $r8.<android.text.TextPaint: void setTextSize(float)>($f0);

        $r8 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        $r9 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r8.<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>($r9);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(13.0F);

        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(-1);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        $r9 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r9);

        return;
    }
    protected void drawCenterText(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF r2, r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        com.github.mikephil.charting.charts.PieChart $r4;
        java.lang.String $r5, $r8;
        boolean $z0;
        android.graphics.PointF $r6;
        android.graphics.RectF[] $r7;
        double $d0;
        byte $b0;
        android.text.StaticLayout $r9;
        int $i1, $i2, $i3;
        android.text.TextPaint $r10;
        android.text.Layout$Alignment $r11;
        java.lang.String[] $r12;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: java.lang.String getCenterText()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: boolean isDrawCenterTextEnabled()>();

        if $z0 == 0 goto label11;

        if $r5 == null goto label11;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: boolean isCenterTextWordWrapEnabled()>();

        if $z0 == 0 goto label06;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: boolean isDrawHoleEnabled()>();

        if $z0 == 0 goto label05;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: boolean isHoleTransparent()>();

        if $z0 == 0 goto label05;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getRadius()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getHoleRadius()>();

        f0 = f0 / 100.0F;

        $f2 = $f2 * f0;

     label01:
        $r7 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF[] mRectBuffer>;

        r3 = $r7[0];

        f0 = $r6.<android.graphics.PointF: float x>;

        f0 = f0 - $f2;

        r3.<android.graphics.RectF: float left> = f0;

        f0 = $r6.<android.graphics.PointF: float y>;

        f0 = f0 - $f2;

        r3.<android.graphics.RectF: float top> = f0;

        f0 = $r6.<android.graphics.PointF: float x>;

        f0 = f0 + $f2;

        r3.<android.graphics.RectF: float right> = f0;

        f0 = $r6.<android.graphics.PointF: float y>;

        $f2 = f0 + $f2;

        r3.<android.graphics.RectF: float bottom> = $f2;

        $r7 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF[] mRectBuffer>;

        r2 = $r7[1];

        virtualinvoke r2.<android.graphics.RectF: void set(android.graphics.RectF)>(r3);

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getCenterTextRadiusPercent()>();

        $d0 = (double) $f2;

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label02;

        f0 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f1 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f1 = f1 * $f2;

        f0 = f0 - f1;

        f0 = f0 / 2.0F;

        f1 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        $f3 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        $f2 = $f3 * $f2;

        $f2 = f1 - $f2;

        $f2 = $f2 / 2.0F;

        virtualinvoke r2.<android.graphics.RectF: void inset(float,float)>(f0, $f2);

     label02:
        $r8 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: java.lang.String mCenterTextLastValue>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label03;

        r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF mCenterTextLastBounds>;

        $z0 = virtualinvoke r2.<android.graphics.RectF: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label04;

     label03:
        r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF mCenterTextLastBounds>;

        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.RectF)>(r2);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: java.lang.String mCenterTextLastValue> = $r5;

        $r9 = new android.text.StaticLayout;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.RectF mCenterTextLastBounds>;

        $f2 = virtualinvoke r3.<android.graphics.RectF: float width()>();

        $d0 = (double) $f2;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, 1.0);

        $i2 = (int) $d0;

        $r11 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r9.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r5, 0, $i1, $r10, $i2, $r11, 1.0F, 0.0F, 0);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.StaticLayout mCenterTextLayout> = $r9;

     label04:
        $r9 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.StaticLayout mCenterTextLayout>;

        $i1 = virtualinvoke $r9.<android.text.StaticLayout: int getHeight()>();

        f1 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f2 = virtualinvoke r2.<android.graphics.RectF: float centerX()>();

        f0 = r2.<android.graphics.RectF: float top>;

        $f3 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f1 = $f3 - f1;

        f1 = f1 / 2.0F;

        f0 = f0 + f1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, f0);

        $r9 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.StaticLayout mCenterTextLayout>;

        virtualinvoke $r9.<android.text.StaticLayout: void draw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label05:
        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getRadius()>();

        goto label01;

     label06:
        $r12 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $f2 = 0.0F;

        $i1 = lengthof $r12;

        $i2 = 0;

     label07:
        if $i2 >= $i1 goto label09;

        $r5 = $r12[$i2];

        $r10 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        $i3 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r10, $r5);

        f0 = (float) $i3;

        $b0 = f0 cmpl $f2;

        if $b0 <= 0 goto label08;

        $f2 = f0;

     label08:
        $i2 = $i2 + 1;

        goto label07;

     label09:
        f0 = $f2 * 0.25F;

        $i1 = lengthof $r12;

        f1 = (float) $i1;

        f1 = f1 * $f2;

        $i1 = lengthof $r12;

        $i1 = $i1 + -1;

        $f3 = (float) $i1;

        $f3 = $f3 * f0;

        f1 = f1 - $f3;

        $i1 = lengthof $r12;

        $f3 = $r6.<android.graphics.PointF: float y>;

        $i2 = 0;

     label10:
        $i3 = lengthof $r12;

        if $i2 >= $i3 goto label11;

        $i3 = lengthof $r12;

        $i3 = $i3 - $i2;

        $i3 = $i3 + -1;

        $r5 = $r12[$i3];

        $f4 = $r6.<android.graphics.PointF: float x>;

        $f5 = (float) $i1;

        $f5 = $f5 * $f2;

        $f5 = $f5 + $f3;

        $f6 = f1 / 2.0F;

        $f5 = $f5 - $f6;

        $r10 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r5, $f4, $f5, $r10);

        $i1 = $i1 + -1;

        $f3 = $f3 - f0;

        $i2 = $i2 + 1;

        goto label10;

     label11:
        return;
    }
    public void drawData(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1, $r5;
        int i0, i1, $i2;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        float $f0;
        android.graphics.Bitmap $r3;
        android.graphics.Bitmap$Config $r4;
        com.github.mikephil.charting.charts.PieChart $r6;
        com.github.mikephil.charting.data.ChartData $r7;
        com.github.mikephil.charting.data.PieData r8;
        java.util.List $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        com.github.mikephil.charting.data.PieDataSet r12;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        i1 = (int) $f0;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartHeight()>();

        i0 = (int) $f0;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        if $r3 == null goto label1;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        if $i2 != i1 goto label1;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        if $i2 == i0 goto label2;

     label1:
        if i1 <= 0 goto label4;

        if i0 <= 0 goto label4;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_4444>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i0, $r4);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap> = $r3;

        $r5 = new android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas> = $r5;

     label2:
        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        virtualinvoke $r3.<android.graphics.Bitmap: void eraseColor(int)>(0);

        $r6 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData getData()>();

        r8 = (com.github.mikephil.charting.data.PieData) $r7;

        $r9 = virtualinvoke r8.<com.github.mikephil.charting.data.PieData: java.util.List getDataSets()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.github.mikephil.charting.data.PieDataSet) $r11;

        $z0 = virtualinvoke r12.<com.github.mikephil.charting.data.PieDataSet: boolean isVisible()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.PieChartRenderer: void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.PieDataSet)>($r1, r12);

        goto label3;

     label4:
        return;
    }
    protected void drawDataSet(android.graphics.Canvas, com.github.mikephil.charting.data.PieDataSet)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.PieDataSet $r2;
        android.graphics.Paint $r3;
        float f0, $f1, $f2, $f3, $f4;
        com.github.mikephil.charting.charts.PieChart $r4, $r9;
        java.util.List $r5;
        float[] $r6;
        int i0, $i1, $i3;
        java.lang.Object $r7;
        com.github.mikephil.charting.data.Entry r8;
        double $d0;
        byte $b2;
        com.github.mikephil.charting.data.ChartData $r10;
        com.github.mikephil.charting.data.PieData $r11;
        boolean $z0;
        android.graphics.RectF $r12;
        com.github.mikephil.charting.animation.ChartAnimator $r13;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.PieDataSet;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getRotationAngle()>();

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieDataSet: java.util.List getYVals()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        f0 = $r6[i0];

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieDataSet: float getSliceSpace()>();

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.github.mikephil.charting.data.Entry) $r7;

        $f3 = virtualinvoke r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $d0 = (double) $f3;

        $b2 = $d0 cmpl 1.0E-6;

        if $b2 <= 0 goto label2;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $i1 = virtualinvoke r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $r9 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r10 = virtualinvoke $r9.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r11 = (com.github.mikephil.charting.data.PieData) $r10;

        $i3 = virtualinvoke $r11.<com.github.mikephil.charting.data.PieData: int getIndexOfDataSet(com.github.mikephil.charting.data.DataSet)>($r2);

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: boolean needsHighlight(int,int)>($i1, $i3);

        if $z0 != 0 goto label2;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieDataSet: int getColor(int)>(i0);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i1);

        $r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r12 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF getCircleBox()>();

        $f3 = $f2 / 2.0F;

        $f3 = $f3 + $f1;

        $r13 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f4 = virtualinvoke $r13.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $f3 = $f3 * $f4;

        $f2 = $f2 / 2.0F;

        $f2 = f0 - $f2;

        $r13 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f4 = virtualinvoke $r13.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $f2 = $f2 * $f4;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r12, $f3, $f2, 1, $r3);

     label2:
        $r13 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r13.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        f0 = $f2 * f0;

        $f1 = $f1 + f0;

        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    public void drawExtras(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.PieChartRenderer: void drawHole(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $r3 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, 0.0F, 0.0F, $r3);

        virtualinvoke r0.<com.github.mikephil.charting.renderer.PieChartRenderer: void drawCenterText(android.graphics.Canvas)>($r1);

        return;
    }
    public void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        android.graphics.RectF r3, $r12;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        com.github.mikephil.charting.charts.PieChart $r4;
        float[] $r5, $r6;
        int i0, $i1, $i2;
        com.github.mikephil.charting.highlight.Highlight $r7;
        com.github.mikephil.charting.data.ChartData $r8;
        com.github.mikephil.charting.data.PieData $r9;
        com.github.mikephil.charting.data.PieDataSet $r10;
        boolean $z0;
        com.github.mikephil.charting.animation.ChartAnimator $r11;
        android.graphics.Paint $r13;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight[];

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float getRotationAngle()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: float[] getAbsoluteAngles()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label6;

        $r7 = $r2[i0];

        $i1 = virtualinvoke $r7.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        $i2 = lengthof $r5;

        if $i1 < $i2 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r8 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r9 = (com.github.mikephil.charting.data.PieData) $r8;

        $r7 = $r2[i0];

        $i2 = virtualinvoke $r7.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $r10 = virtualinvoke $r9.<com.github.mikephil.charting.data.PieData: com.github.mikephil.charting.data.PieDataSet getDataSetByIndex(int)>($i2);

        if $r10 == null goto label2;

        $z0 = virtualinvoke $r10.<com.github.mikephil.charting.data.PieDataSet: boolean isHighlightEnabled()>();

        if $z0 == 0 goto label2;

        if $i1 != 0 goto label5;

        f0 = $f1;

     label4:
        $r11 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r11.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $f2 = f0 * $f2;

        f0 = $r5[$i1];

        $f3 = virtualinvoke $r10.<com.github.mikephil.charting.data.PieDataSet: float getSelectionShift()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r12 = virtualinvoke $r4.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF getCircleBox()>();

        r3 = new android.graphics.RectF;

        $f4 = $r12.<android.graphics.RectF: float left>;

        $f4 = $f4 - $f3;

        $f5 = $r12.<android.graphics.RectF: float top>;

        $f5 = $f5 - $f3;

        $f6 = $r12.<android.graphics.RectF: float right>;

        $f6 = $f6 + $f3;

        $f7 = $r12.<android.graphics.RectF: float bottom>;

        $f3 = $f7 + $f3;

        specialinvoke r3.<android.graphics.RectF: void <init>(float,float,float,float)>($f4, $f5, $f6, $f3);

        $r13 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = virtualinvoke $r10.<com.github.mikephil.charting.data.PieDataSet: int getColor(int)>($i1);

        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i1);

        $r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $f3 = virtualinvoke $r10.<com.github.mikephil.charting.data.PieDataSet: float getSliceSpace()>();

        $f3 = $f3 / 2.0F;

        $f2 = $f3 + $f2;

        $r11 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f3 = virtualinvoke $r11.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f0 = $f3 * f0;

        $f3 = virtualinvoke $r10.<com.github.mikephil.charting.data.PieDataSet: float getSliceSpace()>();

        $f3 = $f3 / 2.0F;

        f0 = f0 - $f3;

        $r13 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r3, $f2, f0, 1, $r13);

        goto label2;

     label5:
        $i2 = $i1 + -1;

        f0 = $r6[$i2];

        f0 = $f1 + f0;

        goto label4;

     label6:
        return;
    }
    protected void drawHole(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.charts.PieChart $r2;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.PointF $r3;
        byte $b0;
        com.github.mikephil.charting.animation.ChartAnimator $r4;
        android.graphics.Paint $r5;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: boolean isDrawHoleEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getTransparentCircleRadius()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getHoleRadius()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getRadius()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label1;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f3 = virtualinvoke $r4.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $b0 = $f3 cmpl 1.0F;

        if $b0 < 0 goto label1;

        $r4 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f3 = virtualinvoke $r4.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $b0 = $f3 cmpl 1.0F;

        if $b0 < 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $f3 = $r3.<android.graphics.PointF: float x>;

        $f4 = $r3.<android.graphics.PointF: float y>;

        $f5 = $f2 / 100.0F;

        $f0 = $f5 * $f0;

        $r5 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f3, $f4, $f0, $r5);

     label1:
        $r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $f0 = $r3.<android.graphics.PointF: float x>;

        $f3 = $r3.<android.graphics.PointF: float y>;

        $f2 = $f2 / 100.0F;

        $f1 = $f2 * $f1;

        $r5 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mHolePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f3, $f1, $r5);

     label2:
        return;
    }
    protected void drawRoundedSlices(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, f3, $f4, $f5, $f6;
        com.github.mikephil.charting.charts.PieChart $r2;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r3;
        com.github.mikephil.charting.data.PieData $r4;
        com.github.mikephil.charting.data.PieDataSet $r5;
        android.graphics.PointF $r6;
        java.util.List $r7;
        float[] $r8;
        int i0, $i1;
        java.lang.Object $r9;
        com.github.mikephil.charting.data.Entry r10;
        double $d0, $d1;
        byte $b2;
        com.github.mikephil.charting.animation.ChartAnimator $r11;
        android.graphics.Paint $r12;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: boolean isDrawRoundedSlicesEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r4 = (com.github.mikephil.charting.data.PieData) $r3;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.data.PieData: com.github.mikephil.charting.data.PieDataSet getDataSet()>();

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.data.PieDataSet: boolean isVisible()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r6 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f4 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getRadius()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        f0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getHoleRadius()>();

        f0 = f0 * $f4;

        f0 = f0 / 100.0F;

        f0 = $f4 - f0;

        f0 = f0 / 2.0F;

        $r7 = virtualinvoke $r5.<com.github.mikephil.charting.data.PieDataSet: java.util.List getYVals()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r8 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f5 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getRotationAngle()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        f1 = $r8[i0];

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r10 = (com.github.mikephil.charting.data.Entry) $r9;

        f2 = virtualinvoke r10.<com.github.mikephil.charting.data.Entry: float getVal()>();

        f2 = staticinvoke <java.lang.Math: float abs(float)>(f2);

        $d0 = (double) f2;

        $b2 = $d0 cmpl 1.0E-6;

        if $b2 <= 0 goto label3;

        f2 = $f4 - f0;

        $d0 = (double) f2;

        f2 = $f5 + f1;

        $r11 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f3 = virtualinvoke $r11.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f2 = f2 * f3;

        $d1 = (double) f2;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        f2 = $r6.<android.graphics.PointF: float x>;

        $d1 = (double) f2;

        $d0 = $d0 + $d1;

        f2 = (float) $d0;

        f3 = $f4 - f0;

        $d0 = (double) f3;

        f3 = $f5 + f1;

        $r11 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f6 = virtualinvoke $r11.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f3 = f3 * $f6;

        $d1 = (double) f3;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        f3 = $r6.<android.graphics.PointF: float y>;

        $d1 = (double) f3;

        $d0 = $d0 + $d1;

        f3 = (float) $d0;

        $r12 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = virtualinvoke $r5.<com.github.mikephil.charting.data.PieDataSet: int getColor(int)>(i0);

        virtualinvoke $r12.<android.graphics.Paint: void setColor(int)>($i1);

        $r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $r12 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f2, f3, f0, $r12);

     label3:
        $r11 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f2 = virtualinvoke $r11.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        f1 = f2 * f1;

        $f5 = $f5 + f1;

        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }
    public void drawValues(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Canvas $r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        com.github.mikephil.charting.charts.PieChart $r2;
        android.graphics.PointF $r3;
        float[] $r4, $r5;
        boolean $z0, $z1;
        com.github.mikephil.charting.data.ChartData $r6;
        com.github.mikephil.charting.data.PieData r7;
        java.util.List $r8, $r11, $r17;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object $r9;
        com.github.mikephil.charting.data.PieDataSet r10;
        com.github.mikephil.charting.animation.ChartAnimator $r12;
        double $d0, $d1;
        com.github.mikephil.charting.data.Entry $r13;
        com.github.mikephil.charting.utils.ValueFormatter $r14;
        java.lang.String $r15;
        android.graphics.Paint $r16;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getRadius()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getRotationAngle()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float[] getAbsoluteAngles()>();

        $f4 = $f2 / 10.0F;

        $f4 = $f4 * 3.6F;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: boolean isDrawHoleEnabled()>();

        if $z0 == 0 goto label01;

        $f4 = $f2 / 100.0F;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        f1 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getHoleRadius()>();

        $f4 = $f4 * f1;

        $f4 = $f2 - $f4;

        $f4 = $f4 / 2.0F;

     label01:
        $f2 = $f2 - $f4;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $r6 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData getData()>();

        r7 = (com.github.mikephil.charting.data.PieData) $r6;

        $r8 = virtualinvoke r7.<com.github.mikephil.charting.data.PieData: java.util.List getDataSets()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: boolean isDrawSliceTextEnabled()>();

        i0 = 0;

        i1 = 0;

     label02:
        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 >= $i2 goto label11;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r10 = (com.github.mikephil.charting.data.PieDataSet) $r9;

        $z1 = virtualinvoke r10.<com.github.mikephil.charting.data.PieDataSet: boolean isDrawValuesEnabled()>();

        if $z1 != 0 goto label04;

        if $z0 != 0 goto label04;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.PieChartRenderer: void applyValueTextStyle(com.github.mikephil.charting.data.DataSet)>(r10);

        $r11 = virtualinvoke r10.<com.github.mikephil.charting.data.PieDataSet: java.util.List getYVals()>();

        $i2 = 0;

        $i3 = interfaceinvoke $r11.<java.util.List: int size()>();

        $f4 = (float) $i3;

        $r12 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f1 = virtualinvoke $r12.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $f4 = $f4 * f1;

        $d0 = (double) $f4;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i3 = (int) $d0;

        $i4 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

     label05:
        if $i2 >= $i3 goto label03;

        $f4 = $r4[i0];

        f1 = $f4 / 2.0F;

        $d0 = (double) $f2;

        $f4 = $r5[i0];

        $f4 = $f4 + $f3;

        $f4 = $f4 - f1;

        $r12 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f0 = virtualinvoke $r12.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $f4 = $f4 * f0;

        $d1 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $f4 = $r3.<android.graphics.PointF: float x>;

        $d1 = (double) $f4;

        $d0 = $d0 + $d1;

        $f4 = (float) $d0;

        $d0 = (double) $f2;

        f0 = $r5[i0];

        f0 = f0 + $f3;

        f1 = f0 - f1;

        $r12 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f0 = virtualinvoke $r12.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f1 = f1 * f0;

        $d1 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        f1 = $r3.<android.graphics.PointF: float y>;

        $d1 = (double) f1;

        $d0 = $d0 + $d1;

        f1 = (float) $d0;

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $z1 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: boolean isUsePercentValuesEnabled()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i2);

        $r13 = (com.github.mikephil.charting.data.Entry) $r9;

        f0 = virtualinvoke $r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: com.github.mikephil.charting.charts.PieChart mChart>;

        $f5 = virtualinvoke $r2.<com.github.mikephil.charting.charts.PieChart: float getYValueSum()>();

        f0 = f0 / $f5;

        f0 = f0 * 100.0F;

     label06:
        $r14 = virtualinvoke r10.<com.github.mikephil.charting.data.PieDataSet: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()>();

        $r15 = interfaceinvoke $r14.<com.github.mikephil.charting.utils.ValueFormatter: java.lang.String getFormattedValue(float)>(f0);

        $r16 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        $i4 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r16, $r15);

        f0 = (float) $i4;

        $f5 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(4.0F);

        f0 = f0 + $f5;

        $z1 = virtualinvoke r10.<com.github.mikephil.charting.data.PieDataSet: boolean isDrawValuesEnabled()>();

        if $z0 == 0 goto label09;

        if $z1 == 0 goto label09;

        $r16 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r15, $f4, f1, $r16);

        $i4 = virtualinvoke r7.<com.github.mikephil.charting.data.PieData: int getXValCount()>();

        if $i2 >= $i4 goto label07;

        $r17 = virtualinvoke r7.<com.github.mikephil.charting.data.PieData: java.util.List getXVals()>();

        $r9 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i2);

        $r15 = (java.lang.String) $r9;

        f1 = f1 + f0;

        $r16 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r15, $f4, f1, $r16);

     label07:
        i0 = i0 + 1;

        $i2 = $i2 + 1;

        goto label05;

     label08:
        $r9 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i2);

        $r13 = (com.github.mikephil.charting.data.Entry) $r9;

        f0 = virtualinvoke $r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        goto label06;

     label09:
        if $z0 == 0 goto label10;

        if $z1 != 0 goto label10;

        $i4 = virtualinvoke r7.<com.github.mikephil.charting.data.PieData: int getXValCount()>();

        if $i2 >= $i4 goto label07;

        $r17 = virtualinvoke r7.<com.github.mikephil.charting.data.PieData: java.util.List getXVals()>();

        $r9 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i2);

        $r15 = (java.lang.String) $r9;

        f0 = f0 / 2.0F;

        f1 = f0 + f1;

        $r16 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r15, $f4, f1, $r16);

        goto label07;

     label10:
        if $z0 != 0 goto label07;

        if $z1 == 0 goto label07;

        f0 = f0 / 2.0F;

        f1 = f0 + f1;

        $r16 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r15, $f4, f1, $r16);

        goto label07;

     label11:
        return;
    }
    public android.text.TextPaint getPaintCenterText()
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.text.TextPaint r1;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint mCenterTextPaint>;

        return r1;
    }
    public android.graphics.Paint getPaintHole()
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mHolePaint>;

        return r1;
    }
    public android.graphics.Paint getPaintTransparentCircle()
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint mTransparentCirclePaint>;

        return r1;
    }
    public void initBuffers()
    {
        com.github.mikephil.charting.renderer.PieChartRenderer r0;

        r0 := @this: com.github.mikephil.charting.renderer.PieChartRenderer;

        return;
    }
