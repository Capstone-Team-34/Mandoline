com.github.mikephil.charting.renderer.DataRenderer extends com.github.mikephil.charting.renderer.Renderer
protected com.github.mikephil.charting.animation.ChartAnimator mAnimator
protected android.graphics.Paint mDrawPaint
protected android.graphics.Paint mHighlightPaint
protected android.graphics.Paint mRenderPaint
protected android.graphics.Paint mValuePaint
    public void <init>(com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.DataRenderer r0;
        com.github.mikephil.charting.animation.ChartAnimator $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;
        int $i0;
        android.graphics.Paint$Align $r5;
        float $f0;

        r0 := @this: com.github.mikephil.charting.renderer.DataRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.animation.ChartAnimator;

        $r2 := @parameter1: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.Renderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler)>($r2);

        r0.<com.github.mikephil.charting.renderer.DataRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator> = $r1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mRenderPaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mRenderPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(4);

        r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mDrawPaint> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(63, 63, 63);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r3.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(9.0F);

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mHighlightPaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mHighlightPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mHighlightPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r3 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mHighlightPaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 187, 115);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
    protected void applyValueTextStyle(com.github.mikephil.charting.data.DataSet)
    {
        com.github.mikephil.charting.renderer.DataRenderer r0;
        com.github.mikephil.charting.data.DataSet r1;
        android.graphics.Paint $r2;
        int $i0;
        android.graphics.Typeface $r3;
        float $f0;

        r0 := @this: com.github.mikephil.charting.renderer.DataRenderer;

        r1 := @parameter0: com.github.mikephil.charting.data.DataSet;

        $r2 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $i0 = virtualinvoke r1.<com.github.mikephil.charting.data.DataSet: int getValueTextColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $r3 = virtualinvoke r1.<com.github.mikephil.charting.data.DataSet: android.graphics.Typeface getValueTypeface()>();

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);

        $r2 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        $f0 = virtualinvoke r1.<com.github.mikephil.charting.data.DataSet: float getValueTextSize()>();

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f0);

        return;
    }
public abstract void drawData(android.graphics.Canvas) { 
// no body
} 
public abstract void drawExtras(android.graphics.Canvas) { 
// no body
} 
public abstract void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[]) { 
// no body
} 
public abstract void drawValues(android.graphics.Canvas) { 
// no body
} 
    public android.graphics.Paint getPaintHighlight()
    {
        com.github.mikephil.charting.renderer.DataRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.DataRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mHighlightPaint>;

        return r1;
    }
    public android.graphics.Paint getPaintRender()
    {
        com.github.mikephil.charting.renderer.DataRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.DataRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mRenderPaint>;

        return r1;
    }
    public android.graphics.Paint getPaintValues()
    {
        com.github.mikephil.charting.renderer.DataRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.DataRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.DataRenderer: android.graphics.Paint mValuePaint>;

        return r1;
    }
public abstract void initBuffers() { 
// no body
} 
