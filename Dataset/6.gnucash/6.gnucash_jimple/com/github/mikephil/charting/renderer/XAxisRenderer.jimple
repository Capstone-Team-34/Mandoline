com.github.mikephil.charting.renderer.XAxisRenderer extends com.github.mikephil.charting.renderer.AxisRenderer
protected com.github.mikephil.charting.components.XAxis mXAxis
    public void <init>(com.github.mikephil.charting.utils.ViewPortHandler, com.github.mikephil.charting.components.XAxis, com.github.mikephil.charting.utils.Transformer)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        com.github.mikephil.charting.components.XAxis $r2;
        com.github.mikephil.charting.utils.Transformer $r3;
        float $f0;
        android.graphics.Paint $r4;
        android.graphics.Paint$Align $r5;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ViewPortHandler;

        $r2 := @parameter1: com.github.mikephil.charting.components.XAxis;

        $r3 := @parameter2: com.github.mikephil.charting.utils.Transformer;

        specialinvoke r0.<com.github.mikephil.charting.renderer.AxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.utils.Transformer)>($r1, $r3);

        r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis> = $r2;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r5 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r5);

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        return;
    }
    public void computeAxis(float, java.util.List)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        float $f0, $f1;
        java.util.List r1;
        java.lang.StringBuffer r2;
        android.graphics.Paint $r3;
        com.github.mikephil.charting.components.XAxis $r4;
        android.graphics.Typeface $r5;
        int $i0, i1;
        java.lang.String $r6;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $f0 := @parameter0: float;

        r1 := @parameter1: java.util.List;

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: float getTextSize()>();

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f1);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: int getSpaceBetweenLabels()>();

        $f1 = (float) $i0;

        $f0 = $f1 + $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("h");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r3, $r6);

        $r4.<com.github.mikephil.charting.components.XAxis: int mLabelWidth> = $i0;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r3, "Q");

        $r4.<com.github.mikephil.charting.components.XAxis: int mLabelHeight> = $i0;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: void setValues(java.util.List)>(r1);

        return;
    }
    protected void drawLabels(android.graphics.Canvas, float)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3;
        float[] r2;
        int i0, $i1;
        com.github.mikephil.charting.utils.Transformer $r3;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        boolean $z0;
        com.github.mikephil.charting.components.XAxis $r5;
        java.util.List $r6;
        java.lang.Object $r7;
        java.lang.String r8;
        android.graphics.Paint $r9;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        r2 = newarray (float)[2];

        r2[0] = 0.0F;

        r2[1] = 0.0F;

        i0 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: int mMinX>;

     label1:
        $i1 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: int mMaxX>;

        if i0 > $i1 goto label5;

        $f1 = (float) i0;

        r2[0] = $f1;

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r2);

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = r2[0];

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsX(float)>($f1);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (java.lang.String) $r7;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.XAxis: boolean isAvoidFirstLastClippingEnabled()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if i0 != $i1 goto label4;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 <= 1 goto label4;

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $i1 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r9, r8);

        $f1 = (float) $i1;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetRight()>();

        $f2 = $f2 * 2.0F;

        $b2 = $f1 cmpl $f2;

        if $b2 <= 0 goto label2;

        $f2 = r2[0];

        $f2 = $f2 + $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        $b2 = $f2 cmpl $f3;

        if $b2 <= 0 goto label2;

        $f2 = r2[0];

        $f1 = $f1 / 2.0F;

        $f1 = $f2 - $f1;

        r2[0] = $f1;

     label2:
        $f1 = r2[0];

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r8, $f1, $f0, $r9);

     label3:
        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i1 = $r5.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        i0 = i0 + $i1;

        goto label1;

     label4:
        if i0 != 0 goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $i1 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r9, r8);

        $f2 = (float) $i1;

        $f1 = r2[0];

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        r2[0] = $f1;

        goto label2;

     label5:
        return;
    }
    public void renderAxisLabels(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.components.XAxis $r2;
        boolean $z0;
        float $f0, $f1, $f2;
        android.graphics.Paint $r3;
        android.graphics.Typeface $r4;
        int $i0;
        com.github.mikephil.charting.components.XAxis$XAxisPosition $r5, $r6;
        com.github.mikephil.charting.utils.ViewPortHandler $r7;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 == 0 goto label6;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isDrawLabelsEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(4.0F);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r4);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: float getTextSize()>();

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: int getTextColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r6 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition TOP>;

        if $r5 != $r6 goto label2;

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetTop()>();

        $f0 = $f1 - $f0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f0);

        return;

     label2:
        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r6 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM>;

        if $r5 != $r6 goto label3;

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelHeight>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f0 = 1.5F * $f0;

        $f0 = $f1 + $f0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f0);

        return;

     label3:
        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r6 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM_INSIDE>;

        if $r5 != $r6 goto label4;

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $f0 = $f1 - $f0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f0);

        return;

     label4:
        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r6 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition TOP_INSIDE>;

        if $r5 != $r6 goto label5;

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetTop()>();

        $f0 = $f1 + $f0;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelHeight>;

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f0);

        return;

     label5:
        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetTop()>();

        $f1 = $f1 - $f0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f1);

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r7.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelHeight>;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $f0 = 1.6F * $f0;

        $f0 = $f1 + $f0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void drawLabels(android.graphics.Canvas,float)>($r1, $f0);

     label6:
        return;
    }
    public void renderAxisLine(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.components.XAxis $r2;
        boolean $z0;
        android.graphics.Paint $r3;
        int $i0;
        float $f0, $f1, $f2, $f3;
        com.github.mikephil.charting.components.XAxis$XAxisPosition $r4, $r5;
        com.github.mikephil.charting.utils.ViewPortHandler $r6;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isDrawAxisLineEnabled()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: int getAxisLineColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: float getAxisLineWidth()>();

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition TOP>;

        if $r4 == $r5 goto label2;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition TOP_INSIDE>;

        if $r4 == $r5 goto label2;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTH_SIDED>;

        if $r4 != $r5 goto label3;

     label2:
        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

     label3:
        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM>;

        if $r4 == $r5 goto label4;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM_INSIDE>;

        if $r4 == $r5 goto label4;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTH_SIDED>;

        if $r4 != $r5 goto label5;

     label4:
        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

     label5:
        return;
    }
    public void renderGridLines(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Path r2;
        float[] r3;
        com.github.mikephil.charting.components.XAxis $r4;
        boolean $z0;
        android.graphics.Paint $r5;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.DashPathEffect $r6;
        com.github.mikephil.charting.utils.Transformer $r7;
        com.github.mikephil.charting.utils.ViewPortHandler $r8;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: boolean isDrawGridLinesEnabled()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = newarray (float)[2];

        r3[0] = 0.0F;

        r3[1] = 0.0F;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: int getGridColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $f0 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: float getGridLineWidth()>();

        virtualinvoke $r5.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: android.graphics.DashPathEffect getGridDashPathEffect()>();

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r6);

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $i0 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: int mMinX>;

     label2:
        $i1 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: int mMaxX>;

        if $i0 > $i1 goto label4;

        $f0 = (float) $i0;

        r3[0] = $f0;

        $r7 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r7.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $f0 = r3[0];

        $r8 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r8.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $b2 = $f0 cmpl $f1;

        if $b2 < 0 goto label3;

        $f0 = r3[0];

        $r8 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r8.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        $b2 = $f0 cmpg $f1;

        if $b2 > 0 goto label3;

        $f0 = r3[0];

        $r8 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r8.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $f0 = r3[0];

        $r8 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r8.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mGridPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r2, $r5);

     label3:
        virtualinvoke r2.<android.graphics.Path: void reset()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i1 = $r4.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        $i0 = $i0 + $i1;

        goto label2;

     label4:
        return;
    }
    public void renderLimitLines(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Path r2;
        float[] r3;
        float f0, $f1, $f2, $f3;
        com.github.mikephil.charting.components.XAxis $r4;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        com.github.mikephil.charting.components.LimitLine r7;
        com.github.mikephil.charting.utils.Transformer $r8;
        com.github.mikephil.charting.utils.ViewPortHandler $r9;
        android.graphics.Paint $r10;
        android.graphics.Paint$Style $r11;
        android.graphics.DashPathEffect $r12;
        java.lang.String $r13;
        boolean $z0;
        com.github.mikephil.charting.components.LimitLine$LimitLabelPosition $r14, $r15;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: java.util.List getLimitLines()>();

        if $r5 == null goto label5;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        return;

     label1:
        r3 = newarray (float)[4];

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (com.github.mikephil.charting.components.LimitLine) $r6;

        $f1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLimit()>();

        r3[0] = $f1;

        $f1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLimit()>();

        r3[2] = $f1;

        $r8 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r8.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        r3[1] = $f1;

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        r3[3] = $f1;

        $f1 = r3[0];

        $f2 = r3[1];

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f1, $f2);

        $f1 = r3[2];

        $f2 = r3[3];

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f1, $f2);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: int getLineColor()>();

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i1);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $f1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLineWidth()>();

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>($f1);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r12 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: android.graphics.DashPathEffect getDashPathEffect()>();

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r12);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r2, $r10);

        virtualinvoke r2.<android.graphics.Path: void reset()>();

        $r13 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: java.lang.String getLabel()>();

        if $r13 == null goto label3;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

        $f2 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLineWidth()>();

        $f1 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(4.0F);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r11 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: android.graphics.Paint$Style getTextStyle()>();

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: int getTextColor()>();

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i1);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>(0.5F);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        f0 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getTextSize()>();

        virtualinvoke $r10.<android.graphics.Paint: void setTextSize(float)>(f0);

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r10, $r13);

        f0 = (float) $i1;

        $f3 = $f1 / 2.0F;

        f0 = f0 + $f3;

        $r14 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition getLabelPosition()>();

        $r15 = <com.github.mikephil.charting.components.LimitLine$LimitLabelPosition: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition POS_RIGHT>;

        if $r14 != $r15 goto label4;

        f0 = r3[0];

        $f2 = f0 + $f2;

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $f1 = f0 - $f1;

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f2, $f1, $r10);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $f1 = r3[0];

        $f1 = $f1 + $f2;

        $r9 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $f2 = $f2 + f0;

        $r10 = r0.<com.github.mikephil.charting.renderer.XAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f1, $f2, $r10);

        goto label3;

     label5:
        return;
    }
