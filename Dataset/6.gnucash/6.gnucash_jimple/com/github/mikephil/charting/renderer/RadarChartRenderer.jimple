com.github.mikephil.charting.renderer.RadarChartRenderer extends com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer
protected com.github.mikephil.charting.charts.RadarChart mChart
protected android.graphics.Paint mWebPaint
    public void <init>(com.github.mikephil.charting.charts.RadarChart, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        com.github.mikephil.charting.charts.RadarChart $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        int $i0;
        android.graphics.Paint $r4;
        android.graphics.Paint$Style $r5;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.charts.RadarChart;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer: void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r2, $r3);

        r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart> = $r1;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint> = $r4;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 187, 115);

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint> = $r4;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        return;
    }
    public void drawData(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.charts.RadarChart $r2;
        com.github.mikephil.charting.data.ChartData $r3;
        com.github.mikephil.charting.data.RadarData r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.github.mikephil.charting.data.RadarDataSet r8;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        r4 = (com.github.mikephil.charting.data.RadarData) $r3;

        $r5 = virtualinvoke r4.<com.github.mikephil.charting.data.RadarData: java.util.List getDataSets()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.github.mikephil.charting.data.RadarDataSet) $r7;

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.RadarDataSet: boolean isVisible()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.RadarDataSet)>($r1, r8);

        goto label1;

     label2:
        return;
    }
    protected void drawDataSet(android.graphics.Canvas, com.github.mikephil.charting.data.RadarDataSet)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.RadarDataSet $r2;
        android.graphics.Path r3;
        com.github.mikephil.charting.charts.RadarChart $r4;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.PointF $r5, $r10;
        java.util.List $r6;
        boolean z0, $z1;
        int i0, $i1;
        android.graphics.Paint $r7;
        java.lang.Object $r8;
        com.github.mikephil.charting.data.Entry r9;
        android.graphics.Paint$Style $r11;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.RadarDataSet;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f0 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        $r6 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: java.util.List getYVals()>();

        r3 = new android.graphics.Path;

        specialinvoke r3.<android.graphics.Path: void <init>()>();

        z0 = 0;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i0 >= $i1 goto label5;

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: int getColor(int)>(i0);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i1);

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r9 = (com.github.mikephil.charting.data.Entry) $r8;

        $f2 = virtualinvoke r9.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f3 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getYChartMin()>();

        $f2 = $f2 - $f3;

        $f2 = $f2 * $f1;

        $f3 = (float) i0;

        $f3 = $f3 * $f0;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f4 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        $f3 = $f3 + $f4;

        $r10 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r5, $f2, $f3);

        $f2 = $r10.<android.graphics.PointF: float x>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z1 == 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $f2 = $r10.<android.graphics.PointF: float x>;

        $f3 = $r10.<android.graphics.PointF: float y>;

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>($f2, $f3);

        z0 = 1;

        goto label2;

     label4:
        $f2 = $r10.<android.graphics.PointF: float x>;

        $f3 = $r10.<android.graphics.PointF: float y>;

        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>($f2, $f3);

        goto label2;

     label5:
        virtualinvoke r3.<android.graphics.Path: void close()>();

        z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: boolean isDrawFilledEnabled()>();

        if z0 == 0 goto label6;

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: int getFillAlpha()>();

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(i0);

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, $r7);

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(255);

     label6:
        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: float getLineWidth()>();

        virtualinvoke $r7.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: boolean isDrawFilledEnabled()>();

        if z0 == 0 goto label7;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarDataSet: int getFillAlpha()>();

        if i0 >= 255 goto label8;

     label7:
        $r7 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, $r7);

     label8:
        return;
    }
    public void drawExtras(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: void drawWeb(android.graphics.Canvas)>($r1);

        return;
    }
    public void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        float[] r3;
        float f0, $f1, $f2, $f3, $f4;
        com.github.mikephil.charting.charts.RadarChart $r4;
        android.graphics.PointF $r5, $r13;
        int i0, $i1, $i2;
        com.github.mikephil.charting.data.ChartData $r6;
        com.github.mikephil.charting.data.RadarData $r7;
        com.github.mikephil.charting.highlight.Highlight $r8;
        com.github.mikephil.charting.data.DataSet $r9;
        com.github.mikephil.charting.data.RadarDataSet r10;
        boolean $z0, $z1;
        android.graphics.Paint $r11;
        com.github.mikephil.charting.data.Entry $r12;
        com.github.mikephil.charting.utils.ViewPortHandler $r14;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight[];

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r7 = (com.github.mikephil.charting.data.RadarData) $r6;

        $r8 = $r2[i0];

        $i1 = virtualinvoke $r8.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $r9 = virtualinvoke $r7.<com.github.mikephil.charting.data.RadarData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i1);

        r10 = (com.github.mikephil.charting.data.RadarDataSet) $r9;

        if r10 == null goto label2;

        $z0 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: boolean isHighlightEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r11 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint>;

        $i1 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: int getHighLightColor()>();

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i1);

        $r11 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mHighlightPaint>;

        f0 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: float getHighlightLineWidth()>();

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r8 = $r2[i0];

        $i1 = virtualinvoke $r8.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        $r12 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i1);

        if $r12 == null goto label2;

        $i2 = virtualinvoke $r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        if $i2 != $i1 goto label2;

        $i1 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r12);

        f0 = virtualinvoke $r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f3 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getYChartMin()>();

        f0 = f0 - $f3;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label2;

        f0 = f0 * $f2;

        $f3 = (float) $i1;

        $f3 = $f3 * $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f4 = virtualinvoke $r4.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        $f3 = $f3 + $f4;

        $r13 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r5, f0, $f3);

        r3 = newarray (float)[8];

        f0 = $r13.<android.graphics.PointF: float x>;

        r3[0] = f0;

        r3[1] = 0.0F;

        f0 = $r13.<android.graphics.PointF: float x>;

        r3[2] = f0;

        $r14 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r14.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartHeight()>();

        r3[3] = f0;

        r3[4] = 0.0F;

        f0 = $r13.<android.graphics.PointF: float y>;

        r3[5] = f0;

        $r14 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r14.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        r3[6] = f0;

        f0 = $r13.<android.graphics.PointF: float y>;

        r3[7] = f0;

        $z0 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: boolean isHorizontalHighlightIndicatorEnabled()>();

        $z1 = virtualinvoke r10.<com.github.mikephil.charting.data.RadarDataSet: boolean isVerticalHighlightIndicatorEnabled()>();

        virtualinvoke r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: void drawHighlightLines(android.graphics.Canvas,float[],boolean,boolean)>($r1, r3, $z0, $z1);

        goto label2;

     label4:
        return;
    }
    public void drawValues(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.github.mikephil.charting.charts.RadarChart $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.PointF $r4, $r12;
        int i0, $i1, $i2;
        com.github.mikephil.charting.data.ChartData $r5;
        com.github.mikephil.charting.data.RadarData $r6;
        com.github.mikephil.charting.data.DataSet $r7;
        com.github.mikephil.charting.data.RadarDataSet r8;
        boolean $z0;
        java.util.List $r9;
        java.lang.Object $r10;
        com.github.mikephil.charting.data.Entry r11;
        com.github.mikephil.charting.utils.ValueFormatter $r13;
        java.lang.String $r14;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f0 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        $f2 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        i0 = 0;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: int getDataSetCount()>();

        if i0 >= $i1 goto label5;

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>(i0);

        r8 = (com.github.mikephil.charting.data.RadarDataSet) $r7;

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.RadarDataSet: boolean isDrawValuesEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: void applyValueTextStyle(com.github.mikephil.charting.data.DataSet)>(r8);

        $r9 = virtualinvoke r8.<com.github.mikephil.charting.data.RadarDataSet: java.util.List getYVals()>();

        $i1 = 0;

     label4:
        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        r11 = (com.github.mikephil.charting.data.Entry) $r10;

        $f3 = virtualinvoke r11.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f4 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: float getYChartMin()>();

        $f3 = $f3 - $f4;

        $f3 = $f3 * $f1;

        $f4 = (float) $i1;

        $f4 = $f4 * $f0;

        $r3 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f5 = virtualinvoke $r3.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        $f4 = $f4 + $f5;

        $r12 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r4, $f3, $f4);

        $r13 = virtualinvoke r8.<com.github.mikephil.charting.data.RadarDataSet: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()>();

        $f3 = virtualinvoke r11.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r14 = interfaceinvoke $r13.<com.github.mikephil.charting.utils.ValueFormatter: java.lang.String getFormattedValue(float)>($f3);

        $f3 = $r12.<android.graphics.PointF: float x>;

        $f4 = $r12.<android.graphics.PointF: float y>;

        $f4 = $f4 - $f2;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r14, $f3, $f4, $r2);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }
    protected void drawWeb(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Canvas $r1;
        int i0, $i1, i2, $i3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        com.github.mikephil.charting.charts.RadarChart $r2;
        android.graphics.PointF $r3, $r7, $r10;
        android.graphics.Paint $r4;
        com.github.mikephil.charting.data.ChartData $r5;
        com.github.mikephil.charting.data.RadarData $r6;
        com.github.mikephil.charting.components.YAxis $r8;
        float[] $r9;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        f0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getWebLineWidth()>();

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: int getWebColor()>();

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: int getWebAlpha()>();

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(i0);

        i0 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: int getXValCount()>();

        if i0 >= $i1 goto label2;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        f0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getYRange()>();

        f0 = f0 * $f2;

        $f4 = (float) i0;

        $f4 = $f4 * $f1;

        $f4 = $f4 + $f3;

        $r7 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r3, f0, $f4);

        f0 = $r3.<android.graphics.PointF: float x>;

        $f4 = $r3.<android.graphics.PointF: float y>;

        $f5 = $r7.<android.graphics.PointF: float x>;

        $f6 = $r7.<android.graphics.PointF: float y>;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f0, $f4, $f5, $f6, $r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        f0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getWebLineWidthInner()>();

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: int getWebColorInner()>();

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        i0 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: int getWebAlpha()>();

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(i0);

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r8 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis getYAxis()>();

        i0 = $r8.<com.github.mikephil.charting.components.YAxis: int mEntryCount>;

        $i1 = 0;

     label3:
        if $i1 >= i0 goto label6;

        i2 = 0;

     label4:
        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData getData()>();

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $i3 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: int getXValCount()>();

        if i2 >= $i3 goto label5;

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r8 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis getYAxis()>();

        $r9 = $r8.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        f0 = $r9[$i1];

        $r2 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f4 = virtualinvoke $r2.<com.github.mikephil.charting.charts.RadarChart: float getYChartMin()>();

        f0 = f0 - $f4;

        f0 = f0 * $f2;

        $f4 = (float) i2;

        $f4 = $f4 * $f1;

        $f4 = $f4 + $f3;

        $r7 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r3, f0, $f4);

        $i3 = i2 + 1;

        $f4 = (float) $i3;

        $f4 = $f4 * $f1;

        $f4 = $f4 + $f3;

        $r10 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r3, f0, $f4);

        f0 = $r7.<android.graphics.PointF: float x>;

        $f4 = $r7.<android.graphics.PointF: float y>;

        $f5 = $r10.<android.graphics.PointF: float x>;

        $f6 = $r10.<android.graphics.PointF: float y>;

        $r4 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f0, $f4, $f5, $f6, $r4);

        i2 = i2 + 1;

        goto label4;

     label5:
        $i1 = $i1 + 1;

        goto label3;

     label6:
        return;
    }
    public android.graphics.Paint getWebPaint()
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.RadarChartRenderer: android.graphics.Paint mWebPaint>;

        return r1;
    }
    public void initBuffers()
    {
        com.github.mikephil.charting.renderer.RadarChartRenderer r0;

        r0 := @this: com.github.mikephil.charting.renderer.RadarChartRenderer;

        return;
    }
