com.github.mikephil.charting.renderer.CombinedChartRenderer extends com.github.mikephil.charting.renderer.DataRenderer
protected java.util.List mRenderers
    public void <init>(com.github.mikephil.charting.charts.CombinedChart, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        com.github.mikephil.charting.charts.CombinedChart $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.charts.CombinedChart;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.DataRenderer: void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r2, $r3);

        virtualinvoke r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: void createRenderers(com.github.mikephil.charting.charts.CombinedChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        return;
    }
    public void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider, int)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider $r1;
        int $i0;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.github.mikephil.charting.renderer.DataRenderer r5;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider;

        $i0 := @parameter1: int;

        $r2 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.github.mikephil.charting.renderer.DataRenderer) $r4;

        virtualinvoke r5.<com.github.mikephil.charting.renderer.DataRenderer: void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider,int)>($r1, $i0);

        goto label1;

     label2:
        return;
    }
    protected void createRenderers(com.github.mikephil.charting.charts.CombinedChart, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        com.github.mikephil.charting.charts.CombinedChart $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        int i0, i1, $i2;
        com.github.mikephil.charting.charts.CombinedChart$DrawOrder r4;
        java.util.ArrayList $r5;
        com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] $r6;
        int[] $r7;
        com.github.mikephil.charting.data.BarData $r8;
        java.util.List $r9;
        com.github.mikephil.charting.renderer.BarChartRenderer $r10;
        com.github.mikephil.charting.data.BubbleData $r11;
        com.github.mikephil.charting.renderer.BubbleChartRenderer $r12;
        com.github.mikephil.charting.data.LineData $r13;
        com.github.mikephil.charting.renderer.LineChartRenderer $r14;
        com.github.mikephil.charting.data.CandleData $r15;
        com.github.mikephil.charting.renderer.CandleStickChartRenderer $r16;
        com.github.mikephil.charting.data.ScatterData $r17;
        com.github.mikephil.charting.renderer.ScatterChartRenderer $r18;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.charts.CombinedChart;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers> = $r5;

        $r6 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] getDrawOrder()>();

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r4 = $r6[i1];

        $r7 = <com.github.mikephil.charting.renderer.CombinedChartRenderer$1: int[] $SwitchMap$com$github$mikephil$charting$charts$CombinedChart$DrawOrder>;

        $i2 = virtualinvoke r4.<com.github.mikephil.charting.charts.CombinedChart$DrawOrder: int ordinal()>();

        $i2 = $r7[$i2];

        lookupswitch($i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r8 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.BarData getBarData()>();

        if $r8 == null goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r10 = new com.github.mikephil.charting.renderer.BarChartRenderer;

        specialinvoke $r10.<com.github.mikephil.charting.renderer.BarChartRenderer: void <init>(com.github.mikephil.charting.interfaces.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label4:
        $r11 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.BubbleData getBubbleData()>();

        if $r11 == null goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r12 = new com.github.mikephil.charting.renderer.BubbleChartRenderer;

        specialinvoke $r12.<com.github.mikephil.charting.renderer.BubbleChartRenderer: void <init>(com.github.mikephil.charting.interfaces.BubbleDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label2;

     label5:
        $r13 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.LineData getLineData()>();

        if $r13 == null goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r14 = new com.github.mikephil.charting.renderer.LineChartRenderer;

        specialinvoke $r14.<com.github.mikephil.charting.renderer.LineChartRenderer: void <init>(com.github.mikephil.charting.interfaces.LineDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label2;

     label6:
        $r15 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.CandleData getCandleData()>();

        if $r15 == null goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r16 = new com.github.mikephil.charting.renderer.CandleStickChartRenderer;

        specialinvoke $r16.<com.github.mikephil.charting.renderer.CandleStickChartRenderer: void <init>(com.github.mikephil.charting.interfaces.CandleDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label2;

     label7:
        $r17 = virtualinvoke $r1.<com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.ScatterData getScatterData()>();

        if $r17 == null goto label2;

        $r9 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r18 = new com.github.mikephil.charting.renderer.ScatterChartRenderer;

        specialinvoke $r18.<com.github.mikephil.charting.renderer.ScatterChartRenderer: void <init>(com.github.mikephil.charting.interfaces.ScatterDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r1, $r2, $r3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label8:
        return;
    }
    public void drawData(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        android.graphics.Canvas $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.github.mikephil.charting.renderer.DataRenderer r5;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.github.mikephil.charting.renderer.DataRenderer) $r4;

        virtualinvoke r5.<com.github.mikephil.charting.renderer.DataRenderer: void drawData(android.graphics.Canvas)>($r1);

        goto label1;

     label2:
        return;
    }
    public void drawExtras(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        android.graphics.Canvas $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.github.mikephil.charting.renderer.DataRenderer r5;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.github.mikephil.charting.renderer.DataRenderer) $r4;

        virtualinvoke r5.<com.github.mikephil.charting.renderer.DataRenderer: void drawExtras(android.graphics.Canvas)>($r1);

        goto label1;

     label2:
        return;
    }
    public void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.github.mikephil.charting.renderer.DataRenderer r6;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight[];

        $r3 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.github.mikephil.charting.renderer.DataRenderer) $r5;

        virtualinvoke r6.<com.github.mikephil.charting.renderer.DataRenderer: void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])>($r1, $r2);

        goto label1;

     label2:
        return;
    }
    public void drawValues(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        android.graphics.Canvas $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.github.mikephil.charting.renderer.DataRenderer r5;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.github.mikephil.charting.renderer.DataRenderer) $r4;

        virtualinvoke r5.<com.github.mikephil.charting.renderer.DataRenderer: void drawValues(android.graphics.Canvas)>($r1);

        goto label1;

     label2:
        return;
    }
    public com.github.mikephil.charting.renderer.DataRenderer getSubRenderer(int)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        com.github.mikephil.charting.renderer.DataRenderer $r3;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.github.mikephil.charting.renderer.DataRenderer) $r2;

        return $r3;
    }
    public java.util.List getSubRenderers()
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        java.util.List r1;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        return r1;
    }
    public void initBuffers()
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.github.mikephil.charting.renderer.DataRenderer r4;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        $r1 = r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.github.mikephil.charting.renderer.DataRenderer) $r3;

        virtualinvoke r4.<com.github.mikephil.charting.renderer.DataRenderer: void initBuffers()>();

        goto label1;

     label2:
        return;
    }
    public void setSubRenderers(java.util.List)
    {
        com.github.mikephil.charting.renderer.CombinedChartRenderer r0;
        java.util.List r1;

        r0 := @this: com.github.mikephil.charting.renderer.CombinedChartRenderer;

        r1 := @parameter0: java.util.List;

        r0.<com.github.mikephil.charting.renderer.CombinedChartRenderer: java.util.List mRenderers> = r1;

        return;
    }
