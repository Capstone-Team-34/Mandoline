com.github.mikephil.charting.renderer.XAxisRendererRadarChart extends com.github.mikephil.charting.renderer.XAxisRenderer
private com.github.mikephil.charting.charts.RadarChart mChart
    public void <init>(com.github.mikephil.charting.utils.ViewPortHandler, com.github.mikephil.charting.components.XAxis, com.github.mikephil.charting.charts.RadarChart)
    {
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        com.github.mikephil.charting.components.XAxis $r2;
        com.github.mikephil.charting.charts.RadarChart $r3;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRendererRadarChart;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ViewPortHandler;

        $r2 := @parameter1: com.github.mikephil.charting.components.XAxis;

        $r3 := @parameter2: com.github.mikephil.charting.charts.RadarChart;

        specialinvoke r0.<com.github.mikephil.charting.renderer.XAxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer)>($r1, $r2, null);

        r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart> = $r3;

        return;
    }
    public void renderAxisLabels(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart r0;
        android.graphics.Canvas $r1;
        float f0, $f1, $f2, $f3, $f4;
        com.github.mikephil.charting.components.XAxis $r2;
        boolean $z0;
        android.graphics.Paint $r3;
        android.graphics.Typeface $r4;
        int $i0, $i1;
        com.github.mikephil.charting.charts.RadarChart $r5;
        android.graphics.PointF $r6, $r10;
        java.util.List $r7;
        java.lang.Object $r8;
        java.lang.String r9;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRendererRadarChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isDrawLabelsEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r4);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: float getTextSize()>();

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: android.graphics.Paint mAxisLabelPaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: int getTextColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f1 = virtualinvoke $r5.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f2 = virtualinvoke $r5.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart>;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        $i0 = 0;

     label2:
        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r7 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r7 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        r9 = (java.lang.String) $r8;

        f0 = (float) $i0;

        f0 = f0 * $f1;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f3 = virtualinvoke $r5.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        f0 = f0 + $f3;

        f0 = f0 % 360.0F;

        $r5 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.charts.RadarChart mChart>;

        $f3 = virtualinvoke $r5.<com.github.mikephil.charting.charts.RadarChart: float getYRange()>();

        $f3 = $f3 * $f2;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i1 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelWidth>;

        $f4 = (float) $i1;

        $f4 = $f4 / 2.0F;

        $f3 = $f3 + $f4;

        $r10 = staticinvoke <com.github.mikephil.charting.utils.Utils: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r6, $f3, f0);

        f0 = $r10.<android.graphics.PointF: float x>;

        $f3 = $r10.<android.graphics.PointF: float y>;

        $r2 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i1 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelHeight>;

        $f4 = (float) $i1;

        $f4 = $f4 / 2.0F;

        $f3 = $f3 + $f4;

        $r3 = r0.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: android.graphics.Paint mAxisLabelPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r9, f0, $f3, $r3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
    public void renderLimitLines(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.github.mikephil.charting.renderer.XAxisRendererRadarChart;

        $r1 := @parameter0: android.graphics.Canvas;

        return;
    }
