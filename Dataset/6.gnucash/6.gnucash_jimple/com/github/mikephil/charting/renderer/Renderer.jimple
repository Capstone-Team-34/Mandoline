com.github.mikephil.charting.renderer.Renderer extends java.lang.Object
protected int mMaxX
protected int mMinX
protected com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler
    public void <init>(com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.Renderer r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.renderer.Renderer;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.Renderer: int mMinX> = 0;

        r0.<com.github.mikephil.charting.renderer.Renderer: int mMaxX> = 0;

        r0.<com.github.mikephil.charting.renderer.Renderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler> = $r1;

        return;
    }
    public void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider, int)
    {
        com.github.mikephil.charting.renderer.Renderer r0;
        com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;

        r0 := @this: com.github.mikephil.charting.renderer.Renderer;

        $r1 := @parameter0: com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r1.<com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider: int getLowestVisibleXIndex()>();

        $i2 = interfaceinvoke $r1.<com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider: int getHighestVisibleXIndex()>();

        $i3 = $i1 % $i0;

        if $i3 != 0 goto label2;

        $i3 = $i0;

     label1:
        $i1 = $i1 / $i0;

        $i1 = $i1 * $i0;

        $i3 = $i1 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        r0.<com.github.mikephil.charting.renderer.Renderer: int mMinX> = $i3;

        $i2 = $i2 / $i0;

        $i2 = $i2 * $i0;

        $i0 = $i2 + $i0;

        $f0 = interfaceinvoke $r1.<com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider: float getXChartMax()>();

        $i2 = (int) $f0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        r0.<com.github.mikephil.charting.renderer.Renderer: int mMaxX> = $i0;

        return;

     label2:
        $i3 = 0;

        goto label1;
    }
    protected boolean fitsBounds(float, float, float)
    {
        com.github.mikephil.charting.renderer.Renderer r0;
        float $f0, $f1, $f2;
        byte $b0;

        r0 := @this: com.github.mikephil.charting.renderer.Renderer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $b0 = $f0 cmpg $f1;

        if $b0 < 0 goto label1;

        $b0 = $f0 cmpl $f2;

        if $b0 <= 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
