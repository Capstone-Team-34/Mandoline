com.github.mikephil.charting.renderer.YAxisRenderer extends com.github.mikephil.charting.renderer.AxisRenderer
protected com.github.mikephil.charting.components.YAxis mYAxis
    public void <init>(com.github.mikephil.charting.utils.ViewPortHandler, com.github.mikephil.charting.components.YAxis, com.github.mikephil.charting.utils.Transformer)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        com.github.mikephil.charting.components.YAxis $r2;
        com.github.mikephil.charting.utils.Transformer $r3;
        float $f0;
        android.graphics.Paint $r4;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ViewPortHandler;

        $r2 := @parameter1: com.github.mikephil.charting.components.YAxis;

        $r3 := @parameter2: com.github.mikephil.charting.utils.Transformer;

        specialinvoke r0.<com.github.mikephil.charting.renderer.AxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.utils.Transformer)>($r1, $r3);

        r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis> = $r2;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        return;
    }
    public void computeAxis(float, float)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        float $f0, $f1, $f2;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        byte $b0;
        boolean $z0;
        com.github.mikephil.charting.utils.Transformer $r2;
        com.github.mikephil.charting.utils.PointD $r3, $r4;
        com.github.mikephil.charting.components.YAxis $r5;
        double $d0;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float contentWidth()>();

        $b0 = $f2 cmpl 10.0F;

        if $b0 <= 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isFullyZoomedOutY()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.utils.Transformer: com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float,float)>($f0, $f1);

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.utils.Transformer: com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float,float)>($f0, $f1);

        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        if $z0 != 0 goto label2;

        $d0 = $r4.<com.github.mikephil.charting.utils.PointD: double y>;

        $f0 = (float) $d0;

        $d0 = $r3.<com.github.mikephil.charting.utils.PointD: double y>;

        $f1 = (float) $d0;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.YAxisRenderer: void computeAxisValues(float,float)>($f0, $f1);

        return;

     label2:
        $d0 = $r3.<com.github.mikephil.charting.utils.PointD: double y>;

        $f0 = (float) $d0;

        $d0 = $r4.<com.github.mikephil.charting.utils.PointD: double y>;

        $f1 = (float) $d0;

        goto label1;
    }
    protected void computeAxisValues(float, float)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        float $f0, $f1, $f2;
        double d0, d1, $d2, $d3;
        int i0, $i1;
        com.github.mikephil.charting.components.YAxis $r1;
        byte $b2;
        float[] $r2;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: int getLabelCount()>();

        $f2 = $f1 - $f0;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        d0 = (double) $f2;

        if $i1 == 0 goto label01;

        $b2 = d0 cmpg 0.0;

        if $b2 > 0 goto label02;

     label01:
        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = newarray (float)[0];

        $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r2;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r1.<com.github.mikephil.charting.components.YAxis: int mEntryCount> = 0;

        return;

     label02:
        d1 = (double) $i1;

        d1 = d0 / d1;

        $f2 = staticinvoke <com.github.mikephil.charting.utils.Utils: float roundToNextSignificant(double)>(d1);

        d1 = (double) $f2;

        $d2 = staticinvoke <java.lang.Math: double log10(double)>(d1);

        i0 = (int) $d2;

        $d2 = (double) i0;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d2);

        $d3 = d1 / $d2;

        i0 = (int) $d3;

        if i0 <= 5 goto label03;

        d1 = 10.0 * $d2;

        d1 = staticinvoke <java.lang.Math: double floor(double)>(d1);

     label03:
        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: boolean isForceLabelsEnabled()>();

        if $z0 == 0 goto label06;

        $f1 = (float) d0;

        i0 = $i1 + -1;

        $f2 = (float) i0;

        $f1 = $f1 / $f2;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r1.<com.github.mikephil.charting.components.YAxis: int mEntryCount> = $i1;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        i0 = lengthof $r2;

        if i0 >= $i1 goto label04;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = newarray (float)[$i1];

        $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r2;

     label04:
        i0 = 0;

     label05:
        if i0 >= $i1 goto label07;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $r2[i0] = $f0;

        $f0 = $f0 + $f1;

        i0 = i0 + 1;

        goto label05;

     label06:
        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: boolean isShowOnlyMinMaxEnabled()>();

        if $z0 == 0 goto label08;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r1.<com.github.mikephil.charting.components.YAxis: int mEntryCount> = 2;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = newarray (float)[2];

        $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r2;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $r2[0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $r2[1] = $f1;

     label07:
        $b2 = d1 cmpg 1.0;

        if $b2 >= 0 goto label13;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        d1 = staticinvoke <java.lang.Math: double log10(double)>(d1);

        d1 = neg d1;

        d1 = staticinvoke <java.lang.Math: double ceil(double)>(d1);

        $i1 = (int) d1;

        $r1.<com.github.mikephil.charting.components.YAxis: int mDecimals> = $i1;

        return;

     label08:
        d0 = (double) $f0;

        d0 = d0 / d1;

        d0 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        d0 = d0 * d1;

        $d2 = (double) $f1;

        $d2 = $d2 / d1;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $d2 = $d2 * d1;

        $d2 = staticinvoke <com.github.mikephil.charting.utils.Utils: double nextUp(double)>($d2);

        $i1 = 0;

        $d3 = d0;

     label09:
        $b2 = $d3 cmpg $d2;

        if $b2 > 0 goto label10;

        $i1 = $i1 + 1;

        $d3 = $d3 + d1;

        goto label09;

     label10:
        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r1.<com.github.mikephil.charting.components.YAxis: int mEntryCount> = $i1;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        i0 = lengthof $r2;

        if i0 >= $i1 goto label11;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = newarray (float)[$i1];

        $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r2;

     label11:
        i0 = 0;

     label12:
        if i0 >= $i1 goto label07;

        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = $r1.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $f0 = (float) d0;

        $r2[i0] = $f0;

        d0 = d0 + d1;

        i0 = i0 + 1;

        goto label12;

     label13:
        $r1 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r1.<com.github.mikephil.charting.components.YAxis: int mDecimals> = 0;

        return;
    }
    protected void drawYLabels(android.graphics.Canvas, float, float[], float)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2;
        float[] $r2;
        android.graphics.Paint $r3;
        int i0, $i1;
        com.github.mikephil.charting.components.YAxis $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        $r2 := @parameter2: float[];

        $f1 := @parameter3: float;

        i0 = 0;

     label1:
        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = $r4.<com.github.mikephil.charting.components.YAxis: int mEntryCount>;

        if i0 >= $i1 goto label3;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: java.lang.String getFormattedLabel(int)>(i0);

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isDrawTopYLabelEntryEnabled()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = $r4.<com.github.mikephil.charting.components.YAxis: int mEntryCount>;

        $i1 = $i1 + -1;

        if i0 < $i1 goto label2;

        return;

     label2:
        $i1 = i0 * 2;

        $i1 = $i1 + 1;

        $f2 = $r2[$i1];

        $f2 = $f2 + $f1;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r5, $f0, $f2, $r3);

        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    public void renderAxisLabels(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        android.graphics.Canvas $r1;
        float[] r2, $r4;
        float f0, $f1, $f2;
        int $i0, $i1, $i2;
        com.github.mikephil.charting.components.YAxis $r3;
        boolean $z0;
        com.github.mikephil.charting.utils.Transformer $r5;
        android.graphics.Paint $r6;
        android.graphics.Typeface $r7;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r8, $r10;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition $r9, $r11;
        android.graphics.Paint$Align $r12;
        com.github.mikephil.charting.utils.ViewPortHandler $r13;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 == 0 goto label8;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: boolean isDrawLabelsEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = $r3.<com.github.mikephil.charting.components.YAxis: int mEntryCount>;

        $i1 = $i1 * 2;

        r2 = newarray (float)[$i1];

        $i1 = 0;

     label2:
        $i0 = lengthof r2;

        if $i1 >= $i0 goto label3;

        $i2 = $i1 + 1;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r4 = $r3.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $i0 = $i1 / 2;

        $f1 = $r4[$i0];

        r2[$i2] = $f1;

        $i1 = $i1 + 2;

        goto label2;

     label3:
        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r5.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r2);

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r7 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r7);

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: float getTextSize()>();

        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: int getTextColor()>();

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i1);

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: float getXOffset()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $i1 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r6, "A");

        f0 = (float) $i1;

        f0 = f0 / 2.5F;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: float getYOffset()>();

        f0 = f0 + $f2;

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r8 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r9 = virtualinvoke $r3.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition()>();

        $r10 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        if $r8 != $r10 goto label6;

        $r11 = <com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART>;

        if $r9 != $r11 goto label5;

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r12 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r12);

        $r13 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r13.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $f1 = $f2 - $f1;

     label4:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.YAxisRenderer: void drawYLabels(android.graphics.Canvas,float,float[],float)>($r1, $f1, r2, f0);

        return;

     label5:
        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r12 = <android.graphics.Paint$Align: android.graphics.Paint$Align LEFT>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r12);

        $r13 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r13.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $f1 = $f2 + $f1;

        goto label4;

     label6:
        $r11 = <com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART>;

        if $r9 != $r11 goto label7;

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r12 = <android.graphics.Paint$Align: android.graphics.Paint$Align LEFT>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r12);

        $r13 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r13.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $f1 = $f2 + $f1;

        goto label4;

     label7:
        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        $r12 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r12);

        $r13 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r13.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $f1 = $f2 - $f1;

        goto label4;

     label8:
        return;
    }
    public void renderAxisLine(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.components.YAxis $r2;
        boolean $z0;
        android.graphics.Paint $r3;
        int $i0;
        float $f0, $f1, $f2, $f3;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r4, $r5;
        com.github.mikephil.charting.utils.ViewPortHandler $r6;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean isDrawAxisLineEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: int getAxisLineColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: float getAxisLineWidth()>();

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r2 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r5 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        if $r4 != $r5 goto label2;

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

        return;

     label2:
        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentTop()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r3);

     label3:
        return;
    }
    public void renderGridLines(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Path r2;
        float[] r3, $r7;
        com.github.mikephil.charting.components.YAxis $r4;
        boolean $z0;
        android.graphics.Paint $r5;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.DashPathEffect $r6;
        com.github.mikephil.charting.utils.Transformer $r8;
        com.github.mikephil.charting.utils.ViewPortHandler $r9;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isDrawGridLinesEnabled()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = newarray (float)[2];

        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: int getGridColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: float getGridLineWidth()>();

        virtualinvoke $r5.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r6 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: android.graphics.DashPathEffect getGridDashPathEffect()>();

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r6);

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $i0 = 0;

     label2:
        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $i1 = $r4.<com.github.mikephil.charting.components.YAxis: int mEntryCount>;

        if $i0 >= $i1 goto label3;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r7 = $r4.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $f0 = $r7[$i0];

        r3[1] = $f0;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r8.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $r9 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $f1 = r3[1];

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        $r9 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r9.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $f1 = r3[1];

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $r5 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mGridPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r2, $r5);

        virtualinvoke r2.<android.graphics.Path: void reset()>();

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
    public void renderLimitLines(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.YAxisRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Path r2;
        float[] r3;
        float f0, $f1, $f2;
        com.github.mikephil.charting.components.YAxis $r4;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        com.github.mikephil.charting.components.LimitLine r7;
        android.graphics.Paint $r8;
        android.graphics.Paint$Style $r9;
        android.graphics.DashPathEffect $r10;
        com.github.mikephil.charting.utils.Transformer $r11;
        com.github.mikephil.charting.utils.ViewPortHandler $r12;
        java.lang.String $r13;
        boolean $z0;
        com.github.mikephil.charting.components.LimitLine$LimitLabelPosition $r14, $r15;
        android.graphics.Paint$Align $r16;

        r0 := @this: com.github.mikephil.charting.renderer.YAxisRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: java.util.List getLimitLines()>();

        if $r5 == null goto label5;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        return;

     label1:
        r3 = newarray (float)[2];

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (com.github.mikephil.charting.components.LimitLine) $r6;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: int getLineColor()>();

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        f0 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLineWidth()>();

        virtualinvoke $r8.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r10 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: android.graphics.DashPathEffect getDashPathEffect()>();

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r10);

        f0 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLimit()>();

        r3[1] = f0;

        $r11 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        virtualinvoke $r11.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $r12 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r12.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        $f1 = r3[1];

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f0, $f1);

        $r12 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r12.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $f1 = r3[1];

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f0, $f1);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r2, $r8);

        virtualinvoke r2.<android.graphics.Path: void reset()>();

        $r13 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: java.lang.String getLabel()>();

        if $r13 == null goto label3;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

        $f1 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(4.0F);

        f0 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getLineWidth()>();

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r8, $r13);

        $f2 = (float) $i1;

        $f2 = $f2 / 2.0F;

        f0 = f0 + $f2;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r9 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: android.graphics.Paint$Style getTextStyle()>();

        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $i1 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: int getTextColor()>();

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setStrokeWidth(float)>(0.5F);

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $f2 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: float getTextSize()>();

        virtualinvoke $r8.<android.graphics.Paint: void setTextSize(float)>($f2);

        $r14 = virtualinvoke r7.<com.github.mikephil.charting.components.LimitLine: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition getLabelPosition()>();

        $r15 = <com.github.mikephil.charting.components.LimitLine$LimitLabelPosition: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition POS_RIGHT>;

        if $r14 != $r15 goto label4;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r16 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;

        virtualinvoke $r8.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r16);

        $r12 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r12.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        $f1 = $f2 - $f1;

        $f2 = r3[1];

        f0 = $f2 - f0;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f1, f0, $r8);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r16 = <android.graphics.Paint$Align: android.graphics.Paint$Align LEFT>;

        virtualinvoke $r8.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r16);

        $r12 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r12.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetLeft()>();

        $f1 = $f2 + $f1;

        $f2 = r3[1];

        f0 = $f2 - f0;

        $r8 = r0.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint mLimitLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f1, f0, $r8);

        goto label3;

     label5:
        return;
    }
