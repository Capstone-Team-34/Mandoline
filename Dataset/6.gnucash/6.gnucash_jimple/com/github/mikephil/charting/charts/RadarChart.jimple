com.github.mikephil.charting.charts.RadarChart extends com.github.mikephil.charting.charts.PieRadarChartBase
private boolean mDrawWeb
private float mInnerWebLineWidth
private int mWebAlpha
private int mWebColor
private int mWebColorInner
private float mWebLineWidth
private com.github.mikephil.charting.components.XAxis mXAxis
protected com.github.mikephil.charting.renderer.XAxisRendererRadarChart mXAxisRenderer
private com.github.mikephil.charting.components.YAxis mYAxis
protected com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context)>($r1);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth> = 2.5F;

        r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth> = 1.5F;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColor> = $i0;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColorInner> = $i0;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebAlpha> = 150;

        r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDrawWeb> = 1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth> = 2.5F;

        r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth> = 1.5F;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColor> = $i0;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColorInner> = $i0;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebAlpha> = 150;

        r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDrawWeb> = 1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth> = 2.5F;

        r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth> = 1.5F;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColor> = $i0;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(122, 122, 122);

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColorInner> = $i0;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebAlpha> = 150;

        r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDrawWeb> = 1;

        return;
    }
    protected void calcMinMax()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.RadarData $r2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;
        java.util.List $r4;
        int $i0;
        com.github.mikephil.charting.components.YAxis $r5, $r6;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void calcMinMax()>();

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $f3 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: java.util.List getXVals()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        f0 = (float) $i0;

        r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMax> = f0;

        f0 = r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMax>;

        f1 = r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMin>;

        f0 = f0 - f1;

        f0 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mDeltaX> = f0;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label5;

        f0 = 0.0F;

     label1:
        f0 = $f3 - f0;

        f0 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        f1 = f0 / 100.0F;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f4 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: float getSpaceTop()>();

        f1 = f1 * $f4;

        f0 = f0 / 100.0F;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f4 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: float getSpaceBottom()>();

        f0 = f0 * $f4;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: java.util.List getXVals()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $f4 = (float) $i0;

        r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMax> = $f4;

        $f4 = r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMax>;

        $f5 = r0.<com.github.mikephil.charting.charts.RadarChart: float mXChartMin>;

        $f4 = $f4 - $f5;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mDeltaX> = $f4;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f4 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f4);

        if $z0 != 0 goto label6;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

     label2:
        $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = $f3;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f3 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z0 != 0 goto label7;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f2 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

     label3:
        $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = $f2;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = 0.0F;

     label4:
        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f2 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f3 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $f2 = $f2 - $f3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $r5.<com.github.mikephil.charting.components.YAxis: float mAxisRange> = $f2;

        return;

     label5:
        f0 = $f2;

        goto label1;

     label6:
        $f3 = $f3 + f1;

        goto label2;

     label7:
        $f2 = $f2 - f0;

        goto label3;
    }
    public float getFactor()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        android.graphics.RectF $r2;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis $r3;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f0 = $f0 / 2.0F;

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $r3 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f1 = $r3.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        $f0 = $f0 / $f1;

        return $f0;
    }
    public int getIndexForAngle(float)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float $f0, $f1, $f2, $f3;
        int i0, $i1;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.RadarData $r2;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $f0 := @parameter0: float;

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float getNormalizedAngle(float)>($f0);

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        i0 = 0;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: int getXValCount()>();

        if i0 >= $i1 goto label3;

        $i1 = i0 + 1;

        $f2 = (float) $i1;

        $f2 = $f2 * $f1;

        $f3 = $f1 / 2.0F;

        $f2 = $f2 - $f3;

        $b2 = $f2 cmpl $f0;

        if $b2 <= 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }
    protected float[] getMarkerPosition(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.highlight.Highlight)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.data.Entry $r1;
        com.github.mikephil.charting.highlight.Highlight $r2;
        float f0, f1, $f2, $f3;
        android.graphics.PointF r3, $r4;
        int $i0;
        double $d0, $d1, $d2;
        float[] $r5;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 := @parameter0: com.github.mikephil.charting.data.Entry;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()>();

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        f1 = (float) $i0;

        f0 = f0 * f1;

        f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: float getRotationAngle()>();

        f0 = f0 + f1;

        f1 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f2 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: float getFactor()>();

        f1 = f1 * $f2;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: android.graphics.PointF getCenterOffsets()>();

        r3 = new android.graphics.PointF;

        $f2 = $r4.<android.graphics.PointF: float x>;

        $d0 = (double) $f2;

        $d1 = (double) f1;

        $d2 = (double) f0;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $f2 = (float) $d0;

        $f3 = $r4.<android.graphics.PointF: float y>;

        $d0 = (double) $f3;

        $d1 = (double) f1;

        $d2 = (double) f0;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        f0 = (float) $d0;

        specialinvoke r3.<android.graphics.PointF: void <init>(float,float)>($f2, f0);

        $r5 = newarray (float)[2];

        f0 = r3.<android.graphics.PointF: float x>;

        $r5[0] = f0;

        f0 = r3.<android.graphics.PointF: float y>;

        $r5[1] = f0;

        return $r5;
    }
    public float getRadius()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        android.graphics.RectF $r2;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f0 = $f0 / 2.0F;

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }
    protected float getRequiredBaseOffset()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.XAxis $r1;
        boolean $z0;
        int $i0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r1.<com.github.mikephil.charting.components.XAxis: int mLabelWidth>;

        $f0 = (float) $i0;

        return $f0;

     label1:
        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        return $f0;
    }
    protected float getRequiredBottomOffset()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.renderer.LegendRenderer $r1;
        android.graphics.Paint $r2;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.renderer.LegendRenderer: android.graphics.Paint getLabelPaint()>();

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getTextSize()>();

        $f0 = $f0 * 4.0F;

        return $f0;
    }
    public float getSliceAngle()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int $i0;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.RadarData $r2;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.RadarData) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.RadarData: int getXValCount()>();

        $f0 = (float) $i0;

        $f0 = 360.0F / $f0;

        return $f0;
    }
    public int getWebAlpha()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        i0 = r0.<com.github.mikephil.charting.charts.RadarChart: int mWebAlpha>;

        return i0;
    }
    public int getWebColor()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        i0 = r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColor>;

        return i0;
    }
    public int getWebColorInner()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        i0 = r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColorInner>;

        return i0;
    }
    public float getWebLineWidth()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        f0 = r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth>;

        return f0;
    }
    public float getWebLineWidthInner()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        f0 = r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth>;

        return f0;
    }
    public com.github.mikephil.charting.components.XAxis getXAxis()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.XAxis r1;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        return r1;
    }
    public com.github.mikephil.charting.components.YAxis getYAxis()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.YAxis r1;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        return r1;
    }
    public float getYChartMax()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.YAxis $r1;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        return f0;
    }
    public float getYChartMin()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.YAxis $r1;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        return f0;
    }
    public float getYRange()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.YAxis $r1;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        return f0;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        com.github.mikephil.charting.components.YAxis $r1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r2;
        com.github.mikephil.charting.components.XAxis $r3;
        float $f0;
        com.github.mikephil.charting.renderer.RadarChartRenderer $r4;
        com.github.mikephil.charting.animation.ChartAnimator $r5;
        com.github.mikephil.charting.utils.ViewPortHandler $r6;
        com.github.mikephil.charting.renderer.YAxisRendererRadarChart $r7;
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart $r8;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void init()>();

        $r1 = new com.github.mikephil.charting.components.YAxis;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        specialinvoke $r1.<com.github.mikephil.charting.components.YAxis: void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r2);

        r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis> = $r1;

        $r3 = new com.github.mikephil.charting.components.XAxis;

        specialinvoke $r3.<com.github.mikephil.charting.components.XAxis: void <init>()>();

        r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis> = $r3;

        $r3 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        virtualinvoke $r3.<com.github.mikephil.charting.components.XAxis: void setSpaceBetweenLabels(int)>(0);

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(1.5F);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(0.75F);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth> = $f0;

        $r4 = new com.github.mikephil.charting.renderer.RadarChartRenderer;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        specialinvoke $r4.<com.github.mikephil.charting.renderer.RadarChartRenderer: void <init>(com.github.mikephil.charting.charts.RadarChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>(r0, $r5, $r6);

        r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer> = $r4;

        $r7 = new com.github.mikephil.charting.renderer.YAxisRendererRadarChart;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        specialinvoke $r7.<com.github.mikephil.charting.renderer.YAxisRendererRadarChart: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.charts.RadarChart)>($r6, $r1, r0);

        r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer> = $r7;

        $r8 = new com.github.mikephil.charting.renderer.XAxisRendererRadarChart;

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r3 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        specialinvoke $r8.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.charts.RadarChart)>($r6, $r3, r0);

        r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.XAxisRendererRadarChart mXAxisRenderer> = $r8;

        return;
    }
    public void notifyDataSetChanged()
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        boolean $z0;
        com.github.mikephil.charting.components.YAxis $r1;
        com.github.mikephil.charting.utils.ValueFormatter $r2;
        com.github.mikephil.charting.renderer.YAxisRendererRadarChart $r3;
        float $f0, $f1;
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart $r4;
        com.github.mikephil.charting.data.ChartData $r5;
        com.github.mikephil.charting.data.RadarData $r6;
        java.util.List $r7;
        com.github.mikephil.charting.components.Legend $r8;
        com.github.mikephil.charting.renderer.LegendRenderer $r9;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $z0 = r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: void calcMinMax()>();

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: boolean needsDefaultFormatter()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $r2 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter>;

        virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)>($r2);

     label2:
        $r3 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer>;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r1 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis mYAxis>;

        $f1 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.YAxisRendererRadarChart: void computeAxis(float,float)>($f0, $f1);

        $r4 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.XAxisRendererRadarChart mXAxisRenderer>;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $f0 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: float getXValAverageLength()>();

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.RadarData) $r5;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.data.RadarData: java.util.List getXVals()>();

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: void computeAxis(float,java.util.List)>($f0, $r7);

        $r8 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.Legend mLegend>;

        if $r8 == null goto label3;

        $r8 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.Legend mLegend>;

        $z0 = virtualinvoke $r8.<com.github.mikephil.charting.components.Legend: boolean isLegendCustom()>();

        if $z0 != 0 goto label3;

        $r9 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.data.ChartData mData>;

        virtualinvoke $r9.<com.github.mikephil.charting.renderer.LegendRenderer: void computeLegend(com.github.mikephil.charting.data.ChartData)>($r5);

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: void calculateOffsets()>();

        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        boolean $z0;
        com.github.mikephil.charting.renderer.XAxisRendererRadarChart $r3;
        com.github.mikephil.charting.renderer.DataRenderer $r4;
        com.github.mikephil.charting.renderer.YAxisRendererRadarChart $r5;
        com.github.mikephil.charting.renderer.LegendRenderer $r6;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.XAxisRendererRadarChart mXAxisRenderer>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.XAxisRendererRadarChart: void renderAxisLabels(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDrawWeb>;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawExtras(android.graphics.Canvas)>($r1);

     label2:
        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer>;

        virtualinvoke $r5.<com.github.mikephil.charting.renderer.YAxisRendererRadarChart: void renderLimitLines(android.graphics.Canvas)>($r1);

        $r4 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawData(android.graphics.Canvas)>($r1);

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: boolean valuesToHighlight()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])>($r1, $r2);

     label3:
        $r5 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer>;

        virtualinvoke $r5.<com.github.mikephil.charting.renderer.YAxisRendererRadarChart: void renderAxisLabels(android.graphics.Canvas)>($r1);

        $r4 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawValues(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.LegendRenderer: void renderLegend(android.graphics.Canvas)>($r1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: void drawDescription(android.graphics.Canvas)>($r1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.RadarChart: void drawMarkers(android.graphics.Canvas)>($r1);

        return;
    }
    public void setDrawWeb(boolean)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.RadarChart: boolean mDrawWeb> = $z0;

        return;
    }
    public void setWebAlpha(int)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebAlpha> = $i0;

        return;
    }
    public void setWebColor(int)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColor> = $i0;

        return;
    }
    public void setWebColorInner(int)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.charts.RadarChart: int mWebColorInner> = $i0;

        return;
    }
    public void setWebLineWidth(float)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mWebLineWidth> = $f0;

        return;
    }
    public void setWebLineWidthInner(float)
    {
        com.github.mikephil.charting.charts.RadarChart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.RadarChart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.RadarChart: float mInnerWebLineWidth> = $f0;

        return;
    }
