com.github.mikephil.charting.charts.PieRadarChartBase extends com.github.mikephil.charting.charts.Chart
private float mRawRotationAngle
protected boolean mRotateEnabled
private float mRotationAngle
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.content.Context $r1;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context)>($r1);

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mRotateEnabled> = 1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mRotateEnabled> = 1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle> = 270.0F;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mRotateEnabled> = 1;

        return;
    }
    protected void calcMinMax()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        com.github.mikephil.charting.data.ChartData $r1;
        java.util.List $r2;
        int $i0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: java.util.List getXVals()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $f0 = (float) $i0;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mDeltaX> = $f0;

        return;
    }
    public void calculateOffsets()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.graphics.PointF r1, $r10, $r11;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7;
        com.github.mikephil.charting.components.Legend $r2;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        com.github.mikephil.charting.components.Legend$LegendPosition $r4, $r5;
        com.github.mikephil.charting.charts.RadarChart $r6;
        com.github.mikephil.charting.components.XAxis $r7;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        byte $b1;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        f1 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        f4 = 0.0F;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        if $r2 == null goto label02;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: boolean isEnabled()>();

        if $z0 == 0 goto label02;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f0 = $r2.<com.github.mikephil.charting.components.Legend: float mNeededWidth>;

        $r3 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f4 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: float getMaxSizePercent()>();

        f4 = f4 * $f5;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f4);

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: float getFormSize()>();

        f0 = f0 + f4;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: float getFormToTextSpace()>();

        f0 = f0 + f4;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART_CENTER>;

        if $r4 != $r5 goto label04;

        f2 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(13.0F);

        f2 = f0 + f2;

     label01:
        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()>();

        f1 = f1 + f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()>();

        f2 = f2 + f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()>();

        f4 = 0.0F + f0;

     label02:
        f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        $z0 = r0 instanceof com.github.mikephil.charting.charts.RadarChart;

        if $z0 == 0 goto label03;

        $r6 = (com.github.mikephil.charting.charts.RadarChart) r0;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis getXAxis()>();

        $z0 = virtualinvoke $r7.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 == 0 goto label03;

        f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        $i0 = $r7.<com.github.mikephil.charting.components.XAxis: int mLabelWidth>;

        $f5 = (float) $i0;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f5);

     label03:
        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getExtraTopOffset()>();

        f4 = f4 + $f5;

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getExtraRightOffset()>();

        f2 = f2 + $f5;

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getExtraBottomOffset()>();

        f3 = f3 + $f5;

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getExtraLeftOffset()>();

        f1 = f1 + $f5;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        f4 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f4);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f2);

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()>();

        f3 = staticinvoke <java.lang.Math: float max(float,float)>($f5, f3);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f3);

        $r3 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: void restrainViewPort(float,float,float,float)>(f1, f4, f2, f3);

        $z0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offsetLeft: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetTop: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetRight: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetBottom: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r9);

        return;

     label04:
        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART>;

        if $r4 != $r5 goto label06;

        f4 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(8.0F);

        f0 = f0 + f4;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f4 = $r2.<com.github.mikephil.charting.components.Legend: float mNeededHeight>;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = $r2.<com.github.mikephil.charting.components.Legend: float mTextHeightMax>;

        f4 = f4 + $f5;

        $r10 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getCenter()>();

        r1 = new android.graphics.PointF;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: int getWidth()>();

        $f5 = (float) $i0;

        $f5 = $f5 - f0;

        $f5 = $f5 + 15.0F;

        f4 = 15.0F + f4;

        specialinvoke r1.<android.graphics.PointF: void <init>(float,float)>($f5, f4);

        f4 = r1.<android.graphics.PointF: float x>;

        $f5 = r1.<android.graphics.PointF: float y>;

        f4 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float distanceToCenter(float,float)>(f4, $f5);

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRadius()>();

        $f6 = r1.<android.graphics.PointF: float x>;

        $f7 = r1.<android.graphics.PointF: float y>;

        $f6 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getAngleForPoint(float,float)>($f6, $f7);

        $r11 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r10, $f5, $f6);

        $f5 = $r11.<android.graphics.PointF: float x>;

        $f6 = $r11.<android.graphics.PointF: float y>;

        $f6 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float distanceToCenter(float,float)>($f5, $f6);

        $f5 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        $b1 = f4 cmpg $f6;

        if $b1 >= 0 goto label05;

        f2 = $f6 - f4;

        f2 = $f5 + f2;

     label05:
        f4 = r1.<android.graphics.PointF: float y>;

        $f5 = $r10.<android.graphics.PointF: float y>;

        $b1 = f4 cmpl $f5;

        if $b1 < 0 goto label01;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: int getHeight()>();

        f4 = (float) $i0;

        f4 = f4 - f0;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: int getWidth()>();

        $f5 = (float) $i0;

        $b1 = f4 cmpl $f5;

        if $b1 <= 0 goto label01;

        f2 = f0;

        goto label01;

     label06:
        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART_CENTER>;

        if $r4 != $r5 goto label07;

        f1 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(13.0F);

        f1 = f0 + f1;

        goto label01;

     label07:
        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART>;

        if $r4 != $r5 goto label09;

        f4 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(8.0F);

        f0 = f0 + f4;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f4 = $r2.<com.github.mikephil.charting.components.Legend: float mNeededHeight>;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = $r2.<com.github.mikephil.charting.components.Legend: float mTextHeightMax>;

        $f5 = f4 + $f5;

        $r10 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getCenter()>();

        r1 = new android.graphics.PointF;

        f4 = f0 - 15.0F;

        $f5 = 15.0F + $f5;

        specialinvoke r1.<android.graphics.PointF: void <init>(float,float)>(f4, $f5);

        f4 = r1.<android.graphics.PointF: float x>;

        $f5 = r1.<android.graphics.PointF: float y>;

        f4 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float distanceToCenter(float,float)>(f4, $f5);

        $f5 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRadius()>();

        $f6 = r1.<android.graphics.PointF: float x>;

        $f7 = r1.<android.graphics.PointF: float y>;

        $f6 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getAngleForPoint(float,float)>($f6, $f7);

        $r11 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getPosition(android.graphics.PointF,float,float)>($r10, $f5, $f6);

        $f5 = $r11.<android.graphics.PointF: float x>;

        $f6 = $r11.<android.graphics.PointF: float y>;

        $f6 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float distanceToCenter(float,float)>($f5, $f6);

        $f5 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        $b1 = f4 cmpg $f6;

        if $b1 >= 0 goto label08;

        f1 = $f6 - f4;

        f1 = $f5 + f1;

     label08:
        f4 = r1.<android.graphics.PointF: float y>;

        $f5 = $r10.<android.graphics.PointF: float y>;

        $b1 = f4 cmpl $f5;

        if $b1 < 0 goto label01;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: int getHeight()>();

        f4 = (float) $i0;

        f4 = f4 - f0;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: int getWidth()>();

        $f5 = (float) $i0;

        $b1 = f4 cmpl $f5;

        if $b1 <= 0 goto label01;

        f1 = f0;

        goto label01;

     label09:
        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_LEFT>;

        if $r4 == $r5 goto label10;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_RIGHT>;

        if $r4 == $r5 goto label10;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r5 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_CENTER>;

        if $r4 != $r5 goto label01;

     label10:
        f3 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBottomOffset()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f0 = $r2.<com.github.mikephil.charting.components.Legend: float mNeededHeight>;

        f3 = f0 + f3;

        $r3 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartHeight()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f4 = virtualinvoke $r2.<com.github.mikephil.charting.components.Legend: float getMaxSizePercent()>();

        f0 = f0 * f4;

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(f3, f0);

        goto label01;

     label11:
        return;
    }
    public void computeScroll()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        com.github.mikephil.charting.listener.ChartTouchListener $r1;
        boolean $z0;
        com.github.mikephil.charting.listener.PieRadarChartTouchListener $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $z0 = $r1 instanceof com.github.mikephil.charting.listener.PieRadarChartTouchListener;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $r2 = (com.github.mikephil.charting.listener.PieRadarChartTouchListener) $r1;

        virtualinvoke $r2.<com.github.mikephil.charting.listener.PieRadarChartTouchListener: void computeScroll()>();

     label1:
        return;
    }
    public float distanceToCenter(float, float)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        float $f0, $f1, $f2;
        android.graphics.PointF $r1;
        byte $b0;
        double $d0, $d1;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getCenterOffsets()>();

        $f2 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl $f2;

        if $b0 <= 0 goto label3;

        $f2 = $r1.<android.graphics.PointF: float x>;

        $f0 = $f0 - $f2;

     label1:
        $f2 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f1 cmpl $f2;

        if $b0 <= 0 goto label4;

        $f2 = $r1.<android.graphics.PointF: float y>;

        $f1 = $f1 - $f2;

     label2:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $d1 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $d0 = $d0 + $d1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;

     label3:
        $f2 = $r1.<android.graphics.PointF: float x>;

        $f0 = $f2 - $f0;

        goto label1;

     label4:
        $f2 = $r1.<android.graphics.PointF: float y>;

        $f1 = $f2 - $f1;

        goto label2;
    }
    public float getAngleForPoint(float, float)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        float $f0, $f1, $f2;
        double d0, d1, $d2;
        android.graphics.PointF $r1;
        byte $b0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: android.graphics.PointF getCenterOffsets()>();

        $f2 = $r1.<android.graphics.PointF: float x>;

        $f2 = $f0 - $f2;

        d0 = (double) $f2;

        $f2 = $r1.<android.graphics.PointF: float y>;

        $f1 = $f1 - $f2;

        d1 = (double) $f1;

        $d2 = d0 * d0;

        d0 = d1 * d1;

        d0 = $d2 + d0;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        d1 = d1 / d0;

        d1 = staticinvoke <java.lang.Math: double acos(double)>(d1);

        d1 = staticinvoke <java.lang.Math: double toDegrees(double)>(d1);

        $f1 = (float) d1;

        $f2 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl $f2;

        if $b0 <= 0 goto label1;

        $f1 = 360.0F - $f1;

     label1:
        $f0 = $f1 + 90.0F;

        $b0 = $f0 cmpl 360.0F;

        if $b0 <= 0 goto label2;

        $f0 = $f0 - 360.0F;

     label2:
        return $f0;
    }
    public float getDiameter()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        android.graphics.RectF $r2;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }
public abstract int getIndexForAngle(float) { 
// no body
} 
    protected android.graphics.PointF getPosition(android.graphics.PointF, float, float)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.graphics.PointF $r1, r2;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 := @parameter0: android.graphics.PointF;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        r2 = new android.graphics.PointF;

        $f2 = $r1.<android.graphics.PointF: float x>;

        $d0 = (double) $f2;

        $d1 = (double) $f0;

        $d2 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $f2 = (float) $d0;

        $f3 = $r1.<android.graphics.PointF: float y>;

        $d0 = (double) $f3;

        $d1 = (double) $f0;

        $d2 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d1 = $d1 * $d2;

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        specialinvoke r2.<android.graphics.PointF: void <init>(float,float)>($f2, $f0);

        return r2;
    }
public abstract float getRadius() { 
// no body
} 
    public float getRawRotationAngle()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        f0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle>;

        return f0;
    }
protected abstract float getRequiredBaseOffset() { 
// no body
} 
protected abstract float getRequiredBottomOffset() { 
// no body
} 
    public float getRotationAngle()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        f0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRotationAngle>;

        return f0;
    }
    public java.util.List getSelectionDetailsAtIndex(int)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        int $i0, i1, $i2;
        java.util.ArrayList r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.DataSet $r3;
        float $f0;
        byte $b3;
        com.github.mikephil.charting.utils.SelectionDetail $r4;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $i0 := @parameter0: int;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: int getDataSetCount()>();

        if i1 >= $i2 goto label4;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>(i1);

        $f0 = virtualinvoke $r3.<com.github.mikephil.charting.data.DataSet: float getYValForXIndex(int)>($i0);

        $b3 = $f0 cmpl #NaNF;

        if $b3 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new com.github.mikephil.charting.utils.SelectionDetail;

        specialinvoke $r4.<com.github.mikephil.charting.utils.SelectionDetail: void <init>(float,int,com.github.mikephil.charting.data.DataSet)>($f0, i1, $r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label4:
        return r1;
    }
    public float getYChartMax()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        return 0.0F;
    }
    public float getYChartMin()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        return 0.0F;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        com.github.mikephil.charting.listener.PieRadarChartTouchListener $r1;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void init()>();

        $r1 = new com.github.mikephil.charting.listener.PieRadarChartTouchListener;

        specialinvoke $r1.<com.github.mikephil.charting.listener.PieRadarChartTouchListener: void <init>(com.github.mikephil.charting.charts.PieRadarChartBase)>(r0);

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener> = $r1;

        return;
    }
    public boolean isRotationEnabled()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mRotateEnabled>;

        return z0;
    }
    public void notifyDataSetChanged()
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        com.github.mikephil.charting.data.ChartData $r1;
        boolean $z0;
        com.github.mikephil.charting.components.Legend $r2;
        com.github.mikephil.charting.renderer.LegendRenderer $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $z0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void calcMinMax()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        if $r2 == null goto label2;

        $r3 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        $r1 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.data.ChartData mData>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.LegendRenderer: void computeLegend(com.github.mikephil.charting.data.ChartData)>($r1);

     label2:
        virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void calculateOffsets()>();

        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        com.github.mikephil.charting.listener.ChartTouchListener $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mTouchEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        if $r2 == null goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, $r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<com.github.mikephil.charting.charts.Chart: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public void setRotationAngle(float)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle> = $f0;

        $f0 = r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRawRotationAngle>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float getNormalizedAngle(float)>($f0);

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: float mRotationAngle> = $f0;

        return;
    }
    public void setRotationEnabled(boolean)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieRadarChartBase: boolean mRotateEnabled> = $z0;

        return;
    }
    public void spin(int, float, float, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.charts.PieRadarChartBase r0;
        int $i0, $i1;
        float $f0, $f1;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1;
        float[] $r2;
        android.animation.ObjectAnimator $r3;
        long $l2;
        com.github.mikephil.charting.animation.EasingFunction $r4;
        com.github.mikephil.charting.charts.PieRadarChartBase$1 $r5;

        r0 := @this: com.github.mikephil.charting.charts.PieRadarChartBase;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r1 := @parameter3: com.github.mikephil.charting.animation.Easing$EasingOption;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void setRotationAngle(float)>($f0);

        $r2 = newarray (float)[2];

        $r2[0] = $f0;

        $r2[1] = $f1;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "rotationAngle", $r2);

        $l2 = (long) $i0;

        virtualinvoke $r3.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r4 = staticinvoke <com.github.mikephil.charting.animation.Easing: com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption)>($r1);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = new com.github.mikephil.charting.charts.PieRadarChartBase$1;

        specialinvoke $r5.<com.github.mikephil.charting.charts.PieRadarChartBase$1: void <init>(com.github.mikephil.charting.charts.PieRadarChartBase)>(r0);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

        return;
    }
