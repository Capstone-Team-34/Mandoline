com.github.mikephil.charting.charts.BarLineChartBase extends com.github.mikephil.charting.charts.Chart implements com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider
private long drawCycles
private java.lang.Integer mAutoScaleLastHighestVisibleXIndex
private java.lang.Integer mAutoScaleLastLowestVisibleXIndex
private boolean mAutoScaleMinMaxEnabled
protected com.github.mikephil.charting.components.YAxis mAxisLeft
protected com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft
protected com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight
protected com.github.mikephil.charting.components.YAxis mAxisRight
protected android.graphics.Paint mBorderPaint
private boolean mCustomViewPortEnabled
protected boolean mDoubleTapToZoomEnabled
private boolean mDragEnabled
protected boolean mDrawBorders
protected boolean mDrawGridBackground
protected com.github.mikephil.charting.listener.OnDrawListener mDrawListener
protected boolean mFilterData
protected android.graphics.Paint mGridBackgroundPaint
protected boolean mHighlightPerDragEnabled
protected com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer
protected int mMaxVisibleCount
protected boolean mPinchZoomEnabled
protected com.github.mikephil.charting.utils.Transformer mRightAxisTransformer
private boolean mScaleXEnabled
private boolean mScaleYEnabled
protected com.github.mikephil.charting.components.XAxis mXAxis
protected com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer
private long totalTime
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.content.Context $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context)>($r1);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: int mMaxVisibleCount> = 100;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mPinchZoomEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDoubleTapToZoomEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mHighlightPerDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawGridBackground> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawBorders> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: int mMaxVisibleCount> = 100;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mPinchZoomEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDoubleTapToZoomEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mHighlightPerDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawGridBackground> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawBorders> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: int mMaxVisibleCount> = 100;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex> = null;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mPinchZoomEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDoubleTapToZoomEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mHighlightPerDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDragEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawGridBackground> = 1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawBorders> = 0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled> = 0;

        return;
    }
    protected void calcMinMax()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float f0, f1, f2, f3, f4, f5, $f6, f7, $f8, f9;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r2;
        int $i0, $i1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;
        com.github.mikephil.charting.components.YAxis $r4, $r6;
        byte $b2;
        java.util.List $r5;
        double $d0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled>;

        if $z0 == 0 goto label01;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getLowestVisibleXIndex()>();

        $i1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getHighestVisibleXIndex()>();

        virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: void calcMinMax(int,int)>($i0, $i1);

     label01:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        f3 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        f4 = f3;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        f2 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        f5 = f2;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency RIGHT>;

        $f6 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        f7 = $f6;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency RIGHT>;

        $f8 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        f9 = $f8;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label12;

        f0 = 0.0F;

     label02:
        f0 = f2 - f0;

        f0 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label13;

        f1 = 0.0F;

     label03:
        f1 = $f8 - f1;

        f1 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b2 = f0 cmpl 0.0F;

        if $b2 != 0 goto label04;

        f5 = f2 + 1.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 != 0 goto label04;

        f4 = f3 - 1.0F;

     label04:
        $b2 = f1 cmpl 0.0F;

        if $b2 != 0 goto label05;

        f9 = $f8 + 1.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 != 0 goto label05;

        f7 = $f6 - 1.0F;

     label05:
        f3 = f0 / 100.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f2 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: float getSpaceTop()>();

        f2 = f3 * f2;

        f3 = f1 / 100.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f6 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: float getSpaceTop()>();

        f3 = f3 * $f6;

        f0 = f0 / 100.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f6 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: float getSpaceBottom()>();

        f0 = f0 * $f6;

        f1 = f1 / 100.0F;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f6 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: float getSpaceBottom()>();

        f1 = f1 * $f6;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarLineScatterCandleData: java.util.List getXVals()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $f6 = (float) $i0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMax> = $f6;

        $f6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMax>;

        $f8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMin>;

        $f6 = $f6 - $f8;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX> = $f6;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f6 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f6);

        if $z0 != 0 goto label14;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f5 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

     label06:
        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = f5;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f5 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f5);

        if $z0 != 0 goto label15;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f9 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMaxValue()>();

     label07:
        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = f9;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f9 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f9);

        if $z0 != 0 goto label16;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f4 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

     label08:
        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = f4;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f4 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f4);

        if $z0 != 0 goto label17;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f7 = virtualinvoke $r6.<com.github.mikephil.charting.components.YAxis: float getAxisMinValue()>();

     label09:
        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = f7;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label10;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f7 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $b2 = f7 cmpg 0.0F;

        if $b2 >= 0 goto label18;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f7 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $b2 = f7 cmpg 0.0F;

        if $b2 >= 0 goto label18;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = 0.0F;

     label10:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.components.YAxis: boolean isStartAtZeroEnabled()>();

        if $z0 == 0 goto label11;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f7 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $d0 = (double) f7;

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label19;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f7 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $d0 = (double) f7;

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label19;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = 0.0F;

     label11:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f7 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f4 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        f7 = f7 - f4;

        f7 = staticinvoke <java.lang.Math: float abs(float)>(f7);

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisRange> = f7;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f7 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f4 = $r6.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        f7 = f7 - f4;

        f7 = staticinvoke <java.lang.Math: float abs(float)>(f7);

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisRange> = f7;

        return;

     label12:
        f0 = f3;

        goto label02;

     label13:
        f1 = $f6;

        goto label03;

     label14:
        f5 = f5 + f2;

        goto label06;

     label15:
        f9 = f9 + f3;

        goto label07;

     label16:
        f4 = f4 - f0;

        goto label08;

     label17:
        f7 = f7 - f1;

        goto label09;

     label18:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = 0.0F;

        goto label10;

     label19:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = 0.0F;

        goto label11;
    }
    protected void calcModulus()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float[] r1;
        com.github.mikephil.charting.components.XAxis $r2, $r7;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        android.graphics.Matrix $r4;
        com.github.mikephil.charting.data.ChartData $r5;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r6;
        int $i0, $i1;
        float $f0, $f1, $f2;
        double $d0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        if $r2 == null goto label4;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.XAxis: boolean isAxisModulusCustom()>();

        if $z0 != 0 goto label2;

        r1 = newarray (float)[9];

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix getMatrixTouch()>();

        virtualinvoke $r4.<android.graphics.Matrix: void getValues(float[])>(r1);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r5;

        $i0 = virtualinvoke $r6.<com.github.mikephil.charting.data.BarLineScatterCandleData: int getXValCount()>();

        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i1 = $r7.<com.github.mikephil.charting.components.XAxis: int mLabelWidth>;

        $i0 = $i0 * $i1;

        $f0 = (float) $i0;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float contentWidth()>();

        $f2 = r1[0];

        $f1 = $f1 * $f2;

        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r2.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus> = $i0;

     label2:
        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-Axis modulus: ");

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", x-axis label width: ");

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mLabelWidth>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", content width: ");

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float contentWidth()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r9);

     label3:
        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r2.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        if $i0 >= 1 goto label4;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r2.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus> = 1;

     label4:
        return;
    }
    public void calculateOffsets()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7;
        boolean $z0;
        com.github.mikephil.charting.components.Legend $r1;
        com.github.mikephil.charting.components.Legend$LegendPosition $r2, $r3;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        com.github.mikephil.charting.components.YAxis $r5;
        com.github.mikephil.charting.renderer.YAxisRenderer $r6;
        android.graphics.Paint $r7;
        com.github.mikephil.charting.components.XAxis $r8;
        int $i0;
        com.github.mikephil.charting.components.XAxis$XAxisPosition $r9, $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        android.graphics.RectF $r13;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled>;

        if $z0 != 0 goto label06;

        f2 = 0.0F;

        f3 = 0.0F;

        f4 = 0.0F;

        f1 = 0.0F;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        if $r1 == null goto label02;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: boolean isEnabled()>();

        if $z0 == 0 goto label02;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART>;

        if $r2 == $r3 goto label01;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART_CENTER>;

        if $r2 != $r3 goto label07;

     label01:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f3 = $r1.<com.github.mikephil.charting.components.Legend: float mNeededWidth>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: float getMaxSizePercent()>();

        f0 = f0 * $f5;

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(f3, f0);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f0 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: float getXOffset()>();

        f0 = f0 * 2.0F;

        f3 = f3 + f0;

        f3 = 0.0F + f3;

     label02:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean needsOffset()>();

        if $z0 == 0 goto label03;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint getPaintAxisLabels()>();

        f0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: float getRequiredWidthSpace(android.graphics.Paint)>($r7);

        f2 = f2 + f0;

     label03:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean needsOffset()>();

        if $z0 == 0 goto label04;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: android.graphics.Paint getPaintAxisLabels()>();

        f0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: float getRequiredWidthSpace(android.graphics.Paint)>($r7);

        f3 = f3 + f0;

     label04:
        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r8.<com.github.mikephil.charting.components.XAxis: boolean isEnabled()>();

        if $z0 == 0 goto label05;

        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r8.<com.github.mikephil.charting.components.XAxis: boolean isDrawLabelsEnabled()>();

        if $z0 == 0 goto label05;

        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i0 = $r8.<com.github.mikephil.charting.components.XAxis: int mLabelHeight>;

        f0 = (float) $i0;

        f0 = f0 * 2.0F;

        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r9 = virtualinvoke $r8.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r10 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM>;

        if $r9 != $r10 goto label11;

        f1 = f1 + f0;

     label05:
        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getExtraTopOffset()>();

        f4 = f4 + f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getExtraRightOffset()>();

        f3 = f3 + f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getExtraBottomOffset()>();

        f1 = f1 + f0;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getExtraLeftOffset()>();

        f2 = f2 + f0;

        $f6 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>($f6, f2);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f6, f4);

        $f7 = staticinvoke <java.lang.Math: float max(float,float)>($f6, f3);

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>($f6, f1);

        virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: void restrainViewPort(float,float,float,float)>(f0, $f5, $f7, $f6);

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label06;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offsetLeft: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetTop: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetRight: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetBottom: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r12);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content: ");

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r13 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $r12 = virtualinvoke $r13.<android.graphics.RectF: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r12);

     label06:
        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void prepareOffsetMatrix()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void prepareValuePxMatrix()>();

        return;

     label07:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART>;

        if $r2 == $r3 goto label08;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART_CENTER>;

        if $r2 != $r3 goto label09;

     label08:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f2 = $r1.<com.github.mikephil.charting.components.Legend: float mNeededWidth>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: float getMaxSizePercent()>();

        f0 = f0 * $f5;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f2, f0);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f0 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: float getXOffset()>();

        f0 = f0 * 2.0F;

        f2 = f2 + f0;

        f2 = 0.0F + f2;

        goto label02;

     label09:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_LEFT>;

        if $r2 == $r3 goto label10;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_RIGHT>;

        if $r2 == $r3 goto label10;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: com.github.mikephil.charting.components.Legend$LegendPosition getPosition()>();

        $r3 = <com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_CENTER>;

        if $r2 != $r3 goto label02;

     label10:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f1 = $r1.<com.github.mikephil.charting.components.Legend: float mTextHeightMax>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        f0 = $r1.<com.github.mikephil.charting.components.Legend: float mNeededHeight>;

        f1 = f0 + f1;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartHeight()>();

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        $f5 = virtualinvoke $r1.<com.github.mikephil.charting.components.Legend: float getMaxSizePercent()>();

        f0 = f0 * $f5;

        f1 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f0);

        f1 = 0.0F + f1;

        goto label02;

     label11:
        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r9 = virtualinvoke $r8.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r10 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition TOP>;

        if $r9 != $r10 goto label12;

        f4 = 0.0F + f0;

        goto label05;

     label12:
        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r9 = virtualinvoke $r8.<com.github.mikephil.charting.components.XAxis: com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition()>();

        $r10 = <com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition BOTH_SIDED>;

        if $r9 != $r10 goto label05;

        f1 = f1 + f0;

        f4 = 0.0F + f0;

        goto label05;
    }
    public void centerViewTo(int, float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int $i0, $i1;
        float $f0, f1, f2, $f3;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.jobs.MoveViewJob r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        com.github.mikephil.charting.components.XAxis $r4;
        java.util.List $r5;
        com.github.mikephil.charting.utils.Transformer $r6;
        boolean $z0;
        java.util.ArrayList $r7;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r1 := @parameter2: com.github.mikephil.charting.components.YAxis$AxisDependency;

        f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleY()>();

        f1 = f1 / $f3;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis getXAxis()>();

        $r5 = virtualinvoke $r4.<com.github.mikephil.charting.components.XAxis: java.util.List getValues()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $f3 = (float) $i1;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f2 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleX()>();

        f2 = $f3 / f2;

        r2 = new com.github.mikephil.charting.jobs.MoveViewJob;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = (float) $i0;

        f2 = f2 / 2.0F;

        $f3 = $f3 - f2;

        f1 = f1 / 2.0F;

        $f0 = f1 + $f0;

        $r6 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        specialinvoke r2.<com.github.mikephil.charting.jobs.MoveViewJob: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View)>($r3, $f3, $f0, $r6, r0);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: boolean hasChartDimens()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean post(java.lang.Runnable)>(r2);

        return;

     label1:
        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.util.ArrayList mJobs>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }
    public void computeScroll()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.listener.ChartTouchListener $r1;
        boolean $z0;
        com.github.mikephil.charting.listener.BarLineChartTouchListener $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $z0 = $r1 instanceof com.github.mikephil.charting.listener.BarLineChartTouchListener;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $r2 = (com.github.mikephil.charting.listener.BarLineChartTouchListener) $r1;

        virtualinvoke $r2.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void computeScroll()>();

     label1:
        return;
    }
    public void disableFiltering()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData> = 0;

        return;
    }
    protected void drawGridBackground(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        android.graphics.RectF $r3;
        android.graphics.Paint $r4;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawGridBackground>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r3, $r4);

     label1:
        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawBorders>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r3, $r4);

     label2:
        return;
    }
    public void enableFiltering(com.github.mikephil.charting.data.filter.Approximator)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.data.filter.Approximator $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.data.filter.Approximator;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData> = 1;

        return;
    }
    public void fitScreen()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.graphics.Matrix $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix fitScreen()>();

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r1, r0, 1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

        return;
    }
    public com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1, $r2;
        com.github.mikephil.charting.components.YAxis r3;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        if $r1 != $r2 goto label1;

        r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        return r3;

     label1:
        r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        return r3;
    }
    public com.github.mikephil.charting.components.YAxis getAxisLeft()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        return r1;
    }
    public com.github.mikephil.charting.components.YAxis getAxisRight()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        return r1;
    }
    public volatile com.github.mikephil.charting.data.BarLineScatterCandleData getData()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = specialinvoke r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData getData()>();

        $r2 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r1;

        return $r2;
    }
    public com.github.mikephil.charting.data.BarLineScatterCandleDataSet getDataSetByTouchPoint(float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r3;
        int $i0;
        com.github.mikephil.charting.data.DataSet $r4;
        com.github.mikephil.charting.data.BarLineScatterCandleDataSet $r5;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float)>($f0, $f1);

        if $r1 == null goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r2;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarLineScatterCandleData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i0);

        $r5 = (com.github.mikephil.charting.data.BarLineScatterCandleDataSet) $r4;

        return $r5;

     label1:
        return null;
    }
    public float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1, $r2;
        com.github.mikephil.charting.components.YAxis $r3;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        if $r1 != $r2 goto label1;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        f0 = $r3.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        return f0;

     label1:
        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        f0 = $r3.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        return f0;
    }
    public com.github.mikephil.charting.listener.OnDrawListener getDrawListener()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.listener.OnDrawListener r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnDrawListener mDrawListener>;

        return r1;
    }
    public com.github.mikephil.charting.data.Entry getEntryByTouchPoint(float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r3;
        com.github.mikephil.charting.data.Entry $r4;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float)>($f0, $f1);

        if $r1 == null goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarLineScatterCandleData: com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight)>($r1);

        return $r4;

     label1:
        return null;
    }
    public int getHighestVisibleXIndex()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float[] r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        com.github.mikephil.charting.data.ChartData $r5;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r6;
        int $i0;
        byte $b1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = newarray (float)[2];

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        r1[0] = $f0;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        r1[1] = $f0;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        virtualinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void pixelsToValue(float[])>(r1);

        $f0 = r1[0];

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r5;

        $i0 = virtualinvoke $r6.<com.github.mikephil.charting.data.BarLineScatterCandleData: int getXValCount()>();

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 < 0 goto label1;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r5;

        $i0 = virtualinvoke $r6.<com.github.mikephil.charting.data.BarLineScatterCandleData: int getXValCount()>();

        $i0 = $i0 + -1;

        return $i0;

     label1:
        $f0 = r1[0];

        $i0 = (int) $f0;

        return $i0;
    }
    public com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r1;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.highlight.ChartHighlighter $r3;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDataNotSet>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        if $r2 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MPAndroidChart", "Can\'t select by touch. No data set.");

        return null;

     label2:
        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.ChartHighlighter mHighlighter>;

        $r1 = virtualinvoke $r3.<com.github.mikephil.charting.highlight.ChartHighlighter: com.github.mikephil.charting.highlight.Highlight getHighlight(float,float)>($f0, $f1);

        return $r1;
    }
    public int getLowestVisibleXIndex()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float[] r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        float $f0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        byte $b0;
        int $i1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = newarray (float)[2];

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        r1[0] = $f0;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        r1[1] = $f0;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        virtualinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void pixelsToValue(float[])>(r1);

        $f0 = r1[0];

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        return 0;

     label1:
        $f0 = r1[0];

        $f0 = $f0 + 1.0F;

        $i1 = (int) $f0;

        return $i1;
    }
    protected float[] getMarkerPosition(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.highlight.Highlight)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.data.Entry $r1;
        com.github.mikephil.charting.highlight.Highlight $r2;
        float[] r3;
        float f0, f1, $f2, $f3, $f4;
        int $i0, $i1, $i2;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData r4;
        com.github.mikephil.charting.data.BarData r5;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r6;
        com.github.mikephil.charting.data.BarEntry r7;
        com.github.mikephil.charting.highlight.Range $r8;
        com.github.mikephil.charting.animation.ChartAnimator $r9;
        com.github.mikephil.charting.data.DataSet $r10;
        com.github.mikephil.charting.data.BarLineScatterCandleDataSet $r11;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r12;
        com.github.mikephil.charting.utils.Transformer $r13;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.data.Entry;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        f1 = (float) $i1;

        $f2 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $z0 = r0 instanceof com.github.mikephil.charting.charts.BarChart;

        if $z0 == 0 goto label1;

        r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        r5 = (com.github.mikephil.charting.data.BarData) r4;

        f0 = virtualinvoke r5.<com.github.mikephil.charting.data.BarData: float getGroupSpace()>();

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.BarLineScatterCandleData) r4;

        $i2 = virtualinvoke $r6.<com.github.mikephil.charting.data.BarLineScatterCandleData: int getDataSetCount()>();

        $i2 = $i2 + -1;

        $i1 = $i2 * $i1;

        $i1 = $i1 + $i0;

        $f3 = (float) $i1;

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f4 = (float) $i1;

        $f4 = $f4 * f0;

        $f3 = $f3 + $f4;

        f0 = f0 / 2.0F;

        f0 = $f3 + f0;

        f1 = f1 + f0;

        r7 = (com.github.mikephil.charting.data.BarEntry) $r1;

        r3 = virtualinvoke r7.<com.github.mikephil.charting.data.BarEntry: float[] getVals()>();

        if r3 == null goto label1;

        $r8 = virtualinvoke $r2.<com.github.mikephil.charting.highlight.Highlight: com.github.mikephil.charting.highlight.Range getRange()>();

        $f2 = $r8.<com.github.mikephil.charting.highlight.Range: float 'to'>;

     label1:
        r3 = newarray (float)[2];

        r3[0] = f1;

        $r9 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f1 = virtualinvoke $r9.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f1 = f1 * $f2;

        r3[1] = f1;

        r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r6 = (com.github.mikephil.charting.data.BarLineScatterCandleData) r4;

        $r10 = virtualinvoke $r6.<com.github.mikephil.charting.data.BarLineScatterCandleData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i0);

        $r11 = (com.github.mikephil.charting.data.BarLineScatterCandleDataSet) $r10;

        $r12 = virtualinvoke $r11.<com.github.mikephil.charting.data.BarLineScatterCandleDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r13 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r12);

        virtualinvoke $r13.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        return r3;
    }
    public int getMaxVisibleCount()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        i0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: int mMaxVisibleCount>;

        return i0;
    }
    public android.graphics.Paint getPaint(int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint getPaint(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        lookupswitch($i0)
        {
            case 4: goto label3;
            default: goto label2;
        };

     label2:
        return null;

     label3:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint>;

        return $r1;
    }
    public com.github.mikephil.charting.utils.PointD getPixelsForValues(float, float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        float[] r2;
        com.github.mikephil.charting.utils.Transformer $r3;
        com.github.mikephil.charting.utils.PointD $r4;
        double $d0, $d1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: com.github.mikephil.charting.components.YAxis$AxisDependency;

        r2 = newarray (float)[2];

        r2[0] = $f0;

        r2[1] = $f1;

        $r3 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r2);

        $r4 = new com.github.mikephil.charting.utils.PointD;

        $f0 = r2[0];

        $d0 = (double) $f0;

        $f0 = r2[1];

        $d1 = (double) $f0;

        specialinvoke $r4.<com.github.mikephil.charting.utils.PointD: void <init>(double,double)>($d0, $d1);

        return $r4;
    }
    public android.graphics.PointF getPosition(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.data.Entry $r1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r2;
        float[] r3;
        int $i0;
        float $f0, $f1;
        com.github.mikephil.charting.utils.Transformer $r4;
        android.graphics.PointF $r5;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.data.Entry;

        $r2 := @parameter1: com.github.mikephil.charting.components.YAxis$AxisDependency;

        if $r1 != null goto label1;

        return null;

     label1:
        r3 = newarray (float)[2];

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f0 = (float) $i0;

        r3[0] = $f0;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.data.Entry: float getVal()>();

        r3[1] = $f0;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r2);

        virtualinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $r5 = new android.graphics.PointF;

        $f0 = r3[0];

        $f1 = r3[1];

        specialinvoke $r5.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r5;
    }
    public com.github.mikephil.charting.renderer.YAxisRenderer getRendererLeftYAxis()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.YAxisRenderer r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        return r1;
    }
    public com.github.mikephil.charting.renderer.YAxisRenderer getRendererRightYAxis()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.YAxisRenderer r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        return r1;
    }
    public com.github.mikephil.charting.renderer.XAxisRenderer getRendererXAxis()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.XAxisRenderer r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        return r1;
    }
    public float getScaleX()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        if $r1 != null goto label1;

        return 1.0F;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleX()>();

        return $f0;
    }
    public float getScaleY()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        if $r1 != null goto label1;

        return 1.0F;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleY()>();

        return $f0;
    }
    public com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1, $r2;
        com.github.mikephil.charting.utils.Transformer r3;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        if $r1 != $r2 goto label1;

        r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        return r3;

     label1:
        r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mRightAxisTransformer>;

        return r3;
    }
    public com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float, float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        float[] r2;
        double d0, d1;
        com.github.mikephil.charting.utils.Transformer $r3;
        com.github.mikephil.charting.utils.PointD $r4;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: com.github.mikephil.charting.components.YAxis$AxisDependency;

        r2 = newarray (float)[2];

        r2[0] = $f0;

        r2[1] = $f1;

        $r3 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void pixelsToValue(float[])>(r2);

        $f0 = r2[0];

        d0 = (double) $f0;

        $f0 = r2[1];

        d1 = (double) $f0;

        $r4 = new com.github.mikephil.charting.utils.PointD;

        specialinvoke $r4.<com.github.mikephil.charting.utils.PointD: void <init>(double,double)>(d0, d1);

        return $r4;
    }
    public com.github.mikephil.charting.components.XAxis getXAxis()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.XAxis r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        return r1;
    }
    public float getYChartMax()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f1 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        return $f0;
    }
    public float getYChartMin()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f0 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f1 = $r1.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }
    public float getYValueByTouchPoint(float, float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.utils.PointD $r2;
        double $d0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $r2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency)>($f0, $f1, $r1);

        $d0 = $r2.<com.github.mikephil.charting.utils.PointD: double y>;

        $f0 = (float) $d0;

        return $f0;
    }
    public boolean hasNoDragOffset()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: boolean hasNoDragOffset()>();

        return $z0;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis $r1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r2;
        com.github.mikephil.charting.components.XAxis $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        com.github.mikephil.charting.utils.ViewPortHandler $r5;
        com.github.mikephil.charting.renderer.YAxisRenderer $r6;
        com.github.mikephil.charting.renderer.XAxisRenderer $r7;
        com.github.mikephil.charting.highlight.ChartHighlighter $r8;
        com.github.mikephil.charting.listener.BarLineChartTouchListener $r9;
        android.graphics.Matrix $r10;
        android.graphics.Paint $r11;
        android.graphics.Paint$Style $r12;
        int $i0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void init()>();

        $r1 = new com.github.mikephil.charting.components.YAxis;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        specialinvoke $r1.<com.github.mikephil.charting.components.YAxis: void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r2);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft> = $r1;

        $r1 = new com.github.mikephil.charting.components.YAxis;

        $r2 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency RIGHT>;

        specialinvoke $r1.<com.github.mikephil.charting.components.YAxis: void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r2);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight> = $r1;

        $r3 = new com.github.mikephil.charting.components.XAxis;

        specialinvoke $r3.<com.github.mikephil.charting.components.XAxis: void <init>()>();

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis> = $r3;

        $r4 = new com.github.mikephil.charting.utils.Transformer;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        specialinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler)>($r5);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer> = $r4;

        $r4 = new com.github.mikephil.charting.utils.Transformer;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        specialinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler)>($r5);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mRightAxisTransformer> = $r4;

        $r6 = new com.github.mikephil.charting.renderer.YAxisRenderer;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        specialinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer)>($r5, $r1, $r4);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft> = $r6;

        $r6 = new com.github.mikephil.charting.renderer.YAxisRenderer;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mRightAxisTransformer>;

        specialinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer)>($r5, $r1, $r4);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight> = $r6;

        $r7 = new com.github.mikephil.charting.renderer.XAxisRenderer;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        specialinvoke $r7.<com.github.mikephil.charting.renderer.XAxisRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer)>($r5, $r3, $r4);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer> = $r7;

        $r8 = new com.github.mikephil.charting.highlight.ChartHighlighter;

        specialinvoke $r8.<com.github.mikephil.charting.highlight.ChartHighlighter: void <init>(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider)>(r0);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.ChartHighlighter mHighlighter> = $r8;

        $r9 = new com.github.mikephil.charting.listener.BarLineChartTouchListener;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r10 = virtualinvoke $r5.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix getMatrixTouch()>();

        specialinvoke $r9.<com.github.mikephil.charting.listener.BarLineChartTouchListener: void <init>(com.github.mikephil.charting.charts.BarLineChartBase,android.graphics.Matrix)>(r0, $r10);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener> = $r9;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint> = $r11;

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(240, 240, 240);

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i0);

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint> = $r11;

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(1.0F);

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        return;
    }
    public boolean isAnyAxisInverted()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis $r1;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }
    public boolean isAutoScaleMinMaxEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled>;

        return z0;
    }
    public boolean isDoubleTapToZoomEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDoubleTapToZoomEnabled>;

        return z0;
    }
    public boolean isDragEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDragEnabled>;

        return z0;
    }
    public boolean isFilteringEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mFilterData>;

        return z0;
    }
    public boolean isFullyZoomedOut()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isFullyZoomedOut()>();

        return $z0;
    }
    public boolean isHighlightPerDragEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mHighlightPerDragEnabled>;

        return z0;
    }
    public boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.components.YAxis $r2;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $r2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        return $z0;
    }
    public boolean isPinchZoomEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mPinchZoomEnabled>;

        return z0;
    }
    public boolean isScaleXEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled>;

        return z0;
    }
    public boolean isScaleYEnabled()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled>;

        return z0;
    }
    public void moveViewTo(float, float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1, f2, $f3;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.jobs.MoveViewJob r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: com.github.mikephil.charting.components.YAxis$AxisDependency;

        f2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleY()>();

        f2 = f2 / $f3;

        r2 = new com.github.mikephil.charting.jobs.MoveViewJob;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f2 = f2 / 2.0F;

        $f1 = $f1 + f2;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        specialinvoke r2.<com.github.mikephil.charting.jobs.MoveViewJob: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View)>($r3, $f0, $f1, $r4, r0);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: boolean hasChartDimens()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean post(java.lang.Runnable)>(r2);

        return;

     label1:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.util.ArrayList mJobs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }
    public void moveViewToX(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        com.github.mikephil.charting.jobs.MoveViewJob r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        r1 = new com.github.mikephil.charting.jobs.MoveViewJob;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r3);

        specialinvoke r1.<com.github.mikephil.charting.jobs.MoveViewJob: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View)>($r2, $f0, 0.0F, $r4, r0);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: boolean hasChartDimens()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean post(java.lang.Runnable)>(r1);

        return;

     label1:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.util.ArrayList mJobs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }
    public void moveViewToY(float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, f1, $f2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.jobs.MoveViewJob r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        com.github.mikephil.charting.utils.Transformer $r4;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.github.mikephil.charting.components.YAxis$AxisDependency;

        f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleY()>();

        f1 = f1 / $f2;

        r2 = new com.github.mikephil.charting.jobs.MoveViewJob;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f1 = f1 / 2.0F;

        $f0 = f1 + $f0;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        specialinvoke r2.<com.github.mikephil.charting.jobs.MoveViewJob: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View)>($r3, 0.0F, $f0, $r4, r0);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.utils.ViewPortHandler: boolean hasChartDimens()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean post(java.lang.Runnable)>(r2);

        return;

     label1:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.util.ArrayList mJobs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }
    public void notifyDataSetChanged()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;
        com.github.mikephil.charting.renderer.DataRenderer $r1;
        com.github.mikephil.charting.components.YAxis $r2;
        com.github.mikephil.charting.utils.ValueFormatter $r3;
        com.github.mikephil.charting.renderer.YAxisRenderer $r4;
        float $f0, $f1;
        com.github.mikephil.charting.renderer.XAxisRenderer $r5;
        com.github.mikephil.charting.data.ChartData $r6;
        com.github.mikephil.charting.data.BarLineScatterCandleData $r7;
        java.util.List $r8;
        com.github.mikephil.charting.components.Legend $r9;
        com.github.mikephil.charting.renderer.LegendRenderer $r10;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label7;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", "Preparing... DATA NOT SET.");

        return;

     label1:
        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", "Preparing...");

     label2:
        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        if $r1 == null goto label3;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r1.<com.github.mikephil.charting.renderer.DataRenderer: void initBuffers()>();

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calcMinMax()>();

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean needsDefaultFormatter()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter>;

        virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)>($r3);

     label4:
        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean needsDefaultFormatter()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter>;

        virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)>($r3);

     label5:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f0 = $r2.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f1 = $r2.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.YAxisRenderer: void computeAxis(float,float)>($f0, $f1);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f0 = $r2.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f1 = $r2.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.YAxisRenderer: void computeAxis(float,float)>($f0, $f1);

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r7 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r6;

        $f0 = virtualinvoke $r7.<com.github.mikephil.charting.data.BarLineScatterCandleData: float getXValAverageLength()>();

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        $r7 = (com.github.mikephil.charting.data.BarLineScatterCandleData) $r6;

        $r8 = virtualinvoke $r7.<com.github.mikephil.charting.data.BarLineScatterCandleData: java.util.List getXVals()>();

        virtualinvoke $r5.<com.github.mikephil.charting.renderer.XAxisRenderer: void computeAxis(float,java.util.List)>($f0, $r8);

        $r9 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.Legend mLegend>;

        if $r9 == null goto label6;

        $r10 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.ChartData mData>;

        virtualinvoke $r10.<com.github.mikephil.charting.renderer.LegendRenderer: void computeLegend(com.github.mikephil.charting.data.ChartData)>($r6);

     label6:
        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

     label7:
        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.graphics.Canvas $r1;
        long l0, l1, $l5;
        boolean $z0;
        com.github.mikephil.charting.renderer.XAxisRenderer $r2;
        com.github.mikephil.charting.components.XAxis $r3;
        int $i2, $i3, $i4;
        com.github.mikephil.charting.renderer.DataRenderer $r4;
        com.github.mikephil.charting.components.YAxis $r5;
        com.github.mikephil.charting.renderer.YAxisRenderer $r6;
        float $f0, $f1;
        java.lang.Integer $r7;
        com.github.mikephil.charting.utils.ViewPortHandler $r8;
        android.graphics.RectF $r9;
        com.github.mikephil.charting.highlight.Highlight[] $r10;
        com.github.mikephil.charting.renderer.LegendRenderer $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDataNotSet>;

        if $z0 == 0 goto label01;

        return;

     label01:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calcModulus()>();

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i2 = $r3.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider,int)>(r0, $i2);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $i2 = $r3.<com.github.mikephil.charting.components.XAxis: int mAxisLabelModulus>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider,int)>(r0, $i2);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void drawGridBackground(android.graphics.Canvas)>($r1);

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 == 0 goto label02;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f0 = $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f1 = $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void computeAxis(float,float)>($f0, $f1);

     label02:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 == 0 goto label03;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f0 = $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f1 = $r5.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void computeAxis(float,float)>($f0, $f1);

     label03:
        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void renderAxisLine(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderAxisLine(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderAxisLine(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled>;

        if $z0 == 0 goto label05;

        $i2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getLowestVisibleXIndex()>();

        $i3 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getHighestVisibleXIndex()>();

        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex>;

        if $r7 == null goto label04;

        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex>;

        $i4 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i4 != $i2 goto label04;

        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex>;

        if $r7 == null goto label04;

        $r7 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex>;

        $i4 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i4 == $i3 goto label05;

     label04:
        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calcMinMax()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastLowestVisibleXIndex> = $r7;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: java.lang.Integer mAutoScaleLastHighestVisibleXIndex> = $r7;

     label05:
        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r8 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r9 = virtualinvoke $r8.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>($r9);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void renderGridLines(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderGridLines(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderGridLines(android.graphics.Canvas)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.components.XAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 == 0 goto label06;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label06:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 == 0 goto label07;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label07:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 == 0 goto label08;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label08:
        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawData(android.graphics.Canvas)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis mXAxis>;

        $z0 = virtualinvoke $r3.<com.github.mikephil.charting.components.XAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 != 0 goto label09;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label09:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 != 0 goto label10;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label10:
        $r5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r5.<com.github.mikephil.charting.components.YAxis: boolean isDrawLimitLinesBehindDataEnabled()>();

        if $z0 != 0 goto label11;

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderLimitLines(android.graphics.Canvas)>($r1);

     label11:
        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean valuesToHighlight()>();

        if $z0 == 0 goto label12;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r10 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])>($r1, $r10);

     label12:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawExtras(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer>;

        virtualinvoke $r2.<com.github.mikephil.charting.renderer.XAxisRenderer: void renderAxisLabels(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderAxisLabels(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight>;

        virtualinvoke $r6.<com.github.mikephil.charting.renderer.YAxisRenderer: void renderAxisLabels(android.graphics.Canvas)>($r1);

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.DataRenderer: void drawValues(android.graphics.Canvas)>($r1);

        $r11 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        virtualinvoke $r11.<com.github.mikephil.charting.renderer.LegendRenderer: void renderLegend(android.graphics.Canvas)>($r1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void drawMarkers(android.graphics.Canvas)>($r1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void drawDescription(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label13;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l0 - l1;

        l0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime>;

        l0 = l0 + l1;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime> = l0;

        l0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles>;

        l0 = l0 + 1L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles> = l0;

        l0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime>;

        $l5 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles>;

        l0 = l0 / $l5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Drawtime: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms, average: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms, cycles: ");

        l1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r13);

     label13:
        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        com.github.mikephil.charting.listener.ChartTouchListener $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        if $r2 == null goto label2;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mTouchEnabled>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.listener.ChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, $r1);

        return $z0;

     label2:
        return 0;
    }
    protected void prepareOffsetMatrix()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.utils.Transformer $r1;
        com.github.mikephil.charting.components.YAxis $r2;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mRightAxisTransformer>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        virtualinvoke $r1.<com.github.mikephil.charting.utils.Transformer: void prepareMatrixOffset(boolean)>($z0);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.components.YAxis: boolean isInverted()>();

        virtualinvoke $r1.<com.github.mikephil.charting.utils.Transformer: void prepareMatrixOffset(boolean)>($z0);

        return;
    }
    protected void prepareValuePxMatrix()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r2;
        com.github.mikephil.charting.utils.Transformer $r3;
        com.github.mikephil.charting.components.YAxis $r4;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mLogEnabled>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preparing Value-Px Matrix, xmin: ");

        $f0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMin>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", xmax: ");

        $f0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMax>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", xdelta: ");

        $f0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r2);

     label1:
        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mRightAxisTransformer>;

        $f0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMin>;

        $f1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f2 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisRight>;

        $f3 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void prepareMatrixValuePx(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r3 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        $f0 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mXChartMin>;

        $f1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f2 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisRange>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis mAxisLeft>;

        $f3 = $r4.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum>;

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void prepareMatrixValuePx(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;
    }
    public void resetTracking()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long totalTime> = 0L;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: long drawCycles> = 0L;

        return;
    }
    public void resetViewPortOffsets()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled> = 0;

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        return;
    }
    public void setAutoScaleMinMaxEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mAutoScaleMinMaxEnabled> = $z0;

        return;
    }
    public void setBorderColor(int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
    public void setBorderWidth(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mBorderPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        return;
    }
    public void setDoubleTapToZoomEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDoubleTapToZoomEnabled> = $z0;

        return;
    }
    public void setDragEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDragEnabled> = $z0;

        return;
    }
    public void setDragOffsetX(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setDragOffsetX(float)>($f0);

        return;
    }
    public void setDragOffsetY(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setDragOffsetY(float)>($f0);

        return;
    }
    public void setDrawBorders(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawBorders> = $z0;

        return;
    }
    public void setDrawGridBackground(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mDrawGridBackground> = $z0;

        return;
    }
    public void setGridBackgroundColor(int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
    public void setHighlightPerDragEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mHighlightPerDragEnabled> = $z0;

        return;
    }
    public void setMaxVisibleValueCount(int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: int mMaxVisibleCount> = $i0;

        return;
    }
    public void setOnDrawListener(com.github.mikephil.charting.listener.OnDrawListener)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.listener.OnDrawListener $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.listener.OnDrawListener;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnDrawListener mDrawListener> = $r1;

        return;
    }
    public void setPaint(android.graphics.Paint, int)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: android.graphics.Paint;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.Chart: void setPaint(android.graphics.Paint,int)>($r1, $i0);

        lookupswitch($i0)
        {
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r0.<com.github.mikephil.charting.charts.BarLineChartBase: android.graphics.Paint mGridBackgroundPaint> = $r1;

        return;
    }
    public void setPinchZoom(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mPinchZoomEnabled> = $z0;

        return;
    }
    public void setRendererLeftYAxis(com.github.mikephil.charting.renderer.YAxisRenderer)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.YAxisRenderer $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.renderer.YAxisRenderer;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft> = $r1;

        return;
    }
    public void setRendererRightYAxis(com.github.mikephil.charting.renderer.YAxisRenderer)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.YAxisRenderer $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.renderer.YAxisRenderer;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight> = $r1;

        return;
    }
    public void setScaleEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled> = $z0;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled> = $z0;

        return;
    }
    public void setScaleMinima(float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setMinimumScaleX(float)>($f0);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setMinimumScaleY(float)>($f1);

        return;
    }
    public void setScaleXEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleXEnabled> = $z0;

        return;
    }
    public void setScaleYEnabled(boolean)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mScaleYEnabled> = $z0;

        return;
    }
    public void setViewPortOffsets(float, float, float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1, $f2, $f3;
        com.github.mikephil.charting.charts.BarLineChartBase$1 $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean mCustomViewPortEnabled> = 1;

        $r1 = new com.github.mikephil.charting.charts.BarLineChartBase$1;

        specialinvoke $r1.<com.github.mikephil.charting.charts.BarLineChartBase$1: void <init>(com.github.mikephil.charting.charts.BarLineChartBase,float,float,float,float)>(r0, $f0, $f1, $f2, $f3);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: boolean post(java.lang.Runnable)>($r1);

        return;
    }
    public void setVisibleXRange(float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1, $f2;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $f0 = $f2 / $f0;

        $f2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $f1 = $f2 / $f1;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setMinMaxScaleX(float,float)>($f1, $f0);

        return;
    }
    public void setVisibleXRangeMaximum(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $f0 = $f1 / $f0;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setMinimumScaleX(float)>($f0);

        return;
    }
    public void setVisibleXRangeMinimum(float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: float mDeltaX>;

        $f0 = $f1 / $f0;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setMaximumScaleX(float)>($f0);

        return;
    }
    public void setVisibleYRangeMaximum(float, com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.github.mikephil.charting.components.YAxis$AxisDependency;

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r1);

        $f0 = $f1 / $f0;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: void setMinimumScaleY(float)>($f0);

        return;
    }
    public void setXAxisRenderer(com.github.mikephil.charting.renderer.XAxisRenderer)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.renderer.XAxisRenderer $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 := @parameter0: com.github.mikephil.charting.renderer.XAxisRenderer;

        r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer> = $r1;

        return;
    }
    public void zoom(float, float, float, float)
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f3 = neg $f3;

        $r1 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix zoom(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r2 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r1, r0, 1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

        return;
    }
    public void zoomIn()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        int $i0;
        float $f0, $f1;
        android.graphics.Matrix $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getWidth()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getHeight()>();

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $f1 = neg $f1;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix zoomIn(float,float)>($f0, $f1);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r2, r0, 1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

        return;
    }
    public void zoomOut()
    {
        com.github.mikephil.charting.charts.BarLineChartBase r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        int $i0;
        float $f0, $f1;
        android.graphics.Matrix $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarLineChartBase;

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getWidth()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: int getHeight()>();

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $f1 = neg $f1;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix zoomOut(float,float)>($f0, $f1);

        $r1 = r0.<com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean)>($r2, r0, 1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calculateOffsets()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void postInvalidate()>();

        return;
    }
