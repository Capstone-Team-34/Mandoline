com.github.mikephil.charting.charts.PieChart extends com.github.mikephil.charting.charts.PieRadarChartBase
private float[] mAbsoluteAngles
private java.lang.String mCenterText
private float mCenterTextRadiusPercent
private boolean mCenterTextWordWrapEnabled
private android.graphics.RectF mCircleBox
private float[] mDrawAngles
private boolean mDrawCenterText
private boolean mDrawHole
private boolean mDrawRoundedSlices
private boolean mDrawXLabels
private float mHoleRadiusPercent
protected float mTransparentCircleRadiusPercent
private boolean mUsePercentValues
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.content.Context $r1;
        android.graphics.RectF $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox> = $r2;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawXLabels> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawHole> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mUsePercentValues> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawRoundedSlices> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: java.lang.String mCenterText> = "";

        r0.<com.github.mikephil.charting.charts.PieChart: float mHoleRadiusPercent> = 50.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: float mTransparentCircleRadiusPercent> = 55.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawCenterText> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mCenterTextWordWrapEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: float mCenterTextRadiusPercent> = 1.0F;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.RectF $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox> = $r3;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawXLabels> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawHole> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mUsePercentValues> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawRoundedSlices> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: java.lang.String mCenterText> = "";

        r0.<com.github.mikephil.charting.charts.PieChart: float mHoleRadiusPercent> = 50.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: float mTransparentCircleRadiusPercent> = 55.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawCenterText> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mCenterTextWordWrapEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: float mCenterTextRadiusPercent> = 1.0F;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.RectF $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox> = $r3;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawXLabels> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawHole> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mUsePercentValues> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawRoundedSlices> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: java.lang.String mCenterText> = "";

        r0.<com.github.mikephil.charting.charts.PieChart: float mHoleRadiusPercent> = 50.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: float mTransparentCircleRadiusPercent> = 55.0F;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawCenterText> = 1;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mCenterTextWordWrapEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.PieChart: float mCenterTextRadiusPercent> = 1.0F;

        return;
    }
    private float calcAngle(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0, $f1;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.PieData $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: float getYValueSum()>();

        $f0 = $f0 / $f1;

        $f0 = $f0 * 360.0F;

        return $f0;
    }
    private void calcAngles()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.PieData $r2;
        int $i0, i1, $i2, $i3;
        float[] $r3, $r9;
        java.util.List $r4, $r7;
        java.lang.Object $r5;
        com.github.mikephil.charting.data.PieDataSet r6;
        com.github.mikephil.charting.data.Entry $r8;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: int getYValCount()>();

        $r3 = newarray (float)[$i0];

        r0.<com.github.mikephil.charting.charts.PieChart: float[] mDrawAngles> = $r3;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: int getYValCount()>();

        $r3 = newarray (float)[$i0];

        r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles> = $r3;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $r4 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: java.util.List getDataSets()>();

        $i0 = 0;

        i1 = 0;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: int getDataSetCount()>();

        if i1 >= $i2 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (com.github.mikephil.charting.data.PieDataSet) $r5;

        $r7 = virtualinvoke r6.<com.github.mikephil.charting.data.PieDataSet: java.util.List getYVals()>();

        $i2 = 0;

     label2:
        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i2 >= $i3 goto label5;

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mDrawAngles>;

        $r5 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r8 = (com.github.mikephil.charting.data.Entry) $r5;

        $f0 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f0 = specialinvoke r0.<com.github.mikephil.charting.charts.PieChart: float calcAngle(float)>($f0);

        $r3[$i0] = $f0;

        if $i0 != 0 goto label4;

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        $r9 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mDrawAngles>;

        $f0 = $r9[$i0];

        $r3[$i0] = $f0;

     label3:
        $i0 = $i0 + 1;

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        $r9 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        $i3 = $i0 + -1;

        $f0 = $r9[$i3];

        $r9 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mDrawAngles>;

        $f1 = $r9[$i0];

        $f0 = $f0 + $f1;

        $r3[$i0] = $f0;

        goto label3;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }
    protected void calcMinMax()
    {
        com.github.mikephil.charting.charts.PieChart r0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void calcMinMax()>();

        specialinvoke r0.<com.github.mikephil.charting.charts.PieChart: void calcAngles()>();

        return;
    }
    public void calculateOffsets()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        android.graphics.PointF $r1;
        android.graphics.RectF $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void calculateOffsets()>();

        $z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return;

     label1:
        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: float getDiameter()>();

        f0 = f0 / 2.0F;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterOffsets()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        $f1 = $r1.<android.graphics.PointF: float x>;

        $f1 = $f1 - f0;

        $f2 = $r1.<android.graphics.PointF: float y>;

        $f2 = $f2 - f0;

        $f3 = $r1.<android.graphics.PointF: float x>;

        $f3 = $f3 + f0;

        $f4 = $r1.<android.graphics.PointF: float y>;

        f0 = $f4 + f0;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f1, $f2, $f3, f0);

        return;
    }
    public float[] getAbsoluteAngles()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float[] r1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        r1 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        return r1;
    }
    public android.graphics.PointF getCenterCircleBox()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.graphics.PointF $r1;
        android.graphics.RectF $r2;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 = new android.graphics.PointF;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float centerX()>();

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float centerY()>();

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r1;
    }
    public java.lang.String getCenterText()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        java.lang.String r1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        r1 = r0.<com.github.mikephil.charting.charts.PieChart: java.lang.String mCenterText>;

        return r1;
    }
    public float getCenterTextRadiusPercent()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        f0 = r0.<com.github.mikephil.charting.charts.PieChart: float mCenterTextRadiusPercent>;

        return f0;
    }
    public android.graphics.RectF getCircleBox()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.graphics.RectF r1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        r1 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        return r1;
    }
    public int getDataSetIndexForIndex(int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0, i1, $i2;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.PieData $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        com.github.mikephil.charting.data.DataSet $r5;
        com.github.mikephil.charting.data.Entry $r6;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.PieData) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.data.PieData: java.util.List getDataSets()>();

        i1 = 0;

     label1:
        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (com.github.mikephil.charting.data.DataSet) $r4;

        $r6 = virtualinvoke $r5.<com.github.mikephil.charting.data.DataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i0);

        if $r6 == null goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }
    public float[] getDrawAngles()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float[] r1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        r1 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mDrawAngles>;

        return r1;
    }
    public float getHoleRadius()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        f0 = r0.<com.github.mikephil.charting.charts.PieChart: float mHoleRadiusPercent>;

        return f0;
    }
    public int getIndexForAngle(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0, $f1;
        int i0, $i1;
        float[] $r1;
        byte $b2;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: float getRotationAngle()>();

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float getNormalizedAngle(float)>($f0);

        i0 = 0;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: float[] mAbsoluteAngles>;

        $f1 = $r1[i0];

        $b2 = $f1 cmpl $f0;

        if $b2 <= 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }
    protected float[] getMarkerPosition(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.highlight.Highlight)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        com.github.mikephil.charting.data.Entry $r1;
        com.github.mikephil.charting.highlight.Highlight $r2;
        float[] $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: com.github.mikephil.charting.data.Entry;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight;

        $r3 = newarray (float)[0];

        return $r3;
    }
    public float getRadius()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.graphics.RectF $r1;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        if $r1 != null goto label1;

        return 0.0F;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        $f0 = virtualinvoke $r1.<android.graphics.RectF: float width()>();

        $f0 = $f0 / 2.0F;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: android.graphics.RectF mCircleBox>;

        $f1 = virtualinvoke $r1.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }
    protected float getRequiredBaseOffset()
    {
        com.github.mikephil.charting.charts.PieChart r0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        return 0.0F;
    }
    protected float getRequiredBottomOffset()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        com.github.mikephil.charting.renderer.LegendRenderer $r1;
        android.graphics.Paint $r2;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.renderer.LegendRenderer: android.graphics.Paint getLabelPaint()>();

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getTextSize()>();

        $f0 = $f0 * 2.0F;

        return $f0;
    }
    public float getTransparentCircleRadius()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        f0 = r0.<com.github.mikephil.charting.charts.PieChart: float mTransparentCircleRadiusPercent>;

        return f0;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        com.github.mikephil.charting.renderer.PieChartRenderer $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void init()>();

        $r1 = new com.github.mikephil.charting.renderer.PieChartRenderer;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        specialinvoke $r1.<com.github.mikephil.charting.renderer.PieChartRenderer: void <init>(com.github.mikephil.charting.charts.PieChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>(r0, $r2, $r3);

        r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer> = $r1;

        return;
    }
    public boolean isCenterTextWordWrapEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mCenterTextWordWrapEnabled>;

        return z0;
    }
    public boolean isDrawCenterTextEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawCenterText>;

        return z0;
    }
    public boolean isDrawHoleEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawHole>;

        return z0;
    }
    public boolean isDrawRoundedSlicesEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawRoundedSlices>;

        return z0;
    }
    public boolean isDrawSliceTextEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawXLabels>;

        return z0;
    }
    public boolean isHoleTransparent()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        com.github.mikephil.charting.renderer.DataRenderer $r1;
        com.github.mikephil.charting.renderer.PieChartRenderer $r2;
        android.graphics.Paint $r3;
        android.graphics.Xfermode $r4;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        $r4 = virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode getXfermode()>();

        if $r4 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isUsePercentValuesEnabled()
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mUsePercentValues>;

        return z0;
    }
    public boolean needsHighlight(int, int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0, $i1, i2, $i3;
        boolean $z0;
        com.github.mikephil.charting.highlight.Highlight[] $r1;
        com.github.mikephil.charting.highlight.Highlight $r2;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: boolean valuesToHighlight()>();

        if $z0 == 0 goto label4;

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $i3 = lengthof $r1;

        if i2 >= $i3 goto label4;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $r2 = $r1[i2];

        $i3 = virtualinvoke $r2.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        if $i3 != $i0 goto label3;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $r2 = $r1[i2];

        $i3 = virtualinvoke $r2.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        if $i3 != $i1 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        boolean $z0;
        com.github.mikephil.charting.renderer.DataRenderer $r3;
        com.github.mikephil.charting.renderer.LegendRenderer $r4;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.github.mikephil.charting.charts.PieRadarChartBase: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.github.mikephil.charting.charts.PieChart: boolean mDataNotSet>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.DataRenderer: void drawData(android.graphics.Canvas)>($r1);

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: boolean valuesToHighlight()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.DataRenderer: void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])>($r1, $r2);

     label2:
        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.DataRenderer: void drawExtras(android.graphics.Canvas)>($r1);

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        virtualinvoke $r3.<com.github.mikephil.charting.renderer.DataRenderer: void drawValues(android.graphics.Canvas)>($r1);

        $r4 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        virtualinvoke $r4.<com.github.mikephil.charting.renderer.LegendRenderer: void renderLegend(android.graphics.Canvas)>($r1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.PieChart: void drawDescription(android.graphics.Canvas)>($r1);

        return;
    }
    public void setCenterText(java.lang.String)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        java.lang.String $r1;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: java.lang.String;

        r0.<com.github.mikephil.charting.charts.PieChart: java.lang.String mCenterText> = $r1;

        return;
    }
    public void setCenterTextColor(int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0;
        android.text.TextPaint $r1;
        com.github.mikephil.charting.renderer.DataRenderer $r2;
        com.github.mikephil.charting.renderer.PieChartRenderer $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r1 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint getPaintCenterText()>();

        virtualinvoke $r1.<android.text.TextPaint: void setColor(int)>($i0);

        return;
    }
    public void setCenterTextRadiusPercent(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.charts.PieChart: float mCenterTextRadiusPercent> = $f0;

        return;
    }
    public void setCenterTextSize(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0;
        com.github.mikephil.charting.renderer.DataRenderer $r1;
        com.github.mikephil.charting.renderer.PieChartRenderer $r2;
        android.text.TextPaint $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint getPaintCenterText()>();

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        virtualinvoke $r3.<android.text.TextPaint: void setTextSize(float)>($f0);

        return;
    }
    public void setCenterTextSizePixels(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0;
        android.text.TextPaint $r1;
        com.github.mikephil.charting.renderer.DataRenderer $r2;
        com.github.mikephil.charting.renderer.PieChartRenderer $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r1 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint getPaintCenterText()>();

        virtualinvoke $r1.<android.text.TextPaint: void setTextSize(float)>($f0);

        return;
    }
    public void setCenterTextTypeface(android.graphics.Typeface)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        android.graphics.Typeface $r1;
        android.text.TextPaint $r2;
        com.github.mikephil.charting.renderer.DataRenderer $r3;
        com.github.mikephil.charting.renderer.PieChartRenderer $r4;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $r1 := @parameter0: android.graphics.Typeface;

        $r3 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r4 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r3;

        $r2 = virtualinvoke $r4.<com.github.mikephil.charting.renderer.PieChartRenderer: android.text.TextPaint getPaintCenterText()>();

        virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r1);

        return;
    }
    public void setCenterTextWordWrapEnabled(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mCenterTextWordWrapEnabled> = $z0;

        return;
    }
    public void setDrawCenterText(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawCenterText> = $z0;

        return;
    }
    public void setDrawHoleEnabled(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawHole> = $z0;

        return;
    }
    public void setDrawSliceText(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mDrawXLabels> = $z0;

        return;
    }
    public void setHoleColor(int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0;
        com.github.mikephil.charting.renderer.DataRenderer $r1;
        com.github.mikephil.charting.renderer.PieChartRenderer $r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(null);

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
    public void setHoleColorTransparent(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r1;
        com.github.mikephil.charting.renderer.DataRenderer $r2;
        com.github.mikephil.charting.renderer.PieChartRenderer $r3;
        android.graphics.Paint $r4;
        android.graphics.PorterDuffXfermode $r5;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-1);

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        $r5 = new android.graphics.PorterDuffXfermode;

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        specialinvoke $r5.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r1);

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r5);

        return;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintHole()>();

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(null);

        return;
    }
    public void setHoleRadius(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.charts.PieChart: float mHoleRadiusPercent> = $f0;

        return;
    }
    public void setTransparentCircleAlpha(int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0;
        android.graphics.Paint $r1;
        com.github.mikephil.charting.renderer.DataRenderer $r2;
        com.github.mikephil.charting.renderer.PieChartRenderer $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $r2 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r3 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r2;

        $r1 = virtualinvoke $r3.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintTransparentCircle()>();

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }
    public void setTransparentCircleColor(int)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        int $i0, $i1;
        com.github.mikephil.charting.renderer.DataRenderer $r1;
        com.github.mikephil.charting.renderer.PieChartRenderer $r2;
        android.graphics.Paint $r3;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.PieChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        $r2 = (com.github.mikephil.charting.renderer.PieChartRenderer) $r1;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.renderer.PieChartRenderer: android.graphics.Paint getPaintTransparentCircle()>();

        $i1 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>($i1);

        return;
    }
    public void setTransparentCircleRadius(float)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.charts.PieChart: float mTransparentCircleRadiusPercent> = $f0;

        return;
    }
    public void setUsePercentValues(boolean)
    {
        com.github.mikephil.charting.charts.PieChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.PieChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.PieChart: boolean mUsePercentValues> = $z0;

        return;
    }
