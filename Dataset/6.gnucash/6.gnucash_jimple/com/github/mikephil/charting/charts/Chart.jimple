com.github.mikephil.charting.charts.Chart extends android.view.ViewGroup implements com.github.mikephil.charting.interfaces.ChartInterface
public static final java.lang.String LOG_TAG
public static final int PAINT_CENTER_TEXT
public static final int PAINT_DESCRIPTION
public static final int PAINT_GRID_BACKGROUND
public static final int PAINT_HOLE
public static final int PAINT_INFO
public static final int PAINT_LEGEND_LABEL
protected com.github.mikephil.charting.animation.ChartAnimator mAnimator
protected com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener
protected com.github.mikephil.charting.data.ChartData mData
protected boolean mDataNotSet
protected com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter
protected float mDeltaX
protected android.graphics.Paint mDescPaint
protected java.lang.String mDescription
private android.graphics.PointF mDescriptionPosition
private boolean mDragDecelerationEnabled
private float mDragDecelerationFrictionCoef
protected boolean mDrawMarkerViews
protected android.graphics.Paint mDrawPaint
protected boolean mDrawUnitInChart
private float mExtraBottomOffset
private float mExtraLeftOffset
private float mExtraRightOffset
private float mExtraTopOffset
private com.github.mikephil.charting.listener.OnChartGestureListener mGestureListener
protected com.github.mikephil.charting.highlight.ChartHighlighter mHighlighter
protected com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight
protected android.graphics.Paint mInfoPaint
protected java.util.ArrayList mJobs
protected com.github.mikephil.charting.components.Legend mLegend
protected com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer
protected boolean mLogEnabled
protected com.github.mikephil.charting.components.MarkerView mMarkerView
private java.lang.String mNoDataText
private java.lang.String mNoDataTextDescription
private boolean mOffsetsCalculated
protected com.github.mikephil.charting.renderer.DataRenderer mRenderer
protected com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener
protected boolean mTouchEnabled
protected com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler
protected float mXChartMax
protected float mXChartMin
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.content.Context $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData> = null;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDragDecelerationEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: float mDragDecelerationFrictionCoef> = 0.9F;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription> = "Description";

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawUnitInChart> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: float mDeltaX> = 1.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMin> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMax> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mTouchEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataText> = "No chart data available.";

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraTopOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraRightOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraBottomOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraLeftOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated> = 0;

        $r2 = newarray (com.github.mikephil.charting.highlight.Highlight)[0];

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = $r2;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews> = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs> = $r3;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void init()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.github.mikephil.charting.highlight.Highlight[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData> = null;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDragDecelerationEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: float mDragDecelerationFrictionCoef> = 0.9F;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription> = "Description";

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawUnitInChart> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: float mDeltaX> = 1.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMin> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMax> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mTouchEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataText> = "No chart data available.";

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraTopOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraRightOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraBottomOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraLeftOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated> = 0;

        $r3 = newarray (com.github.mikephil.charting.highlight.Highlight)[0];

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = $r3;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews> = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs> = $r4;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void init()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.github.mikephil.charting.highlight.Highlight[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData> = null;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDragDecelerationEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: float mDragDecelerationFrictionCoef> = 0.9F;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription> = "Description";

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawUnitInChart> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: float mDeltaX> = 1.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMin> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mXChartMax> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mTouchEnabled> = 1;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataText> = "No chart data available.";

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraTopOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraRightOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraBottomOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraLeftOffset> = 0.0F;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated> = 0;

        $r3 = newarray (com.github.mikephil.charting.highlight.Highlight)[0];

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = $r3;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews> = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs> = $r4;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void init()>();

        return;
    }
    public void addJob(java.lang.Runnable)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.Runnable $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void animateX(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.ChartAnimator $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r1.<com.github.mikephil.charting.animation.ChartAnimator: void animateX(int)>($i0);

        return;
    }
    public void animateX(int, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.Easing$EasingOption;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r2.<com.github.mikephil.charting.animation.ChartAnimator: void animateX(int,com.github.mikephil.charting.animation.Easing$EasingOption)>($i0, $r1);

        return;
    }
    public void animateX(int, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.EasingFunction $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.EasingFunction;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r2.<com.github.mikephil.charting.animation.ChartAnimator: void animateX(int,com.github.mikephil.charting.animation.EasingFunction)>($i0, $r1);

        return;
    }
    public void animateXY(int, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.ChartAnimator $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r1.<com.github.mikephil.charting.animation.ChartAnimator: void animateXY(int,int)>($i0, $i1);

        return;
    }
    public void animateXY(int, int, com.github.mikephil.charting.animation.Easing$EasingOption, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1, $r2;
        com.github.mikephil.charting.animation.ChartAnimator $r3;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.github.mikephil.charting.animation.Easing$EasingOption;

        $r2 := @parameter3: com.github.mikephil.charting.animation.Easing$EasingOption;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r3.<com.github.mikephil.charting.animation.ChartAnimator: void animateXY(int,int,com.github.mikephil.charting.animation.Easing$EasingOption,com.github.mikephil.charting.animation.Easing$EasingOption)>($i0, $i1, $r1, $r2);

        return;
    }
    public void animateXY(int, int, com.github.mikephil.charting.animation.EasingFunction, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.EasingFunction $r1, $r2;
        com.github.mikephil.charting.animation.ChartAnimator $r3;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.github.mikephil.charting.animation.EasingFunction;

        $r2 := @parameter3: com.github.mikephil.charting.animation.EasingFunction;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r3.<com.github.mikephil.charting.animation.ChartAnimator: void animateXY(int,int,com.github.mikephil.charting.animation.EasingFunction,com.github.mikephil.charting.animation.EasingFunction)>($i0, $i1, $r1, $r2);

        return;
    }
    public void animateY(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.ChartAnimator $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r1.<com.github.mikephil.charting.animation.ChartAnimator: void animateY(int)>($i0);

        return;
    }
    public void animateY(int, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.Easing$EasingOption;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r2.<com.github.mikephil.charting.animation.ChartAnimator: void animateY(int,com.github.mikephil.charting.animation.Easing$EasingOption)>($i0, $r1);

        return;
    }
    public void animateY(int, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.EasingFunction $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.EasingFunction;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        virtualinvoke $r2.<com.github.mikephil.charting.animation.ChartAnimator: void animateY(int,com.github.mikephil.charting.animation.EasingFunction)>($i0, $r1);

        return;
    }
protected abstract void calcMinMax() { 
// no body
} 
    protected void calculateFormatter(float, float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0, $f1;
        com.github.mikephil.charting.data.ChartData $r1;
        int $i0;
        com.github.mikephil.charting.utils.DefaultValueFormatter $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r1 == null goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getXValCount()>();

        if $i0 >= 2 goto label3;

     label1:
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

     label2:
        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int getDecimals(float)>($f0);

        $r2 = new com.github.mikephil.charting.utils.DefaultValueFormatter;

        specialinvoke $r2.<com.github.mikephil.charting.utils.DefaultValueFormatter: void <init>(int)>($i0);

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter> = $r2;

        return;

     label3:
        $f0 = $f1 - $f0;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        goto label2;
    }
protected abstract void calculateOffsets() { 
// no body
} 
    public void clear()
    {
        com.github.mikephil.charting.charts.Chart r0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData> = null;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet> = 1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void invalidate()>();

        return;
    }
    public void clearAllJobs()
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.util.ArrayList $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }
    public void clearValues()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: void clearValues()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void invalidate()>();

        return;
    }
    public void disableScroll()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.view.ViewParent $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.view.ViewParent getParent()>();

        if $r1 == null goto label1;

        interfaceinvoke $r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label1:
        return;
    }
    protected void drawDescription(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Canvas $r1;
        java.lang.String $r2;
        boolean $z0;
        android.graphics.PointF $r3;
        int $i0;
        float $f0, $f1, $f2;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        android.graphics.Paint $r5;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.PointF mDescriptionPosition>;

        if $r3 != null goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription>;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getWidth()>();

        $f0 = (float) $i0;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetRight()>();

        $f0 = $f0 - $f1;

        $f0 = $f0 - 10.0F;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getHeight()>();

        $f1 = (float) $i0;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float offsetBottom()>();

        $f1 = $f1 - $f2;

        $f1 = $f1 - 10.0F;

        $r5 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r5);

        return;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription>;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.PointF mDescriptionPosition>;

        $f0 = $r3.<android.graphics.PointF: float x>;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.PointF mDescriptionPosition>;

        $f1 = $r3.<android.graphics.PointF: float y>;

        $r5 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r5);

     label2:
        return;
    }
    protected void drawMarkers(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight r2, $r7;
        float f0, $f1, $f2;
        com.github.mikephil.charting.components.MarkerView $r3, $r11;
        boolean $z0;
        int i0, $i1, $i3;
        com.github.mikephil.charting.highlight.Highlight[] $r4;
        byte $b2;
        com.github.mikephil.charting.animation.ChartAnimator $r5;
        com.github.mikephil.charting.data.ChartData $r6;
        com.github.mikephil.charting.data.Entry $r8;
        float[] $r9;
        com.github.mikephil.charting.utils.ViewPortHandler $r10;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        if $r3 == null goto label6;

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews>;

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: boolean valuesToHighlight()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label6;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        r2 = $r4[i0];

        $i1 = virtualinvoke r2.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        virtualinvoke r2.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $f1 = (float) $i1;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mDeltaX>;

        $b2 = $f1 cmpg f0;

        if $b2 > 0 goto label3;

        $f1 = (float) $i1;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mDeltaX>;

        $r5 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r5.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        f0 = f0 * $f2;

        $b2 = $f1 cmpg f0;

        if $b2 > 0 goto label3;

        $r6 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $r7 = $r4[i0];

        $r8 = virtualinvoke $r6.<com.github.mikephil.charting.data.ChartData: com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight)>($r7);

        if $r8 == null goto label3;

        $i1 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $r7 = $r4[i0];

        $i3 = virtualinvoke $r7.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        if $i1 == $i3 goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r9 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: float[] getMarkerPosition(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>($r8, r2);

        $r10 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = $r9[0];

        f0 = $r9[1];

        $z0 = virtualinvoke $r10.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBounds(float,float)>($f1, f0);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: void refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>($r8, r2);

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: void measure(int,int)>($i1, $i3);

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $r11 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $i1 = virtualinvoke $r11.<com.github.mikephil.charting.components.MarkerView: int getMeasuredWidth()>();

        $r11 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $i3 = virtualinvoke $r11.<com.github.mikephil.charting.components.MarkerView: int getMeasuredHeight()>();

        virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: void layout(int,int,int,int)>(0, 0, $i1, $i3);

        $f1 = $r9[1];

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $i1 = virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: int getHeight()>();

        f0 = (float) $i1;

        $f1 = $f1 - f0;

        $b2 = $f1 cmpg 0.0F;

        if $b2 > 0 goto label5;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $i1 = virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: int getHeight()>();

        $f1 = (float) $i1;

        f0 = $r9[1];

        f0 = $f1 - f0;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $f1 = $r9[0];

        $f2 = $r9[1];

        f0 = $f2 + f0;

        virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: void draw(android.graphics.Canvas,float,float)>($r1, $f1, f0);

        goto label3;

     label5:
        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        $f1 = $r9[0];

        f0 = $r9[1];

        virtualinvoke $r3.<com.github.mikephil.charting.components.MarkerView: void draw(android.graphics.Canvas,float,float)>($r1, $f1, f0);

        goto label3;

     label6:
        return;
    }
    public void enableScroll()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.view.ViewParent $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.view.ViewParent getParent()>();

        if $r1 == null goto label1;

        interfaceinvoke $r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(0);

     label1:
        return;
    }
    public com.github.mikephil.charting.animation.ChartAnimator getAnimator()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.animation.ChartAnimator r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        return r1;
    }
    public float getAverage()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0, $f1;
        com.github.mikephil.charting.data.ChartData $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: float getYValueSum()>();

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getYValCount()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }
    public float getAverage(java.lang.String)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.DataSet $r3;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: com.github.mikephil.charting.data.DataSet getDataSetByLabel(java.lang.String,boolean)>($r1, 1);

        $f0 = virtualinvoke $r3.<com.github.mikephil.charting.data.DataSet: float getYValueSum()>();

        $i0 = virtualinvoke $r3.<com.github.mikephil.charting.data.DataSet: int getEntryCount()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }
    public android.graphics.PointF getCenter()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.PointF $r1;
        int $i0;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = new android.graphics.PointF;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getWidth()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getHeight()>();

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r1;
    }
    public android.graphics.PointF getCenterOfView()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.PointF $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenter()>();

        return $r1;
    }
    public android.graphics.PointF getCenterOffsets()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.PointF $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.PointF getContentCenter()>();

        return $r1;
    }
    public android.graphics.Bitmap getChartBitmap()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Canvas r1;
        android.graphics.Bitmap$Config $r2;
        int $i0, $i1;
        android.graphics.Bitmap $r3;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getWidth()>();

        $i1 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getHeight()>();

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r2);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.graphics.drawable.Drawable getBackground()>();

        if $r4 == null goto label2;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void draw(android.graphics.Canvas)>(r1);

        return $r3;

     label2:
        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-1);

        goto label1;
    }
    public android.graphics.RectF getContentRect()
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.RectF $r1;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r1 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: android.graphics.RectF getContentRect()>();

        return $r1;
    }
    public com.github.mikephil.charting.data.ChartData getData()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.data.ChartData r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        return r1;
    }
    public com.github.mikephil.charting.utils.ValueFormatter getDefaultValueFormatter()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.utils.ValueFormatter r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter>;

        return r1;
    }
    public float getDragDecelerationFrictionCoef()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mDragDecelerationFrictionCoef>;

        return f0;
    }
    public java.util.List getEntriesAtIndex(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, i1, $i2;
        java.util.ArrayList r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.DataSet $r3;
        com.github.mikephil.charting.data.Entry $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: int getDataSetCount()>();

        if i1 >= $i2 goto label3;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>(i1);

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.data.DataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i0);

        if $r4 == null goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }
    public float getExtraBottomOffset()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mExtraBottomOffset>;

        return f0;
    }
    public float getExtraLeftOffset()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mExtraLeftOffset>;

        return f0;
    }
    public float getExtraRightOffset()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mExtraRightOffset>;

        return f0;
    }
    public float getExtraTopOffset()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mExtraTopOffset>;

        return f0;
    }
    public com.github.mikephil.charting.highlight.Highlight[] getHighlighted()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.highlight.Highlight[] r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        return r1;
    }
    public java.util.ArrayList getJobs()
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.util.ArrayList r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        return r1;
    }
    public com.github.mikephil.charting.components.Legend getLegend()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.components.Legend r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.Legend mLegend>;

        return r1;
    }
    public com.github.mikephil.charting.renderer.LegendRenderer getLegendRenderer()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.renderer.LegendRenderer r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer>;

        return r1;
    }
protected abstract float[] getMarkerPosition(com.github.mikephil.charting.data.Entry, com.github.mikephil.charting.highlight.Highlight) { 
// no body
} 
    public com.github.mikephil.charting.components.MarkerView getMarkerView()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.components.MarkerView r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView>;

        return r1;
    }
    public com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.listener.OnChartGestureListener r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartGestureListener mGestureListener>;

        return r1;
    }
    public android.graphics.Paint getPaint(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 7: goto label2;
            case 11: goto label3;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        r1 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        return r1;

     label3:
        r1 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        return r1;
    }
    public float getPercentOfTotal(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0, $f1;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $f1 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: float getYValueSum()>();

        $f0 = $f0 / $f1;

        $f0 = $f0 * 100.0F;

        return $f0;
    }
    public com.github.mikephil.charting.renderer.DataRenderer getRenderer()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.renderer.DataRenderer r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.DataRenderer mRenderer>;

        return r1;
    }
    public int getValueCount()
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getYValCount()>();

        return $i0;
    }
    public com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.utils.ViewPortHandler r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        return r1;
    }
    public float getXChartMax()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mXChartMax>;

        return f0;
    }
    public float getXChartMin()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        f0 = r0.<com.github.mikephil.charting.charts.Chart: float mXChartMin>;

        return f0;
    }
    public int getXValCount()
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getXValCount()>();

        return $i0;
    }
    public java.lang.String getXValue(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1;
        com.github.mikephil.charting.data.ChartData $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r1 == null goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getXValCount()>();

        if $i1 > $i0 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: java.util.List getXVals()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }
    public float getYMax()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: float getYMax()>();

        return $f0;
    }
    public float getYMin()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: float getYMin()>();

        return $f0;
    }
    public float getYValueSum()
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $f0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: float getYValueSum()>();

        return $f0;
    }
    public void highlightTouch(com.github.mikephil.charting.highlight.Highlight)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.highlight.Highlight $r1;
        com.github.mikephil.charting.data.Entry r2, $r7;
        com.github.mikephil.charting.listener.OnChartValueSelectedListener $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.github.mikephil.charting.data.ChartData $r6;
        int $i0, $i1;
        com.github.mikephil.charting.highlight.Highlight[] $r8;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.highlight.Highlight;

        r2 = null;

        if $r1 != null goto label2;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = null;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void invalidate()>();

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener>;

        if $r3 == null goto label7;

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: boolean valuesToHighlight()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener>;

        interfaceinvoke $r3.<com.github.mikephil.charting.listener.OnChartValueSelectedListener: void onNothingSelected()>();

        return;

     label2:
        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Highlighted: ");

        $r5 = virtualinvoke $r1.<com.github.mikephil.charting.highlight.Highlight: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r5);

     label3:
        $r6 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r7 = virtualinvoke $r6.<com.github.mikephil.charting.data.ChartData: com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight)>($r1);

        r2 = $r7;

        if $r7 == null goto label4;

        $i0 = virtualinvoke $r7.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i1 = virtualinvoke $r1.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        if $i0 == $i1 goto label5;

     label4:
        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = null;

        $r1 = null;

        goto label1;

     label5:
        $r8 = newarray (com.github.mikephil.charting.highlight.Highlight)[1];

        $r8[0] = $r1;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = $r8;

        goto label1;

     label6:
        $r3 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        interfaceinvoke $r3.<com.github.mikephil.charting.listener.OnChartValueSelectedListener: void onValueSelected(com.github.mikephil.charting.data.Entry,int,com.github.mikephil.charting.highlight.Highlight)>(r2, $i0, $r1);

     label7:
        return;
    }
    public void highlightValue(int, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1, $i2;
        com.github.mikephil.charting.highlight.Highlight $r1;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.highlight.Highlight[] $r3;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: int getXValCount()>();

        if $i0 >= $i2 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: int getDataSetCount()>();

        if $i1 < $i2 goto label2;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void highlightValues(com.github.mikephil.charting.highlight.Highlight[])>(null);

        return;

     label2:
        $r3 = newarray (com.github.mikephil.charting.highlight.Highlight)[1];

        $r1 = new com.github.mikephil.charting.highlight.Highlight;

        specialinvoke $r1.<com.github.mikephil.charting.highlight.Highlight: void <init>(int,int)>($i0, $i1);

        $r3[0] = $r1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void highlightValues(com.github.mikephil.charting.highlight.Highlight[])>($r3);

        return;
    }
    public void highlightValues(com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.highlight.Highlight[] $r1;
        int $i0;
        com.github.mikephil.charting.listener.ChartTouchListener $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.highlight.Highlight[];

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight> = $r1;

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener>;

        virtualinvoke $r2.<com.github.mikephil.charting.listener.ChartTouchListener: void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight)>(null);

     label2:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void invalidate()>();

        return;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.animation.ChartAnimator $r1;
        android.content.Context $r2;
        com.github.mikephil.charting.utils.DefaultValueFormatter $r3;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        com.github.mikephil.charting.components.Legend $r5;
        com.github.mikephil.charting.renderer.LegendRenderer $r6;
        android.graphics.Paint $r7;
        android.graphics.Paint$Align $r8;
        float $f0;
        boolean $z0;
        com.github.mikephil.charting.charts.Chart$1 $r9;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setWillNotDraw(boolean)>(0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

        $r1 = new com.github.mikephil.charting.animation.ChartAnimator;

        specialinvoke $r1.<com.github.mikephil.charting.animation.ChartAnimator: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator> = $r1;

     label1:
        $r2 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.content.Context getContext()>();

        staticinvoke <com.github.mikephil.charting.utils.Utils: void init(android.content.Context)>($r2);

        $r3 = new com.github.mikephil.charting.utils.DefaultValueFormatter;

        specialinvoke $r3.<com.github.mikephil.charting.utils.DefaultValueFormatter: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter> = $r3;

        $r4 = new com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler> = $r4;

        $r5 = new com.github.mikephil.charting.components.Legend;

        specialinvoke $r5.<com.github.mikephil.charting.components.Legend: void <init>()>();

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.Legend mLegend> = $r5;

        $r6 = new com.github.mikephil.charting.renderer.LegendRenderer;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r5 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.Legend mLegend>;

        specialinvoke $r6.<com.github.mikephil.charting.renderer.LegendRenderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.Legend)>($r4, $r5);

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer> = $r6;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint> = $r7;

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        $r8 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;

        virtualinvoke $r7.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r8);

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(9.0F);

        virtualinvoke $r7.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint> = $r7;

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(247, 189, 51);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        $r8 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r7.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r8);

        $r7 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(12.0F);

        virtualinvoke $r7.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(4);

        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDrawPaint> = $r7;

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("", "Chart.init()");

        return;

     label2:
        $r1 = new com.github.mikephil.charting.animation.ChartAnimator;

        $r9 = new com.github.mikephil.charting.charts.Chart$1;

        specialinvoke $r9.<com.github.mikephil.charting.charts.Chart$1: void <init>(com.github.mikephil.charting.charts.Chart)>(r0);

        specialinvoke $r1.<com.github.mikephil.charting.animation.ChartAnimator: void <init>(android.animation.ValueAnimator$AnimatorUpdateListener)>($r9);

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator mAnimator> = $r1;

        goto label1;

     label3:
        return;
    }
    public boolean isDragDecelerationEnabled()
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mDragDecelerationEnabled>;

        return z0;
    }
    public boolean isDrawMarkerViewEnabled()
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews>;

        return z0;
    }
    public boolean isEmpty()
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: int getYValCount()>();

        if $i0 <= 0 goto label2;

        return 0;

     label2:
        return 1;
    }
    public boolean isHighlightEnabled()
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $z0 = virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: boolean isHighlightEnabled()>();

        return $z0;
    }
    public boolean isLogEnabled()
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        return z0;
    }
public abstract void notifyDataSetChanged() { 
// no body
} 
    protected void onDraw(android.graphics.Canvas)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Canvas $r1;
        float f0, $f1, $f2;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r2;
        int $i0;
        java.lang.String $r3;
        android.graphics.Paint $r4;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r2 == null goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.ChartData: int getYValCount()>();

        if $i0 > 0 goto label2;

     label1:
        $r3 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataText>;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getWidth()>();

        $i0 = $i0 / 2;

        $f1 = (float) $i0;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getHeight()>();

        $i0 = $i0 / 2;

        f0 = (float) $i0;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f1, f0, $r4);

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataTextDescription>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label3;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        $f1 = virtualinvoke $r4.<android.graphics.Paint: float ascent()>();

        $f1 = neg $f1;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        f0 = virtualinvoke $r4.<android.graphics.Paint: float descent()>();

        f0 = $f1 + f0;

        $r3 = r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataTextDescription>;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getWidth()>();

        $i0 = $i0 / 2;

        $f1 = (float) $i0;

        $i0 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getHeight()>();

        $i0 = $i0 / 2;

        $f2 = (float) $i0;

        f0 = $f2 + f0;

        $r4 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f1, f0, $r4);

        return;

     label2:
        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated>;

        if $z0 != 0 goto label3;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void calculateOffsets()>();

        r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated> = 1;

     label3:
        return;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, i4, $i5;
        android.view.View $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        i4 = 0;

     label1:
        $i5 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getChildCount()>();

        if i4 >= $i5 goto label2;

        $r1 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.view.View getChildAt(int)>(i4);

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }
    protected void onMeasure(int, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1, i2, $i3;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onMeasure(int,int)>($i0, $i1);

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(50.0F);

        i2 = (int) $f0;

        $i3 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getSuggestedMinimumWidth()>();

        $i0 = staticinvoke <com.github.mikephil.charting.charts.Chart: int resolveSize(int,int)>(i2, $i0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i0);

        $i3 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: int getSuggestedMinimumHeight()>();

        $i1 = staticinvoke <com.github.mikephil.charting.charts.Chart: int resolveSize(int,int)>(i2, $i1);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        float $f0, $f1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.lang.Runnable r7;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", "OnSizeChanged()");

     label1:
        if $i0 <= 0 goto label5;

        if $i1 <= 0 goto label5;

        if $i0 >= 10000 goto label5;

        if $i1 >= 10000 goto label5;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        virtualinvoke $r1.<com.github.mikephil.charting.utils.ViewPortHandler: void setChartDimens(float,float)>($f0, $f1);

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting chart dimens, width: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", $r3);

     label2:
        $r4 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Runnable) $r6;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: boolean post(java.lang.Runnable)>(r7);

        goto label3;

     label4:
        $r4 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label5:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void notifyDataSetChanged()>();

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public void removeJob(java.lang.Runnable)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.Runnable $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: java.util.ArrayList mJobs>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public boolean saveToGallery(java.lang.String, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1, $r7;
        java.io.File r2, $r5;
        java.io.FileOutputStream r3;
        android.content.ContentValues r4;
        int $i0;
        long $l1, $l2;
        java.lang.StringBuilder $r6;
        boolean $z0;
        android.graphics.Bitmap $r8;
        android.graphics.Bitmap$CompressFormat $r9;
        java.lang.Long $r10;
        java.lang.Integer $r11;
        android.content.Context $r12;
        android.content.ContentResolver $r13;
        android.net.Uri $r14;
        java.io.IOException r15;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 < 0 goto label01;

        if $i0 <= 100 goto label02;

     label01:
        $i0 = 50;

     label02:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r2 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/DCIM");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label03;

        return 0;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = new java.io.FileOutputStream;

     label04:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r7);

     label05:
        $r8 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Bitmap getChartBitmap()>();

     label06:
        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label07:
        virtualinvoke $r8.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, $i0, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label08:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $l2 = virtualinvoke r2.<java.io.File: long length()>();

        r4 = new android.content.ContentValues;

        specialinvoke r4.<android.content.ContentValues: void <init>(int)>(8);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_display_name", $r1);

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_added", $r10);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", "image/jpeg");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", "MPAndroidChart-Library Save");

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("orientation", $r11);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", $r7);

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_size", $r10);

        $r12 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.content.Context getContext()>();

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r14 = virtualinvoke $r13.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r14, r4);

        if $r14 != null goto label11;

        return 0;

     label09:
        r15 := @caughtexception;

     label10:
        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        return 0;

     label11:
        return 1;

     label12:
        r15 := @caughtexception;

        goto label10;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
    }
    public boolean saveToPath(java.lang.String, java.lang.String)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1, $r2, $r7;
        java.io.FileOutputStream r3;
        android.graphics.Bitmap $r4;
        java.lang.StringBuilder $r5;
        java.io.File $r6;
        android.graphics.Bitmap$CompressFormat $r8;
        java.lang.Exception r9;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Bitmap getChartBitmap()>();

        r3 = new java.io.FileOutputStream;

        $r5 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label2:
        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label3:
        virtualinvoke $r4.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 40, r3);

        virtualinvoke r3.<java.io.OutputStream: void close()>();

     label4:
        return 1;

     label5:
        r9 := @caughtexception;

     label6:
        virtualinvoke r9.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label7:
        r9 := @caughtexception;

        goto label6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label7;
    }
    public void setData(com.github.mikephil.charting.data.ChartData)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.data.ChartData r1;
        float $f0, $f1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.github.mikephil.charting.data.DataSet r5;
        com.github.mikephil.charting.utils.ValueFormatter $r6;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        r1 := @parameter0: com.github.mikephil.charting.data.ChartData;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MPAndroidChart", "Cannot set data for chart. Provided data object is null.");

        return;

     label1:
        r0.<com.github.mikephil.charting.charts.Chart: boolean mDataNotSet> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mOffsetsCalculated> = 0;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData> = r1;

        $f0 = virtualinvoke r1.<com.github.mikephil.charting.data.ChartData: float getYMin()>();

        $f1 = virtualinvoke r1.<com.github.mikephil.charting.data.ChartData: float getYMax()>();

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void calculateFormatter(float,float)>($f0, $f1);

        r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = virtualinvoke r1.<com.github.mikephil.charting.data.ChartData: java.util.List getDataSets()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.github.mikephil.charting.data.DataSet) $r4;

        $z0 = virtualinvoke r5.<com.github.mikephil.charting.data.DataSet: boolean needsDefaultFormatter()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter>;

        virtualinvoke r5.<com.github.mikephil.charting.data.DataSet: void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)>($r6);

        goto label2;

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void notifyDataSetChanged()>();

        $z0 = r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MPAndroidChart", "Data is set.");

     label4:
        return;
    }
    public void setDescription(java.lang.String)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r1 = "";

     label1:
        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mDescription> = $r1;

        return;
    }
    public void setDescriptionColor(int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
    public void setDescriptionPosition(float, float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0, $f1;
        android.graphics.PointF $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new android.graphics.PointF;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.PointF mDescriptionPosition> = $r1;

        return;
    }
    public void setDescriptionTextSize(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;
        byte $b0;
        android.graphics.Paint $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 16.0F;

        if $b0 <= 0 goto label1;

        $f0 = 16.0F;

     label1:
        $b0 = $f0 cmpg 6.0F;

        if $b0 >= 0 goto label2;

        $f0 = 6.0F;

     label2:
        $r1 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);

        return;
    }
    public void setDescriptionTypeface(android.graphics.Typeface)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Typeface $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r1);

        return;
    }
    public void setDragDecelerationEnabled(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDragDecelerationEnabled> = $z0;

        return;
    }
    public void setDragDecelerationFrictionCoef(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;
        byte $b0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f0 = 0.0F;

     label1:
        $b0 = $f0 cmpl 1.0F;

        if $b0 < 0 goto label2;

        $f0 = 0.999F;

     label2:
        r0.<com.github.mikephil.charting.charts.Chart: float mDragDecelerationFrictionCoef> = $f0;

        return;
    }
    public void setDrawMarkerViews(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mDrawMarkerViews> = $z0;

        return;
    }
    public void setExtraBottomOffset(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraBottomOffset> = $f0;

        return;
    }
    public void setExtraLeftOffset(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraLeftOffset> = $f0;

        return;
    }
    public void setExtraOffsets(float, float, float, float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setExtraLeftOffset(float)>($f0);

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setExtraTopOffset(float)>($f1);

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setExtraRightOffset(float)>($f2);

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setExtraBottomOffset(float)>($f3);

        return;
    }
    public void setExtraRightOffset(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraRightOffset> = $f0;

        return;
    }
    public void setExtraTopOffset(float)
    {
        com.github.mikephil.charting.charts.Chart r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.charts.Chart: float mExtraTopOffset> = $f0;

        return;
    }
    public void setHardwareAccelerationEnabled(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label2;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setLayerType(int,android.graphics.Paint)>(2, null);

        return;

     label1:
        virtualinvoke r0.<com.github.mikephil.charting.charts.Chart: void setLayerType(int,android.graphics.Paint)>(1, null);

        return;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MPAndroidChart", "Cannot enable/disable hardware acceleration for devices below API level 11.");

        return;
    }
    public void setHighlightEnabled(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        if $r1 == null goto label1;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData mData>;

        virtualinvoke $r1.<com.github.mikephil.charting.data.ChartData: void setHighlightEnabled(boolean)>($z0);

     label1:
        return;
    }
    public void setLogEnabled(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mLogEnabled> = $z0;

        return;
    }
    public void setMarkerView(com.github.mikephil.charting.components.MarkerView)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.components.MarkerView $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.components.MarkerView;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView mMarkerView> = $r1;

        return;
    }
    public void setNoDataText(java.lang.String)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataText> = $r1;

        return;
    }
    public void setNoDataTextDescription(java.lang.String)
    {
        com.github.mikephil.charting.charts.Chart r0;
        java.lang.String $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: java.lang.String;

        r0.<com.github.mikephil.charting.charts.Chart: java.lang.String mNoDataTextDescription> = $r1;

        return;
    }
    public void setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.listener.OnChartGestureListener $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.listener.OnChartGestureListener;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartGestureListener mGestureListener> = $r1;

        return;
    }
    public void setOnChartValueSelectedListener(com.github.mikephil.charting.listener.OnChartValueSelectedListener)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.listener.OnChartValueSelectedListener $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.listener.OnChartValueSelectedListener;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener> = $r1;

        return;
    }
    public void setOnTouchListener(com.github.mikephil.charting.listener.ChartTouchListener)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.listener.ChartTouchListener $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.listener.ChartTouchListener;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.ChartTouchListener mChartTouchListener> = $r1;

        return;
    }
    public void setPaint(android.graphics.Paint, int)
    {
        com.github.mikephil.charting.charts.Chart r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: android.graphics.Paint;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 7: goto label2;
            case 11: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mInfoPaint> = $r1;

        return;

     label3:
        r0.<com.github.mikephil.charting.charts.Chart: android.graphics.Paint mDescPaint> = $r1;

        return;
    }
    public void setRenderer(com.github.mikephil.charting.renderer.DataRenderer)
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.renderer.DataRenderer $r1;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 := @parameter0: com.github.mikephil.charting.renderer.DataRenderer;

        if $r1 == null goto label1;

        r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.DataRenderer mRenderer> = $r1;

     label1:
        return;
    }
    public void setTouchEnabled(boolean)
    {
        com.github.mikephil.charting.charts.Chart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.Chart: boolean mTouchEnabled> = $z0;

        return;
    }
    public boolean valuesToHighlight()
    {
        com.github.mikephil.charting.charts.Chart r0;
        com.github.mikephil.charting.highlight.Highlight[] $r1;
        int $i0;
        com.github.mikephil.charting.highlight.Highlight $r2;

        r0 := @this: com.github.mikephil.charting.charts.Chart;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        if $r1 == null goto label2;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.highlight.Highlight[] mIndicesToHightlight>;

        $r2 = $r1[0];

        if $r2 != null goto label1;

        return 0;

     label1:
        return 1;

     label2:
        return 0;
    }
