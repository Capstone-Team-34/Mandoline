com.github.mikephil.charting.animation.ChartAnimator extends java.lang.Object
private android.animation.ValueAnimator$AnimatorUpdateListener mListener
protected float mPhaseX
protected float mPhaseY
    public void <init>()
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseY> = 1.0F;

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseX> = 1.0F;

        return;
    }
    public void <init>(android.animation.ValueAnimator$AnimatorUpdateListener)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener $r1;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $r1 := @parameter0: android.animation.ValueAnimator$AnimatorUpdateListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseY> = 1.0F;

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseX> = 1.0F;

        r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener> = $r1;

        return;
    }
    public void animateX(int)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        android.animation.ObjectAnimator $r1;
        float[] $r2;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r3;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r2);

        $l2 = (long) $i0;

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r3 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r3);

        virtualinvoke $r1.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public void animateX(int, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1;
        float[] $r2;
        android.animation.ObjectAnimator $r3;
        com.github.mikephil.charting.animation.EasingFunction $r4;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r5;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.Easing$EasingOption;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r2);

        $r4 = staticinvoke <com.github.mikephil.charting.animation.Easing: com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption)>($r1);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $l2 = (long) $i0;

        virtualinvoke $r3.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r5 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public void animateX(int, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.EasingFunction $r1;
        android.animation.ObjectAnimator $r2;
        float[] $r3;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r4;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.EasingFunction;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r3);

        virtualinvoke $r2.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r1);

        $l2 = (long) $i0;

        virtualinvoke $r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r4 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

        virtualinvoke $r2.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public void animateXY(int, int)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1, $i2;
        float[] $r1;
        android.animation.ObjectAnimator $r2, $r3;
        long $l3;
        android.animation.ValueAnimator$AnimatorUpdateListener $r4;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 11 goto label1;

        return;

     label1:
        $r1 = newarray (float)[2];

        $r1[0] = 0.0F;

        $r1[1] = 1.0F;

        $r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r1);

        $l3 = (long) $i1;

        virtualinvoke $r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        $r1 = newarray (float)[2];

        $r1[0] = 0.0F;

        $r1[1] = 1.0F;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r1);

        $l3 = (long) $i0;

        virtualinvoke $r3.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        if $i0 <= $i1 goto label3;

        $r4 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

     label2:
        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

        virtualinvoke $r2.<android.animation.ObjectAnimator: void start()>();

        return;

     label3:
        $r4 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

        goto label2;
    }
    public void animateXY(int, int, com.github.mikephil.charting.animation.Easing$EasingOption, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1, $i2;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1, $r2;
        float[] $r3;
        android.animation.ObjectAnimator $r4, $r6;
        com.github.mikephil.charting.animation.EasingFunction $r5;
        long $l3;
        android.animation.ValueAnimator$AnimatorUpdateListener $r7;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.github.mikephil.charting.animation.Easing$EasingOption;

        $r2 := @parameter3: com.github.mikephil.charting.animation.Easing$EasingOption;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 11 goto label1;

        return;

     label1:
        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r4 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r3);

        $r5 = staticinvoke <com.github.mikephil.charting.animation.Easing: com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption)>($r2);

        virtualinvoke $r4.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $l3 = (long) $i1;

        virtualinvoke $r4.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r3);

        $r5 = staticinvoke <com.github.mikephil.charting.animation.Easing: com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption)>($r1);

        virtualinvoke $r6.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $l3 = (long) $i0;

        virtualinvoke $r6.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        if $i0 <= $i1 goto label3;

        $r7 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r6.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r7);

     label2:
        virtualinvoke $r6.<android.animation.ObjectAnimator: void start()>();

        virtualinvoke $r4.<android.animation.ObjectAnimator: void start()>();

        return;

     label3:
        $r7 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r4.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r7);

        goto label2;
    }
    public void animateXY(int, int, com.github.mikephil.charting.animation.EasingFunction, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1, $i2;
        com.github.mikephil.charting.animation.EasingFunction $r1, $r2;
        float[] $r3;
        android.animation.ObjectAnimator $r4, $r5;
        long $l3;
        android.animation.ValueAnimator$AnimatorUpdateListener $r6;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.github.mikephil.charting.animation.EasingFunction;

        $r2 := @parameter3: com.github.mikephil.charting.animation.EasingFunction;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 11 goto label1;

        return;

     label1:
        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r4 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r3);

        virtualinvoke $r4.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r2);

        $l3 = (long) $i1;

        virtualinvoke $r4.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseX", $r3);

        virtualinvoke $r5.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r1);

        $l3 = (long) $i0;

        virtualinvoke $r5.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        if $i0 <= $i1 goto label3;

        $r6 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r6);

     label2:
        virtualinvoke $r5.<android.animation.ObjectAnimator: void start()>();

        virtualinvoke $r4.<android.animation.ObjectAnimator: void start()>();

        return;

     label3:
        $r6 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r4.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r6);

        goto label2;
    }
    public void animateY(int)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        android.animation.ObjectAnimator $r1;
        float[] $r2;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r3;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r2);

        $l2 = (long) $i0;

        virtualinvoke $r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r3 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r3);

        virtualinvoke $r1.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public void animateY(int, com.github.mikephil.charting.animation.Easing$EasingOption)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.Easing$EasingOption $r1;
        float[] $r2;
        android.animation.ObjectAnimator $r3;
        com.github.mikephil.charting.animation.EasingFunction $r4;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r5;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.Easing$EasingOption;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r2);

        $r4 = staticinvoke <com.github.mikephil.charting.animation.Easing: com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption)>($r1);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $l2 = (long) $i0;

        virtualinvoke $r3.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r5 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public void animateY(int, com.github.mikephil.charting.animation.EasingFunction)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        int $i0, $i1;
        com.github.mikephil.charting.animation.EasingFunction $r1;
        android.animation.ObjectAnimator $r2;
        float[] $r3;
        long $l2;
        android.animation.ValueAnimator$AnimatorUpdateListener $r4;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.github.mikephil.charting.animation.EasingFunction;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 11 goto label1;

        return;

     label1:
        $r3 = newarray (float)[2];

        $r3[0] = 0.0F;

        $r3[1] = 1.0F;

        $r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "phaseY", $r3);

        virtualinvoke $r2.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r1);

        $l2 = (long) $i0;

        virtualinvoke $r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r4 = r0.<com.github.mikephil.charting.animation.ChartAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mListener>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

        virtualinvoke $r2.<android.animation.ObjectAnimator: void start()>();

        return;
    }
    public float getPhaseX()
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        f0 = r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseX>;

        return f0;
    }
    public float getPhaseY()
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        f0 = r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseY>;

        return f0;
    }
    public void setPhaseX(float)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseX> = $f0;

        return;
    }
    public void setPhaseY(float)
    {
        com.github.mikephil.charting.animation.ChartAnimator r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.animation.ChartAnimator;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.animation.ChartAnimator: float mPhaseY> = $f0;

        return;
    }
