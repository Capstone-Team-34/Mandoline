com.squareup.okhttp.ResponseBody$1 extends com.squareup.okhttp.ResponseBody
final okio.BufferedSource val$content
final long val$contentLength
final com.squareup.okhttp.MediaType val$contentType
    void <init>(com.squareup.okhttp.MediaType, long, okio.BufferedSource)
    {
        com.squareup.okhttp.ResponseBody$1 r0;
        com.squareup.okhttp.MediaType $r1;
        long $l0;
        okio.BufferedSource $r2;

        r0 := @this: com.squareup.okhttp.ResponseBody$1;

        $r1 := @parameter0: com.squareup.okhttp.MediaType;

        $l0 := @parameter1: long;

        $r2 := @parameter2: okio.BufferedSource;

        r0.<com.squareup.okhttp.ResponseBody$1: com.squareup.okhttp.MediaType val$contentType> = $r1;

        r0.<com.squareup.okhttp.ResponseBody$1: long val$contentLength> = $l0;

        r0.<com.squareup.okhttp.ResponseBody$1: okio.BufferedSource val$content> = $r2;

        specialinvoke r0.<com.squareup.okhttp.ResponseBody: void <init>()>();

        return;
    }
    public long contentLength()
    {
        com.squareup.okhttp.ResponseBody$1 r0;
        long l0;

        r0 := @this: com.squareup.okhttp.ResponseBody$1;

        l0 = r0.<com.squareup.okhttp.ResponseBody$1: long val$contentLength>;

        return l0;
    }
    public com.squareup.okhttp.MediaType contentType()
    {
        com.squareup.okhttp.ResponseBody$1 r0;
        com.squareup.okhttp.MediaType r1;

        r0 := @this: com.squareup.okhttp.ResponseBody$1;

        r1 = r0.<com.squareup.okhttp.ResponseBody$1: com.squareup.okhttp.MediaType val$contentType>;

        return r1;
    }
    public okio.BufferedSource source()
    {
        com.squareup.okhttp.ResponseBody$1 r0;
        okio.BufferedSource r1;

        r0 := @this: com.squareup.okhttp.ResponseBody$1;

        r1 = r0.<com.squareup.okhttp.ResponseBody$1: okio.BufferedSource val$content>;

        return r1;
    }
