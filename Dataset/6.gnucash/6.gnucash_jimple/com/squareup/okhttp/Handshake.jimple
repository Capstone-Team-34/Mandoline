com.squareup.okhttp.Handshake extends java.lang.Object
private final java.lang.String cipherSuite
private final java.util.List localCertificates
private final java.util.List peerCertificates
    private void <init>(java.lang.String, java.util.List, java.util.List)
    {
        com.squareup.okhttp.Handshake r0;
        java.lang.String $r1;
        java.util.List r2, r3;

        r0 := @this: com.squareup.okhttp.Handshake;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite> = $r1;

        r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates> = r2;

        r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates> = r3;

        return;
    }
    public static com.squareup.okhttp.Handshake get(java.lang.String, java.util.List, java.util.List)
    {
        java.lang.String $r0;
        java.util.List r1, r2;
        java.lang.IllegalArgumentException $r3;
        com.squareup.okhttp.Handshake $r4;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipherSuite == null");

        throw $r3;

     label1:
        $r4 = new com.squareup.okhttp.Handshake;

        r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>(r1);

        r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>(r2);

        specialinvoke $r4.<com.squareup.okhttp.Handshake: void <init>(java.lang.String,java.util.List,java.util.List)>($r0, r1, r2);

        return $r4;
    }
    public static com.squareup.okhttp.Handshake get(javax.net.ssl.SSLSession)
    {
        javax.net.ssl.SSLSession $r0;
        javax.net.ssl.SSLPeerUnverifiedException r1;
        java.lang.String $r2;
        java.lang.IllegalStateException $r3;
        java.security.cert.Certificate[] $r4;
        java.util.List $r5, $r6;
        com.squareup.okhttp.Handshake $r7;

        $r0 := @parameter0: javax.net.ssl.SSLSession;

        $r2 = interfaceinvoke $r0.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cipherSuite == null");

        throw $r3;

     label1:
        $r4 = interfaceinvoke $r0.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label2:
        if $r4 == null goto label6;

        $r5 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r4);

     label3:
        $r4 = interfaceinvoke $r0.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>();

        if $r4 == null goto label7;

        $r6 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r4);

     label4:
        $r7 = new com.squareup.okhttp.Handshake;

        specialinvoke $r7.<com.squareup.okhttp.Handshake: void <init>(java.lang.String,java.util.List,java.util.List)>($r2, $r5, $r6);

        return $r7;

     label5:
        r1 := @caughtexception;

        $r4 = null;

        goto label2;

     label6:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label3;

     label7:
        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label4;

        catch javax.net.ssl.SSLPeerUnverifiedException from label1 to label2 with label5;
    }
    public java.lang.String cipherSuite()
    {
        com.squareup.okhttp.Handshake r0;
        java.lang.String r1;

        r0 := @this: com.squareup.okhttp.Handshake;

        r1 = r0.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite>;

        return r1;
    }
    public boolean equals(java.lang.Object)
    {
        com.squareup.okhttp.Handshake r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        java.util.List $r5, $r6;

        r0 := @this: com.squareup.okhttp.Handshake;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.squareup.okhttp.Handshake;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.squareup.okhttp.Handshake) $r1;

        $r3 = r0.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite>;

        $r4 = r2.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        $r6 = r2.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        $r6 = r2.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public int hashCode()
    {
        com.squareup.okhttp.Handshake r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.List $r2;

        r0 := @this: com.squareup.okhttp.Handshake;

        $r1 = r0.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = $i0 + 527;

        $i0 = $i0 * 31;

        $r2 = r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r2 = r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        $i1 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public java.util.List localCertificates()
    {
        com.squareup.okhttp.Handshake r0;
        java.util.List r1;

        r0 := @this: com.squareup.okhttp.Handshake;

        r1 = r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        return r1;
    }
    public java.security.Principal localPrincipal()
    {
        com.squareup.okhttp.Handshake r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        javax.security.auth.x500.X500Principal $r4;

        r0 := @this: com.squareup.okhttp.Handshake;

        $r1 = r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.Handshake: java.util.List localCertificates>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $r4 = virtualinvoke $r3.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r4;

     label1:
        return null;
    }
    public java.util.List peerCertificates()
    {
        com.squareup.okhttp.Handshake r0;
        java.util.List r1;

        r0 := @this: com.squareup.okhttp.Handshake;

        r1 = r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        return r1;
    }
    public java.security.Principal peerPrincipal()
    {
        com.squareup.okhttp.Handshake r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        javax.security.auth.x500.X500Principal $r4;

        r0 := @this: com.squareup.okhttp.Handshake;

        $r1 = r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.Handshake: java.util.List peerCertificates>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $r4 = virtualinvoke $r3.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r4;

     label1:
        return null;
    }
