com.squareup.okhttp.Cache$Entry extends java.lang.Object
private final int code
private final com.squareup.okhttp.Handshake handshake
private final java.lang.String message
private final com.squareup.okhttp.Protocol protocol
private final java.lang.String requestMethod
private final com.squareup.okhttp.Headers responseHeaders
private final java.lang.String url
private final com.squareup.okhttp.Headers varyHeaders
    public void <init>(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Cache$Entry r0;
        com.squareup.okhttp.Response $r1;
        com.squareup.okhttp.Request $r2;
        java.lang.String $r3;
        com.squareup.okhttp.Headers $r4;
        com.squareup.okhttp.Protocol $r5;
        int $i0;
        com.squareup.okhttp.Handshake $r6;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>();

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.Request: java.lang.String urlString()>();

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url> = $r3;

        $r4 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: com.squareup.okhttp.Headers varyHeaders(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders> = $r4;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>();

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.Request: java.lang.String method()>();

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String requestMethod> = $r3;

        $r5 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol()>();

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Protocol protocol> = $r5;

        $i0 = virtualinvoke $r1.<com.squareup.okhttp.Response: int code()>();

        r0.<com.squareup.okhttp.Cache$Entry: int code> = $i0;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Response: java.lang.String message()>();

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String message> = $r3;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders> = $r4;

        $r6 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake handshake()>();

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake> = $r6;

        return;
    }
    public void <init>(okio.Source) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$Entry r0;
        okio.Source $r1;
        com.squareup.okhttp.Headers$Builder r2;
        okio.BufferedSource $r3;
        java.lang.String $r4;
        int $i0, i1;
        com.squareup.okhttp.Headers $r5;
        com.squareup.okhttp.internal.http.StatusLine $r6;
        com.squareup.okhttp.Protocol $r7;
        boolean $z0;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        java.util.List $r11, $r12;
        com.squareup.okhttp.Handshake $r13;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: okio.Source;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label01:
        $r3 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>($r1);

        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url> = $r4;

        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String requestMethod> = $r4;

        r2 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke r2.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        $i0 = staticinvoke <com.squareup.okhttp.Cache: int access$1000(okio.BufferedSource)>($r3);

     label02:
        i1 = 0;

     label03:
        if i1 >= $i0 goto label06;

     label04:
        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String)>($r4);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r5 = virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders> = $r5;

        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine parse(java.lang.String)>($r4);

        $r7 = $r6.<com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.Protocol protocol>;

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Protocol protocol> = $r7;

        $i0 = $r6.<com.squareup.okhttp.internal.http.StatusLine: int code>;

        r0.<com.squareup.okhttp.Cache$Entry: int code> = $i0;

        $r4 = $r6.<com.squareup.okhttp.internal.http.StatusLine: java.lang.String message>;

        r0.<com.squareup.okhttp.Cache$Entry: java.lang.String message> = $r4;

        r2 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke r2.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        $i0 = staticinvoke <com.squareup.okhttp.Cache: int access$1000(okio.BufferedSource)>($r3);

     label07:
        i1 = 0;

     label08:
        if i1 >= $i0 goto label11;

     label09:
        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String)>($r4);

     label10:
        i1 = i1 + 1;

        goto label08;

     label11:
        $r5 = virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders> = $r5;

        $z0 = specialinvoke r0.<com.squareup.okhttp.Cache$Entry: boolean isHttps()>();

     label12:
        if $z0 == 0 goto label19;

     label13:
        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

     label14:
        if $i0 <= 0 goto label17;

     label15:
        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected \"\" but was \"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label16:
        $r10 := @caughtexception;

        interfaceinvoke $r1.<okio.Source: void close()>();

        throw $r10;

     label17:
        $r4 = interfaceinvoke $r3.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r11 = specialinvoke r0.<com.squareup.okhttp.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>($r3);

        $r12 = specialinvoke r0.<com.squareup.okhttp.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>($r3);

        $r13 = staticinvoke <com.squareup.okhttp.Handshake: com.squareup.okhttp.Handshake get(java.lang.String,java.util.List,java.util.List)>($r4, $r11, $r12);

        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake> = $r13;

     label18:
        interfaceinvoke $r1.<okio.Source: void close()>();

        return;

     label19:
        r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake> = null;

     label20:
        goto label18;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label19 to label20 with label16;
    }
    private boolean isHttps()
    {
        com.squareup.okhttp.Cache$Entry r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        return $z0;
    }
    private java.util.List readCertificateList(okio.BufferedSource) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$Entry r0;
        okio.BufferedSource $r1;
        okio.Buffer r2;
        java.security.cert.CertificateException r3;
        int $i0, i1;
        java.util.List $r4;
        java.security.cert.CertificateFactory $r5;
        java.util.ArrayList r6;
        java.lang.String $r7;
        okio.ByteString $r8;
        java.io.InputStream $r9;
        java.security.cert.Certificate $r10;
        java.io.IOException $r11;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: okio.BufferedSource;

        $i0 = staticinvoke <com.squareup.okhttp.Cache: int access$1000(okio.BufferedSource)>($r1);

        if $i0 != -1 goto label01;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label01:
        $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

     label02:
        r6 = new java.util.ArrayList;

     label03:
        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label11;

     label06:
        $r7 = interfaceinvoke $r1.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

     label07:
        r2 = new okio.Buffer;

     label08:
        specialinvoke r2.<okio.Buffer: void <init>()>();

        $r8 = staticinvoke <okio.ByteString: okio.ByteString decodeBase64(java.lang.String)>($r7);

        virtualinvoke r2.<okio.Buffer: okio.Buffer write(okio.ByteString)>($r8);

        $r9 = virtualinvoke r2.<okio.Buffer: java.io.InputStream inputStream()>();

        $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r10);

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        r3 := @caughtexception;

        $r11 = new java.io.IOException;

        $r7 = virtualinvoke r3.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r11;

     label11:
        return r6;

        catch java.security.cert.CertificateException from label01 to label02 with label10;
        catch java.security.cert.CertificateException from label03 to label04 with label10;
        catch java.security.cert.CertificateException from label06 to label07 with label10;
        catch java.security.cert.CertificateException from label08 to label09 with label10;
    }
    private void writeCertList(okio.BufferedSink, java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$Entry r0;
        okio.BufferedSink $r1;
        java.util.List r2;
        java.security.cert.CertificateEncodingException r3;
        int $i0, $i2;
        long $l1;
        java.lang.Object $r4;
        java.security.cert.Certificate $r5;
        byte[] $r6;
        okio.ByteString $r7;
        java.lang.String $r8;
        java.io.IOException $r9;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: okio.BufferedSink;

        r2 := @parameter1: java.util.List;

     label01:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label02:
        $l1 = (long) $i0;

     label03:
        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)>($l1);

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

     label04:
        $i0 = 0;

     label05:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label06:
        if $i0 >= $i2 goto label12;

     label07:
        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

     label08:
        $r5 = (java.security.cert.Certificate) $r4;

     label09:
        $r6 = virtualinvoke $r5.<java.security.cert.Certificate: byte[] getEncoded()>();

        $r7 = staticinvoke <okio.ByteString: okio.ByteString of(byte[])>($r6);

        $r8 = virtualinvoke $r7.<okio.ByteString: java.lang.String base64()>();

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r8);

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

     label10:
        $i0 = $i0 + 1;

        goto label06;

     label11:
        r3 := @caughtexception;

        $r9 = new java.io.IOException;

        $r8 = virtualinvoke r3.<java.security.cert.CertificateEncodingException: java.lang.String getMessage()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label12:
        return;

        catch java.security.cert.CertificateEncodingException from label01 to label02 with label11;
        catch java.security.cert.CertificateEncodingException from label03 to label04 with label11;
        catch java.security.cert.CertificateEncodingException from label05 to label06 with label11;
        catch java.security.cert.CertificateEncodingException from label07 to label08 with label11;
        catch java.security.cert.CertificateEncodingException from label09 to label10 with label11;
    }
    public boolean matches(com.squareup.okhttp.Request, com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Cache$Entry r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Response $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        com.squareup.okhttp.Headers $r5;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 := @parameter1: com.squareup.okhttp.Response;

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url>;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String urlString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String requestMethod>;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: boolean varyMatches(com.squareup.okhttp.Response,com.squareup.okhttp.Headers,com.squareup.okhttp.Request)>($r2, $r5, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public com.squareup.okhttp.Response response(com.squareup.okhttp.Request, com.squareup.okhttp.internal.DiskLruCache$Snapshot)
    {
        com.squareup.okhttp.Cache$Entry r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r2;
        com.squareup.okhttp.Headers $r3;
        java.lang.String $r4, $r5, $r7;
        com.squareup.okhttp.Request$Builder $r6;
        com.squareup.okhttp.Response$Builder $r8;
        com.squareup.okhttp.Protocol $r9;
        int $i0;
        com.squareup.okhttp.Cache$CacheResponseBody $r10;
        com.squareup.okhttp.Handshake $r11;
        com.squareup.okhttp.Response $r12;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 := @parameter1: com.squareup.okhttp.internal.DiskLruCache$Snapshot;

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>("Content-Type");

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $r5 = virtualinvoke $r3.<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>("Content-Length");

        $r6 = new com.squareup.okhttp.Request$Builder;

        specialinvoke $r6.<com.squareup.okhttp.Request$Builder: void <init>()>();

        $r7 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url>;

        $r6 = virtualinvoke $r6.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(java.lang.String)>($r7);

        $r7 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String requestMethod>;

        $r6 = virtualinvoke $r6.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>($r7, null);

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $r6 = virtualinvoke $r6.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder headers(com.squareup.okhttp.Headers)>($r3);

        $r1 = virtualinvoke $r6.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        $r8 = new com.squareup.okhttp.Response$Builder;

        specialinvoke $r8.<com.squareup.okhttp.Response$Builder: void <init>()>();

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r1);

        $r9 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Protocol protocol>;

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)>($r9);

        $i0 = r0.<com.squareup.okhttp.Cache$Entry: int code>;

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder code(int)>($i0);

        $r7 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String message>;

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder message(java.lang.String)>($r7);

        $r3 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>($r3);

        $r10 = new com.squareup.okhttp.Cache$CacheResponseBody;

        specialinvoke $r10.<com.squareup.okhttp.Cache$CacheResponseBody: void <init>(com.squareup.okhttp.internal.DiskLruCache$Snapshot,java.lang.String,java.lang.String)>($r2, $r4, $r5);

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>($r10);

        $r11 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake>;

        $r8 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder handshake(com.squareup.okhttp.Handshake)>($r11);

        $r12 = virtualinvoke $r8.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        return $r12;
    }
    public void writeTo(com.squareup.okhttp.internal.DiskLruCache$Editor) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$Entry r0;
        com.squareup.okhttp.internal.DiskLruCache$Editor $r1;
        int $i0, $i2;
        java.lang.String $r2;
        okio.Sink $r3;
        okio.BufferedSink $r4;
        com.squareup.okhttp.Headers $r5;
        long $l1;
        com.squareup.okhttp.internal.http.StatusLine $r6;
        com.squareup.okhttp.Protocol $r7;
        boolean $z0;
        com.squareup.okhttp.Handshake $r8;
        java.util.List $r9;

        r0 := @this: com.squareup.okhttp.Cache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Editor;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.internal.DiskLruCache$Editor: okio.Sink newSink(int)>(0);

        $r4 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r3);

        $r2 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String url>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $r2 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String requestMethod>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $i0 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

        $l1 = (long) $i0;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)>($l1);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $i0 = 0;

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $i2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

     label1:
        if $i0 >= $i2 goto label2;

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String name(int)>($i0);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>(": ");

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers varyHeaders>;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String value(int)>($i0);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new com.squareup.okhttp.internal.http.StatusLine;

        $r7 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Protocol protocol>;

        $i0 = r0.<com.squareup.okhttp.Cache$Entry: int code>;

        $r2 = r0.<com.squareup.okhttp.Cache$Entry: java.lang.String message>;

        specialinvoke $r6.<com.squareup.okhttp.internal.http.StatusLine: void <init>(com.squareup.okhttp.Protocol,int,java.lang.String)>($r7, $i0, $r2);

        $r2 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.StatusLine: java.lang.String toString()>();

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $i0 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

        $l1 = (long) $i0;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)>($l1);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $i0 = 0;

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $i2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

     label3:
        if $i0 >= $i2 goto label4;

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String name(int)>($i0);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>(": ");

        $r5 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Headers responseHeaders>;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String value(int)>($i0);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $z0 = specialinvoke r0.<com.squareup.okhttp.Cache$Entry: boolean isHttps()>();

        if $z0 == 0 goto label5;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $r8 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake>;

        $r2 = virtualinvoke $r8.<com.squareup.okhttp.Handshake: java.lang.String cipherSuite()>();

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(10);

        $r8 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake>;

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.Handshake: java.util.List peerCertificates()>();

        specialinvoke r0.<com.squareup.okhttp.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)>($r4, $r9);

        $r8 = r0.<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Handshake handshake>;

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.Handshake: java.util.List localCertificates()>();

        specialinvoke r0.<com.squareup.okhttp.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)>($r4, $r9);

     label5:
        interfaceinvoke $r4.<okio.BufferedSink: void close()>();

        return;
    }
