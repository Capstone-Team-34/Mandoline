com.squareup.okhttp.RequestBody$3 extends com.squareup.okhttp.RequestBody
final com.squareup.okhttp.MediaType val$contentType
final java.io.File val$file
    void <init>(com.squareup.okhttp.MediaType, java.io.File)
    {
        com.squareup.okhttp.RequestBody$3 r0;
        com.squareup.okhttp.MediaType $r1;
        java.io.File $r2;

        r0 := @this: com.squareup.okhttp.RequestBody$3;

        $r1 := @parameter0: com.squareup.okhttp.MediaType;

        $r2 := @parameter1: java.io.File;

        r0.<com.squareup.okhttp.RequestBody$3: com.squareup.okhttp.MediaType val$contentType> = $r1;

        r0.<com.squareup.okhttp.RequestBody$3: java.io.File val$file> = $r2;

        specialinvoke r0.<com.squareup.okhttp.RequestBody: void <init>()>();

        return;
    }
    public long contentLength()
    {
        com.squareup.okhttp.RequestBody$3 r0;
        long $l0;
        java.io.File $r1;

        r0 := @this: com.squareup.okhttp.RequestBody$3;

        $r1 = r0.<com.squareup.okhttp.RequestBody$3: java.io.File val$file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }
    public com.squareup.okhttp.MediaType contentType()
    {
        com.squareup.okhttp.RequestBody$3 r0;
        com.squareup.okhttp.MediaType r1;

        r0 := @this: com.squareup.okhttp.RequestBody$3;

        r1 = r0.<com.squareup.okhttp.RequestBody$3: com.squareup.okhttp.MediaType val$contentType>;

        return r1;
    }
    public void writeTo(okio.BufferedSink) throws java.io.IOException
    {
        com.squareup.okhttp.RequestBody$3 r0;
        okio.BufferedSink $r1;
        okio.Source $r2, r3;
        java.io.File $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.squareup.okhttp.RequestBody$3;

        $r1 := @parameter0: okio.BufferedSink;

        r3 = null;

     label1:
        $r4 = r0.<com.squareup.okhttp.RequestBody$3: java.io.File val$file>;

        $r2 = staticinvoke <okio.Okio: okio.Source source(java.io.File)>($r4);

     label2:
        r3 = $r2;

     label3:
        interfaceinvoke $r1.<okio.BufferedSink: long writeAll(okio.Source)>($r2);

     label4:
        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r2);

        return;

     label5:
        $r5 := @caughtexception;

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r3);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
