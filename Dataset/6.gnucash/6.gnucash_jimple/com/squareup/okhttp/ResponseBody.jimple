com.squareup.okhttp.ResponseBody extends java.lang.Object implements java.io.Closeable
private java.io.Reader reader
    public void <init>()
    {
        com.squareup.okhttp.ResponseBody r0;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private java.nio.charset.Charset charset()
    {
        com.squareup.okhttp.ResponseBody r0;
        com.squareup.okhttp.MediaType $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: com.squareup.okhttp.MediaType contentType()>();

        if $r1 == null goto label1;

        $r2 = <com.squareup.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r2);

        return $r2;

     label1:
        $r2 = <com.squareup.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        return $r2;
    }
    public static com.squareup.okhttp.ResponseBody create(com.squareup.okhttp.MediaType, long, okio.BufferedSource)
    {
        com.squareup.okhttp.MediaType $r0;
        long $l0;
        okio.BufferedSource $r1;
        java.lang.NullPointerException $r2;
        com.squareup.okhttp.ResponseBody$1 $r3;

        $r0 := @parameter0: com.squareup.okhttp.MediaType;

        $l0 := @parameter1: long;

        $r1 := @parameter2: okio.BufferedSource;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("source == null");

        throw $r2;

     label1:
        $r3 = new com.squareup.okhttp.ResponseBody$1;

        specialinvoke $r3.<com.squareup.okhttp.ResponseBody$1: void <init>(com.squareup.okhttp.MediaType,long,okio.BufferedSource)>($r0, $l0, $r1);

        return $r3;
    }
    public static com.squareup.okhttp.ResponseBody create(com.squareup.okhttp.MediaType, java.lang.String)
    {
        java.lang.String $r0, $r5;
        com.squareup.okhttp.MediaType $r1;
        java.nio.charset.Charset r2, $r3;
        java.lang.StringBuilder $r4;
        okio.Buffer $r6;
        long $l0;
        com.squareup.okhttp.ResponseBody $r7;

        $r1 := @parameter0: com.squareup.okhttp.MediaType;

        $r0 := @parameter1: java.lang.String;

        r2 = <com.squareup.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        if $r1 == null goto label1;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.MediaType: java.nio.charset.Charset charset()>();

        r2 = $r3;

        if $r3 != null goto label1;

        r2 = <com.squareup.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=utf-8");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <com.squareup.okhttp.MediaType: com.squareup.okhttp.MediaType parse(java.lang.String)>($r5);

     label1:
        $r6 = new okio.Buffer;

        specialinvoke $r6.<okio.Buffer: void <init>()>();

        $r6 = virtualinvoke $r6.<okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)>($r0, r2);

        $l0 = virtualinvoke $r6.<okio.Buffer: long size()>();

        $r7 = staticinvoke <com.squareup.okhttp.ResponseBody: com.squareup.okhttp.ResponseBody create(com.squareup.okhttp.MediaType,long,okio.BufferedSource)>($r1, $l0, $r6);

        return $r7;
    }
    public static com.squareup.okhttp.ResponseBody create(com.squareup.okhttp.MediaType, byte[])
    {
        com.squareup.okhttp.MediaType $r0;
        byte[] $r1;
        long $l0;
        okio.Buffer $r2;
        int $i1;
        com.squareup.okhttp.ResponseBody $r3;

        $r0 := @parameter0: com.squareup.okhttp.MediaType;

        $r1 := @parameter1: byte[];

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        $r2 = virtualinvoke $r2.<okio.Buffer: okio.Buffer write(byte[])>($r1);

        $i1 = lengthof $r1;

        $l0 = (long) $i1;

        $r3 = staticinvoke <com.squareup.okhttp.ResponseBody: com.squareup.okhttp.ResponseBody create(com.squareup.okhttp.MediaType,long,okio.BufferedSource)>($r0, $l0, $r2);

        return $r3;
    }
    public final java.io.InputStream byteStream() throws java.io.IOException
    {
        com.squareup.okhttp.ResponseBody r0;
        okio.BufferedSource $r1;
        java.io.InputStream $r2;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: okio.BufferedSource source()>();

        $r2 = interfaceinvoke $r1.<okio.BufferedSource: java.io.InputStream inputStream()>();

        return $r2;
    }
    public final byte[] bytes() throws java.io.IOException
    {
        com.squareup.okhttp.ResponseBody r0;
        long $l0, $l3;
        byte $b1;
        java.io.IOException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        okio.BufferedSource $r4;
        byte[] $r5;
        int $i2;
        java.lang.Throwable $r6;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        $l0 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: long contentLength()>();

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label1;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot buffer entire body for content length: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r4 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: okio.BufferedSource source()>();

     label2:
        $r5 = interfaceinvoke $r4.<okio.BufferedSource: byte[] readByteArray()>();

     label3:
        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r4);

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

        $i2 = lengthof $r5;

        $l3 = (long) $i2;

        $b1 = $l0 cmp $l3;

        if $b1 == 0 goto label5;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Content-Length and stream length disagree");

        throw $r1;

     label4:
        $r6 := @caughtexception;

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r4);

        throw $r6;

     label5:
        return $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
    public final java.io.Reader charStream() throws java.io.IOException
    {
        com.squareup.okhttp.ResponseBody r0;
        java.io.Reader r1;
        java.io.InputStreamReader r2;
        java.io.InputStream $r3;
        java.nio.charset.Charset $r4;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        r1 = r0.<com.squareup.okhttp.ResponseBody: java.io.Reader reader>;

        if r1 == null goto label1;

        return r1;

     label1:
        r2 = new java.io.InputStreamReader;

        $r3 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: java.io.InputStream byteStream()>();

        $r4 = specialinvoke r0.<com.squareup.okhttp.ResponseBody: java.nio.charset.Charset charset()>();

        specialinvoke r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r3, $r4);

        r0.<com.squareup.okhttp.ResponseBody: java.io.Reader reader> = r2;

        return r2;
    }
    public void close() throws java.io.IOException
    {
        com.squareup.okhttp.ResponseBody r0;
        okio.BufferedSource $r1;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: okio.BufferedSource source()>();

        interfaceinvoke $r1.<okio.BufferedSource: void close()>();

        return;
    }
public abstract long contentLength() throws java.io.IOException { 
// no body
} 
public abstract com.squareup.okhttp.MediaType contentType() { 
// no body
} 
public abstract okio.BufferedSource source() throws java.io.IOException { 
// no body
} 
    public final java.lang.String string() throws java.io.IOException
    {
        com.squareup.okhttp.ResponseBody r0;
        java.lang.String $r1, $r4;
        byte[] $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: com.squareup.okhttp.ResponseBody;

        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<com.squareup.okhttp.ResponseBody: byte[] bytes()>();

        $r3 = specialinvoke r0.<com.squareup.okhttp.ResponseBody: java.nio.charset.Charset charset()>();

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, $r4);

        return $r1;
    }
