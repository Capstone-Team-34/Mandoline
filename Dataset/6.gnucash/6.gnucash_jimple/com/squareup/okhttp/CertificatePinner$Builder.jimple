com.squareup.okhttp.CertificatePinner$Builder extends java.lang.Object
private final java.util.Map hostnameToPins
    public void <init>()
    {
        com.squareup.okhttp.CertificatePinner$Builder r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: com.squareup.okhttp.CertificatePinner$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.squareup.okhttp.CertificatePinner$Builder: java.util.Map hostnameToPins> = $r1;

        return;
    }
    static java.util.Map access$000(com.squareup.okhttp.CertificatePinner$Builder)
    {
        com.squareup.okhttp.CertificatePinner$Builder $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.squareup.okhttp.CertificatePinner$Builder;

        r1 = $r0.<com.squareup.okhttp.CertificatePinner$Builder: java.util.Map hostnameToPins>;

        return r1;
    }
    public transient com.squareup.okhttp.CertificatePinner$Builder add(java.lang.String, java.lang.String[])
    {
        com.squareup.okhttp.CertificatePinner$Builder r0;
        java.lang.String $r1, $r9;
        java.lang.String[] $r2;
        java.util.LinkedHashSet r3;
        java.lang.IllegalArgumentException $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.lang.Object $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r8;
        okio.ByteString $r10;

        r0 := @this: com.squareup.okhttp.CertificatePinner$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("hostname == null");

        throw $r4;

     label1:
        r3 = new java.util.LinkedHashSet;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>()>();

        $r5 = r0.<com.squareup.okhttp.CertificatePinner$Builder: java.util.Map hostnameToPins>;

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r3);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        $r6 = (java.util.Set) $r7;

        if $r6 == null goto label2;

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

     label2:
        $i0 = lengthof $r2;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label6;

        $r1 = $r2[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("sha1/");

        if $z0 != 0 goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pins must start with \'sha1/\': ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        $r9 = "sha1/";

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

        $r10 = staticinvoke <okio.ByteString: okio.ByteString decodeBase64(java.lang.String)>($r9);

        if $r10 != null goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pins must be base64: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label5:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $i1 = $i1 + 1;

        goto label3;

     label6:
        return r0;
    }
    public com.squareup.okhttp.CertificatePinner build()
    {
        com.squareup.okhttp.CertificatePinner$Builder r0;
        com.squareup.okhttp.CertificatePinner $r1;

        r0 := @this: com.squareup.okhttp.CertificatePinner$Builder;

        $r1 = new com.squareup.okhttp.CertificatePinner;

        specialinvoke $r1.<com.squareup.okhttp.CertificatePinner: void <init>(com.squareup.okhttp.CertificatePinner$Builder,com.squareup.okhttp.CertificatePinner$1)>(r0, null);

        return $r1;
    }
