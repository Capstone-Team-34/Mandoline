com.squareup.okhttp.Request$Builder extends java.lang.Object
private com.squareup.okhttp.RequestBody body
private com.squareup.okhttp.Headers$Builder headers
private java.lang.String method
private java.lang.Object tag
private com.squareup.okhttp.HttpUrl url
    public void <init>()
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.Headers$Builder $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.Request$Builder: java.lang.String method> = "GET";

        $r1 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke $r1.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers> = $r1;

        return;
    }
    private void <init>(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.HttpUrl $r2;
        java.lang.String $r3;
        com.squareup.okhttp.RequestBody $r4;
        java.lang.Object $r5;
        com.squareup.okhttp.Headers $r6;
        com.squareup.okhttp.Headers$Builder $r7;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl access$600(com.squareup.okhttp.Request)>($r1);

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl url> = $r2;

        $r3 = staticinvoke <com.squareup.okhttp.Request: java.lang.String access$700(com.squareup.okhttp.Request)>($r1);

        r0.<com.squareup.okhttp.Request$Builder: java.lang.String method> = $r3;

        $r4 = staticinvoke <com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody access$800(com.squareup.okhttp.Request)>($r1);

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody body> = $r4;

        $r5 = staticinvoke <com.squareup.okhttp.Request: java.lang.Object access$900(com.squareup.okhttp.Request)>($r1);

        r0.<com.squareup.okhttp.Request$Builder: java.lang.Object tag> = $r5;

        $r6 = staticinvoke <com.squareup.okhttp.Request: com.squareup.okhttp.Headers access$1000(com.squareup.okhttp.Request)>($r1);

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>();

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers> = $r7;

        return;
    }
    void <init>(com.squareup.okhttp.Request, com.squareup.okhttp.Request$1)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Request$1 $r2;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 := @parameter1: com.squareup.okhttp.Request$1;

        specialinvoke r0.<com.squareup.okhttp.Request$Builder: void <init>(com.squareup.okhttp.Request)>($r1);

        return;
    }
    static com.squareup.okhttp.HttpUrl access$000(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request$Builder $r0;
        com.squareup.okhttp.HttpUrl r1;

        $r0 := @parameter0: com.squareup.okhttp.Request$Builder;

        r1 = $r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl url>;

        return r1;
    }
    static java.lang.String access$100(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.squareup.okhttp.Request$Builder;

        r1 = $r0.<com.squareup.okhttp.Request$Builder: java.lang.String method>;

        return r1;
    }
    static com.squareup.okhttp.Headers$Builder access$200(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request$Builder $r0;
        com.squareup.okhttp.Headers$Builder r1;

        $r0 := @parameter0: com.squareup.okhttp.Request$Builder;

        r1 = $r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers>;

        return r1;
    }
    static com.squareup.okhttp.RequestBody access$300(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request$Builder $r0;
        com.squareup.okhttp.RequestBody r1;

        $r0 := @parameter0: com.squareup.okhttp.Request$Builder;

        r1 = $r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody body>;

        return r1;
    }
    static java.lang.Object access$400(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request$Builder $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.squareup.okhttp.Request$Builder;

        r1 = $r0.<com.squareup.okhttp.Request$Builder: java.lang.Object tag>;

        return r1;
    }
    public com.squareup.okhttp.Request$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.String $r1, $r2;
        com.squareup.okhttp.Headers$Builder $r3;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    public com.squareup.okhttp.Request build()
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.HttpUrl $r1;
        java.lang.IllegalStateException $r2;
        com.squareup.okhttp.Request $r3;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 = r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl url>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("url == null");

        throw $r2;

     label1:
        $r3 = new com.squareup.okhttp.Request;

        specialinvoke $r3.<com.squareup.okhttp.Request: void <init>(com.squareup.okhttp.Request$Builder,com.squareup.okhttp.Request$1)>(r0, null);

        return $r3;
    }
    public com.squareup.okhttp.Request$Builder cacheControl(com.squareup.okhttp.CacheControl)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.CacheControl $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.CacheControl;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.CacheControl: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Cache-Control");

        return r0;

     label1:
        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Cache-Control", $r2);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder delete()
    {
        com.squareup.okhttp.Request$Builder r0;
        byte[] $r1;
        com.squareup.okhttp.RequestBody $r2;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 = newarray (byte)[0];

        $r2 = staticinvoke <com.squareup.okhttp.RequestBody: com.squareup.okhttp.RequestBody create(com.squareup.okhttp.MediaType,byte[])>(null, $r1);

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder delete(com.squareup.okhttp.RequestBody)>($r2);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder delete(com.squareup.okhttp.RequestBody)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.RequestBody $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.RequestBody;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("DELETE", $r1);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder get()
    {
        com.squareup.okhttp.Request$Builder r0;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("GET", null);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder head()
    {
        com.squareup.okhttp.Request$Builder r0;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("HEAD", null);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder header(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.String $r1, $r2;
        com.squareup.okhttp.Headers$Builder $r3;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder headers(com.squareup.okhttp.Headers)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.Headers $r1;
        com.squareup.okhttp.Headers$Builder $r2;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Headers;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>();

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers> = $r2;

        return r0;
    }
    public com.squareup.okhttp.Request$Builder method(java.lang.String, com.squareup.okhttp.RequestBody)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.String $r1;
        com.squareup.okhttp.RequestBody $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.squareup.okhttp.RequestBody;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("method == null || method.length() == 0");

        throw $r3;

     label2:
        if $r2 == null goto label3;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not have a request body.");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label3:
        if $r2 != null goto label4;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have a request body.");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label4:
        r0.<com.squareup.okhttp.Request$Builder: java.lang.String method> = $r1;

        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody body> = $r2;

        return r0;
    }
    public com.squareup.okhttp.Request$Builder patch(com.squareup.okhttp.RequestBody)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.RequestBody $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.RequestBody;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("PATCH", $r1);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder post(com.squareup.okhttp.RequestBody)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.RequestBody $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.RequestBody;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("POST", $r1);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder put(com.squareup.okhttp.RequestBody)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.RequestBody $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.RequestBody;

        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("PUT", $r1);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.String $r1;
        com.squareup.okhttp.Headers$Builder $r2;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>($r1);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder tag(java.lang.Object)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.Object $r1;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.Object;

        r0.<com.squareup.okhttp.Request$Builder: java.lang.Object tag> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Request$Builder url(com.squareup.okhttp.HttpUrl)
    {
        com.squareup.okhttp.Request$Builder r0;
        com.squareup.okhttp.HttpUrl $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: com.squareup.okhttp.HttpUrl;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url == null");

        throw $r2;

     label1:
        r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl url> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Request$Builder url(java.lang.String)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        com.squareup.okhttp.HttpUrl $r4;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url == null");

        throw $r2;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "ws:", 0, 3);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http:");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r4 = staticinvoke <com.squareup.okhttp.HttpUrl: com.squareup.okhttp.HttpUrl parse(java.lang.String)>($r1);

        if $r4 != null goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected url: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "wss:", 0, 4);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https:");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label4:
        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(com.squareup.okhttp.HttpUrl)>($r4);

        return r0;
    }
    public com.squareup.okhttp.Request$Builder url(java.net.URL)
    {
        com.squareup.okhttp.Request$Builder r0;
        java.net.URL $r1;
        java.lang.IllegalArgumentException $r2;
        com.squareup.okhttp.HttpUrl $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.squareup.okhttp.Request$Builder;

        $r1 := @parameter0: java.net.URL;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url == null");

        throw $r2;

     label1:
        $r3 = staticinvoke <com.squareup.okhttp.HttpUrl: com.squareup.okhttp.HttpUrl get(java.net.URL)>($r1);

        if $r3 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected url: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        r0 = virtualinvoke r0.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(com.squareup.okhttp.HttpUrl)>($r3);

        return r0;
    }
