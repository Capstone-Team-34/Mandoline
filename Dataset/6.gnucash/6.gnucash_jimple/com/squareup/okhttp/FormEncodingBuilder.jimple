com.squareup.okhttp.FormEncodingBuilder extends java.lang.Object
private static final com.squareup.okhttp.MediaType CONTENT_TYPE
private final okio.Buffer content
    static void <clinit>()
    {
        com.squareup.okhttp.MediaType $r0;

        $r0 = staticinvoke <com.squareup.okhttp.MediaType: com.squareup.okhttp.MediaType parse(java.lang.String)>("application/x-www-form-urlencoded");

        <com.squareup.okhttp.FormEncodingBuilder: com.squareup.okhttp.MediaType CONTENT_TYPE> = $r0;

        return;
    }
    public void <init>()
    {
        com.squareup.okhttp.FormEncodingBuilder r0;
        okio.Buffer $r1;

        r0 := @this: com.squareup.okhttp.FormEncodingBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new okio.Buffer;

        specialinvoke $r1.<okio.Buffer: void <init>()>();

        r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content> = $r1;

        return;
    }
    public com.squareup.okhttp.FormEncodingBuilder add(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.FormEncodingBuilder r0;
        java.lang.String $r1, $r2;
        okio.Buffer $r3;
        long $l0;
        byte $b1;
        int $i2;

        r0 := @this: com.squareup.okhttp.FormEncodingBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $l0 = virtualinvoke $r3.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeByte(int)>(38);

     label1:
        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        staticinvoke <com.squareup.okhttp.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)>($r3, $r1, 0, $i2, " \"\'<>#&=", 0, 1);

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeByte(int)>(61);

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        staticinvoke <com.squareup.okhttp.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)>($r3, $r2, 0, $i2, " \"\'<>#&=", 0, 1);

        return r0;
    }
    public com.squareup.okhttp.FormEncodingBuilder addEncoded(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.FormEncodingBuilder r0;
        java.lang.String $r1, $r2;
        okio.Buffer $r3;
        long $l0;
        byte $b1;
        int $i2;

        r0 := @this: com.squareup.okhttp.FormEncodingBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $l0 = virtualinvoke $r3.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeByte(int)>(38);

     label1:
        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        staticinvoke <com.squareup.okhttp.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)>($r3, $r1, 0, $i2, " \"\'<>#&=", 1, 1);

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeByte(int)>(61);

        $r3 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        staticinvoke <com.squareup.okhttp.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)>($r3, $r2, 0, $i2, " \"\'<>#&=", 1, 1);

        return r0;
    }
    public com.squareup.okhttp.RequestBody build()
    {
        com.squareup.okhttp.FormEncodingBuilder r0;
        okio.Buffer $r1;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r2;
        com.squareup.okhttp.MediaType $r3;
        okio.ByteString $r4;
        com.squareup.okhttp.RequestBody $r5;

        r0 := @this: com.squareup.okhttp.FormEncodingBuilder;

        $r1 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $l0 = virtualinvoke $r1.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Form encoded body must have at least one part.");

        throw $r2;

     label1:
        $r3 = <com.squareup.okhttp.FormEncodingBuilder: com.squareup.okhttp.MediaType CONTENT_TYPE>;

        $r1 = r0.<com.squareup.okhttp.FormEncodingBuilder: okio.Buffer content>;

        $r4 = virtualinvoke $r1.<okio.Buffer: okio.ByteString snapshot()>();

        $r5 = staticinvoke <com.squareup.okhttp.RequestBody: com.squareup.okhttp.RequestBody create(com.squareup.okhttp.MediaType,okio.ByteString)>($r3, $r4);

        return $r5;
    }
