com.squareup.okhttp.Response$Builder extends java.lang.Object
private com.squareup.okhttp.ResponseBody body
private com.squareup.okhttp.Response cacheResponse
private int code
private com.squareup.okhttp.Handshake handshake
private com.squareup.okhttp.Headers$Builder headers
private java.lang.String message
private com.squareup.okhttp.Response networkResponse
private com.squareup.okhttp.Response priorResponse
private com.squareup.okhttp.Protocol protocol
private com.squareup.okhttp.Request request
    public void <init>()
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Headers$Builder $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.Response$Builder: int code> = -1;

        $r1 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke $r1.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers> = $r1;

        return;
    }
    private void <init>(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1, $r9;
        com.squareup.okhttp.Request $r2;
        com.squareup.okhttp.Protocol $r3;
        int $i0;
        java.lang.String $r4;
        com.squareup.okhttp.Handshake $r5;
        com.squareup.okhttp.Headers $r6;
        com.squareup.okhttp.Headers$Builder $r7;
        com.squareup.okhttp.ResponseBody $r8;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.Response$Builder: int code> = -1;

        $r2 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Request access$1100(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request request> = $r2;

        $r3 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Protocol access$1200(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol protocol> = $r3;

        $i0 = staticinvoke <com.squareup.okhttp.Response: int access$1300(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: int code> = $i0;

        $r4 = staticinvoke <com.squareup.okhttp.Response: java.lang.String access$1400(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: java.lang.String message> = $r4;

        $r5 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Handshake access$1500(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Handshake handshake> = $r5;

        $r6 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Headers access$1600(com.squareup.okhttp.Response)>($r1);

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>();

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers> = $r7;

        $r8 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody access$1700(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.ResponseBody body> = $r8;

        $r9 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1800(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response networkResponse> = $r9;

        $r9 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1900(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response cacheResponse> = $r9;

        $r1 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$2000(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response priorResponse> = $r1;

        return;
    }
    void <init>(com.squareup.okhttp.Response, com.squareup.okhttp.Response$1)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1;
        com.squareup.okhttp.Response$1 $r2;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        $r2 := @parameter1: com.squareup.okhttp.Response$1;

        specialinvoke r0.<com.squareup.okhttp.Response$Builder: void <init>(com.squareup.okhttp.Response)>($r1);

        return;
    }
    static com.squareup.okhttp.Request access$000(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Request r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request request>;

        return r1;
    }
    static com.squareup.okhttp.Protocol access$100(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Protocol r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol protocol>;

        return r1;
    }
    static int access$200(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        i0 = $r0.<com.squareup.okhttp.Response$Builder: int code>;

        return i0;
    }
    static java.lang.String access$300(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: java.lang.String message>;

        return r1;
    }
    static com.squareup.okhttp.Handshake access$400(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Handshake r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Handshake handshake>;

        return r1;
    }
    static com.squareup.okhttp.Headers$Builder access$500(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Headers$Builder r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers>;

        return r1;
    }
    static com.squareup.okhttp.ResponseBody access$600(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.ResponseBody r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.ResponseBody body>;

        return r1;
    }
    static com.squareup.okhttp.Response access$700(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Response r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response networkResponse>;

        return r1;
    }
    static com.squareup.okhttp.Response access$800(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Response r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response cacheResponse>;

        return r1;
    }
    static com.squareup.okhttp.Response access$900(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response$Builder $r0;
        com.squareup.okhttp.Response r1;

        $r0 := @parameter0: com.squareup.okhttp.Response$Builder;

        r1 = $r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response priorResponse>;

        return r1;
    }
    private void checkPriorResponse(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1;
        com.squareup.okhttp.ResponseBody $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        $r2 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody access$1700(com.squareup.okhttp.Response)>($r1);

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("priorResponse.body != null");

        throw $r3;

     label1:
        return;
    }
    private void checkSupportResponse(java.lang.String, com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        java.lang.String $r1;
        com.squareup.okhttp.Response $r2, $r6;
        com.squareup.okhttp.ResponseBody $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.squareup.okhttp.Response;

        $r3 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody access$1700(com.squareup.okhttp.Response)>($r2);

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".body != null");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        $r6 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1800(com.squareup.okhttp.Response)>($r2);

        if $r6 == null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".networkResponse != null");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        $r6 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1900(com.squareup.okhttp.Response)>($r2);

        if $r6 == null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cacheResponse != null");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label3:
        $r2 = staticinvoke <com.squareup.okhttp.Response: com.squareup.okhttp.Response access$2000(com.squareup.okhttp.Response)>($r2);

        if $r2 == null goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".priorResponse != null");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        return;
    }
    public com.squareup.okhttp.Response$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Response$Builder r0;
        java.lang.String $r1, $r2;
        com.squareup.okhttp.Headers$Builder $r3;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    public com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.ResponseBody $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.ResponseBody;

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.ResponseBody body> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response build()
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Request $r1;
        java.lang.IllegalStateException $r2;
        com.squareup.okhttp.Protocol $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.squareup.okhttp.Response $r6;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 = r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request request>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("request == null");

        throw $r2;

     label1:
        $r3 = r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol protocol>;

        if $r3 != null goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("protocol == null");

        throw $r2;

     label2:
        $i0 = r0.<com.squareup.okhttp.Response$Builder: int code>;

        if $i0 >= 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("code < 0: ");

        $i0 = r0.<com.squareup.okhttp.Response$Builder: int code>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label3:
        $r6 = new com.squareup.okhttp.Response;

        specialinvoke $r6.<com.squareup.okhttp.Response: void <init>(com.squareup.okhttp.Response$Builder,com.squareup.okhttp.Response$1)>(r0, null);

        return $r6;
    }
    public com.squareup.okhttp.Response$Builder cacheResponse(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        if $r1 == null goto label1;

        specialinvoke r0.<com.squareup.okhttp.Response$Builder: void checkSupportResponse(java.lang.String,com.squareup.okhttp.Response)>("cacheResponse", $r1);

     label1:
        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response cacheResponse> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder code(int)
    {
        com.squareup.okhttp.Response$Builder r0;
        int $i0;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $i0 := @parameter0: int;

        r0.<com.squareup.okhttp.Response$Builder: int code> = $i0;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder handshake(com.squareup.okhttp.Handshake)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Handshake $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Handshake;

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Handshake handshake> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder header(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Response$Builder r0;
        java.lang.String $r1, $r2;
        com.squareup.okhttp.Headers$Builder $r3;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    public com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Headers $r1;
        com.squareup.okhttp.Headers$Builder $r2;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Headers;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>();

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers> = $r2;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder message(java.lang.String)
    {
        com.squareup.okhttp.Response$Builder r0;
        java.lang.String $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: java.lang.String;

        r0.<com.squareup.okhttp.Response$Builder: java.lang.String message> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder networkResponse(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        if $r1 == null goto label1;

        specialinvoke r0.<com.squareup.okhttp.Response$Builder: void checkSupportResponse(java.lang.String,com.squareup.okhttp.Response)>("networkResponse", $r1);

     label1:
        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response networkResponse> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Response $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        if $r1 == null goto label1;

        specialinvoke r0.<com.squareup.okhttp.Response$Builder: void checkPriorResponse(com.squareup.okhttp.Response)>($r1);

     label1:
        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response priorResponse> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Protocol $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Protocol;

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol protocol> = $r1;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder removeHeader(java.lang.String)
    {
        com.squareup.okhttp.Response$Builder r0;
        java.lang.String $r1;
        com.squareup.okhttp.Headers$Builder $r2;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder headers>;

        virtualinvoke $r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>($r1);

        return r0;
    }
    public com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Response$Builder r0;
        com.squareup.okhttp.Request $r1;

        r0 := @this: com.squareup.okhttp.Response$Builder;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        r0.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request request> = $r1;

        return r0;
    }
