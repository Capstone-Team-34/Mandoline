com.squareup.okhttp.Headers$Builder extends java.lang.Object
private final java.util.List namesAndValues
    public void <init>()
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues> = $r1;

        return;
    }
    static java.util.List access$000(com.squareup.okhttp.Headers$Builder)
    {
        com.squareup.okhttp.Headers$Builder $r0;
        java.util.List r1;

        $r0 := @parameter0: com.squareup.okhttp.Headers$Builder;

        r1 = $r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        return r1;
    }
    public com.squareup.okhttp.Headers$Builder add(java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r4;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i0 != -1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        r0 = virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r4, $r1);

        return r0;
    }
    public com.squareup.okhttp.Headers$Builder add(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value == null");

        throw $r3;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(0);

        if $i0 != -1 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(0);

        if $i0 == -1 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label4:
        r0 = virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    com.squareup.okhttp.Headers$Builder addLenient(java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(":", 1);

        if $i0 == -1 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        r0 = virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r2, $r1);

        return r0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        r0 = virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>("", $r1);

        return r0;

     label2:
        r0 = virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>("", $r1);

        return r0;
    }
    com.squareup.okhttp.Headers$Builder addLenient(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r2;
        java.util.List $r3;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public com.squareup.okhttp.Headers build()
    {
        com.squareup.okhttp.Headers$Builder r0;
        com.squareup.okhttp.Headers $r1;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 = new com.squareup.okhttp.Headers;

        specialinvoke $r1.<com.squareup.okhttp.Headers: void <init>(com.squareup.okhttp.Headers$Builder,com.squareup.okhttp.Headers$1)>(r0, null);

        return $r1;
    }
    public java.lang.String get(java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r4;
        int $i0;
        java.util.List $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -2;

     label1:
        if $i0 < 0 goto label3;

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i0 = $i0 + 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r1 = (java.lang.String) $r3;

        return $r1;

     label2:
        $i0 = $i0 + -2;

        goto label1;

     label3:
        return null;
    }
    public com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r4;
        int i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0);

        $r2 = r0.<com.squareup.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0);

        i0 = i0 + -2;

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        return r0;
    }
    public com.squareup.okhttp.Headers$Builder set(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Headers$Builder r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.squareup.okhttp.Headers$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>($r1);

        virtualinvoke r0.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
