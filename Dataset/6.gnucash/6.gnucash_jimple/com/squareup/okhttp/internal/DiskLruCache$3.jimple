com.squareup.okhttp.internal.DiskLruCache$3 extends java.lang.Object implements java.util.Iterator
final java.util.Iterator delegate
com.squareup.okhttp.internal.DiskLruCache$Snapshot nextSnapshot
com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot
final com.squareup.okhttp.internal.DiskLruCache this$0
    void <init>(com.squareup.okhttp.internal.DiskLruCache)
    {
        com.squareup.okhttp.internal.DiskLruCache$3 r0;
        com.squareup.okhttp.internal.DiskLruCache $r1;
        java.util.ArrayList $r2;
        java.util.LinkedHashMap $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$3;

        $r1 := @parameter0: com.squareup.okhttp.internal.DiskLruCache;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        $r1 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $r3 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: java.util.LinkedHashMap access$2000(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: java.util.Iterator delegate> = $r5;

        return;
    }
    public boolean hasNext()
    {
        com.squareup.okhttp.internal.DiskLruCache$3 r0;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r1;
        com.squareup.okhttp.internal.DiskLruCache $r2, $r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        com.squareup.okhttp.internal.DiskLruCache$Entry r6;
        java.lang.Throwable $r7;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$3;

        $r1 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot nextSnapshot>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache this$0>;

        entermonitor $r2;

     label2:
        $r3 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: boolean access$100(com.squareup.okhttp.internal.DiskLruCache)>($r3);

        if $z0 == 0 goto label4;

        exitmonitor $r2;

     label3:
        return 0;

     label4:
        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: java.util.Iterator delegate>;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: java.util.Iterator delegate>;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.squareup.okhttp.internal.DiskLruCache$Entry) $r5;

        $r1 = virtualinvoke r6.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot()>();

        if $r1 == null goto label4;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot nextSnapshot> = $r1;

        exitmonitor $r2;

     label5:
        return 1;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

     label8:
        exitmonitor $r2;

     label9:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }
    public com.squareup.okhttp.internal.DiskLruCache$Snapshot next()
    {
        com.squareup.okhttp.internal.DiskLruCache$3 r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r2;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$3;

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.DiskLruCache$3: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot nextSnapshot>;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot> = $r2;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot nextSnapshot> = null;

        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot>;

        return $r2;
    }
    public volatile java.lang.Object next()
    {
        com.squareup.okhttp.internal.DiskLruCache$3 r0;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r1;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$3;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot next()>();

        return $r1;
    }
    public void remove()
    {
        com.squareup.okhttp.internal.DiskLruCache$3 r0;
        java.lang.String $r1;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r2;
        java.lang.IllegalStateException $r3;
        com.squareup.okhttp.internal.DiskLruCache $r4;
        java.io.IOException $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$3;

        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() before next()");

        throw $r3;

     label1:
        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot>;

     label2:
        $r1 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache$Snapshot: java.lang.String access$2100(com.squareup.okhttp.internal.DiskLruCache$Snapshot)>($r2);

        virtualinvoke $r4.<com.squareup.okhttp.internal.DiskLruCache: boolean remove(java.lang.String)>($r1);

     label3:
        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot> = null;

        return;

     label4:
        $r5 := @caughtexception;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot> = null;

        return;

     label5:
        $r6 := @caughtexception;

        r0.<com.squareup.okhttp.internal.DiskLruCache$3: com.squareup.okhttp.internal.DiskLruCache$Snapshot removeSnapshot> = null;

        throw $r6;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
    }
