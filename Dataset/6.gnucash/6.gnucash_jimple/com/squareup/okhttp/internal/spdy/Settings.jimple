com.squareup.okhttp.internal.spdy.Settings extends java.lang.Object
static final int CLIENT_CERTIFICATE_VECTOR_SIZE
static final int COUNT
static final int CURRENT_CWND
static final int DEFAULT_INITIAL_WINDOW_SIZE
static final int DOWNLOAD_BANDWIDTH
static final int DOWNLOAD_RETRANS_RATE
static final int ENABLE_PUSH
static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS
static final int FLOW_CONTROL_OPTIONS
static final int FLOW_CONTROL_OPTIONS_DISABLED
static final int HEADER_TABLE_SIZE
static final int INITIAL_WINDOW_SIZE
static final int MAX_CONCURRENT_STREAMS
static final int MAX_FRAME_SIZE
static final int MAX_HEADER_LIST_SIZE
static final int PERSISTED
static final int PERSIST_VALUE
static final int ROUND_TRIP_TIME
static final int UPLOAD_BANDWIDTH
private int persistValue
private int persisted
private int set
private final int[] values
    public void <init>()
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values> = $r1;

        return;
    }
    void clear()
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted> = 0;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue> = 0;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int set> = 0;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, 0);

        return;
    }
    int flags(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, i1;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        i1 = 0;

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Settings: boolean isPersisted(int)>($i0);

        if $z0 == 0 goto label1;

        i1 = 2;

     label1:
        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Settings: boolean persistValue(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = i1 | 1;

        return $i0;

     label2:
        return i1;
    }
    int get(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[$i0];

        return $i0;
    }
    int getClientCertificateVectorSize(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 256;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[8];

     label1:
        return $i0;
    }
    int getCurrentCwnd(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[5];

     label1:
        return $i0;
    }
    int getDownloadBandwidth(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 4;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[2];

     label1:
        return $i0;
    }
    int getDownloadRetransRate(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 64;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[6];

     label1:
        return $i0;
    }
    boolean getEnablePush(boolean)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        boolean $z0;
        int $i0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $z0 := @parameter0: boolean;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label2;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[2];

     label1:
        if $i0 != 1 goto label4;

        return 1;

     label2:
        if $z0 == 0 goto label3;

        $i0 = 1;

        goto label1;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        return 0;
    }
    int getHeaderTableSize()
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[1];

        return $i0;

     label1:
        return -1;
    }
    int getInitialWindowSize(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 128;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[7];

     label1:
        return $i0;
    }
    int getMaxConcurrentStreams(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 16;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[4];

     label1:
        return $i0;
    }
    int getMaxFrameSize(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 32;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[5];

     label1:
        return $i0;
    }
    int getMaxHeaderListSize(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 64;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[6];

     label1:
        return $i0;
    }
    int getRoundTripTime(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 8;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[3];

     label1:
        return $i0;
    }
    int getUploadBandwidth(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[1];

     label1:
        return $i0;
    }
    boolean isFlowControlDisabled()
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i0 = $i0 & 1024;

        if $i0 == 0 goto label2;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $i0 = $r1[10];

     label1:
        $i0 = $i0 & 1;

        if $i0 == 0 goto label3;

        return 1;

     label2:
        $i0 = 0;

        goto label1;

     label3:
        return 0;
    }
    boolean isPersisted(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i0 = 1 << $i0;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted>;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isSet(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i0 = 1 << $i0;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void merge(com.squareup.okhttp.internal.spdy.Settings)
    {
        com.squareup.okhttp.internal.spdy.Settings r0, $r1;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.Settings;

        i0 = 0;

     label1:
        if i0 >= 10 goto label4;

        $z0 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: boolean isSet(int)>(i0);

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: int flags(int)>(i0);

        $i2 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: int get(int)>(i0);

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Settings: com.squareup.okhttp.internal.spdy.Settings set(int,int,int)>(i0, $i1, $i2);

        goto label2;

     label4:
        return;
    }
    boolean persistValue(int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i0 = 1 << $i0;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue>;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    com.squareup.okhttp.internal.spdy.Settings set(int, int, int)
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0, $i1, $i2, i3, $i4, $i5;
        int[] $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        i3 = lengthof $r1;

        if $i0 < i3 goto label1;

        return r0;

     label1:
        i3 = 1 << $i0;

        $i4 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i4 = $i4 | i3;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int set> = $i4;

        $i4 = $i1 & 1;

        if $i4 == 0 goto label4;

        $i4 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue>;

        $i4 = $i4 | i3;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue> = $i4;

     label2:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label5;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted>;

        $i1 = $i1 | i3;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted> = $i1;

     label3:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int[] values>;

        $r1[$i0] = $i2;

        return r0;

     label4:
        $i4 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue>;

        $i5 = i3 ^ -1;

        $i4 = $i4 & $i5;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persistValue> = $i4;

        goto label2;

     label5:
        $i1 = r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted>;

        i3 = i3 ^ -1;

        $i1 = $i1 & i3;

        r0.<com.squareup.okhttp.internal.spdy.Settings: int persisted> = $i1;

        goto label3;
    }
    int size()
    {
        com.squareup.okhttp.internal.spdy.Settings r0;
        int $i0;

        r0 := @this: com.squareup.okhttp.internal.spdy.Settings;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.Settings: int set>;

        $i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i0;
    }
