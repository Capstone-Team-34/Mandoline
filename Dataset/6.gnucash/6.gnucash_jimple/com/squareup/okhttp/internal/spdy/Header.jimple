com.squareup.okhttp.internal.spdy.Header extends java.lang.Object
public static final okio.ByteString RESPONSE_STATUS
public static final okio.ByteString TARGET_AUTHORITY
public static final okio.ByteString TARGET_HOST
public static final okio.ByteString TARGET_METHOD
public static final okio.ByteString TARGET_PATH
public static final okio.ByteString TARGET_SCHEME
public static final okio.ByteString VERSION
final int hpackSize
public final okio.ByteString name
public final okio.ByteString value
    static void <clinit>()
    {
        okio.ByteString $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":status");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString RESPONSE_STATUS> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":method");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_METHOD> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":path");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_PATH> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":scheme");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_SCHEME> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":authority");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_AUTHORITY> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":host");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_HOST> = $r0;

        $r0 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>(":version");

        <com.squareup.okhttp.internal.spdy.Header: okio.ByteString VERSION> = $r0;

        return;
    }
    public void <init>(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.internal.spdy.Header r0;
        java.lang.String $r1, $r2;
        okio.ByteString $r3, $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r1);

        $r4 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r2);

        specialinvoke r0.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,okio.ByteString)>($r3, $r4);

        return;
    }
    public void <init>(okio.ByteString, java.lang.String)
    {
        com.squareup.okhttp.internal.spdy.Header r0;
        okio.ByteString $r1, $r3;
        java.lang.String $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 := @parameter0: okio.ByteString;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r2);

        specialinvoke r0.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,okio.ByteString)>($r1, $r3);

        return;
    }
    public void <init>(okio.ByteString, okio.ByteString)
    {
        com.squareup.okhttp.internal.spdy.Header r0;
        okio.ByteString $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 := @parameter0: okio.ByteString;

        $r2 := @parameter1: okio.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name> = $r1;

        r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value> = $r2;

        $i0 = virtualinvoke $r1.<okio.ByteString: int size()>();

        $i0 = $i0 + 32;

        $i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $i0 = $i0 + $i1;

        r0.<com.squareup.okhttp.internal.spdy.Header: int hpackSize> = $i0;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        com.squareup.okhttp.internal.spdy.Header r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        okio.ByteString $r3, $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.squareup.okhttp.internal.spdy.Header;

        if $z0 == 0 goto label1;

        r2 = (com.squareup.okhttp.internal.spdy.Header) $r1;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $r4 = r2.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $z0 = virtualinvoke $r3.<okio.ByteString: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $r4 = r2.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $z0 = virtualinvoke $r3.<okio.ByteString: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        com.squareup.okhttp.internal.spdy.Header r0;
        okio.ByteString $r1;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $i0 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = $i0 + 527;

        $i0 = $i0 * 31;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $i1 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        com.squareup.okhttp.internal.spdy.Header r0;
        java.lang.Object[] $r1;
        okio.ByteString $r2;
        java.lang.String $r3;

        r0 := @this: com.squareup.okhttp.internal.spdy.Header;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $r3 = virtualinvoke $r2.<okio.ByteString: java.lang.String utf8()>();

        $r1[0] = $r3;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $r3 = virtualinvoke $r2.<okio.ByteString: java.lang.String utf8()>();

        $r1[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %s", $r1);

        return $r3;
    }
