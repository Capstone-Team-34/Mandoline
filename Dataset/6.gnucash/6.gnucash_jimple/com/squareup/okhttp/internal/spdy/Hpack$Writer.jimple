com.squareup.okhttp.internal.spdy.Hpack$Writer extends java.lang.Object
private final okio.Buffer out
    void <init>(okio.Buffer)
    {
        com.squareup.okhttp.internal.spdy.Hpack$Writer r0;
        okio.Buffer $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Hpack$Writer;

        $r1 := @parameter0: okio.Buffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out> = $r1;

        return;
    }
    void writeByteString(okio.ByteString) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Hpack$Writer r0;
        okio.ByteString $r1;
        int $i0;
        okio.Buffer $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.Hpack$Writer;

        $r1 := @parameter0: okio.ByteString;

        $i0 = virtualinvoke $r1.<okio.ByteString: int size()>();

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: void writeInt(int,int,int)>($i0, 127, 0);

        $r2 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        virtualinvoke $r2.<okio.Buffer: okio.Buffer write(okio.ByteString)>($r1);

        return;
    }
    void writeHeaders(java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Hpack$Writer r0;
        java.util.List r1;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        com.squareup.okhttp.internal.spdy.Header $r3;
        okio.ByteString $r4;
        java.util.Map $r5;
        java.lang.Integer r6;
        okio.Buffer $r7;

        r0 := @this: com.squareup.okhttp.internal.spdy.Hpack$Writer;

        r1 := @parameter0: java.util.List;

        i0 = 0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label4;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.squareup.okhttp.internal.spdy.Header) $r2;

        $r4 = $r3.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $r4 = virtualinvoke $r4.<okio.ByteString: okio.ByteString toAsciiLowercase()>();

        $r5 = staticinvoke <com.squareup.okhttp.internal.spdy.Hpack: java.util.Map access$200()>();

        $r2 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (java.lang.Integer) $r2;

        if r6 == null goto label3;

        $i2 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        $i2 = $i2 + 1;

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: void writeInt(int,int,int)>($i2, 15, 0);

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.squareup.okhttp.internal.spdy.Header) $r2;

        $r4 = $r3.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: void writeByteString(okio.ByteString)>($r4);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        virtualinvoke $r7.<okio.Buffer: okio.Buffer writeByte(int)>(0);

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: void writeByteString(okio.ByteString)>($r4);

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.squareup.okhttp.internal.spdy.Header) $r2;

        $r4 = $r3.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: void writeByteString(okio.ByteString)>($r4);

        goto label2;

     label4:
        return;
    }
    void writeInt(int, int, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Hpack$Writer r0;
        int $i0, $i1, $i2;
        okio.Buffer $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Hpack$Writer;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i2 >= $i0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        $i2 = $i1 | $i2;

        virtualinvoke $r1.<okio.Buffer: okio.Buffer writeByte(int)>($i2);

        return;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        $i1 = $i1 | $i0;

        virtualinvoke $r1.<okio.Buffer: okio.Buffer writeByte(int)>($i1);

        $i2 = $i2 - $i0;

     label2:
        if $i2 < 128 goto label3;

        $i0 = $i2 & 127;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        $i0 = $i0 | 128;

        virtualinvoke $r1.<okio.Buffer: okio.Buffer writeByte(int)>($i0);

        $i2 = $i2 >>> 7;

        goto label2;

     label3:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.Hpack$Writer: okio.Buffer out>;

        virtualinvoke $r1.<okio.Buffer: okio.Buffer writeByte(int)>($i2);

        return;
    }
