com.squareup.okhttp.internal.spdy.SpdyStream extends java.lang.Object
static final boolean $assertionsDisabled
long bytesLeftInWriteWindow
private final com.squareup.okhttp.internal.spdy.SpdyConnection connection
private com.squareup.okhttp.internal.spdy.ErrorCode errorCode
private final int id
private final com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout
private final java.util.List requestHeaders
private java.util.List responseHeaders
final com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink
private final com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source
long unacknowledgedBytesRead
private final com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout writeTimeout
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/squareup/okhttp/internal/spdy/SpdyStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    void <init>(int, com.squareup.okhttp.internal.spdy.SpdyConnection, boolean, boolean, java.util.List)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        int $i0;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r1;
        boolean $z0, $z1;
        java.util.List r2;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout $r3;
        java.lang.NullPointerException $r4;
        com.squareup.okhttp.internal.spdy.Settings $r5;
        long $l1;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r6;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r7;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.squareup.okhttp.internal.spdy.SpdyConnection;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        r2 := @parameter4: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead> = 0L;

        $r3 = new com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout;

        specialinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream)>(r0);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout> = $r3;

        $r3 = new com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout;

        specialinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream)>(r0);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout writeTimeout> = $r3;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode> = null;

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection == null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestHeaders == null");

        throw $r4;

     label2:
        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id> = $i0;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection> = $r1;

        $r5 = $r1.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Settings peerSettings>;

        $i0 = virtualinvoke $r5.<com.squareup.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $l1 = (long) $i0;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow> = $l1;

        $r6 = new com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r5 = $r1.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Settings okHttpSettings>;

        $i0 = virtualinvoke $r5.<com.squareup.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $l1 = (long) $i0;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream,long,com.squareup.okhttp.internal.spdy.SpdyStream$1)>(r0, $l1, null);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source> = $r6;

        $r7 = new com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        specialinvoke $r7.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream)>(r0);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink> = $r7;

        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$102(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean)>($r6, $z1);

        $r7 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$202(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean)>($r7, $z0);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders> = r2;

        return;
    }
    static void access$1000(com.squareup.okhttp.internal.spdy.SpdyStream) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        specialinvoke $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void cancelStreamIfNecessary()>();

        return;
    }
    static com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$1100(com.squareup.okhttp.internal.spdy.SpdyStream)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout writeTimeout>;

        return r1;
    }
    static void access$1200(com.squareup.okhttp.internal.spdy.SpdyStream) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        specialinvoke $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void checkOutNotClosed()>();

        return;
    }
    static com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;
        com.squareup.okhttp.internal.spdy.SpdyConnection r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        return r1;
    }
    static int access$600(com.squareup.okhttp.internal.spdy.SpdyStream)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        i0 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        return i0;
    }
    static com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout>;

        return r1;
    }
    static com.squareup.okhttp.internal.spdy.ErrorCode access$800(com.squareup.okhttp.internal.spdy.SpdyStream)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;
        com.squareup.okhttp.internal.spdy.ErrorCode r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        return r1;
    }
    static void access$900(com.squareup.okhttp.internal.spdy.SpdyStream) throws java.io.InterruptedIOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream $r0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        specialinvoke $r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void waitForIo()>();

        return;
    }
    private void cancelStreamIfNecessary() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        int $i0;
        boolean $z0, $z1;
        java.lang.AssertionError $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r3;
        com.squareup.okhttp.internal.spdy.ErrorCode $r4;
        java.lang.Throwable $r5;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r6;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $z0 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label01:
        entermonitor r0;

     label02:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r2);

        if $z0 != 0 goto label06;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$300(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r2);

        if $z0 == 0 goto label06;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r3);

        if $z0 != 0 goto label03;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r3);

        if $z0 == 0 goto label06;

     label03:
        $z0 = 1;

     label04:
        $z1 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        exitmonitor r0;

     label05:
        if $z0 == 0 goto label10;

        $r4 = <com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode CANCEL>;

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void close(com.squareup.okhttp.internal.spdy.ErrorCode)>($r4);

        return;

     label06:
        $z0 = 0;

        goto label04;

     label07:
        $r5 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        throw $r5;

     label10:
        if $z1 != 0 goto label11;

        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r6.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label11:
        return;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }
    private void checkOutNotClosed() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r1;
        boolean $z0;
        java.io.IOException $r2;
        com.squareup.okhttp.internal.spdy.ErrorCode $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r2;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r1);

        if $z0 == 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("stream finished");

        throw $r2;

     label2:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r3 == null goto label3;

        $r2 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label3:
        return;
    }
    private boolean closeInternal(com.squareup.okhttp.internal.spdy.ErrorCode)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1, $r3;
        boolean $z0;
        java.lang.AssertionError $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r4;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r5;
        java.lang.Throwable $r6;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r7;
        int $i0;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.ErrorCode;

        $z0 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        entermonitor r0;

     label2:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r3 == null goto label4;

        exitmonitor r0;

     label3:
        return 0;

     label4:
        $r4 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r4);

        if $z0 == 0 goto label8;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r5);

        if $z0 == 0 goto label8;

        exitmonitor r0;

     label5:
        return 0;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r6;

     label8:
        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode> = $r1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label9:
        $r7 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r7.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

        return 1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }
    private void waitForIo() throws java.io.InterruptedIOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        java.lang.InterruptedException r1;
        java.io.InterruptedIOException $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

     label1:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = new java.io.InterruptedIOException;

        specialinvoke $r2.<java.io.InterruptedIOException: void <init>()>();

        throw $r2;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
    void addBytesToWriteWindow(long)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $l0 := @parameter0: long;

        $l1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow>;

        $l1 = $l1 + $l0;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow> = $l1;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label1:
        return;
    }
    public void close(com.squareup.okhttp.internal.spdy.ErrorCode) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1;
        int $i0;
        boolean $z0;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.ErrorCode;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean closeInternal(com.squareup.okhttp.internal.spdy.ErrorCode)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeSynReset(int,com.squareup.okhttp.internal.spdy.ErrorCode)>($i0, $r1);

        return;
    }
    public void closeLater(com.squareup.okhttp.internal.spdy.ErrorCode)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1;
        int $i0;
        boolean $z0;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.ErrorCode;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean closeInternal(com.squareup.okhttp.internal.spdy.ErrorCode)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeSynResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode)>($i0, $r1);

        return;
    }
    public com.squareup.okhttp.internal.spdy.SpdyConnection getConnection()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyConnection r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        return r1;
    }
    public com.squareup.okhttp.internal.spdy.ErrorCode getErrorCode()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable $r1;
        com.squareup.okhttp.internal.spdy.ErrorCode r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int getId()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        int i0;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        return i0;
    }
    public java.util.List getRequestHeaders()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders>;

        return r1;
    }
    public java.util.List getResponseHeaders() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout $r1;
        java.util.List $r2;
        com.squareup.okhttp.internal.spdy.ErrorCode $r3;
        java.lang.Throwable $r4, $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label01:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void enter()>();

     label02:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r2 != null goto label07;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r3 != null goto label07;

        specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void waitForIo()>();

     label03:
        goto label02;

     label04:
        $r4 := @caughtexception;

     label05:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void exitAndThrowIfTimedOut()>();

        throw $r4;

     label06:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label07:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void exitAndThrowIfTimedOut()>();

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r2 == null goto label09;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

     label08:
        exitmonitor r0;

        return $r2;

     label09:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label10:
        nop;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }
    public okio.Sink getSink()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r1 != null goto label4;

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z0 != 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply before requesting the sink");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

     label3:
        throw $r3;

     label4:
        exitmonitor r0;

     label5:
        r4 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        return r4;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
    public okio.Source getSource()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        return r1;
    }
    public boolean isLocallyInitiated()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        int $i0;
        boolean z0, $z1;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label2;

        z0 = 1;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $z1 = $r1.<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean client>;

        if $z1 != z0 goto label3;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    public boolean isOpen()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        boolean $z0, $z1;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r3;
        java.util.List $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $z0 = 0;

        entermonitor r0;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

     label2:
        if $r1 == null goto label4;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z1 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r2);

        if $z1 != 0 goto label5;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z1 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$300(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r2);

        if $z1 == 0 goto label8;

     label5:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z1 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r3);

        if $z1 != 0 goto label6;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z1 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r3);

        if $z1 == 0 goto label8;

     label6:
        $r4 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

     label7:
        if $r4 != null goto label3;

     label8:
        $z0 = 1;

        goto label3;

     label9:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label7 with label9;
    }
    public okio.Timeout readTimeout()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout readTimeout>;

        return r1;
    }
    void receiveData(okio.BufferedSource, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        okio.BufferedSource $r1;
        int $i0;
        long $l1;
        boolean $z0;
        java.lang.AssertionError $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r3;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 := @parameter0: okio.BufferedSource;

        $i0 := @parameter1: int;

        $z0 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $l1 = (long) $i0;

        virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void receive(okio.BufferedSource,long)>($r1, $l1);

        return;
    }
    void receiveFin()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        boolean $z0;
        java.lang.AssertionError $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r2;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r3;
        int $i0;
        java.lang.Throwable $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $z0 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        entermonitor r0;

     label2:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$102(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean)>($r2, 1);

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label3:
        if $z0 != 0 goto label7;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    void receiveHeaders(java.util.List, com.squareup.okhttp.internal.spdy.HeadersMode)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1, $r6;
        com.squareup.okhttp.internal.spdy.HeadersMode $r2;
        java.util.ArrayList r3;
        int $i0;
        boolean $z0, $z1;
        java.lang.AssertionError $r4;
        com.squareup.okhttp.internal.spdy.ErrorCode r5;
        java.lang.Throwable $r7;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r8;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.squareup.okhttp.internal.spdy.HeadersMode;

        $z0 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label01:
        r5 = null;

        $z0 = 1;

        entermonitor r0;

     label02:
        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r6 != null goto label08;

        $z1 = virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersAbsent()>();

        if $z1 == 0 goto label05;

        r5 = <com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode PROTOCOL_ERROR>;

     label03:
        exitmonitor r0;

     label04:
        if r5 == null goto label11;

        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: void closeLater(com.squareup.okhttp.internal.spdy.ErrorCode)>(r5);

        return;

     label05:
        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        goto label03;

     label06:
        $r7 := @caughtexception;

        exitmonitor r0;

     label07:
        throw $r7;

     label08:
        $z1 = virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersPresent()>();

        if $z1 == 0 goto label09;

        r5 = <com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode STREAM_IN_USE>;

        goto label03;

     label09:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r3;

     label10:
        goto label03;

     label11:
        if $z0 != 0 goto label12;

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r8.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label12:
        return;

        catch java.lang.Throwable from label02 to label04 with label06;
        catch java.lang.Throwable from label05 to label07 with label06;
        catch java.lang.Throwable from label08 to label10 with label06;
    }
    void receiveRstStream(com.squareup.okhttp.internal.spdy.ErrorCode)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.ErrorCode;

        entermonitor r0;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r2 != null goto label2;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode errorCode> = $r1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void reply(java.util.List, boolean) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1, $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r2;
        java.lang.NullPointerException $r3;
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r6;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r7;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r8;
        int $i0;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $z1 = <com.squareup.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $z1 = 0;

        entermonitor r0;

        if r1 != null goto label5;

     label2:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("responseHeaders == null");

        throw $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

     label5:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r5 == null goto label6;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply already sent");

        throw $r6;

     label6:
        r0.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

        if $z0 != 0 goto label7;

        $r7 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$202(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean)>($r7, 1);

        $z1 = 1;

     label7:
        exitmonitor r0;

     label8:
        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r8.<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeSynReply(int,boolean,java.util.List)>($i0, $z1, r1);

        if $z1 == 0 goto label9;

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection connection>;

        virtualinvoke $r8.<com.squareup.okhttp.internal.spdy.SpdyConnection: void flush()>();

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label3;
        catch java.lang.Throwable from label5 to label8 with label3;
    }
    public okio.Timeout writeTimeout()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream;

        r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout writeTimeout>;

        return r1;
    }
