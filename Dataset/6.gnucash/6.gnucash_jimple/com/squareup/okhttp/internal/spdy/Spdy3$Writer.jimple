com.squareup.okhttp.internal.spdy.Spdy3$Writer extends java.lang.Object implements com.squareup.okhttp.internal.spdy.FrameWriter
private final boolean client
private boolean closed
private final okio.Buffer headerBlockBuffer
private final okio.BufferedSink headerBlockOut
private final okio.BufferedSink sink
    void <init>(okio.BufferedSink, boolean)
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.util.zip.Deflater r2;
        okio.Buffer $r3;
        byte[] $r4;
        okio.DeflaterSink $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $r1 := @parameter0: okio.BufferedSink;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink> = $r1;

        r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean client> = $z0;

        r2 = new java.util.zip.Deflater;

        specialinvoke r2.<java.util.zip.Deflater: void <init>()>();

        $r4 = <com.squareup.okhttp.internal.spdy.Spdy3: byte[] DICTIONARY>;

        virtualinvoke r2.<java.util.zip.Deflater: void setDictionary(byte[])>($r4);

        $r3 = new okio.Buffer;

        specialinvoke $r3.<okio.Buffer: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer> = $r3;

        $r5 = new okio.DeflaterSink;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        specialinvoke $r5.<okio.DeflaterSink: void <init>(okio.Sink,java.util.zip.Deflater)>($r3, r2);

        $r1 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r5);

        r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut> = $r1;

        return;
    }
    private void writeNameValueBlockToBuffer(java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        java.util.List r1;
        okio.ByteString r2;
        okio.Buffer $r3;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r4;
        okio.BufferedSink $r5;
        int $i2, $i3, $i4;
        java.lang.Object $r6;
        com.squareup.okhttp.internal.spdy.Header $r7;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        $l0 = virtualinvoke $r3.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i2);

        $i2 = 0;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        if $i2 >= $i3 goto label3;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (com.squareup.okhttp.internal.spdy.Header) $r6;

        r2 = $r7.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        $i4 = virtualinvoke r2.<okio.ByteString: int size()>();

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i4);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink write(okio.ByteString)>(r2);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (com.squareup.okhttp.internal.spdy.Header) $r6;

        r2 = $r7.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        $i4 = virtualinvoke r2.<okio.ByteString: int size()>();

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i4);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink write(okio.ByteString)>(r2);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r5.<okio.BufferedSink: void flush()>();

        return;
    }
    public void ackSettings(com.squareup.okhttp.internal.spdy.Settings)
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        com.squareup.okhttp.internal.spdy.Settings $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.Settings;

        return;
    }
    public void close() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        okio.BufferedSink $r1, $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        entermonitor r0;

     label1:
        r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed> = 1;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink headerBlockOut>;

        staticinvoke <com.squareup.okhttp.internal.Util: void closeAll(java.io.Closeable,java.io.Closeable)>($r2, $r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void connectionPreface()
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        entermonitor r0;

        exitmonitor r0;

        return;
    }
    public void data(boolean, int, okio.Buffer, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0;
        int $i0, $i1;
        okio.Buffer $r1;
        java.lang.Throwable $r2;
        byte b2;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: okio.Buffer;

        $i1 := @parameter3: int;

        entermonitor r0;

        if $z0 == 0 goto label3;

        b2 = 1;

     label1:
        virtualinvoke r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void sendDataFrame(int,int,okio.Buffer,int)>($i0, b2, $r1, $i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        b2 = 0;

        goto label1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public void flush() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0;
        java.io.IOException $r1;
        java.lang.Throwable $r2;
        okio.BufferedSink $r3;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r3.<okio.BufferedSink: void flush()>();

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void goAway(int, com.squareup.okhttp.internal.spdy.ErrorCode, byte[]) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0, $i1;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1;
        byte[] $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.Throwable $r4;
        java.lang.IllegalArgumentException $r5;
        okio.BufferedSink $r6;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.squareup.okhttp.internal.spdy.ErrorCode;

        $r2 := @parameter2: byte[];

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        $i1 = $r1.<com.squareup.okhttp.internal.spdy.ErrorCode: int spdyGoAwayCode>;

        if $i1 != -1 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("errorCode.spdyGoAwayCode == -1");

        throw $r5;

     label4:
        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287033);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(8);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = $r1.<com.squareup.okhttp.internal.spdy.ErrorCode: int spdyGoAwayCode>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: void flush()>();

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    public void headers(int, java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0, i1;
        java.util.List r1;
        long $l2;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        okio.Buffer $r4;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        specialinvoke r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        $l2 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $l2 = $l2 + 4L;

        i1 = (int) $l2;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287032);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        i1 = 16777215 & i1;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i1);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i0;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        interfaceinvoke $r5.<okio.BufferedSink: long writeAll(okio.Source)>($r4);

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public int maxDataLength()
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        return 16383;
    }
    public void ping(boolean, int, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0, $z1, z2, $z3;
        int $i0, $i1;
        java.io.IOException $r1;
        java.lang.Throwable $r2;
        java.lang.IllegalArgumentException $r3;
        okio.BufferedSink $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        z2 = 1;

        entermonitor r0;

     label1:
        $z1 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z1 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $z1 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean client>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label6;

        $z3 = 1;

     label4:
        if $z1 == $z3 goto label7;

     label5:
        if $z0 == z2 goto label8;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("payload != reply");

        throw $r3;

     label6:
        $z3 = 0;

        goto label4;

     label7:
        z2 = 0;

        goto label5;

     label8:
        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287034);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(4);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: void flush()>();

     label9:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label9 with label2;
    }
    public void pushPromise(int, int, java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0, $i1;
        java.util.List r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        return;
    }
    public void rstStream(int, com.squareup.okhttp.internal.spdy.ErrorCode) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0, $i1;
        com.squareup.okhttp.internal.spdy.ErrorCode $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalArgumentException $r4;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.squareup.okhttp.internal.spdy.ErrorCode;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $i1 = $r1.<com.squareup.okhttp.internal.spdy.ErrorCode: int spdyRstCode>;

        if $i1 != -1 goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label4:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287037);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(8);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i0;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = $r1.<com.squareup.okhttp.internal.spdy.ErrorCode: int spdyRstCode>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: void flush()>();

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    void sendDataFrame(int, int, okio.Buffer, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0, $i1, $i2;
        okio.Buffer $r1;
        boolean $z0;
        java.io.IOException $r2;
        long $l3;
        byte $b4;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        okio.BufferedSink $r6;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: okio.Buffer;

        $i2 := @parameter3: int;

        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $l3 = (long) $i2;

        $b4 = $l3 cmp 16777215L;

        if $b4 <= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FRAME_TOO_LARGE max size is 16Mib: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i0;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = $i1 & 255;

        $i0 = $i0 << 24;

        $i1 = 16777215 & $i2;

        $i0 = $i0 | $i1;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        if $i2 <= 0 goto label3;

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $l3 = (long) $i2;

        interfaceinvoke $r6.<okio.BufferedSink: void write(okio.Buffer,long)>($r1, $l3);

     label3:
        return;
    }
    public void settings(com.squareup.okhttp.internal.spdy.Settings) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        com.squareup.okhttp.internal.spdy.Settings $r1;
        int i0, $i1, $i2;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        okio.BufferedSink $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.Settings;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $i1 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: int size()>();

        i0 = $i1 * 8;

        i0 = i0 + 4;

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287036);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        i0 = i0 & 16777215;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i0);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i1);

        $i1 = 0;

     label4:
        if $i1 > 10 goto label7;

        $z0 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: boolean isSet(int)>($i1);

        if $z0 != 0 goto label6;

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        i0 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: int flags(int)>($i1);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        i0 = i0 & 255;

        $i2 = i0 << 24;

        i0 = $i1 & 16777215;

        i0 = $i2 | i0;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i0);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        i0 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.Settings: int get(int)>($i1);

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i0);

        goto label5;

     label7:
        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: void flush()>();

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label8 with label2;
    }
    public void synReply(boolean, int, java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0, $z1;
        int $i0, i1, $i4;
        java.util.List r1;
        long $l2;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        byte b3;
        okio.Buffer $r4;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        entermonitor r0;

     label1:
        $z1 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z1 == 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        specialinvoke r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        if $z0 == 0 goto label6;

        b3 = 1;

     label4:
        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        $l2 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $l2 = $l2 + 4L;

        i1 = (int) $l2;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287038);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i4 = b3 & 255;

        $i4 = $i4 << 24;

        i1 = 16777215 & i1;

        i1 = $i4 | i1;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i1);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i0;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        interfaceinvoke $r5.<okio.BufferedSink: long writeAll(okio.Source)>($r4);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: void flush()>();

     label5:
        exitmonitor r0;

        return;

     label6:
        b3 = 0;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    public void synStream(boolean, boolean, int, int, java.util.List) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, i2, i3;
        java.util.List r1;
        long $l4;
        java.io.IOException $r2;
        java.lang.Throwable $r3;
        okio.Buffer $r4;
        byte $b5, $b6;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r1 := @parameter4: java.util.List;

        entermonitor r0;

     label1:
        $z2 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z2 == 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        specialinvoke r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        $l4 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $l4 = 10L + $l4;

        i3 = (int) $l4;

        if $z0 == 0 goto label7;

        $b5 = 1;

     label4:
        if $z1 == 0 goto label8;

        $b6 = 2;

     label5:
        i2 = $b5 | $b6;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287039);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        i2 = i2 & 255;

        i2 = i2 << 24;

        i3 = 16777215 & i3;

        i3 = i2 | i3;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(i3);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i0;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = 2147483647 & $i1;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeShort(int)>(0);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $r4 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.Buffer headerBlockBuffer>;

        interfaceinvoke $r5.<okio.BufferedSink: long writeAll(okio.Source)>($r4);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: void flush()>();

     label6:
        exitmonitor r0;

        return;

     label7:
        $b5 = 0;

        goto label4;

     label8:
        $b6 = 0;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label6 with label2;
    }
    public void windowUpdate(int, long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.Spdy3$Writer r0;
        int $i0;
        long $l1;
        boolean $z0;
        java.io.IOException $r1;
        java.lang.Throwable $r2;
        byte $b2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        okio.BufferedSink $r6;

        r0 := @this: com.squareup.okhttp.internal.spdy.Spdy3$Writer;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label3;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label4;

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("windowSizeIncrement must be between 1 and 0x7fffffff: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label5:
        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(-2147287031);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>(8);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        $i0 = (int) $l1;

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r6 = r0.<com.squareup.okhttp.internal.spdy.Spdy3$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: void flush()>();

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label4 to label6 with label2;
    }
