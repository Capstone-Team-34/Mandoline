com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource extends java.lang.Object implements okio.Source
static final boolean $assertionsDisabled
private boolean closed
private boolean finished
private final long maxByteCount
private final okio.Buffer readBuffer
private final okio.Buffer receiveBuffer
final com.squareup.okhttp.internal.spdy.SpdyStream this$0
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/squareup/okhttp/internal/spdy/SpdyStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    private void <init>(com.squareup.okhttp.internal.spdy.SpdyStream, long)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        com.squareup.okhttp.internal.spdy.SpdyStream $r1;
        long $l0;
        okio.Buffer $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        $l0 := @parameter1: long;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer receiveBuffer> = $r2;

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer> = $r2;

        r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: long maxByteCount> = $l0;

        return;
    }
    void <init>(com.squareup.okhttp.internal.spdy.SpdyStream, long, com.squareup.okhttp.internal.spdy.SpdyStream$1)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        com.squareup.okhttp.internal.spdy.SpdyStream $r1;
        long $l0;
        com.squareup.okhttp.internal.spdy.SpdyStream$1 $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream;

        $l0 := @parameter1: long;

        $r2 := @parameter2: com.squareup.okhttp.internal.spdy.SpdyStream$1;

        specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream,long)>($r1, $l0);

        return;
    }
    static boolean access$100(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r0;
        boolean z0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        z0 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean finished>;

        return z0;
    }
    static boolean access$102(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource, boolean)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r0;
        boolean $z0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $z0 := @parameter1: boolean;

        $r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean finished> = $z0;

        return $z0;
    }
    static boolean access$300(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r0;
        boolean z0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        z0 = $r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean closed>;

        return z0;
    }
    private void checkNotClosed() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        boolean $z0;
        java.io.IOException $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream $r2;
        com.squareup.okhttp.internal.spdy.ErrorCode $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $z0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r1;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r3 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode access$800(com.squareup.okhttp.internal.spdy.SpdyStream)>($r2);

        if $r3 == null goto label2;

        $r1 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r3 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode access$800(com.squareup.okhttp.internal.spdy.SpdyStream)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }
    private void waitUntilReadable() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        com.squareup.okhttp.internal.spdy.SpdyStream $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout $r2;
        okio.Buffer $r3;
        long $l0;
        byte $b1;
        boolean $z0;
        com.squareup.okhttp.internal.spdy.ErrorCode $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r2 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

        virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void enter()>();

     label01:
        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $l0 = virtualinvoke $r3.<okio.Buffer: long size()>();

     label02:
        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label12;

     label03:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean finished>;

     label04:
        if $z0 != 0 goto label12;

     label05:
        $z0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean closed>;

     label06:
        if $z0 != 0 goto label12;

     label07:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r4 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode access$800(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

     label08:
        if $r4 != null goto label12;

     label09:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: void access$900(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

     label10:
        goto label01;

     label11:
        $r5 := @caughtexception;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r2 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

        virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void exitAndThrowIfTimedOut()>();

        throw $r5;

     label12:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r2 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

        virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void exitAndThrowIfTimedOut()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    public void close() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        com.squareup.okhttp.internal.spdy.SpdyStream $r1, $r3;
        okio.Buffer $r2;
        java.lang.Throwable $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor $r1;

     label1:
        r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean closed> = 1;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        virtualinvoke $r2.<okio.Buffer: void clear()>();

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        $r1 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: void access$1000(com.squareup.okhttp.internal.spdy.SpdyStream)>($r1);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public long read(okio.Buffer, long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        okio.Buffer $r1, $r6, $r7;
        long $l0, $l2, $l4;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.squareup.okhttp.internal.spdy.SpdyStream $r5, $r8;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r9, $r11, $r12;
        com.squareup.okhttp.internal.spdy.Settings $r10;
        int $i3;
        java.lang.Throwable $r13, $r14;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label01:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor $r5;

     label02:
        specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void waitUntilReadable()>();

        specialinvoke r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void checkNotClosed()>();

        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $l2 = virtualinvoke $r6.<okio.Buffer: long size()>();

        $b1 = $l2 cmp 0L;

        if $b1 != 0 goto label04;

        exitmonitor $r5;

     label03:
        return -1L;

     label04:
        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $r7 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $l2 = virtualinvoke $r7.<okio.Buffer: long size()>();

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l2);

        $l0 = virtualinvoke $r6.<okio.Buffer: long read(okio.Buffer,long)>($r1, $l0);

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $l2 = $r8.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead>;

        $l2 = $l2 + $l0;

        $r8.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead> = $l2;

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $l2 = $r8.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead>;

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r8);

        $r10 = $r9.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Settings okHttpSettings>;

        $i3 = virtualinvoke $r10.<com.squareup.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $i3 = $i3 / 2;

        $l4 = (long) $i3;

        $b1 = $l2 cmp $l4;

        if $b1 < 0 goto label05;

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r8);

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $i3 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: int access$600(com.squareup.okhttp.internal.spdy.SpdyStream)>($r8);

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $l2 = $r8.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead>;

        virtualinvoke $r9.<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeWindowUpdateLater(int,long)>($i3, $l2);

        $r8 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r8.<com.squareup.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead> = 0L;

     label05:
        exitmonitor $r5;

     label06:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        entermonitor $r9;

     label07:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $l2 = $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: long unacknowledgedBytesRead>;

        $l2 = $l2 + $l0;

        $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: long unacknowledgedBytesRead> = $l2;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $l2 = $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: long unacknowledgedBytesRead>;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $r10 = $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Settings okHttpSettings>;

        $i3 = virtualinvoke $r10.<com.squareup.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $i3 = $i3 / 2;

        $l4 = (long) $i3;

        $b1 = $l2 cmp $l4;

        if $b1 < 0 goto label08;

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r12 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $l2 = $r12.<com.squareup.okhttp.internal.spdy.SpdyConnection: long unacknowledgedBytesRead>;

        virtualinvoke $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeWindowUpdateLater(int,long)>(0, $l2);

        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>($r5);

        $r11.<com.squareup.okhttp.internal.spdy.SpdyConnection: long unacknowledgedBytesRead> = 0L;

     label08:
        exitmonitor $r9;

     label09:
        return $l0;

     label10:
        $r13 := @caughtexception;

        exitmonitor $r9;

     label11:
        throw $r13;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor $r5;

     label14:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label06 with label12;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
    void receive(okio.BufferedSource, long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        okio.BufferedSource $r1;
        boolean z0, z1;
        okio.Buffer $r2, $r5;
        long $l0, $l1, $l3;
        com.squareup.okhttp.internal.spdy.SpdyStream $r3, $r6;
        java.lang.AssertionError $r4;
        byte $b2;
        com.squareup.okhttp.internal.spdy.ErrorCode $r7;
        java.lang.Throwable $r8, $r10;
        java.io.EOFException $r9;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r1 := @parameter0: okio.BufferedSource;

        $l0 := @parameter1: long;

        z0 = <com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean $assertionsDisabled>;

        if z0 != 0 goto label05;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r3);

        if z0 == 0 goto label05;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label01:
        $l0 = $l0 - $l1;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor $r3;

     label02:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $l1 = virtualinvoke $r2.<okio.Buffer: long size()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label15;

        z0 = 1;

     label03:
        $r5 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer receiveBuffer>;

        virtualinvoke $r5.<okio.Buffer: long writeAll(okio.Source)>($r2);

        if z0 == 0 goto label04;

        $r6 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

     label04:
        exitmonitor $r3;

     label05:
        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label19;

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor $r3;

     label06:
        z0 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean finished>;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer readBuffer>;

        $l1 = virtualinvoke $r2.<okio.Buffer: long size()>();

        $l1 = $l1 + $l0;

        $l3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: long maxByteCount>;

        $b2 = $l1 cmp $l3;

        if $b2 <= 0 goto label09;

        z1 = 1;

     label07:
        exitmonitor $r3;

     label08:
        if z1 == 0 goto label13;

        interfaceinvoke $r1.<okio.BufferedSource: void skip(long)>($l0);

        $r3 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r7 = <com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode FLOW_CONTROL_ERROR>;

        virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream: void closeLater(com.squareup.okhttp.internal.spdy.ErrorCode)>($r7);

        return;

     label09:
        z1 = 0;

        goto label07;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor $r3;

     label12:
        throw $r8;

     label13:
        if z0 == 0 goto label14;

        interfaceinvoke $r1.<okio.BufferedSource: void skip(long)>($l0);

        return;

     label14:
        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: okio.Buffer receiveBuffer>;

        $l1 = interfaceinvoke $r1.<okio.BufferedSource: long read(okio.Buffer,long)>($r2, $l0);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label01;

        $r9 = new java.io.EOFException;

        specialinvoke $r9.<java.io.EOFException: void <init>()>();

        throw $r9;

     label15:
        z0 = 0;

        goto label03;

     label16:
        $r10 := @caughtexception;

     label17:
        exitmonitor $r3;

     label18:
        throw $r10;

     label19:
        return;

        catch java.lang.Throwable from label02 to label05 with label16;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label17 to label18 with label16;
    }
    public okio.Timeout timeout()
    {
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource r0;
        com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okhttp.internal.spdy.SpdyStream this$0>;

        $r1 = staticinvoke <com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)>($r2);

        return $r1;
    }
