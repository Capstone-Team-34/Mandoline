com.squareup.okhttp.internal.spdy.NameValueBlockReader extends java.lang.Object
private int compressedLimit
private final okio.InflaterSource inflaterSource
private final okio.BufferedSource source
    public void <init>(okio.BufferedSource)
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader r0;
        okio.BufferedSource $r1;
        com.squareup.okhttp.internal.spdy.NameValueBlockReader$2 r2;
        com.squareup.okhttp.internal.spdy.NameValueBlockReader$1 r3;
        okio.InflaterSource $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $r1 := @parameter0: okio.BufferedSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = new com.squareup.okhttp.internal.spdy.NameValueBlockReader$1;

        specialinvoke r3.<com.squareup.okhttp.internal.spdy.NameValueBlockReader$1: void <init>(com.squareup.okhttp.internal.spdy.NameValueBlockReader,okio.Source)>(r0, $r1);

        r2 = new com.squareup.okhttp.internal.spdy.NameValueBlockReader$2;

        specialinvoke r2.<com.squareup.okhttp.internal.spdy.NameValueBlockReader$2: void <init>(com.squareup.okhttp.internal.spdy.NameValueBlockReader)>(r0);

        $r4 = new okio.InflaterSource;

        specialinvoke $r4.<okio.InflaterSource: void <init>(okio.Source,java.util.zip.Inflater)>(r3, r2);

        r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.InflaterSource inflaterSource> = $r4;

        $r4 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.InflaterSource inflaterSource>;

        $r1 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>($r4);

        r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.BufferedSource source> = $r1;

        return;
    }
    static int access$000(com.squareup.okhttp.internal.spdy.NameValueBlockReader)
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        i0 = $r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit>;

        return i0;
    }
    static int access$002(com.squareup.okhttp.internal.spdy.NameValueBlockReader, int)
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader $r0;
        int $i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $i0 := @parameter1: int;

        $r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit> = $i0;

        return $i0;
    }
    private void doneReading() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader r0;
        int $i0;
        okio.InflaterSource $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $i0 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.InflaterSource inflaterSource>;

        virtualinvoke $r1.<okio.InflaterSource: boolean refill()>();

        $i0 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit>;

        if $i0 == 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compressedLimit > 0: ");

        $i0 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        return;
    }
    private okio.ByteString readByteString() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader r0;
        long $l0;
        okio.BufferedSource $r1;
        int $i1;
        okio.ByteString $r2;

        r0 := @this: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.BufferedSource source>;

        $i1 = interfaceinvoke $r1.<okio.BufferedSource: int readInt()>();

        $r1 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.BufferedSource source>;

        $l0 = (long) $i1;

        $r2 = interfaceinvoke $r1.<okio.BufferedSource: okio.ByteString readByteString(long)>($l0);

        return $r2;
    }
    public void close() throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader r0;
        okio.BufferedSource $r1;

        r0 := @this: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $r1 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.BufferedSource source>;

        interfaceinvoke $r1.<okio.BufferedSource: void close()>();

        return;
    }
    public java.util.List readNameValueBlock(int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.spdy.NameValueBlockReader r0;
        int $i0, $i1, $i2;
        java.util.ArrayList r1;
        okio.BufferedSource $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        okio.ByteString $r6, $r7;
        com.squareup.okhttp.internal.spdy.Header $r8;

        r0 := @this: com.squareup.okhttp.internal.spdy.NameValueBlockReader;

        $i0 := @parameter0: int;

        $i1 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit>;

        $i0 = $i1 + $i0;

        r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int compressedLimit> = $i0;

        $r2 = r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.BufferedSource source>;

        $i0 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        if $i0 >= 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfPairs < 0: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        if $i0 <= 1024 goto label2;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfPairs > 1024: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r6 = specialinvoke r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.ByteString readByteString()>();

        $r6 = virtualinvoke $r6.<okio.ByteString: okio.ByteString toAsciiLowercase()>();

        $r7 = specialinvoke r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: okio.ByteString readByteString()>();

        $i2 = virtualinvoke $r6.<okio.ByteString: int size()>();

        if $i2 != 0 goto label4;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("name.size == 0");

        throw $r3;

     label4:
        $r8 = new com.squareup.okhttp.internal.spdy.Header;

        specialinvoke $r8.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,okio.ByteString)>($r6, $r7);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        $i1 = $i1 + 1;

        goto label3;

     label5:
        specialinvoke r0.<com.squareup.okhttp.internal.spdy.NameValueBlockReader: void doneReading()>();

        return r1;
    }
