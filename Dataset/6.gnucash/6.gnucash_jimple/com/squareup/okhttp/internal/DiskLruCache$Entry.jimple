com.squareup.okhttp.internal.DiskLruCache$Entry extends java.lang.Object
private final java.io.File[] cleanFiles
private com.squareup.okhttp.internal.DiskLruCache$Editor currentEditor
private final java.io.File[] dirtyFiles
private final java.lang.String key
private final long[] lengths
private boolean readable
private long sequenceNumber
final com.squareup.okhttp.internal.DiskLruCache this$0
    private void <init>(com.squareup.okhttp.internal.DiskLruCache, java.lang.String)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        com.squareup.okhttp.internal.DiskLruCache $r1;
        java.lang.String $r2;
        int $i0, i1, $i2;
        long[] $r3;
        java.io.File[] $r4;
        java.lang.StringBuilder $r5;
        java.io.File $r6, $r7;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.internal.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.lang.String key> = $r2;

        $i0 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r3 = newarray (long)[$i0];

        r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] lengths> = $r3;

        $i0 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r4 = newarray (java.io.File)[$i0];

        r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] cleanFiles> = $r4;

        $i0 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r4 = newarray (java.io.File)[$i0];

        r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] dirtyFiles> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        i1 = 0;

     label1:
        $i2 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        if i1 >= $i2 goto label2;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        $r6 = new java.io.File;

        $r7 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: java.io.File access$2800(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r2);

        $r4[i1] = $r6;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        $r6 = new java.io.File;

        $r7 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: java.io.File access$2800(com.squareup.okhttp.internal.DiskLruCache)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r2);

        $r4[i1] = $r6;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>($i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    void <init>(com.squareup.okhttp.internal.DiskLruCache, java.lang.String, com.squareup.okhttp.internal.DiskLruCache$1)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        com.squareup.okhttp.internal.DiskLruCache $r1;
        java.lang.String $r2;
        com.squareup.okhttp.internal.DiskLruCache$1 $r3;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter0: com.squareup.okhttp.internal.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.squareup.okhttp.internal.DiskLruCache$1;

        specialinvoke r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String)>($r1, $r2);

        return;
    }
    static void access$1000(com.squareup.okhttp.internal.DiskLruCache$Entry, java.lang.String[]) throws java.io.IOException
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String[];

        specialinvoke $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: void setLengths(java.lang.String[])>($r1);

        return;
    }
    static long[] access$1200(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        long[] r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        r1 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        return r1;
    }
    static java.io.File[] access$1300(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        java.io.File[] r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        r1 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        return r1;
    }
    static java.io.File[] access$1400(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        java.io.File[] r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        r1 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        return r1;
    }
    static java.lang.String access$1500(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        r1 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.lang.String key>;

        return r1;
    }
    static long access$1600(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        long l0;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        l0 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long sequenceNumber>;

        return l0;
    }
    static long access$1602(com.squareup.okhttp.internal.DiskLruCache$Entry, long)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        long $l0;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $l0 := @parameter1: long;

        $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long sequenceNumber> = $l0;

        return $l0;
    }
    static boolean access$800(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        boolean z0;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        z0 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: boolean readable>;

        return z0;
    }
    static boolean access$802(com.squareup.okhttp.internal.DiskLruCache$Entry, boolean)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        boolean $z0;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $z0 := @parameter1: boolean;

        $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: boolean readable> = $z0;

        return $z0;
    }
    static com.squareup.okhttp.internal.DiskLruCache$Editor access$900(com.squareup.okhttp.internal.DiskLruCache$Entry)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        com.squareup.okhttp.internal.DiskLruCache$Editor r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        r1 = $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache$Editor currentEditor>;

        return r1;
    }
    static com.squareup.okhttp.internal.DiskLruCache$Editor access$902(com.squareup.okhttp.internal.DiskLruCache$Entry, com.squareup.okhttp.internal.DiskLruCache$Editor)
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry $r0;
        com.squareup.okhttp.internal.DiskLruCache$Editor $r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter1: com.squareup.okhttp.internal.DiskLruCache$Editor;

        $r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache$Editor currentEditor> = $r1;

        return $r1;
    }
    private java.io.IOException invalidLengths(java.lang.String[]) throws java.io.IOException
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
    private void setLengths(java.lang.String[]) throws java.io.IOException
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.lang.NumberFormatException r2;
        int $i0, $i1;
        com.squareup.okhttp.internal.DiskLruCache $r3;
        java.io.IOException $r4;
        long[] $r5;
        java.lang.String $r6;
        long $l2;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        $r3 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $i1 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r3);

        if $i0 == $i1 goto label1;

        $r4 = specialinvoke r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $r5 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        $r6 = $r1[$i0];

     label3:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

     label4:
        $r5[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        r2 := @caughtexception;

        $r4 = specialinvoke r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
    com.squareup.okhttp.internal.DiskLruCache$Snapshot snapshot()
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        java.io.FileNotFoundException r1;
        java.lang.String $r2;
        long $l0;
        okio.Source[] r3;
        com.squareup.okhttp.internal.DiskLruCache $r4;
        boolean $z0;
        java.lang.AssertionError $r5;
        int $i1, $i2;
        long[] $r6;
        java.lang.Object $r7;
        com.squareup.okhttp.internal.io.FileSystem $r8;
        java.io.File[] $r9;
        java.io.File $r10;
        okio.Source $r11;
        com.squareup.okhttp.internal.DiskLruCache$Snapshot $r12;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r4);

        if $z0 != 0 goto label01;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label01:
        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $i1 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r4);

        r3 = newarray (okio.Source)[$i1];

        $r6 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (long[]) $r7;

        $i1 = 0;

     label02:
        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

     label03:
        $i2 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r4);

     label04:
        if $i1 >= $i2 goto label09;

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

     label05:
        $r8 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.io.FileSystem access$2400(com.squareup.okhttp.internal.DiskLruCache)>($r4);

     label06:
        $r9 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        $r10 = $r9[$i1];

     label07:
        $r11 = interfaceinvoke $r8.<com.squareup.okhttp.internal.io.FileSystem: okio.Source source(java.io.File)>($r10);

     label08:
        r3[$i1] = $r11;

        $i1 = $i1 + 1;

        goto label02;

     label09:
        $r12 = new com.squareup.okhttp.internal.DiskLruCache$Snapshot;

        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: java.lang.String key>;

        $l0 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long sequenceNumber>;

     label10:
        specialinvoke $r12.<com.squareup.okhttp.internal.DiskLruCache$Snapshot: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long,okio.Source[],long[],com.squareup.okhttp.internal.DiskLruCache$1)>($r4, $r2, $l0, r3, $r6, null);

     label11:
        return $r12;

     label12:
        r1 := @caughtexception;

        $i1 = 0;

     label13:
        $r4 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache this$0>;

        $i2 = staticinvoke <com.squareup.okhttp.internal.DiskLruCache: int access$2300(com.squareup.okhttp.internal.DiskLruCache)>($r4);

        if $i1 >= $i2 goto label14;

        $r11 = r3[$i1];

        if $r11 == null goto label14;

        $r11 = r3[$i1];

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r11);

        $i1 = $i1 + 1;

        goto label13;

     label14:
        return null;

        catch java.io.FileNotFoundException from label03 to label04 with label12;
        catch java.io.FileNotFoundException from label05 to label06 with label12;
        catch java.io.FileNotFoundException from label07 to label08 with label12;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
    }
    void writeLengths(okio.BufferedSink) throws java.io.IOException
    {
        com.squareup.okhttp.internal.DiskLruCache$Entry r0;
        okio.BufferedSink $r1, $r3;
        long l0;
        long[] $r2;
        int $i1, $i2;

        r0 := @this: com.squareup.okhttp.internal.DiskLruCache$Entry;

        $r1 := @parameter0: okio.BufferedSink;

        $r2 = r0.<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        $i1 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        l0 = $r2[$i2];

        $r3 = interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeByte(int)>(32);

        interfaceinvoke $r3.<okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)>(l0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
