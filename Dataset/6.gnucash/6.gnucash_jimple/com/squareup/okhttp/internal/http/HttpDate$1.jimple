com.squareup.okhttp.internal.http.HttpDate$1 extends java.lang.ThreadLocal
    void <init>()
    {
        com.squareup.okhttp.internal.http.HttpDate$1 r0;

        r0 := @this: com.squareup.okhttp.internal.http.HttpDate$1;

        specialinvoke r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }
    protected volatile java.lang.Object initialValue()
    {
        com.squareup.okhttp.internal.http.HttpDate$1 r0;
        java.text.DateFormat $r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpDate$1;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpDate$1: java.text.DateFormat initialValue()>();

        return $r1;
    }
    protected java.text.DateFormat initialValue()
    {
        com.squareup.okhttp.internal.http.HttpDate$1 r0;
        java.text.SimpleDateFormat r1;
        java.util.Locale $r2;
        java.util.TimeZone $r3;

        r0 := @this: com.squareup.okhttp.internal.http.HttpDate$1;

        r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss \'GMT\'", $r2);

        virtualinvoke r1.<java.text.DateFormat: void setLenient(boolean)>(0);

        $r3 = staticinvoke <com.squareup.okhttp.internal.http.HttpDate: java.util.TimeZone access$000()>();

        virtualinvoke r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        return r1;
    }
