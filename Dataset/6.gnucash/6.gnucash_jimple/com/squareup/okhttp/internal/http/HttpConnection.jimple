com.squareup.okhttp.internal.http.HttpConnection extends java.lang.Object
private static final int ON_IDLE_CLOSE
private static final int ON_IDLE_HOLD
private static final int ON_IDLE_POOL
private static final int STATE_CLOSED
private static final int STATE_IDLE
private static final int STATE_OPEN_REQUEST_BODY
private static final int STATE_OPEN_RESPONSE_BODY
private static final int STATE_READING_RESPONSE_BODY
private static final int STATE_READ_RESPONSE_HEADERS
private static final int STATE_WRITING_REQUEST_BODY
private final com.squareup.okhttp.Connection connection
private int onIdle
private final com.squareup.okhttp.ConnectionPool pool
private final okio.BufferedSink sink
private final java.net.Socket socket
private final okio.BufferedSource source
private int state
    public void <init>(com.squareup.okhttp.ConnectionPool, com.squareup.okhttp.Connection, java.net.Socket) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.ConnectionPool $r1;
        com.squareup.okhttp.Connection $r2;
        java.net.Socket $r3;
        okio.Source $r4;
        okio.BufferedSource $r5;
        okio.Sink $r6;
        okio.BufferedSink $r7;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: com.squareup.okhttp.ConnectionPool;

        $r2 := @parameter1: com.squareup.okhttp.Connection;

        $r3 := @parameter2: java.net.Socket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 0;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle> = 0;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.ConnectionPool pool> = $r1;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection> = $r2;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket> = $r3;

        $r4 = staticinvoke <okio.Okio: okio.Source source(java.net.Socket)>($r3);

        $r5 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>($r4);

        r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source> = $r5;

        $r6 = staticinvoke <okio.Okio: okio.Sink sink(java.net.Socket)>($r3);

        $r7 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r6);

        r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink> = $r7;

        return;
    }
    static okio.BufferedSink access$300(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        okio.BufferedSink r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        return r1;
    }
    static void access$400(com.squareup.okhttp.internal.http.HttpConnection, okio.ForwardingTimeout)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        okio.ForwardingTimeout $r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter1: okio.ForwardingTimeout;

        specialinvoke $r0.<com.squareup.okhttp.internal.http.HttpConnection: void detachTimeout(okio.ForwardingTimeout)>($r1);

        return;
    }
    static int access$500(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        i0 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        return i0;
    }
    static int access$502(com.squareup.okhttp.internal.http.HttpConnection, int)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        int $i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 := @parameter1: int;

        $r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = $i0;

        return $i0;
    }
    static okio.BufferedSource access$600(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        okio.BufferedSource r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        return r1;
    }
    static int access$700(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        i0 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle>;

        return i0;
    }
    static int access$702(com.squareup.okhttp.internal.http.HttpConnection, int)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        int $i0;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 := @parameter1: int;

        $r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle> = $i0;

        return $i0;
    }
    static com.squareup.okhttp.ConnectionPool access$800(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        com.squareup.okhttp.ConnectionPool r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.ConnectionPool pool>;

        return r1;
    }
    static com.squareup.okhttp.Connection access$900(com.squareup.okhttp.internal.http.HttpConnection)
    {
        com.squareup.okhttp.internal.http.HttpConnection $r0;
        com.squareup.okhttp.Connection r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        return r1;
    }
    private void detachTimeout(okio.ForwardingTimeout)
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        okio.ForwardingTimeout $r1;
        okio.Timeout $r2, $r3;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: okio.ForwardingTimeout;

        $r3 = virtualinvoke $r1.<okio.ForwardingTimeout: okio.Timeout delegate()>();

        $r2 = <okio.Timeout: okio.Timeout NONE>;

        virtualinvoke $r1.<okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)>($r2);

        virtualinvoke $r3.<okio.Timeout: okio.Timeout clearDeadline()>();

        virtualinvoke $r3.<okio.Timeout: okio.Timeout clearTimeout()>();

        return;
    }
    public long bufferSize()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        okio.BufferedSource $r1;
        okio.Buffer $r2;
        long $l0;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        $r2 = interfaceinvoke $r1.<okio.BufferedSource: okio.Buffer buffer()>();

        $l0 = virtualinvoke $r2.<okio.Buffer: long size()>();

        return $l0;
    }
    public void closeIfOwnedBy(java.lang.Object) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        java.lang.Object $r1;
        com.squareup.okhttp.internal.Internal $r2;
        com.squareup.okhttp.Connection $r3;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: java.lang.Object;

        $r2 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        virtualinvoke $r2.<com.squareup.okhttp.internal.Internal: void closeIfOwnedBy(com.squareup.okhttp.Connection,java.lang.Object)>($r3, $r1);

        return;
    }
    public void closeOnIdle() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        java.net.Socket $r1;
        int $i0;
        com.squareup.okhttp.Connection $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle> = 2;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 0 goto label1;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 6;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        $r1 = virtualinvoke $r2.<com.squareup.okhttp.Connection: java.net.Socket getSocket()>();

        virtualinvoke $r1.<java.net.Socket: void close()>();

     label1:
        return;
    }
    public void flush() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        okio.BufferedSink $r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: void flush()>();

        return;
    }
    public boolean isClosed()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        int $i0;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 6 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isReadable()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        java.io.IOException r1;
        java.net.SocketTimeoutException r2;
        java.net.Socket $r3;
        int $i0;
        okio.BufferedSource $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

     label01:
        $i0 = virtualinvoke $r3.<java.net.Socket: int getSoTimeout()>();

     label02:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>(1);

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        $z0 = interfaceinvoke $r4.<okio.BufferedSource: boolean exhausted()>();

     label03:
        if $z0 == 0 goto label06;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

     label04:
        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i0);

     label05:
        return 0;

     label06:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

     label07:
        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i0);

     label08:
        return 1;

     label09:
        $r5 := @caughtexception;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

     label10:
        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>($i0);

        throw $r5;

     label11:
        r2 := @caughtexception;

        return 1;

     label12:
        r1 := @caughtexception;

        return 0;

        catch java.net.SocketTimeoutException from label01 to label02 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.net.SocketTimeoutException from label04 to label05 with label11;
        catch java.net.SocketTimeoutException from label07 to label08 with label11;
        catch java.net.SocketTimeoutException from label10 to label11 with label11;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }
    public okio.Sink newChunkedSink()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 2;

        $r4 = new com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink;

        specialinvoke $r4.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection,com.squareup.okhttp.internal.http.HttpConnection$1)>(r0, null);

        return $r4;
    }
    public okio.Source newChunkedSource(com.squareup.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.internal.http.HttpEngine $r1;
        int $i0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource $r5;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 4 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 5;

        $r5 = new com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;

        specialinvoke $r5.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,com.squareup.okhttp.internal.http.HttpEngine)>(r0, $r1);

        return $r5;
    }
    public okio.Sink newFixedLengthSink(long)
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        long $l0;
        int $i1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $l0 := @parameter0: long;

        $i1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i1 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 2;

        $r4 = new com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink;

        specialinvoke $r4.<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection,long,com.squareup.okhttp.internal.http.HttpConnection$1)>(r0, $l0, null);

        return $r4;
    }
    public okio.Source newFixedLengthSource(long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        long $l0;
        int $i1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $l0 := @parameter0: long;

        $i1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i1 == 4 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 5;

        $r4 = new com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource;

        specialinvoke $r4.<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,long)>(r0, $l0);

        return $r4;
    }
    public okio.Source newUnknownLengthSource() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 4 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 5;

        $r4 = new com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        specialinvoke $r4.<com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,com.squareup.okhttp.internal.http.HttpConnection$1)>(r0, null);

        return $r4;
    }
    public void poolOnIdle()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.ConnectionPool $r1;
        com.squareup.okhttp.Connection $r2;
        int $i0;
        com.squareup.okhttp.internal.Internal $r3;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle> = 1;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 0 goto label1;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int onIdle> = 0;

        $r3 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.ConnectionPool pool>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        virtualinvoke $r3.<com.squareup.okhttp.internal.Internal: void recycle(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Connection)>($r1, $r2);

     label1:
        return;
    }
    public okio.BufferedSink rawSink()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        okio.BufferedSink r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        return r1;
    }
    public okio.BufferedSource rawSource()
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        okio.BufferedSource r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        return r1;
    }
    public void readHeaders(com.squareup.okhttp.Headers$Builder) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.Headers$Builder $r1;
        okio.BufferedSource $r2;
        java.lang.String $r3;
        int $i0;
        com.squareup.okhttp.internal.Internal $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: com.squareup.okhttp.Headers$Builder;

     label1:
        $r2 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        $r3 = interfaceinvoke $r2.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r4 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        virtualinvoke $r4.<com.squareup.okhttp.internal.Internal: void addLenient(com.squareup.okhttp.Headers$Builder,java.lang.String)>($r1, $r3);

        goto label1;

     label2:
        return;
    }
    public com.squareup.okhttp.Response$Builder readResponse() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        java.io.EOFException r1;
        java.io.IOException r2;
        com.squareup.okhttp.Headers$Builder r3;
        int $i0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r11;
        okio.BufferedSource $r7;
        com.squareup.okhttp.internal.http.StatusLine $r8;
        com.squareup.okhttp.Response$Builder $r9;
        com.squareup.okhttp.Protocol $r10;
        com.squareup.okhttp.Headers $r12;
        com.squareup.okhttp.Connection $r13;
        com.squareup.okhttp.internal.Internal $r14;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label01;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 3 goto label01;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label01:
        $r7 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

     label02:
        $r6 = interfaceinvoke $r7.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r8 = staticinvoke <com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine parse(java.lang.String)>($r6);

     label03:
        $r9 = new com.squareup.okhttp.Response$Builder;

     label04:
        specialinvoke $r9.<com.squareup.okhttp.Response$Builder: void <init>()>();

     label05:
        $r10 = $r8.<com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.Protocol protocol>;

     label06:
        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)>($r10);

     label07:
        $i0 = $r8.<com.squareup.okhttp.internal.http.StatusLine: int code>;

     label08:
        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder code(int)>($i0);

     label09:
        $r6 = $r8.<com.squareup.okhttp.internal.http.StatusLine: java.lang.String message>;

     label10:
        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder message(java.lang.String)>($r6);

     label11:
        r3 = new com.squareup.okhttp.Headers$Builder;

     label12:
        specialinvoke r3.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection: void readHeaders(com.squareup.okhttp.Headers$Builder)>(r3);

     label13:
        $r6 = <com.squareup.okhttp.internal.http.OkHeaders: java.lang.String SELECTED_PROTOCOL>;

        $r10 = $r8.<com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.Protocol protocol>;

     label14:
        $r11 = virtualinvoke $r10.<com.squareup.okhttp.Protocol: java.lang.String toString()>();

        virtualinvoke r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r6, $r11);

        $r12 = virtualinvoke r3.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>($r12);

     label15:
        $i0 = $r8.<com.squareup.okhttp.internal.http.StatusLine: int code>;

        if $i0 == 100 goto label01;

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 4;

        return $r9;

     label16:
        r1 := @caughtexception;

        r2 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected end of stream on ");

        $r13 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (recycle count=");

        $r14 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r13 = r0.<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection connection>;

        $i0 = virtualinvoke $r14.<com.squareup.okhttp.internal.Internal: int recycleCount(com.squareup.okhttp.Connection)>($r13);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        virtualinvoke r2.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        throw r2;

        catch java.io.EOFException from label02 to label03 with label16;
        catch java.io.EOFException from label04 to label05 with label16;
        catch java.io.EOFException from label06 to label07 with label16;
        catch java.io.EOFException from label08 to label09 with label16;
        catch java.io.EOFException from label10 to label11 with label16;
        catch java.io.EOFException from label12 to label13 with label16;
        catch java.io.EOFException from label14 to label15 with label16;
    }
    public void setTimeouts(int, int)
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        int $i0, $i1;
        okio.BufferedSource $r1;
        okio.Timeout $r2;
        long $l2;
        java.util.concurrent.TimeUnit $r3;
        okio.BufferedSink $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == 0 goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource source>;

        $r2 = interfaceinvoke $r1.<okio.BufferedSource: okio.Timeout timeout()>();

        $l2 = (long) $i0;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>($l2, $r3);

     label1:
        if $i1 == 0 goto label2;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        $r2 = interfaceinvoke $r4.<okio.BufferedSink: okio.Timeout timeout()>();

        $l2 = (long) $i1;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>($l2, $r3);

     label2:
        return;
    }
    public void writeRequest(com.squareup.okhttp.Headers, java.lang.String) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.Headers $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: com.squareup.okhttp.Headers;

        $r2 := @parameter1: java.lang.String;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        $r5 = interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        $i0 = 0;

        $i1 = virtualinvoke $r1.<com.squareup.okhttp.Headers: int size()>();

     label2:
        if $i0 >= $i1 goto label3;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Headers: java.lang.String name(int)>($i0);

        $r5 = interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        $r5 = interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>(": ");

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Headers: java.lang.String value(int)>($i0);

        $r5 = interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>($r2);

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        interfaceinvoke $r5.<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 1;

        return;
    }
    public void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection r0;
        com.squareup.okhttp.internal.http.RetryableSink $r1;
        int $i0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        okio.BufferedSink $r5;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.RetryableSink;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpConnection: int state>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpConnection: int state> = 3;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSink sink>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.http.RetryableSink: void writeToSocket(okio.Sink)>($r5);

        return;
    }
