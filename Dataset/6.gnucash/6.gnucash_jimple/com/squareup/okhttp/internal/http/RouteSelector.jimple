com.squareup.okhttp.internal.http.RouteSelector extends java.lang.Object
private final com.squareup.okhttp.Address address
private final com.squareup.okhttp.OkHttpClient client
private java.util.List inetSocketAddresses
private java.net.InetSocketAddress lastInetSocketAddress
private java.net.Proxy lastProxy
private final com.squareup.okhttp.internal.Network network
private int nextInetSocketAddressIndex
private int nextProxyIndex
private final java.util.List postponedRoutes
private java.util.List proxies
private final com.squareup.okhttp.internal.RouteDatabase routeDatabase
private final java.net.URI uri
    private void <init>(com.squareup.okhttp.Address, java.net.URI, com.squareup.okhttp.OkHttpClient)
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        com.squareup.okhttp.Address $r1;
        java.net.URI $r2;
        com.squareup.okhttp.OkHttpClient $r3;
        java.util.List $r4;
        java.util.ArrayList $r5;
        com.squareup.okhttp.internal.Internal $r6;
        com.squareup.okhttp.internal.RouteDatabase $r7;
        com.squareup.okhttp.internal.Network $r8;
        java.net.Proxy $r9;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r1 := @parameter0: com.squareup.okhttp.Address;

        $r2 := @parameter1: java.net.URI;

        $r3 := @parameter2: com.squareup.okhttp.OkHttpClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies> = $r4;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes> = $r5;

        r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address> = $r1;

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.URI uri> = $r2;

        r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.OkHttpClient client> = $r3;

        $r6 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.RouteDatabase routeDatabase(com.squareup.okhttp.OkHttpClient)>($r3);

        r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.RouteDatabase routeDatabase> = $r7;

        $r6 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r8 = virtualinvoke $r6.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Network network(com.squareup.okhttp.OkHttpClient)>($r3);

        r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.Network network> = $r8;

        $r9 = virtualinvoke $r1.<com.squareup.okhttp.Address: java.net.Proxy getProxy()>();

        specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: void resetNextProxy(java.net.URI,java.net.Proxy)>($r2, $r9);

        return;
    }
    public static com.squareup.okhttp.internal.http.RouteSelector get(com.squareup.okhttp.Address, com.squareup.okhttp.Request, com.squareup.okhttp.OkHttpClient) throws java.io.IOException
    {
        com.squareup.okhttp.Address $r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.OkHttpClient $r2;
        com.squareup.okhttp.internal.http.RouteSelector $r3;
        java.net.URI $r4;

        $r0 := @parameter0: com.squareup.okhttp.Address;

        $r1 := @parameter1: com.squareup.okhttp.Request;

        $r2 := @parameter2: com.squareup.okhttp.OkHttpClient;

        $r3 = new com.squareup.okhttp.internal.http.RouteSelector;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URI uri()>();

        specialinvoke $r3.<com.squareup.okhttp.internal.http.RouteSelector: void <init>(com.squareup.okhttp.Address,java.net.URI,com.squareup.okhttp.OkHttpClient)>($r0, $r4, $r2);

        return $r3;
    }
    static java.lang.String getHostString(java.net.InetSocketAddress)
    {
        java.net.InetSocketAddress $r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.net.InetSocketAddress;

        $r1 = virtualinvoke $r0.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        return $r2;

     label1:
        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r2;
    }
    private boolean hasNextInetSocketAddress()
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        int $i0, $i1;
        java.util.List $r1;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $i1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextInetSocketAddressIndex>;

        $r1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean hasNextPostponed()
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        boolean $z0;
        java.util.List $r1;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean hasNextProxy()
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        int $i0, $i1;
        java.util.List $r1;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $i1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextProxyIndex>;

        $r1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private java.net.InetSocketAddress nextInetSocketAddress() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        boolean $z0;
        java.net.SocketException $r1;
        java.lang.StringBuilder $r2;
        com.squareup.okhttp.Address $r3;
        java.lang.String $r4;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.net.InetSocketAddress $r7;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>();

        if $z0 != 0 goto label1;

        $r1 = new java.net.SocketException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No route to ");

        $r3 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.Address: java.lang.String getUriHost()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; exhausted inet socket addresses: ");

        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.net.SocketException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses>;

        $i0 = r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextInetSocketAddressIndex>;

        $i1 = $i0 + 1;

        r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextInetSocketAddressIndex> = $i1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (java.net.InetSocketAddress) $r6;

        return $r7;
    }
    private com.squareup.okhttp.Route nextPostponed()
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        java.lang.Object $r1;
        java.util.List $r2;
        com.squareup.okhttp.Route $r3;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r2 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        $r3 = (com.squareup.okhttp.Route) $r1;

        return $r3;
    }
    private java.net.Proxy nextProxy() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        boolean $z0;
        java.net.SocketException $r1;
        java.lang.StringBuilder $r2;
        com.squareup.okhttp.Address $r3;
        java.lang.String $r4;
        java.util.List $r5;
        int $i0, $i1;
        java.lang.Object $r6;
        java.net.Proxy r7;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>();

        if $z0 != 0 goto label1;

        $r1 = new java.net.SocketException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No route to ");

        $r3 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.Address: java.lang.String getUriHost()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; exhausted proxy configurations: ");

        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.net.SocketException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        $i0 = r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextProxyIndex>;

        $i1 = $i0 + 1;

        r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextProxyIndex> = $i1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (java.net.Proxy) $r6;

        specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>(r7);

        return r7;
    }
    private void resetNextInetSocketAddress(java.net.Proxy) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        java.net.Proxy $r1;
        java.net.InetAddress r2;
        int $i0, i1, $i2;
        java.util.List $r3;
        java.net.InetSocketAddress $r4;
        java.util.ArrayList $r5;
        java.net.Proxy$Type $r6, $r7;
        com.squareup.okhttp.Address $r8;
        java.lang.String $r9;
        java.net.URI $r10;
        java.net.SocketException $r11;
        java.lang.StringBuilder $r12;
        java.net.SocketAddress $r13;
        boolean $z0;
        java.lang.IllegalArgumentException $r14;
        java.lang.Class $r15;
        com.squareup.okhttp.internal.Network $r16;
        java.net.InetAddress[] $r17;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r1 := @parameter0: java.net.Proxy;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses> = $r5;

        $r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r7 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r6 == $r7 goto label1;

        $r6 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r7 = <java.net.Proxy$Type: java.net.Proxy$Type SOCKS>;

        if $r6 != $r7 goto label4;

     label1:
        $r8 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.Address: java.lang.String getUriHost()>();

        $r10 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.URI uri>;

        i1 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URI)>($r10);

     label2:
        if i1 < 1 goto label3;

        if i1 <= 65535 goto label6;

     label3:
        $r11 = new java.net.SocketException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No route to ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; port is out of range");

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.net.SocketException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label4:
        $r13 = virtualinvoke $r1.<java.net.Proxy: java.net.SocketAddress address()>();

        $z0 = $r13 instanceof java.net.InetSocketAddress;

        if $z0 != 0 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy.address() is not an InetSocketAddress: ");

        $r15 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r14;

     label5:
        $r4 = (java.net.InetSocketAddress) $r13;

        $r9 = staticinvoke <com.squareup.okhttp.internal.http.RouteSelector: java.lang.String getHostString(java.net.InetSocketAddress)>($r4);

        i1 = virtualinvoke $r4.<java.net.InetSocketAddress: int getPort()>();

        goto label2;

     label6:
        $r16 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.Network network>;

        $r17 = interfaceinvoke $r16.<com.squareup.okhttp.internal.Network: java.net.InetAddress[] resolveInetAddresses(java.lang.String)>($r9);

        $i0 = lengthof $r17;

        $i2 = 0;

     label7:
        if $i2 >= $i0 goto label8;

        r2 = $r17[$i2];

        $r3 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List inetSocketAddresses>;

        $r4 = new java.net.InetSocketAddress;

        specialinvoke $r4.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r2, i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        goto label7;

     label8:
        r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextInetSocketAddressIndex> = 0;

        return;
    }
    private void resetNextProxy(java.net.URI, java.net.Proxy)
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        java.net.URI $r1;
        java.net.Proxy $r2;
        java.util.List $r3, $r7;
        java.util.ArrayList $r4;
        com.squareup.okhttp.OkHttpClient $r5;
        java.net.ProxySelector $r6;
        java.util.Set $r8;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: java.net.Proxy;

        if $r2 == null goto label2;

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies> = $r3;

     label1:
        r0.<com.squareup.okhttp.internal.http.RouteSelector: int nextProxyIndex> = 0;

        return;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies> = $r4;

        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.OkHttpClient client>;

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector getProxySelector()>();

        $r3 = virtualinvoke $r6.<java.net.ProxySelector: java.util.List select(java.net.URI)>($r1);

        if $r3 == null goto label3;

        $r7 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r3);

     label3:
        $r3 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        $r2 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        $r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        interfaceinvoke $r3.<java.util.List: boolean removeAll(java.util.Collection)>($r8);

        $r3 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List proxies>;

        $r2 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;
    }
    public void connectFailed(com.squareup.okhttp.Route, java.io.IOException)
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        com.squareup.okhttp.Route $r1;
        java.io.IOException $r2;
        java.net.Proxy $r3;
        java.net.Proxy$Type $r4, $r5;
        com.squareup.okhttp.Address $r6;
        java.net.ProxySelector $r7;
        java.net.URI $r8;
        java.net.SocketAddress $r9;
        com.squareup.okhttp.internal.RouteDatabase $r10;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $r1 := @parameter0: com.squareup.okhttp.Route;

        $r2 := @parameter1: java.io.IOException;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Route: java.net.Proxy getProxy()>();

        $r4 = virtualinvoke $r3.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r5 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r4 == $r5 goto label1;

        $r6 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Address: java.net.ProxySelector getProxySelector()>();

        if $r7 == null goto label1;

        $r6 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Address: java.net.ProxySelector getProxySelector()>();

        $r8 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.URI uri>;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Route: java.net.Proxy getProxy()>();

        $r9 = virtualinvoke $r3.<java.net.Proxy: java.net.SocketAddress address()>();

        virtualinvoke $r7.<java.net.ProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>($r8, $r9, $r2);

     label1:
        $r10 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        virtualinvoke $r10.<com.squareup.okhttp.internal.RouteDatabase: void failed(com.squareup.okhttp.Route)>($r1);

        return;
    }
    public boolean hasNext()
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>();

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>();

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextPostponed()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public com.squareup.okhttp.Route next() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.RouteSelector r0;
        java.net.Proxy $r1;
        java.net.InetSocketAddress $r2;
        boolean $z0;
        java.util.NoSuchElementException $r3;
        com.squareup.okhttp.Route $r4;
        com.squareup.okhttp.Address $r5;
        com.squareup.okhttp.internal.RouteDatabase $r6;
        java.util.List $r7;

        r0 := @this: com.squareup.okhttp.internal.http.RouteSelector;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>();

        if $z0 != 0 goto label3;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>();

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextPostponed()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $r4 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Route nextPostponed()>();

        return $r4;

     label2:
        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.Proxy nextProxy()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy> = $r1;

     label3:
        $r2 = specialinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>();

        r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress lastInetSocketAddress> = $r2;

        $r4 = new com.squareup.okhttp.Route;

        $r5 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Address address>;

        $r1 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy>;

        $r2 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress lastInetSocketAddress>;

        specialinvoke $r4.<com.squareup.okhttp.Route: void <init>(com.squareup.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress)>($r5, $r1, $r2);

        $r6 = r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        $z0 = virtualinvoke $r6.<com.squareup.okhttp.internal.RouteDatabase: boolean shouldPostpone(com.squareup.okhttp.Route)>($r4);

        if $z0 == 0 goto label4;

        $r7 = r0.<com.squareup.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r4 = virtualinvoke r0.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Route next()>();

     label4:
        return $r4;
    }
