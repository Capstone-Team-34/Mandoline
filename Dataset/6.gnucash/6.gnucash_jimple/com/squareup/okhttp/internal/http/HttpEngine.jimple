com.squareup.okhttp.internal.http.HttpEngine extends java.lang.Object
private static final com.squareup.okhttp.ResponseBody EMPTY_BODY
public static final int MAX_FOLLOW_UPS
private com.squareup.okhttp.Address address
public final boolean bufferRequestBody
private okio.BufferedSink bufferedRequestBody
private com.squareup.okhttp.Response cacheResponse
private com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy
private final boolean callerWritesRequestBody
final com.squareup.okhttp.OkHttpClient client
private com.squareup.okhttp.Connection connection
private final boolean forWebSocket
private com.squareup.okhttp.Request networkRequest
private final com.squareup.okhttp.Response priorResponse
private okio.Sink requestBodyOut
private com.squareup.okhttp.Route route
private com.squareup.okhttp.internal.http.RouteSelector routeSelector
long sentRequestMillis
private com.squareup.okhttp.internal.http.CacheRequest storeRequest
private boolean transparentGzip
private com.squareup.okhttp.internal.http.Transport transport
private final com.squareup.okhttp.Request userRequest
private com.squareup.okhttp.Response userResponse
    static void <clinit>()
    {
        com.squareup.okhttp.internal.http.HttpEngine$1 $r0;

        $r0 = new com.squareup.okhttp.internal.http.HttpEngine$1;

        specialinvoke $r0.<com.squareup.okhttp.internal.http.HttpEngine$1: void <init>()>();

        <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.ResponseBody EMPTY_BODY> = $r0;

        return;
    }
    public void <init>(com.squareup.okhttp.OkHttpClient, com.squareup.okhttp.Request, boolean, boolean, boolean, com.squareup.okhttp.Connection, com.squareup.okhttp.internal.http.RouteSelector, com.squareup.okhttp.internal.http.RetryableSink, com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.OkHttpClient $r1;
        com.squareup.okhttp.Request $r2;
        boolean $z0, $z1, $z2;
        com.squareup.okhttp.Connection $r3;
        com.squareup.okhttp.internal.http.RouteSelector $r4;
        com.squareup.okhttp.internal.http.RetryableSink $r5;
        com.squareup.okhttp.Response $r6;
        com.squareup.okhttp.Route $r7;
        com.squareup.okhttp.internal.Internal $r8;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r2 := @parameter1: com.squareup.okhttp.Request;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: com.squareup.okhttp.Connection;

        $r4 := @parameter6: com.squareup.okhttp.internal.http.RouteSelector;

        $r5 := @parameter7: com.squareup.okhttp.internal.http.RetryableSink;

        $r6 := @parameter8: com.squareup.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: long sentRequestMillis> = -1L;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client> = $r1;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest> = $r2;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean bufferRequestBody> = $z0;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean callerWritesRequestBody> = $z1;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean forWebSocket> = $z2;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = $r3;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector> = $r4;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut> = $r5;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse> = $r6;

        if $r3 == null goto label1;

        $r8 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        virtualinvoke $r8.<com.squareup.okhttp.internal.Internal: void setOwner(com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.HttpEngine)>($r3, r0);

        $r7 = virtualinvoke $r3.<com.squareup.okhttp.Connection: com.squareup.okhttp.Route getRoute()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route route> = $r7;

        return;

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route route> = null;

        return;
    }
    static com.squareup.okhttp.Connection access$000(com.squareup.okhttp.internal.http.HttpEngine)
    {
        com.squareup.okhttp.internal.http.HttpEngine $r0;
        com.squareup.okhttp.Connection r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        return r1;
    }
    static com.squareup.okhttp.internal.http.Transport access$100(com.squareup.okhttp.internal.http.HttpEngine)
    {
        com.squareup.okhttp.internal.http.HttpEngine $r0;
        com.squareup.okhttp.internal.http.Transport r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = $r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        return r1;
    }
    static com.squareup.okhttp.Request access$202(com.squareup.okhttp.internal.http.HttpEngine, com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.internal.http.HttpEngine $r0;
        com.squareup.okhttp.Request $r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter1: com.squareup.okhttp.Request;

        $r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest> = $r1;

        return $r1;
    }
    static com.squareup.okhttp.Response access$300(com.squareup.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine $r0;
        com.squareup.okhttp.Response $r1;

        $r0 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = specialinvoke $r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response readNetworkResponse()>();

        return $r1;
    }
    private com.squareup.okhttp.Response cacheWritingResponse(com.squareup.okhttp.internal.http.CacheRequest, com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.CacheRequest $r1;
        com.squareup.okhttp.internal.http.HttpEngine$2 r2;
        com.squareup.okhttp.internal.http.RealResponseBody $r3;
        com.squareup.okhttp.Response r4;
        okio.Sink $r5;
        com.squareup.okhttp.ResponseBody $r6;
        okio.BufferedSource $r7;
        okio.BufferedSink $r8;
        com.squareup.okhttp.Response$Builder $r9;
        com.squareup.okhttp.Headers $r10;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.CacheRequest;

        r4 := @parameter1: com.squareup.okhttp.Response;

        if $r1 != null goto label1;

        return r4;

     label1:
        $r5 = interfaceinvoke $r1.<com.squareup.okhttp.internal.http.CacheRequest: okio.Sink body()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke r4.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.ResponseBody: okio.BufferedSource source()>();

        $r8 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r5);

        r2 = new com.squareup.okhttp.internal.http.HttpEngine$2;

        specialinvoke r2.<com.squareup.okhttp.internal.http.HttpEngine$2: void <init>(com.squareup.okhttp.internal.http.HttpEngine,okio.BufferedSource,com.squareup.okhttp.internal.http.CacheRequest,okio.BufferedSink)>(r0, $r7, $r1, $r8);

        $r9 = virtualinvoke r4.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r3 = new com.squareup.okhttp.internal.http.RealResponseBody;

        $r10 = virtualinvoke r4.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r7 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>(r2);

        specialinvoke $r3.<com.squareup.okhttp.internal.http.RealResponseBody: void <init>(com.squareup.okhttp.Headers,okio.BufferedSource)>($r10, $r7);

        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>($r3);

        r4 = virtualinvoke $r9.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

     label2:
        return r4;
    }
    private static com.squareup.okhttp.Headers combine(com.squareup.okhttp.Headers, com.squareup.okhttp.Headers) throws java.io.IOException
    {
        com.squareup.okhttp.Headers $r0, $r1;
        com.squareup.okhttp.Headers$Builder r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        $r0 := @parameter0: com.squareup.okhttp.Headers;

        $r1 := @parameter1: com.squareup.okhttp.Headers;

        r2 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke r2.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        i0 = 0;

        $i1 = virtualinvoke $r0.<com.squareup.okhttp.Headers: int size()>();

     label1:
        if i0 >= $i1 goto label5;

        $r3 = virtualinvoke $r0.<com.squareup.okhttp.Headers: java.lang.String name(int)>(i0);

        $r4 = virtualinvoke $r0.<com.squareup.okhttp.Headers: java.lang.String value(int)>(i0);

        $r5 = "Warning";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z0 == 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $z0 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: boolean isEndToEnd(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r1.<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>($r3);

        if $r5 != null goto label2;

     label4:
        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r3, $r4);

        goto label2;

     label5:
        i0 = 0;

        $i1 = virtualinvoke $r1.<com.squareup.okhttp.Headers: int size()>();

     label6:
        if i0 >= $i1 goto label9;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Headers: java.lang.String name(int)>(i0);

        $r4 = "Content-Length";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label8;

     label7:
        i0 = i0 + 1;

        goto label6;

     label8:
        $z0 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: boolean isEndToEnd(java.lang.String)>($r3);

        if $z0 == 0 goto label7;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Headers: java.lang.String value(int)>(i0);

        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r3, $r4);

        goto label7;

     label9:
        $r0 = virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        return $r0;
    }
    private void connect() throws com.squareup.okhttp.internal.http.RequestException, com.squareup.okhttp.internal.http.RouteException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.io.IOException r1;
        com.squareup.okhttp.OkHttpClient $r2;
        com.squareup.okhttp.Connection $r3;
        java.lang.IllegalStateException $r4;
        com.squareup.okhttp.internal.http.RouteSelector $r5;
        com.squareup.okhttp.Request $r6;
        com.squareup.okhttp.Address $r7;
        com.squareup.okhttp.Route $r8;
        com.squareup.okhttp.internal.http.RequestException $r9;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r5 != null goto label4;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r7 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Address createAddress(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>($r2, $r6);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Address address> = $r7;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Address address>;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

     label2:
        $r5 = staticinvoke <com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.internal.http.RouteSelector get(com.squareup.okhttp.Address,com.squareup.okhttp.Request,com.squareup.okhttp.OkHttpClient)>($r7, $r6, $r2);

     label3:
        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector> = $r5;

     label4:
        $r3 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection nextConnection()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = $r3;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r8 = virtualinvoke $r3.<com.squareup.okhttp.Connection: com.squareup.okhttp.Route getRoute()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route route> = $r8;

        return;

     label5:
        r1 := @caughtexception;

        $r9 = new com.squareup.okhttp.internal.http.RequestException;

        specialinvoke $r9.<com.squareup.okhttp.internal.http.RequestException: void <init>(java.io.IOException)>(r1);

        throw $r9;

        catch java.io.IOException from label2 to label3 with label5;
    }
    private void connectFailed(com.squareup.okhttp.internal.http.RouteSelector, java.io.IOException)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.RouteSelector $r1;
        java.io.IOException $r2;
        com.squareup.okhttp.Connection $r3;
        com.squareup.okhttp.internal.Internal $r4;
        int $i0;
        com.squareup.okhttp.Route $r5;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.RouteSelector;

        $r2 := @parameter1: java.io.IOException;

        $r4 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $i0 = virtualinvoke $r4.<com.squareup.okhttp.internal.Internal: int recycleCount(com.squareup.okhttp.Connection)>($r3);

        if $i0 <= 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r5 = virtualinvoke $r3.<com.squareup.okhttp.Connection: com.squareup.okhttp.Route getRoute()>();

        virtualinvoke $r1.<com.squareup.okhttp.internal.http.RouteSelector: void connectFailed(com.squareup.okhttp.Route,java.io.IOException)>($r5, $r2);

        return;
    }
    private static com.squareup.okhttp.Address createAddress(com.squareup.okhttp.OkHttpClient, com.squareup.okhttp.Request) throws com.squareup.okhttp.internal.http.RequestException
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Request $r1;
        java.net.URL $r2;
        java.lang.String $r3;
        int $i0;
        com.squareup.okhttp.internal.http.RequestException $r4;
        java.net.UnknownHostException $r5;
        javax.net.ssl.SSLSocketFactory r6;
        javax.net.ssl.HostnameVerifier r7;
        com.squareup.okhttp.CertificatePinner r8;
        boolean $z0;
        com.squareup.okhttp.Address $r9;
        javax.net.SocketFactory $r10;
        com.squareup.okhttp.Authenticator $r11;
        java.net.Proxy $r12;
        java.util.List $r13, $r14;
        java.net.ProxySelector $r15;

        $r0 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter1: com.squareup.okhttp.Request;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r4 = new com.squareup.okhttp.internal.http.RequestException;

        $r5 = new java.net.UnknownHostException;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r5.<java.net.UnknownHostException: void <init>(java.lang.String)>($r3);

        specialinvoke $r4.<com.squareup.okhttp.internal.http.RequestException: void <init>(java.io.IOException)>($r5);

        throw $r4;

     label2:
        r6 = null;

        r7 = null;

        r8 = null;

        $z0 = virtualinvoke $r1.<com.squareup.okhttp.Request: boolean isHttps()>();

        if $z0 == 0 goto label3;

        r6 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>();

        r7 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier getHostnameVerifier()>();

        r8 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner getCertificatePinner()>();

     label3:
        $r9 = new com.squareup.okhttp.Address;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r2);

        $r10 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory getSocketFactory()>();

        $r11 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator getAuthenticator()>();

        $r12 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

        $r13 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: java.util.List getProtocols()>();

        $r14 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: java.util.List getConnectionSpecs()>();

        $r15 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector getProxySelector()>();

        specialinvoke $r9.<com.squareup.okhttp.Address: void <init>(java.lang.String,int,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,com.squareup.okhttp.CertificatePinner,com.squareup.okhttp.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)>($r3, $i0, $r10, r6, r7, r8, $r11, $r12, $r13, $r14, $r15);

        return $r9;
    }
    private com.squareup.okhttp.Connection createNextConnection() throws com.squareup.okhttp.internal.http.RouteException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.io.IOException r1;
        com.squareup.okhttp.OkHttpClient $r2;
        com.squareup.okhttp.ConnectionPool $r3;
        com.squareup.okhttp.Address $r4;
        com.squareup.okhttp.Connection $r5;
        com.squareup.okhttp.Request $r6;
        java.lang.String $r7;
        boolean $z0;
        com.squareup.okhttp.internal.Internal $r8;
        java.net.Socket $r9;
        com.squareup.okhttp.internal.http.RouteSelector $r10;
        com.squareup.okhttp.Route $r11;
        com.squareup.okhttp.internal.http.RouteException $r12;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool getConnectionPool()>();

     label1:
        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Address address>;

        $r5 = virtualinvoke $r3.<com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.Connection get(com.squareup.okhttp.Address)>($r4);

        if $r5 == null goto label3;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z0 != 0 goto label9;

        $r8 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $z0 = virtualinvoke $r8.<com.squareup.okhttp.internal.Internal: boolean isReadable(com.squareup.okhttp.Connection)>($r5);

        if $z0 == 0 goto label2;

        return $r5;

     label2:
        $r9 = virtualinvoke $r5.<com.squareup.okhttp.Connection: java.net.Socket getSocket()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.net.Socket)>($r9);

        goto label1;

     label3:
        $r10 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

     label4:
        $r11 = virtualinvoke $r10.<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Route next()>();

     label5:
        $r5 = new com.squareup.okhttp.Connection;

     label6:
        specialinvoke $r5.<com.squareup.okhttp.Connection: void <init>(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Route)>($r3, $r11);

     label7:
        return $r5;

     label8:
        r1 := @caughtexception;

        $r12 = new com.squareup.okhttp.internal.http.RouteException;

        specialinvoke $r12.<com.squareup.okhttp.internal.http.RouteException: void <init>(java.io.IOException)>(r1);

        throw $r12;

     label9:
        return $r5;

        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    public static boolean hasBody(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.Request $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        int $i0;
        long $l1;
        byte $b2;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        $r1 = virtualinvoke $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>();

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<com.squareup.okhttp.Response: int code()>();

        if $i0 < 100 goto label2;

        if $i0 < 200 goto label3;

     label2:
        if $i0 == 204 goto label3;

        if $i0 == 304 goto label3;

        return 1;

     label3:
        $l1 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Response)>($r0);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label4;

        $r2 = "chunked";

        $r3 = virtualinvoke $r0.<com.squareup.okhttp.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }
    public static java.lang.String hostHeader(java.net.URL)
    {
        java.net.URL $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.net.URL;

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r0);

        $r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $i1 = staticinvoke <com.squareup.okhttp.internal.Util: int getDefaultPort(java.lang.String)>($r1);

        if $i0 == $i1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getHost()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = virtualinvoke $r0.<java.net.URL: int getPort()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getHost()>();

        return $r1;
    }
    private boolean isRecoverable(com.squareup.okhttp.internal.http.RouteException)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.RouteException $r1;
        com.squareup.okhttp.OkHttpClient $r2;
        boolean $z0;
        java.io.IOException $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.RouteException;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $z0 = virtualinvoke $r2.<com.squareup.okhttp.OkHttpClient: boolean getRetryOnConnectionFailure()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.RouteException: java.io.IOException getLastConnectException()>();

        $z0 = $r3 instanceof java.net.ProtocolException;

        if $z0 != 0 goto label3;

        $z0 = $r3 instanceof java.io.InterruptedIOException;

        if $z0 != 0 goto label3;

        $z0 = $r3 instanceof javax.net.ssl.SSLHandshakeException;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r3.<java.io.IOException: java.lang.Throwable getCause()>();

        $z0 = $r4 instanceof java.security.cert.CertificateException;

        if $z0 != 0 goto label3;

     label2:
        $z0 = $r3 instanceof javax.net.ssl.SSLPeerUnverifiedException;

        if $z0 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }
    private boolean isRecoverable(java.io.IOException)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.io.IOException $r1;
        boolean $z0;
        com.squareup.okhttp.OkHttpClient $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: java.io.IOException;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $z0 = virtualinvoke $r2.<com.squareup.okhttp.OkHttpClient: boolean getRetryOnConnectionFailure()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = $r1 instanceof java.net.ProtocolException;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof java.io.InterruptedIOException;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    private void maybeCache() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.Internal $r1;
        com.squareup.okhttp.OkHttpClient $r2;
        com.squareup.okhttp.internal.InternalCache $r3;
        com.squareup.okhttp.Response $r4;
        com.squareup.okhttp.Request $r5;
        boolean $z0;
        java.lang.String $r6;
        java.io.IOException $r7;
        com.squareup.okhttp.internal.http.CacheRequest $r8;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.InternalCache internalCache(com.squareup.okhttp.OkHttpClient)>($r2);

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.CacheStrategy: boolean isCacheable(com.squareup.okhttp.Response,com.squareup.okhttp.Request)>($r4, $r5);

        if $z0 != 0 goto label5;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)>($r6);

        if $z0 == 0 goto label6;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

     label2:
        interfaceinvoke $r3.<com.squareup.okhttp.internal.InternalCache: void remove(com.squareup.okhttp.Request)>($r5);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        return;

     label5:
        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r4 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r4);

        $r8 = interfaceinvoke $r3.<com.squareup.okhttp.internal.InternalCache: com.squareup.okhttp.internal.http.CacheRequest put(com.squareup.okhttp.Response)>($r4);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheRequest storeRequest> = $r8;

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
    private com.squareup.okhttp.Request networkRequest(com.squareup.okhttp.Request) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Request $r1, $r10;
        com.squareup.okhttp.Request$Builder $r2;
        java.lang.String $r3;
        java.net.URL $r4;
        com.squareup.okhttp.Connection $r5;
        com.squareup.okhttp.Protocol $r6, $r7;
        com.squareup.okhttp.OkHttpClient $r8;
        java.net.CookieHandler $r9;
        com.squareup.okhttp.Headers $r11;
        java.util.Map $r12;
        java.net.URI $r13;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String header(java.lang.String)>("Host");

        if $r3 != null goto label1;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r3 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: java.lang.String hostHeader(java.net.URL)>($r4);

        virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r3);

     label1:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r5 == null goto label2;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.Connection: com.squareup.okhttp.Protocol getProtocol()>();

        $r7 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_0>;

        if $r6 == $r7 goto label3;

     label2:
        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String header(java.lang.String)>("Connection");

        if $r3 != null goto label3;

        virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

     label3:
        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String header(java.lang.String)>("Accept-Encoding");

        if $r3 != null goto label4;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean transparentGzip> = 1;

        virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

     label4:
        $r8 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>();

        if $r9 == null goto label5;

        $r10 = virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        $r11 = virtualinvoke $r10.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers()>();

        $r12 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.squareup.okhttp.Headers,java.lang.String)>($r11, null);

        $r13 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URI uri()>();

        $r12 = virtualinvoke $r9.<java.net.CookieHandler: java.util.Map get(java.net.URI,java.util.Map)>($r13, $r12);

        staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: void addCookies(com.squareup.okhttp.Request$Builder,java.util.Map)>($r2, $r12);

     label5:
        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String header(java.lang.String)>("User-Agent");

        if $r3 != null goto label6;

        $r3 = staticinvoke <com.squareup.okhttp.internal.Version: java.lang.String userAgent()>();

        virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("User-Agent", $r3);

     label6:
        $r1 = virtualinvoke $r2.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        return $r1;
    }
    private com.squareup.okhttp.Connection nextConnection() throws com.squareup.okhttp.internal.http.RouteException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.Internal $r1;
        com.squareup.okhttp.OkHttpClient $r2;
        com.squareup.okhttp.Request $r3;
        com.squareup.okhttp.Connection $r4;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r4 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection createNextConnection()>();

        $r1 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.Internal: void connectAndSetOwner(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.HttpEngine,com.squareup.okhttp.Request)>($r2, $r4, r0, $r3);

        return $r4;
    }
    private com.squareup.okhttp.Response readNetworkResponse() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.Transport $r1;
        com.squareup.okhttp.Response$Builder $r2;
        com.squareup.okhttp.Request $r3;
        com.squareup.okhttp.Connection $r4;
        com.squareup.okhttp.Handshake $r5;
        java.lang.String $r6, $r7;
        long $l0;
        com.squareup.okhttp.Response $r8, r9;
        boolean $z0;
        com.squareup.okhttp.ResponseBody $r10;
        com.squareup.okhttp.internal.Internal $r11;
        com.squareup.okhttp.Protocol $r12;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        interfaceinvoke $r1.<com.squareup.okhttp.internal.http.Transport: void finishRequest()>();

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r2 = interfaceinvoke $r1.<com.squareup.okhttp.internal.http.Transport: com.squareup.okhttp.Response$Builder readResponseHeaders()>();

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r3);

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Connection: com.squareup.okhttp.Handshake getHandshake()>();

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder handshake(com.squareup.okhttp.Handshake)>($r5);

        $r6 = <com.squareup.okhttp.internal.http.OkHeaders: java.lang.String SENT_MILLIS>;

        $l0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r6, $r7);

        $r6 = <com.squareup.okhttp.internal.http.OkHeaders: java.lang.String RECEIVED_MILLIS>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r6, $r7);

        $r8 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        r9 = $r8;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean forWebSocket>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r8.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r10 = interfaceinvoke $r1.<com.squareup.okhttp.internal.http.Transport: com.squareup.okhttp.ResponseBody openResponseBody(com.squareup.okhttp.Response)>($r8);

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>($r10);

        r9 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

     label1:
        $r11 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r12 = virtualinvoke r9.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol()>();

        virtualinvoke $r11.<com.squareup.okhttp.internal.Internal: void setProtocol(com.squareup.okhttp.Connection,com.squareup.okhttp.Protocol)>($r4, $r12);

        return r9;
    }
    private static com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.ResponseBody $r1;
        com.squareup.okhttp.Response$Builder $r2;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r2 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>(null);

        $r0 = virtualinvoke $r2.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

     label1:
        return $r0;
    }
    private com.squareup.okhttp.Response unzip(com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        okio.GzipSource r1;
        com.squareup.okhttp.Response r2, $r4;
        boolean $z0;
        java.lang.String $r3, $r5;
        com.squareup.okhttp.ResponseBody $r6;
        okio.BufferedSource $r7;
        com.squareup.okhttp.Headers $r8;
        com.squareup.okhttp.Headers$Builder $r9;
        com.squareup.okhttp.Response$Builder $r10;
        com.squareup.okhttp.internal.http.RealResponseBody $r11;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        r2 := @parameter0: com.squareup.okhttp.Response;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean transparentGzip>;

        if $z0 == 0 goto label2;

        $r3 = "gzip";

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Response: java.lang.String header(java.lang.String)>("Content-Encoding");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 != 0 goto label1;

        return r2;

     label1:
        $r6 = virtualinvoke r2.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        if $r6 == null goto label2;

        r1 = new okio.GzipSource;

        $r6 = virtualinvoke r2.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.ResponseBody: okio.BufferedSource source()>();

        specialinvoke r1.<okio.GzipSource: void <init>(okio.Source)>($r7);

        $r8 = virtualinvoke r2.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>();

        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>("Content-Encoding");

        $r9 = virtualinvoke $r9.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>("Content-Length");

        $r8 = virtualinvoke $r9.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        $r10 = virtualinvoke r2.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r10 = virtualinvoke $r10.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>($r8);

        $r11 = new com.squareup.okhttp.internal.http.RealResponseBody;

        $r7 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>(r1);

        specialinvoke $r11.<com.squareup.okhttp.internal.http.RealResponseBody: void <init>(com.squareup.okhttp.Headers,okio.BufferedSource)>($r8, $r7);

        $r10 = virtualinvoke $r10.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>($r11);

        r2 = virtualinvoke $r10.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

     label2:
        return r2;
    }
    private static boolean validate(com.squareup.okhttp.Response, com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0, $r1;
        int $i0;
        com.squareup.okhttp.Headers $r2;
        java.util.Date $r3, $r4;
        long $l1, $l2;
        byte $b3;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        $r1 := @parameter1: com.squareup.okhttp.Response;

        $i0 = virtualinvoke $r1.<com.squareup.okhttp.Response: int code()>();

        if $i0 != 304 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.Headers: java.util.Date getDate(java.lang.String)>("Last-Modified");

        if $r3 == null goto label2;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r4 = virtualinvoke $r2.<com.squareup.okhttp.Headers: java.util.Date getDate(java.lang.String)>("Last-Modified");

        if $r4 == null goto label2;

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l2 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public com.squareup.okhttp.Connection close()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Connection $r1;
        okio.BufferedSink $r2;
        com.squareup.okhttp.Response $r3;
        java.net.Socket $r4;
        okio.Sink $r5;
        com.squareup.okhttp.ResponseBody $r6;
        com.squareup.okhttp.internal.http.Transport $r7;
        boolean $z0;
        com.squareup.okhttp.internal.Internal $r8;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        if $r2 == null goto label3;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r2);

     label1:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        if $r3 != null goto label4;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r1 == null goto label2;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Connection: java.net.Socket getSocket()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.net.Socket)>($r4);

     label2:
        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

        return null;

     label3:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        if $r5 == null goto label1;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r5);

        goto label1;

     label4:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r6 = virtualinvoke $r3.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r6);

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        if $r7 == null goto label5;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r1 == null goto label5;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $z0 = interfaceinvoke $r7.<com.squareup.okhttp.internal.http.Transport: boolean canReuseConnection()>();

        if $z0 != 0 goto label5;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r4 = virtualinvoke $r1.<com.squareup.okhttp.Connection: java.net.Socket getSocket()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.net.Socket)>($r4);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

        return null;

     label5:
        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r1 == null goto label6;

        $r8 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $z0 = virtualinvoke $r8.<com.squareup.okhttp.internal.Internal: boolean clearOwner(com.squareup.okhttp.Connection)>($r1);

        if $z0 != 0 goto label6;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

     label6:
        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

        return $r1;
    }
    public void disconnect()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.Transport $r1;
        java.io.IOException $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        if $r1 == null goto label4;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

     label1:
        interfaceinvoke $r1.<com.squareup.okhttp.internal.http.Transport: void disconnect(com.squareup.okhttp.internal.http.HttpEngine)>(r0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public com.squareup.okhttp.Request followUpRequest() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.net.URL r1, $r13;
        com.squareup.okhttp.Response $r2;
        java.lang.IllegalStateException $r3;
        com.squareup.okhttp.Route $r4;
        java.net.Proxy $r5;
        int $i0;
        com.squareup.okhttp.OkHttpClient $r6;
        java.net.Proxy$Type $r7, $r8;
        java.net.ProtocolException $r9;
        com.squareup.okhttp.Authenticator $r10;
        com.squareup.okhttp.Request $r11;
        java.lang.String $r12, $r14;
        boolean $z0;
        com.squareup.okhttp.Request$Builder $r15;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        if $r2 != null goto label01;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label01:
        $r4 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route getRoute()>();

        if $r4 == null goto label04;

        $r4 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route getRoute()>();

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Route: java.net.Proxy getProxy()>();

     label02:
        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $i0 = virtualinvoke $r2.<com.squareup.okhttp.Response: int code()>();

        lookupswitch($i0)
        {
            case 300: goto label08;
            case 301: goto label08;
            case 302: goto label08;
            case 303: goto label08;
            case 307: goto label07;
            case 308: goto label07;
            case 401: goto label06;
            case 407: goto label05;
            default: goto label03;
        };

     label03:
        return null;

     label04:
        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r5 = virtualinvoke $r6.<com.squareup.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

        goto label02;

     label05:
        $r7 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r8 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r7 == $r8 goto label06;

        $r9 = new java.net.ProtocolException;

        specialinvoke $r9.<java.net.ProtocolException: void <init>(java.lang.String)>("Received HTTP_PROXY_AUTH (407) code while not using proxy");

        throw $r9;

     label06:
        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r10 = virtualinvoke $r6.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator getAuthenticator()>();

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r11 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: com.squareup.okhttp.Request processAuthHeader(com.squareup.okhttp.Authenticator,com.squareup.okhttp.Response,java.net.Proxy)>($r10, $r2, $r5);

        return $r11;

     label07:
        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r12 = virtualinvoke $r11.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z0 != 0 goto label08;

        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r12 = virtualinvoke $r11.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z0 == 0 goto label13;

     label08:
        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $z0 = virtualinvoke $r6.<com.squareup.okhttp.OkHttpClient: boolean getFollowRedirects()>();

        if $z0 == 0 goto label13;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r12 = virtualinvoke $r2.<com.squareup.okhttp.Response: java.lang.String header(java.lang.String)>("Location");

        if $r12 == null goto label13;

        r1 = new java.net.URL;

        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r13 = virtualinvoke $r11.<com.squareup.okhttp.Request: java.net.URL url()>();

        specialinvoke r1.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r13, $r12);

        $r12 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 != 0 goto label09;

        $r12 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 == 0 goto label13;

     label09:
        $r12 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r13 = virtualinvoke $r11.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r14 = virtualinvoke $r13.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 != 0 goto label10;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $z0 = virtualinvoke $r6.<com.squareup.okhttp.OkHttpClient: boolean getFollowSslRedirects()>();

        if $z0 == 0 goto label13;

     label10:
        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r15 = virtualinvoke $r11.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r12 = virtualinvoke $r11.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r12);

        if $z0 == 0 goto label11;

        virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>("GET", null);

        virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding");

        virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Content-Length");

        virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Content-Type");

     label11:
        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean sameConnection(java.net.URL)>(r1);

        if $z0 != 0 goto label12;

        virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Authorization");

     label12:
        $r15 = virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(java.net.URL)>(r1);

        $r11 = virtualinvoke $r15.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        return $r11;

     label13:
        return null;
    }
    public okio.BufferedSink getBufferedRequestBody()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        okio.BufferedSink r1, $r3;
        okio.Sink $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink getRequestBody()>();

        if $r2 == null goto label3;

        r1 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r2);

        $r3 = r1;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody> = r1;

     label2:
        return $r3;

     label3:
        $r3 = null;

        goto label2;
    }
    public com.squareup.okhttp.Connection getConnection()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Connection r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        return r1;
    }
    public com.squareup.okhttp.Request getRequest()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Request r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        return r1;
    }
    public okio.Sink getRequestBody()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.CacheStrategy $r1;
        java.lang.IllegalStateException $r2;
        okio.Sink r3;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        return r3;
    }
    public com.squareup.okhttp.Response getResponse()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Response $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        return $r1;
    }
    public com.squareup.okhttp.Route getRoute()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Route r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route route>;

        return r1;
    }
    public boolean hasResponse()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Response $r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean permitsRequestBody()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Request $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.lang.String method()>();

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>($r2);

        return $z0;
    }
    public void readResponse() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Response $r1, $r6;
        com.squareup.okhttp.Request $r2;
        java.lang.IllegalStateException $r3;
        boolean $z0;
        com.squareup.okhttp.internal.http.Transport $r4;
        com.squareup.okhttp.Headers $r5, $r8;
        com.squareup.okhttp.Response$Builder $r7;
        com.squareup.okhttp.ResponseBody $r9;
        com.squareup.okhttp.internal.Internal $r10;
        com.squareup.okhttp.OkHttpClient $r11;
        com.squareup.okhttp.internal.InternalCache $r12;
        com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain $r13;
        okio.BufferedSink $r14;
        okio.Buffer $r15;
        long $l0;
        byte $b1;
        okio.Sink $r16;
        com.squareup.okhttp.internal.http.RetryableSink $r17;
        com.squareup.okhttp.Request$Builder $r18;
        java.lang.String $r19;
        com.squareup.okhttp.internal.http.CacheRequest $r20;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        if $r1 == null goto label01;

        return;

     label01:
        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        if $r2 != null goto label02;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        if $r1 != null goto label02;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call sendRequest() first!");

        throw $r3;

     label02:
        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        if $r2 == null goto label14;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean forWebSocket>;

        if $z0 == 0 goto label04;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        interfaceinvoke $r4.<com.squareup.okhttp.internal.http.Transport: void writeRequestHeaders(com.squareup.okhttp.Request)>($r2);

        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response readNetworkResponse()>();

     label03:
        $r5 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void receiveHeaders(com.squareup.okhttp.Headers)>($r5);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        if $r6 == null goto label13;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: boolean validate(com.squareup.okhttp.Response,com.squareup.okhttp.Response)>($r6, $r1);

        if $z0 == 0 goto label12;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r2);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r6);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)>($r6);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r5 = virtualinvoke $r6.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r8 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r5 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Headers combine(com.squareup.okhttp.Headers,com.squareup.okhttp.Headers)>($r5, $r8);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>($r5);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r6);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder cacheResponse(com.squareup.okhttp.Response)>($r6);

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r1);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder networkResponse(com.squareup.okhttp.Response)>($r6);

        $r6 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r6;

        $r9 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        virtualinvoke $r9.<com.squareup.okhttp.ResponseBody: void close()>();

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        $r10 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r12 = virtualinvoke $r10.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.InternalCache internalCache(com.squareup.okhttp.OkHttpClient)>($r11);

        interfaceinvoke $r12.<com.squareup.okhttp.internal.InternalCache: void trackConditionalCacheHit()>();

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r6);

        interfaceinvoke $r12.<com.squareup.okhttp.internal.InternalCache: void update(com.squareup.okhttp.Response,com.squareup.okhttp.Response)>($r1, $r6);

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response unzip(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r1;

        return;

     label04:
        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean callerWritesRequestBody>;

        if $z0 != 0 goto label05;

        $r13 = new com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        specialinvoke $r13.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(com.squareup.okhttp.internal.http.HttpEngine,int,com.squareup.okhttp.Request)>(r0, 0, $r2);

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r1 = virtualinvoke $r13.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.Response proceed(com.squareup.okhttp.Request)>($r2);

        goto label03;

     label05:
        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        if $r14 == null goto label06;

        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        $r15 = interfaceinvoke $r14.<okio.BufferedSink: okio.Buffer buffer()>();

        $l0 = virtualinvoke $r15.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label06;

        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        interfaceinvoke $r14.<okio.BufferedSink: okio.BufferedSink emit()>();

     label06:
        $l0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label08;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $l0 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Request)>($r2);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label07;

        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        $z0 = $r16 instanceof com.squareup.okhttp.internal.http.RetryableSink;

        if $z0 == 0 goto label07;

        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        $r17 = (com.squareup.okhttp.internal.http.RetryableSink) $r16;

        $l0 = virtualinvoke $r17.<com.squareup.okhttp.internal.http.RetryableSink: long contentLength()>();

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r18 = virtualinvoke $r2.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r18 = virtualinvoke $r18.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r19);

        $r2 = virtualinvoke $r18.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest> = $r2;

     label07:
        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        interfaceinvoke $r4.<com.squareup.okhttp.internal.http.Transport: void writeRequestHeaders(com.squareup.okhttp.Request)>($r2);

     label08:
        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        if $r16 == null goto label10;

        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        if $r14 == null goto label11;

        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.BufferedSink bufferedRequestBody>;

        interfaceinvoke $r14.<okio.BufferedSink: void close()>();

     label09:
        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        $z0 = $r16 instanceof com.squareup.okhttp.internal.http.RetryableSink;

        if $z0 == 0 goto label10;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        $r17 = (com.squareup.okhttp.internal.http.RetryableSink) $r16;

        interfaceinvoke $r4.<com.squareup.okhttp.internal.http.Transport: void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)>($r17);

     label10:
        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response readNetworkResponse()>();

        goto label03;

     label11:
        $r16 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        interfaceinvoke $r16.<okio.Sink: void close()>();

        goto label09;

     label12:
        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r9 = virtualinvoke $r6.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r9);

     label13:
        $r7 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r2);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r6);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)>($r6);

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r6);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder cacheResponse(com.squareup.okhttp.Response)>($r6);

        $r1 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r1);

        $r7 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder networkResponse(com.squareup.okhttp.Response)>($r1);

        $r1 = virtualinvoke $r7.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r1;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: boolean hasBody(com.squareup.okhttp.Response)>($r1);

        if $z0 == 0 goto label14;

        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void maybeCache()>();

        $r20 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheRequest storeRequest>;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheWritingResponse(com.squareup.okhttp.internal.http.CacheRequest,com.squareup.okhttp.Response)>($r20, $r1);

        $r1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response unzip(com.squareup.okhttp.Response)>($r1);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r1;

     label14:
        return;
    }
    public void receiveHeaders(com.squareup.okhttp.Headers) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Headers $r1;
        com.squareup.okhttp.OkHttpClient $r2;
        java.net.CookieHandler $r3;
        com.squareup.okhttp.Request $r4;
        java.net.URI $r5;
        java.util.Map $r6;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.Headers;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Request: java.net.URI uri()>();

        $r6 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.squareup.okhttp.Headers,java.lang.String)>($r1, null);

        virtualinvoke $r3.<java.net.CookieHandler: void put(java.net.URI,java.util.Map)>($r5, $r6);

     label1:
        return;
    }
    public com.squareup.okhttp.internal.http.HttpEngine recover(com.squareup.okhttp.internal.http.RouteException)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0, $r7;
        com.squareup.okhttp.internal.http.RouteException $r1;
        com.squareup.okhttp.Request $r2;
        boolean $z0, $z1, $z2;
        com.squareup.okhttp.internal.http.RouteSelector $r3;
        com.squareup.okhttp.Response $r4;
        com.squareup.okhttp.Connection $r5;
        java.io.IOException $r6;
        com.squareup.okhttp.OkHttpClient $r8;
        okio.Sink $r9;
        com.squareup.okhttp.internal.http.RetryableSink $r10;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.RouteException;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r3 == null goto label1;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r5 == null goto label1;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        $r6 = virtualinvoke $r1.<com.squareup.okhttp.internal.http.RouteException: java.io.IOException getLastConnectException()>();

        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void connectFailed(com.squareup.okhttp.internal.http.RouteSelector,java.io.IOException)>($r3, $r6);

     label1:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r3 != null goto label2;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r5 == null goto label4;

     label2:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r3 == null goto label3;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        $z0 = virtualinvoke $r3.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNext()>();

        if $z0 == 0 goto label4;

     label3:
        $z0 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean isRecoverable(com.squareup.okhttp.internal.http.RouteException)>($r1);

        if $z0 != 0 goto label5;

     label4:
        return null;

     label5:
        $r5 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection close()>();

        $r7 = new com.squareup.okhttp.internal.http.HttpEngine;

        $r8 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean bufferRequestBody>;

        $z1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean callerWritesRequestBody>;

        $z2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean forWebSocket>;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        $r10 = (com.squareup.okhttp.internal.http.RetryableSink) $r9;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        specialinvoke $r7.<com.squareup.okhttp.internal.http.HttpEngine: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,boolean,boolean,boolean,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RouteSelector,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>($r8, $r2, $z0, $z1, $z2, $r5, $r3, $r10, $r4);

        return $r7;
    }
    public com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.io.IOException $r1;
        okio.Sink $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: java.io.IOException;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        r0 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r1, $r2);

        return r0;
    }
    public com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException, okio.Sink)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0, $r8;
        java.io.IOException $r1;
        okio.Sink $r2;
        com.squareup.okhttp.OkHttpClient $r3;
        com.squareup.okhttp.Request $r4;
        boolean $z0, $z1, $z2;
        com.squareup.okhttp.internal.http.RouteSelector $r5;
        com.squareup.okhttp.Response $r6;
        com.squareup.okhttp.Connection $r7;
        com.squareup.okhttp.internal.http.RetryableSink $r9;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: java.io.IOException;

        $r2 := @parameter1: okio.Sink;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r5 == null goto label1;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r7 == null goto label1;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void connectFailed(com.squareup.okhttp.internal.http.RouteSelector,java.io.IOException)>($r5, $r1);

     label1:
        if $r2 == null goto label2;

        $z0 = $r2 instanceof com.squareup.okhttp.internal.http.RetryableSink;

        if $z0 == 0 goto label7;

     label2:
        $z0 = 1;

     label3:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r5 != null goto label4;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r7 == null goto label6;

     label4:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        if $r5 == null goto label5;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        $z1 = virtualinvoke $r5.<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNext()>();

        if $z1 == 0 goto label6;

     label5:
        $z1 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean isRecoverable(java.io.IOException)>($r1);

        if $z1 == 0 goto label6;

        if $z0 != 0 goto label8;

     label6:
        return null;

     label7:
        $z0 = 0;

        goto label3;

     label8:
        $r7 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection close()>();

        $r8 = new com.squareup.okhttp.internal.http.HttpEngine;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r4 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean bufferRequestBody>;

        $z1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean callerWritesRequestBody>;

        $z2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean forWebSocket>;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.RouteSelector routeSelector>;

        $r9 = (com.squareup.okhttp.internal.http.RetryableSink) $r2;

        $r6 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        specialinvoke $r8.<com.squareup.okhttp.internal.http.HttpEngine: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,boolean,boolean,boolean,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RouteSelector,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>($r3, $r4, $z0, $z1, $z2, $r7, $r5, $r9, $r6);

        return $r8;
    }
    public void releaseConnection() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.internal.http.Transport $r1;
        com.squareup.okhttp.Connection $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        if $r1 == null goto label1;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r2 == null goto label1;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        interfaceinvoke $r1.<com.squareup.okhttp.internal.http.Transport: void releaseConnectionOnIdle()>();

     label1:
        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

        return;
    }
    public boolean sameConnection(java.net.URL)
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        java.net.URL $r1, $r3;
        com.squareup.okhttp.Request $r2;
        java.lang.String $r4, $r5;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r1 := @parameter0: java.net.URL;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>();

        $r5 = virtualinvoke $r1.<java.net.URL: java.lang.String getHost()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r3);

        $i1 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r1);

        if $i0 != $i1 goto label1;

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>();

        $r5 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void sendRequest() throws com.squareup.okhttp.internal.http.RequestException, com.squareup.okhttp.internal.http.RouteException, java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        com.squareup.okhttp.Connection $r1;
        com.squareup.okhttp.internal.http.CacheStrategy $r2;
        com.squareup.okhttp.internal.http.Transport $r3;
        java.lang.IllegalStateException $r4;
        com.squareup.okhttp.Request $r5, $r11;
        com.squareup.okhttp.internal.Internal $r6;
        com.squareup.okhttp.OkHttpClient $r7;
        com.squareup.okhttp.internal.InternalCache $r8;
        com.squareup.okhttp.Response $r9, $r12;
        long $l0;
        com.squareup.okhttp.internal.http.CacheStrategy$Factory $r10;
        com.squareup.okhttp.ResponseBody $r13;
        boolean $z0;
        okio.Sink $r14;
        byte $b1;
        com.squareup.okhttp.internal.http.RetryableSink $r15;
        int $i2;
        com.squareup.okhttp.ConnectionPool $r16;
        com.squareup.okhttp.Response$Builder $r17;
        com.squareup.okhttp.Protocol $r18;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy>;

        if $r2 == null goto label01;

        return;

     label01:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        if $r3 == null goto label02;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label02:
        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r5 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest(com.squareup.okhttp.Request)>($r5);

        $r6 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r8 = virtualinvoke $r6.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.InternalCache internalCache(com.squareup.okhttp.OkHttpClient)>($r7);

        if $r8 == null goto label07;

        $r9 = interfaceinvoke $r8.<com.squareup.okhttp.internal.InternalCache: com.squareup.okhttp.Response get(com.squareup.okhttp.Request)>($r5);

     label03:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10 = new com.squareup.okhttp.internal.http.CacheStrategy$Factory;

        specialinvoke $r10.<com.squareup.okhttp.internal.http.CacheStrategy$Factory: void <init>(long,com.squareup.okhttp.Request,com.squareup.okhttp.Response)>($l0, $r5, $r9);

        $r2 = virtualinvoke $r10.<com.squareup.okhttp.internal.http.CacheStrategy$Factory: com.squareup.okhttp.internal.http.CacheStrategy get()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy> = $r2;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy>;

        $r11 = $r2.<com.squareup.okhttp.internal.http.CacheStrategy: com.squareup.okhttp.Request networkRequest>;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest> = $r11;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy>;

        $r12 = $r2.<com.squareup.okhttp.internal.http.CacheStrategy: com.squareup.okhttp.Response cacheResponse>;

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse> = $r12;

        if $r8 == null goto label04;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.CacheStrategy cacheStrategy>;

        interfaceinvoke $r8.<com.squareup.okhttp.internal.InternalCache: void trackResponse(com.squareup.okhttp.internal.http.CacheStrategy)>($r2);

     label04:
        if $r9 == null goto label05;

        $r12 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        if $r12 != null goto label05;

        $r13 = virtualinvoke $r9.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        staticinvoke <com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r13);

     label05:
        $r11 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        if $r11 == null goto label11;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r1 != null goto label06;

        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: void connect()>();

     label06:
        $r6 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        $r3 = virtualinvoke $r6.<com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.http.Transport newTransport(com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.HttpEngine)>($r1, r0);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport> = $r3;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean callerWritesRequestBody>;

        if $z0 == 0 goto label15;

        $z0 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean permitsRequestBody()>();

        if $z0 == 0 goto label15;

        $r14 = r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut>;

        if $r14 != null goto label15;

        $l0 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Request)>($r5);

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: boolean bufferRequestBody>;

        if $z0 == 0 goto label10;

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label08;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Use setFixedLengthStreamingMode() or setChunkedStreamingMode() for requests larger than 2 GiB.");

        throw $r4;

     label07:
        $r9 = null;

        goto label03;

     label08:
        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label09;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        interfaceinvoke $r3.<com.squareup.okhttp.internal.http.Transport: void writeRequestHeaders(com.squareup.okhttp.Request)>($r5);

        $r15 = new com.squareup.okhttp.internal.http.RetryableSink;

        $i2 = (int) $l0;

        specialinvoke $r15.<com.squareup.okhttp.internal.http.RetryableSink: void <init>(int)>($i2);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut> = $r15;

        return;

     label09:
        $r15 = new com.squareup.okhttp.internal.http.RetryableSink;

        specialinvoke $r15.<com.squareup.okhttp.internal.http.RetryableSink: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut> = $r15;

        return;

     label10:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        interfaceinvoke $r3.<com.squareup.okhttp.internal.http.Transport: void writeRequestHeaders(com.squareup.okhttp.Request)>($r5);

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport transport>;

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest>;

        $r14 = interfaceinvoke $r3.<com.squareup.okhttp.internal.http.Transport: okio.Sink createRequestBody(com.squareup.okhttp.Request,long)>($r5, $l0);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: okio.Sink requestBodyOut> = $r14;

        return;

     label11:
        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        if $r1 == null goto label12;

        $r6 = <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance>;

        $r7 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r16 = virtualinvoke $r7.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool getConnectionPool()>();

        $r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection>;

        virtualinvoke $r6.<com.squareup.okhttp.internal.Internal: void recycle(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Connection)>($r16, $r1);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection connection> = null;

     label12:
        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        if $r9 == null goto label14;

        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r17 = virtualinvoke $r9.<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>();

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r5);

        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r9);

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)>($r9);

        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response cacheResponse>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r9);

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder cacheResponse(com.squareup.okhttp.Response)>($r9);

        $r9 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r9;

     label13:
        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse>;

        $r9 = specialinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response unzip(com.squareup.okhttp.Response)>($r9);

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r9;

        return;

     label14:
        $r17 = new com.squareup.okhttp.Response$Builder;

        specialinvoke $r17.<com.squareup.okhttp.Response$Builder: void <init>()>();

        $r5 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request userRequest>;

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>($r5);

        $r9 = r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response priorResponse>;

        $r9 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>($r9);

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)>($r9);

        $r18 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1>;

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)>($r18);

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder code(int)>(504);

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder message(java.lang.String)>("Unsatisfiable Request (only-if-cached)");

        $r13 = <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.ResponseBody EMPTY_BODY>;

        $r17 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>($r13);

        $r9 = virtualinvoke $r17.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response userResponse> = $r9;

        goto label13;

     label15:
        return;
    }
    public void writingRequestHeaders()
    {
        com.squareup.okhttp.internal.http.HttpEngine r0;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine;

        $l0 = r0.<com.squareup.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine: long sentRequestMillis> = $l0;

        return;
    }
