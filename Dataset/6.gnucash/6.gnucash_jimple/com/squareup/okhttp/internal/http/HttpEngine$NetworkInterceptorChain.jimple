com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain extends java.lang.Object implements com.squareup.okhttp.Interceptor$Chain
private int calls
private final int index
private final com.squareup.okhttp.Request request
final com.squareup.okhttp.internal.http.HttpEngine this$0
    void <init>(com.squareup.okhttp.internal.http.HttpEngine, int, com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain r0;
        com.squareup.okhttp.internal.http.HttpEngine $r1;
        int $i0;
        com.squareup.okhttp.Request $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.squareup.okhttp.Request;

        r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index> = $i0;

        r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.Request request> = $r2;

        return;
    }
    public com.squareup.okhttp.Connection connection()
    {
        com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain r0;
        com.squareup.okhttp.Connection $r1;
        com.squareup.okhttp.internal.http.HttpEngine $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        $r2 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r1 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection access$000(com.squareup.okhttp.internal.http.HttpEngine)>($r2);

        return $r1;
    }
    public com.squareup.okhttp.Response proceed(com.squareup.okhttp.Request) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain r0, r2;
        com.squareup.okhttp.Request $r1;
        int $i0, $i1;
        com.squareup.okhttp.internal.http.HttpEngine $r3;
        com.squareup.okhttp.OkHttpClient $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        com.squareup.okhttp.Interceptor r7;
        com.squareup.okhttp.Connection $r8;
        com.squareup.okhttp.Route $r9;
        com.squareup.okhttp.Address $r10;
        java.net.URL $r11;
        java.lang.String $r12, $r13;
        boolean $z0;
        java.lang.IllegalStateException $r14;
        java.lang.StringBuilder $r15;
        com.squareup.okhttp.Response $r16;
        com.squareup.okhttp.internal.http.Transport $r17;
        com.squareup.okhttp.RequestBody $r18;
        long $l2;
        okio.Sink $r19;
        okio.BufferedSink $r20;
        com.squareup.okhttp.ResponseBody $r21;
        byte $b3;
        java.net.ProtocolException $r22;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int calls>;

        $i0 = $i0 + 1;

        r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int calls> = $i0;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index>;

        if $i0 <= 0 goto label3;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r4 = $r3.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors()>();

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index>;

        $i0 = $i0 + -1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (com.squareup.okhttp.Interceptor) $r6;

        $r8 = virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.Connection connection()>();

        $r9 = virtualinvoke $r8.<com.squareup.okhttp.Connection: com.squareup.okhttp.Route getRoute()>();

        $r10 = virtualinvoke $r9.<com.squareup.okhttp.Route: com.squareup.okhttp.Address getAddress()>();

        $r11 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r12 = virtualinvoke $r11.<java.net.URL: java.lang.String getHost()>();

        $r13 = virtualinvoke $r10.<com.squareup.okhttp.Address: java.lang.String getUriHost()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r11);

        $i1 = virtualinvoke $r10.<com.squareup.okhttp.Address: int getUriPort()>();

        if $i0 == $i1 goto label2;

     label1:
        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("network interceptor ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must retain the same host and port");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label2:
        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int calls>;

        if $i0 <= 1 goto label3;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("network interceptor ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must call proceed() exactly once");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label3:
        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index>;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r4 = $r3.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        r2 = new com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index>;

        $i0 = $i0 + 1;

        specialinvoke r2.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: void <init>(com.squareup.okhttp.internal.http.HttpEngine,int,com.squareup.okhttp.Request)>($r3, $i0, $r1);

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r4 = $r3.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors()>();

        $i0 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int index>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (com.squareup.okhttp.Interceptor) $r6;

        $r16 = interfaceinvoke r7.<com.squareup.okhttp.Interceptor: com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor$Chain)>(r2);

        $i0 = r2.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: int calls>;

        if $i0 == 1 goto label7;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("network interceptor ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must call proceed() exactly once");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label4:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r17 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport access$100(com.squareup.okhttp.internal.http.HttpEngine)>($r3);

        interfaceinvoke $r17.<com.squareup.okhttp.internal.http.Transport: void writeRequestHeaders(com.squareup.okhttp.Request)>($r1);

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request access$202(com.squareup.okhttp.internal.http.HttpEngine,com.squareup.okhttp.Request)>($r3, $r1);

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $z0 = virtualinvoke $r3.<com.squareup.okhttp.internal.http.HttpEngine: boolean permitsRequestBody()>();

        if $z0 == 0 goto label5;

        $r18 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body()>();

        if $r18 == null goto label5;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r17 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.Transport access$100(com.squareup.okhttp.internal.http.HttpEngine)>($r3);

        $r18 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body()>();

        $l2 = virtualinvoke $r18.<com.squareup.okhttp.RequestBody: long contentLength()>();

        $r19 = interfaceinvoke $r17.<com.squareup.okhttp.internal.http.Transport: okio.Sink createRequestBody(com.squareup.okhttp.Request,long)>($r1, $l2);

        $r20 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r19);

        $r18 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body()>();

        virtualinvoke $r18.<com.squareup.okhttp.RequestBody: void writeTo(okio.BufferedSink)>($r20);

        interfaceinvoke $r20.<okio.BufferedSink: void close()>();

     label5:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.internal.http.HttpEngine this$0>;

        $r16 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response access$300(com.squareup.okhttp.internal.http.HttpEngine)>($r3);

        $i0 = virtualinvoke $r16.<com.squareup.okhttp.Response: int code()>();

        if $i0 == 204 goto label6;

        if $i0 != 205 goto label7;

     label6:
        $r21 = virtualinvoke $r16.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        $l2 = virtualinvoke $r21.<com.squareup.okhttp.ResponseBody: long contentLength()>();

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label7;

        $r22 = new java.net.ProtocolException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had non-zero Content-Length: ");

        $r21 = virtualinvoke $r16.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        $l2 = virtualinvoke $r21.<com.squareup.okhttp.ResponseBody: long contentLength()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r22;

     label7:
        return $r16;
    }
    public com.squareup.okhttp.Request request()
    {
        com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain r0;
        com.squareup.okhttp.Request r1;

        r0 := @this: com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain;

        r1 = r0.<com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain: com.squareup.okhttp.Request request>;

        return r1;
    }
