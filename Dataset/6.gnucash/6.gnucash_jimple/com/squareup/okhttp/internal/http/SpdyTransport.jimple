com.squareup.okhttp.internal.http.SpdyTransport extends java.lang.Object implements com.squareup.okhttp.internal.http.Transport
private static final java.util.List HTTP_2_PROHIBITED_HEADERS
private static final java.util.List SPDY_3_PROHIBITED_HEADERS
private final com.squareup.okhttp.internal.http.HttpEngine httpEngine
private final com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection
private com.squareup.okhttp.internal.spdy.SpdyStream stream
    static void <clinit>()
    {
        okio.ByteString[] $r0;
        okio.ByteString $r1;
        java.util.List $r2;

        $r0 = newarray (okio.ByteString)[5];

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("connection");

        $r0[0] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("host");

        $r0[1] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("keep-alive");

        $r0[2] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("proxy-connection");

        $r0[3] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("transfer-encoding");

        $r0[4] = $r1;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0);

        <com.squareup.okhttp.internal.http.SpdyTransport: java.util.List SPDY_3_PROHIBITED_HEADERS> = $r2;

        $r0 = newarray (okio.ByteString)[8];

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("connection");

        $r0[0] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("host");

        $r0[1] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("keep-alive");

        $r0[2] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("proxy-connection");

        $r0[3] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("te");

        $r0[4] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("transfer-encoding");

        $r0[5] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("encoding");

        $r0[6] = $r1;

        $r1 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("upgrade");

        $r0[7] = $r1;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0);

        <com.squareup.okhttp.internal.http.SpdyTransport: java.util.List HTTP_2_PROHIBITED_HEADERS> = $r2;

        return;
    }
    public void <init>(com.squareup.okhttp.internal.http.HttpEngine, com.squareup.okhttp.internal.spdy.SpdyConnection)
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.internal.http.HttpEngine $r1;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r2;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $r2 := @parameter1: com.squareup.okhttp.internal.spdy.SpdyConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.http.HttpEngine httpEngine> = $r1;

        r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection> = $r2;

        return;
    }
    private static boolean isProhibitedHeader(com.squareup.okhttp.Protocol, okio.ByteString)
    {
        com.squareup.okhttp.Protocol $r0, $r2;
        okio.ByteString $r1;
        java.util.List $r3;
        boolean $z0;
        java.lang.AssertionError $r4;

        $r0 := @parameter0: com.squareup.okhttp.Protocol;

        $r1 := @parameter1: okio.ByteString;

        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        if $r0 != $r2 goto label1;

        $r3 = <com.squareup.okhttp.internal.http.SpdyTransport: java.util.List SPDY_3_PROHIBITED_HEADERS>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r1);

        return $z0;

     label1:
        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        if $r0 != $r2 goto label2;

        $r3 = <com.squareup.okhttp.internal.http.SpdyTransport: java.util.List HTTP_2_PROHIBITED_HEADERS>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r1);

        return $z0;

     label2:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r0);

        throw $r4;
    }
    private static java.lang.String joinOnNull(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static com.squareup.okhttp.Response$Builder readNameValueBlock(java.util.List, com.squareup.okhttp.Protocol) throws java.io.IOException
    {
        java.util.List r0;
        com.squareup.okhttp.Protocol $r1;
        com.squareup.okhttp.Headers$Builder r2;
        okio.ByteString r3, $r10;
        java.lang.String r4, r5, $r6, $r7, $r11;
        int i0, $i1, i2, $i3, i4;
        java.lang.Object $r8;
        com.squareup.okhttp.internal.spdy.Header $r9;
        boolean $z0;
        java.net.ProtocolException $r12;
        java.lang.StringBuilder $r13;
        com.squareup.okhttp.internal.http.StatusLine $r14;
        com.squareup.okhttp.Response$Builder $r15;
        com.squareup.okhttp.Headers $r16;

        r0 := @parameter0: java.util.List;

        $r1 := @parameter1: com.squareup.okhttp.Protocol;

        r4 = null;

        r5 = "HTTP/1.1";

        r2 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke r2.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        $r6 = <com.squareup.okhttp.internal.http.OkHeaders: java.lang.String SELECTED_PROTOCOL>;

        $r7 = virtualinvoke $r1.<com.squareup.okhttp.Protocol: java.lang.String toString()>();

        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>($r6, $r7);

        i0 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label8;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (com.squareup.okhttp.internal.spdy.Header) $r8;

        r3 = $r9.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (com.squareup.okhttp.internal.spdy.Header) $r8;

        $r10 = $r9.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $r6 = virtualinvoke $r10.<okio.ByteString: java.lang.String utf8()>();

        i2 = 0;

     label2:
        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i2 >= $i3 goto label7;

        $i3 = virtualinvoke $r6.<java.lang.String: int indexOf(int,int)>(0, i2);

        i4 = $i3;

        if $i3 != -1 goto label3;

        i4 = virtualinvoke $r6.<java.lang.String: int length()>();

     label3:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        $r10 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString RESPONSE_STATUS>;

        $z0 = virtualinvoke r3.<okio.ByteString: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label5;

        r4 = $r7;

     label4:
        i2 = i4 + 1;

        goto label2;

     label5:
        $r10 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString VERSION>;

        $z0 = virtualinvoke r3.<okio.ByteString: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label6;

        r5 = $r7;

        goto label4;

     label6:
        $z0 = staticinvoke <com.squareup.okhttp.internal.http.SpdyTransport: boolean isProhibitedHeader(com.squareup.okhttp.Protocol,okio.ByteString)>($r1, r3);

        if $z0 != 0 goto label4;

        $r11 = virtualinvoke r3.<okio.ByteString: java.lang.String utf8()>();

        virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r11, $r7);

        goto label4;

     label7:
        i0 = i0 + 1;

        goto label1;

     label8:
        if r4 != null goto label9;

        $r12 = new java.net.ProtocolException;

        specialinvoke $r12.<java.net.ProtocolException: void <init>(java.lang.String)>("Expected \':status\' header not present");

        throw $r12;

     label9:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine parse(java.lang.String)>(r4);

        $r15 = new com.squareup.okhttp.Response$Builder;

        specialinvoke $r15.<com.squareup.okhttp.Response$Builder: void <init>()>();

        $r15 = virtualinvoke $r15.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)>($r1);

        i0 = $r14.<com.squareup.okhttp.internal.http.StatusLine: int code>;

        $r15 = virtualinvoke $r15.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder code(int)>(i0);

        r4 = $r14.<com.squareup.okhttp.internal.http.StatusLine: java.lang.String message>;

        $r15 = virtualinvoke $r15.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder message(java.lang.String)>(r4);

        $r16 = virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        $r15 = virtualinvoke $r15.<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>($r16);

        return $r15;
    }
    public static java.util.List writeNameValueBlock(com.squareup.okhttp.Request, com.squareup.okhttp.Protocol, java.lang.String)
    {
        com.squareup.okhttp.Request $r0;
        com.squareup.okhttp.Protocol $r1, $r10;
        java.lang.String $r2, $r8;
        java.util.LinkedHashSet r3;
        java.util.ArrayList r4;
        com.squareup.okhttp.Headers $r5;
        int $i0, $i1, i2, $i3;
        com.squareup.okhttp.internal.spdy.Header $r6;
        okio.ByteString $r7, $r13;
        java.net.URL $r9;
        java.util.Locale $r11;
        boolean $z0;
        java.lang.AssertionError $r12;
        java.lang.Object $r14;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        $r1 := @parameter1: com.squareup.okhttp.Protocol;

        $r2 := @parameter2: java.lang.String;

        $r5 = virtualinvoke $r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers()>();

        r4 = new java.util.ArrayList;

        $i0 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

        $i0 = $i0 + 10;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_METHOD>;

        $r8 = virtualinvoke $r0.<com.squareup.okhttp.Request: java.lang.String method()>();

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_PATH>;

        $r9 = virtualinvoke $r0.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r8 = staticinvoke <com.squareup.okhttp.internal.http.RequestLine: java.lang.String requestPath(java.net.URL)>($r9);

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r0.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r8 = staticinvoke <com.squareup.okhttp.internal.http.HttpEngine: java.lang.String hostHeader(java.net.URL)>($r9);

        $r10 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        if $r10 != $r1 goto label04;

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString VERSION>;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_HOST>;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label01:
        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_SCHEME>;

        $r9 = virtualinvoke $r0.<com.squareup.okhttp.Request: java.net.URL url()>();

        $r2 = virtualinvoke $r9.<java.net.URL: java.lang.String getProtocol()>();

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        r3 = new java.util.LinkedHashSet;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>()>();

        $i0 = 0;

        $i1 = virtualinvoke $r5.<com.squareup.okhttp.Headers: int size()>();

     label02:
        if $i0 >= $i1 goto label10;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String name(int)>($i0);

        $r11 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r11);

        $r7 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.Headers: java.lang.String value(int)>($i0);

        $z0 = staticinvoke <com.squareup.okhttp.internal.http.SpdyTransport: boolean isProhibitedHeader(com.squareup.okhttp.Protocol,okio.ByteString)>($r1, $r7);

        if $z0 == 0 goto label06;

     label03:
        $i0 = $i0 + 1;

        goto label02;

     label04:
        $r10 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        if $r10 != $r1 goto label05;

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        $r7 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_AUTHORITY>;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label01;

     label05:
        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label06:
        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_METHOD>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_PATH>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_SCHEME>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_AUTHORITY>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString TARGET_HOST>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $r13 = <com.squareup.okhttp.internal.spdy.Header: okio.ByteString VERSION>;

        $z0 = virtualinvoke $r7.<okio.ByteString: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label03;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        if $z0 == 0 goto label07;

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label03;

     label07:
        i2 = 0;

     label08:
        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        if i2 >= $i3 goto label03;

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (com.squareup.okhttp.internal.spdy.Header) $r14;

        $r13 = $r6.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString name>;

        $z0 = virtualinvoke $r13.<okio.ByteString: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label09;

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (com.squareup.okhttp.internal.spdy.Header) $r14;

        $r13 = $r6.<com.squareup.okhttp.internal.spdy.Header: okio.ByteString value>;

        $r8 = virtualinvoke $r13.<okio.ByteString: java.lang.String utf8()>();

        $r2 = staticinvoke <com.squareup.okhttp.internal.http.SpdyTransport: java.lang.String joinOnNull(java.lang.String,java.lang.String)>($r8, $r2);

        $r6 = new com.squareup.okhttp.internal.spdy.Header;

        specialinvoke $r6.<com.squareup.okhttp.internal.spdy.Header: void <init>(okio.ByteString,java.lang.String)>($r7, $r2);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r6);

        goto label03;

     label09:
        i2 = i2 + 1;

        goto label08;

     label10:
        return r4;
    }
    public boolean canReuseConnection()
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        return 1;
    }
    public okio.Sink createRequestBody(com.squareup.okhttp.Request, long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.Request $r1;
        long $l0;
        okio.Sink $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream $r3;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $l0 := @parameter1: long;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream: okio.Sink getSink()>();

        return $r2;
    }
    public void disconnect(com.squareup.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.internal.http.HttpEngine $r1;
        com.squareup.okhttp.internal.spdy.ErrorCode $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream $r3;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.HttpEngine;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        if $r3 == null goto label1;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = <com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode CANCEL>;

        virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream: void close(com.squareup.okhttp.internal.spdy.ErrorCode)>($r2);

     label1:
        return;
    }
    public void finishRequest() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        okio.Sink $r1;
        com.squareup.okhttp.internal.spdy.SpdyStream $r2;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r2 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r1 = virtualinvoke $r2.<com.squareup.okhttp.internal.spdy.SpdyStream: okio.Sink getSink()>();

        interfaceinvoke $r1.<okio.Sink: void close()>();

        return;
    }
    public com.squareup.okhttp.ResponseBody openResponseBody(com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.Response $r1;
        com.squareup.okhttp.internal.http.RealResponseBody $r2;
        com.squareup.okhttp.Headers $r3;
        com.squareup.okhttp.internal.spdy.SpdyStream $r4;
        okio.Source $r5;
        okio.BufferedSource $r6;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        $r2 = new com.squareup.okhttp.internal.http.RealResponseBody;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r4 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.internal.spdy.SpdyStream: okio.Source getSource()>();

        $r6 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>($r5);

        specialinvoke $r2.<com.squareup.okhttp.internal.http.RealResponseBody: void <init>(com.squareup.okhttp.Headers,okio.BufferedSource)>($r3, $r6);

        return $r2;
    }
    public com.squareup.okhttp.Response$Builder readResponseHeaders() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.internal.spdy.SpdyStream $r1;
        java.util.List $r2;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r3;
        com.squareup.okhttp.Protocol $r4;
        com.squareup.okhttp.Response$Builder $r5;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List getResponseHeaders()>();

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.Protocol getProtocol()>();

        $r5 = staticinvoke <com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.Response$Builder readNameValueBlock(java.util.List,com.squareup.okhttp.Protocol)>($r2, $r4);

        return $r5;
    }
    public void releaseConnectionOnIdle()
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        return;
    }
    public void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.internal.http.RetryableSink $r1;
        okio.Sink $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream $r3;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.RetryableSink;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream: okio.Sink getSink()>();

        virtualinvoke $r1.<com.squareup.okhttp.internal.http.RetryableSink: void writeToSocket(okio.Sink)>($r2);

        return;
    }
    public void writeRequestHeaders(com.squareup.okhttp.Request) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.SpdyTransport r0;
        com.squareup.okhttp.Request $r1;
        java.util.concurrent.TimeUnit $r2;
        com.squareup.okhttp.internal.spdy.SpdyStream $r3;
        com.squareup.okhttp.internal.http.HttpEngine $r4;
        boolean $z0;
        com.squareup.okhttp.Connection $r5;
        com.squareup.okhttp.Protocol $r6;
        java.lang.String $r7;
        com.squareup.okhttp.internal.spdy.SpdyConnection $r8, $r9;
        java.util.List $r10;
        okio.Timeout $r11;
        com.squareup.okhttp.OkHttpClient $r12;
        int $i0;
        long $l1;

        r0 := @this: com.squareup.okhttp.internal.http.SpdyTransport;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r4.<com.squareup.okhttp.internal.http.HttpEngine: void writingRequestHeaders()>();

        $r4 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.http.HttpEngine httpEngine>;

        $z0 = virtualinvoke $r4.<com.squareup.okhttp.internal.http.HttpEngine: boolean permitsRequestBody()>();

        $r4 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.http.HttpEngine httpEngine>;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection getConnection()>();

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.Connection: com.squareup.okhttp.Protocol getProtocol()>();

        $r7 = staticinvoke <com.squareup.okhttp.internal.http.RequestLine: java.lang.String version(com.squareup.okhttp.Protocol)>($r6);

        $r8 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r9 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r6 = virtualinvoke $r9.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.Protocol getProtocol()>();

        $r10 = staticinvoke <com.squareup.okhttp.internal.http.SpdyTransport: java.util.List writeNameValueBlock(com.squareup.okhttp.Request,com.squareup.okhttp.Protocol,java.lang.String)>($r1, $r6, $r7);

        $r3 = virtualinvoke $r8.<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean)>($r10, $z0, 1);

        r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream> = $r3;

        $r3 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.spdy.SpdyStream stream>;

        $r11 = virtualinvoke $r3.<com.squareup.okhttp.internal.spdy.SpdyStream: okio.Timeout readTimeout()>();

        $r4 = r0.<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.internal.http.HttpEngine httpEngine>;

        $r12 = $r4.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.OkHttpClient client>;

        $i0 = virtualinvoke $r12.<com.squareup.okhttp.OkHttpClient: int getReadTimeout()>();

        $l1 = (long) $i0;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r11.<okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>($l1, $r2);

        return;
    }
