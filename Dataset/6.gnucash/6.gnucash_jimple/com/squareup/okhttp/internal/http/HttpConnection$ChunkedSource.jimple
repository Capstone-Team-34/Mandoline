com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource extends com.squareup.okhttp.internal.http.HttpConnection$AbstractSource
private static final long NO_CHUNK_YET
private long bytesRemainingInChunk
private boolean hasMoreChunks
private final com.squareup.okhttp.internal.http.HttpEngine httpEngine
final com.squareup.okhttp.internal.http.HttpConnection this$0
    void <init>(com.squareup.okhttp.internal.http.HttpConnection, com.squareup.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource r0;
        com.squareup.okhttp.internal.http.HttpConnection $r1;
        com.squareup.okhttp.internal.http.HttpEngine $r2;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.HttpConnection;

        $r2 := @parameter1: com.squareup.okhttp.internal.http.HttpEngine;

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0> = $r1;

        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection$AbstractSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,com.squareup.okhttp.internal.http.HttpConnection$1)>($r1, null);

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk> = -1L;

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean hasMoreChunks> = 1;

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpEngine httpEngine> = $r2;

        return;
    }
    private void readChunkSize() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource r0;
        java.lang.NumberFormatException r1;
        com.squareup.okhttp.Headers$Builder r2;
        long $l0;
        byte $b1;
        com.squareup.okhttp.internal.http.HttpConnection $r3;
        okio.BufferedSource $r4;
        java.lang.String $r5;
        boolean $z0;
        java.net.ProtocolException $r6;
        java.lang.StringBuilder $r7;
        com.squareup.okhttp.internal.http.HttpEngine $r8;
        com.squareup.okhttp.Headers $r9;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;

        $l0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label01;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0>;

        $r4 = staticinvoke <com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource access$600(com.squareup.okhttp.internal.http.HttpConnection)>($r3);

        interfaceinvoke $r4.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

     label01:
        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0>;

     label02:
        $r4 = staticinvoke <com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource access$600(com.squareup.okhttp.internal.http.HttpConnection)>($r3);

        $l0 = interfaceinvoke $r4.<okio.BufferedSource: long readHexadecimalUnsignedLong()>();

     label03:
        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk> = $l0;

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0>;

     label04:
        $r4 = staticinvoke <com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource access$600(com.squareup.okhttp.internal.http.HttpConnection)>($r3);

        $r5 = interfaceinvoke $r4.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label05:
        $l0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label10;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

     label07:
        if $z0 != 0 goto label16;

     label08:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(";");

     label09:
        if $z0 != 0 goto label16;

     label10:
        $r6 = new java.net.ProtocolException;

        $r7 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected chunk size and optional extensions but was \"");

     label12:
        $l0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

     label13:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.net.ProtocolException: void <init>(java.lang.String)>($r5);

     label14:
        throw $r6;

     label15:
        r1 := @caughtexception;

        $r6 = new java.net.ProtocolException;

        $r5 = virtualinvoke r1.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.net.ProtocolException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label16:
        $l0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label17;

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean hasMoreChunks> = 0;

        r2 = new com.squareup.okhttp.Headers$Builder;

        specialinvoke r2.<com.squareup.okhttp.Headers$Builder: void <init>()>();

        $r3 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0>;

        virtualinvoke $r3.<com.squareup.okhttp.internal.http.HttpConnection: void readHeaders(com.squareup.okhttp.Headers$Builder)>(r2);

        $r8 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpEngine httpEngine>;

        $r9 = virtualinvoke r2.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        virtualinvoke $r8.<com.squareup.okhttp.internal.http.HttpEngine: void receiveHeaders(com.squareup.okhttp.Headers)>($r9);

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void endOfInput(boolean)>(1);

     label17:
        return;

        catch java.lang.NumberFormatException from label02 to label03 with label15;
        catch java.lang.NumberFormatException from label04 to label05 with label15;
        catch java.lang.NumberFormatException from label06 to label07 with label15;
        catch java.lang.NumberFormatException from label08 to label09 with label15;
        catch java.lang.NumberFormatException from label11 to label12 with label15;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
    }
    public void close() throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource r0;
        java.util.concurrent.TimeUnit $r1;
        boolean $z0;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean hasMoreChunks>;

        if $z0 == 0 goto label2;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z0 = staticinvoke <com.squareup.okhttp.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)>(r0, 100, $r1);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void unexpectedEndOfInput()>();

     label2:
        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean closed> = 1;

        return;
    }
    public long read(okio.Buffer, long) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource r0;
        okio.Buffer $r1;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        com.squareup.okhttp.internal.http.HttpConnection $r6;
        okio.BufferedSource $r7;
        java.io.IOException $r8;

        r0 := @this: com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $z0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean closed>;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r5;

     label2:
        $z0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean hasMoreChunks>;

        if $z0 != 0 goto label3;

        return -1L;

     label3:
        $l2 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $b1 = $l2 cmp 0L;

        if $b1 == 0 goto label4;

        $l2 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $b1 = $l2 cmp -1L;

        if $b1 != 0 goto label5;

     label4:
        specialinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void readChunkSize()>();

        $z0 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: boolean hasMoreChunks>;

        if $z0 != 0 goto label5;

        return -1L;

     label5:
        $r6 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okhttp.internal.http.HttpConnection this$0>;

        $r7 = staticinvoke <com.squareup.okhttp.internal.http.HttpConnection: okio.BufferedSource access$600(com.squareup.okhttp.internal.http.HttpConnection)>($r6);

        $l2 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l2);

        $l0 = interfaceinvoke $r7.<okio.BufferedSource: long read(okio.Buffer,long)>($r1, $l0);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label6;

        virtualinvoke r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void unexpectedEndOfInput()>();

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r8;

     label6:
        $l2 = r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk>;

        $l2 = $l2 - $l0;

        r0.<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long bytesRemainingInChunk> = $l2;

        return $l0;
    }
