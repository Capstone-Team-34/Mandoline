com.squareup.okhttp.internal.http.AuthenticatorAdapter extends java.lang.Object implements com.squareup.okhttp.Authenticator
public static final com.squareup.okhttp.Authenticator INSTANCE
    static void <clinit>()
    {
        com.squareup.okhttp.internal.http.AuthenticatorAdapter $r0;

        $r0 = new com.squareup.okhttp.internal.http.AuthenticatorAdapter;

        specialinvoke $r0.<com.squareup.okhttp.internal.http.AuthenticatorAdapter: void <init>()>();

        <com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Authenticator INSTANCE> = $r0;

        return;
    }
    public void <init>()
    {
        com.squareup.okhttp.internal.http.AuthenticatorAdapter r0;

        r0 := @this: com.squareup.okhttp.internal.http.AuthenticatorAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private java.net.InetAddress getConnectToInetAddress(java.net.Proxy, java.net.URL) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.AuthenticatorAdapter r0;
        java.net.Proxy $r1;
        java.net.URL $r2;
        java.net.Proxy$Type $r3, $r4;
        java.net.SocketAddress $r5;
        java.net.InetSocketAddress $r6;
        java.net.InetAddress $r7;
        java.lang.String $r8;

        r0 := @this: com.squareup.okhttp.internal.http.AuthenticatorAdapter;

        $r1 := @parameter0: java.net.Proxy;

        $r2 := @parameter1: java.net.URL;

        if $r1 == null goto label1;

        $r4 = virtualinvoke $r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r3 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r4 == $r3 goto label1;

        $r5 = virtualinvoke $r1.<java.net.Proxy: java.net.SocketAddress address()>();

        $r6 = (java.net.InetSocketAddress) $r5;

        $r7 = virtualinvoke $r6.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        return $r7;

     label1:
        $r8 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

        $r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r8);

        return $r7;
    }
    public com.squareup.okhttp.Request authenticate(java.net.Proxy, com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.AuthenticatorAdapter r0;
        java.net.Proxy $r1;
        com.squareup.okhttp.Response $r2;
        java.net.Authenticator$RequestorType $r3;
        java.util.List $r4;
        com.squareup.okhttp.Request $r5;
        java.net.URL $r6;
        int i0, $i1, $i2;
        java.lang.Object $r7;
        com.squareup.okhttp.Challenge r8;
        java.lang.String $r9, $r10, $r12, $r13;
        boolean $z0;
        java.net.InetAddress $r11;
        java.net.PasswordAuthentication $r14;
        char[] $r15;
        com.squareup.okhttp.Request$Builder $r16;

        r0 := @this: com.squareup.okhttp.internal.http.AuthenticatorAdapter;

        $r1 := @parameter0: java.net.Proxy;

        $r2 := @parameter1: com.squareup.okhttp.Response;

        $r4 = virtualinvoke $r2.<com.squareup.okhttp.Response: java.util.List challenges()>();

        $r5 = virtualinvoke $r2.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>();

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.Request: java.net.URL url()>();

        i0 = 0;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.squareup.okhttp.Challenge) $r7;

        $r9 = "Basic";

        $r10 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r9 = virtualinvoke $r6.<java.net.URL: java.lang.String getHost()>();

        $r11 = specialinvoke r0.<com.squareup.okhttp.internal.http.AuthenticatorAdapter: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL)>($r1, $r6);

        $i2 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r6);

        $r10 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $r12 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getRealm()>();

        $r13 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getScheme()>();

        $r3 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;

        $r14 = staticinvoke <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r9, $r11, $i2, $r10, $r12, $r13, $r6, $r3);

        if $r14 == null goto label2;

        $r9 = virtualinvoke $r14.<java.net.PasswordAuthentication: java.lang.String getUserName()>();

        $r10 = new java.lang.String;

        $r15 = virtualinvoke $r14.<java.net.PasswordAuthentication: char[] getPassword()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r15);

        $r9 = staticinvoke <com.squareup.okhttp.Credentials: java.lang.String basic(java.lang.String,java.lang.String)>($r9, $r10);

        $r16 = virtualinvoke $r5.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r16 = virtualinvoke $r16.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Authorization", $r9);

        $r5 = virtualinvoke $r16.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        return $r5;

     label4:
        return null;
    }
    public com.squareup.okhttp.Request authenticateProxy(java.net.Proxy, com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.internal.http.AuthenticatorAdapter r0;
        java.net.Proxy $r1;
        com.squareup.okhttp.Response $r2;
        java.net.Authenticator$RequestorType $r3;
        java.util.List $r4;
        com.squareup.okhttp.Request $r5;
        java.net.URL $r6;
        int i0, $i1, $i2;
        java.lang.Object $r7;
        com.squareup.okhttp.Challenge r8;
        java.lang.String $r9, $r10, $r14, $r15;
        boolean $z0;
        java.net.SocketAddress $r11;
        java.net.InetSocketAddress r12;
        java.net.InetAddress $r13;
        java.net.PasswordAuthentication $r16;
        char[] $r17;
        com.squareup.okhttp.Request$Builder $r18;

        r0 := @this: com.squareup.okhttp.internal.http.AuthenticatorAdapter;

        $r1 := @parameter0: java.net.Proxy;

        $r2 := @parameter1: com.squareup.okhttp.Response;

        $r4 = virtualinvoke $r2.<com.squareup.okhttp.Response: java.util.List challenges()>();

        $r5 = virtualinvoke $r2.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>();

        $r6 = virtualinvoke $r5.<com.squareup.okhttp.Request: java.net.URL url()>();

        i0 = 0;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.squareup.okhttp.Challenge) $r7;

        $r9 = "Basic";

        $r10 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r11 = virtualinvoke $r1.<java.net.Proxy: java.net.SocketAddress address()>();

        r12 = (java.net.InetSocketAddress) $r11;

        $r9 = virtualinvoke r12.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $r13 = specialinvoke r0.<com.squareup.okhttp.internal.http.AuthenticatorAdapter: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL)>($r1, $r6);

        $i2 = virtualinvoke r12.<java.net.InetSocketAddress: int getPort()>();

        $r10 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $r14 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getRealm()>();

        $r15 = virtualinvoke r8.<com.squareup.okhttp.Challenge: java.lang.String getScheme()>();

        $r3 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType PROXY>;

        $r16 = staticinvoke <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r9, $r13, $i2, $r10, $r14, $r15, $r6, $r3);

        if $r16 == null goto label2;

        $r9 = virtualinvoke $r16.<java.net.PasswordAuthentication: java.lang.String getUserName()>();

        $r10 = new java.lang.String;

        $r17 = virtualinvoke $r16.<java.net.PasswordAuthentication: char[] getPassword()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r17);

        $r9 = staticinvoke <com.squareup.okhttp.Credentials: java.lang.String basic(java.lang.String,java.lang.String)>($r9, $r10);

        $r18 = virtualinvoke $r5.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r18 = virtualinvoke $r18.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Proxy-Authorization", $r9);

        $r5 = virtualinvoke $r18.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        return $r5;

     label4:
        return null;
    }
