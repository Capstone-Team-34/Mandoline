com.squareup.okhttp.CertificatePinner extends java.lang.Object
public static final com.squareup.okhttp.CertificatePinner DEFAULT
private final java.util.Map hostnameToPins
    static void <clinit>()
    {
        com.squareup.okhttp.CertificatePinner $r0;
        com.squareup.okhttp.CertificatePinner$Builder $r1;

        $r1 = new com.squareup.okhttp.CertificatePinner$Builder;

        specialinvoke $r1.<com.squareup.okhttp.CertificatePinner$Builder: void <init>()>();

        $r0 = virtualinvoke $r1.<com.squareup.okhttp.CertificatePinner$Builder: com.squareup.okhttp.CertificatePinner build()>();

        <com.squareup.okhttp.CertificatePinner: com.squareup.okhttp.CertificatePinner DEFAULT> = $r0;

        return;
    }
    private void <init>(com.squareup.okhttp.CertificatePinner$Builder)
    {
        com.squareup.okhttp.CertificatePinner r0;
        com.squareup.okhttp.CertificatePinner$Builder $r1;
        java.util.Map $r2;

        r0 := @this: com.squareup.okhttp.CertificatePinner;

        $r1 := @parameter0: com.squareup.okhttp.CertificatePinner$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.squareup.okhttp.CertificatePinner$Builder: java.util.Map access$000(com.squareup.okhttp.CertificatePinner$Builder)>($r1);

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.Map immutableMap(java.util.Map)>($r2);

        r0.<com.squareup.okhttp.CertificatePinner: java.util.Map hostnameToPins> = $r2;

        return;
    }
    void <init>(com.squareup.okhttp.CertificatePinner$Builder, com.squareup.okhttp.CertificatePinner$1)
    {
        com.squareup.okhttp.CertificatePinner r0;
        com.squareup.okhttp.CertificatePinner$Builder $r1;
        com.squareup.okhttp.CertificatePinner$1 $r2;

        r0 := @this: com.squareup.okhttp.CertificatePinner;

        $r1 := @parameter0: com.squareup.okhttp.CertificatePinner$Builder;

        $r2 := @parameter1: com.squareup.okhttp.CertificatePinner$1;

        specialinvoke r0.<com.squareup.okhttp.CertificatePinner: void <init>(com.squareup.okhttp.CertificatePinner$Builder)>($r1);

        return;
    }
    public static java.lang.String pin(java.security.cert.Certificate)
    {
        java.security.cert.Certificate $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.security.cert.X509Certificate $r3;
        okio.ByteString $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.security.cert.Certificate;

        $z0 = $r0 instanceof java.security.cert.X509Certificate;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Certificate pinning requires X509 certificates");

        throw $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sha1/");

        $r3 = (java.security.cert.X509Certificate) $r0;

        $r4 = staticinvoke <com.squareup.okhttp.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>($r3);

        $r5 = virtualinvoke $r4.<okio.ByteString: java.lang.String base64()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
    private static okio.ByteString sha1(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate $r0;
        java.security.PublicKey $r1;
        byte[] $r2;
        okio.ByteString $r3;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r2 = interfaceinvoke $r1.<java.security.PublicKey: byte[] getEncoded()>();

        $r3 = staticinvoke <okio.ByteString: okio.ByteString of(byte[])>($r2);

        $r3 = staticinvoke <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>($r3);

        return $r3;
    }
    public void check(java.lang.String, java.util.List) throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.squareup.okhttp.CertificatePinner r0;
        java.lang.String $r1, $r9;
        java.util.List r2;
        java.util.Set $r3;
        int i0, $i1;
        java.lang.Object $r4;
        java.security.cert.X509Certificate r5;
        okio.ByteString $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8;
        java.security.Principal $r10;
        java.util.Iterator $r11;
        javax.net.ssl.SSLPeerUnverifiedException $r12;

        r0 := @this: com.squareup.okhttp.CertificatePinner;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = virtualinvoke r0.<com.squareup.okhttp.CertificatePinner: java.util.Set findMatchingPins(java.lang.String)>($r1);

        if $r3 != null goto label1;

        return;

     label1:
        i0 = 0;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label2:
        if i0 >= $i1 goto label3;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = staticinvoke <com.squareup.okhttp.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>(r5);

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label8;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate pinning failure!");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Peer certificate chain:");

        i0 = 0;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label4:
        if i0 >= $i1 goto label5;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (java.security.cert.X509Certificate) $r4;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r9 = staticinvoke <com.squareup.okhttp.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)>(r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke r5.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r9 = interfaceinvoke $r10.<java.security.Principal: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i0 = i0 + 1;

        goto label4;

     label5:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Pinned certificates for ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (okio.ByteString) $r4;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    sha1/");

        $r1 = virtualinvoke $r6.<okio.ByteString: java.lang.String base64()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label6;

     label7:
        $r12 = new javax.net.ssl.SSLPeerUnverifiedException;

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>($r1);

        throw $r12;

     label8:
        return;
    }
    public transient void check(java.lang.String, java.security.cert.Certificate[]) throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.squareup.okhttp.CertificatePinner r0;
        java.lang.String $r1;
        java.security.cert.Certificate[] $r2;
        java.util.List $r3;

        r0 := @this: com.squareup.okhttp.CertificatePinner;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.cert.Certificate[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        virtualinvoke r0.<com.squareup.okhttp.CertificatePinner: void check(java.lang.String,java.util.List)>($r1, $r3);

        return;
    }
    java.util.Set findMatchingPins(java.lang.String)
    {
        com.squareup.okhttp.CertificatePinner r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.Set r4, r5;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.util.LinkedHashSet r7;

        r0 := @this: com.squareup.okhttp.CertificatePinner;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.squareup.okhttp.CertificatePinner: java.util.Map hostnameToPins>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.util.Set) $r3;

        r5 = null;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 == $i1 goto label1;

        $r2 = r0.<com.squareup.okhttp.CertificatePinner: java.util.Map hostnameToPins>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*.");

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.util.Set) $r3;

     label1:
        if r4 != null goto label2;

        if r5 != null goto label2;

        return null;

     label2:
        if r4 == null goto label3;

        if r5 == null goto label3;

        r7 = new java.util.LinkedHashSet;

        specialinvoke r7.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke r7.<java.util.Set: boolean addAll(java.util.Collection)>(r4);

        interfaceinvoke r7.<java.util.Set: boolean addAll(java.util.Collection)>(r5);

        return r7;

     label3:
        if r4 == null goto label4;

        return r4;

     label4:
        return r5;
    }
