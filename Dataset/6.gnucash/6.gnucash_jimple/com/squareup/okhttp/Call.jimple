com.squareup.okhttp.Call extends java.lang.Object
volatile boolean canceled
private final com.squareup.okhttp.OkHttpClient client
com.squareup.okhttp.internal.http.HttpEngine engine
private boolean executed
com.squareup.okhttp.Request originalRequest
    void <init>(com.squareup.okhttp.OkHttpClient, com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Call r0;
        com.squareup.okhttp.OkHttpClient $r1;
        com.squareup.okhttp.Request $r2;

        r0 := @this: com.squareup.okhttp.Call;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r2 := @parameter1: com.squareup.okhttp.Request;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient copyWithDefaults()>();

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client> = $r1;

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Request originalRequest> = $r2;

        return;
    }
    static com.squareup.okhttp.Response access$100(com.squareup.okhttp.Call, boolean) throws java.io.IOException
    {
        com.squareup.okhttp.Call $r0;
        boolean $z0;
        com.squareup.okhttp.Response $r1;

        $r0 := @parameter0: com.squareup.okhttp.Call;

        $z0 := @parameter1: boolean;

        $r1 = specialinvoke $r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Response getResponseWithInterceptorChain(boolean)>($z0);

        return $r1;
    }
    static java.lang.String access$200(com.squareup.okhttp.Call)
    {
        com.squareup.okhttp.Call $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.squareup.okhttp.Call;

        $r1 = specialinvoke $r0.<com.squareup.okhttp.Call: java.lang.String toLoggableString()>();

        return $r1;
    }
    static com.squareup.okhttp.OkHttpClient access$300(com.squareup.okhttp.Call)
    {
        com.squareup.okhttp.Call $r0;
        com.squareup.okhttp.OkHttpClient r1;

        $r0 := @parameter0: com.squareup.okhttp.Call;

        r1 = $r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        return r1;
    }
    private com.squareup.okhttp.Response getResponseWithInterceptorChain(boolean) throws java.io.IOException
    {
        com.squareup.okhttp.Call r0;
        boolean $z0;
        com.squareup.okhttp.Call$ApplicationInterceptorChain r1;
        com.squareup.okhttp.Request $r2;
        com.squareup.okhttp.Response $r3;

        r0 := @this: com.squareup.okhttp.Call;

        $z0 := @parameter0: boolean;

        r1 = new com.squareup.okhttp.Call$ApplicationInterceptorChain;

        $r2 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Request originalRequest>;

        specialinvoke r1.<com.squareup.okhttp.Call$ApplicationInterceptorChain: void <init>(com.squareup.okhttp.Call,int,com.squareup.okhttp.Request,boolean)>(r0, 0, $r2, $z0);

        $r2 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Request originalRequest>;

        $r3 = interfaceinvoke r1.<com.squareup.okhttp.Interceptor$Chain: com.squareup.okhttp.Response proceed(com.squareup.okhttp.Request)>($r2);

        return $r3;
    }
    private java.lang.String toLoggableString()
    {
        com.squareup.okhttp.Call r0;
        java.net.MalformedURLException r1;
        boolean $z0;
        java.lang.String r2, $r6;
        java.net.URL $r3, $r5;
        com.squareup.okhttp.Request $r4;
        java.lang.StringBuilder $r7;

        r0 := @this: com.squareup.okhttp.Call;

        $z0 = r0.<com.squareup.okhttp.Call: boolean canceled>;

        if $z0 == 0 goto label6;

        r2 = "canceled call";

     label1:
        $r3 = new java.net.URL;

        $r4 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Request originalRequest>;

     label2:
        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Request: java.net.URL url()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r5, "/...");

        $r6 = virtualinvoke $r3.<java.net.URL: java.lang.String toString()>();

     label3:
        $r7 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $r6;

     label6:
        r2 = "call";

        goto label1;

     label7:
        r1 := @caughtexception;

        return r2;

        catch java.net.MalformedURLException from label2 to label3 with label7;
        catch java.net.MalformedURLException from label4 to label5 with label7;
    }
    public void cancel()
    {
        com.squareup.okhttp.Call r0;
        com.squareup.okhttp.internal.http.HttpEngine $r1;

        r0 := @this: com.squareup.okhttp.Call;

        r0.<com.squareup.okhttp.Call: boolean canceled> = 1;

        $r1 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        if $r1 == null goto label1;

        $r1 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r1.<com.squareup.okhttp.internal.http.HttpEngine: void disconnect()>();

     label1:
        return;
    }
    public void enqueue(com.squareup.okhttp.Callback)
    {
        com.squareup.okhttp.Call r0;
        com.squareup.okhttp.Callback $r1;

        r0 := @this: com.squareup.okhttp.Call;

        $r1 := @parameter0: com.squareup.okhttp.Callback;

        virtualinvoke r0.<com.squareup.okhttp.Call: void enqueue(com.squareup.okhttp.Callback,boolean)>($r1, 0);

        return;
    }
    void enqueue(com.squareup.okhttp.Callback, boolean)
    {
        com.squareup.okhttp.Call r0;
        com.squareup.okhttp.Callback $r1;
        boolean $z0, $z1;
        com.squareup.okhttp.Dispatcher $r2;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r4;
        com.squareup.okhttp.OkHttpClient $r5;
        com.squareup.okhttp.Call$AsyncCall $r6;

        r0 := @this: com.squareup.okhttp.Call;

        $r1 := @parameter0: com.squareup.okhttp.Callback;

        $z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        $z1 = r0.<com.squareup.okhttp.Call: boolean executed>;

        if $z1 == 0 goto label4;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already Executed");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

     label3:
        throw $r4;

     label4:
        r0.<com.squareup.okhttp.Call: boolean executed> = 1;

        exitmonitor r0;

     label5:
        $r5 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        $r2 = virtualinvoke $r5.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher getDispatcher()>();

        $r6 = new com.squareup.okhttp.Call$AsyncCall;

        specialinvoke $r6.<com.squareup.okhttp.Call$AsyncCall: void <init>(com.squareup.okhttp.Call,com.squareup.okhttp.Callback,boolean,com.squareup.okhttp.Call$1)>(r0, $r1, $z0, null);

        virtualinvoke $r2.<com.squareup.okhttp.Dispatcher: void enqueue(com.squareup.okhttp.Call$AsyncCall)>($r6);

        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
    public com.squareup.okhttp.Response execute() throws java.io.IOException
    {
        com.squareup.okhttp.Call r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2, $r7;
        com.squareup.okhttp.OkHttpClient $r3;
        com.squareup.okhttp.Dispatcher $r4;
        com.squareup.okhttp.Response $r5;
        java.io.IOException $r6;

        r0 := @this: com.squareup.okhttp.Call;

        entermonitor r0;

     label1:
        $z0 = r0.<com.squareup.okhttp.Call: boolean executed>;

        if $z0 == 0 goto label4;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already Executed");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

     label3:
        throw $r2;

     label4:
        r0.<com.squareup.okhttp.Call: boolean executed> = 1;

        exitmonitor r0;

     label5:
        $r3 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher getDispatcher()>();

        virtualinvoke $r4.<com.squareup.okhttp.Dispatcher: void executed(com.squareup.okhttp.Call)>(r0);

        $r5 = specialinvoke r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Response getResponseWithInterceptorChain(boolean)>(0);

     label6:
        if $r5 != null goto label9;

     label7:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Canceled");

        throw $r6;

     label8:
        $r7 := @caughtexception;

        $r3 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher getDispatcher()>();

        virtualinvoke $r4.<com.squareup.okhttp.Dispatcher: void finished(com.squareup.okhttp.Call)>(r0);

        throw $r7;

     label9:
        $r3 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        $r4 = virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher getDispatcher()>();

        virtualinvoke $r4.<com.squareup.okhttp.Dispatcher: void finished(com.squareup.okhttp.Call)>(r0);

        return $r5;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label7 to label8 with label8;
    }
    com.squareup.okhttp.Response getResponse(com.squareup.okhttp.Request, boolean) throws java.io.IOException
    {
        com.squareup.okhttp.Call r0;
        boolean $z0, $z1;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.RequestBody $r2;
        com.squareup.okhttp.Request$Builder $r3;
        com.squareup.okhttp.MediaType $r4;
        java.lang.String $r5;
        long $l0;
        byte $b1;
        com.squareup.okhttp.internal.http.HttpEngine $r6;
        com.squareup.okhttp.OkHttpClient $r7;
        int i2;
        java.io.IOException $r8;
        com.squareup.okhttp.Response $r9;
        com.squareup.okhttp.internal.http.RequestException r10;
        com.squareup.okhttp.internal.http.RouteException r11;
        java.net.ProtocolException $r12;
        java.lang.StringBuilder $r13;
        java.net.URL $r14;
        com.squareup.okhttp.Connection $r15;

        r0 := @this: com.squareup.okhttp.Call;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body()>();

        if $r2 == null goto label03;

        $r3 = virtualinvoke $r1.<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>();

        $r4 = virtualinvoke $r2.<com.squareup.okhttp.RequestBody: com.squareup.okhttp.MediaType contentType()>();

        if $r4 == null goto label01;

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.MediaType: java.lang.String toString()>();

        virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r5);

     label01:
        $l0 = virtualinvoke $r2.<com.squareup.okhttp.RequestBody: long contentLength()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label05;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r5);

        virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding");

     label02:
        $r1 = virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

     label03:
        $r6 = new com.squareup.okhttp.internal.http.HttpEngine;

        $r7 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        specialinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,boolean,boolean,boolean,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RouteSelector,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>($r7, $r1, 0, 0, $z0, null, null, null, null);

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine> = $r6;

        i2 = 0;

     label04:
        $z1 = r0.<com.squareup.okhttp.Call: boolean canceled>;

        if $z1 == 0 goto label06;

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Canceled");

        throw $r8;

     label05:
        virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

        virtualinvoke $r3.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>("Content-Length");

        goto label02;

     label06:
        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

     label07:
        virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void sendRequest()>();

     label08:
        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

     label09:
        virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void readResponse()>();

     label10:
        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r9 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response getResponse()>();

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r1 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request followUpRequest()>();

        if $r1 != null goto label16;

        if $z0 != 0 goto label19;

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        return $r9;

     label11:
        r10 := @caughtexception;

        $r8 = virtualinvoke r10.<com.squareup.okhttp.internal.http.RequestException: java.io.IOException getCause()>();

        throw $r8;

     label12:
        r11 := @caughtexception;

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r6 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.HttpEngine recover(com.squareup.okhttp.internal.http.RouteException)>(r11);

        if $r6 == null goto label13;

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine> = $r6;

        goto label04;

     label13:
        $r8 = virtualinvoke r11.<com.squareup.okhttp.internal.http.RouteException: java.io.IOException getLastConnectException()>();

        throw $r8;

     label14:
        $r8 := @caughtexception;

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r6 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException,okio.Sink)>($r8, null);

        if $r6 == null goto label15;

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine> = $r6;

        goto label04;

     label15:
        throw $r8;

     label16:
        i2 = i2 + 1;

        if i2 <= 20 goto label17;

        $r12 = new java.net.ProtocolException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many follow-up requests: ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.net.ProtocolException: void <init>(java.lang.String)>($r5);

        throw $r12;

     label17:
        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r14 = virtualinvoke $r1.<com.squareup.okhttp.Request: java.net.URL url()>();

        $z1 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: boolean sameConnection(java.net.URL)>($r14);

        if $z1 != 0 goto label18;

        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void releaseConnection()>();

     label18:
        $r6 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine>;

        $r15 = virtualinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection close()>();

        $r6 = new com.squareup.okhttp.internal.http.HttpEngine;

        $r7 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.OkHttpClient client>;

        specialinvoke $r6.<com.squareup.okhttp.internal.http.HttpEngine: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,boolean,boolean,boolean,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RouteSelector,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>($r7, $r1, 0, 0, $z0, $r15, null, null, $r9);

        r0.<com.squareup.okhttp.Call: com.squareup.okhttp.internal.http.HttpEngine engine> = $r6;

        goto label04;

     label19:
        return $r9;

        catch com.squareup.okhttp.internal.http.RequestException from label07 to label08 with label11;
        catch com.squareup.okhttp.internal.http.RequestException from label09 to label10 with label11;
        catch com.squareup.okhttp.internal.http.RouteException from label07 to label08 with label12;
        catch com.squareup.okhttp.internal.http.RouteException from label09 to label10 with label12;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
    }
    public boolean isCanceled()
    {
        com.squareup.okhttp.Call r0;
        boolean z0;

        r0 := @this: com.squareup.okhttp.Call;

        z0 = r0.<com.squareup.okhttp.Call: boolean canceled>;

        return z0;
    }
    java.lang.Object tag()
    {
        com.squareup.okhttp.Call r0;
        java.lang.Object $r1;
        com.squareup.okhttp.Request $r2;

        r0 := @this: com.squareup.okhttp.Call;

        $r2 = r0.<com.squareup.okhttp.Call: com.squareup.okhttp.Request originalRequest>;

        $r1 = virtualinvoke $r2.<com.squareup.okhttp.Request: java.lang.Object tag()>();

        return $r1;
    }
