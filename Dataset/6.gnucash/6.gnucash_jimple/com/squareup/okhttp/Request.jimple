com.squareup.okhttp.Request extends java.lang.Object
private final com.squareup.okhttp.RequestBody body
private volatile com.squareup.okhttp.CacheControl cacheControl
private final com.squareup.okhttp.Headers headers
private volatile java.net.URI javaNetUri
private volatile java.net.URL javaNetUrl
private final java.lang.String method
private final java.lang.Object tag
private final com.squareup.okhttp.HttpUrl url
    private void <init>(com.squareup.okhttp.Request$Builder)
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.Request$Builder $r1;
        com.squareup.okhttp.HttpUrl $r2;
        java.lang.String $r3;
        com.squareup.okhttp.Headers$Builder $r4;
        com.squareup.okhttp.Headers $r5;
        com.squareup.okhttp.RequestBody $r6;
        java.lang.Object $r7;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 := @parameter0: com.squareup.okhttp.Request$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.squareup.okhttp.Request$Builder: com.squareup.okhttp.HttpUrl access$000(com.squareup.okhttp.Request$Builder)>($r1);

        r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url> = $r2;

        $r3 = staticinvoke <com.squareup.okhttp.Request$Builder: java.lang.String access$100(com.squareup.okhttp.Request$Builder)>($r1);

        r0.<com.squareup.okhttp.Request: java.lang.String method> = $r3;

        $r4 = staticinvoke <com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder access$200(com.squareup.okhttp.Request$Builder)>($r1);

        $r5 = virtualinvoke $r4.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers> = $r5;

        $r6 = staticinvoke <com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody access$300(com.squareup.okhttp.Request$Builder)>($r1);

        r0.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body> = $r6;

        $r7 = staticinvoke <com.squareup.okhttp.Request$Builder: java.lang.Object access$400(com.squareup.okhttp.Request$Builder)>($r1);

        if $r7 == null goto label2;

        $r7 = staticinvoke <com.squareup.okhttp.Request$Builder: java.lang.Object access$400(com.squareup.okhttp.Request$Builder)>($r1);

     label1:
        r0.<com.squareup.okhttp.Request: java.lang.Object tag> = $r7;

        return;

     label2:
        $r7 = r0;

        goto label1;
    }
    void <init>(com.squareup.okhttp.Request$Builder, com.squareup.okhttp.Request$1)
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.Request$Builder $r1;
        com.squareup.okhttp.Request$1 $r2;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 := @parameter0: com.squareup.okhttp.Request$Builder;

        $r2 := @parameter1: com.squareup.okhttp.Request$1;

        specialinvoke r0.<com.squareup.okhttp.Request: void <init>(com.squareup.okhttp.Request$Builder)>($r1);

        return;
    }
    static com.squareup.okhttp.Headers access$1000(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request $r0;
        com.squareup.okhttp.Headers r1;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        r1 = $r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers>;

        return r1;
    }
    static com.squareup.okhttp.HttpUrl access$600(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request $r0;
        com.squareup.okhttp.HttpUrl r1;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        r1 = $r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        return r1;
    }
    static java.lang.String access$700(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        r1 = $r0.<com.squareup.okhttp.Request: java.lang.String method>;

        return r1;
    }
    static com.squareup.okhttp.RequestBody access$800(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request $r0;
        com.squareup.okhttp.RequestBody r1;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        r1 = $r0.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body>;

        return r1;
    }
    static java.lang.Object access$900(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.Request $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.squareup.okhttp.Request;

        r1 = $r0.<com.squareup.okhttp.Request: java.lang.Object tag>;

        return r1;
    }
    public com.squareup.okhttp.RequestBody body()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.RequestBody r1;

        r0 := @this: com.squareup.okhttp.Request;

        r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody body>;

        return r1;
    }
    public com.squareup.okhttp.CacheControl cacheControl()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.Headers $r1;
        com.squareup.okhttp.CacheControl $r2;

        r0 := @this: com.squareup.okhttp.Request;

        $r2 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.CacheControl cacheControl>;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers>;

        $r2 = staticinvoke <com.squareup.okhttp.CacheControl: com.squareup.okhttp.CacheControl parse(com.squareup.okhttp.Headers)>($r1);

        r0.<com.squareup.okhttp.Request: com.squareup.okhttp.CacheControl cacheControl> = $r2;

        return $r2;
    }
    public java.lang.String header(java.lang.String)
    {
        com.squareup.okhttp.Request r0;
        java.lang.String $r1;
        com.squareup.okhttp.Headers $r2;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers>;

        $r1 = virtualinvoke $r2.<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>($r1);

        return $r1;
    }
    public com.squareup.okhttp.Headers headers()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.Headers r1;

        r0 := @this: com.squareup.okhttp.Request;

        r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers>;

        return r1;
    }
    public java.util.List headers(java.lang.String)
    {
        com.squareup.okhttp.Request r0;
        java.lang.String $r1;
        java.util.List $r2;
        com.squareup.okhttp.Headers $r3;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers>;

        $r2 = virtualinvoke $r3.<com.squareup.okhttp.Headers: java.util.List values(java.lang.String)>($r1);

        return $r2;
    }
    public com.squareup.okhttp.HttpUrl httpUrl()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.HttpUrl r1;

        r0 := @this: com.squareup.okhttp.Request;

        r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        return r1;
    }
    public boolean isHttps()
    {
        com.squareup.okhttp.Request r0;
        boolean $z0;
        com.squareup.okhttp.HttpUrl $r1;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        $z0 = virtualinvoke $r1.<com.squareup.okhttp.HttpUrl: boolean isHttps()>();

        return $z0;
    }
    public java.lang.String method()
    {
        com.squareup.okhttp.Request r0;
        java.lang.String r1;

        r0 := @this: com.squareup.okhttp.Request;

        r1 = r0.<com.squareup.okhttp.Request: java.lang.String method>;

        return r1;
    }
    public com.squareup.okhttp.Request$Builder newBuilder()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.Request$Builder $r1;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 = new com.squareup.okhttp.Request$Builder;

        specialinvoke $r1.<com.squareup.okhttp.Request$Builder: void <init>(com.squareup.okhttp.Request,com.squareup.okhttp.Request$1)>(r0, null);

        return $r1;
    }
    public java.lang.Object tag()
    {
        com.squareup.okhttp.Request r0;
        java.lang.Object r1;

        r0 := @this: com.squareup.okhttp.Request;

        r1 = r0.<com.squareup.okhttp.Request: java.lang.Object tag>;

        return r1;
    }
    public java.lang.String toString()
    {
        com.squareup.okhttp.Request r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.squareup.okhttp.HttpUrl $r3;
        java.lang.Object $r4;

        r0 := @this: com.squareup.okhttp.Request;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request{method=");

        $r2 = r0.<com.squareup.okhttp.Request: java.lang.String method>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", url=");

        $r3 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag=");

        $r4 = r0.<com.squareup.okhttp.Request: java.lang.Object tag>;

        if $r4 == r0 goto label2;

        $r4 = r0.<com.squareup.okhttp.Request: java.lang.Object tag>;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r4 = null;

        goto label1;
    }
    public java.net.URI uri() throws java.io.IOException
    {
        com.squareup.okhttp.Request r0;
        java.lang.IllegalStateException r1;
        java.net.URI r2;
        com.squareup.okhttp.HttpUrl $r3;
        java.io.IOException $r4;
        java.lang.String $r5;

        r0 := @this: com.squareup.okhttp.Request;

        r2 = r0.<com.squareup.okhttp.Request: java.net.URI javaNetUri>;

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

     label2:
        r2 = virtualinvoke $r3.<com.squareup.okhttp.HttpUrl: java.net.URI uri()>();

     label3:
        r0.<com.squareup.okhttp.Request: java.net.URI javaNetUri> = r2;

        return r2;

     label4:
        r1 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke r1.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }
    public java.net.URL url()
    {
        com.squareup.okhttp.Request r0;
        com.squareup.okhttp.HttpUrl $r1;
        java.net.URL $r2;

        r0 := @this: com.squareup.okhttp.Request;

        $r2 = r0.<com.squareup.okhttp.Request: java.net.URL javaNetUrl>;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.HttpUrl: java.net.URL url()>();

        r0.<com.squareup.okhttp.Request: java.net.URL javaNetUrl> = $r2;

        return $r2;
    }
    public java.lang.String urlString()
    {
        com.squareup.okhttp.Request r0;
        java.lang.String $r1;
        com.squareup.okhttp.HttpUrl $r2;

        r0 := @this: com.squareup.okhttp.Request;

        $r2 = r0.<com.squareup.okhttp.Request: com.squareup.okhttp.HttpUrl url>;

        $r1 = virtualinvoke $r2.<com.squareup.okhttp.HttpUrl: java.lang.String toString()>();

        return $r1;
    }
