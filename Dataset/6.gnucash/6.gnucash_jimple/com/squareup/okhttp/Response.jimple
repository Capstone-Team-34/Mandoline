com.squareup.okhttp.Response extends java.lang.Object
private final com.squareup.okhttp.ResponseBody body
private volatile com.squareup.okhttp.CacheControl cacheControl
private com.squareup.okhttp.Response cacheResponse
private final int code
private final com.squareup.okhttp.Handshake handshake
private final com.squareup.okhttp.Headers headers
private final java.lang.String message
private com.squareup.okhttp.Response networkResponse
private final com.squareup.okhttp.Response priorResponse
private final com.squareup.okhttp.Protocol protocol
private final com.squareup.okhttp.Request request
    private void <init>(com.squareup.okhttp.Response$Builder)
    {
        com.squareup.okhttp.Response r0, $r9;
        com.squareup.okhttp.Response$Builder $r1;
        com.squareup.okhttp.Request $r2;
        com.squareup.okhttp.Protocol $r3;
        int $i0;
        java.lang.String $r4;
        com.squareup.okhttp.Handshake $r5;
        com.squareup.okhttp.Headers$Builder $r6;
        com.squareup.okhttp.Headers $r7;
        com.squareup.okhttp.ResponseBody $r8;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 := @parameter0: com.squareup.okhttp.Response$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request access$000(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request> = $r2;

        $r3 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol access$100(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol> = $r3;

        $i0 = staticinvoke <com.squareup.okhttp.Response$Builder: int access$200(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: int code> = $i0;

        $r4 = staticinvoke <com.squareup.okhttp.Response$Builder: java.lang.String access$300(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: java.lang.String message> = $r4;

        $r5 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Handshake access$400(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake handshake> = $r5;

        $r6 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder access$500(com.squareup.okhttp.Response$Builder)>($r1);

        $r7 = virtualinvoke $r6.<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>();

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers> = $r7;

        $r8 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.ResponseBody access$600(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body> = $r8;

        $r9 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$700(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response networkResponse> = $r9;

        $r9 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$800(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response cacheResponse> = $r9;

        $r9 = staticinvoke <com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$900(com.squareup.okhttp.Response$Builder)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response priorResponse> = $r9;

        return;
    }
    void <init>(com.squareup.okhttp.Response$Builder, com.squareup.okhttp.Response$1)
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Response$Builder $r1;
        com.squareup.okhttp.Response$1 $r2;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 := @parameter0: com.squareup.okhttp.Response$Builder;

        $r2 := @parameter1: com.squareup.okhttp.Response$1;

        specialinvoke r0.<com.squareup.okhttp.Response: void <init>(com.squareup.okhttp.Response$Builder)>($r1);

        return;
    }
    static com.squareup.okhttp.Request access$1100(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.Request r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request>;

        return r1;
    }
    static com.squareup.okhttp.Protocol access$1200(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.Protocol r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol>;

        return r1;
    }
    static int access$1300(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        int i0;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        i0 = $r0.<com.squareup.okhttp.Response: int code>;

        return i0;
    }
    static java.lang.String access$1400(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: java.lang.String message>;

        return r1;
    }
    static com.squareup.okhttp.Handshake access$1500(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.Handshake r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake handshake>;

        return r1;
    }
    static com.squareup.okhttp.Headers access$1600(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.Headers r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers>;

        return r1;
    }
    static com.squareup.okhttp.ResponseBody access$1700(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;
        com.squareup.okhttp.ResponseBody r1;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        r1 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body>;

        return r1;
    }
    static com.squareup.okhttp.Response access$1800(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        $r0 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response networkResponse>;

        return $r0;
    }
    static com.squareup.okhttp.Response access$1900(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        $r0 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response cacheResponse>;

        return $r0;
    }
    static com.squareup.okhttp.Response access$2000(com.squareup.okhttp.Response)
    {
        com.squareup.okhttp.Response $r0;

        $r0 := @parameter0: com.squareup.okhttp.Response;

        $r0 = $r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response priorResponse>;

        return $r0;
    }
    public com.squareup.okhttp.ResponseBody body()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.ResponseBody r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body>;

        return r1;
    }
    public com.squareup.okhttp.CacheControl cacheControl()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Headers $r1;
        com.squareup.okhttp.CacheControl $r2;

        r0 := @this: com.squareup.okhttp.Response;

        $r2 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.CacheControl cacheControl>;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers>;

        $r2 = staticinvoke <com.squareup.okhttp.CacheControl: com.squareup.okhttp.CacheControl parse(com.squareup.okhttp.Headers)>($r1);

        r0.<com.squareup.okhttp.Response: com.squareup.okhttp.CacheControl cacheControl> = $r2;

        return $r2;
    }
    public com.squareup.okhttp.Response cacheResponse()
    {
        com.squareup.okhttp.Response r0;

        r0 := @this: com.squareup.okhttp.Response;

        r0 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response cacheResponse>;

        return r0;
    }
    public java.util.List challenges()
    {
        com.squareup.okhttp.Response r0;
        int $i0;
        java.lang.String r1;
        com.squareup.okhttp.Headers $r2;
        java.util.List $r3;

        r0 := @this: com.squareup.okhttp.Response;

        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        if $i0 != 401 goto label2;

        r1 = "WWW-Authenticate";

     label1:
        $r2 = virtualinvoke r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>();

        $r3 = staticinvoke <com.squareup.okhttp.internal.http.OkHeaders: java.util.List parseChallenges(com.squareup.okhttp.Headers,java.lang.String)>($r2, r1);

        return $r3;

     label2:
        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        if $i0 != 407 goto label3;

        r1 = "Proxy-Authenticate";

        goto label1;

     label3:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }
    public int code()
    {
        com.squareup.okhttp.Response r0;
        int i0;

        r0 := @this: com.squareup.okhttp.Response;

        i0 = r0.<com.squareup.okhttp.Response: int code>;

        return i0;
    }
    public com.squareup.okhttp.Handshake handshake()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Handshake r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake handshake>;

        return r1;
    }
    public java.lang.String header(java.lang.String)
    {
        com.squareup.okhttp.Response r0;
        java.lang.String $r1;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.squareup.okhttp.Response: java.lang.String header(java.lang.String,java.lang.String)>($r1, null);

        return $r1;
    }
    public java.lang.String header(java.lang.String, java.lang.String)
    {
        com.squareup.okhttp.Response r0;
        java.lang.String $r1, $r2;
        com.squareup.okhttp.Headers $r3;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers>;

        $r1 = virtualinvoke $r3.<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>($r1);

        if $r1 == null goto label1;

        return $r1;

     label1:
        return $r2;
    }
    public com.squareup.okhttp.Headers headers()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Headers r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers>;

        return r1;
    }
    public java.util.List headers(java.lang.String)
    {
        com.squareup.okhttp.Response r0;
        java.lang.String $r1;
        java.util.List $r2;
        com.squareup.okhttp.Headers $r3;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers>;

        $r2 = virtualinvoke $r3.<com.squareup.okhttp.Headers: java.util.List values(java.lang.String)>($r1);

        return $r2;
    }
    public boolean isRedirect()
    {
        com.squareup.okhttp.Response r0;
        int $i0;

        r0 := @this: com.squareup.okhttp.Response;

        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        lookupswitch($i0)
        {
            case 300: goto label2;
            case 301: goto label2;
            case 302: goto label2;
            case 303: goto label2;
            case 304: goto label1;
            case 305: goto label1;
            case 306: goto label1;
            case 307: goto label2;
            case 308: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }
    public boolean isSuccessful()
    {
        com.squareup.okhttp.Response r0;
        int $i0;

        r0 := @this: com.squareup.okhttp.Response;

        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        if $i0 < 200 goto label1;

        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        if $i0 >= 300 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.String message()
    {
        com.squareup.okhttp.Response r0;
        java.lang.String r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: java.lang.String message>;

        return r1;
    }
    public com.squareup.okhttp.Response networkResponse()
    {
        com.squareup.okhttp.Response r0;

        r0 := @this: com.squareup.okhttp.Response;

        r0 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response networkResponse>;

        return r0;
    }
    public com.squareup.okhttp.Response$Builder newBuilder()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Response$Builder $r1;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 = new com.squareup.okhttp.Response$Builder;

        specialinvoke $r1.<com.squareup.okhttp.Response$Builder: void <init>(com.squareup.okhttp.Response,com.squareup.okhttp.Response$1)>(r0, null);

        return $r1;
    }
    public com.squareup.okhttp.Response priorResponse()
    {
        com.squareup.okhttp.Response r0;

        r0 := @this: com.squareup.okhttp.Response;

        r0 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Response priorResponse>;

        return r0;
    }
    public com.squareup.okhttp.Protocol protocol()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Protocol r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol>;

        return r1;
    }
    public com.squareup.okhttp.Request request()
    {
        com.squareup.okhttp.Response r0;
        com.squareup.okhttp.Request r1;

        r0 := @this: com.squareup.okhttp.Response;

        r1 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request>;

        return r1;
    }
    public java.lang.String toString()
    {
        com.squareup.okhttp.Response r0;
        java.lang.StringBuilder $r1;
        com.squareup.okhttp.Protocol $r2;
        int $i0;
        java.lang.String $r3;
        com.squareup.okhttp.Request $r4;

        r0 := @this: com.squareup.okhttp.Response;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response{protocol=");

        $r2 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=");

        $i0 = r0.<com.squareup.okhttp.Response: int code>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message=");

        $r3 = r0.<com.squareup.okhttp.Response: java.lang.String message>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", url=");

        $r4 = r0.<com.squareup.okhttp.Response: com.squareup.okhttp.Request request>;

        $r3 = virtualinvoke $r4.<com.squareup.okhttp.Request: java.lang.String urlString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
