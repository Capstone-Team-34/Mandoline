com.squareup.okhttp.Cache$1 extends java.lang.Object implements com.squareup.okhttp.internal.InternalCache
final com.squareup.okhttp.Cache this$0
    void <init>(com.squareup.okhttp.Cache)
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Cache $r1;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.Cache;

        r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public com.squareup.okhttp.Response get(com.squareup.okhttp.Request) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Response $r2;
        com.squareup.okhttp.Cache $r3;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r3 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        $r2 = virtualinvoke $r3.<com.squareup.okhttp.Cache: com.squareup.okhttp.Response get(com.squareup.okhttp.Request)>($r1);

        return $r2;
    }
    public com.squareup.okhttp.internal.http.CacheRequest put(com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Response $r1;
        com.squareup.okhttp.internal.http.CacheRequest $r2;
        com.squareup.okhttp.Cache $r3;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        $r3 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        $r2 = staticinvoke <com.squareup.okhttp.Cache: com.squareup.okhttp.internal.http.CacheRequest access$000(com.squareup.okhttp.Cache,com.squareup.okhttp.Response)>($r3, $r1);

        return $r2;
    }
    public void remove(com.squareup.okhttp.Request) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Cache $r2;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        staticinvoke <com.squareup.okhttp.Cache: void access$100(com.squareup.okhttp.Cache,com.squareup.okhttp.Request)>($r2, $r1);

        return;
    }
    public void trackConditionalCacheHit()
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Cache $r1;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        staticinvoke <com.squareup.okhttp.Cache: void access$300(com.squareup.okhttp.Cache)>($r1);

        return;
    }
    public void trackResponse(com.squareup.okhttp.internal.http.CacheStrategy)
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.internal.http.CacheStrategy $r1;
        com.squareup.okhttp.Cache $r2;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.internal.http.CacheStrategy;

        $r2 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        staticinvoke <com.squareup.okhttp.Cache: void access$400(com.squareup.okhttp.Cache,com.squareup.okhttp.internal.http.CacheStrategy)>($r2, $r1);

        return;
    }
    public void update(com.squareup.okhttp.Response, com.squareup.okhttp.Response) throws java.io.IOException
    {
        com.squareup.okhttp.Cache$1 r0;
        com.squareup.okhttp.Response $r1, $r2;
        com.squareup.okhttp.Cache $r3;

        r0 := @this: com.squareup.okhttp.Cache$1;

        $r1 := @parameter0: com.squareup.okhttp.Response;

        $r2 := @parameter1: com.squareup.okhttp.Response;

        $r3 = r0.<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Cache this$0>;

        staticinvoke <com.squareup.okhttp.Cache: void access$200(com.squareup.okhttp.Cache,com.squareup.okhttp.Response,com.squareup.okhttp.Response)>($r3, $r1, $r2);

        return;
    }
