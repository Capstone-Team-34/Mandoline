com.dropbox.sync.android.NativeLib extends java.lang.Object
private static final java.lang.String TAG
private static final java.lang.Object mLoadLock
private static boolean mLoaded
private static final com.dropbox.sync.android.NativeLib sInstance
private final com.dropbox.sync.android.NativeHttp mHttpKeepalive
private java.io.File mTempDir
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        com.dropbox.sync.android.NativeLib $r3;

        $r1 = class "Lcom/dropbox/sync/android/NativeLib;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.NativeLib: java.lang.String TAG> = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.dropbox.sync.android.NativeLib: java.lang.Object mLoadLock> = $r2;

        <com.dropbox.sync.android.NativeLib: boolean mLoaded> = 0;

        staticinvoke <com.dropbox.sync.android.NativeLib: void ensureLoaded()>();

        staticinvoke <com.dropbox.sync.android.NativeLib: void nativeClassInit()>();

        $r3 = new com.dropbox.sync.android.NativeLib;

        specialinvoke $r3.<com.dropbox.sync.android.NativeLib: void <init>()>();

        <com.dropbox.sync.android.NativeLib: com.dropbox.sync.android.NativeLib sInstance> = $r3;

        return;
    }
    private void <init>()
    {
        com.dropbox.sync.android.NativeLib r0;
        com.dropbox.sync.android.NativeHttp $r1;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.NativeLib: java.io.File mTempDir> = null;

        $r1 = new com.dropbox.sync.android.NativeHttp;

        specialinvoke $r1.<com.dropbox.sync.android.NativeHttp: void <init>()>();

        r0.<com.dropbox.sync.android.NativeLib: com.dropbox.sync.android.NativeHttp mHttpKeepalive> = $r1;

        return;
    }
    public static void ensureLoaded()
    {
        java.lang.UnsatisfiedLinkError r0, r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r2 = <com.dropbox.sync.android.NativeLib: java.lang.Object mLoadLock>;

        entermonitor $r2;

     label01:
        $z0 = <com.dropbox.sync.android.NativeLib: boolean mLoaded>;

        if $z0 != 0 goto label05;

        $z0 = staticinvoke <com.dropbox.sync.android.DbxNativeLibConfig: boolean shouldLoadLibrary()>();

     label02:
        if $z0 == 0 goto label14;

     label03:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("DropboxSync");

     label04:
        <com.dropbox.sync.android.NativeLib: boolean mLoaded> = 1;

     label05:
        exitmonitor $r2;

     label06:
        return;

     label07:
        r0 := @caughtexception;

     label08:
        $z0 = staticinvoke <com.dropbox.sync.android.NativeLib: boolean nativeLibIsLoaded()>();

        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z0);

     label09:
        goto label04;

     label10:
        r1 := @caughtexception;

     label11:
        throw r0;

     label12:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r3;

     label14:
        $z0 = staticinvoke <com.dropbox.sync.android.NativeLib: boolean nativeLibIsLoaded()>();

        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z0);

        <com.dropbox.sync.android.NativeLib: boolean mLoaded> = 1;

     label15:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.UnsatisfiedLinkError from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label06 with label12;
        catch java.lang.UnsatisfiedLinkError from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label11 to label13 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }
    static com.dropbox.sync.android.DbxThrowable exceptionFrom(java.lang.String, int, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0;
        com.dropbox.sync.android.DbxError $r3;
        com.dropbox.sync.android.DbxThrowable $r4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError fromNative(int)>($i0);

        $r4 = staticinvoke <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxThrowable exceptionFrom(com.dropbox.sync.android.DbxError,java.lang.String,java.lang.String,java.lang.String)>($r3, $r0, $r1, $r2);

        return $r4;
    }
    public static com.dropbox.sync.android.NativeLib getInstance()
    {
        com.dropbox.sync.android.NativeLib r0;

        r0 = <com.dropbox.sync.android.NativeLib: com.dropbox.sync.android.NativeLib sInstance>;

        return r0;
    }
private static native void nativeClassInit() { 
// no body
} 
private native long nativeCreatePath(java.lang.String) { 
// no body
} 
private native java.lang.String nativeGetCanonicalPath(long) { 
// no body
} 
private native java.lang.String nativeGetHashedPath(long) { 
// no body
} 
private native java.lang.String nativeGetOriginalPath(long) { 
// no body
} 
private native long nativeIncrementPathRef(long) { 
// no body
} 
private static native boolean nativeLibIsLoaded() { 
// no body
} 
private native void nativeReleasePathRef(long) { 
// no body
} 
private native void nativeSetup(java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
    static void reportCrash()
    {
        java.lang.Throwable r0;
        com.dropbox.sync.android.DbxRuntimeException$Internal r1;
        android.app.ApplicationErrorReport$CrashInfo r2;
        int $i0;
        java.lang.Class $r3, $r9;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7, $r8;
        java.lang.String $r10, $r12;
        java.lang.StringBuilder $r11;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label2:
        if $i0 < 10 goto label5;

     label3:
        r1 = new com.dropbox.sync.android.DbxRuntimeException$Internal;

        specialinvoke r1.<com.dropbox.sync.android.DbxRuntimeException$Internal: void <init>(java.lang.String)>("Terminating due to exception in native code");

        r2 = new android.app.ApplicationErrorReport$CrashInfo;

        specialinvoke r2.<android.app.ApplicationErrorReport$CrashInfo: void <init>(java.lang.Throwable)>(r1);

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.android.internal.os.RuntimeInit");

        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getApplicationObject", $r4);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r6);

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.ActivityManagerNative");

        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDefault", $r4);

        $r6 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r6);

        $r3 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = newarray (java.lang.Class)[2];

        $r4[0] = class "Landroid/os/IBinder;";

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4[1] = $r9;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("handleApplicationCrash", $r4);

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r7;

        $r6[1] = r2;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r8, $r6);

     label4:
        return;

     label5:
        $r10 = <com.dropbox.sync.android.NativeLib: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t force crash dialog on API ");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - just terminating instead.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, $r12);

     label6:
        return;

     label7:
        r0 := @caughtexception;

        $r10 = <com.dropbox.sync.android.NativeLib: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Exception trying to report crash", r0);

        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    private static void throwFrom(java.lang.String, int, java.lang.String, java.lang.String) throws com.dropbox.sync.android.DbxException, com.dropbox.sync.android.DbxRuntimeException
    {
        java.lang.String $r0, $r1, $r2;
        int $i0;
        com.dropbox.sync.android.DbxThrowable $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <com.dropbox.sync.android.NativeLib: com.dropbox.sync.android.DbxThrowable exceptionFrom(java.lang.String,int,java.lang.String,java.lang.String)>($r0, $i0, $r1, $r2);

        interfaceinvoke $r3.<com.dropbox.sync.android.DbxThrowable: void rethrow()>();

        return;
    }
    public long createPath(java.lang.String)
    {
        com.dropbox.sync.android.NativeLib r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $r1 := @parameter0: java.lang.String;

        $l0 = specialinvoke r0.<com.dropbox.sync.android.NativeLib: long nativeCreatePath(java.lang.String)>($r1);

        return $l0;
    }
    public java.lang.String getCanonicalPath(long)
    {
        com.dropbox.sync.android.NativeLib r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.dropbox.sync.android.NativeLib: java.lang.String nativeGetCanonicalPath(long)>($l0);

        return $r1;
    }
    public java.lang.String getHashedPath(long)
    {
        com.dropbox.sync.android.NativeLib r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.dropbox.sync.android.NativeLib: java.lang.String nativeGetHashedPath(long)>($l0);

        return $r1;
    }
    public java.lang.String getOriginalPath(long)
    {
        com.dropbox.sync.android.NativeLib r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.dropbox.sync.android.NativeLib: java.lang.String nativeGetOriginalPath(long)>($l0);

        return $r1;
    }
    public java.io.File getTempDir()
    {
        com.dropbox.sync.android.NativeLib r0;
        java.io.File r1;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        r1 = r0.<com.dropbox.sync.android.NativeLib: java.io.File mTempDir>;

        return r1;
    }
    public void incrementPathRef(long)
    {
        com.dropbox.sync.android.NativeLib r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.dropbox.sync.android.NativeLib: long nativeIncrementPathRef(long)>($l0);

        return;
    }
    public void releasePathRef(long)
    {
        com.dropbox.sync.android.NativeLib r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.dropbox.sync.android.NativeLib: void nativeReleasePathRef(long)>($l0);

        return;
    }
public native void setLogDir(java.lang.String) { 
// no body
} 
    public void setTempDir(java.io.File) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeLib r0;
        java.io.File $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.dropbox.sync.android.NativeLib;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        specialinvoke r0.<com.dropbox.sync.android.NativeLib: void nativeSetup(java.lang.String)>($r2);

        entermonitor r0;

     label1:
        r0.<com.dropbox.sync.android.NativeLib: java.io.File mTempDir> = $r1;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
