com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner extends java.lang.Object implements java.lang.Runnable
private int mCurRetrySeconds
private final int mInitialRetrySeconds
protected final com.dropbox.sync.android.CoreLogger mLog
private final int mMaxRetrySeconds
final com.dropbox.sync.android.CoreBackgroundProcessor this$0
    public void <init>(com.dropbox.sync.android.CoreBackgroundProcessor, com.dropbox.sync.android.CoreLogger)
    {
        com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner r0;
        com.dropbox.sync.android.CoreBackgroundProcessor $r1;
        com.dropbox.sync.android.CoreLogger $r2;

        r0 := @this: com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner;

        $r1 := @parameter0: com.dropbox.sync.android.CoreBackgroundProcessor;

        $r2 := @parameter1: com.dropbox.sync.android.CoreLogger;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreLogger mLog> = $r2;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mInitialRetrySeconds> = -1;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mMaxRetrySeconds> = -1;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mCurRetrySeconds> = 0;

        return;
    }
    public void <init>(com.dropbox.sync.android.CoreBackgroundProcessor, com.dropbox.sync.android.CoreLogger, int, int)
    {
        com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner r0;
        com.dropbox.sync.android.CoreBackgroundProcessor $r1;
        com.dropbox.sync.android.CoreLogger $r2;
        int $i0, $i1;

        r0 := @this: com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner;

        $r1 := @parameter0: com.dropbox.sync.android.CoreBackgroundProcessor;

        $r2 := @parameter1: com.dropbox.sync.android.CoreLogger;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreLogger mLog> = $r2;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mInitialRetrySeconds> = $i0;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mMaxRetrySeconds> = $i1;

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mCurRetrySeconds> = 0;

        return;
    }
    private int getNextRetrySeconds()
    {
        com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner r0;
        int $i0, $i1, $i2;
        java.lang.Throwable $r1;

        r0 := @this: com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner;

        entermonitor r0;

     label1:
        $i1 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mInitialRetrySeconds>;

        $i0 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mCurRetrySeconds>;

        $i2 = $i0 * 2;

        $i0 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mMaxRetrySeconds>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mCurRetrySeconds> = $i1;

        $i1 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mCurRetrySeconds>;

     label2:
        exitmonitor r0;

        return $i1;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
public abstract boolean attemptRun() { 
// no body
} 
    public void run()
    {
        com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner r0;
        boolean $z0;
        int $i0;
        com.dropbox.sync.android.CoreLogger $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        com.dropbox.sync.android.CoreBackgroundProcessor $r5;
        java.util.concurrent.ScheduledExecutorService $r6;
        long $l1;
        java.util.concurrent.TimeUnit $r7;
        java.lang.RuntimeException r8;
        java.lang.Thread $r9;
        java.lang.Throwable $r10;
        java.lang.Error r11;

        r0 := @this: com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner;

     label01:
        $z0 = virtualinvoke r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: boolean attemptRun()>();

     label02:
        if $z0 != 0 goto label18;

     label03:
        $i0 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int mMaxRetrySeconds>;

     label04:
        if $i0 <= 0 goto label18;

     label05:
        $i0 = specialinvoke r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: int getNextRetrySeconds()>();

     label06:
        $r1 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreLogger mLog>;

     label07:
        $r2 = staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: java.lang.String access$000()>();

     label08:
        $r3 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background task will retry in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, $r4);

     label10:
        $r5 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0>;

     label11:
        staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: void access$100(com.dropbox.sync.android.CoreBackgroundProcessor)>($r5);

     label12:
        $r5 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0>;

     label13:
        $r6 = staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: java.util.concurrent.ScheduledExecutorService access$200(com.dropbox.sync.android.CoreBackgroundProcessor)>($r5);

     label14:
        $l1 = (long) $i0;

     label15:
        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label16:
        interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r0, $l1, $r7);

     label17:
        $r5 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0>;

        staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: void access$300(com.dropbox.sync.android.CoreBackgroundProcessor)>($r5);

        return;

     label18:
        $r1 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreLogger mLog>;

     label19:
        $r2 = staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: java.lang.String access$000()>();

        virtualinvoke $r1.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, "Background task complete.");

     label20:
        goto label17;

     label21:
        r8 := @caughtexception;

     label22:
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: java.lang.String access$000()>();

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionOnApiThread(java.lang.Thread,java.lang.Throwable,java.lang.String)>($r9, r8, $r2);

        throw r8;

     label23:
        $r10 := @caughtexception;

        $r5 = r0.<com.dropbox.sync.android.CoreBackgroundProcessor$BackgroundRunner: com.dropbox.sync.android.CoreBackgroundProcessor this$0>;

        staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: void access$300(com.dropbox.sync.android.CoreBackgroundProcessor)>($r5);

        throw $r10;

     label24:
        r11 := @caughtexception;

     label25:
        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = staticinvoke <com.dropbox.sync.android.CoreBackgroundProcessor: java.lang.String access$000()>();

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionOnApiThread(java.lang.Thread,java.lang.Throwable,java.lang.String)>($r9, r11, $r2);

        throw r11;

     label26:
        nop;

        catch java.lang.RuntimeException from label01 to label02 with label21;
        catch java.lang.RuntimeException from label03 to label04 with label21;
        catch java.lang.RuntimeException from label05 to label08 with label21;
        catch java.lang.RuntimeException from label09 to label14 with label21;
        catch java.lang.RuntimeException from label16 to label17 with label21;
        catch java.lang.Error from label01 to label02 with label24;
        catch java.lang.Error from label03 to label04 with label24;
        catch java.lang.Error from label05 to label14 with label24;
        catch java.lang.Error from label15 to label17 with label24;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.RuntimeException from label18 to label20 with label21;
        catch java.lang.Error from label18 to label20 with label24;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
    }
