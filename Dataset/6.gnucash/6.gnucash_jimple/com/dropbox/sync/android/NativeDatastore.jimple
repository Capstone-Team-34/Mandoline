com.dropbox.sync.android.NativeDatastore extends java.lang.Object
static final boolean $assertionsDisabled
public static final int SYNC_ACTIVE
public static final int SYNC_CONNECTED
public static final int SYNC_DOWNLOADING
public static final int SYNC_INCOMING
public static final int SYNC_OUTGOING
public static final int SYNC_STUCK
public static final int SYNC_UPLOADING
private static java.lang.String TAG
private final com.dropbox.sync.android.CoreLogger mLog
private final long mNativeHandle
private java.lang.ref.WeakReference mOwner
    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        java.lang.String $r1;

        $r0 = class "Lcom/dropbox/sync/android/NativeDatastore;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.dropbox.sync.android.NativeDatastore: boolean $assertionsDisabled> = $z0;

        $r0 = class "Lcom/dropbox/sync/android/NativeDatastore;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.NativeDatastore: java.lang.String TAG> = $r1;

        staticinvoke <com.dropbox.sync.android.NativeLib: void ensureLoaded()>();

        staticinvoke <com.dropbox.sync.android.NativeDatastore: void nativeClassInit()>();

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>(long, com.dropbox.sync.android.CoreLogger) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;
        com.dropbox.sync.android.CoreLogger $r1;
        boolean $z0;
        byte $b1;
        java.lang.AssertionError $r2;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 := @parameter0: long;

        $r1 := @parameter1: com.dropbox.sync.android.CoreLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <com.dropbox.sync.android.NativeDatastore: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Invalid native Datastore handle.");

        throw $r2;

     label1:
        r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle> = $l0;

        r0.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.CoreLogger mLog> = $r1;

        specialinvoke r0.<com.dropbox.sync.android.NativeDatastore: void nativeInit(long)>($l0);

        return;
    }
    static com.dropbox.sync.android.CoreLogger access$000(com.dropbox.sync.android.NativeDatastore)
    {
        com.dropbox.sync.android.NativeDatastore $r0;
        com.dropbox.sync.android.CoreLogger r1;

        $r0 := @parameter0: com.dropbox.sync.android.NativeDatastore;

        r1 = $r0.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.CoreLogger mLog>;

        return r1;
    }
    static java.lang.String access$100()
    {
        java.lang.String r0;

        r0 = <com.dropbox.sync.android.NativeDatastore: java.lang.String TAG>;

        return r0;
    }
    private void addRecord(java.util.Map, com.dropbox.sync.android.DbxDatastore, java.lang.String, long) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.util.Map r1;
        com.dropbox.sync.android.DbxDatastore $r2;
        java.lang.String $r3;
        long $l0;
        java.lang.Object $r4;
        java.util.Set r5;
        com.dropbox.sync.android.DbxTable $r6;
        java.util.HashSet $r7;
        com.dropbox.sync.android.DbxRecord $r8;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: com.dropbox.sync.android.DbxDatastore;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.util.Set) $r4;

        if r5 != null goto label1;

        $r7 = new java.util.HashSet;

        r5 = $r7;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

     label1:
        $r8 = new com.dropbox.sync.android.DbxRecord;

        $r6 = virtualinvoke r0.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxTable getTable(com.dropbox.sync.android.DbxDatastore,java.lang.String)>($r2, $r3);

        specialinvoke $r8.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>($r6, $l0);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r8);

        return;
    }
    private void addTable(java.util.Set, com.dropbox.sync.android.DbxDatastore, java.lang.String, long)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.util.Set r1;
        com.dropbox.sync.android.DbxDatastore $r2;
        java.lang.String $r3;
        long $l0;
        com.dropbox.sync.android.DbxTable $r4;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: com.dropbox.sync.android.DbxDatastore;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r4 = new com.dropbox.sync.android.DbxTable;

        specialinvoke $r4.<com.dropbox.sync.android.DbxTable: void <init>(com.dropbox.sync.android.DbxDatastore,java.lang.String,long)>($r2, $r3, $l0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4);

        return;
    }
    static com.dropbox.sync.android.DbxDatastore$Role fromNativeRole(long)
    {
        long $l0;
        byte $b1;
        com.dropbox.sync.android.DbxDatastore$Role r0;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 3000L;

        if $b1 < 0 goto label1;

        r0 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role OWNER>;

        return r0;

     label1:
        $b1 = $l0 cmp 2000L;

        if $b1 < 0 goto label2;

        r0 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role EDITOR>;

        return r0;

     label2:
        $b1 = $l0 cmp 1000L;

        if $b1 < 0 goto label3;

        r0 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role VIEWER>;

        return r0;

     label3:
        r0 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role NONE>;

        return r0;
    }
private static native void nativeClassInit() { 
// no body
} 
private static native void nativeDeinit(long) { 
// no body
} 
private static native void nativeDeleteRole(long, java.lang.String) { 
// no body
} 
private static native void nativeFree(long) { 
// no body
} 
private static native int nativeGetEffectiveRole(long) { 
// no body
} 
private static native java.lang.String nativeGetId(long) { 
// no body
} 
private static native long nativeGetMtime(long) { 
// no body
} 
private static native long nativeGetRecordCount(long) { 
// no body
} 
private static native int nativeGetRole(long, java.lang.String) { 
// no body
} 
private static native long nativeGetSize(long) { 
// no body
} 
private static native com.dropbox.sync.android.DbxDatastoreStatus nativeGetStatus(long, com.dropbox.sync.android.NativeDatastore$DatastoreStatusBuilder) { 
// no body
} 
private static native long nativeGetTable(long, java.lang.String) { 
// no body
} 
private native void nativeGetTables(long, com.dropbox.sync.android.DbxDatastore, java.util.Set) { 
// no body
} 
private static native java.lang.String nativeGetTitle(long) { 
// no body
} 
private static native long nativeGetUnsyncedChangesSize(long) { 
// no body
} 
private native void nativeInit(long) throws com.dropbox.sync.android.DbxException { 
// no body
} 
public static native boolean nativeIsValidId(java.lang.String) { 
// no body
} 
private static native void nativeSetRole(long, java.lang.String, long) { 
// no body
} 
private native void nativeSetTitle(long, java.lang.String) { 
// no body
} 
private native void nativeSync(long, com.dropbox.sync.android.DbxDatastore, java.util.Map) throws com.dropbox.sync.android.DbxException { 
// no body
} 
    private void statusCallback()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        com.dropbox.sync.android.DbxDatastore r3;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 = r0.<com.dropbox.sync.android.NativeDatastore: java.lang.ref.WeakReference mOwner>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (com.dropbox.sync.android.DbxDatastore) $r2;

        if r3 == null goto label1;

        virtualinvoke r3.<com.dropbox.sync.android.DbxDatastore: void statusCallback()>();

     label1:
        return;
    }
    static long toNativeRole(com.dropbox.sync.android.DbxDatastore$Role)
    {
        com.dropbox.sync.android.DbxDatastore$Role $r0;
        int $i0;
        int[] $r1;

        $r0 := @parameter0: com.dropbox.sync.android.DbxDatastore$Role;

        $r1 = <com.dropbox.sync.android.NativeDatastore$1: int[] $SwitchMap$com$dropbox$sync$android$DbxDatastore$Role>;

        $i0 = virtualinvoke $r0.<com.dropbox.sync.android.DbxDatastore$Role: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        return 1000L;

     label3:
        return 2000L;

     label4:
        return 3000L;
    }
    public void close()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastore: void nativeDeinit(long)>($l0);

        return;
    }
    public void deleteRole(java.lang.String)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastore: void nativeDeleteRole(long,java.lang.String)>($l0, $r1);

        return;
    }
    protected void finalize() throws java.lang.Throwable
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastore: void nativeFree(long)>($l0);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }
    public com.dropbox.sync.android.DbxDatastore$Role getEffectiveRole()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;
        int $i1;
        com.dropbox.sync.android.DbxDatastore$Role $r1;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $i1 = staticinvoke <com.dropbox.sync.android.NativeDatastore: int nativeGetEffectiveRole(long)>($l0);

        $l0 = (long) $i1;

        $r1 = staticinvoke <com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastore$Role fromNativeRole(long)>($l0);

        return $r1;
    }
    public java.lang.String getId()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.NativeDatastore: java.lang.String nativeGetId(long)>($l0);

        return $r1;
    }
    public java.util.Date getMtime()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;
        byte $b1;
        java.util.Date $r1;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long nativeGetMtime(long)>($l0);

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        return $r1;

     label1:
        return null;
    }
    public long getRecordCount()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long nativeGetRecordCount(long)>($l0);

        return $l0;
    }
    public int getRole(java.lang.String)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        int $i0;
        long $l1;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: java.lang.String;

        $l1 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $i0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: int nativeGetRole(long,java.lang.String)>($l1, $r1);

        return $i0;
    }
    public long getSize()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long nativeGetSize(long)>($l0);

        return $l0;
    }
    public com.dropbox.sync.android.DbxDatastoreStatus getStatus()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        com.dropbox.sync.android.NativeDatastore$DatastoreStatusBuilder $r1;
        com.dropbox.sync.android.DbxDatastoreStatus $r2;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $r1 = new com.dropbox.sync.android.NativeDatastore$DatastoreStatusBuilder;

        specialinvoke $r1.<com.dropbox.sync.android.NativeDatastore$DatastoreStatusBuilder: void <init>(com.dropbox.sync.android.NativeDatastore)>(r0);

        $r2 = staticinvoke <com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastoreStatus nativeGetStatus(long,com.dropbox.sync.android.NativeDatastore$DatastoreStatusBuilder)>($l0, $r1);

        return $r2;
    }
    public com.dropbox.sync.android.DbxTable getTable(com.dropbox.sync.android.DbxDatastore, java.lang.String)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.lang.String $r2;
        com.dropbox.sync.android.DbxTable $r3;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore;

        $r2 := @parameter1: java.lang.String;

        $r3 = new com.dropbox.sync.android.DbxTable;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long nativeGetTable(long,java.lang.String)>($l0, $r2);

        specialinvoke $r3.<com.dropbox.sync.android.DbxTable: void <init>(com.dropbox.sync.android.DbxDatastore,java.lang.String,long)>($r1, $r2, $l0);

        return $r3;
    }
    public java.util.Set getTables(com.dropbox.sync.android.DbxDatastore)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.util.HashSet r2;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        specialinvoke r0.<com.dropbox.sync.android.NativeDatastore: void nativeGetTables(long,com.dropbox.sync.android.DbxDatastore,java.util.Set)>($l0, $r1, r2);

        return r2;
    }
    public java.lang.String getTitle()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.NativeDatastore: java.lang.String nativeGetTitle(long)>($l0);

        return $r1;
    }
    public long getUnsyncedChangesSize()
    {
        com.dropbox.sync.android.NativeDatastore r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long nativeGetUnsyncedChangesSize(long)>($l0);

        return $l0;
    }
    public void setOwner(com.dropbox.sync.android.DbxDatastore)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.lang.NullPointerException $r2;
        java.lang.ref.WeakReference $r3;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r4;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Owner must be non-null.");

        throw $r2;

     label1:
        $r3 = r0.<com.dropbox.sync.android.NativeDatastore: java.lang.ref.WeakReference mOwner>;

        if $r3 == null goto label2;

        $r4 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r4.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("Owner must be set only once.");

        throw $r4;

     label2:
        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.dropbox.sync.android.NativeDatastore: java.lang.ref.WeakReference mOwner> = $r3;

        return;
    }
    public void setRole(java.lang.String, long)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        long $l0, $l1;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $l1 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastore: void nativeSetRole(long,java.lang.String,long)>($l1, $r1, $l0);

        return;
    }
    public void setTitle(java.lang.String)
    {
        com.dropbox.sync.android.NativeDatastore r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        specialinvoke r0.<com.dropbox.sync.android.NativeDatastore: void nativeSetTitle(long,java.lang.String)>($l0, $r1);

        return;
    }
    public java.util.Map sync(com.dropbox.sync.android.DbxDatastore) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastore r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.util.HashMap r2;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $l0 = r0.<com.dropbox.sync.android.NativeDatastore: long mNativeHandle>;

        specialinvoke r0.<com.dropbox.sync.android.NativeDatastore: void nativeSync(long,com.dropbox.sync.android.DbxDatastore,java.util.Map)>($l0, $r1, r2);

        return r2;
    }
