com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper extends javax.net.ssl.SSLSocketFactory
private static javax.net.ssl.SSLSocketFactory sInstance
private static final java.lang.Object sStaticInitLock
private final javax.net.ssl.SSLSocketFactory mBase
    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: java.lang.Object sStaticInitLock> = $r0;

        <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory sInstance> = null;

        return;
    }
    private void <init>(javax.net.ssl.SSLSocketFactory)
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        javax.net.ssl.SSLSocketFactory $r1;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        specialinvoke r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

        r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase> = $r1;

        return;
    }
    private static void checkCanceledRequestOnThread() throws java.io.IOException
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        com.dropbox.sync.android.CoreStandardHttpRequestor$SingleRequestImpl r2;

        $r0 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.ThreadLocal access$1100()>();

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.dropbox.sync.android.CoreStandardHttpRequestor$SingleRequestImpl) $r1;

        if r2 == null goto label1;

        virtualinvoke r2.<com.dropbox.sync.android.CoreStandardHttpRequestor$SingleRequestImpl: void checkCanceled()>();

     label1:
        return;
    }
    public static javax.net.ssl.SSLSocketFactory getInstance() throws javax.net.ssl.SSLException
    {
        javax.net.ssl.TrustManager[] r0;
        java.lang.Object $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.security.KeyStore $r3;
        com.dropbox.sync.android.CoreStandardHttpRequestor$DropboxX509TrustManager $r4;
        javax.net.ssl.SSLContext $r5;
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper $r6;
        javax.net.ssl.SSLException r7;
        java.lang.Throwable $r8;
        java.lang.RuntimeException r9;
        java.lang.Exception r10;

        $r1 = <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: java.lang.Object sStaticInitLock>;

        entermonitor $r1;

     label01:
        $r2 = <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory sInstance>;

     label02:
        if $r2 != null goto label12;

     label03:
        $r3 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: java.security.KeyStore loadKeyStore()>();

     label04:
        r0 = newarray (javax.net.ssl.TrustManager)[1];

     label05:
        $r4 = new com.dropbox.sync.android.CoreStandardHttpRequestor$DropboxX509TrustManager;

     label06:
        specialinvoke $r4.<com.dropbox.sync.android.CoreStandardHttpRequestor$DropboxX509TrustManager: void <init>(java.security.KeyStore)>($r3);

     label07:
        r0[0] = $r4;

     label08:
        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, r0, null);

        $r2 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label09:
        $r6 = new com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

     label10:
        specialinvoke $r6.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void <init>(javax.net.ssl.SSLSocketFactory)>($r2);

     label11:
        <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory sInstance> = $r6;

     label12:
        $r2 = <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory sInstance>;

        exitmonitor $r1;

     label13:
        return $r2;

     label14:
        r7 := @caughtexception;

        throw r7;

     label15:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label16:
        throw $r8;

     label17:
        r9 := @caughtexception;

     label18:
        throw r9;

     label19:
        r10 := @caughtexception;

        r7 = new javax.net.ssl.SSLException;

        specialinvoke r7.<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>(r10);

        throw r7;

     label20:
        nop;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch javax.net.ssl.SSLException from label03 to label04 with label14;
        catch javax.net.ssl.SSLException from label06 to label07 with label14;
        catch javax.net.ssl.SSLException from label08 to label09 with label14;
        catch javax.net.ssl.SSLException from label10 to label11 with label14;
        catch java.lang.RuntimeException from label03 to label05 with label17;
        catch java.lang.RuntimeException from label06 to label09 with label17;
        catch java.lang.RuntimeException from label10 to label11 with label17;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Throwable from label03 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label14 to label16 with label15;
        catch java.lang.Throwable from label18 to label20 with label15;
    }
    private static java.security.KeyStore loadKeyStore() throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException, java.io.IOException
    {
        java.io.ByteArrayInputStream r0;
        byte[] $r1;
        java.security.KeyStore $r2;
        java.lang.Throwable $r3;

        r0 = new java.io.ByteArrayInputStream;

        $r1 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: byte[] access$1000()>();

        specialinvoke r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

     label1:
        $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("BKS");

        virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r0, null);

     label2:
        virtualinvoke r0.<java.io.InputStream: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<java.io.InputStream: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.net.Socket $r2;
        javax.net.ssl.SSLSocket $r3;
        com.dropbox.sync.android.CoreLogger $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r1 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        $r3 = (javax.net.ssl.SSLSocket) $r2;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r3);

        $r4 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r5 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r5, $r7);

        return $r2;
    }
    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.lang.String $r1, $r7;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;
        javax.net.ssl.SSLSocket $r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r2 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

        $r4 = (javax.net.ssl.SSLSocket) $r3;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r4);

        $r5 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r1 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r1, $r7);

        return $r3;
    }
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.lang.String $r1, $r8;
        int $i0, $i1;
        java.net.InetAddress $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket $r5;
        com.dropbox.sync.android.CoreLogger $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r3 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r5 = (javax.net.ssl.SSLSocket) $r4;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r5);

        $r6 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r1 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r1, $r8);

        return $r4;
    }
    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.net.InetAddress $r1;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;
        javax.net.ssl.SSLSocket $r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r2 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r1, $i0);

        $r4 = (javax.net.ssl.SSLSocket) $r3;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r4);

        $r5 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r6 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r6, $r8);

        return $r3;
    }
    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.net.InetAddress $r1, $r2;
        int $i0, $i1;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket $r5;
        com.dropbox.sync.android.CoreLogger $r6;
        java.lang.String $r7, $r9;
        java.lang.StringBuilder $r8;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r3 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r5 = (javax.net.ssl.SSLSocket) $r4;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r5);

        $r6 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r7 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r7, $r9);

        return $r4;
    }
    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.net.Socket $r1;
        java.lang.String $r2, $r7;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r3;
        javax.net.ssl.SSLSocket $r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: void checkCanceledRequestOnThread()>();

        $r3 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r1 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        $r4 = (javax.net.ssl.SSLSocket) $r1;

        staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: void access$1200(javax.net.ssl.SSLSocket)>($r4);

        $r5 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r2 = staticinvoke <com.dropbox.sync.android.CoreStandardHttpRequestor: java.lang.String access$300()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new socket: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r2, $r7);

        return $r1;
    }
    public java.lang.String[] getDefaultCipherSuites()
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r2 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>();

        return $r1;
    }
    public java.lang.String[] getSupportedCipherSuites()
    {
        com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        r0 := @this: com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper;

        $r2 = r0.<com.dropbox.sync.android.CoreStandardHttpRequestor$SSLSocketFactoryWrapper: javax.net.ssl.SSLSocketFactory mBase>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>();

        return $r1;
    }
