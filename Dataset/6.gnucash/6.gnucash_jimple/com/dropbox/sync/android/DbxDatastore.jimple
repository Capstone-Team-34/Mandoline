com.dropbox.sync.android.DbxDatastore extends java.lang.Object
public static long BASE_CHANGE_SIZE
public static long BASE_DATASTORE_SIZE
public static long BASE_UNSYNCED_CHANGES_SIZE
public static long DATASTORE_SIZE_LIMIT
public static long RECORD_COUNT_LIMIT
public static long UNSYNCED_CHANGES_SIZE_LIMIT
private final java.lang.String mId
private boolean mIsOpen
private final java.util.Set mListeners
private final com.dropbox.sync.android.DbxDatastoreManager mManager
private final com.dropbox.sync.android.NativeDatastore mNativeDatastore
    static void <clinit>()
    {
        <com.dropbox.sync.android.DbxDatastore: long DATASTORE_SIZE_LIMIT> = 10485760L;

        <com.dropbox.sync.android.DbxDatastore: long UNSYNCED_CHANGES_SIZE_LIMIT> = 2097152L;

        <com.dropbox.sync.android.DbxDatastore: long RECORD_COUNT_LIMIT> = 100000L;

        <com.dropbox.sync.android.DbxDatastore: long BASE_DATASTORE_SIZE> = 1000L;

        <com.dropbox.sync.android.DbxDatastore: long BASE_UNSYNCED_CHANGES_SIZE> = 100L;

        <com.dropbox.sync.android.DbxDatastore: long BASE_CHANGE_SIZE> = 100L;

        return;
    }
    void <init>(com.dropbox.sync.android.DbxDatastoreManager, java.lang.String, com.dropbox.sync.android.NativeDatastore)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastoreManager $r1;
        java.lang.String $r2;
        com.dropbox.sync.android.NativeDatastore $r3;
        java.util.concurrent.CopyOnWriteArraySet $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastoreManager;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.dropbox.sync.android.NativeDatastore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<com.dropbox.sync.android.DbxDatastore: java.util.Set mListeners> = $r4;

        r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen> = 0;

        if $r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Manager can\'t be null.");

        throw $r5;

     label1:
        r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastoreManager mManager> = $r1;

        $r2 = staticinvoke <com.dropbox.sync.android.DbxDatastore: java.lang.String checkId(java.lang.String)>($r2);

        r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId> = $r2;

        r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore> = $r3;

        virtualinvoke $r3.<com.dropbox.sync.android.NativeDatastore: void setOwner(com.dropbox.sync.android.DbxDatastore)>(r0);

        r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen> = 1;

        return;
    }
    static java.lang.String checkId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.dropbox.sync.android.DbxDatastore: boolean isValidId(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r1 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal datastore ID \'");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r0);

        throw $r1;

     label1:
        return $r0;
    }
    private void checkShareable(java.lang.String)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String $r1;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastore: boolean isShareable()>();

        if $z0 != 0 goto label1;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires a shareable datastore.");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        return;
    }
    public static boolean isValidId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("ID can\'t be null.");

        throw $r1;

     label1:
        $z0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: boolean nativeIsValidId(java.lang.String)>($r0);

        return $z0;
    }
    public static boolean isValidShareableId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.dropbox.sync.android.DbxDatastore: boolean isValidId(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static com.dropbox.sync.android.DbxDatastore openDefault(com.dropbox.sync.android.DbxAccount) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxAccount $r0;
        com.dropbox.sync.android.DbxDatastoreManager $r1;
        com.dropbox.sync.android.DbxDatastore $r2;

        $r0 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager forAccount(com.dropbox.sync.android.DbxAccount)>($r0);

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastore openDefaultDatastore()>();

        return $r2;
    }
    public static com.dropbox.sync.android.DbxDatastore openDefaultLocal(com.dropbox.sync.android.DbxAccountManager) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxAccountManager $r0;
        com.dropbox.sync.android.DbxDatastoreManager $r1;
        com.dropbox.sync.android.DbxDatastore $r2;

        $r0 := @parameter0: com.dropbox.sync.android.DbxAccountManager;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager localManager(com.dropbox.sync.android.DbxAccountManager)>($r0);

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastore openDefaultDatastore()>();

        return $r2;
    }
    public void addSyncStatusListener(com.dropbox.sync.android.DbxDatastore$SyncStatusListener)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastore$SyncStatusListener $r1;
        java.lang.NullPointerException $r2;
        java.util.Set $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore$SyncStatusListener;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("listener should not be null.");

        throw $r2;

     label1:
        $r3 = r0.<com.dropbox.sync.android.DbxDatastore: java.util.Set mListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void close()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        boolean $z0;
        com.dropbox.sync.android.NativeDatastore $r1;
        java.util.Set $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        entermonitor r0;

     label1:
        $z0 = r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen>;

     label2:
        if $z0 != 0 goto label4;

     label3:
        exitmonitor r0;

        return;

     label4:
        r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen> = 0;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastore: void close()>();

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
    public void deleteRole(com.dropbox.sync.android.DbxPrincipal)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxPrincipal $r1;
        java.lang.String $r2;
        com.dropbox.sync.android.NativeDatastore $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPrincipal;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastore: void checkShareable(java.lang.String)>("deleteRole");

        $r3 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPrincipal: java.lang.String toString()>();

        virtualinvoke $r3.<com.dropbox.sync.android.NativeDatastore: void deleteRole(java.lang.String)>($r2);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        com.dropbox.sync.android.DbxDatastore r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        com.dropbox.sync.android.DbxDatastoreManager $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.dropbox.sync.android.DbxDatastore;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.dropbox.sync.android.DbxDatastore) $r1;

        $r3 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastoreManager mManager>;

        $r4 = r2.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastoreManager mManager>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $r6 = r2.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    protected void finalize()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $z0 = r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen>;

        if $z0 == 0 goto label1;

        $r1 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r1.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("DbxDatastore was finalized without being closed.");

        throw $r1;

     label1:
        return;
    }
    public com.dropbox.sync.android.DbxDatastore$Role getEffectiveRole()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String $r1;
        boolean $z0;
        com.dropbox.sync.android.NativeDatastore $r2;
        com.dropbox.sync.android.DbxDatastore$Role $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label1;

        $r3 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role OWNER>;

        return $r3;

     label1:
        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastore$Role getEffectiveRole()>();

        return $r3;
    }
    public java.lang.String getId()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        r1 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        return r1;
    }
    public com.dropbox.sync.android.DbxDatastoreManager getManager()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastoreManager r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastoreManager mManager>;

        return r1;
    }
    public java.util.Date getMtime()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.util.Date $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: java.util.Date getMtime()>();

        return $r1;
    }
    public long getRecordCount()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        long $l0;
        com.dropbox.sync.android.NativeDatastore $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastore: long getRecordCount()>();

        return $l0;
    }
    public com.dropbox.sync.android.DbxDatastore$Role getRole(com.dropbox.sync.android.DbxPrincipal)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxPrincipal $r1;
        com.dropbox.sync.android.NativeDatastore $r2;
        java.lang.String $r3;
        int $i0;
        long $l1;
        com.dropbox.sync.android.DbxDatastore$Role $r4;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPrincipal;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastore: void checkShareable(java.lang.String)>("getRole");

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r3 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPrincipal: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: int getRole(java.lang.String)>($r3);

        $l1 = (long) $i0;

        $r4 = staticinvoke <com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastore$Role fromNativeRole(long)>($l1);

        return $r4;
    }
    public long getSize()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        long $l0;
        com.dropbox.sync.android.NativeDatastore $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastore: long getSize()>();

        return $l0;
    }
    public com.dropbox.sync.android.DbxDatastoreStatus getSyncStatus()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastoreStatus $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastoreStatus getStatus()>();

        return $r1;
    }
    public com.dropbox.sync.android.DbxTable getTable(java.lang.String)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastore $r2;
        com.dropbox.sync.android.DbxTable $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxTable: java.lang.String checkId(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxTable getTable(com.dropbox.sync.android.DbxDatastore,java.lang.String)>(r0, $r1);

        return $r3;
    }
    public java.util.Set getTables()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.util.Set $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: java.util.Set getTables(com.dropbox.sync.android.DbxDatastore)>(r0);

        return $r1;
    }
    public java.lang.String getTitle()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: java.lang.String getTitle()>();

        return $r1;
    }
    public long getUnsyncedChangesSize()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        long $l0;
        com.dropbox.sync.android.NativeDatastore $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastore: long getUnsyncedChangesSize()>();

        return $l0;
    }
    public int hashCode()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastoreManager $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastoreManager mManager>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public boolean isOpen()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        entermonitor r0;

     label1:
        z0 = r0.<com.dropbox.sync.android.DbxDatastore: boolean mIsOpen>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean isShareable()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        return $z0;
    }
    public boolean isWritable()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastore$Role $r1, $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastore$Role getEffectiveRole()>();

        $r2 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role OWNER>;

        if $r1 == $r2 goto label1;

        $r1 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxDatastore$Role getEffectiveRole()>();

        $r2 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role EDITOR>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public java.util.Map listRoles()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.util.HashMap r1;
        com.dropbox.sync.android.DbxTable $r2;
        com.dropbox.sync.android.DbxTable$QueryResult $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.dropbox.sync.android.DbxRecord r6;
        long $l0;
        java.lang.String $r7;
        com.dropbox.sync.android.DbxPrincipal $r8;
        com.dropbox.sync.android.DbxDatastore$Role $r9;
        com.dropbox.sync.android.DbxException r10;
        com.dropbox.sync.android.DbxRuntimeException$Internal $r11;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument r12;
        com.dropbox.sync.android.DbxRuntimeException$BadType r13;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastore: void checkShareable(java.lang.String)>("listRoles");

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.DbxTable getTable(java.lang.String)>(":acl");

     label1:
        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxTable$QueryResult query()>();

     label2:
        $r4 = virtualinvoke $r3.<com.dropbox.sync.android.DbxTable$QueryResult: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.dropbox.sync.android.DbxRecord) $r5;

     label4:
        $l0 = virtualinvoke r6.<com.dropbox.sync.android.DbxRecord: long getLong(java.lang.String)>("role");

     label5:
        $r7 = virtualinvoke r6.<com.dropbox.sync.android.DbxRecord: java.lang.String getId()>();

        $r8 = staticinvoke <com.dropbox.sync.android.DbxPrincipal: com.dropbox.sync.android.DbxPrincipal get(java.lang.String)>($r7);

        if $r8 == null goto label3;

        $r9 = staticinvoke <com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastore$Role fromNativeRole(long)>($l0);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label3;

     label6:
        r10 := @caughtexception;

        $r11 = new com.dropbox.sync.android.DbxRuntimeException$Internal;

        specialinvoke $r11.<com.dropbox.sync.android.DbxRuntimeException$Internal: void <init>(java.lang.String)>("Failed to query :acl table");

        throw $r11;

     label7:
        r12 := @caughtexception;

        goto label3;

     label8:
        r13 := @caughtexception;

        goto label3;

     label9:
        return r1;

        catch com.dropbox.sync.android.DbxException from label1 to label2 with label6;
        catch com.dropbox.sync.android.DbxRuntimeException$IllegalArgument from label4 to label5 with label7;
        catch com.dropbox.sync.android.DbxRuntimeException$BadType from label4 to label5 with label8;
    }
    public void removeSyncStatusListener(com.dropbox.sync.android.DbxDatastore$SyncStatusListener)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxDatastore$SyncStatusListener $r1;
        java.lang.NullPointerException $r2;
        java.util.Set $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore$SyncStatusListener;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("listener should not be null.");

        throw $r2;

     label1:
        $r3 = r0.<com.dropbox.sync.android.DbxDatastore: java.util.Set mListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void setRole(com.dropbox.sync.android.DbxPrincipal, com.dropbox.sync.android.DbxDatastore$Role)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        com.dropbox.sync.android.DbxPrincipal $r1;
        com.dropbox.sync.android.DbxDatastore$Role $r2, $r3;
        com.dropbox.sync.android.NativeDatastore $r4;
        java.lang.String $r5;
        long $l0;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPrincipal;

        $r2 := @parameter1: com.dropbox.sync.android.DbxDatastore$Role;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastore: void checkShareable(java.lang.String)>("setRole");

        $r3 = <com.dropbox.sync.android.DbxDatastore$Role: com.dropbox.sync.android.DbxDatastore$Role NONE>;

        if $r2 != $r3 goto label1;

        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastore: void deleteRole(com.dropbox.sync.android.DbxPrincipal)>($r1);

        return;

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r5 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPrincipal: java.lang.String toString()>();

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastore: long toNativeRole(com.dropbox.sync.android.DbxDatastore$Role)>($r2);

        virtualinvoke $r4.<com.dropbox.sync.android.NativeDatastore: void setRole(java.lang.String,long)>($r5, $l0);

        return;
    }
    public void setTitle(java.lang.String)
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: void setTitle(java.lang.String)>($r1);

        return;
    }
    void statusCallback()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.util.Iterator $r1;
        java.util.Set $r2;
        com.dropbox.sync.android.DbxDatastore$1 $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: java.util.Set mListeners>;

        $r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = new com.dropbox.sync.android.DbxDatastore$1;

        specialinvoke $r3.<com.dropbox.sync.android.DbxDatastore$1: void <init>(com.dropbox.sync.android.DbxDatastore,java.util.Iterator)>(r0, $r1);

        staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: void postUserCallback(java.lang.Runnable)>($r3);

        return;
    }
    public java.util.Map sync() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.util.Map $r1;
        com.dropbox.sync.android.NativeDatastore $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: com.dropbox.sync.android.NativeDatastore mNativeDatastore>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: java.util.Map sync(com.dropbox.sync.android.DbxDatastore)>(r0);

        return $r1;
    }
    public java.lang.String toString()
    {
        com.dropbox.sync.android.DbxDatastore r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastore;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<DbxDatastore ");

        $r2 = r0.<com.dropbox.sync.android.DbxDatastore: java.lang.String mId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
