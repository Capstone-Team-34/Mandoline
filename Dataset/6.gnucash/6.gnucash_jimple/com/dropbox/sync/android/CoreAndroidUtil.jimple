com.dropbox.sync.android.CoreAndroidUtil extends java.lang.Object
public static final java.lang.String DEVICE_ID_UNKNOWN
public static final java.lang.String MANUFACTURER_UNKNOWN
private static final java.lang.String TAG
private static android.os.Handler sMainHandler
private static android.os.Looper sMainLooper
    static void <clinit>()
    {
        android.os.Looper $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        android.os.Handler $r3;

        $r1 = class "Lcom/dropbox/sync/android/CoreAndroidUtil;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.CoreAndroidUtil: java.lang.String TAG> = $r2;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        <com.dropbox.sync.android.CoreAndroidUtil: android.os.Looper sMainLooper> = $r0;

        $r3 = new android.os.Handler;

        $r0 = <com.dropbox.sync.android.CoreAndroidUtil: android.os.Looper sMainLooper>;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r0);

        <com.dropbox.sync.android.CoreAndroidUtil: android.os.Handler sMainHandler> = $r3;

        return;
    }
    private void <init>()
    {
        com.dropbox.sync.android.CoreAndroidUtil r0;

        r0 := @this: com.dropbox.sync.android.CoreAndroidUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void exitOnFatalError(java.lang.String, java.lang.Throwable, boolean)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$BadState r2;
        com.dropbox.sync.android.CoreAndroidUtil$1 $r3;
        android.os.Handler $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $z0 := @parameter2: boolean;

        r2 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke r2.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: boolean isUiThread()>();

        if $z0 == 0 goto label1;

        throw r2;

     label1:
        $r4 = <com.dropbox.sync.android.CoreAndroidUtil: android.os.Handler sMainHandler>;

        $r3 = new com.dropbox.sync.android.CoreAndroidUtil$1;

        specialinvoke $r3.<com.dropbox.sync.android.CoreAndroidUtil$1: void <init>(com.dropbox.sync.android.DbxRuntimeException)>(r2);

        virtualinvoke $r4.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>($r3);

        return;
    }
    public static java.lang.String getDeviceId(android.content.Context)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "android_id");

        if $r2 == null goto label1;

        return $r2;

     label1:
        return "unknown";
    }
    public static int getLargeMemoryClass(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.app.ActivityManager r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r2 = (android.app.ActivityManager) $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $i0 = virtualinvoke r2.<android.app.ActivityManager: int getLargeMemoryClass()>();

        return $i0;

     label1:
        $i0 = virtualinvoke r2.<android.app.ActivityManager: int getMemoryClass()>();

        return $i0;
    }
    static android.content.pm.PackageInfo getPackageInfo(android.content.Context) throws com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException
    {
        android.content.Context $r0;
        boolean $z0, $z1;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2, $r7;
        android.content.pm.PackageInfo $r3;
        android.content.pm.PackageManager$NameNotFoundException r4;
        com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException $r5;
        java.lang.RuntimeException r6;

        $r0 := @parameter0: android.content.Context;

        $z0 = 1;

     label01:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label02:
        if $r1 == null goto label06;

        $z1 = 1;

     label03:
        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z1);

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, 5);

     label04:
        if $r3 == null goto label10;

     label05:
        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z0);

        return $r3;

     label06:
        $z1 = 0;

        goto label03;

     label07:
        r4 := @caughtexception;

        $r5 = new com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException;

        specialinvoke $r5.<com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to get package info for app package.", r4);

        throw $r5;

     label08:
        r6 := @caughtexception;

        $r2 = "Package manager has died";

        $r7 = virtualinvoke r6.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label09;

        $r5 = new com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException;

        specialinvoke $r5.<com.dropbox.sync.android.DbxException$PackageManagerOperationFailedException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to get package info for app package.", r6);

        throw $r5;

     label09:
        throw r6;

     label10:
        $z0 = 0;

        goto label05;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label07;
        catch java.lang.RuntimeException from label01 to label02 with label08;
        catch java.lang.RuntimeException from label03 to label04 with label08;
    }
    static java.lang.String getPackageString(android.content.Context, android.content.pm.PackageInfo)
    {
        android.content.Context $r0;
        android.content.pm.PackageInfo $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.pm.PackageInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = $r1.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public static int getScreenDensity(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        return i0;
    }
    public static java.lang.String getScreenSize(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 13 goto label1;

        $i0 = $r2.<android.content.res.Configuration: int screenHeightDp>;

        $i1 = $r2.<android.content.res.Configuration: int screenWidthDp>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i1 = $r2.<android.content.res.Configuration: int screenHeightDp>;

        $i2 = $r2.<android.content.res.Configuration: int screenWidthDp>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r4 = staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: java.lang.String getSizeLabel(android.content.res.Configuration)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        $r4 = staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: java.lang.String getSizeLabel(android.content.res.Configuration)>($r2);

        return $r4;
    }
    private static java.lang.String getSizeLabel(android.content.res.Configuration)
    {
        android.content.res.Configuration $r0;
        int $i0;
        com.dropbox.sync.android.DbxRuntimeException$Internal $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.res.Configuration;

        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        return "x-large";

     label1:
        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        lookupswitch($i0)
        {
            case 0: goto label6;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        $r1 = new com.dropbox.sync.android.DbxRuntimeException$Internal;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected screen layout: ");

        $i0 = $r0.<android.content.res.Configuration: int screenLayout>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.dropbox.sync.android.DbxRuntimeException$Internal: void <init>(java.lang.String)>($r3);

        throw $r1;

     label3:
        return "small";

     label4:
        return "normal";

     label5:
        return "large";

     label6:
        return "undefined";
    }
    public static java.lang.String getSystemManufacturer()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: java.lang.String getSystemManufacturerHelper()>();

        return $r0;
    }
    private static java.lang.String getSystemManufacturerHelper()
    {
        java.lang.String r0;

        r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        return r0;
    }
    public static java.lang.String getSystemModel()
    {
        java.lang.String r0;

        r0 = <android.os.Build: java.lang.String MODEL>;

        return r0;
    }
    public static java.lang.String getSystemVersion()
    {
        java.lang.String r0;

        r0 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        return r0;
    }
    public static boolean isUiThread()
    {
        android.os.Looper $r0, $r1;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r0 = <com.dropbox.sync.android.CoreAndroidUtil: android.os.Looper sMainLooper>;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static void postUserCallback(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        android.os.Handler $r1;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = <com.dropbox.sync.android.CoreAndroidUtil: android.os.Handler sMainHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r0);

        return;
    }
    static void validateHaveAuthActivities(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo $r0;
        android.content.pm.ActivityInfo[] r1;
        android.content.pm.ActivityInfo r2;
        int i0, i1;
        java.util.HashSet r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.content.pm.PackageInfo;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = class "Lcom/dropbox/sync/android/DbxAuthActivity;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r4 = class "Lcom/dropbox/client2/android/AuthActivity;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r5);

        r1 = $r0.<android.content.pm.PackageInfo: android.content.pm.ActivityInfo[] activities>;

        if r1 == null goto label3;

        r1 = $r0.<android.content.pm.PackageInfo: android.content.pm.ActivityInfo[] activities>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        if r2 == null goto label2;

        $r5 = r2.<android.content.pm.ActivityInfo: java.lang.String name>;

        if $r5 == null goto label2;

        $r5 = r2.<android.content.pm.ActivityInfo: java.lang.String name>;

        interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required Sync API Activity isn\'t included in application manifest: ");

        $r5 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>($r5);

        throw $r6;

     label4:
        return;
    }
    static void validateHaveServices(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo $r0;
        android.content.pm.ServiceInfo[] r1;
        android.content.pm.ServiceInfo r2;
        int i0, i1;
        java.util.HashSet r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.content.pm.PackageInfo;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = class "Lcom/dropbox/sync/android/DbxSyncService;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r5);

        r1 = $r0.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        if r1 == null goto label3;

        r1 = $r0.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        if r2 == null goto label2;

        $r5 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        if $r5 == null goto label2;

        $r5 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required Sync API Service isn\'t included in application manifest: ");

        $r5 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>($r5);

        throw $r6;

     label4:
        return;
    }
    static void validateIsApplicationContext(android.content.Context)
    {
        android.content.Context $r0, $r1;
        java.lang.NullPointerException $r2;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r3;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The provided app context is null.");

        throw $r2;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        if $r1 == $r0 goto label2;

        $r3 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r3.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("The provided context isn\'t an application context.");

        throw $r3;

     label2:
        return;
    }
    static void validatePermissions(android.content.Context)
    {
        android.content.Context $r0;
        java.util.HashSet r1;
        int $i0, $i1, $i2;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String r4;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: android.content.Context;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("android.permission.INTERNET");

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("android.permission.ACCESS_NETWORK_STATE");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $i2 = virtualinvoke $r0.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r4, $i0, $i1);

        if $i2 == 0 goto label1;

        $r5 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required Sync API permission \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' isn\'t granted.  Check your application manifest to ensure");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" you\'ve included the necessary <uses-permission> entries.");

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>(r4);

        throw $r5;

     label2:
        return;
    }
