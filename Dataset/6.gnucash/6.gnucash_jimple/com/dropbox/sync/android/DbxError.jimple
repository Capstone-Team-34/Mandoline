com.dropbox.sync.android.DbxError extends java.lang.Enum
private static final com.dropbox.sync.android.DbxError[] $VALUES
public static final enum com.dropbox.sync.android.DbxError ACCESS_DENIED
public static final enum com.dropbox.sync.android.DbxError ALREADY_OPEN
public static final enum com.dropbox.sync.android.DbxError AUTH
public static final enum com.dropbox.sync.android.DbxError BAD_INDEX
public static final enum com.dropbox.sync.android.DbxError BAD_STATE
public static final enum com.dropbox.sync.android.DbxError BAD_TYPE
public static final enum com.dropbox.sync.android.DbxError CACHE
public static final enum com.dropbox.sync.android.DbxError CANCELLED
public static final enum com.dropbox.sync.android.DbxError CLOSED
public static final enum com.dropbox.sync.android.DbxError CONNECTION
public static final enum com.dropbox.sync.android.DbxError DELETED
public static final enum com.dropbox.sync.android.DbxError DISALLOWED
public static final enum com.dropbox.sync.android.DbxError DISKSPACE
public static final enum com.dropbox.sync.android.DbxError EXISTS
public static final enum com.dropbox.sync.android.DbxError FILE_IO
public static final enum com.dropbox.sync.android.DbxError ILLEGAL_ARGUMENT
public static final enum com.dropbox.sync.android.DbxError INTERNAL
public static final enum com.dropbox.sync.android.DbxError INVALID_OPERATION
public static final enum com.dropbox.sync.android.DbxError MEMORY
public static final enum com.dropbox.sync.android.DbxError NETWORK
public static final enum com.dropbox.sync.android.DbxError NOT_CACHED
public static final enum com.dropbox.sync.android.DbxError NOT_FOUND
public static final enum com.dropbox.sync.android.DbxError NO_THUMB
public static final enum com.dropbox.sync.android.DbxError PACKAGE_MANAGER_OPERATION_FAILED
public static final enum com.dropbox.sync.android.DbxError PARENT
public static final enum com.dropbox.sync.android.DbxError QUOTA
public static final enum com.dropbox.sync.android.DbxError READ_ONLY
public static final enum com.dropbox.sync.android.DbxError REQUEST
public static final enum com.dropbox.sync.android.DbxError RESPONSE
public static final enum com.dropbox.sync.android.DbxError RETRY_LATER
public static final enum com.dropbox.sync.android.DbxError SERVER
public static final enum com.dropbox.sync.android.DbxError SHUTDOWN
public static final enum com.dropbox.sync.android.DbxError SIZE_LIMIT
public static final enum com.dropbox.sync.android.DbxError SSL
public static final enum com.dropbox.sync.android.DbxError SYSTEM
private static java.lang.String TAG
public static final enum com.dropbox.sync.android.DbxError TIMEOUT
private static final android.util.SparseArray sInstancesByCode
private final com.dropbox.sync.android.DbxError$Category mCategory
private final java.lang.String mDescription
private final int mNativeCode
    static void <clinit>()
    {
        com.dropbox.sync.android.DbxError $r0;
        com.dropbox.sync.android.DbxError$Category $r1;
        com.dropbox.sync.android.DbxError[] $r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        android.util.SparseArray $r5;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("INTERNAL", 0, -1000, $r1, "Internal error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError INTERNAL> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("CACHE", 1, -1001, $r1, "Cache error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CACHE> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("SHUTDOWN", 2, -1002, $r1, "Already shut down");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SHUTDOWN> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("CLOSED", 3, -1003, $r1, "Already closed");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CLOSED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("DELETED", 4, -1004, $r1, "Deleted");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DELETED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("BAD_TYPE", 5, -1007, $r1, "Value is of the wrong type");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_TYPE> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("SIZE_LIMIT", 6, -1008, $r1, "Size limit exceeded");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SIZE_LIMIT> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("BAD_INDEX", 7, -1009, $r1, "Index is out of bounds");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_INDEX> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("ILLEGAL_ARGUMENT", 8, -1010, $r1, "Illegal argument");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ILLEGAL_ARGUMENT> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("BAD_STATE", 9, -1011, $r1, "Object is in a bad state");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_STATE> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("ACCESS_DENIED", 10, -1012, $r1, "Access denied -- must be OWNER or EDITOR");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ACCESS_DENIED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("MEMORY", 11, -1900, $r1, "Out of memory");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError MEMORY> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("SYSTEM", 12, -1901, $r1, "System error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SYSTEM> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category UNCHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("NOT_CACHED", 13, -2000, $r1, "Not cached");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NOT_CACHED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("INVALID_OPERATION", 14, -10000, $r1, "Invalid operation attempted");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError INVALID_OPERATION> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("NOT_FOUND", 15, -10001, $r1, "Path doesn\'t exist");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NOT_FOUND> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("EXISTS", 16, -10002, $r1, "Already exists");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError EXISTS> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("ALREADY_OPEN", 17, -10003, $r1, "Already open");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ALREADY_OPEN> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("PARENT", 18, -10004, $r1, "Parent path doesn\'t exist or isn\'t a directory");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError PARENT> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("DISKSPACE", 19, -10006, $r1, "Out of disk space");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DISKSPACE> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("DISALLOWED", 20, -10007, $r1, "App is not allowed access");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DISALLOWED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("FILE_IO", 21, -10008, $r1, "File I/O error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError FILE_IO> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("CANCELLED", 22, -10009, $r1, "Cancelled");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CANCELLED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("READ_ONLY", 23, -10010, $r1, "Read only");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError READ_ONLY> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("PACKAGE_MANAGER_OPERATION_FAILED", 24, -10011, $r1, "Package manager operation failed");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError PACKAGE_MANAGER_OPERATION_FAILED> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("NETWORK", 25, -11000, $r1, "Network error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NETWORK> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("TIMEOUT", 26, -11001, $r1, "Network timeout");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError TIMEOUT> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("CONNECTION", 27, -11002, $r1, "No network connection");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CONNECTION> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("SSL", 28, -11003, $r1, "SSL error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SSL> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("SERVER", 29, -11004, $r1, "Server error");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SERVER> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("AUTH", 30, -11005, $r1, "Not authenticated");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError AUTH> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("QUOTA", 31, -11006, $r1, "Quota exceeded");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError QUOTA> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("REQUEST", 32, -11008, $r1, "Invalid server request");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError REQUEST> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("RESPONSE", 33, -11009, $r1, "Invalid response from server");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError RESPONSE> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("RETRY_LATER", 34, -11010, $r1, "Exceeded rate limit");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError RETRY_LATER> = $r0;

        $r0 = new com.dropbox.sync.android.DbxError;

        $r1 = <com.dropbox.sync.android.DbxError$Category: com.dropbox.sync.android.DbxError$Category CHECKED>;

        specialinvoke $r0.<com.dropbox.sync.android.DbxError: void <init>(java.lang.String,int,int,com.dropbox.sync.android.DbxError$Category,java.lang.String)>("NO_THUMB", 35, -12000, $r1, "No thumbnail");

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NO_THUMB> = $r0;

        $r2 = newarray (com.dropbox.sync.android.DbxError)[36];

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError INTERNAL>;

        $r2[0] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CACHE>;

        $r2[1] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SHUTDOWN>;

        $r2[2] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CLOSED>;

        $r2[3] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DELETED>;

        $r2[4] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_TYPE>;

        $r2[5] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SIZE_LIMIT>;

        $r2[6] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_INDEX>;

        $r2[7] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ILLEGAL_ARGUMENT>;

        $r2[8] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError BAD_STATE>;

        $r2[9] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ACCESS_DENIED>;

        $r2[10] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError MEMORY>;

        $r2[11] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SYSTEM>;

        $r2[12] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NOT_CACHED>;

        $r2[13] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError INVALID_OPERATION>;

        $r2[14] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NOT_FOUND>;

        $r2[15] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError EXISTS>;

        $r2[16] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError ALREADY_OPEN>;

        $r2[17] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError PARENT>;

        $r2[18] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DISKSPACE>;

        $r2[19] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError DISALLOWED>;

        $r2[20] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError FILE_IO>;

        $r2[21] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CANCELLED>;

        $r2[22] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError READ_ONLY>;

        $r2[23] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError PACKAGE_MANAGER_OPERATION_FAILED>;

        $r2[24] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NETWORK>;

        $r2[25] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError TIMEOUT>;

        $r2[26] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError CONNECTION>;

        $r2[27] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SSL>;

        $r2[28] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError SERVER>;

        $r2[29] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError AUTH>;

        $r2[30] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError QUOTA>;

        $r2[31] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError REQUEST>;

        $r2[32] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError RESPONSE>;

        $r2[33] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError RETRY_LATER>;

        $r2[34] = $r0;

        $r0 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError NO_THUMB>;

        $r2[35] = $r0;

        <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError[] $VALUES> = $r2;

        $r3 = class "Lcom/dropbox/sync/android/DbxError;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.DbxError: java.lang.String TAG> = $r4;

        $r5 = staticinvoke <com.dropbox.sync.android.DbxError: android.util.SparseArray makeErrorCodeMap()>();

        <com.dropbox.sync.android.DbxError: android.util.SparseArray sInstancesByCode> = $r5;

        return;
    }
    private void <init>(java.lang.String, int, int, com.dropbox.sync.android.DbxError$Category, java.lang.String)
    {
        com.dropbox.sync.android.DbxError r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        com.dropbox.sync.android.DbxError$Category $r2;

        r0 := @this: com.dropbox.sync.android.DbxError;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: com.dropbox.sync.android.DbxError$Category;

        $r3 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<com.dropbox.sync.android.DbxError: int mNativeCode> = $i1;

        r0.<com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError$Category mCategory> = $r2;

        r0.<com.dropbox.sync.android.DbxError: java.lang.String mDescription> = $r3;

        return;
    }
    static com.dropbox.sync.android.DbxThrowable exceptionFrom(com.dropbox.sync.android.DbxError, java.lang.String, java.lang.String, java.lang.String)
    {
        com.dropbox.sync.android.DbxError $r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder r4, $r5;
        int $i0;
        com.dropbox.sync.android.CoreLogger $r6;
        int[] $r7;
        com.dropbox.sync.android.DbxRuntimeException$Internal $r8;
        com.dropbox.sync.android.DbxRuntimeException$Cache $r9;
        com.dropbox.sync.android.DbxRuntimeException$Shutdown $r10;
        com.dropbox.sync.android.DbxRuntimeException$Closed $r11;
        com.dropbox.sync.android.DbxRuntimeException$Deleted $r12;
        com.dropbox.sync.android.DbxRuntimeException$BadType $r13;
        com.dropbox.sync.android.DbxRuntimeException$SizeLimit $r14;
        com.dropbox.sync.android.DbxRuntimeException$BadIndex $r15;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r16;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r17;
        com.dropbox.sync.android.DbxRuntimeException$AccessDenied $r18;
        com.dropbox.sync.android.DbxRuntimeException$Memory $r19;
        com.dropbox.sync.android.DbxRuntimeException$System $r20;
        com.dropbox.sync.android.DbxRuntimeException$NotCached $r21;
        com.dropbox.sync.android.DbxException$InvalidOperation $r22;
        com.dropbox.sync.android.DbxException$NotFound $r23;
        com.dropbox.sync.android.DbxException$Exists $r24;
        com.dropbox.sync.android.DbxException$AlreadyOpen $r25;
        com.dropbox.sync.android.DbxException$Parent $r26;
        com.dropbox.sync.android.DbxException$DiskSpace $r27;
        com.dropbox.sync.android.DbxException$Disallowed $r28;
        com.dropbox.sync.android.DbxException$FileIO $r29;
        com.dropbox.sync.android.DbxException$Cancelled $r30;
        com.dropbox.sync.android.DbxException$Network $r31;
        com.dropbox.sync.android.DbxException$NetworkTimeout $r32;
        com.dropbox.sync.android.DbxException$NetworkConnection $r33;
        com.dropbox.sync.android.DbxException$Ssl $r34;
        com.dropbox.sync.android.DbxException$Server $r35;
        com.dropbox.sync.android.DbxException$Unauthorized $r36;
        com.dropbox.sync.android.DbxException$Quota $r37;
        com.dropbox.sync.android.DbxException$Request $r38;
        com.dropbox.sync.android.DbxException$Response $r39;
        com.dropbox.sync.android.DbxException$RetryLater $r40;
        com.dropbox.sync.android.DbxException$NoThumb $r41;
        com.dropbox.sync.android.DbxException$ReadOnly $r42;

        $r0 := @parameter0: com.dropbox.sync.android.DbxError;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label01;

        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

     label01:
        $r1 = virtualinvoke $r0.<com.dropbox.sync.android.DbxError: java.lang.String getDescription()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        if $r2 == null goto label02;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label02:
        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r2 = <com.dropbox.sync.android.DbxError: java.lang.String TAG>;

        virtualinvoke $r6.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, $r1);

        $r7 = <com.dropbox.sync.android.DbxError$1: int[] $SwitchMap$com$dropbox$sync$android$DbxError>;

        $i0 = virtualinvoke $r0.<com.dropbox.sync.android.DbxError: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            case 13: goto label16;
            case 14: goto label17;
            case 15: goto label18;
            case 16: goto label19;
            case 17: goto label20;
            case 18: goto label21;
            case 19: goto label22;
            case 20: goto label23;
            case 21: goto label24;
            case 22: goto label25;
            case 23: goto label26;
            case 24: goto label27;
            case 25: goto label28;
            case 26: goto label29;
            case 27: goto label30;
            case 28: goto label31;
            case 29: goto label32;
            case 30: goto label33;
            case 31: goto label34;
            case 32: goto label35;
            case 33: goto label36;
            case 34: goto label37;
            case 35: goto label38;
            default: goto label03;
        };

     label03:
        return null;

     label04:
        $r8 = new com.dropbox.sync.android.DbxRuntimeException$Internal;

        specialinvoke $r8.<com.dropbox.sync.android.DbxRuntimeException$Internal: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r8;

     label05:
        $r9 = new com.dropbox.sync.android.DbxRuntimeException$Cache;

        specialinvoke $r9.<com.dropbox.sync.android.DbxRuntimeException$Cache: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r9;

     label06:
        $r10 = new com.dropbox.sync.android.DbxRuntimeException$Shutdown;

        specialinvoke $r10.<com.dropbox.sync.android.DbxRuntimeException$Shutdown: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r10;

     label07:
        $r11 = new com.dropbox.sync.android.DbxRuntimeException$Closed;

        specialinvoke $r11.<com.dropbox.sync.android.DbxRuntimeException$Closed: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r11;

     label08:
        $r12 = new com.dropbox.sync.android.DbxRuntimeException$Deleted;

        specialinvoke $r12.<com.dropbox.sync.android.DbxRuntimeException$Deleted: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r12;

     label09:
        $r13 = new com.dropbox.sync.android.DbxRuntimeException$BadType;

        specialinvoke $r13.<com.dropbox.sync.android.DbxRuntimeException$BadType: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r13;

     label10:
        $r14 = new com.dropbox.sync.android.DbxRuntimeException$SizeLimit;

        specialinvoke $r14.<com.dropbox.sync.android.DbxRuntimeException$SizeLimit: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r14;

     label11:
        $r15 = new com.dropbox.sync.android.DbxRuntimeException$BadIndex;

        specialinvoke $r15.<com.dropbox.sync.android.DbxRuntimeException$BadIndex: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r15;

     label12:
        $r16 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r16.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r16;

     label13:
        $r17 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r17.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r17;

     label14:
        $r18 = new com.dropbox.sync.android.DbxRuntimeException$AccessDenied;

        specialinvoke $r18.<com.dropbox.sync.android.DbxRuntimeException$AccessDenied: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r18;

     label15:
        $r19 = new com.dropbox.sync.android.DbxRuntimeException$Memory;

        specialinvoke $r19.<com.dropbox.sync.android.DbxRuntimeException$Memory: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r19;

     label16:
        $r20 = new com.dropbox.sync.android.DbxRuntimeException$System;

        specialinvoke $r20.<com.dropbox.sync.android.DbxRuntimeException$System: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r20;

     label17:
        $r21 = new com.dropbox.sync.android.DbxRuntimeException$NotCached;

        specialinvoke $r21.<com.dropbox.sync.android.DbxRuntimeException$NotCached: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r21;

     label18:
        $r22 = new com.dropbox.sync.android.DbxException$InvalidOperation;

        specialinvoke $r22.<com.dropbox.sync.android.DbxException$InvalidOperation: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r22;

     label19:
        $r23 = new com.dropbox.sync.android.DbxException$NotFound;

        specialinvoke $r23.<com.dropbox.sync.android.DbxException$NotFound: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r23;

     label20:
        $r24 = new com.dropbox.sync.android.DbxException$Exists;

        specialinvoke $r24.<com.dropbox.sync.android.DbxException$Exists: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r24;

     label21:
        $r25 = new com.dropbox.sync.android.DbxException$AlreadyOpen;

        specialinvoke $r25.<com.dropbox.sync.android.DbxException$AlreadyOpen: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r25;

     label22:
        $r26 = new com.dropbox.sync.android.DbxException$Parent;

        specialinvoke $r26.<com.dropbox.sync.android.DbxException$Parent: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r26;

     label23:
        $r27 = new com.dropbox.sync.android.DbxException$DiskSpace;

        specialinvoke $r27.<com.dropbox.sync.android.DbxException$DiskSpace: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r27;

     label24:
        $r28 = new com.dropbox.sync.android.DbxException$Disallowed;

        specialinvoke $r28.<com.dropbox.sync.android.DbxException$Disallowed: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r28;

     label25:
        $r29 = new com.dropbox.sync.android.DbxException$FileIO;

        specialinvoke $r29.<com.dropbox.sync.android.DbxException$FileIO: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r29;

     label26:
        $r30 = new com.dropbox.sync.android.DbxException$Cancelled;

        specialinvoke $r30.<com.dropbox.sync.android.DbxException$Cancelled: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r30;

     label27:
        $r31 = new com.dropbox.sync.android.DbxException$Network;

        specialinvoke $r31.<com.dropbox.sync.android.DbxException$Network: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r31;

     label28:
        $r32 = new com.dropbox.sync.android.DbxException$NetworkTimeout;

        specialinvoke $r32.<com.dropbox.sync.android.DbxException$NetworkTimeout: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r32;

     label29:
        $r33 = new com.dropbox.sync.android.DbxException$NetworkConnection;

        specialinvoke $r33.<com.dropbox.sync.android.DbxException$NetworkConnection: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r33;

     label30:
        $r34 = new com.dropbox.sync.android.DbxException$Ssl;

        specialinvoke $r34.<com.dropbox.sync.android.DbxException$Ssl: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r34;

     label31:
        $r35 = new com.dropbox.sync.android.DbxException$Server;

        specialinvoke $r35.<com.dropbox.sync.android.DbxException$Server: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r35;

     label32:
        $r36 = new com.dropbox.sync.android.DbxException$Unauthorized;

        specialinvoke $r36.<com.dropbox.sync.android.DbxException$Unauthorized: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r36;

     label33:
        $r37 = new com.dropbox.sync.android.DbxException$Quota;

        specialinvoke $r37.<com.dropbox.sync.android.DbxException$Quota: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r37;

     label34:
        $r38 = new com.dropbox.sync.android.DbxException$Request;

        specialinvoke $r38.<com.dropbox.sync.android.DbxException$Request: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r38;

     label35:
        $r39 = new com.dropbox.sync.android.DbxException$Response;

        specialinvoke $r39.<com.dropbox.sync.android.DbxException$Response: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r39;

     label36:
        $r40 = new com.dropbox.sync.android.DbxException$RetryLater;

        specialinvoke $r40.<com.dropbox.sync.android.DbxException$RetryLater: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r40;

     label37:
        $r41 = new com.dropbox.sync.android.DbxException$NoThumb;

        specialinvoke $r41.<com.dropbox.sync.android.DbxException$NoThumb: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r41;

     label38:
        $r42 = new com.dropbox.sync.android.DbxException$ReadOnly;

        specialinvoke $r42.<com.dropbox.sync.android.DbxException$ReadOnly: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r42;
    }
    static com.dropbox.sync.android.DbxError fromNative(int)
    {
        int $i0;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        com.dropbox.sync.android.DbxError r2;

        $i0 := @parameter0: int;

        $r0 = <com.dropbox.sync.android.DbxError: android.util.SparseArray sInstancesByCode>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r2 = (com.dropbox.sync.android.DbxError) $r1;

        if r2 == null goto label1;

        return r2;

     label1:
        r2 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError INTERNAL>;

        return r2;
    }
    private static android.util.SparseArray makeErrorCodeMap()
    {
        com.dropbox.sync.android.DbxError r0;
        int i0, i1, $i2;
        android.util.SparseArray r1;
        com.dropbox.sync.android.DbxError[] $r2;
        java.lang.Object $r3;
        boolean $z0;

        r1 = new android.util.SparseArray;

        $r2 = staticinvoke <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError[] values()>();

        i0 = lengthof $r2;

        specialinvoke r1.<android.util.SparseArray: void <init>(int)>(i0);

        $r2 = staticinvoke <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError[] values()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r0 = $r2[i1];

        $i2 = virtualinvoke r0.<com.dropbox.sync.android.DbxError: int getNativeCode()>();

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        if $r3 != null goto label3;

        $z0 = 1;

     label2:
        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z0);

        $i2 = virtualinvoke r0.<com.dropbox.sync.android.DbxError: int getNativeCode()>();

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r0);

        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return r1;
    }
    public static com.dropbox.sync.android.DbxError valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.dropbox.sync.android.DbxError $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/dropbox/sync/android/DbxError;", $r0);

        $r2 = (com.dropbox.sync.android.DbxError) $r1;

        return $r2;
    }
    public static com.dropbox.sync.android.DbxError[] values()
    {
        java.lang.Object $r0;
        com.dropbox.sync.android.DbxError[] $r1;

        $r1 = <com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.dropbox.sync.android.DbxError[]) $r0;

        return $r1;
    }
    public com.dropbox.sync.android.DbxError$Category getCategory()
    {
        com.dropbox.sync.android.DbxError r0;
        com.dropbox.sync.android.DbxError$Category r1;

        r0 := @this: com.dropbox.sync.android.DbxError;

        r1 = r0.<com.dropbox.sync.android.DbxError: com.dropbox.sync.android.DbxError$Category mCategory>;

        return r1;
    }
    public java.lang.String getDescription()
    {
        com.dropbox.sync.android.DbxError r0;
        java.lang.String r1;

        r0 := @this: com.dropbox.sync.android.DbxError;

        r1 = r0.<com.dropbox.sync.android.DbxError: java.lang.String mDescription>;

        return r1;
    }
    int getNativeCode()
    {
        com.dropbox.sync.android.DbxError r0;
        int i0;

        r0 := @this: com.dropbox.sync.android.DbxError;

        i0 = r0.<com.dropbox.sync.android.DbxError: int mNativeCode>;

        return i0;
    }
