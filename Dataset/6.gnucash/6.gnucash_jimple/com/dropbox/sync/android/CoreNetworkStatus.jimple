com.dropbox.sync.android.CoreNetworkStatus extends java.lang.Object
private static final java.lang.String TAG
private static final java.lang.Object sInitLock
private static com.dropbox.sync.android.CoreNetworkStatus sInstance
private final java.util.Set mListeners
private final com.dropbox.sync.android.CoreLogger mLog
private com.dropbox.sync.android.DbxNetworkStatus mStatus
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;

        $r1 = class "Lcom/dropbox/sync/android/CoreNetworkStatus;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.CoreNetworkStatus: java.lang.String TAG> = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.dropbox.sync.android.CoreNetworkStatus: java.lang.Object sInitLock> = $r2;

        return;
    }
    private void <init>()
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        com.dropbox.sync.android.CoreLogger $r1;
        java.util.HashSet $r2;
        com.dropbox.sync.android.DbxNetworkStatus $r3;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.dropbox.sync.android.CoreNetworkStatus: java.util.Set mListeners> = $r2;

        $r3 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ONLINE_WITH_UNKNOWN_TYPE>;

        r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus mStatus> = $r3;

        $r1 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.CoreLogger mLog> = $r1;

        return;
    }
    private com.dropbox.sync.android.DbxNetworkStatus getCurrentDeviceStatus(android.content.Context, android.net.NetworkInfo)
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        android.content.Context $r1;
        android.net.NetworkInfo $r2;
        boolean z0, $z1;
        int $i0;
        java.lang.Object $r3;
        android.telephony.TelephonyManager $r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7;
        com.dropbox.sync.android.DbxNetworkStatus r9;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.NetworkInfo;

        z0 = 0;

        if $r2 == null goto label02;

        $z1 = virtualinvoke $r2.<android.net.NetworkInfo: boolean isConnected()>();

        if $z1 == 0 goto label02;

        $z1 = 1;

     label01:
        if $z1 == 0 goto label14;

        $i0 = virtualinvoke $r2.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label03;

        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus WIFI>;

        return r9;

     label02:
        $z1 = 0;

        goto label01;

     label03:
        $z1 = virtualinvoke $r2.<android.net.NetworkInfo: boolean isRoaming()>();

        if $z1 == 0 goto label04;

        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ROAMING>;

        return r9;

     label04:
        if $i0 == 0 goto label05;

        if $i0 == 4 goto label05;

        if $i0 != 5 goto label06;

     label05:
        z0 = 1;

     label06:
        if z0 == 0 goto label13;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r4 = (android.telephony.TelephonyManager) $r3;

        $i0 = virtualinvoke $r4.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label10;
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label08;
            case 12: goto label09;
            case 13: goto label11;
            case 14: goto label09;
            case 15: goto label11;
            default: goto label07;
        };

     label07:
        $r5 = staticinvoke <com.dropbox.sync.android.CoreLogger: com.dropbox.sync.android.CoreLogger getGlobal()>();

        $r6 = <com.dropbox.sync.android.CoreNetworkStatus: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateNetworkStatus saw unexpected network subtype of ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.dropbox.sync.android.CoreLogger: void e(java.lang.String,java.lang.String)>($r6, $r8);

        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ONLINE_WITH_UNKNOWN_TYPE>;

        return r9;

     label08:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus WWAN_EDGE>;

        return r9;

     label09:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus WWAN_3G>;

        return r9;

     label10:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus WWAN_3G_PLUS>;

        return r9;

     label11:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus WWAN_4G>;

        return r9;

     label12:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ONLINE_WITH_UNKNOWN_TYPE>;

        return r9;

     label13:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus OFFLINE>;

        return r9;

     label14:
        r9 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus OFFLINE>;

        return r9;
    }
    public static com.dropbox.sync.android.CoreNetworkStatus getInstance()
    {
        java.lang.Object $r0;
        com.dropbox.sync.android.CoreNetworkStatus $r1;
        java.lang.Throwable $r2;

        $r0 = <com.dropbox.sync.android.CoreNetworkStatus: java.lang.Object sInitLock>;

        entermonitor $r0;

     label1:
        $r1 = <com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.CoreNetworkStatus sInstance>;

        if $r1 != null goto label2;

        $r1 = new com.dropbox.sync.android.CoreNetworkStatus;

        specialinvoke $r1.<com.dropbox.sync.android.CoreNetworkStatus: void <init>()>();

        <com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.CoreNetworkStatus sInstance> = $r1;

     label2:
        $r1 = <com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.CoreNetworkStatus sInstance>;

        exitmonitor $r0;

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    public void addListener(com.dropbox.sync.android.CoreNetworkStatus$Listener)
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        com.dropbox.sync.android.CoreNetworkStatus$Listener $r1;
        java.util.Set $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        $r1 := @parameter0: com.dropbox.sync.android.CoreNetworkStatus$Listener;

        entermonitor r0;

        if $r1 == null goto label2;

     label1:
        $r2 = r0.<com.dropbox.sync.android.CoreNetworkStatus: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.dropbox.sync.android.DbxNetworkStatus getStatus(android.content.Context)
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        android.content.Context $r1;
        com.dropbox.sync.android.DbxNetworkStatus $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        $r1 := @parameter0: android.content.Context;

        entermonitor r0;

     label1:
        $r3 = r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus mStatus>;

        $r2 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ONLINE_WITH_UNKNOWN_TYPE>;

        if $r3 != $r2 goto label4;

        if $r1 != null goto label3;

        $r2 = <com.dropbox.sync.android.DbxNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus ONLINE_WITH_UNKNOWN_TYPE>;

     label2:
        exitmonitor r0;

        return $r2;

     label3:
        virtualinvoke r0.<com.dropbox.sync.android.CoreNetworkStatus: void updateNetworkStatus(android.content.Context)>($r1);

     label4:
        $r2 = r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus mStatus>;

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }
    public void removeListener(com.dropbox.sync.android.CoreNetworkStatus$Listener)
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        com.dropbox.sync.android.CoreNetworkStatus$Listener $r1;
        java.util.Set $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        $r1 := @parameter0: com.dropbox.sync.android.CoreNetworkStatus$Listener;

        entermonitor r0;

        if $r1 == null goto label2;

     label1:
        $r2 = r0.<com.dropbox.sync.android.CoreNetworkStatus: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void updateNetworkStatus(android.content.Context)
    {
        com.dropbox.sync.android.CoreNetworkStatus r0;
        android.content.Context $r1;
        java.util.HashSet r2;
        java.lang.String $r3, $r10;
        java.lang.Object $r4;
        android.net.ConnectivityManager r5;
        android.net.NetworkInfo $r6;
        com.dropbox.sync.android.DbxNetworkStatus $r7, $r11;
        com.dropbox.sync.android.CoreLogger $r8;
        java.lang.StringBuilder $r9;
        java.util.Set $r12;
        java.util.Iterator $r13;
        boolean $z0;
        com.dropbox.sync.android.CoreNetworkStatus$Listener r14;
        java.lang.Throwable $r15;

        r0 := @this: com.dropbox.sync.android.CoreNetworkStatus;

        $r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r5 = (android.net.ConnectivityManager) $r4;

        $r6 = virtualinvoke r5.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        $r7 = specialinvoke r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus getCurrentDeviceStatus(android.content.Context,android.net.NetworkInfo)>($r1, $r6);

        $r8 = r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.CoreLogger mLog>;

        $r3 = <com.dropbox.sync.android.CoreNetworkStatus: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating network status: ");

        $r10 = virtualinvoke $r7.<com.dropbox.sync.android.DbxNetworkStatus: java.lang.String name()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r3, $r10);

        r2 = null;

        entermonitor r0;

     label1:
        $r11 = r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus mStatus>;

        if $r7 == $r11 goto label2;

        r0.<com.dropbox.sync.android.CoreNetworkStatus: com.dropbox.sync.android.DbxNetworkStatus mStatus> = $r7;

        r2 = new java.util.HashSet;

        $r12 = r0.<com.dropbox.sync.android.CoreNetworkStatus: java.util.Set mListeners>;

        specialinvoke r2.<java.util.HashSet: void <init>(java.util.Collection)>($r12);

     label2:
        exitmonitor r0;

     label3:
        if r2 == null goto label8;

        $r13 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.dropbox.sync.android.CoreNetworkStatus$Listener) $r4;

        interfaceinvoke r14.<com.dropbox.sync.android.CoreNetworkStatus$Listener: void onNetworkStatusChange()>();

        goto label4;

     label5:
        $r15 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r15;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
