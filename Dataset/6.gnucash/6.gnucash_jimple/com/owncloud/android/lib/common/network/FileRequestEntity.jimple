com.owncloud.android.lib.common.network.FileRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity com.owncloud.android.lib.common.network.ProgressiveDataTransferer
final java.lang.String mContentType
java.util.Set mDataTransferListeners
final java.io.File mFile
    public void <init>(java.io.File, java.lang.String)
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        java.io.File $r1;
        java.lang.String $r2;
        java.util.HashSet $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners> = $r3;

        r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.io.File mFile> = $r1;

        r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.lang.String mContentType> = $r2;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File may not be null");

        throw $r4;

     label1:
        return;
    }
    public void addDatatransferProgressListener(com.owncloud.android.lib.common.network.OnDatatransferProgressListener)
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        com.owncloud.android.lib.common.network.OnDatatransferProgressListener $r1;
        java.util.Set $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        $r1 := @parameter0: com.owncloud.android.lib.common.network.OnDatatransferProgressListener;

        $r2 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void addDatatransferProgressListeners(java.util.Collection)
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        java.util.Collection r1;
        java.util.Set $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public long getContentLength()
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        long $l0;
        java.io.File $r1;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        $r1 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }
    public java.lang.String getContentType()
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        java.lang.String r1;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        r1 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.lang.String mContentType>;

        return r1;
    }
    public boolean isRepeatable()
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        return 1;
    }
    public void removeDatatransferProgressListener(com.owncloud.android.lib.common.network.OnDatatransferProgressListener)
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        com.owncloud.android.lib.common.network.OnDatatransferProgressListener $r1;
        java.util.Set $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        $r1 := @parameter0: com.owncloud.android.lib.common.network.OnDatatransferProgressListener;

        $r2 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void writeRequest(java.io.OutputStream) throws java.io.IOException
    {
        com.owncloud.android.lib.common.network.FileRequestEntity r0;
        java.io.OutputStream $r1;
        java.io.IOException r2;
        java.io.RandomAccessFile r3;
        java.nio.ByteBuffer $r4;
        java.io.File $r5;
        java.nio.channels.FileChannel $r6;
        long l0, $l1, l2;
        byte $b3;
        int $i4;
        byte[] $r7;
        java.util.Set $r8, $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        com.owncloud.android.lib.common.network.OnDatatransferProgressListener $r12;
        java.lang.String $r13;
        java.lang.Throwable $r14, $r16;
        java.lang.RuntimeException $r15;

        r0 := @this: com.owncloud.android.lib.common.network.FileRequestEntity;

        $r1 := @parameter0: java.io.OutputStream;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4096);

        r3 = new java.io.RandomAccessFile;

        $r5 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.io.File mFile>;

        specialinvoke r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r5, "r");

        $r6 = virtualinvoke r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        l0 = 0L;

        $r5 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.io.File mFile>;

        $l1 = virtualinvoke $r5.<java.io.File: long length()>();

        l2 = $l1;

        $b3 = $l1 cmp 0L;

        if $b3 != 0 goto label01;

        l2 = -1L;

     label01:
        $i4 = virtualinvoke $r6.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>($r4);

     label02:
        if $i4 < 0 goto label15;

     label03:
        $r7 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i4);

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label04:
        $l1 = (long) $i4;

        l0 = l0 + $l1;

     label05:
        $r8 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        entermonitor $r8;

     label06:
        $r9 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.util.Set mDataTransferListeners>;

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.owncloud.android.lib.common.network.OnDatatransferProgressListener) $r11;

        $l1 = (long) $i4;

        $r5 = r0.<com.owncloud.android.lib.common.network.FileRequestEntity: java.io.File mFile>;

        $r13 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r12.<com.owncloud.android.lib.common.network.OnDatatransferProgressListener: void onTransferProgress(long,long,long,java.lang.String)>($l1, l0, l2, $r13);

        goto label07;

     label08:
        $r14 := @caughtexception;

        exitmonitor $r8;

     label09:
        throw $r14;

     label10:
        r2 := @caughtexception;

     label11:
        $r13 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void e(java.lang.String,java.lang.String)>("FileRequestException", $r13);

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Ugly solution to workaround the default policy of retries when the server falls while uploading ; temporal fix; really", r2);

        throw $r15;

     label12:
        $r16 := @caughtexception;

        virtualinvoke $r6.<java.nio.channels.FileChannel: void close()>();

        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

        throw $r16;

     label13:
        exitmonitor $r8;

     label14:
        goto label01;

     label15:
        virtualinvoke $r6.<java.nio.channels.FileChannel: void close()>();

        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

        return;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label09 with label08;
        catch java.io.IOException from label09 to label10 with label10;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label08;
    }
