com.owncloud.android.lib.common.network.AdvancedSslSocketFactory extends java.lang.Object implements org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory
private static final java.lang.String TAG
private org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier
private javax.net.ssl.SSLContext mSslContext
private com.owncloud.android.lib.common.network.AdvancedX509TrustManager mTrustManager
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/owncloud/android/lib/common/network/AdvancedSslSocketFactory;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>(javax.net.ssl.SSLContext, com.owncloud.android.lib.common.network.AdvancedX509TrustManager, org.apache.http.conn.ssl.X509HostnameVerifier)
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        javax.net.ssl.SSLContext $r1;
        com.owncloud.android.lib.common.network.AdvancedX509TrustManager $r2;
        org.apache.http.conn.ssl.X509HostnameVerifier $r3, $r5;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: javax.net.ssl.SSLContext;

        $r2 := @parameter1: com.owncloud.android.lib.common.network.AdvancedX509TrustManager;

        $r3 := @parameter2: org.apache.http.conn.ssl.X509HostnameVerifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext> = null;

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: com.owncloud.android.lib.common.network.AdvancedX509TrustManager mTrustManager> = null;

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier> = null;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AdvancedSslSocketFactory can not be created with a null SSLContext");

        throw $r4;

     label1:
        if $r2 != null goto label2;

        $r5 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier>;

        if $r5 == null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AdvancedSslSocketFactory can not be created with a null Trust Manager and a not null Hostname Verifier");

        throw $r4;

     label2:
        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext> = $r1;

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: com.owncloud.android.lib.common.network.AdvancedX509TrustManager mTrustManager> = $r2;

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier> = $r3;

        return;
    }
    private void enableSecureProtocols(java.net.Socket)
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        javax.net.ssl.SSLContext $r1;
        java.net.Socket $r2;
        javax.net.ssl.SSLParameters $r3;
        java.lang.String[] $r4;
        javax.net.ssl.SSLSocket $r5;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r2 := @parameter0: java.net.Socket;

        $r1 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>();

        $r5 = (javax.net.ssl.SSLSocket) $r2;

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r4);

        return;
    }
    private void verifyPeerIdentity(java.lang.String, int, java.net.Socket) throws java.io.IOException
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.lang.String $r1, $r11;
        int $i0;
        java.net.Socket $r2;
        javax.net.ssl.SSLHandshakeException r3;
        javax.net.ssl.SSLPeerUnverifiedException r4;
        com.owncloud.android.lib.common.network.CertificateCombinedException r5;
        javax.net.ssl.SSLSocket $r6;
        javax.net.ssl.SSLSession r7, $r19;
        boolean z0, $z1;
        org.apache.http.conn.ssl.X509HostnameVerifier $r8;
        java.security.cert.X509Certificate $r9;
        java.lang.StringBuilder $r10;
        java.security.cert.Certificate[] $r12;
        java.security.cert.Certificate $r13;
        java.io.IOException r14;
        java.lang.RuntimeException r15;
        java.lang.Throwable $r16, r17;
        javax.net.ssl.SSLException r18;
        com.owncloud.android.lib.common.network.AdvancedX509TrustManager $r20;
        java.lang.Exception $r21;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.Socket;

        r5 = null;

     label01:
        $r6 = (javax.net.ssl.SSLSocket) $r2;

     label02:
        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void startHandshake()>();

     label03:
        r5 = null;

     label04:
        r7 = null;

        z0 = 1;

        $r8 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier>;

        if $r8 == null goto label08;

        if r5 == null goto label30;

     label05:
        $r9 = virtualinvoke r5.<com.owncloud.android.lib.common.network.CertificateCombinedException: java.security.cert.X509Certificate getServerCertificate()>();

     label06:
        $r8 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier>;

     label07:
        interfaceinvoke $r8.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>($r1, $r9);

     label08:
        if z0 != 0 goto label39;

        r4 = new javax.net.ssl.SSLPeerUnverifiedException;

        $r10 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Names in the server certificate do not match to ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the URL");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>($r11);

     label10:
        if r5 != null goto label44;

        r5 = new com.owncloud.android.lib.common.network.CertificateCombinedException;

     label11:
        $r12 = interfaceinvoke r7.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label12:
        $r13 = $r12[0];

        $r9 = (java.security.cert.X509Certificate) $r13;

     label13:
        specialinvoke r5.<com.owncloud.android.lib.common.network.CertificateCombinedException: void <init>(java.security.cert.X509Certificate)>($r9);

     label14:
        virtualinvoke r5.<com.owncloud.android.lib.common.network.CertificateCombinedException: void setHostInUrl(java.lang.String)>($r1);

     label15:
        virtualinvoke r5.<com.owncloud.android.lib.common.network.CertificateCombinedException: void setSslPeerUnverifiedException(javax.net.ssl.SSLPeerUnverifiedException)>(r4);

        virtualinvoke r4.<javax.net.ssl.SSLPeerUnverifiedException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r4;

     label16:
        r14 := @caughtexception;

     label17:
        virtualinvoke $r2.<java.net.Socket: void close()>();

     label18:
        throw r14;

     label19:
        r15 := @caughtexception;

        z0 = r15 instanceof com.owncloud.android.lib.common.network.CertificateCombinedException;

        if z0 == 0 goto label21;

        r5 = (com.owncloud.android.lib.common.network.CertificateCombinedException) r15;

     label20:
        if r5 != null goto label27;

        throw r15;

     label21:
        $r16 = virtualinvoke r15.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

     label22:
        r17 = $r16;

        $r16 = null;

     label23:
        if r17 == null goto label26;

        if r17 == $r16 goto label26;

        z0 = r17 instanceof com.owncloud.android.lib.common.network.CertificateCombinedException;

        if z0 != 0 goto label26;

        $r16 = r17;

     label24:
        r17 = virtualinvoke r17.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label25:
        goto label23;

     label26:
        if r17 == null goto label20;

        z0 = r17 instanceof com.owncloud.android.lib.common.network.CertificateCombinedException;

        if z0 == 0 goto label20;

        r5 = (com.owncloud.android.lib.common.network.CertificateCombinedException) r17;

        goto label20;

     label27:
        virtualinvoke r5.<com.owncloud.android.lib.common.network.CertificateCombinedException: void setHostInUrl(java.lang.String)>($r1);

     label28:
        goto label04;

     label29:
        r18 := @caughtexception;

        z0 = 0;

        goto label08;

     label30:
        $r6 = (javax.net.ssl.SSLSocket) $r2;

     label31:
        $r19 = virtualinvoke $r6.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

     label32:
        r7 = $r19;

        $r20 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: com.owncloud.android.lib.common.network.AdvancedX509TrustManager mTrustManager>;

     label33:
        $r12 = interfaceinvoke $r19.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label34:
        $r13 = $r12[0];

        $r9 = (java.security.cert.X509Certificate) $r13;

     label35:
        $z1 = virtualinvoke $r20.<com.owncloud.android.lib.common.network.AdvancedX509TrustManager: boolean isKnownServer(java.security.cert.X509Certificate)>($r9);

     label36:
        if $z1 != 0 goto label08;

        $r8 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier>;

     label37:
        z0 = interfaceinvoke $r8.<org.apache.http.conn.ssl.X509HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>($r1, $r19);

     label38:
        goto label08;

     label39:
        if r5 == null goto label43;

        r3 = new javax.net.ssl.SSLHandshakeException;

     label40:
        specialinvoke r3.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>("Server certificate could not be verified");

        virtualinvoke r3.<javax.net.ssl.SSLHandshakeException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r3;

     label41:
        r14 := @caughtexception;

        goto label17;

     label42:
        $r21 := @caughtexception;

        goto label18;

     label43:
        return;

     label44:
        goto label15;

        catch java.lang.RuntimeException from label01 to label03 with label19;
        catch java.io.IOException from label02 to label03 with label16;
        catch java.io.IOException from label05 to label06 with label41;
        catch javax.net.ssl.SSLException from label07 to label08 with label29;
        catch java.io.IOException from label07 to label08 with label41;
        catch java.io.IOException from label09 to label10 with label41;
        catch java.io.IOException from label11 to label12 with label41;
        catch java.io.IOException from label13 to label14 with label41;
        catch java.io.IOException from label14 to label16 with label16;
        catch java.lang.Exception from label17 to label18 with label42;
        catch java.io.IOException from label21 to label22 with label16;
        catch java.io.IOException from label24 to label25 with label16;
        catch java.io.IOException from label27 to label28 with label16;
        catch java.io.IOException from label31 to label32 with label41;
        catch java.io.IOException from label33 to label34 with label41;
        catch java.io.IOException from label35 to label36 with label41;
        catch java.io.IOException from label37 to label38 with label41;
        catch java.io.IOException from label40 to label41 with label41;
    }
    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.lang.String $r1, $r2, $r4;
        int $i0;
        java.lang.StringBuilder $r3;
        javax.net.ssl.SSLContext $r5;
        javax.net.ssl.SSLSocketFactory $r6;
        java.net.Socket $r7;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = <com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating SSL Socket with remote ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void d(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r7 = virtualinvoke $r6.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void enableSecureProtocols(java.net.Socket)>($r7);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void verifyPeerIdentity(java.lang.String,int,java.net.Socket)>($r1, $i0, $r7);

        return $r7;
    }
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.net.Socket $r5;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void enableSecureProtocols(java.net.Socket)>($r5);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void verifyPeerIdentity(java.lang.String,int,java.net.Socket)>($r1, $i0, $r5);

        return $r5;
    }
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.lang.String $r1, $r6, $r8;
        int $i0, $i1, $i2, $i3;
        java.net.InetAddress $r2;
        org.apache.commons.httpclient.params.HttpConnectionParams $r3;
        java.net.InetSocketAddress r4, r5;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r9;
        javax.net.ssl.SSLContext $r10;
        javax.net.ssl.SSLSocketFactory $r11;
        java.net.Socket $r12;
        javax.net.ssl.SSLSocket $r13;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 := @parameter4: org.apache.commons.httpclient.params.HttpConnectionParams;

        $r6 = <com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating SSL Socket with remote ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", local ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", params: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void d(java.lang.String,java.lang.String)>($r6, $r8);

        if $r3 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r9;

     label1:
        $i2 = virtualinvoke $r3.<org.apache.commons.httpclient.params.HttpConnectionParams: int getConnectionTimeout()>();

        $r10 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        $r11 = virtualinvoke $r10.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r6 = <com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... with connection timeout ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and socket timeout ");

        $i3 = virtualinvoke $r3.<org.apache.commons.httpclient.params.HttpConnectionParams: int getSoTimeout()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void d(java.lang.String,java.lang.String)>($r6, $r8);

        $r12 = virtualinvoke $r11.<javax.net.SocketFactory: java.net.Socket createSocket()>();

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void enableSecureProtocols(java.net.Socket)>($r12);

        r4 = new java.net.InetSocketAddress;

        specialinvoke r4.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r2, $i1);

        r5 = new java.net.InetSocketAddress;

        specialinvoke r5.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r1, $i0);

        $i1 = virtualinvoke $r3.<org.apache.commons.httpclient.params.HttpConnectionParams: int getSoTimeout()>();

        virtualinvoke $r12.<java.net.Socket: void setSoTimeout(int)>($i1);

        virtualinvoke $r12.<java.net.Socket: void bind(java.net.SocketAddress)>(r4);

        $r13 = (javax.net.ssl.SSLSocket) $r12;

        staticinvoke <com.owncloud.android.lib.common.network.ServerNameIndicator: void setServerNameIndication(java.lang.String,javax.net.ssl.SSLSocket)>($r1, $r13);

        virtualinvoke $r12.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r5, $i2);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void verifyPeerIdentity(java.lang.String,int,java.net.Socket)>($r1, $i0, $r12);

        return $r12;
    }
    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException, java.net.UnknownHostException
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void enableSecureProtocols(java.net.Socket)>($r1);

        specialinvoke r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: void verifyPeerIdentity(java.lang.String,int,java.net.Socket)>($r2, $i0, $r1);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lcom/owncloud/android/lib/common/network/AdvancedSslSocketFactory;");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.apache.http.conn.ssl.X509HostnameVerifier getHostNameVerifier()
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        org.apache.http.conn.ssl.X509HostnameVerifier r1;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        r1 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier>;

        return r1;
    }
    public javax.net.ssl.SSLContext getSslContext()
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        javax.net.ssl.SSLContext r1;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        r1 = r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: javax.net.ssl.SSLContext mSslContext>;

        return r1;
    }
    public int hashCode()
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        int $i0;
        java.lang.Class $r1;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 = class "Lcom/owncloud/android/lib/common/network/AdvancedSslSocketFactory;";

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
    public void setHostNameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)
    {
        com.owncloud.android.lib.common.network.AdvancedSslSocketFactory r0;
        org.apache.http.conn.ssl.X509HostnameVerifier $r1;

        r0 := @this: com.owncloud.android.lib.common.network.AdvancedSslSocketFactory;

        $r1 := @parameter0: org.apache.http.conn.ssl.X509HostnameVerifier;

        r0.<com.owncloud.android.lib.common.network.AdvancedSslSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier mHostnameVerifier> = $r1;

        return;
    }
