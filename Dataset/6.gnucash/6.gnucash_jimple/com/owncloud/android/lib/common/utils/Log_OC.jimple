com.owncloud.android.lib.common.utils.Log_OC extends java.lang.Object
private static final java.lang.String LOG_FOLDER_NAME
private static final long MAX_FILE_SIZE
private static final java.lang.String SIMPLE_DATE_FORMAT
private static boolean isEnabled
private static boolean isMaxFileSizeReached
private static java.io.BufferedWriter mBuf
private static java.io.File mFolder
private static java.io.File mLogFile
private static java.lang.String[] mLogFileNames
private static java.lang.String mOwncloudDataFolderLog
    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String mOwncloudDataFolderLog> = "owncloud_log";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "currentLog.txt";

        $r0[1] = "olderLog.txt";

        <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String[] mLogFileNames> = $r0;

        <com.owncloud.android.lib.common.utils.Log_OC: boolean isMaxFileSizeReached> = 0;

        <com.owncloud.android.lib.common.utils.Log_OC: boolean isEnabled> = 0;

        return;
    }
    public void <init>()
    {
        com.owncloud.android.lib.common.utils.Log_OC r0;

        r0 := @this: com.owncloud.android.lib.common.utils.Log_OC;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void appendLog(java.lang.String)
    {
        java.lang.String $r0, $r5;
        java.io.IOException r1;
        java.io.File r2, $r4;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String[] $r6;
        java.text.SimpleDateFormat $r7;
        java.util.Calendar $r8;
        java.util.Date $r9;
        java.io.BufferedWriter $r10;
        java.io.FileWriter $r11;
        long $l0;
        byte $b1;

        $r0 := @parameter0: java.lang.String;

        $z0 = <com.owncloud.android.lib.common.utils.Log_OC: boolean isEnabled>;

        if $z0 == 0 goto label18;

        $z0 = <com.owncloud.android.lib.common.utils.Log_OC: boolean isMaxFileSizeReached>;

        if $z0 == 0 goto label02;

        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String[] mLogFileNames>;

        $r5 = $r6[1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $r4 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $r4 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

        virtualinvoke $r4.<java.io.File: boolean renameTo(java.io.File)>(r2);

     label01:
        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String[] mLogFileNames>;

        $r5 = $r6[0];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r5);

        <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile> = r2;

        <com.owncloud.android.lib.common.utils.Log_OC: boolean isMaxFileSizeReached> = 0;

     label02:
        $r7 = new java.text.SimpleDateFormat;

        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy/MM/dd HH:mm:ss");

        $r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        $r10 = new java.io.BufferedWriter;

        $r11 = new java.io.FileWriter;

        r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

     label03:
        specialinvoke $r11.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r2, 1);

        specialinvoke $r10.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r11);

     label04:
        <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf> = $r10;

        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label05:
        virtualinvoke $r10.<java.io.BufferedWriter: void newLine()>();

     label06:
        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label07:
        virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r5);

     label08:
        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label09:
        virtualinvoke $r10.<java.io.BufferedWriter: void newLine()>();

     label10:
        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label11:
        virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>($r0);

     label12:
        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label13:
        virtualinvoke $r10.<java.io.BufferedWriter: void newLine()>();

     label14:
        $r10 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf>;

     label15:
        virtualinvoke $r10.<java.io.BufferedWriter: void close()>();

     label16:
        r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

        $l0 = virtualinvoke r2.<java.io.File: long length()>();

        $b1 = $l0 cmp 1000000L;

        if $b1 <= 0 goto label18;

        <com.owncloud.android.lib.common.utils.Log_OC: boolean isMaxFileSizeReached> = 1;

        return;

     label17:
        r1 := @caughtexception;

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

        goto label16;

     label18:
        return;

        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label17;
    }
    private static void appendPhoneInfo()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model : ");

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Brand : ");

        $r1 = <android.os.Build: java.lang.String BRAND>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Product : ");

        $r1 = <android.os.Build: java.lang.String PRODUCT>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device : ");

        $r1 = <android.os.Build: java.lang.String DEVICE>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version-Codename : ");

        $r1 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version-Release : ");

        $r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r1);

        return;
    }
    public static void d(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void d(java.lang.String, java.lang.String, java.lang.Exception)
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        java.lang.StackTraceElement[] $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Exception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Exception : ");

        $r4 = virtualinvoke $r2.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void deleteHistoryLogging()
    {
        java.io.File r0, r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.String[] $r4;
        int i0, $i1;

        r0 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r3 = <java.io.File: java.lang.String separator>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        r1 = new java.io.File;

        $r3 = $r4[i0];

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r3);

        virtualinvoke r1.<java.io.File: boolean delete()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static void e(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void e(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.StackTraceElement[] $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Exception : ");

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static java.lang.String[] getLogFileNames()
    {
        java.lang.String[] r0;

        r0 = <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String[] mLogFileNames>;

        return r0;
    }
    public static void i(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void setLogDataFolder(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String mOwncloudDataFolderLog> = $r0;

        return;
    }
    public static void startLogging()
    {
        java.io.IOException r0;
        java.lang.StringBuilder $r1;
        java.io.File $r2, $r4;
        java.lang.String $r3;
        java.lang.String[] $r5;
        boolean z0, $z1;
        java.io.BufferedWriter $r6;
        java.io.FileWriter $r7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String mOwncloudDataFolderLog>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("log");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder> = $r2;

        $r2 = new java.io.File;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = <com.owncloud.android.lib.common.utils.Log_OC: java.lang.String[] mLogFileNames>;

        $r3 = $r5[0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile> = $r2;

        z0 = 0;

        $r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        $r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mFolder>;

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        z0 = 1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LOG_OC", "Log file created");

     label1:
        $r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

     label2:
        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label3:
        $r6 = new java.io.BufferedWriter;

        $r7 = new java.io.FileWriter;

        $r2 = <com.owncloud.android.lib.common.utils.Log_OC: java.io.File mLogFile>;

     label4:
        specialinvoke $r7.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r2, 1);

        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7);

     label5:
        <com.owncloud.android.lib.common.utils.Log_OC: java.io.BufferedWriter mBuf> = $r6;

        <com.owncloud.android.lib.common.utils.Log_OC: boolean isEnabled> = 1;

        if z0 == 0 goto label9;

     label6:
        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendPhoneInfo()>();

     label7:
        return;

     label8:
        r0 := @caughtexception;

        virtualinvoke r0.<java.io.IOException: void printStackTrace()>();

     label9:
        return;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    public static void v(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void w(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
    public static void wtf(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.owncloud.android.lib.common.utils.Log_OC: void appendLog(java.lang.String)>($r0);

        return;
    }
