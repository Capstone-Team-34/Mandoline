com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser extends java.lang.Object
private static final java.lang.String EXCEPTION_STRING
private static final java.lang.String EXCEPTION_UPLOAD_STRING
private static final java.lang.String NODE_ERROR
private static final java.lang.String NODE_EXCEPTION
private static final java.lang.String ns
    static void <clinit>()
    {
        <com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser: java.lang.String ns> = null;

        return;
    }
    public void <init>()
    {
        com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser r0;

        r0 := @this: com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private boolean readError(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String r2, $r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = "";

        $r3 = <com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser: java.lang.String ns>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r3, "d:error");

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 3 goto label3;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label1;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("s:exception");

        if $z0 == 0 goto label2;

        r2 = specialinvoke r0.<com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser: java.lang.String readText(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label2:
        specialinvoke r0.<com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser: void skip(org.xmlpull.v1.XmlPullParser)>($r1);

        goto label1;

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OC\\Connector\\Sabre\\Exception\\InvalidPath");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OCP\\Files\\InvalidPathException");

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }
    private java.lang.String readText(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 != 4 goto label1;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        return $r2;

     label1:
        return "";
    }
    private void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 2 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $i0 = 1;

     label2:
        if $i0 == 0 goto label6;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        lookupswitch($i1)
        {
            case 2: goto label4;
            case 3: goto label5;
            default: goto label3;
        };

     label3:
        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $i0 = $i0 + -1;

        goto label2;

     label6:
        return;
    }
    public boolean parseXMLResponse(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser r0;
        java.io.InputStream $r1;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;
        java.lang.Throwable $r4;

        r0 := @this: com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(1);

        $r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 0);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r1, null);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $z0 = specialinvoke r0.<com.owncloud.android.lib.common.operations.InvalidCharacterExceptionParser: boolean readError(org.xmlpull.v1.XmlPullParser)>($r3);

     label2:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return $z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
