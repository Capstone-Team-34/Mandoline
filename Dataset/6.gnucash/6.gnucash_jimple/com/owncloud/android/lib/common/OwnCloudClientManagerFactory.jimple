com.owncloud.android.lib.common.OwnCloudClientManagerFactory extends java.lang.Object
private static com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy sDefaultPolicy
private static com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton
private static java.lang.String sUserAgent
    static void <clinit>()
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy $r0;

        $r0 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy ALWAYS_NEW_CLIENT>;

        <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy sDefaultPolicy> = $r0;

        return;
    }
    public void <init>()
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory r0;

        r0 := @this: com.owncloud.android.lib.common.OwnCloudClientManagerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static boolean defaultSingletonMustBeUpdated(com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy)
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy $r0, $r2;
        com.owncloud.android.lib.common.OwnCloudClientManager $r1;
        boolean $z0;

        $r0 := @parameter0: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy;

        $r1 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy ALWAYS_NEW_CLIENT>;

        if $r0 != $r2 goto label2;

        $r1 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton>;

        $z0 = $r1 instanceof com.owncloud.android.lib.common.SimpleFactoryManager;

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $r2 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy SINGLE_SESSION_PER_ACCOUNT>;

        if $r0 != $r2 goto label3;

        $r1 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton>;

        $z0 = $r1 instanceof com.owncloud.android.lib.common.SingleSessionManager;

        if $z0 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }
    public static com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy getDefaultPolicy()
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy r0;

        r0 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy sDefaultPolicy>;

        return r0;
    }
    public static com.owncloud.android.lib.common.OwnCloudClientManager getDefaultSingleton()
    {
        com.owncloud.android.lib.common.OwnCloudClientManager $r0;

        $r0 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton>;

        if $r0 != null goto label1;

        $r0 = staticinvoke <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager newDefaultOwnCloudClientManager()>();

        <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton> = $r0;

     label1:
        $r0 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton>;

        return $r0;
    }
    public static java.lang.String getUserAgent()
    {
        java.lang.String r0;

        r0 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: java.lang.String sUserAgent>;

        return r0;
    }
    public static com.owncloud.android.lib.common.OwnCloudClientManager newDefaultOwnCloudClientManager()
    {
        com.owncloud.android.lib.common.OwnCloudClientManager $r0;
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy $r1;

        $r1 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy sDefaultPolicy>;

        $r0 = staticinvoke <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager newOwnCloudClientManager(com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy)>($r1);

        return $r0;
    }
    public static com.owncloud.android.lib.common.OwnCloudClientManager newOwnCloudClientManager(com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy)
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy $r0;
        int $i0;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;
        com.owncloud.android.lib.common.SimpleFactoryManager $r3;
        com.owncloud.android.lib.common.SingleSessionManager $r4;

        $r0 := @parameter0: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy;

        $r1 = <com.owncloud.android.lib.common.OwnCloudClientManagerFactory$1: int[] $SwitchMap$com$owncloud$android$lib$common$OwnCloudClientManagerFactory$Policy>;

        $i0 = virtualinvoke $r0.<com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown policy");

        throw $r2;

     label2:
        $r3 = new com.owncloud.android.lib.common.SimpleFactoryManager;

        specialinvoke $r3.<com.owncloud.android.lib.common.SimpleFactoryManager: void <init>()>();

        return $r3;

     label3:
        $r4 = new com.owncloud.android.lib.common.SingleSessionManager;

        specialinvoke $r4.<com.owncloud.android.lib.common.SingleSessionManager: void <init>()>();

        return $r4;
    }
    public static void setDefaultPolicy(com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy)
    {
        com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Default policy cannot be NULL");

        throw $r1;

     label1:
        $z0 = staticinvoke <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: boolean defaultSingletonMustBeUpdated(com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy)>($r0);

        if $z0 == 0 goto label2;

        <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManager sDefaultSingleton> = null;

     label2:
        <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: com.owncloud.android.lib.common.OwnCloudClientManagerFactory$Policy sDefaultPolicy> = $r0;

        return;
    }
    public static void setUserAgent(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.owncloud.android.lib.common.OwnCloudClientManagerFactory: java.lang.String sUserAgent> = $r0;

        return;
    }
