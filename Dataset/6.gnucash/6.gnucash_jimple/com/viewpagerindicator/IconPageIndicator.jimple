com.viewpagerindicator.IconPageIndicator extends android.widget.HorizontalScrollView implements com.viewpagerindicator.PageIndicator
private java.lang.Runnable mIconSelector
private final com.viewpagerindicator.IcsLinearLayout mIconsLayout
private android.support.v4.view.ViewPager$OnPageChangeListener mListener
private int mSelectedIndex
private android.support.v4.view.ViewPager mViewPager
    public void <init>(android.content.Context)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.content.Context $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.viewpagerindicator.IconPageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.viewpagerindicator.IcsLinearLayout $r3;
        int $i0;
        android.widget.FrameLayout$LayoutParams $r4;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void setHorizontalScrollBarEnabled(boolean)>(0);

        $r3 = new com.viewpagerindicator.IcsLinearLayout;

        $i0 = <com.viewpagerindicator.R$attr: int vpiIconPageIndicatorStyle>;

        specialinvoke $r3.<com.viewpagerindicator.IcsLinearLayout: void <init>(android.content.Context,int)>($r1, $i0);

        r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout> = $r3;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        $r4 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r4.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-2, -1, 17);

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r4);

        return;
    }
    static java.lang.Runnable access$002(com.viewpagerindicator.IconPageIndicator, java.lang.Runnable)
    {
        com.viewpagerindicator.IconPageIndicator $r0;
        java.lang.Runnable $r1;

        $r0 := @parameter0: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter1: java.lang.Runnable;

        $r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector> = $r1;

        return $r1;
    }
    private void animateToIcon(int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        int $i0;
        android.view.View $r1;
        com.viewpagerindicator.IcsLinearLayout $r2;
        java.lang.Runnable $r3;
        com.viewpagerindicator.IconPageIndicator$1 $r4;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $i0 := @parameter0: int;

        $r2 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        $r1 = virtualinvoke $r2.<com.viewpagerindicator.IcsLinearLayout: android.view.View getChildAt(int)>($i0);

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        if $r3 == null goto label1;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: boolean removeCallbacks(java.lang.Runnable)>($r3);

     label1:
        $r4 = new com.viewpagerindicator.IconPageIndicator$1;

        specialinvoke $r4.<com.viewpagerindicator.IconPageIndicator$1: void <init>(com.viewpagerindicator.IconPageIndicator,android.view.View)>(r0, $r1);

        r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector> = $r4;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: boolean post(java.lang.Runnable)>($r3);

        return;
    }
    public void notifyDataSetChanged()
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.widget.ImageView r1;
        int $i0, $i1, i2;
        com.viewpagerindicator.IcsLinearLayout $r2;
        android.support.v4.view.ViewPager $r3;
        android.support.v4.view.PagerAdapter $r4;
        com.viewpagerindicator.IconPagerAdapter r5;
        android.content.Context $r6;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r2 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        virtualinvoke $r2.<com.viewpagerindicator.IcsLinearLayout: void removeAllViews()>();

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r4 = virtualinvoke $r3.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        r5 = (com.viewpagerindicator.IconPagerAdapter) $r4;

        $i1 = interfaceinvoke r5.<com.viewpagerindicator.IconPagerAdapter: int getCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        r1 = new android.widget.ImageView;

        $r6 = virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: android.content.Context getContext()>();

        $i0 = <com.viewpagerindicator.R$attr: int vpiIconPageIndicatorStyle>;

        specialinvoke r1.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r6, null, $i0);

        $i0 = interfaceinvoke r5.<com.viewpagerindicator.IconPagerAdapter: int getIconResId(int)>(i2);

        virtualinvoke r1.<android.widget.ImageView: void setImageResource(int)>($i0);

        $r2 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        virtualinvoke $r2.<com.viewpagerindicator.IcsLinearLayout: void addView(android.view.View)>(r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        i2 = r0.<com.viewpagerindicator.IconPageIndicator: int mSelectedIndex>;

        if i2 <= $i1 goto label3;

        $i1 = $i1 + -1;

        r0.<com.viewpagerindicator.IconPageIndicator: int mSelectedIndex> = $i1;

     label3:
        $i1 = r0.<com.viewpagerindicator.IconPageIndicator: int mSelectedIndex>;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void setCurrentItem(int)>($i1);

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void requestLayout()>();

        return;
    }
    public void onAttachedToWindow()
    {
        com.viewpagerindicator.IconPageIndicator r0;
        java.lang.Runnable $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        specialinvoke r0.<android.widget.HorizontalScrollView: void onAttachedToWindow()>();

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }
    public void onDetachedFromWindow()
    {
        com.viewpagerindicator.IconPageIndicator r0;
        java.lang.Runnable $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        specialinvoke r0.<android.widget.HorizontalScrollView: void onDetachedFromWindow()>();

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: java.lang.Runnable mIconSelector>;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: boolean removeCallbacks(java.lang.Runnable)>($r1);

     label1:
        return;
    }
    public void onPageScrollStateChanged(int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label1:
        return;
    }
    public void onPageScrolled(int, float, int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        int $i0, $i1;
        float $f0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label1:
        return;
    }
    public void onPageSelected(int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void setCurrentItem(int)>($i0);

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i0);

     label1:
        return;
    }
    public void setCurrentItem(int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        int $i0, $i1, i2;
        android.support.v4.view.ViewPager $r1;
        java.lang.IllegalStateException $r2;
        com.viewpagerindicator.IcsLinearLayout $r3;
        android.view.View $r4;
        boolean z0;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager has not been bound.");

        throw $r2;

     label1:
        r0.<com.viewpagerindicator.IconPageIndicator: int mSelectedIndex> = $i0;

        $r1 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        $i1 = virtualinvoke $r3.<com.viewpagerindicator.IcsLinearLayout: int getChildCount()>();

        i2 = 0;

     label2:
        if i2 >= $i1 goto label6;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: com.viewpagerindicator.IcsLinearLayout mIconsLayout>;

        $r4 = virtualinvoke $r3.<com.viewpagerindicator.IcsLinearLayout: android.view.View getChildAt(int)>(i2);

        if i2 != $i0 goto label5;

        z0 = 1;

     label3:
        virtualinvoke $r4.<android.view.View: void setSelected(boolean)>(z0);

        if z0 == 0 goto label4;

        specialinvoke r0.<com.viewpagerindicator.IconPageIndicator: void animateToIcon(int)>($i0);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        z0 = 0;

        goto label3;

     label6:
        return;
    }
    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener> = $r1;

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.support.v4.view.ViewPager $r1, $r3;
        android.support.v4.view.PagerAdapter $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(null);

     label2:
        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager does not have adapter instance.");

        throw $r4;

     label3:
        r0.<com.viewpagerindicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager> = $r1;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0);

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void notifyDataSetChanged()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager, int)
    {
        com.viewpagerindicator.IconPageIndicator r0;
        android.support.v4.view.ViewPager $r1;
        int $i0;

        r0 := @this: com.viewpagerindicator.IconPageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void setViewPager(android.support.v4.view.ViewPager)>($r1);

        virtualinvoke r0.<com.viewpagerindicator.IconPageIndicator: void setCurrentItem(int)>($i0);

        return;
    }
