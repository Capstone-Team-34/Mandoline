com.codetroopers.betterpickers.calendardatepicker.MonthAdapter extends android.widget.BaseAdapter implements com.codetroopers.betterpickers.calendardatepicker.MonthView$OnDayClickListener
protected static final int MONTHS_IN_YEAR
private static final java.lang.String TAG
protected static int WEEK_7_OVERHANG_HEIGHT
private final android.content.Context mContext
private final com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController
private com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay
private android.content.res.TypedArray mThemeColors
    static void <clinit>()
    {
        <com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: int WEEK_7_OVERHANG_HEIGHT> = 7;

        return;
    }
    public void <init>(android.content.Context, com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        android.content.Context $r1;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: android.content.Context mContext> = $r1;

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController> = $r2;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void init()>();

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getSelectedDay()>();

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void setSelectedDay(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r3);

        return;
    }
    private boolean isDayDisabled(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;
        android.util.SparseArray $r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: android.util.SparseArray getDisabledDays()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: android.util.SparseArray getDisabledDays()>();

        $i2 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i1 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

        $i0 = staticinvoke <com.codetroopers.betterpickers.Utils: int formatDisabledDayForKey(int,int,int)>($i2, $i0, $i1);

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>($i0);

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    private boolean isDayInRange(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1, $r3;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i0 = virtualinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int compareTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r3);

        if $i0 < 0 goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i0 = virtualinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int compareTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r3);

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isRangeMaxInMonth(int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i2 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        if $i2 != $i0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i0 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isRangeMinInMonth(int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i2 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        if $i2 != $i0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i0 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isSelectedDayInMonth(int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        $i2 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        if $i2 != $i0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        $i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
public abstract com.codetroopers.betterpickers.calendardatepicker.MonthView createMonthView(android.content.Context) { 
// no body
} 
    public int getCount()
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r2;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i0 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i1 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i0 = $i0 - $i1;

        $i0 = $i0 + 1;

        $i0 = $i0 * 12;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i1 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i1 = 11 - $i1;

        $i0 = $i0 - $i1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i1 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i0 = $i0 - $i1;

        return $i0;
    }
    public java.lang.Object getItem(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        return null;
    }
    public long getItemId(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0;
        long $l1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        return $l1;
    }
    public com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getSelectedDay()
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        return r1;
    }
    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        int $i0, i1, i2, $i3, i4;
        android.view.View $r1;
        android.view.ViewGroup $r2;
        android.widget.AbsListView$LayoutParams r3;
        java.util.HashMap r4;
        com.codetroopers.betterpickers.calendardatepicker.MonthView r5, $r12;
        java.lang.Object $r6;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r7;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r8;
        boolean $z0;
        android.util.SparseArray $r9;
        java.lang.Integer $r10;
        android.content.Context $r11;
        android.content.res.TypedArray $r13;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.ViewGroup;

        r4 = null;

        if $r1 == null goto label7;

        r5 = (com.codetroopers.betterpickers.calendardatepicker.MonthView) $r1;

        $r6 = virtualinvoke r5.<com.codetroopers.betterpickers.calendardatepicker.MonthView: java.lang.Object getTag()>();

        r4 = (java.util.HashMap) $r6;

     label1:
        if r4 != null goto label2;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

     label2:
        virtualinvoke r4.<java.util.HashMap: void clear()>();

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r8 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        i1 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        i1 = i1 + $i0;

        i1 = i1 % 12;

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r8 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i3 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i0 = $i3 + $i0;

        $i0 = $i0 / 12;

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r8 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i3 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        i2 = $i0 + $i3;

        i4 = -1;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: boolean isSelectedDayInMonth(int,int)>(i2, i1);

        if $z0 == 0 goto label3;

        $r8 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        i4 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

     label3:
        $i0 = -1;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: boolean isRangeMinInMonth(int,int)>(i2, i1);

        if $z0 == 0 goto label4;

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r8 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i0 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

     label4:
        $i3 = -1;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: boolean isRangeMaxInMonth(int,int)>(i2, i1);

        if $z0 == 0 goto label5;

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r8 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i3 = $r8.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

     label5:
        virtualinvoke r5.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void reuse()>();

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r9 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: android.util.SparseArray getDisabledDays()>();

        if $r9 == null goto label6;

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r9 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: android.util.SparseArray getDisabledDays()>();

        virtualinvoke r5.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setDisabledDays(android.util.SparseArray)>($r9);

     label6:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("selected_day", $r10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("year", $r10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("month", $r10);

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        i1 = interfaceinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: int getFirstDayOfWeek()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week_start", $r10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("range_min", $r10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("range_max", $r10);

        virtualinvoke r5.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setMonthParams(java.util.HashMap)>(r4);

        virtualinvoke r5.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void invalidate()>();

        return r5;

     label7:
        $r11 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: android.content.Context mContext>;

        $r12 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthView createMonthView(android.content.Context)>($r11);

        r5 = $r12;

        $r13 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: android.content.res.TypedArray mThemeColors>;

        virtualinvoke $r12.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setTheme(android.content.res.TypedArray)>($r13);

        r3 = new android.widget.AbsListView$LayoutParams;

        specialinvoke r3.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r12.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        virtualinvoke $r12.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setClickable(boolean)>(1);

        virtualinvoke $r12.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void setOnDayClickListener(com.codetroopers.betterpickers.calendardatepicker.MonthView$OnDayClickListener)>(r0);

        goto label1;
    }
    public boolean hasStableIds()
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        return 1;
    }
    protected void init()
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1, $r3;
        long $l0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;
        int $i1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>(long)>($l0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        $i1 = virtualinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int compareTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r3);

        if $i1 <= 0 goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r1 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMaxDate()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r1;

     label1:
        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i1 = virtualinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int compareTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r3);

        if $i1 >= 0 goto label2;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r1 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r1;

     label2:
        return;
    }
    public void onDayClick(com.codetroopers.betterpickers.calendardatepicker.MonthView, com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthView $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r2;
        boolean $z0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthView;

        $r2 := @parameter1: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        if $r2 == null goto label1;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: boolean isDayInRange(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r2);

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: boolean isDayDisabled(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r2);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void onDayTapped(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r2);

     label1:
        return;
    }
    protected void onDayTapped(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: void tryVibrate()>();

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i1 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i2 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

        interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: void onDayOfMonthSelected(int,int,int)>($i0, $i1, $i2);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void setSelectedDay(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        return;
    }
    public void setSelectedDay(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r1;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void notifyDataSetChanged()>();

        return;
    }
    public void setThemeDark(android.content.res.TypedArray)
    {
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter r0;
        android.content.res.TypedArray $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter;

        $r1 := @parameter0: android.content.res.TypedArray;

        r0.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: android.content.res.TypedArray mThemeColors> = $r1;

        return;
    }
