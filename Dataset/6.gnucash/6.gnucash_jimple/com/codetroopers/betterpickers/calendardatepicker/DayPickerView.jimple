com.codetroopers.betterpickers.calendardatepicker.DayPickerView extends android.widget.ListView implements android.widget.AbsListView$OnScrollListener com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment$OnDateChangedListener
public static final int DAYS_PER_WEEK
protected static final int GOTO_SCROLL_DURATION
public static final int LIST_TOP_OFFSET
protected static final int SCROLL_CHANGE_DELAY
protected static final int SCROLL_HYST_WEEKS
private static final java.lang.String TAG
private static final java.text.SimpleDateFormat YEAR_FORMAT
protected com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter
protected android.content.Context mContext
private com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController
protected int mCurrentMonthDisplayed
protected int mCurrentScrollState
protected int mDaysPerWeek
protected int mFirstDayOfWeek
protected float mFriction
protected android.os.Handler mHandler
protected int mNumWeeks
private boolean mPerformingScroll
protected java.lang.CharSequence mPrevMonthName
protected long mPreviousScrollPosition
protected int mPreviousScrollState
protected com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable
protected com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay
protected boolean mShowWeekNumber
protected com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mTempDay
    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", $r1);

        <com.codetroopers.betterpickers.calendardatepicker.DayPickerView: java.text.SimpleDateFormat YEAR_FORMAT> = $r0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r3;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable $r4;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mNumWeeks> = 6;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean mShowWeekNumber> = 0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mDaysPerWeek> = 7;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: float mFriction> = 1.0F;

        $r3 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        specialinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r3;

        $r3 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        specialinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mTempDay> = $r3;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mPreviousScrollState> = 0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mCurrentScrollState> = 0;

        $r4 = new com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable;

        specialinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable: void <init>(com.codetroopers.betterpickers.calendardatepicker.DayPickerView)>(r0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable> = $r4;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void init(android.content.Context)>($r1);

        return;
    }
    public void <init>(android.content.Context, com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.content.Context $r1;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r3;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable $r4;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mNumWeeks> = 6;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean mShowWeekNumber> = 0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mDaysPerWeek> = 7;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: float mFriction> = 1.0F;

        $r3 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        specialinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay> = $r3;

        $r3 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        specialinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mTempDay> = $r3;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mPreviousScrollState> = 0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mCurrentScrollState> = 0;

        $r4 = new com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable;

        specialinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable: void <init>(com.codetroopers.betterpickers.calendardatepicker.DayPickerView)>(r0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable> = $r4;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void init(android.content.Context)>($r1);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setController(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)>($r2);

        return;
    }
    private com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay findAccessibilityFocus()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        int $i0, i1;
        android.view.View $r1;
        boolean $z0;
        com.codetroopers.betterpickers.calendardatepicker.MonthView $r2;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.view.View getChildAt(int)>(i1);

        $z0 = $r1 instanceof com.codetroopers.betterpickers.calendardatepicker.MonthView;

        if $z0 == 0 goto label2;

        $r2 = (com.codetroopers.betterpickers.calendardatepicker.MonthView) $r1;

        $r3 = virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getAccessibilityFocus()>();

        if $r3 == null goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 17 goto label4;

        $r2 = (com.codetroopers.betterpickers.calendardatepicker.MonthView) $r1;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthView: void clearAccessibilityFocus()>();

        return $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;

     label4:
        return $r3;
    }
    private java.lang.String getMonthAndYearString(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        java.lang.StringBuffer r2;
        int $i0, $i1, $i2;
        java.util.Calendar $r3;
        java.util.Locale $r4;
        java.lang.String $r5;
        java.text.SimpleDateFormat $r6;
        java.util.Date $r7;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i2 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int day>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int,int)>($i1, $i2, $i0);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = virtualinvoke $r3.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(2, 2, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = <com.codetroopers.betterpickers.calendardatepicker.DayPickerView: java.text.SimpleDateFormat YEAR_FORMAT>;

        $r7 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
    private boolean restoreAccessibilityFocus(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        int $i0, i1;
        android.view.View $r2;
        boolean $z0;
        com.codetroopers.betterpickers.calendardatepicker.MonthView r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.view.View getChildAt(int)>(i1);

        $z0 = $r2 instanceof com.codetroopers.betterpickers.calendardatepicker.MonthView;

        if $z0 == 0 goto label3;

        r3 = (com.codetroopers.betterpickers.calendardatepicker.MonthView) $r2;

        $z0 = virtualinvoke r3.<com.codetroopers.betterpickers.calendardatepicker.MonthView: boolean restoreAccessibilityFocus(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }
public abstract com.codetroopers.betterpickers.calendardatepicker.MonthAdapter createMonthAdapter(android.content.Context, com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController) { 
// no body
} 
    public int getMostVisiblePosition()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        int i0, $i1, $i2, i3, i4, i5, i6, $i7;
        android.view.View $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $i1 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getFirstVisiblePosition()>();

        $i2 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getHeight()>();

        i3 = 0;

        i4 = 0;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= $i2 goto label2;

        $r1 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.view.View getChildAt(int)>(i5);

        if $r1 != null goto label3;

     label2:
        $i1 = $i1 + i4;

        return $i1;

     label3:
        i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        i6 = i0;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i2);

        $i7 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        i0 = i0 - $i7;

        if i0 <= i3 goto label4;

        i4 = i5;

        i3 = i0;

     label4:
        i5 = i5 + 1;

        goto label1;
    }
    public boolean goTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay, boolean, boolean, boolean)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r3;
        android.view.View $r4;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        if $z1 == 0 goto label01;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void set(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

     label01:
        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mTempDay>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void set(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        i1 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $r3 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r2 = interfaceinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        i0 = $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        i1 = i1 - i0;

        i1 = i1 * 12;

        i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $r3 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r1 = interfaceinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i2 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        i0 = i0 - $i2;

        i1 = i1 + i0;

        $i2 = 0;

     label02:
        i0 = $i2 + 1;

        $r4 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.view.View getChildAt(int)>($i2);

        if $r4 != null goto label08;

     label03:
        if $r4 == null goto label10;

        i0 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getPositionForView(android.view.View)>($r4);

     label04:
        if $z1 == 0 goto label05;

        $r5 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void setSelectedDay(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

     label05:
        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthFragment", 3);

        if $z3 == 0 goto label06;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GoTo position ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthFragment", $r7);

     label06:
        if i1 != i0 goto label07;

        if $z2 == 0 goto label13;

     label07:
        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mTempDay>;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setMonthDisplayed(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mPreviousScrollState> = 2;

        if $z0 == 0 goto label11;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 11 goto label11;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void smoothScrollToPositionFromTop(int,int,int)>(i1, -1, 250);

        return 1;

     label08:
        $i2 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthFragment", 3);

        if $z3 == 0 goto label09;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child at ");

        $i3 = i0 + -1;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has top ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthFragment", $r7);

     label09:
        if $i2 >= 0 goto label03;

        $i2 = i0;

        goto label02;

     label10:
        i0 = 0;

        goto label04;

     label11:
        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void postSetSelection(int)>(i1);

     label12:
        return 0;

     label13:
        if $z1 == 0 goto label12;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setMonthDisplayed(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        goto label12;
    }
    public void init(android.content.Context)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.content.Context $r1;
        android.os.Handler $r2;
        android.widget.AbsListView$LayoutParams $r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.content.Context;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.os.Handler mHandler> = $r2;

        $r3 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r3.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setDrawSelectorOnTop(boolean)>(0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.content.Context mContext> = $r1;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setUpListView()>();

        return;
    }
    protected void layoutChildren()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        boolean $z0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay findAccessibilityFocus()>();

        specialinvoke r0.<android.widget.ListView: void layoutChildren()>();

        $z0 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean mPerformingScroll>;

        if $z0 == 0 goto label1;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean mPerformingScroll> = 0;

        return;

     label1:
        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean restoreAccessibilityFocus(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r1);

        return;
    }
    public void onChange()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void refreshAdapter()>();

        return;
    }
    public void onDateChanged()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r1 = interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getSelectedDay()>();

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean goTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay,boolean,boolean,boolean)>($r1, 0, 1, 1);

        return;
    }
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>(-1);

        return;
    }
    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        return;
    }
    public void onScroll(android.widget.AbsListView, int, int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.widget.AbsListView $r1;
        int $i0, $i1, $i2;
        long l3;
        android.view.View $r2;
        com.codetroopers.betterpickers.calendardatepicker.MonthView r3;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.widget.AbsListView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = virtualinvoke $r1.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        r3 = (com.codetroopers.betterpickers.calendardatepicker.MonthView) $r2;

        if r3 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        $i1 = virtualinvoke r3.<com.codetroopers.betterpickers.calendardatepicker.MonthView: int getHeight()>();

        $i0 = $i0 * $i1;

        $i1 = virtualinvoke r3.<com.codetroopers.betterpickers.calendardatepicker.MonthView: int getBottom()>();

        $i0 = $i0 - $i1;

        l3 = (long) $i0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: long mPreviousScrollPosition> = l3;

        $i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mCurrentScrollState>;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mPreviousScrollState> = $i0;

        return;
    }
    public void onScrollStateChanged(android.widget.AbsListView, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.widget.AbsListView $r1;
        int $i0;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.widget.AbsListView;

        $i0 := @parameter1: int;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>($r1, $i0);

        return;
    }
    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        int $i0, i1, i2, $i3;
        android.os.Bundle $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay r2;
        boolean $z0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r3;
        java.lang.String $r4;
        android.view.View $r5;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        if $i0 == 4096 goto label1;

        if $i0 == 8192 goto label1;

        $z0 = specialinvoke r0.<android.widget.ListView: boolean performAccessibilityAction(int,android.os.Bundle)>($i0, $r1);

        return $z0;

     label1:
        i2 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getFirstVisiblePosition()>();

        i1 = i2 % 12;

        i2 = i2 / 12;

        $r3 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        r2 = interfaceinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getMinDate()>();

        $i3 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        i2 = i2 + $i3;

        r2 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        specialinvoke r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>(int,int,int)>(i2, i1, 1);

        if $i0 != 4096 goto label3;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i0 = $i0 + 1;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month> = $i0;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        if $i0 != 12 goto label2;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month> = 0;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i0 = $i0 + 1;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year> = $i0;

     label2:
        $r4 = specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: java.lang.String getMonthAndYearString(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>(r2);

        staticinvoke <com.codetroopers.betterpickers.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>(r0, $r4);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean goTo(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay,boolean,boolean,boolean)>(r2, 1, 0, 1);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean mPerformingScroll> = 1;

        return 1;

     label3:
        if $i0 != 8192 goto label2;

        $r5 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.view.View getChildAt(int)>(0);

        if $r5 == null goto label2;

        $i0 = virtualinvoke $r5.<android.view.View: int getTop()>();

        if $i0 < -1 goto label2;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        $i0 = $i0 + -1;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month> = $i0;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        if $i0 != -1 goto label2;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month> = 11;

        $i0 = r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year>;

        $i0 = $i0 + -1;

        r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int year> = $i0;

        goto label2;
    }
    public void postSetSelection(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        int $i0;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView$1 $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void clearFocus()>();

        $r1 = new com.codetroopers.betterpickers.calendardatepicker.DayPickerView$1;

        specialinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView$1: void <init>(com.codetroopers.betterpickers.calendardatepicker.DayPickerView,int)>(r0, $i0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: boolean post(java.lang.Runnable)>($r1);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void onScrollStateChanged(android.widget.AbsListView,int)>(r0, 0);

        return;
    }
    protected void refreshAdapter()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter $r1;
        android.content.Context $r2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r3;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r4;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: android.content.Context getContext()>();

        $r3 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        $r1 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter createMonthAdapter(android.content.Context,com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)>($r2, $r3);

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter> = $r1;

     label1:
        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setAdapter(android.widget.ListAdapter)>($r1);

        return;

     label2:
        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay mSelectedDay>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void setSelectedDay(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)>($r4);

        goto label1;
    }
    public void setController(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController> = $r1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController mController>;

        interfaceinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController: void registerOnDateChangedListener(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialogFragment$OnDateChangedListener)>(r0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void refreshAdapter()>();

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void onDateChanged()>();

        return;
    }
    protected void setMonthDisplayed(com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $i0 = $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: int month>;

        r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int mCurrentMonthDisplayed> = $i0;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void invalidateViews()>();

        return;
    }
    public void setTheme(android.content.res.TypedArray)
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        android.content.res.TypedArray $r1;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        if $r2 == null goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: com.codetroopers.betterpickers.calendardatepicker.MonthAdapter mAdapter>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter: void setThemeDark(android.content.res.TypedArray)>($r1);

     label1:
        return;
    }
    protected void setUpListView()
    {
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.DayPickerView;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setCacheColorHint(int)>(0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setDivider(android.graphics.drawable.Drawable)>(null);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setItemsCanFocus(boolean)>(1);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setFastScrollEnabled(boolean)>(0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setVerticalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>(r0);

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setFadingEdgeLength(int)>(0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

        $f1 = r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: float mFriction>;

        $f0 = $f0 * $f1;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void setFriction(float)>($f0);

     label1:
        return;
    }
