com.codetroopers.betterpickers.recurrencepicker.Utils extends java.lang.Object
private static final java.lang.String TAG
public static final int YEAR_MAX
public static final int YEAR_MIN
    public void <init>()
    {
        com.codetroopers.betterpickers.recurrencepicker.Utils r0;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int convertDayOfWeekFromTimeToCalendar(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label8;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument must be between Time.SUNDAY and Time.SATURDAY");

        throw $r0;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 4;

     label5:
        return 5;

     label6:
        return 6;

     label7:
        return 7;

     label8:
        return 1;
    }
    public static int getFirstDayOfWeek(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Calendar $r1;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        if $i0 != 7 goto label1;

        return 6;

     label1:
        if $i0 != 2 goto label2;

        return 1;

     label2:
        return 0;
    }
    public static int getFirstDayOfWeekAsCalendar(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.Utils: int getFirstDayOfWeek(android.content.Context)>($r0);

        $i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.Utils: int convertDayOfWeekFromTimeToCalendar(int)>($i0);

        return $i0;
    }
