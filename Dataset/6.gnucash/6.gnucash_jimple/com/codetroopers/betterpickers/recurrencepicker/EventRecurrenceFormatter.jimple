com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter extends java.lang.Object
private static int[] mMonthRepeatByDayOfWeekIds
private static java.lang.String[][] mMonthRepeatByDayOfWeekStrs
    public void <init>()
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter r0;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void cacheMonthRepeatStrings(android.content.res.Resources, int)
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        int[] $r2;
        java.lang.String[][] $r3;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        if $r2 != null goto label1;

        $r2 = newarray (int)[7];

        <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds> = $r2;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_sun>;

        $r2[0] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_mon>;

        $r2[1] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_tues>;

        $r2[2] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_wed>;

        $r2[3] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_thurs>;

        $r2[4] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_fri>;

        $r2[5] = $i1;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = <com.codetroopers.betterpickers.R$array: int repeat_by_nth_sat>;

        $r2[6] = $i1;

     label1:
        $r3 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        if $r3 != null goto label2;

        $r3 = newarray (java.lang.String[])[7];

        <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String[][] mMonthRepeatByDayOfWeekStrs> = $r3;

     label2:
        $r3 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r1 = $r3[$i0];

        if $r1 != null goto label3;

        $r3 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r2 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int[] mMonthRepeatByDayOfWeekIds>;

        $i1 = $r2[$i0];

        $r1 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i1);

        $r3[$i0] = $r1;

     label3:
        return;
    }
    private static java.lang.String dayToString(int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: int dayToUtilDay(int)>($i0);

        $r0 = staticinvoke <android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>($i0, $i1);

        return $r0;
    }
    private static int dayToUtilDay(int)
    {
        int $i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 65536: goto label2;
            case 131072: goto label3;
            case 262144: goto label4;
            case 524288: goto label5;
            case 1048576: goto label6;
            case 2097152: goto label7;
            case 4194304: goto label8;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day argument: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 5;

     label7:
        return 6;

     label8:
        return 7;
    }
    public static java.lang.String getRepeatString(android.content.Context, android.content.res.Resources, com.codetroopers.betterpickers.recurrencepicker.EventRecurrence, boolean)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r2;
        boolean $z0;
        int i0, $i2, $i3, $i5;
        java.lang.StringBuilder r3;
        android.text.format.Time r4;
        java.lang.String r5, $r8;
        long $l1;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        byte b4;
        int[] $r9;
        java.lang.String[][] $r10;
        java.lang.String[] $r11;
        android.util.TimeFormatException $r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        $z0 := @parameter3: boolean;

        r5 = "";

        if $z0 == 0 goto label08;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        r5 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        if r5 == null goto label06;

        r4 = new android.text.format.Time;

     label01:
        specialinvoke r4.<android.text.format.Time: void <init>()>();

     label02:
        r5 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

     label03:
        virtualinvoke r4.<android.text.format.Time: boolean parse(java.lang.String)>(r5);

        $l1 = virtualinvoke r4.<android.text.format.Time: long toMillis(boolean)>(0);

        r5 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r0, $l1, 131072);

     label04:
        $i2 = <com.codetroopers.betterpickers.R$string: int endByDate>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r5;

     label05:
        r5 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i2, $r6);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label06:
        $i2 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        if $i2 <= 0 goto label07;

        $i2 = <com.codetroopers.betterpickers.R$plurals: int endByCount>;

        i0 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        $r6 = newarray (java.lang.Object)[1];

        $i3 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r7;

        r5 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>($i2, i0, $r6);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label07:
        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $i2 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if $i2 > 1 goto label11;

        $i2 = 1;

     label09:
        i0 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int freq>;

        lookupswitch(i0)
        {
            case 3: goto label12;
            case 4: goto label13;
            case 5: goto label14;
            case 6: goto label22;
            case 7: goto label25;
            default: goto label10;
        };

     label10:
        return null;

     label11:
        $i2 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        goto label09;

     label12:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = <com.codetroopers.betterpickers.R$plurals: int hourly>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i0, $i2, $r6);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label13:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = <com.codetroopers.betterpickers.R$plurals: int daily>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i0, $i2, $r6);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label14:
        $z0 = virtualinvoke $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: boolean repeatsOnEveryWeekDay()>();

        if $z0 == 0 goto label15;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $i2 = <com.codetroopers.betterpickers.R$string: int every_weekday>;

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label15:
        b4 = 20;

        i0 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int bydayCount>;

        if i0 != 1 goto label16;

        b4 = 10;

     label16:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int bydayCount>;

        if i0 <= 0 goto label20;

        i0 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int bydayCount>;

        i0 = i0 + -1;

        $i3 = 0;

     label17:
        if $i3 >= i0 goto label18;

        $r9 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        $i5 = $r9[$i3];

        $r8 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String dayToString(int,int)>($i5, b4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = $i3 + 1;

        goto label17;

     label18:
        $r9 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        i0 = $r9[i0];

        $r8 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String dayToString(int,int)>(i0, b4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = <com.codetroopers.betterpickers.R$plurals: int weekly>;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r6[1] = $r8;

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i0, $i2, $r6);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label20:
        r4 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: android.text.format.Time startDate>;

        if r4 != null goto label21;

        return null;

     label21:
        r4 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: android.text.format.Time startDate>;

        i0 = r4.<android.text.format.Time: int weekDay>;

        i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int timeDay2Day(int)>(i0);

        $r8 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String dayToString(int,int)>(i0, 10);

        goto label19;

     label22:
        $r8 = "";

        $r9 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        if $r9 == null goto label24;

        $r9 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        i0 = $r9[0];

        i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int day2CalendarDay(int)>(i0);

        i0 = i0 + -1;

        staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: void cacheMonthRepeatStrings(android.content.res.Resources,int)>($r1, i0);

        $r9 = $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] bydayNum>;

        $i3 = $r9[0];

        if $i3 != -1 goto label23;

        $i3 = 5;

     label23:
        $r10 = <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r11 = $r10[i0];

        i0 = $i3 + -1;

        $r8 = $r11[i0];

     label24:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = <com.codetroopers.betterpickers.R$plurals: int monthly>;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r6[1] = $r8;

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i0, $i2, $r6);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label25:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = <com.codetroopers.betterpickers.R$plurals: int yearly_plain>;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $r6[1] = "";

        $r8 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i0, $i2, $r6);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r5;

     label26:
        $r12 := @caughtexception;

        goto label06;

        catch android.util.TimeFormatException from label01 to label02 with label26;
        catch android.util.TimeFormatException from label03 to label04 with label26;
        catch android.util.TimeFormatException from label05 to label06 with label26;
    }
