com.codetroopers.betterpickers.timezonepicker.TimeZoneData extends java.lang.Object
private static final boolean DEBUG
private static final int OFFSET_ARRAY_OFFSET
private static final java.lang.String PALESTINE_COUNTRY_CODE
private static final java.lang.String TAG
public static boolean is24HourFormat
private static java.lang.String[] mBackupCountryCodes
private static java.util.Locale mBackupCountryLocale
private static java.lang.String[] mBackupCountryNames
private java.lang.String mAlternateDefaultTimeZoneId
private android.content.Context mContext
private java.util.HashMap mCountryCodeToNameMap
private java.lang.String mDefaultTimeZoneCountry
public java.lang.String mDefaultTimeZoneId
private com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo
private boolean[] mHasTimeZonesInHrOffset
private java.lang.String mPalestineDisplayName
private long mTimeMillis
java.util.HashSet mTimeZoneNames
java.util.ArrayList mTimeZones
java.util.LinkedHashMap mTimeZonesByCountry
private java.util.HashMap mTimeZonesById
android.util.SparseArray mTimeZonesByOffsets
    public void <init>(android.content.Context, java.lang.String, long)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        android.content.Context $r1;
        java.lang.String $r2;
        long $l0, $l1;
        java.util.HashSet $r3;
        java.util.HashMap $r4;
        boolean[] $r5;
        boolean $z0;
        byte $b2;
        android.content.res.Resources $r6;
        int $i3;
        java.lang.StringBuilder $r7;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashSet mTimeZoneNames> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mCountryCodeToNameMap> = $r4;

        $r5 = newarray (boolean)[40];

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset> = $r5;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.content.Context mContext> = $r1;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>($r1);

        <com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: boolean is24HourFormat> = $z0;

        <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean is24HourFormat> = $z0;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mAlternateDefaultTimeZoneId> = $r2;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId> = $r2;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label2;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: long mTimeMillis> = $l1;

     label1:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = <com.codetroopers.betterpickers.R$string: int palestine_display_name>;

        $r2 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mPalestineDisplayName> = $r2;

        virtualinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: void loadTzs(android.content.Context)>($r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time to load time zones (ms): ");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 - $l1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TimeZoneData", $r2);

        return;

     label2:
        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: long mTimeMillis> = $l0;

        goto label1;
    }
    private java.lang.String getCountryNames(java.lang.String, java.lang.String)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        java.lang.String $r1, $r2, $r4;
        java.util.Locale $r3, $r5;
        boolean $z0;
        java.lang.String[] $r6;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = "PS";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mPalestineDisplayName>;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        return $r1;

     label2:
        $r5 = new java.util.Locale;

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = virtualinvoke $r5.<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>($r3);

        goto label1;

     label3:
        $r6 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryCodes>;

        if $r6 == null goto label4;

        $r5 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.Locale mBackupCountryLocale>;

        $z0 = virtualinvoke $r3.<java.util.Locale: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

     label4:
        <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.Locale mBackupCountryLocale> = $r3;

        $r7 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.codetroopers.betterpickers.R$array: int backup_country_codes>;

        $r6 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryCodes> = $r6;

        $r7 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.codetroopers.betterpickers.R$array: int backup_country_names>;

        $r6 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryNames> = $r6;

     label5:
        $r6 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryCodes>;

        $i0 = lengthof $r6;

        $r6 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryNames>;

        $i1 = lengthof $r6;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label8;

        $r6 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryCodes>;

        $r1 = $r6[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label7;

        $r6 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String[] mBackupCountryNames>;

        $r1 = $r6[$i1];

        return $r1;

     label7:
        $i1 = $i1 + 1;

        goto label6;

     label8:
        return $r2;
    }
    private int getIdenticalTimeZoneInTheCountry(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r1, r6;
        java.lang.String $r2, $r7;
        int i0;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo;

        i0 = 0;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r5;

        $z0 = virtualinvoke r6.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: boolean hasSameRules(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>($r1);

        if $z0 == 0 goto label3;

        $r2 = r6.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        if $r2 != null goto label2;

        $r2 = $r1.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        if $r2 != null goto label3;

        return i0;

     label2:
        $r7 = r6.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        $r2 = $r1.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label5;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return -1;

     label5:
        return i0;
    }
    private void indexByOffsets(int, com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        int $i0, i1;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r1;
        long $l2;
        boolean[] $r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        java.util.ArrayList r5;
        java.lang.Integer $r6;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo;

        i1 = virtualinvoke $r1.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: int getNowOffsetMillis()>();

        $l2 = (long) i1;

        $l2 = $l2 / 3600000L;

        i1 = (int) $l2;

        i1 = i1 + 20;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset>;

        $r2[i1] = 1;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.util.SparseArray mTimeZonesByOffsets>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (java.util.ArrayList) $r4;

        if r5 != null goto label1;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.util.SparseArray mTimeZonesByOffsets>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r5);

     label1:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return;
    }
    private java.util.HashSet loadTzsInZoneTab(android.content.Context)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        android.content.Context $r1;
        java.lang.String r2, r3, r4, $r18, $r24;
        java.util.HashSet r5;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r6;
        android.content.res.AssetManager $r7;
        java.io.InputStream r8, $r9;
        java.io.BufferedReader r10;
        java.io.InputStreamReader $r11;
        boolean $z0;
        int $i0;
        java.lang.String[] $r12;
        java.util.TimeZone $r13, $r25;
        java.lang.StringBuilder $r14;
        java.io.IOException r15, r17, $r20, $r27, $r28, $r29, $r30, $r31;
        java.util.Locale $r16;
        java.lang.Throwable $r19, $r21;
        java.util.HashMap $r22;
        java.lang.Object $r23;
        java.util.ArrayList $r26;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: android.content.Context;

        r5 = new java.util.HashSet;

        specialinvoke r5.<java.util.HashSet: void <init>()>();

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r8 = null;

     label001:
        $r9 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("backward");

     label002:
        r8 = $r9;

     label003:
        r10 = new java.io.BufferedReader;

        $r11 = new java.io.InputStreamReader;

     label004:
        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

     label005:
        r3 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>();

     label006:
        if r3 == null goto label055;

     label007:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("#");

     label008:
        if $z0 != 0 goto label005;

     label009:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

     label010:
        if $i0 <= 0 goto label005;

     label011:
        $r12 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\t+");

     label012:
        r3 = $r12[1];

        $i0 = lengthof $r12;

     label013:
        $i0 = $i0 + -1;

     label014:
        r4 = $r12[$i0];

     label015:
        $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r3);

     label016:
        if $r13 != null goto label044;

     label017:
        $r14 = new java.lang.StringBuilder;

     label018:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timezone not found: ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", r3);

     label019:
        goto label005;

     label020:
        r15 := @caughtexception;

     label021:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", "Failed to read \'backward\' file.");

     label022:
        if r8 == null goto label024;

     label023:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label024:
        $r16 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = virtualinvoke $r16.<java.util.Locale: java.lang.String getLanguage()>();

        $r9 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("zone.tab");

     label025:
        r8 = $r9;

     label026:
        r10 = new java.io.BufferedReader;

        $r11 = new java.io.InputStreamReader;

     label027:
        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

     label028:
        r4 = virtualinvoke r10.<java.io.BufferedReader: java.lang.String readLine()>();

     label029:
        if r4 == null goto label102;

     label030:
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("#");

     label031:
        if $z0 != 0 goto label028;

     label032:
        $r12 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\t");

     label033:
        r4 = $r12[2];

        r2 = $r12[0];

     label034:
        $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r4);

     label035:
        if $r13 != null goto label059;

     label036:
        $r14 = new java.lang.StringBuilder;

     label037:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timezone not found: ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", r4);

     label038:
        goto label028;

     label039:
        r17 := @caughtexception;

     label040:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", "Failed to read \'zone.tab\'.");

     label041:
        if r8 == null goto label110;

     label042:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label043:
        return r5;

     label044:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label045:
        $r18 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

     label046:
        if $r18 == null goto label005;

     label047:
        $r18 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

     label048:
        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

     label049:
        if $z0 == 0 goto label005;

     label050:
        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mAlternateDefaultTimeZoneId> = r3;

     label051:
        goto label005;

     label052:
        $r19 := @caughtexception;

        if r8 == null goto label054;

     label053:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label054:
        throw $r19;

     label055:
        if $r9 == null goto label024;

     label056:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label057:
        goto label024;

     label058:
        $r20 := @caughtexception;

        goto label024;

     label059:
        if r2 != null goto label067;

     label060:
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("Etc/GMT");

     label061:
        if $z0 != 0 goto label067;

     label062:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label063:
        goto label028;

     label064:
        $r21 := @caughtexception;

        if r8 == null goto label066;

     label065:
        virtualinvoke r8.<java.io.InputStream: void close()>();

     label066:
        throw $r21;

     label067:
        $r22 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mCountryCodeToNameMap>;

     label068:
        $r23 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

     label069:
        $r18 = (java.lang.String) $r23;

     label070:
        if $r18 != null goto label075;

     label071:
        $r24 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String getCountryNames(java.lang.String,java.lang.String)>(r3, r2);

     label072:
        $r18 = $r24;

     label073:
        $r22 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mCountryCodeToNameMap>;

     label074:
        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r24);

     label075:
        r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

     label076:
        if r2 == null goto label092;

     label077:
        r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneCountry>;

     label078:
        if r2 != null goto label092;

     label079:
        r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mAlternateDefaultTimeZoneId>;

     label080:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

     label081:
        if $z0 == 0 goto label092;

     label082:
        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneCountry> = $r18;

        r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

     label083:
        $r25 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r2);

     label084:
        if $r25 == null goto label092;

     label085:
        r6 = new com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo;

     label086:
        specialinvoke r6.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: void <init>(java.util.TimeZone,java.lang.String)>($r25, $r18);

     label087:
        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo> = r6;

        r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo>;

     label088:
        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int getIdenticalTimeZoneInTheCountry(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>(r6);

     label089:
        if $i0 != -1 goto label099;

     label090:
        $r26 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo>;

     label091:
        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label092:
        r6 = new com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo;

     label093:
        specialinvoke r6.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: void <init>(java.util.TimeZone,java.lang.String)>($r13, $r18);

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int getIdenticalTimeZoneInTheCountry(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>(r6);

     label094:
        if $i0 != -1 goto label097;

     label095:
        $r26 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

     label096:
        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label097:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label098:
        goto label028;

     label099:
        $r26 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo>;

     label100:
        virtualinvoke $r26.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, r6);

     label101:
        goto label092;

     label102:
        if $r9 == null goto label110;

     label103:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label104:
        return r5;

     label105:
        $r27 := @caughtexception;

        return r5;

     label106:
        $r28 := @caughtexception;

        goto label024;

     label107:
        $r29 := @caughtexception;

        goto label054;

     label108:
        $r30 := @caughtexception;

        return r5;

     label109:
        $r31 := @caughtexception;

        goto label066;

     label110:
        return r5;

        catch java.io.IOException from label001 to label002 with label020;
        catch java.io.IOException from label004 to label006 with label020;
        catch java.io.IOException from label007 to label008 with label020;
        catch java.io.IOException from label009 to label010 with label020;
        catch java.io.IOException from label011 to label012 with label020;
        catch java.io.IOException from label015 to label016 with label020;
        catch java.io.IOException from label018 to label019 with label020;
        catch java.lang.Throwable from label001 to label002 with label052;
        catch java.lang.Throwable from label003 to label006 with label052;
        catch java.lang.Throwable from label007 to label008 with label052;
        catch java.lang.Throwable from label009 to label010 with label052;
        catch java.lang.Throwable from label011 to label013 with label052;
        catch java.lang.Throwable from label014 to label016 with label052;
        catch java.lang.Throwable from label017 to label019 with label052;
        catch java.lang.Throwable from label021 to label022 with label052;
        catch java.io.IOException from label023 to label024 with label106;
        catch java.io.IOException from label024 to label025 with label039;
        catch java.io.IOException from label027 to label029 with label039;
        catch java.io.IOException from label030 to label031 with label039;
        catch java.io.IOException from label032 to label033 with label039;
        catch java.io.IOException from label034 to label035 with label039;
        catch java.io.IOException from label037 to label038 with label039;
        catch java.lang.Throwable from label024 to label025 with label064;
        catch java.lang.Throwable from label026 to label029 with label064;
        catch java.lang.Throwable from label030 to label031 with label064;
        catch java.lang.Throwable from label032 to label035 with label064;
        catch java.lang.Throwable from label036 to label038 with label064;
        catch java.lang.Throwable from label040 to label041 with label064;
        catch java.io.IOException from label042 to label043 with label108;
        catch java.io.IOException from label044 to label045 with label020;
        catch java.io.IOException from label048 to label049 with label020;
        catch java.lang.Throwable from label044 to label046 with label052;
        catch java.lang.Throwable from label047 to label049 with label052;
        catch java.lang.Throwable from label050 to label051 with label052;
        catch java.io.IOException from label053 to label054 with label107;
        catch java.io.IOException from label056 to label057 with label058;
        catch java.io.IOException from label060 to label061 with label039;
        catch java.io.IOException from label062 to label063 with label039;
        catch java.lang.Throwable from label060 to label061 with label064;
        catch java.lang.Throwable from label062 to label063 with label064;
        catch java.io.IOException from label065 to label066 with label109;
        catch java.io.IOException from label068 to label069 with label039;
        catch java.io.IOException from label071 to label072 with label039;
        catch java.io.IOException from label074 to label075 with label039;
        catch java.io.IOException from label080 to label081 with label039;
        catch java.io.IOException from label083 to label084 with label039;
        catch java.io.IOException from label086 to label087 with label039;
        catch java.io.IOException from label088 to label089 with label039;
        catch java.io.IOException from label091 to label092 with label039;
        catch java.io.IOException from label093 to label094 with label039;
        catch java.io.IOException from label096 to label098 with label039;
        catch java.io.IOException from label100 to label101 with label039;
        catch java.lang.Throwable from label067 to label070 with label064;
        catch java.lang.Throwable from label071 to label072 with label064;
        catch java.lang.Throwable from label073 to label076 with label064;
        catch java.lang.Throwable from label077 to label078 with label064;
        catch java.lang.Throwable from label079 to label081 with label064;
        catch java.lang.Throwable from label082 to label084 with label064;
        catch java.lang.Throwable from label085 to label089 with label064;
        catch java.lang.Throwable from label090 to label094 with label064;
        catch java.lang.Throwable from label095 to label098 with label064;
        catch java.lang.Throwable from label099 to label101 with label064;
        catch java.io.IOException from label103 to label104 with label105;
    }
    private void populateDisplayNameOverrides(android.content.res.Resources)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        android.content.res.Resources $r1;
        int $i0, $i1, $i2;
        java.lang.String[] $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r8;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: android.content.res.Resources;

        $i0 = <com.codetroopers.betterpickers.R$array: int timezone_rename_ids>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        $i0 = <com.codetroopers.betterpickers.R$array: int timezone_rename_labels>;

        $r3 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r2;

        $i2 = lengthof $r3;

        if $i1 == $i2 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timezone_rename_ids len=");

        $i0 = lengthof $r2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timezone_rename_labels len=");

        $i0 = lengthof $r3;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", $r5);

        $i0 = lengthof $r2;

        $i1 = lengthof $r3;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mTimeZonesById>;

        $r5 = $r2[$i1];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r7;

        if r8 == null goto label4;

        $r5 = $r3[$i1];

        r8.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName> = $r5;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find timezone with label: ");

        $r5 = $r3[$i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", $r5);

        goto label3;

     label5:
        return;
    }
    private void printTimeZones()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r1, r5;
        boolean z0, $z1;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.TimeZone $r6;
        java.lang.String $r7;
        int $i0;
        java.lang.StringBuilder $r8;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        r1 = null;

        z0 = 1;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r4;

        $r6 = r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.util.TimeZone mTz>;

        $r7 = virtualinvoke $r6.<java.util.TimeZone: java.lang.String getDisplayName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("GMT");

        if $z1 == 0 goto label2;

        $r7 = r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mTzId>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Etc/GMT");

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GMT", $r7);

     label2:
        if r1 == null goto label4;

        $i0 = virtualinvoke r1.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: int compareTo(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>(r5);

        if $i0 != 0 goto label5;

        if z0 == 0 goto label3;

        $r7 = virtualinvoke r1.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SAME", $r7);

        z0 = 0;

     label3:
        $r7 = virtualinvoke r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SAME", $r7);

     label4:
        r1 = r5;

        goto label1;

     label5:
        z0 = 1;

        goto label4;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total number of tz\'s = ");

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", $r7);

        return;
    }
    public int findIndexByTimeZoneIdSlow(java.lang.String)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        java.lang.String $r1, $r6;
        int i0;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r5;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r4;

        $r6 = r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mTzId>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }
    public com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo get(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r3;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $i0 := @parameter0: int;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r1;

        return $r3;
    }
    public int getDefaultTimeZoneIndex()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r1;
        int $i0;
        java.util.ArrayList $r2;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo mDefaultTimeZoneInfo>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        return $i0;
    }
    public java.util.ArrayList getTimeZonesByOffset(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean[] $r2;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $i0 := @parameter0: int;

        $i0 = $i0 + 20;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.util.SparseArray mTimeZonesByOffsets>;

        $r1 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.util.ArrayList) $r1;

        return $r4;
    }
    public boolean hasTimeZonesInHrOffset(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        int $i0, $i1;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $i0 := @parameter0: int;

        $i0 = $i0 + 20;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset>;

        $z0 = $r1[$i0];

        return $z0;
    }
    void loadTzs(android.content.Context)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        android.content.Context $r1;
        java.util.Date r2;
        java.lang.String r3;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r4;
        java.util.ArrayList $r5;
        java.util.HashSet $r6;
        java.lang.String[] $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.TimeZone $r8, $r18;
        java.lang.StringBuilder $r9;
        java.util.LinkedHashMap $r10;
        android.util.SparseArray $r11;
        boolean[] $r12;
        java.util.HashMap $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        android.content.res.Resources $r16;
        long $l3;
        java.util.Locale $r17;
        java.lang.Integer $r19;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 := @parameter0: android.content.Context;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones> = $r5;

        $r6 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashSet loadTzsInZoneTab(android.content.Context)>($r1);

        $r7 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label05;

        r3 = $r7[$i1];

        $z0 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label03;

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("Etc/GMT");

        if $z0 == 0 goto label02;

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r3);

        if $r8 != null goto label04;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timezone not found: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZoneData", r3);

        goto label02;

     label04:
        r4 = new com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo;

        specialinvoke r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: void <init>(java.util.TimeZone,java.lang.String)>($r8, null);

        $i2 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int getIdenticalTimeZoneInTheCountry(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>(r4);

        if $i2 != -1 goto label02;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label02;

     label05:
        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.LinkedHashMap mTimeZonesByCountry> = $r10;

        $r11 = new android.util.SparseArray;

        $r12 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: boolean[] mHasTimeZonesInHrOffset>;

        $i0 = lengthof $r12;

        specialinvoke $r11.<android.util.SparseArray: void <init>(int)>($i0);

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.util.SparseArray mTimeZonesByOffsets> = $r11;

        $r13 = new java.util.HashMap;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        specialinvoke $r13.<java.util.HashMap: void <init>(int)>($i0);

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mTimeZonesById> = $r13;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r14 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r15;

        $r13 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashMap mTimeZonesById>;

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mTzId>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        goto label06;

     label07:
        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: android.content.Context mContext>;

        $r16 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: void populateDisplayNameOverrides(android.content.res.Resources)>($r16);

        r2 = new java.util.Date;

        $l3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: long mTimeMillis>;

        specialinvoke r2.<java.util.Date: void <init>(long)>($l3);

        $r17 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $i0 = 0;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $r14 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r15;

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName>;

        if r3 != null goto label09;

        $r8 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.util.TimeZone mTz>;

        $r18 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.util.TimeZone mTz>;

        $z0 = virtualinvoke $r18.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r2);

        r3 = virtualinvoke $r8.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>($z0, 1, $r17);

        r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName> = r3;

     label09:
        $r10 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.LinkedHashMap mTimeZonesByCountry>;

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        $r15 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = (java.util.ArrayList) $r15;

        if $r5 != null goto label10;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r10 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.LinkedHashMap mTimeZonesByCountry>;

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r5);

     label10:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: void indexByOffsets(int,com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>($i0, r4);

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName>;

        $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(":00");

        if $z0 != 0 goto label11;

        $r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.HashSet mTimeZoneNames>;

        r3 = r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>(r3);

     label11:
        $i0 = $i0 + 1;

        goto label08;

     label12:
        return;
    }
    public void setTime(long)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        long $l0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $l0 := @parameter0: long;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: long mTimeMillis> = $l0;

        return;
    }
    public int size()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList mTimeZones>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }
