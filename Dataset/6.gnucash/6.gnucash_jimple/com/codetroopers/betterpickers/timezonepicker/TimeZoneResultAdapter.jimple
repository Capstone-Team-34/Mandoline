com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter extends android.widget.BaseAdapter implements android.widget.AdapterView$OnItemClickListener com.codetroopers.betterpickers.timezonepicker.TimeZoneFilterTypeAdapter$OnSetFilterListener
private static final boolean DEBUG
private static final int EMPTY_INDEX
private static final java.lang.String KEY_RECENT_TIMEZONES
private static final int MAX_RECENT_TIMEZONES
private static final java.lang.String RECENT_TIMEZONES_DELIMITER
private static final java.lang.String SHARED_PREFS_NAME
private static final java.lang.String TAG
private static final int VIEW_TAG_TIME_ZONE
private android.content.Context mContext
private int[] mFilteredTimeZoneIndices
private int mFilteredTimeZoneLength
private boolean mHasResults
private android.view.LayoutInflater mInflater
private java.lang.String mLastFilterString
private int mLastFilterTime
private int mLastFilterType
private android.graphics.Typeface mSansSerifLightTypeface
private com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData
private com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener
    static void <clinit>()
    {
        int $i0;

        $i0 = <com.codetroopers.betterpickers.R$id: int time_zone>;

        <com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE> = $i0;

        return;
    }
    public void <init>(android.content.Context, com.codetroopers.betterpickers.timezonepicker.TimeZoneData, com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        android.content.Context $r1;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData $r2;
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener $r3;
        java.lang.Object $r4;
        android.view.LayoutInflater $r5;
        int $i0;
        int[] $r6;
        android.content.res.AssetManager $r7;
        android.graphics.Typeface $r8;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.codetroopers.betterpickers.timezonepicker.TimeZoneData;

        $r3 := @parameter2: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: boolean mHasResults> = 0;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = 0;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext> = $r1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData> = $r2;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener> = $r3;

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r5 = (android.view.LayoutInflater) $r4;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater> = $r5;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $i0 = virtualinvoke $r2.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int size()>();

        $r6 = newarray (int)[$i0];

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices> = $r6;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r7, "fonts/Roboto-Light.ttf");

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.graphics.Typeface mSansSerifLightTypeface> = $r8;

        virtualinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: void onSetFilter(int,java.lang.String,int)>(0, null, 0);

        return;
    }
    public boolean areAllItemsEnabled()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        return 0;
    }
    public int getCount()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        return i0;
    }
    public java.lang.Object getItem(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int $i0, $i1;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r1;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData $r2;
        int[] $r3;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = $r3[$i0];

        $r1 = virtualinvoke $r2.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo get(int)>($i0);

        return $r1;
    }
    public long getItemId(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int $i0;
        int[] $r1;
        long $l1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = $r1[$i0];

        $l1 = (long) $i0;

        return $l1;
    }
    public java.lang.String getLastFilterString()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        java.lang.String r1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: java.lang.String mLastFilterString>;

        return r1;
    }
    public int getLastFilterTime()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mLastFilterTime>;

        return i0;
    }
    public int getLastFilterType()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mLastFilterType>;

        return i0;
    }
    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int $i0, $i1;
        android.view.View $r1, r4;
        android.view.ViewGroup $r2;
        java.lang.String r3;
        int[] $r5;
        android.view.LayoutInflater $r6;
        android.widget.TextView $r7;
        android.graphics.Typeface $r8;
        java.lang.Object $r9;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder r10;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData $r11;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo $r12;
        android.content.Context $r13;
        java.lang.CharSequence $r14;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.ViewGroup;

        r4 = $r1;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i1 = $r5[$i0];

        if $i1 != -100 goto label1;

        $r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater>;

        $i0 = <com.codetroopers.betterpickers.R$layout: int empty_time_zone_item>;

        $r1 = virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, null);

        $i0 = <com.codetroopers.betterpickers.R$id: int empty_item>;

        r4 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r7 = (android.widget.TextView) r4;

        $r8 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.graphics.Typeface mSansSerifLightTypeface>;

        virtualinvoke $r7.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r8);

        return $r1;

     label1:
        if $r1 == null goto label2;

        $i1 = <com.codetroopers.betterpickers.R$id: int empty_item>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i1);

        if $r1 == null goto label3;

     label2:
        $r6 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater>;

        $i1 = <com.codetroopers.betterpickers.R$layout: int time_zone_item>;

        $r1 = virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i1, null);

        r4 = $r1;

        staticinvoke <com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: void setupViewHolder(android.view.View)>($r1);

     label3:
        $r9 = virtualinvoke r4.<android.view.View: java.lang.Object getTag()>();

        r10 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder) $r9;

        $r11 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = $r5[$i0];

        $r12 = virtualinvoke $r11.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo get(int)>($i0);

        $i0 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE>;

        virtualinvoke r4.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r12);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeZone>;

        $r8 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.graphics.Typeface mSansSerifLightTypeface>;

        virtualinvoke $r7.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r8);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeOffset>;

        $r8 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.graphics.Typeface mSansSerifLightTypeface>;

        virtualinvoke $r7.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r8);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        $r8 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.graphics.Typeface mSansSerifLightTypeface>;

        virtualinvoke $r7.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r8);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeZone>;

        r3 = $r12.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName>;

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeOffset>;

        $r13 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        $r14 = virtualinvoke $r12.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.CharSequence getGmtDisplayName(android.content.Context)>($r13);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r14);

        r3 = $r12.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        if r3 != null goto label5;

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r7.<android.widget.TextView: void setVisibility(int)>(4);

     label4:
        return r4;

     label5:
        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r7 = r10.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r7.<android.widget.TextView: void setVisibility(int)>(0);

        goto label4;
    }
    public boolean hasResults()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        boolean z0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        z0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: boolean mHasResults>;

        return z0;
    }
    public boolean hasStableIds()
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        return 1;
    }
    public boolean isEnabled(int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = $r1[$i0];

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        android.widget.AdapterView r1;
        android.view.View $r2;
        int $i0;
        long $l1;
        java.lang.Object $r3;
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener $r4;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo r5;
        java.lang.String $r6;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        r1 := @parameter0: android.widget.AdapterView;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener>;

        if $r4 == null goto label1;

        $i0 = <com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE>;

        $r3 = virtualinvoke $r2.<android.view.View: java.lang.Object getTag(int)>($i0);

        r5 = (com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo) $r3;

        if r5 == null goto label1;

        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener>;

        interfaceinvoke $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener: void onTimeZoneSet(com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo)>(r5);

        $r6 = r5.<com.codetroopers.betterpickers.timezonepicker.TimeZoneInfo: java.lang.String mTzId>;

        virtualinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: void saveRecentTimezone(java.lang.String)>($r6);

     label1:
        return;
    }
    public void onSetFilter(int, java.lang.String, int)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r8;
        java.lang.IllegalArgumentException $r2;
        int[] $r3;
        boolean $z0;
        com.codetroopers.betterpickers.timezonepicker.TimeZoneData $r4;
        android.content.Context $r5;
        android.content.SharedPreferences $r6;
        java.lang.String[] $r7;
        java.util.ArrayList $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.lang.Integer r12;
        java.util.LinkedHashMap $r13;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mLastFilterType> = $i0;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: java.lang.String mLastFilterString> = $r1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mLastFilterTime> = $i1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = 0;

        lookupswitch($i0)
        {
            case -1: goto label02;
            case 0: goto label05;
            case 1: goto label11;
            case 2: goto label03;
            case 3: goto label09;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label02:
        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i1 = $i0 + 1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i1;

        $r3[$i0] = -100;

     label03:
        $i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        if $i0 <= 0 goto label13;

        $z0 = 1;

     label04:
        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: boolean mHasResults> = $z0;

        virtualinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: void notifyDataSetChanged()>();

        return;

     label05:
        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $i0 = virtualinvoke $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int getDefaultTimeZoneIndex()>();

        if $i0 == -1 goto label06;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i1 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i2 = $i1 + 1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i2;

        $r3[$i1] = $i0;

     label06:
        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences", 0);

        $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_recent_timezones", null);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label03;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r7;

        $i0 = $i0 + -1;

     label07:
        if $i0 < 0 goto label03;

        $r1 = $r7[$i0];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label08;

        $r1 = $r7[$i0];

        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r8 = $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label08;

        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r1 = $r7[$i0];

        $i1 = virtualinvoke $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: int findIndexByTimeZoneIdSlow(java.lang.String)>($r1);

        if $i1 == -1 goto label08;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i3 = $i2 + 1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i3;

        $r3[$i2] = $i1;

     label08:
        $i0 = $i0 + -1;

        goto label07;

     label09:
        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r9 = virtualinvoke $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.ArrayList getTimeZonesByOffset(int)>($i1);

        if $r9 == null goto label03;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.Integer) $r11;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i1 = $i0 + 1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i1;

        $i1 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        $r3[$i0] = $i1;

        goto label10;

     label11:
        $r4 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: com.codetroopers.betterpickers.timezonepicker.TimeZoneData mTimeZoneData>;

        $r13 = $r4.<com.codetroopers.betterpickers.timezonepicker.TimeZoneData: java.util.LinkedHashMap mTimeZonesByCountry>;

        $r11 = virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (java.util.ArrayList) $r11;

        if $r9 == null goto label03;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.Integer) $r11;

        $r3 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i0 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i1 = $i0 + 1;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i1;

        $i1 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        $r3[$i0] = $i1;

        goto label12;

     label13:
        $z0 = 0;

        goto label04;
    }
    public void saveRecentTimezone(java.lang.String)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter r0;
        java.lang.String $r1, r4;
        java.lang.StringBuilder r2;
        java.util.LinkedHashSet r3;
        int $i0, $i1;
        android.content.Context $r5;
        android.content.SharedPreferences $r6;
        android.content.SharedPreferences$Editor $r7;
        java.lang.String[] $r8;
        boolean $z0, $z1;
        java.util.Iterator $r9;
        java.lang.Object $r10;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences", 0);

        r4 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_recent_timezones", null);

        if r4 != null goto label02;

     label01:
        $r7 = interfaceinvoke $r6.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("preferences_recent_timezones", $r1);

        interfaceinvoke $r7.<android.content.SharedPreferences$Editor: void apply()>();

        return;

     label02:
        r3 = new java.util.LinkedHashSet;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>()>();

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i1 = lengthof $r8;

     label03:
        if $i0 >= $i1 goto label05;

        r4 = $r8[$i0];

        $z0 = virtualinvoke r3.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label04;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label04;

        virtualinvoke r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r4);

     label04:
        $i0 = $i0 + 1;

        goto label03;

     label05:
        $r9 = virtualinvoke r3.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label06:
        $i0 = virtualinvoke r3.<java.util.LinkedHashSet: int size()>();

        if $i0 < 3 goto label07;

        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label10;

     label07:
        virtualinvoke r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r9 = virtualinvoke r3.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r10;

        if $z0 == 0 goto label11;

        $z0 = 0;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label08;

     label10:
        interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

        goto label06;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label09;

     label12:
        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;
    }
