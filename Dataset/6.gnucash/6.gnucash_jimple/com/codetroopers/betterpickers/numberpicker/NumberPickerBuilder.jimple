com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder extends java.lang.Object
private java.lang.Double currentDecimalValue
private java.lang.Integer currentNumberValue
private java.lang.Integer currentSignValue
private java.lang.Integer decimalVisibility
private java.lang.String labelText
private java.util.Vector mNumberPickerDialogHandlers
private java.util.Vector mNumberPickerDialogHandlersV2
private int mReference
private android.support.v4.app.FragmentManager manager
private java.math.BigDecimal maxNumber
private java.math.BigDecimal minNumber
private java.lang.Integer plusMinusVisibility
private java.lang.Integer styleResId
private android.support.v4.app.Fragment targetFragment
    public void <init>()
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.util.Vector $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlers> = $r1;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlersV2> = $r1;

        return;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder addNumberPickerDialogHandler(com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler $r1;
        java.util.Vector $r2;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler;

        $r2 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlers>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder addNumberPickerDialogHandler(com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2 $r1;
        java.util.Vector $r2;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2;

        $r2 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlersV2>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder removeNumberPickerDialogHandler(com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler $r1;
        java.util.Vector $r2;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandler;

        $r2 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlers>;

        virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>($r1);

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder removeNumberPickerDialogHandler(com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2 $r1;
        java.util.Vector $r2;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment$NumberPickerDialogHandlerV2;

        $r2 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlersV2>;

        virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>($r1);

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setCurrentNumber(java.lang.Integer)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.lang.Integer $r1, $r2;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: java.lang.Integer;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentSignValue> = $r2;

     label1:
        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentNumberValue> = $r1;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Double currentDecimalValue> = null;

        return r0;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentSignValue> = $r2;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * -1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        goto label1;

     label3:
        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setCurrentNumber(java.math.BigDecimal)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.math.BigDecimal $r1, $r3;
        int $i0;
        java.lang.Integer $r2;
        java.math.BigDecimal[] $r4;
        double $d0;
        java.lang.Double $r5;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: java.math.BigDecimal;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int signum()>();

        if $i0 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentSignValue> = $r2;

     label1:
        $r3 = <java.math.BigDecimal: java.math.BigDecimal ONE>;

        $r4 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal)>($r3);

        $r1 = $r4[0];

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int intValue()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentNumberValue> = $r2;

        $r1 = $r4[1];

        $d0 = virtualinvoke $r1.<java.math.BigDecimal: double doubleValue()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Double currentDecimalValue> = $r5;

        return r0;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentSignValue> = $r2;

        $r1 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal abs()>();

        goto label1;

     label3:
        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setDecimalVisibility(int)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer decimalVisibility> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setFragmentManager(android.support.v4.app.FragmentManager)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        android.support.v4.app.FragmentManager $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: android.support.v4.app.FragmentManager;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.FragmentManager manager> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setLabelText(java.lang.String)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.lang.String $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: java.lang.String;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.String labelText> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setMaxNumber(java.math.BigDecimal)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.math.BigDecimal $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: java.math.BigDecimal;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.math.BigDecimal maxNumber> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setMinNumber(java.math.BigDecimal)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.math.BigDecimal $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: java.math.BigDecimal;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.math.BigDecimal minNumber> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setPlusMinusVisibility(int)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer plusMinusVisibility> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setReference(int)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $i0 := @parameter0: int;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: int mReference> = $i0;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setStyleResId(int)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer styleResId> = $r1;

        return r0;
    }
    public com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder setTargetFragment(android.support.v4.app.Fragment)
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        android.support.v4.app.Fragment $r1;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.Fragment targetFragment> = $r1;

        return r0;
    }
    public void show()
    {
        com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder r0;
        java.math.BigDecimal $r1, $r2;
        java.lang.Integer $r3, $r4, $r6, $r8;
        java.lang.String $r5;
        java.lang.Double $r7;
        android.support.v4.app.FragmentManager $r9;
        android.support.v4.app.FragmentTransaction $r10;
        android.support.v4.app.Fragment $r11;
        int $i0, $i1;
        com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment $r12;
        java.util.Vector $r13;

        r0 := @this: com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder;

        $r9 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.FragmentManager manager>;

        if $r9 == null goto label1;

        $r3 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer styleResId>;

        if $r3 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NumberPickerBuilder", "setFragmentManager() and setStyleResId() must be called.");

        return;

     label2:
        $r9 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.FragmentManager manager>;

        $r10 = virtualinvoke $r9.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();

        $r9 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.FragmentManager manager>;

        $r11 = virtualinvoke $r9.<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>("number_dialog");

        if $r11 == null goto label3;

        virtualinvoke $r10.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>($r11);

     label3:
        virtualinvoke $r10.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)>(null);

        $i0 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: int mReference>;

        $r3 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer styleResId>;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r1 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.math.BigDecimal minNumber>;

        $r2 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.math.BigDecimal maxNumber>;

        $r3 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer plusMinusVisibility>;

        $r4 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer decimalVisibility>;

        $r5 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.String labelText>;

        $r6 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentNumberValue>;

        $r7 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Double currentDecimalValue>;

        $r8 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.lang.Integer currentSignValue>;

        $r12 = staticinvoke <com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment: com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment newInstance(int,int,java.math.BigDecimal,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Integer)>($i0, $i1, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        $r11 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.Fragment targetFragment>;

        if $r11 == null goto label4;

        $r11 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: android.support.v4.app.Fragment targetFragment>;

        virtualinvoke $r12.<com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment: void setTargetFragment(android.support.v4.app.Fragment,int)>($r11, 0);

     label4:
        $r13 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlers>;

        virtualinvoke $r12.<com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment: void setNumberPickerDialogHandlers(java.util.Vector)>($r13);

        $r13 = r0.<com.codetroopers.betterpickers.numberpicker.NumberPickerBuilder: java.util.Vector mNumberPickerDialogHandlersV2>;

        virtualinvoke $r12.<com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment: void setNumberPickerDialogHandlersV2(java.util.Vector)>($r13);

        virtualinvoke $r12.<com.codetroopers.betterpickers.numberpicker.NumberPickerDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)>($r10, "number_dialog");

        return;
    }
