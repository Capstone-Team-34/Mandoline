com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout extends android.widget.FrameLayout implements android.view.View$OnTouchListener
private static final int AM
private static final int AMPM_INDEX
private static final int ENABLE_PICKER_INDEX
private static final int HOUR_INDEX
private static final int HOUR_VALUE_TO_DEGREES_STEP_SIZE
private static final int MINUTE_INDEX
private static final int MINUTE_VALUE_TO_DEGREES_STEP_SIZE
private static final int PM
private static final java.lang.String TAG
private static final int VISIBLE_DEGREES_STEP_SIZE
private final int TAP_TIMEOUT
private final int TOUCH_SLOP
private android.view.accessibility.AccessibilityManager mAccessibilityManager
private com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView
private com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView
private int mCurrentHoursOfDay
private int mCurrentItemShowing
private int mCurrentMinutes
private boolean mDoingMove
private boolean mDoingTouch
private int mDownDegrees
private float mDownX
private float mDownY
private android.view.View mGrayBox
private android.os.Handler mHandler
private com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController
private boolean mHideAmPm
private com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView
private com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView
private boolean mInputEnabled
private boolean mIs24HourMode
private int mIsTouchingAmOrPm
private int mLastValueSelected
private com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener
private com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView
private com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView
private int[] mSnapPrefer30sMap
private boolean mTimeInitialized
private com.nineoldandroids.animation.AnimatorSet mTransition
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.os.Handler $r3;
        android.view.ViewConfiguration $r4;
        int $i0;
        com.codetroopers.betterpickers.radialtimepicker.CircleView $r5;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView $r6;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView $r7;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r8;
        android.view.View $r9;
        android.view.ViewGroup$LayoutParams $r10;
        android.content.res.Resources $r11;
        java.lang.Object $r12;
        android.view.accessibility.AccessibilityManager $r13;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm> = -1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler> = $r3;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TOUCH_SLOP> = $i0;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TAP_TIMEOUT> = $i0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove> = 0;

        $r5 = new com.codetroopers.betterpickers.radialtimepicker.CircleView;

        specialinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.CircleView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView> = $r5;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r5);

        $r6 = new com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        specialinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView> = $r6;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r6);

        $r7 = new com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        specialinvoke $r7.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView> = $r7;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r7);

        $r7 = new com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        specialinvoke $r7.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView> = $r7;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r7);

        $r8 = new com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView;

        specialinvoke $r8.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView> = $r8;

        $r8 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r8);

        $r8 = new com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView;

        specialinvoke $r8.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView> = $r8;

        $r8 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r8);

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void preparePrefer30sMap()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mLastValueSelected> = -1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mInputEnabled> = 1;

        $r9 = new android.view.View;

        specialinvoke $r9.<android.view.View: void <init>(android.content.Context)>($r1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox> = $r9;

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox>;

        $r10 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r10.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r9.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r10);

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox>;

        $r11 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.content.res.Resources getResources()>();

        $i0 = <com.codetroopers.betterpickers.R$color: int bpTransparent_black>;

        $i0 = virtualinvoke $r11.<android.content.res.Resources: int getColor(int)>($i0);

        virtualinvoke $r9.<android.view.View: void setBackgroundColor(int)>($i0);

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox>;

        virtualinvoke $r9.<android.view.View: void setVisibility(int)>(4);

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox>;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void addView(android.view.View)>($r9);

        $r12 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r13 = (android.view.accessibility.AccessibilityManager) $r12;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r13;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mTimeInitialized> = 0;

        return;
    }
    static int access$000(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        int i0;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        i0 = $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        return i0;
    }
    static com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView access$100(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r1;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        r1 = $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        return r1;
    }
    static boolean access$202(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove> = $z0;

        return $z0;
    }
    static int access$300(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        int i0;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        i0 = $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees>;

        return i0;
    }
    static int access$400(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout, int, boolean, boolean, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        int $i0;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $i0 = specialinvoke $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int reselectSelector(int,boolean,boolean,boolean)>($i0, $z0, $z1, $z2);

        return $i0;
    }
    static int access$502(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        int $i0;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter1: int;

        $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mLastValueSelected> = $i0;

        return $i0;
    }
    static com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener access$600(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout $r0;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener r1;

        $r0 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        r1 = $r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        return r1;
    }
    private int getCurrentlyShowingValue()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        if $i0 != 0 goto label1;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        return $i0;

     label1:
        if $i0 != 1 goto label2;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentMinutes>;

        return $i0;

     label2:
        return -1;
    }
    private int getDegreesFromCoords(float, float, boolean, java.lang.Boolean[])
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        float $f0, $f1;
        boolean $z0;
        java.lang.Boolean[] $r1;
        int $i0;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 := @parameter3: java.lang.Boolean[];

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $i0 = virtualinvoke $r2.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])>($f0, $f1, $z0, $r1);

        return $i0;

     label1:
        if $i0 != 1 goto label2;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        $i0 = virtualinvoke $r2.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])>($f0, $f1, $z0, $r1);

        return $i0;

     label2:
        return -1;
    }
    private boolean isHourInnerCircle(int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        if $i0 > 12 goto label1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void preparePrefer30sMap()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int[] $r1;
        int i0, i1, i3;
        byte b2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 = newarray (int)[361];

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int[] mSnapPrefer30sMap> = $r1;

        i0 = 0;

        i1 = 1;

        b2 = 8;

        i3 = 0;

     label1:
        if i3 >= 361 goto label7;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int[] mSnapPrefer30sMap>;

        $r1[i3] = i0;

        if i1 != b2 goto label6;

        i0 = i0 + 6;

        if i0 != 360 goto label4;

        b2 = 7;

     label2:
        i1 = 1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        i1 = i0 % 30;

        if i1 != 0 goto label5;

        b2 = 14;

        goto label2;

     label5:
        b2 = 4;

        goto label2;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        return;
    }
    private int reselectSelector(int, boolean, boolean, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, i3;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView r1;
        byte b2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        if $i0 != -1 goto label01;

        return -1;

     label01:
        $i1 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        if $z1 != 0 goto label06;

        if $i1 != 1 goto label06;

        $z1 = 1;

     label02:
        if $z1 == 0 goto label07;

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int snapPrefer30s(int)>($i0);

     label03:
        if $i1 != 0 goto label08;

        r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        b2 = 30;

     label04:
        virtualinvoke r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void setSelection(int,boolean,boolean)>($i0, $z0, $z2);

        virtualinvoke r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void invalidate()>();

        if $i1 != 0 goto label11;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z1 == 0 goto label10;

        if $i0 != 0 goto label09;

        if $z0 == 0 goto label09;

        $i0 = 360;

     label05:
        i3 = $i0 / b2;

        if $i1 != 0 goto label12;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z1 == 0 goto label12;

        if $z0 != 0 goto label12;

        if $i0 == 0 goto label12;

        $i0 = i3 + 12;

        return $i0;

     label06:
        $z1 = 0;

        goto label02;

     label07:
        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int snapOnly30s(int,int)>($i0, 0);

        goto label03;

     label08:
        r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        b2 = 6;

        goto label04;

     label09:
        if $i0 != 360 goto label05;

        if $z0 != 0 goto label05;

        $i0 = 0;

        goto label05;

     label10:
        if $i0 != 0 goto label05;

        $i0 = 360;

        goto label05;

     label11:
        if $i0 != 360 goto label05;

        if $i1 != 1 goto label05;

        $i0 = 0;

        goto label05;

     label12:
        return i3;
    }
    private void setItem(int, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i1;
        boolean $z0;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != 0 goto label1;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(0, $i1);

        $i0 = $i1 % 12;

        $i0 = $i0 * 30;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $z0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean isHourInnerCircle(int)>($i1);

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void setSelection(int,boolean,boolean)>($i0, $z0, 0);

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void invalidate()>();

        return;

     label1:
        if $i0 != 1 goto label2;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(1, $i1);

        $i0 = $i1 * 6;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void setSelection(int,boolean,boolean)>($i0, 0, 0);

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void invalidate()>();

     label2:
        return;
    }
    private void setValueForItem(int, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != 0 goto label1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay> = $i1;

        return;

     label1:
        if $i0 != 1 goto label2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentMinutes> = $i1;

        return;

     label2:
        if $i0 != 2 goto label4;

        if $i1 != 0 goto label3;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        $i0 = $i0 % 12;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay> = $i0;

        return;

     label3:
        if $i1 != 1 goto label4;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        $i0 = $i0 % 12;

        $i0 = $i0 + 12;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay> = $i0;

     label4:
        return;
    }
    private int snapOnly30s(int, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, i1, $i2, i3;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        i1 = $i2 / 30;

        i3 = i1 * 30;

        i1 = i3 + 30;

        if $i0 != 1 goto label1;

        return i1;

     label1:
        if $i0 != -1 goto label3;

        if $i2 != i3 goto label2;

        i3 = i3 - 30;

     label2:
        return i3;

     label3:
        $i0 = $i2 - i3;

        $i2 = i1 - $i2;

        if $i0 >= $i2 goto label4;

        return i3;

     label4:
        return i1;
    }
    private int snapPrefer30s(int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;
        int[] $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int[] mSnapPrefer30sMap>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int[] mSnapPrefer30sMap>;

        $i0 = $r1[$i0];

        return $i0;
    }
    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.view.accessibility.AccessibilityEvent $r1;
        android.text.format.Time r2;
        int $i0;
        java.util.List $r3;
        long $l1;
        boolean $z0;
        android.content.Context $r4;
        java.lang.String $r5;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 32 goto label2;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r2 = new android.text.format.Time;

        specialinvoke r2.<android.text.format.Time: void <init>()>();

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getHours()>();

        r2.<android.text.format.Time: int hour> = $i0;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getMinutes()>();

        r2.<android.text.format.Time: int minute> = $i0;

        $l1 = virtualinvoke r2.<android.text.format.Time: long normalize(boolean)>(1);

        $i0 = 1;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        $i0 = 1 | 128;

     label1:
        $r4 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.content.Context getContext()>();

        $r5 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r4, $l1, $i0);

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        return 1;

     label2:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        return $z0;
    }
    public int getCurrentItemShowing()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentItemShowing>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentItemShowing>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current item showing was unfortunately set to ");

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentItemShowing>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialPickerLayout", $r2);

        return -1;

     label1:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentItemShowing>;

        return $i0;
    }
    public int getHours()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        return i0;
    }
    public int getIsCurrentlyAmOrPm()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        if $i0 >= 12 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentHoursOfDay>;

        if $i0 >= 24 goto label2;

        return 1;

     label2:
        return -1;
    }
    public int getMinutes()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentMinutes>;

        return i0;
    }
    public void initialize(android.content.Context, com.codetroopers.betterpickers.HapticFeedbackController, int, int, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.content.Context $r1;
        com.codetroopers.betterpickers.HapticFeedbackController $r2;
        int $i0, $i1, i3, $i4;
        boolean $z0, $z1, $z2;
        java.lang.String[] r3, $r11, $r12;
        android.view.accessibility.AccessibilityManager $r4;
        com.codetroopers.betterpickers.radialtimepicker.CircleView $r5;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView $r6;
        byte $b2;
        android.content.res.Resources $r7;
        int[] $r8, $r9, $r10;
        java.lang.Object[] $r13;
        java.lang.Integer $r14;
        java.lang.String $r15;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView $r16;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r17;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.codetroopers.betterpickers.HapticFeedbackController;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mTimeInitialized>;

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialPickerLayout", "Time has already been initialized.");

        return;

     label01:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController> = $r2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode> = $z0;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z1 = staticinvoke <android.support.v4.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)>($r4);

        if $z1 == 0 goto label07;

        $z1 = 1;

     label02:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm> = $z1;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView>;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.CircleView: void initialize(android.content.Context,boolean)>($r1, $z1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.CircleView: void invalidate()>();

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        if $z1 != 0 goto label04;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        if $i0 >= 12 goto label08;

        $b2 = 0;

     label03:
        virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void initialize(android.content.Context,int)>($r1, $b2);

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void invalidate()>();

     label04:
        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = newarray (int)[12];

        $r8[0] = 12;

        $r8[1] = 1;

        $r8[2] = 2;

        $r8[3] = 3;

        $r8[4] = 4;

        $r8[5] = 5;

        $r8[6] = 6;

        $r8[7] = 7;

        $r8[8] = 8;

        $r8[9] = 9;

        $r8[10] = 10;

        $r8[11] = 11;

        $r9 = newarray (int)[12];

        $r9[0] = 0;

        $r9[1] = 13;

        $r9[2] = 14;

        $r9[3] = 15;

        $r9[4] = 16;

        $r9[5] = 17;

        $r9[6] = 18;

        $r9[7] = 19;

        $r9[8] = 20;

        $r9[9] = 21;

        $r9[10] = 22;

        $r9[11] = 23;

        $r10 = newarray (int)[12];

        $r10[0] = 0;

        $r10[1] = 5;

        $r10[2] = 10;

        $r10[3] = 15;

        $r10[4] = 20;

        $r10[5] = 25;

        $r10[6] = 30;

        $r10[7] = 35;

        $r10[8] = 40;

        $r10[9] = 45;

        $r10[10] = 50;

        $r10[11] = 55;

        r3 = newarray (java.lang.String)[12];

        $r11 = newarray (java.lang.String)[12];

        $r12 = newarray (java.lang.String)[12];

        i3 = 0;

     label05:
        if i3 >= 12 goto label10;

        if $z0 == 0 goto label09;

        $r13 = newarray (java.lang.Object)[1];

        $i4 = $r9[i3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r13);

     label06:
        r3[i3] = $r15;

        $r13 = newarray (java.lang.Object)[1];

        $i4 = $r8[i3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r13);

        $r11[i3] = $r15;

        $r13 = newarray (java.lang.Object)[1];

        $i4 = $r10[i3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r13);

        $r12[i3] = $r15;

        i3 = i3 + 1;

        goto label05;

     label07:
        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        goto label02;

     label08:
        $b2 = 1;

        goto label03;

     label09:
        $r13 = newarray (java.lang.Object)[1];

        $i4 = $r8[i3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r13);

        goto label06;

     label10:
        $r16 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        if $z0 == 0 goto label12;

     label11:
        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean)>($r7, r3, $r11, $z1, 1);

        $r16 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void invalidate()>();

        $r16 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean)>($r7, $r12, null, $z1, 0);

        $r16 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void invalidate()>();

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(0, $i0);

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(1, $i1);

        i3 = $i0 % 12;

        i3 = i3 * 30;

        $r17 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        $z2 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean isHourInnerCircle(int)>($i0);

        virtualinvoke $r17.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void initialize(android.content.Context,boolean,boolean,boolean,int,boolean)>($r1, $z1, $z0, 1, i3, $z2);

        $i0 = $i1 * 6;

        $r17 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        virtualinvoke $r17.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void initialize(android.content.Context,boolean,boolean,boolean,int,boolean)>($r1, $z0, 0, 0, $i0, 0);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mTimeInitialized> = 1;

        return;

     label12:
        $r11 = null;

        goto label11;
    }
    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        return;
    }
    public void onMeasure(int, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i0);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i1);

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }
    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        java.lang.Boolean[] r3;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Boolean $r4;
        int $i0, $i3, $i4;
        boolean $z0, $z1;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView $r5;
        com.codetroopers.betterpickers.HapticFeedbackController $r6;
        android.os.Handler $r7;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$1 $r8;
        long $l1;
        android.view.accessibility.AccessibilityManager $r9;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$2 $r10;
        byte $b2;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener $r11;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        r3 = newarray (java.lang.Boolean)[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r3[0] = $r4;

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label15;
            case 2: goto label09;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mInputEnabled>;

        if $z0 != 0 goto label03;

        return 1;

     label03:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: float mDownX> = $f0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: float mDownY> = $f1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mLastValueSelected> = -1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove> = 0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingTouch> = 1;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mHideAmPm>;

        if $z0 != 0 goto label07;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        $i0 = virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getIsTouchingAmOrPm(float,float)>($f0, $f1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm> = $i0;

     label04:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 == 0 goto label05;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 != 1 goto label08;

     label05:
        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.HapticFeedbackController: void tryVibrate()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees> = -1;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler>;

        $r8 = new com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$1;

        specialinvoke $r8.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$1: void <init>(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout)>(r0);

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TAP_TIMEOUT>;

        $l1 = (long) $i0;

        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, $l1);

     label06:
        return 1;

     label07:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm> = -1;

        goto label04;

     label08:
        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = staticinvoke <android.support.v4.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)>($r9);

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])>($f0, $f1, $z0, r3);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees> = $i0;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees>;

        if $i0 == -1 goto label06;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.HapticFeedbackController: void tryVibrate()>();

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler>;

        $r10 = new com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$2;

        specialinvoke $r10.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$2: void <init>(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout,java.lang.Boolean[])>(r0, r3);

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TAP_TIMEOUT>;

        $l1 = (long) $i0;

        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r10, $l1);

        goto label06;

     label09:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mInputEnabled>;

        if $z0 != 0 goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialPickerLayout", "Input was disabled, but received ACTION_MOVE.");

        return 1;

     label10:
        $f2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: float mDownY>;

        $f2 = $f1 - $f2;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: float mDownX>;

        $f3 = $f0 - $f3;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove>;

        if $z0 != 0 goto label11;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TOUCH_SLOP>;

        $f4 = (float) $i0;

        $b2 = $f3 cmpg $f4;

        if $b2 > 0 goto label11;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int TOUCH_SLOP>;

        $f3 = (float) $i0;

        $b2 = $f2 cmpg $f3;

        if $b2 <= 0 goto label01;

     label11:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 == 0 goto label12;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 != 1 goto label13;

     label12:
        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        $i0 = virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getIsTouchingAmOrPm(float,float)>($f0, $f1);

        $i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 == $i3 goto label01;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setAmOrPmPressed(int)>(-1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void invalidate()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm> = -1;

        goto label01;

     label13:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees>;

        if $i0 == -1 goto label01;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove> = 1;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])>($f0, $f1, 1, r3);

        if $i0 == -1 goto label14;

        $r4 = r3[0];

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int reselectSelector(int,boolean,boolean,boolean)>($i0, $z0, 0, 1);

        $i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mLastValueSelected>;

        if $i0 == $i3 goto label14;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.HapticFeedbackController: void tryVibrate()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mLastValueSelected> = $i0;

        $r11 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        $i3 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        interfaceinvoke $r11.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener: void onValueSelected(int,int,boolean)>($i3, $i0, 0);

     label14:
        return 1;

     label15:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mInputEnabled>;

        if $z0 != 0 goto label16;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RadialPickerLayout", "Input was disabled, but received ACTION_UP.");

        $r11 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        interfaceinvoke $r11.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(3, 1, 0);

        return 1;

     label16:
        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingTouch> = 0;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 == 0 goto label17;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 != 1 goto label19;

     label17:
        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        $i0 = virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getIsTouchingAmOrPm(float,float)>($f0, $f1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setAmOrPmPressed(int)>(-1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void invalidate()>();

        $i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        if $i0 != $i3 goto label18;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setAmOrPm(int)>($i0);

        $i3 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getIsCurrentlyAmOrPm()>();

        if $i3 == $i0 goto label18;

        $r11 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        $i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm>;

        interfaceinvoke $r11.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(2, $i3, 0);

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(2, $i0);

     label18:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mIsTouchingAmOrPm> = -1;

        goto label01;

     label19:
        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mDownDegrees>;

        if $i0 == -1 goto label22;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove>;

        $i0 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])>($f0, $f1, $z0, r3);

        if $i0 == -1 goto label22;

        $r4 = r3[0];

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove>;

        if $z1 != 0 goto label23;

        $z1 = 1;

     label20:
        $i3 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int reselectSelector(int,boolean,boolean,boolean)>($i0, $z0, $z1, 0);

        $i0 = $i3;

        $i4 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        if $i4 != 0 goto label21;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z0 != 0 goto label21;

        $i4 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getIsCurrentlyAmOrPm()>();

        if $i4 != 0 goto label24;

        if $i3 != 12 goto label24;

        $i0 = 0;

     label21:
        $i3 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>($i3, $i0);

        $r11 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        $i3 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        interfaceinvoke $r11.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener: void onValueSelected(int,int,boolean)>($i3, $i0, 1);

     label22:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingMove> = 0;

        return 1;

     label23:
        $z1 = 0;

        goto label20;

     label24:
        if $i4 != 1 goto label21;

        if $i3 == 12 goto label21;

        $i0 = $i3 + 12;

        goto label21;
    }
    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i2, i3;
        android.os.Bundle $r1;
        boolean $z0;
        byte b1, b4;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener $r2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean performAccessibilityAction(int,android.os.Bundle)>($i0, $r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        b1 = 0;

        if $i0 != 4096 goto label06;

        b1 = 1;

     label02:
        if b1 == 0 goto label11;

        $i2 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentlyShowingValue()>();

        i3 = $i2;

        b4 = 0;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        if $i0 != 0 goto label07;

        b4 = 30;

        i3 = $i2 % 12;

     label03:
        $i2 = i3 * b4;

        $i2 = specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int snapOnly30s(int,int)>($i2, b1);

        $i2 = $i2 / b4;

        b1 = 0;

        if $i0 != 0 goto label09;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mIs24HourMode>;

        if $z0 == 0 goto label08;

        b4 = 23;

     label04:
        if $i2 <= b4 goto label10;

        $i2 = b1;

     label05:
        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setItem(int,int)>($i0, $i2);

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener>;

        interfaceinvoke $r2.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener: void onValueSelected(int,int,boolean)>($i0, $i2, 0);

        return 1;

     label06:
        if $i0 != 8192 goto label02;

        b1 = -1;

        goto label02;

     label07:
        if $i0 != 1 goto label03;

        b4 = 6;

        goto label03;

     label08:
        b4 = 12;

        b1 = 1;

        goto label04;

     label09:
        b4 = 55;

        goto label04;

     label10:
        if $i2 >= b1 goto label05;

        $i2 = b4;

        goto label05;

     label11:
        return 0;
    }
    public void setAmOrPm(int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setAmOrPm(int)>($i0);

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void invalidate()>();

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setValueForItem(int,int)>(2, $i0);

        return;
    }
    public void setCurrentItemShowing(int, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i2;
        boolean $z0;
        com.nineoldandroids.animation.ObjectAnimator[] r1;
        short s1, s3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView $r4;
        com.nineoldandroids.animation.ObjectAnimator $r5;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r6;
        com.nineoldandroids.animation.AnimatorSet $r7;
        float $f0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        s1 = 255;

        if $i0 == 0 goto label1;

        if $i0 == 1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimePicker does not support view at index ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialPickerLayout", $r3);

        return;

     label1:
        $i2 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int getCurrentItemShowing()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: int mCurrentItemShowing> = $i0;

        if $z0 == 0 goto label5;

        if $i0 == $i2 goto label5;

        r1 = newarray (com.nineoldandroids.animation.ObjectAnimator)[4];

        if $i0 != 1 goto label4;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        $r5 = virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator()>();

        r1[0] = $r5;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $r5 = virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator()>();

        r1[1] = $r5;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        $r5 = virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator getReappearAnimator()>();

        r1[2] = $r5;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        $r5 = virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: com.nineoldandroids.animation.ObjectAnimator getReappearAnimator()>();

        r1[3] = $r5;

     label2:
        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition>;

        if $r7 == null goto label3;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition>;

        $z0 = virtualinvoke $r7.<com.nineoldandroids.animation.AnimatorSet: boolean isRunning()>();

        if $z0 == 0 goto label3;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition>;

        virtualinvoke $r7.<com.nineoldandroids.animation.AnimatorSet: void end()>();

     label3:
        $r7 = new com.nineoldandroids.animation.AnimatorSet;

        specialinvoke $r7.<com.nineoldandroids.animation.AnimatorSet: void <init>()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition> = $r7;

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition>;

        virtualinvoke $r7.<com.nineoldandroids.animation.AnimatorSet: void playTogether(com.nineoldandroids.animation.Animator[])>(r1);

        $r7 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.nineoldandroids.animation.AnimatorSet mTransition>;

        virtualinvoke $r7.<com.nineoldandroids.animation.AnimatorSet: void start()>();

        return;

     label4:
        if $i0 != 0 goto label2;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        $r5 = virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator getReappearAnimator()>();

        r1[0] = $r5;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $r5 = virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: com.nineoldandroids.animation.ObjectAnimator getReappearAnimator()>();

        r1[1] = $r5;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        $r5 = virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator()>();

        r1[2] = $r5;

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        $r5 = virtualinvoke $r6.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator()>();

        r1[3] = $r5;

        goto label2;

     label5:
        if $i0 != 0 goto label8;

        s3 = 255;

     label6:
        if $i0 != 1 goto label9;

     label7:
        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        $f0 = (float) s3;

        staticinvoke <com.nineoldandroids.view.ViewHelper: void setAlpha(android.view.View,float)>($r4, $f0);

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        $f0 = (float) s3;

        staticinvoke <com.nineoldandroids.view.ViewHelper: void setAlpha(android.view.View,float)>($r6, $f0);

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        $f0 = (float) s1;

        staticinvoke <com.nineoldandroids.view.ViewHelper: void setAlpha(android.view.View,float)>($r4, $f0);

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        $f0 = (float) s1;

        staticinvoke <com.nineoldandroids.view.ViewHelper: void setAlpha(android.view.View,float)>($r6, $f0);

        return;

     label8:
        s3 = 0;

        goto label6;

     label9:
        s1 = 0;

        goto label7;
    }
    public void setOnValueSelectedListener(com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout$OnValueSelectedListener mListener> = $r1;

        return;
    }
    void setTheme(android.content.res.TypedArray)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        android.content.res.TypedArray $r1;
        com.codetroopers.betterpickers.radialtimepicker.CircleView $r2;
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView $r3;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView $r4;
        com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView $r5;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.CircleView mCircleView>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.radialtimepicker.CircleView: void setTheme(android.content.res.TypedArray)>($r1);

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView mAmPmCirclesView>;

        virtualinvoke $r3.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setTheme(android.content.res.TypedArray)>($r1);

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mHourRadialTextsView>;

        virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void setTheme(android.content.res.TypedArray)>($r1);

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView mMinuteRadialTextsView>;

        virtualinvoke $r4.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void setTheme(android.content.res.TypedArray)>($r1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mHourRadialSelectorView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void setTheme(android.content.res.TypedArray)>($r1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView mMinuteRadialSelectorView>;

        virtualinvoke $r5.<com.codetroopers.betterpickers.radialtimepicker.RadialSelectorView: void setTheme(android.content.res.TypedArray)>($r1);

        return;
    }
    public void setTime(int, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setItem(int,int)>(0, $i0);

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: void setItem(int,int)>(1, $i1);

        return;
    }
    public boolean trySettingInputEnabled(boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout r0;
        boolean $z0, $z1;
        byte $b0;
        android.view.View $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout;

        $z0 := @parameter0: boolean;

        $b0 = 0;

        $z1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mDoingTouch>;

        if $z1 == 0 goto label1;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: boolean mInputEnabled> = $z0;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialPickerLayout: android.view.View mGrayBox>;

        if $z0 == 0 goto label2;

        $b0 = 4;

     label2:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b0);

        return 1;
    }
