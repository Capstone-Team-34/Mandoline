com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView extends android.view.View
private static final int AM
private static final int PM
private static final java.lang.String TAG
private int mAmOrPm
private int mAmOrPmPressed
private int mAmPmCircleRadius
private float mAmPmCircleRadiusMultiplier
private int mAmPmTextColor
private int mAmPmYCenter
private java.lang.String mAmText
private int mAmXCenter
private float mCircleRadiusMultiplier
private boolean mDrawValuesReady
private boolean mIsInitialized
private final android.graphics.Paint mPaint
private java.lang.String mPmText
private int mPmXCenter
private int mSelectedAlpha
private int mSelectedColor
private int mUnselectedColor
    public void <init>(android.content.Context)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        android.content.Context $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint> = $r2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mIsInitialized> = 0;

        return;
    }
    public int getIsTouchingAmOrPm(float, float)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        float $f0, $f1, $f2, $f3;
        int i0, i1, $i2;
        boolean $z0;
        double $d0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mDrawValuesReady>;

        if $z0 != 0 goto label1;

        return -1;

     label1:
        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter>;

        $f2 = (float) i1;

        $f2 = $f1 - $f2;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter>;

        $f3 = (float) i1;

        $f1 = $f1 - $f3;

        $f1 = $f2 * $f1;

        i1 = (int) $f1;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmXCenter>;

        $f1 = (float) i0;

        $f1 = $f0 - $f1;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmXCenter>;

        $f2 = (float) i0;

        $f2 = $f0 - $f2;

        $f1 = $f1 * $f2;

        $f2 = (float) i1;

        $f1 = $f1 + $f2;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i0 = (int) $d0;

        $i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        if i0 > $i2 goto label2;

        return 0;

     label2:
        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mPmXCenter>;

        $f1 = (float) i0;

        $f1 = $f0 - $f1;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mPmXCenter>;

        $f2 = (float) i0;

        $f0 = $f0 - $f2;

        $f0 = $f1 * $f0;

        $f1 = (float) i1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i1 = (int) $d0;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        if i1 > i0 goto label3;

        return 1;

     label3:
        return -1;
    }
    public void initialize(android.content.Context, int)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        android.content.Context $r1;
        int $i0, $i1;
        boolean $z0;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        android.graphics.Typeface $r4;
        android.graphics.Paint $r5;
        android.graphics.Paint$Align $r6;
        float $f0;
        java.text.DateFormatSymbols $r7;
        java.lang.String[] $r8;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AmPmCirclesView", "AmPmCirclesView may only be initialized once.");

        return;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.codetroopers.betterpickers.R$color: int bpWhite>;

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mUnselectedColor> = $i1;

        $i1 = <com.codetroopers.betterpickers.R$color: int bpBlue>;

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor> = $i1;

        $i1 = <com.codetroopers.betterpickers.R$color: int ampm_text_color>;

        $i1 = virtualinvoke $r2.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmTextColor> = $i1;

        $i1 = <com.codetroopers.betterpickers.R$string: int sans_serif>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r3, 0);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r4);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        $r6 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r5.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r6);

        $i1 = <com.codetroopers.betterpickers.R$string: int circle_radius_multiplier>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: float mCircleRadiusMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int ampm_circle_radius_multiplier>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: float mAmPmCircleRadiusMultiplier> = $f0;

        $r7 = new java.text.DateFormatSymbols;

        specialinvoke $r7.<java.text.DateFormatSymbols: void <init>()>();

        $r8 = virtualinvoke $r7.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        $r3 = $r8[0];

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: java.lang.String mAmText> = $r3;

        $r3 = $r8[1];

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: java.lang.String mPmText> = $r3;

        virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: void setAmOrPm(int)>($i0);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPmPressed> = -1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mIsInitialized> = 1;

        return;
    }
    public void onDraw(android.graphics.Canvas)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        android.graphics.Canvas $r1;
        int i0, i1, i2, i3, $i4;
        boolean $z0;
        float $f0, $f1, $f2;
        android.graphics.Paint $r2;
        java.lang.String $r3;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $r1 := @parameter0: android.graphics.Canvas;

        i1 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getWidth()>();

        if i1 == 0 goto label7;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mIsInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mDrawValuesReady>;

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getWidth()>();

        i1 = i1 / 2;

        i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int getHeight()>();

        i2 = i0 / 2;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $f0 = (float) i0;

        $f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: float mCircleRadiusMultiplier>;

        $f0 = $f0 * $f1;

        i0 = (int) $f0;

        $f0 = (float) i0;

        $f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: float mAmPmCircleRadiusMultiplier>;

        $f0 = $f0 * $f1;

        i3 = (int) $f0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius> = i3;

        i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        i3 = i3 * 3;

        i3 = i3 / 4;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f0 = (float) i3;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f0);

        i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        i3 = i3 / 2;

        i2 = i2 - i3;

        i2 = i2 + i0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter> = i2;

        i2 = i1 - i0;

        i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        i2 = i2 + i3;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmXCenter> = i2;

        i1 = i1 + i0;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        i1 = i1 - i0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mPmXCenter> = i1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: boolean mDrawValuesReady> = 1;

     label2:
        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mUnselectedColor>;

        i3 = 255;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mUnselectedColor>;

        i0 = 255;

        $i4 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPm>;

        if $i4 != 0 goto label5;

        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor>;

        i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedAlpha>;

     label3:
        $i4 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPmPressed>;

        if $i4 != 0 goto label6;

        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor>;

        i3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedAlpha>;

     label4:
        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i2);

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i3);

        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmXCenter>;

        $f0 = (float) i2;

        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter>;

        $f1 = (float) i2;

        i2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        $f2 = (float) i2;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r2);

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i1);

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mPmXCenter>;

        $f0 = (float) i1;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter>;

        $f1 = (float) i1;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmCircleRadius>;

        $f2 = (float) i1;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r2);

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmTextColor>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i1);

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmYCenter>;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float descent()>();

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r2.<android.graphics.Paint: float ascent()>();

        $f0 = $f0 + $f1;

        i0 = (int) $f0;

        i0 = i0 / 2;

        i1 = i1 - i0;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: java.lang.String mAmText>;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmXCenter>;

        $f0 = (float) i0;

        $f1 = (float) i1;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f0, $f1, $r2);

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: java.lang.String mPmText>;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mPmXCenter>;

        $f0 = (float) i0;

        $f1 = (float) i1;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r3, $f0, $f1, $r2);

        return;

     label5:
        $i4 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPm>;

        if $i4 != 1 goto label3;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor>;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedAlpha>;

        goto label3;

     label6:
        $i4 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPmPressed>;

        if $i4 != 1 goto label4;

        i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor>;

        i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedAlpha>;

        goto label4;

     label7:
        return;
    }
    public void setAmOrPm(int)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $i0 := @parameter0: int;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPm> = $i0;

        return;
    }
    public void setAmOrPmPressed(int)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $i0 := @parameter0: int;

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmOrPmPressed> = $i0;

        return;
    }
    void setTheme(android.content.res.TypedArray)
    {
        com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView r0;
        android.content.res.TypedArray $r1;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView;

        $r1 := @parameter0: android.content.res.TypedArray;

        $i0 = <com.codetroopers.betterpickers.R$styleable: int BetterPickersDialog_bpMainColor1>;

        $i1 = <com.codetroopers.betterpickers.R$color: int bpWhite>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mUnselectedColor> = $i0;

        $i0 = <com.codetroopers.betterpickers.R$styleable: int BetterPickersDialog_bpAccentColor>;

        $i1 = <com.codetroopers.betterpickers.R$color: int bpBlue>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedColor> = $i0;

        $i0 = <com.codetroopers.betterpickers.R$styleable: int BetterPickersDialog_bpMainTextColor>;

        $i1 = <com.codetroopers.betterpickers.R$color: int ampm_text_color>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mAmPmTextColor> = $i0;

        $i0 = <com.codetroopers.betterpickers.R$styleable: int BetterPickersDialog_bpSelectionAlpha>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>($i0, 100);

        r0.<com.codetroopers.betterpickers.radialtimepicker.AmPmCirclesView: int mSelectedAlpha> = $i0;

        return;
    }
