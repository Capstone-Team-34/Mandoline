com.nineoldandroids.animation.ArgbEvaluator extends java.lang.Object implements com.nineoldandroids.animation.TypeEvaluator
    public void <init>()
    {
        com.nineoldandroids.animation.ArgbEvaluator r0;

        r0 := @this: com.nineoldandroids.animation.ArgbEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        com.nineoldandroids.animation.ArgbEvaluator r0;
        float $f0, $f1;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.Object $r1, $r2;
        java.lang.Integer $r3;

        r0 := @this: com.nineoldandroids.animation.ArgbEvaluator;

        $f0 := @parameter0: float;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = (java.lang.Integer) $r1;

        i5 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        i4 = i5 >> 24;

        i6 = i5 >> 16;

        i7 = i6 & 255;

        i6 = i5 >> 8;

        i6 = i6 & 255;

        i5 = i5 & 255;

        $r3 = (java.lang.Integer) $r2;

        i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        i0 = i1 >> 24;

        i2 = i1 >> 16;

        i3 = i2 & 255;

        i2 = i1 >> 8;

        i2 = i2 & 255;

        i1 = i1 & 255;

        i0 = i0 - i4;

        $f1 = (float) i0;

        $f1 = $f1 * $f0;

        i0 = (int) $f1;

        i4 = i0 + i4;

        i4 = i4 << 24;

        i3 = i3 - i7;

        $f1 = (float) i3;

        $f1 = $f1 * $f0;

        i3 = (int) $f1;

        i7 = i3 + i7;

        i7 = i7 << 16;

        i7 = i4 | i7;

        i2 = i2 - i6;

        $f1 = (float) i2;

        $f1 = $f1 * $f0;

        i2 = (int) $f1;

        i6 = i2 + i6;

        i6 = i6 << 8;

        i6 = i7 | i6;

        i1 = i1 - i5;

        $f1 = (float) i1;

        $f0 = $f1 * $f0;

        i1 = (int) $f0;

        i5 = i1 + i5;

        i5 = i6 | i5;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        return $r3;
    }
