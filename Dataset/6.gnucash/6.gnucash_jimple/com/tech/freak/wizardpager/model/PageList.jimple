com.tech.freak.wizardpager.model.PageList extends java.util.ArrayList implements com.tech.freak.wizardpager.model.PageTreeNode
private static final long serialVersionUID
    public transient void <init>(com.tech.freak.wizardpager.model.Page[])
    {
        com.tech.freak.wizardpager.model.PageList r0;
        com.tech.freak.wizardpager.model.Page[] $r1;
        int i0, i1;
        com.tech.freak.wizardpager.model.Page r2;

        r0 := @this: com.tech.freak.wizardpager.model.PageList;

        $r1 := @parameter0: com.tech.freak.wizardpager.model.Page[];

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r0.<com.tech.freak.wizardpager.model.PageList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    public com.tech.freak.wizardpager.model.Page findByKey(java.lang.String)
    {
        com.tech.freak.wizardpager.model.PageList r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.tech.freak.wizardpager.model.Page r4;

        r0 := @this: com.tech.freak.wizardpager.model.PageList;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.tech.freak.wizardpager.model.PageList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.tech.freak.wizardpager.model.Page) $r3;

        r4 = virtualinvoke r4.<com.tech.freak.wizardpager.model.Page: com.tech.freak.wizardpager.model.Page findByKey(java.lang.String)>($r1);

        if r4 == null goto label1;

        return r4;

     label2:
        return null;
    }
    public void flattenCurrentPageSequence(java.util.ArrayList)
    {
        com.tech.freak.wizardpager.model.PageList r0;
        java.util.ArrayList r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.tech.freak.wizardpager.model.Page r4;

        r0 := @this: com.tech.freak.wizardpager.model.PageList;

        r1 := @parameter0: java.util.ArrayList;

        $r2 = virtualinvoke r0.<com.tech.freak.wizardpager.model.PageList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.tech.freak.wizardpager.model.Page) $r3;

        virtualinvoke r4.<com.tech.freak.wizardpager.model.Page: void flattenCurrentPageSequence(java.util.ArrayList)>(r1);

        goto label1;

     label2:
        return;
    }
