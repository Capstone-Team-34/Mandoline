com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin
private static final java.lang.String NAME
private static final java.lang.String OPTION_EXIT_DEFAULT
private static final java.lang.String OPTION_KILL_DEFAULT
private static final java.lang.String OPTION_THROW_DEFAULT
    public void <init>()
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private void doKill(com.facebook.stetho.dumpapp.DumperContext, java.util.Iterator) throws com.facebook.stetho.dumpapp.DumpException
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;
        com.facebook.stetho.dumpapp.DumperContext $r1;
        java.util.Iterator r2;
        java.io.IOException r3;
        java.lang.String $r4;
        java.lang.ProcessBuilder $r5;
        java.lang.String[] $r6;
        java.lang.StringBuilder $r7;
        int $i0;
        java.lang.Process $r8;
        java.io.InputStream $r9;
        java.io.PrintStream $r10;
        byte[] $r11;
        java.lang.Throwable $r12;
        com.facebook.stetho.dumpapp.DumpException $r13;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        $r1 := @parameter0: com.facebook.stetho.dumpapp.DumperContext;

        r2 := @parameter1: java.util.Iterator;

        $r4 = staticinvoke <com.facebook.stetho.dumpapp.ArgsHelper: java.lang.String nextOptionalArg(java.util.Iterator,java.lang.String)>(r2, "9");

        $r5 = new java.lang.ProcessBuilder;

        $r6 = newarray (java.lang.String)[0];

     label01:
        specialinvoke $r5.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r6);

     label02:
        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "/system/bin/kill";

        $r7 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r6[1] = $r4;

     label05:
        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label06:
        $r6[2] = $r4;

     label07:
        $r5 = virtualinvoke $r5.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r6);

        $r5 = virtualinvoke $r5.<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectErrorStream(boolean)>(1);

        $r8 = virtualinvoke $r5.<java.lang.ProcessBuilder: java.lang.Process start()>();

     label08:
        $r9 = virtualinvoke $r8.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r10 = virtualinvoke $r1.<com.facebook.stetho.dumpapp.DumperContext: java.io.PrintStream getStdout()>();

        $r11 = newarray (byte)[1024];

        staticinvoke <com.facebook.stetho.common.Util: void copy(java.io.InputStream,java.io.OutputStream,byte[])>($r9, $r10, $r11);

     label09:
        virtualinvoke $r8.<java.lang.Process: void destroy()>();

     label10:
        return;

     label11:
        $r12 := @caughtexception;

     label12:
        virtualinvoke $r8.<java.lang.Process: void destroy()>();

        throw $r12;

     label13:
        r3 := @caughtexception;

        $r13 = new com.facebook.stetho.dumpapp.DumpException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to invoke kill: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.facebook.stetho.dumpapp.DumpException: void <init>(java.lang.String)>($r4);

        throw $r13;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label12 to label13 with label13;
    }
    private void doSystemExit(java.util.Iterator)
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;
        java.util.Iterator r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        r1 := @parameter0: java.util.Iterator;

        $r2 = staticinvoke <com.facebook.stetho.dumpapp.ArgsHelper: java.lang.String nextOptionalArg(java.util.Iterator,java.lang.String)>(r1, "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        staticinvoke <java.lang.System: void exit(int)>($i0);

        return;
    }
    private void doUncaughtException(java.util.Iterator) throws com.facebook.stetho.dumpapp.DumpException
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;
        java.util.Iterator r1;
        java.lang.Thread r2;
        java.lang.String $r3;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Constructor $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.Throwable r9;
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin$ThrowRunnable $r10;
        java.lang.Exception r11;
        com.facebook.stetho.dumpapp.DumpException $r12;
        java.lang.StringBuilder $r13;
        java.lang.reflect.InvocationTargetException r14;
        java.lang.RuntimeException $r15;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        r1 := @parameter0: java.util.Iterator;

        $r3 = staticinvoke <com.facebook.stetho.dumpapp.ArgsHelper: java.lang.String nextOptionalArg(java.util.Iterator,java.lang.String)>(r1, "java.lang.Error");

     label01:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

     label02:
        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = class "Ljava/lang/String;";

     label03:
        $r6 = staticinvoke <com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin: java.lang.reflect.Constructor tryGetDeclaredConstructor(java.lang.Class,java.lang.Class[])>($r4, $r5);

     label04:
        if $r6 == null goto label10;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "Uncaught exception triggered by Stetho";

     label05:
        $r8 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

     label06:
        r9 = (java.lang.Throwable) $r8;

     label07:
        r2 = new java.lang.Thread;

        $r10 = new com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin$ThrowRunnable;

     label08:
        specialinvoke $r10.<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin$ThrowRunnable: void <init>(java.lang.Throwable)>(r9);

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);

        virtualinvoke r2.<java.lang.Thread: void start()>();

        staticinvoke <com.facebook.stetho.common.Util: void joinUninterruptibly(java.lang.Thread)>(r2);

     label09:
        return;

     label10:
        $r5 = newarray (java.lang.Class)[0];

     label11:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r5);

     label12:
        $r7 = newarray (java.lang.Object)[0];

     label13:
        $r8 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

     label14:
        r9 = (java.lang.Throwable) $r8;

     label15:
        goto label07;

     label16:
        r11 := @caughtexception;

     label17:
        $r12 = new com.facebook.stetho.dumpapp.DumpException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid supplied Throwable class: ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.facebook.stetho.dumpapp.DumpException: void <init>(java.lang.String)>($r3);

        throw $r12;

     label18:
        r14 := @caughtexception;

        r9 = virtualinvoke r14.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r15 = staticinvoke <com.facebook.stetho.common.ExceptionUtil: java.lang.RuntimeException propagate(java.lang.Throwable)>(r9);

        throw $r15;

     label19:
        r11 := @caughtexception;

        goto label17;

     label20:
        r11 := @caughtexception;

        goto label17;

     label21:
        r11 := @caughtexception;

        goto label17;

     label22:
        r11 := @caughtexception;

        goto label17;

        catch java.lang.ClassNotFoundException from label01 to label02 with label16;
        catch java.lang.ClassNotFoundException from label03 to label04 with label16;
        catch java.lang.ClassNotFoundException from label05 to label06 with label16;
        catch java.lang.ClassNotFoundException from label08 to label09 with label16;
        catch java.lang.ClassNotFoundException from label11 to label12 with label16;
        catch java.lang.ClassNotFoundException from label13 to label14 with label16;
        catch java.lang.ClassCastException from label01 to label02 with label20;
        catch java.lang.ClassCastException from label03 to label04 with label20;
        catch java.lang.ClassCastException from label05 to label07 with label20;
        catch java.lang.ClassCastException from label08 to label09 with label20;
        catch java.lang.ClassCastException from label11 to label12 with label20;
        catch java.lang.ClassCastException from label13 to label15 with label20;
        catch java.lang.NoSuchMethodException from label01 to label02 with label22;
        catch java.lang.NoSuchMethodException from label03 to label04 with label22;
        catch java.lang.NoSuchMethodException from label05 to label06 with label22;
        catch java.lang.NoSuchMethodException from label08 to label09 with label22;
        catch java.lang.NoSuchMethodException from label11 to label12 with label22;
        catch java.lang.NoSuchMethodException from label13 to label14 with label22;
        catch java.lang.IllegalAccessException from label01 to label02 with label21;
        catch java.lang.IllegalAccessException from label03 to label04 with label21;
        catch java.lang.IllegalAccessException from label05 to label06 with label21;
        catch java.lang.IllegalAccessException from label08 to label09 with label21;
        catch java.lang.IllegalAccessException from label11 to label12 with label21;
        catch java.lang.IllegalAccessException from label13 to label14 with label21;
        catch java.lang.InstantiationException from label01 to label02 with label19;
        catch java.lang.InstantiationException from label03 to label04 with label19;
        catch java.lang.InstantiationException from label05 to label06 with label19;
        catch java.lang.InstantiationException from label08 to label09 with label19;
        catch java.lang.InstantiationException from label11 to label12 with label19;
        catch java.lang.InstantiationException from label13 to label14 with label19;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label18;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label18;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label18;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label18;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label18;
    }
    private void doUsage(java.io.PrintStream)
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        $r1 := @parameter0: java.io.PrintStream;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: dumpapp crash ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<command> [command-options]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: dumpapp crash ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("throw");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("       dumpapp crash ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kill");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("       dumpapp crash ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exit");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("dumpapp crash throw: Throw an uncaught exception (simulates a program crash)");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("    <Throwable>: Throwable class to use (default: java.lang.Error)");

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("dumpapp crash kill: Send a signal to this process (simulates the low memory killer)");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("    <SIGNAL>: Either signal name or number to send (default: 9)");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("              See `adb shell kill -l` for more information");

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("dumpapp crash exit: Invoke System.exit (simulates an abnormal Android exit strategy)");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("    <code>: Exit code (default: 0)");

        return;
    }
    private static transient java.lang.reflect.Constructor tryGetDeclaredConstructor(java.lang.Class, java.lang.Class[])
    {
        java.lang.Class r0;
        java.lang.Class[] r1;
        java.lang.NoSuchMethodException r2;
        java.lang.reflect.Constructor $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

     label1:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r1);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }
    public void dump(com.facebook.stetho.dumpapp.DumperContext) throws com.facebook.stetho.dumpapp.DumpException
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;
        com.facebook.stetho.dumpapp.DumperContext $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.io.PrintStream $r6;
        com.facebook.stetho.dumpapp.DumpUsageException $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        $r1 := @parameter0: com.facebook.stetho.dumpapp.DumperContext;

        $r2 = virtualinvoke $r1.<com.facebook.stetho.dumpapp.DumperContext: java.util.List getArgsAsList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.facebook.stetho.dumpapp.ArgsHelper: java.lang.String nextOptionalArg(java.util.Iterator,java.lang.String)>($r3, null);

        $r5 = "throw";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin: void doUncaughtException(java.util.Iterator)>($r3);

        return;

     label1:
        $r5 = "kill";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin: void doKill(com.facebook.stetho.dumpapp.DumperContext,java.util.Iterator)>($r1, $r3);

        return;

     label2:
        $r5 = "exit";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin: void doSystemExit(java.util.Iterator)>($r3);

        return;

     label3:
        $r6 = virtualinvoke $r1.<com.facebook.stetho.dumpapp.DumperContext: java.io.PrintStream getStdout()>();

        specialinvoke r0.<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin: void doUsage(java.io.PrintStream)>($r6);

        if $r4 == null goto label4;

        $r7 = new com.facebook.stetho.dumpapp.DumpUsageException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported command: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.facebook.stetho.dumpapp.DumpUsageException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label4:
        return;
    }
    public java.lang.String getName()
    {
        com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin r0;

        r0 := @this: com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin;

        return "crash";
    }
