com.facebook.stetho.server.http.LightHttpBody extends java.lang.Object
    public void <init>()
    {
        com.facebook.stetho.server.http.LightHttpBody r0;

        r0 := @this: com.facebook.stetho.server.http.LightHttpBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static com.facebook.stetho.server.http.LightHttpBody create(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.UnsupportedEncodingException r2;
        byte[] $r3;
        com.facebook.stetho.server.http.LightHttpBody $r4;
        java.lang.RuntimeException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r4 = staticinvoke <com.facebook.stetho.server.http.LightHttpBody: com.facebook.stetho.server.http.LightHttpBody create(byte[],java.lang.String)>($r3, $r1);

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
    public static com.facebook.stetho.server.http.LightHttpBody create(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1;
        com.facebook.stetho.server.http.LightHttpBody$1 $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 = new com.facebook.stetho.server.http.LightHttpBody$1;

        specialinvoke $r2.<com.facebook.stetho.server.http.LightHttpBody$1: void <init>(java.lang.String,byte[])>($r1, $r0);

        return $r2;
    }
public abstract int contentLength() { 
// no body
} 
public abstract java.lang.String contentType() { 
// no body
} 
public abstract void writeTo(java.io.OutputStream) throws java.io.IOException { 
// no body
} 
