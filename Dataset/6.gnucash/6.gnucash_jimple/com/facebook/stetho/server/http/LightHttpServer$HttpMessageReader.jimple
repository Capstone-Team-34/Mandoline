com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader extends java.lang.Object
private final java.lang.StringBuilder mBuffer
private final java.io.BufferedInputStream mIn
private final com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector mNewLineDetector
    public void <init>(java.io.BufferedInputStream)
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader r0;
        java.io.BufferedInputStream $r1;
        java.lang.StringBuilder $r2;
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector $r3;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader;

        $r1 := @parameter0: java.io.BufferedInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.lang.StringBuilder mBuffer> = $r2;

        $r3 = new com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector;

        specialinvoke $r3.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: void <init>(com.facebook.stetho.server.http.LightHttpServer$1)>(null);

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector mNewLineDetector> = $r3;

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.io.BufferedInputStream mIn> = $r1;

        return;
    }
    public java.lang.String readLine() throws java.io.IOException
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader r0;
        char c0;
        java.io.BufferedInputStream $r1;
        int $i1;
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader;

     label1:
        $r1 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.io.BufferedInputStream mIn>;

        $i1 = virtualinvoke $r1.<java.io.BufferedInputStream: int read()>();

        if $i1 >= 0 goto label2;

        return null;

     label2:
        c0 = (char) $i1;

        $r2 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector mNewLineDetector>;

        virtualinvoke $r2.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: void accept(char)>(c0);

        $r2 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector mNewLineDetector>;

        $i1 = virtualinvoke $r2.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state()>();

        lookupswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label3;
        };

     label3:
        goto label1;

     label4:
        $r3 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.lang.StringBuilder mBuffer>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        goto label1;

     label5:
        $r3 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.lang.StringBuilder mBuffer>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader: java.lang.StringBuilder mBuffer>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        return $r4;
    }
