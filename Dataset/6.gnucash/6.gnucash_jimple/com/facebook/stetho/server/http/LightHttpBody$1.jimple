com.facebook.stetho.server.http.LightHttpBody$1 extends com.facebook.stetho.server.http.LightHttpBody
final byte[] val$body
final java.lang.String val$contentType
    void <init>(java.lang.String, byte[])
    {
        com.facebook.stetho.server.http.LightHttpBody$1 r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: com.facebook.stetho.server.http.LightHttpBody$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        r0.<com.facebook.stetho.server.http.LightHttpBody$1: java.lang.String val$contentType> = $r1;

        r0.<com.facebook.stetho.server.http.LightHttpBody$1: byte[] val$body> = $r2;

        specialinvoke r0.<com.facebook.stetho.server.http.LightHttpBody: void <init>()>();

        return;
    }
    public int contentLength()
    {
        com.facebook.stetho.server.http.LightHttpBody$1 r0;
        byte[] $r1;
        int $i0;

        r0 := @this: com.facebook.stetho.server.http.LightHttpBody$1;

        $r1 = r0.<com.facebook.stetho.server.http.LightHttpBody$1: byte[] val$body>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public java.lang.String contentType()
    {
        com.facebook.stetho.server.http.LightHttpBody$1 r0;
        java.lang.String r1;

        r0 := @this: com.facebook.stetho.server.http.LightHttpBody$1;

        r1 = r0.<com.facebook.stetho.server.http.LightHttpBody$1: java.lang.String val$contentType>;

        return r1;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.facebook.stetho.server.http.LightHttpBody$1 r0;
        java.io.OutputStream $r1;
        byte[] $r2;

        r0 := @this: com.facebook.stetho.server.http.LightHttpBody$1;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<com.facebook.stetho.server.http.LightHttpBody$1: byte[] val$body>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }
