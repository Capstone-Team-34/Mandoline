com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector extends java.lang.Object
private static final int STATE_ON_CR
private static final int STATE_ON_CRLF
private static final int STATE_ON_OTHER
private int state
    private void <init>()
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector r0;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 1;

        return;
    }
    void <init>(com.facebook.stetho.server.http.LightHttpServer$1)
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector r0;
        com.facebook.stetho.server.http.LightHttpServer$1 $r1;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector;

        $r1 := @parameter0: com.facebook.stetho.server.http.LightHttpServer$1;

        specialinvoke r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: void <init>()>();

        return;
    }
    public void accept(char)
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector r0;
        char $c0;
        int $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector;

        $c0 := @parameter0: char;

        $i1 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state>;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state: ");

        $i1 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        if $c0 != 13 goto label7;

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 2;

        return;

     label3:
        if $c0 != 10 goto label4;

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 3;

        return;

     label4:
        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 1;

        return;

     label5:
        if $c0 != 13 goto label6;

        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 2;

        return;

     label6:
        r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state> = 1;

     label7:
        return;
    }
    public int state()
    {
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector r0;
        int i0;

        r0 := @this: com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector;

        i0 = r0.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageReader$NewLineDetector: int state>;

        return i0;
    }
