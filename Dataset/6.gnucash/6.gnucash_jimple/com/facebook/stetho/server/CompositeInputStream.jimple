com.facebook.stetho.server.CompositeInputStream extends java.io.InputStream
private int mCurrentIndex
private final java.io.InputStream[] mStreams
    public void <init>(java.io.InputStream[])
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        java.io.InputStream[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $r1 := @parameter0: java.io.InputStream[];

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 >= 2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Streams must be non-null and have more than 1 entry");

        throw $r2;

     label2:
        r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams> = $r1;

        r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex> = 0;

        return;
    }
    private void closeAll(int) throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0, i1, $i2;
        java.io.IOException r1, r2, r3;
        java.io.InputStream[] $r4;
        java.io.InputStream $r5;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $i0 := @parameter0: int;

        r3 = null;

        i1 = 0;

     label1:
        $r4 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $i2 = lengthof $r4;

        if i1 >= $i2 goto label7;

        $r4 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $r5 = $r4[i1];

     label2:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        r1 := @caughtexception;

        r2 = r3;

        if i1 == $i0 goto label5;

        if r3 != null goto label6;

     label5:
        r3 = r1;

     label6:
        if r2 == null goto label3;

        if r2 == r3 goto label3;

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.Throwable,java.lang.String)>(r2, "Suppressing exception");

        goto label3;

     label7:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
    private boolean tryMoveToNextStream()
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0, $i1;
        java.io.InputStream[] $r1;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $i0 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        $i0 = $i0 + 1;

        $r1 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $i0 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        $i0 = $i0 + 1;

        r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex> = $i0;

        return 1;

     label1:
        return 0;
    }
    public int available() throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0;
        java.io.InputStream[] $r1;
        java.io.InputStream $r2;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $r1 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $i0 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r2.<java.io.InputStream: int available()>();

        return $i0;
    }
    public void close() throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $i0 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        specialinvoke r0.<com.facebook.stetho.server.CompositeInputStream: void closeAll(int)>($i0);

        return;
    }
    public void mark(int)
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
    public boolean markSupported()
    {
        com.facebook.stetho.server.CompositeInputStream r0;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        return 0;
    }
    public int read() throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        int $i0;
        java.io.InputStream[] $r1;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

     label1:
        $r1 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $i0 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        $r2 = $r1[$i0];

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label2;

        $z0 = specialinvoke r0.<com.facebook.stetho.server.CompositeInputStream: boolean tryMoveToNextStream()>();

        if $z0 != 0 goto label1;

     label2:
        return $i0;
    }
    public int read(byte[]) throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        byte[] $r1;
        int $i0;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<com.facebook.stetho.server.CompositeInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.io.InputStream[] $r2;
        java.io.InputStream $r3;
        boolean $z0;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $r2 = r0.<com.facebook.stetho.server.CompositeInputStream: java.io.InputStream[] mStreams>;

        $i2 = r0.<com.facebook.stetho.server.CompositeInputStream: int mCurrentIndex>;

        $r3 = $r2[$i2];

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i2 != -1 goto label2;

        $z0 = specialinvoke r0.<com.facebook.stetho.server.CompositeInputStream: boolean tryMoveToNextStream()>();

        if $z0 != 0 goto label1;

     label2:
        return $i2;
    }
    public void reset() throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
    public long skip(long) throws java.io.IOException
    {
        com.facebook.stetho.server.CompositeInputStream r0;
        long $l0;
        byte[] r1;
        int $i1;

        r0 := @this: com.facebook.stetho.server.CompositeInputStream;

        $l0 := @parameter0: long;

        $i1 = (int) $l0;

        r1 = newarray (byte)[$i1];

        $i1 = virtualinvoke r0.<com.facebook.stetho.server.CompositeInputStream: int read(byte[])>(r1);

        if $i1 < 0 goto label1;

        $l0 = (long) $i1;

        return $l0;

     label1:
        return -1L;
    }
