com.facebook.stetho.server.ProtocolDetectingSocketHandler extends com.facebook.stetho.server.SecureSocketHandler
private static final int SENSING_BUFFER_SIZE
private final java.util.ArrayList mHandlers
    public void <init>(android.content.Context)
    {
        com.facebook.stetho.server.ProtocolDetectingSocketHandler r0;
        android.content.Context $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.facebook.stetho.server.ProtocolDetectingSocketHandler;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.facebook.stetho.server.SecureSocketHandler: void <init>(android.content.Context)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);

        r0.<com.facebook.stetho.server.ProtocolDetectingSocketHandler: java.util.ArrayList mHandlers> = $r2;

        return;
    }
    public void addHandler(com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher, com.facebook.stetho.server.SocketLikeHandler)
    {
        com.facebook.stetho.server.ProtocolDetectingSocketHandler r0;
        com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher $r1;
        com.facebook.stetho.server.SocketLikeHandler $r2;
        java.util.ArrayList $r3;
        com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo $r4;

        r0 := @this: com.facebook.stetho.server.ProtocolDetectingSocketHandler;

        $r1 := @parameter0: com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher;

        $r2 := @parameter1: com.facebook.stetho.server.SocketLikeHandler;

        $r3 = r0.<com.facebook.stetho.server.ProtocolDetectingSocketHandler: java.util.ArrayList mHandlers>;

        $r4 = new com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo;

        specialinvoke $r4.<com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo: void <init>(com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher,com.facebook.stetho.server.SocketLikeHandler,com.facebook.stetho.server.ProtocolDetectingSocketHandler$1)>($r1, $r2, null);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }
    protected void onSecured(android.net.LocalSocket) throws java.io.IOException
    {
        com.facebook.stetho.server.ProtocolDetectingSocketHandler r0;
        android.net.LocalSocket $r1;
        com.facebook.stetho.server.LeakyBufferedInputStream r2;
        com.facebook.stetho.server.SocketLike r3;
        java.io.InputStream $r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        int i0, $i1;
        java.lang.Object $r7;
        com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo r8;
        com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher $r9;
        com.facebook.stetho.server.SocketLikeHandler $r10;
        java.io.IOException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: com.facebook.stetho.server.ProtocolDetectingSocketHandler;

        $r1 := @parameter0: android.net.LocalSocket;

        r2 = new com.facebook.stetho.server.LeakyBufferedInputStream;

        $r4 = virtualinvoke $r1.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        specialinvoke r2.<com.facebook.stetho.server.LeakyBufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 256);

        $r5 = r0.<com.facebook.stetho.server.ProtocolDetectingSocketHandler: java.util.ArrayList mHandlers>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No handlers added");

        throw $r6;

     label1:
        i0 = 0;

        $r5 = r0.<com.facebook.stetho.server.ProtocolDetectingSocketHandler: java.util.ArrayList mHandlers>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label2:
        if i0 >= $i1 goto label4;

        $r5 = r0.<com.facebook.stetho.server.ProtocolDetectingSocketHandler: java.util.ArrayList mHandlers>;

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r8 = (com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo) $r7;

        virtualinvoke r2.<com.facebook.stetho.server.LeakyBufferedInputStream: void mark(int)>(256);

        $r9 = r8.<com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo: com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher magicMatcher>;

        $z0 = interfaceinvoke $r9.<com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher: boolean matches(java.io.InputStream)>(r2);

        virtualinvoke r2.<com.facebook.stetho.server.LeakyBufferedInputStream: void reset()>();

        if $z0 == 0 goto label3;

        r3 = new com.facebook.stetho.server.SocketLike;

        specialinvoke r3.<com.facebook.stetho.server.SocketLike: void <init>(android.net.LocalSocket,com.facebook.stetho.server.LeakyBufferedInputStream)>($r1, r2);

        $r10 = r8.<com.facebook.stetho.server.ProtocolDetectingSocketHandler$HandlerInfo: com.facebook.stetho.server.SocketLikeHandler handler>;

        interfaceinvoke $r10.<com.facebook.stetho.server.SocketLikeHandler: void onAccepted(com.facebook.stetho.server.SocketLike)>(r3);

        return;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No matching handler, firstByte=");

        i0 = virtualinvoke r2.<com.facebook.stetho.server.LeakyBufferedInputStream: int read()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r11;
    }
