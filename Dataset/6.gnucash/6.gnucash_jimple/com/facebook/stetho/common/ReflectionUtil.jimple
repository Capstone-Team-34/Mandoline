com.facebook.stetho.common.ReflectionUtil extends java.lang.Object
    private void <init>()
    {
        com.facebook.stetho.common.ReflectionUtil r0;

        r0 := @this: com.facebook.stetho.common.ReflectionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.Object getFieldValue(java.lang.reflect.Field, java.lang.Object)
    {
        java.lang.reflect.Field $r0;
        java.lang.Object $r1;
        java.lang.IllegalAccessException r2;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: java.lang.reflect.Field;

        $r1 := @parameter1: java.lang.Object;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r3;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }
    public static java.lang.Class tryGetClassForName(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static java.lang.reflect.Field tryGetDeclaredField(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String $r1;
        java.lang.NoSuchFieldException r2;
        java.lang.reflect.Field $r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = r0;

        staticinvoke <com.facebook.stetho.common.LogUtil: void d(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Could not retrieve %s field from %s", $r4);

        return null;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }
