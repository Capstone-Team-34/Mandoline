com.facebook.stetho.common.Util extends java.lang.Object
    public void <init>()
    {
        com.facebook.stetho.common.Util r0;

        r0 := @this: com.facebook.stetho.common.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void awaitUninterruptibly(java.util.concurrent.CountDownLatch)
    {
        java.util.concurrent.CountDownLatch $r0;
        java.lang.InterruptedException $r1;

        $r0 := @parameter0: java.util.concurrent.CountDownLatch;

     label1:
        virtualinvoke $r0.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
    public static void close(java.io.Closeable, boolean) throws java.io.IOException
    {
        java.io.Closeable $r0;
        boolean $z0;
        java.io.IOException r1;

        $r0 := @parameter0: java.io.Closeable;

        $z0 := @parameter1: boolean;

        if $r0 == null goto label5;

        if $z0 == 0 goto label4;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        staticinvoke <com.facebook.stetho.common.LogUtil: void e(java.lang.Throwable,java.lang.String)>(r1, "Hiding IOException because another is pending");

        return;

     label4:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public static void copy(java.io.InputStream, java.io.OutputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 := @parameter2: byte[];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 == -1 goto label2;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;

     label2:
        return;
    }
    public static java.lang.Object getUninterruptibly(java.util.concurrent.Future) throws java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Future r0;
        java.lang.Object $r1;
        java.lang.InterruptedException $r2;

        r0 := @parameter0: java.util.concurrent.Future;

     label1:
        $r1 = interfaceinvoke r0.<java.util.concurrent.Future: java.lang.Object get()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
    public static java.lang.Object getUninterruptibly(java.util.concurrent.Future, long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Future r0;
        long $l0, l1, $l2;
        java.util.concurrent.TimeUnit $r1;
        java.lang.InterruptedException r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.concurrent.Future;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

     label2:
        $r3 = interfaceinvoke r0.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

     label3:
        return $r3;

     label4:
        r2 := @caughtexception;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l1 - $l2;

        $l0 = $l0 - l1;

        goto label1;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }
    public static void joinUninterruptibly(java.lang.Thread)
    {
        java.lang.Thread $r0;
        java.lang.InterruptedException $r1;

        $r0 := @parameter0: java.lang.Thread;

     label1:
        virtualinvoke $r0.<java.lang.Thread: void join()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
    public static java.lang.String readAsUTF8(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream r1;
        java.lang.String $r2;
        byte[] $r3;

        $r0 := @parameter0: java.io.InputStream;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = newarray (byte)[1024];

        staticinvoke <com.facebook.stetho.common.Util: void copy(java.io.InputStream,java.io.OutputStream,byte[])>($r0, r1, $r3);

        $r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        return $r2;
    }
    public static void sleepUninterruptibly(long)
    {
        long $l0, l2, $l3;
        java.lang.InterruptedException r0;
        byte $b1;

        $l0 := @parameter0: long;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label2:
        return;

     label3:
        r0 := @caughtexception;

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = l2 - $l3;

        $l0 = $l0 - l2;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
    public static void throwIf(boolean)
    {
        boolean $z0;
        java.lang.IllegalStateException $r0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;

     label1:
        return;
    }
    public static void throwIfNot(boolean)
    {
        boolean $z0;
        java.lang.IllegalStateException $r0;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;

     label1:
        return;
    }
    public static transient void throwIfNot(boolean, java.lang.String, java.lang.Object[])
    {
        boolean $z0;
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.IllegalStateException $r2;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Object[];

        if $z0 != 0 goto label1;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r0, $r1);

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label1:
        return;
    }
    public static void throwIfNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalStateException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        return;
    }
    public static java.lang.Object throwIfNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;

     label1:
        return r0;
    }
    public static void throwIfNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r0);

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r1);

        return;
    }
    public static void throwIfNull(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r0);

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r1);

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r2);

        return;
    }
