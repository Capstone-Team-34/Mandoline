com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory extends java.lang.Object implements com.facebook.stetho.inspector.elements.DocumentProviderFactory com.facebook.stetho.common.ThreadBound
private final android.app.Application mApplication
private final android.os.Handler mHandler
    public void <init>(android.app.Application)
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        android.app.Application $r1;
        java.lang.Object $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 := @parameter0: android.app.Application;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $r1 = (android.app.Application) $r2;

        r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.app.Application mApplication> = $r1;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler> = $r3;

        return;
    }
    public boolean checkThreadAccess()
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        boolean $z0;
        android.os.Handler $r1;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        $z0 = staticinvoke <com.facebook.stetho.common.android.HandlerUtil: boolean checkThreadAccess(android.os.Handler)>($r1);

        return $z0;
    }
    public com.facebook.stetho.inspector.elements.DocumentProvider create()
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider $r1;
        android.app.Application $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 = new com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider;

        $r2 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.app.Application mApplication>;

        specialinvoke $r1.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider: void <init>(android.app.Application,com.facebook.stetho.common.ThreadBound)>($r2, r0);

        return $r1;
    }
    public java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        com.facebook.stetho.common.UncheckedCallable r1;
        java.lang.Object $r2;
        android.os.Handler $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        r1 := @parameter0: com.facebook.stetho.common.UncheckedCallable;

        $r3 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        $r2 = staticinvoke <com.facebook.stetho.common.android.HandlerUtil: java.lang.Object postAndWait(android.os.Handler,com.facebook.stetho.common.UncheckedCallable)>($r3, r1);

        return $r2;
    }
    public void postAndWait(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        staticinvoke <com.facebook.stetho.common.android.HandlerUtil: void postAndWait(android.os.Handler,java.lang.Runnable)>($r2, $r1);

        return;
    }
    public void postDelayed(java.lang.Runnable, long)
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        java.lang.Runnable $r1;
        long $l0;
        boolean $z0;
        android.os.Handler $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r2 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Handler.postDelayed() returned false");

        throw $r3;

     label1:
        return;
    }
    public void removeCallbacks(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }
    public void verifyThreadAccess()
    {
        com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory r0;
        android.os.Handler $r1;

        r0 := @this: com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory;

        $r1 = r0.<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory: android.os.Handler mHandler>;

        staticinvoke <com.facebook.stetho.common.android.HandlerUtil: void verifyThreadAccess(android.os.Handler)>($r1);

        return;
    }
