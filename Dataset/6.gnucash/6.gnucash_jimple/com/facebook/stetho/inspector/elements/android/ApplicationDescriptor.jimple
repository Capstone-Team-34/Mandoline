com.facebook.stetho.inspector.elements.android.ApplicationDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor
private final com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker
private final java.util.Map mElementToContextMap
    void <init>()
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        java.util.IdentityHashMap $r1;
        java.util.Map $r2;
        com.facebook.stetho.inspector.elements.android.ActivityTracker $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        specialinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void <init>()>();

        $r1 = new java.util.IdentityHashMap;

        specialinvoke $r1.<java.util.IdentityHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: java.util.Map mElementToContextMap> = $r2;

        $r3 = staticinvoke <com.facebook.stetho.inspector.elements.android.ActivityTracker: com.facebook.stetho.inspector.elements.android.ActivityTracker get()>();

        r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker> = $r3;

        return;
    }
    static com.facebook.stetho.inspector.elements.android.ActivityTracker access$000(com.facebook.stetho.inspector.elements.android.ApplicationDescriptor)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor $r0;
        com.facebook.stetho.inspector.elements.android.ActivityTracker r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        r1 = $r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker>;

        return r1;
    }
    private com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext getContext(android.app.Application)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        android.app.Application $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext $r4;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: android.app.Application;

        $r3 = r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: java.util.Map mElementToContextMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext) $r2;

        return $r4;
    }
    protected void onGetChildren(android.app.Application, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        android.app.Application $r1;
        com.facebook.stetho.common.Accumulator r2;
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: android.app.Application;

        r2 := @parameter1: com.facebook.stetho.common.Accumulator;

        $r3 = specialinvoke r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext getContext(android.app.Application)>($r1);

        $r4 = virtualinvoke $r3.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext: java.util.List getActivitiesList()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        interfaceinvoke r2.<com.facebook.stetho.common.Accumulator: void store(java.lang.Object)>($r5);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    protected volatile void onGetChildren(java.lang.Object, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        com.facebook.stetho.common.Accumulator $r1;
        java.lang.Object $r2;
        android.app.Application $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.facebook.stetho.common.Accumulator;

        $r3 = (android.app.Application) $r2;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: void onGetChildren(android.app.Application,com.facebook.stetho.common.Accumulator)>($r3, $r1);

        return;
    }
    protected com.facebook.stetho.inspector.elements.NodeType onGetNodeType(android.app.Application)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        android.app.Application $r1;
        com.facebook.stetho.inspector.elements.NodeType r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: android.app.Application;

        r2 = <com.facebook.stetho.inspector.elements.NodeType: com.facebook.stetho.inspector.elements.NodeType ELEMENT_NODE>;

        return r2;
    }
    protected volatile com.facebook.stetho.inspector.elements.NodeType onGetNodeType(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        com.facebook.stetho.inspector.elements.NodeType $r1;
        java.lang.Object $r2;
        android.app.Application $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (android.app.Application) $r2;

        $r1 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: com.facebook.stetho.inspector.elements.NodeType onGetNodeType(android.app.Application)>($r3);

        return $r1;
    }
    protected void onHook(android.app.Application)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        android.app.Application $r1;
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext r2;
        java.util.Map $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: android.app.Application;

        r2 = new com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext;

        specialinvoke r2.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext: void <init>(com.facebook.stetho.inspector.elements.android.ApplicationDescriptor)>(r0);

        virtualinvoke r2.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext: void hook(android.app.Application)>($r1);

        $r3 = r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: java.util.Map mElementToContextMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

        return;
    }
    protected volatile void onHook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        java.lang.Object $r1;
        android.app.Application $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.app.Application) $r1;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: void onHook(android.app.Application)>($r2);

        return;
    }
    protected void onUnhook(android.app.Application)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        android.app.Application $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext r4;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: android.app.Application;

        $r2 = r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: java.util.Map mElementToContextMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        r4 = (com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext) $r3;

        virtualinvoke r4.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor$ElementContext: void unhook()>();

        return;
    }
    protected volatile void onUnhook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.android.ApplicationDescriptor r0;
        java.lang.Object $r1;
        android.app.Application $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.app.Application) $r1;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor: void onUnhook(android.app.Application)>($r2);

        return;
    }
