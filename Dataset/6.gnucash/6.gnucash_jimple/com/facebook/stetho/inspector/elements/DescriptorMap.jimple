com.facebook.stetho.inspector.elements.DescriptorMap extends java.lang.Object
private com.facebook.stetho.inspector.elements.Descriptor$Host mHost
private boolean mIsInitializing
private final java.util.Map mMap
    public void <init>()
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.IdentityHashMap;

        specialinvoke $r1.<java.util.IdentityHashMap: void <init>()>();

        r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap> = $r1;

        return;
    }
    private com.facebook.stetho.inspector.elements.Descriptor getImpl(java.lang.Class)
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        java.lang.Class r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.facebook.stetho.inspector.elements.Descriptor r4;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        r1 := @parameter0: java.lang.Class;

     label1:
        if r1 == null goto label3;

        $r2 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.facebook.stetho.inspector.elements.Descriptor) $r3;

        if r4 == null goto label2;

        return r4;

     label2:
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return null;
    }
    public com.facebook.stetho.inspector.elements.DescriptorMap beginInit()
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        boolean $z0;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        $z0 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIf(boolean)>($z0);

        r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing> = 1;

        return r0;
    }
    public com.facebook.stetho.inspector.elements.DescriptorMap endInit()
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        boolean $z0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.lang.Class r6;
        com.facebook.stetho.inspector.elements.Descriptor r7, $r9;
        com.facebook.stetho.inspector.elements.ChainedDescriptor r8;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        $z0 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIfNot(boolean)>($z0);

        $r1 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing> = 0;

        $r2 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Class) $r5;

        $r2 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (com.facebook.stetho.inspector.elements.Descriptor) $r5;

        $z0 = r7 instanceof com.facebook.stetho.inspector.elements.ChainedDescriptor;

        if $z0 == 0 goto label2;

        r8 = (com.facebook.stetho.inspector.elements.ChainedDescriptor) r7;

        r6 = virtualinvoke r6.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r9 = specialinvoke r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor getImpl(java.lang.Class)>(r6);

        interfaceinvoke r8.<com.facebook.stetho.inspector.elements.ChainedDescriptor: void setSuper(com.facebook.stetho.inspector.elements.Descriptor)>($r9);

     label2:
        $r1 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        virtualinvoke r7.<com.facebook.stetho.inspector.elements.Descriptor: void initialize(com.facebook.stetho.inspector.elements.Descriptor$Host)>($r1);

        goto label1;

     label3:
        return r0;
    }
    public com.facebook.stetho.inspector.elements.Descriptor get(java.lang.Class)
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        java.lang.Class r1;
        com.facebook.stetho.inspector.elements.Descriptor $r2;
        boolean $z0;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r1);

        $z0 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIf(boolean)>($z0);

        $r2 = specialinvoke r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor getImpl(java.lang.Class)>(r1);

        return $r2;
    }
    public com.facebook.stetho.inspector.elements.DescriptorMap register(java.lang.Class, com.facebook.stetho.inspector.elements.Descriptor)
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        java.lang.Class r1;
        com.facebook.stetho.inspector.elements.Descriptor $r2;
        boolean $z0;
        java.util.Map $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.Descriptor;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>(r1);

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r2);

        $z0 = virtualinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor: boolean isInitialized()>();

        staticinvoke <com.facebook.stetho.common.Util: void throwIf(boolean)>($z0);

        $z0 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIfNot(boolean)>($z0);

        $r3 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsValue(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;

     label2:
        $r3 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: java.util.Map mMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return r0;
    }
    public com.facebook.stetho.inspector.elements.DescriptorMap setHost(com.facebook.stetho.inspector.elements.Descriptor$Host)
    {
        com.facebook.stetho.inspector.elements.DescriptorMap r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1, $r2;
        boolean $z0;

        r0 := @this: com.facebook.stetho.inspector.elements.DescriptorMap;

        $r1 := @parameter0: com.facebook.stetho.inspector.elements.Descriptor$Host;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $z0 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: boolean mIsInitializing>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIfNot(boolean)>($z0);

        $r2 = r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIfNotNull(java.lang.Object)>($r2);

        r0.<com.facebook.stetho.inspector.elements.DescriptorMap: com.facebook.stetho.inspector.elements.Descriptor$Host mHost> = $r1;

        return r0;
    }
