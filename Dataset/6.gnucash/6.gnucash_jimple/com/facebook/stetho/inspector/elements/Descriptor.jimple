com.facebook.stetho.inspector.elements.Descriptor extends java.lang.Object implements com.facebook.stetho.inspector.elements.NodeDescriptor
private com.facebook.stetho.inspector.elements.Descriptor$Host mHost
    protected void <init>()
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    protected static java.util.Map parseSetAttributesAsTextArg(java.lang.String)
    {
        java.lang.String $r0, r3, r4;
        java.lang.StringBuilder r1;
        java.util.HashMap r2;
        boolean z0;
        int i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        r3 = "";

        r4 = "";

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        z0 = 0;

        i0 = 0;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if i0 >= $i1 goto label8;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        if $c2 != 61 goto label3;

        r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if $c2 != 34 goto label6;

        if z0 == 0 goto label4;

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>(0);

     label4:
        if z0 != 0 goto label5;

        z0 = 1;

        goto label2;

     label5:
        z0 = 0;

        goto label2;

     label6:
        if $c2 != 32 goto label7;

        if z0 != 0 goto label7;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);

        goto label2;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label8:
        z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if z0 != 0 goto label9;

        z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if z0 != 0 goto label9;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);

     label9:
        return r2;
    }
    public final boolean checkThreadAccess()
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1;
        boolean $z0;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        $z0 = interfaceinvoke $r1.<com.facebook.stetho.inspector.elements.Descriptor$Host: boolean checkThreadAccess()>();

        return $z0;
    }
    protected final com.facebook.stetho.inspector.elements.Descriptor$Host getHost()
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host r1;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        r1 = r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        return r1;
    }
    final void initialize(com.facebook.stetho.inspector.elements.Descriptor$Host)
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 := @parameter0: com.facebook.stetho.inspector.elements.Descriptor$Host;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $r2 = r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        staticinvoke <com.facebook.stetho.common.Util: void throwIfNotNull(java.lang.Object)>($r2);

        r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host mHost> = $r1;

        return;
    }
    final boolean isInitialized()
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 = r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host mHost>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public final java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.common.UncheckedCallable r1;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r2;
        java.lang.Object $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        r1 := @parameter0: com.facebook.stetho.common.UncheckedCallable;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        $r3 = interfaceinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor$Host: java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)>(r1);

        return $r3;
    }
    public final void postAndWait(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        java.lang.Runnable $r1;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        interfaceinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor$Host: void postAndWait(java.lang.Runnable)>($r1);

        return;
    }
    public final void postDelayed(java.lang.Runnable, long)
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        java.lang.Runnable $r1;
        long $l0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        interfaceinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor$Host: void postDelayed(java.lang.Runnable,long)>($r1, $l0);

        return;
    }
    public final void removeCallbacks(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        java.lang.Runnable $r1;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        interfaceinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor$Host: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }
    public final void verifyThreadAccess()
    {
        com.facebook.stetho.inspector.elements.Descriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor$Host $r1;

        r0 := @this: com.facebook.stetho.inspector.elements.Descriptor;

        $r1 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.Descriptor$Host getHost()>();

        interfaceinvoke $r1.<com.facebook.stetho.inspector.elements.Descriptor$Host: void verifyThreadAccess()>();

        return;
    }
