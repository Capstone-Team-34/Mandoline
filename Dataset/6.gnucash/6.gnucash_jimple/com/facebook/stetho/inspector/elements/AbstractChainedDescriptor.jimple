com.facebook.stetho.inspector.elements.AbstractChainedDescriptor extends com.facebook.stetho.inspector.elements.Descriptor implements com.facebook.stetho.inspector.elements.ChainedDescriptor
private com.facebook.stetho.inspector.elements.Descriptor mSuper
    public void <init>()
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        specialinvoke r0.<com.facebook.stetho.inspector.elements.Descriptor: void <init>()>();

        return;
    }
    public final void getAttributes(java.lang.Object, com.facebook.stetho.inspector.elements.AttributeAccumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.AttributeAccumulator $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.AttributeAccumulator;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: void getAttributes(java.lang.Object,com.facebook.stetho.inspector.elements.AttributeAccumulator)>($r1, $r2);

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onGetAttributes(java.lang.Object,com.facebook.stetho.inspector.elements.AttributeAccumulator)>($r1, $r2);

        return;
    }
    public final void getChildren(java.lang.Object, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.common.Accumulator r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.facebook.stetho.common.Accumulator;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: void getChildren(java.lang.Object,com.facebook.stetho.common.Accumulator)>($r1, r2);

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onGetChildren(java.lang.Object,com.facebook.stetho.common.Accumulator)>($r1, r2);

        return;
    }
    public final java.lang.String getLocalName(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: java.lang.String onGetLocalName(java.lang.Object)>($r1);

        return $r2;
    }
    public final java.lang.String getNodeName(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: java.lang.String onGetNodeName(java.lang.Object)>($r1);

        return $r2;
    }
    public final com.facebook.stetho.inspector.elements.NodeType getNodeType(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.NodeType $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.NodeType onGetNodeType(java.lang.Object)>($r1);

        return $r2;
    }
    public final java.lang.String getNodeValue(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: java.lang.String onGetNodeValue(java.lang.Object)>($r1);

        return $r2;
    }
    public final void getStyles(java.lang.Object, com.facebook.stetho.inspector.elements.StyleAccumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.StyleAccumulator $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.StyleAccumulator;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: void getStyles(java.lang.Object,com.facebook.stetho.inspector.elements.StyleAccumulator)>($r1, $r2);

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onGetStyles(java.lang.Object,com.facebook.stetho.inspector.elements.StyleAccumulator)>($r1, $r2);

        return;
    }
    final com.facebook.stetho.inspector.elements.Descriptor getSuper()
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor r1;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        return r1;
    }
    public final void hook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.Descriptor $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void verifyThreadAccess()>();

        $r2 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor: void hook(java.lang.Object)>($r1);

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onHook(java.lang.Object)>($r1);

        return;
    }
    protected void onGetAttributes(java.lang.Object, com.facebook.stetho.inspector.elements.AttributeAccumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        com.facebook.stetho.inspector.elements.AttributeAccumulator $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.AttributeAccumulator;

        return;
    }
    protected void onGetChildren(java.lang.Object, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        com.facebook.stetho.common.Accumulator r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.facebook.stetho.common.Accumulator;

        return;
    }
    protected java.lang.String onGetLocalName(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        $r2 = virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: java.lang.String getLocalName(java.lang.Object)>(r1);

        return $r2;
    }
    protected java.lang.String onGetNodeName(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        $r2 = virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: java.lang.String getNodeName(java.lang.Object)>(r1);

        return $r2;
    }
    protected com.facebook.stetho.inspector.elements.NodeType onGetNodeType(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        com.facebook.stetho.inspector.elements.NodeType $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        $r2 = virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: com.facebook.stetho.inspector.elements.NodeType getNodeType(java.lang.Object)>(r1);

        return $r2;
    }
    public java.lang.String onGetNodeValue(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        $r2 = virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: java.lang.String getNodeValue(java.lang.Object)>(r1);

        return $r2;
    }
    protected void onGetStyles(java.lang.Object, com.facebook.stetho.inspector.elements.StyleAccumulator)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        com.facebook.stetho.inspector.elements.StyleAccumulator $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.StyleAccumulator;

        return;
    }
    protected void onHook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        return;
    }
    protected void onSetAttributesAsText(java.lang.Object, java.lang.String)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;
        java.lang.String $r2;
        com.facebook.stetho.inspector.elements.Descriptor $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Descriptor: void setAttributesAsText(java.lang.Object,java.lang.String)>(r1, $r2);

        return;
    }
    protected void onUnhook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object r1;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        r1 := @parameter0: java.lang.Object;

        return;
    }
    public final void setAttributesAsText(java.lang.Object, java.lang.String)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onSetAttributesAsText(java.lang.Object,java.lang.String)>($r1, $r2);

        return;
    }
    public void setSuper(com.facebook.stetho.inspector.elements.Descriptor)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        com.facebook.stetho.inspector.elements.Descriptor $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: com.facebook.stetho.inspector.elements.Descriptor;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $r2 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        if $r1 == $r2 goto label2;

        $r2 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper> = $r1;

     label2:
        return;
    }
    public final void unhook(java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.AbstractChainedDescriptor r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.Descriptor $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.AbstractChainedDescriptor;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void verifyThreadAccess()>();

        virtualinvoke r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: void onUnhook(java.lang.Object)>($r1);

        $r2 = r0.<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor: com.facebook.stetho.inspector.elements.Descriptor mSuper>;

        virtualinvoke $r2.<com.facebook.stetho.inspector.elements.Descriptor: void unhook(java.lang.Object)>($r1);

        return;
    }
