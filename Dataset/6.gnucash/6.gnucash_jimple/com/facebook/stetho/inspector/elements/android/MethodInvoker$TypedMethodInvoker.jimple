com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker extends java.lang.Object
private final java.lang.Class mArgType
    void <init>(java.lang.Class)
    {
        com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker r0;
        java.lang.Class r1;

        r0 := @this: com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker: java.lang.Class mArgType> = r1;

        return;
    }
abstract java.lang.Object convertArgument(java.lang.String) { 
// no body
} 
    boolean invoke(java.lang.Object, java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker r0;
        java.lang.Object $r1, $r9;
        java.lang.String $r2, $r3;
        java.lang.Class $r4, $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.reflect.InvocationTargetException r10;
        java.lang.StringBuilder $r11;
        java.lang.IllegalAccessException r12;
        java.lang.IllegalArgumentException r13;
        java.lang.NoSuchMethodException $r14;

        r0 := @this: com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

     label01:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r6 = newarray (java.lang.Class)[1];

        $r4 = r0.<com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker: java.lang.Class mArgType>;

        $r6[0] = $r4;

     label03:
        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r6);

     label04:
        $r8 = newarray (java.lang.Object)[1];

     label05:
        $r9 = virtualinvoke r0.<com.facebook.stetho.inspector.elements.android.MethodInvoker$TypedMethodInvoker: java.lang.Object convertArgument(java.lang.String)>($r3);

     label06:
        $r8[0] = $r9;

     label07:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r8);

     label08:
        return 1;

     label09:
        r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvocationTargetException: ");

        $r2 = virtualinvoke r10.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>($r2);

     label10:
        return 0;

     label11:
        r12 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException: ");

        $r2 = virtualinvoke r12.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>($r2);

        goto label10;

     label12:
        r13 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalArgumentException: ");

        $r2 = virtualinvoke r13.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>($r2);

        goto label10;

     label13:
        $r14 := @caughtexception;

        goto label10;

        catch java.lang.NoSuchMethodException from label01 to label02 with label13;
        catch java.lang.NoSuchMethodException from label03 to label04 with label13;
        catch java.lang.NoSuchMethodException from label05 to label06 with label13;
        catch java.lang.NoSuchMethodException from label07 to label08 with label13;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label01 to label02 with label12;
        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label05 to label06 with label12;
        catch java.lang.IllegalArgumentException from label07 to label08 with label12;
    }
