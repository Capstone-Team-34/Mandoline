com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder extends java.lang.Object
private java.util.HashSet mCachedNotNewChildrenSet
private final java.util.Map mElementToInfoChangesMap
private final java.util.HashSet mRootElementChanges
final com.facebook.stetho.inspector.elements.ShadowDocument this$0
    public void <init>(com.facebook.stetho.inspector.elements.ShadowDocument)
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        com.facebook.stetho.inspector.elements.ShadowDocument $r1;
        java.util.LinkedHashMap $r2;
        java.util.HashSet $r3;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        $r1 := @parameter0: com.facebook.stetho.inspector.elements.ShadowDocument;

        r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mRootElementChanges> = $r3;

        return;
    }
    private java.util.HashSet acquireNotNewChildrenHashSet()
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        java.util.HashSet r1;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        r1 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mCachedNotNewChildrenSet>;

        if r1 != null goto label1;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label1:
        r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mCachedNotNewChildrenSet> = null;

        return r1;
    }
    private void releaseNotNewChildrenHashSet(java.util.HashSet)
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        java.util.HashSet r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        r1 := @parameter0: java.util.HashSet;

        virtualinvoke r1.<java.util.HashSet: void clear()>();

        $r2 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mCachedNotNewChildrenSet>;

        if $r2 != null goto label1;

        r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mCachedNotNewChildrenSet> = r1;

     label1:
        return;
    }
    private void setElementParent(java.lang.Object, java.lang.Object)
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        java.lang.Object $r1, $r2, $r6;
        com.facebook.stetho.inspector.elements.ElementInfo r3, r9;
        java.util.List $r4, $r10;
        java.util.Map $r5;
        com.facebook.stetho.inspector.elements.ShadowDocument $r7;
        java.util.IdentityHashMap $r8;
        boolean $z0;
        java.util.HashSet $r11;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r5 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (com.facebook.stetho.inspector.elements.ElementInfo) $r6;

        if r3 == null goto label1;

        $r6 = r3.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r2 != $r6 goto label1;

        return;

     label1:
        $r7 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0>;

        $r8 = staticinvoke <com.facebook.stetho.inspector.elements.ShadowDocument: java.util.IdentityHashMap access$000(com.facebook.stetho.inspector.elements.ShadowDocument)>($r7);

        $r6 = virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r9 = (com.facebook.stetho.inspector.elements.ElementInfo) $r6;

        if r3 != null goto label2;

        if r9 == null goto label2;

        $r6 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r2 == $r6 goto label8;

     label2:
        if r3 == null goto label3;

        if r9 == null goto label3;

        $r6 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r2 != $r6 goto label3;

        $r10 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r4 = r3.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $z0 = staticinvoke <com.facebook.stetho.common.ListUtil: boolean identityEquals(java.util.List,java.util.List)>($r10, $r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        if $r2 != null goto label8;

        $r11 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mRootElementChanges>;

        virtualinvoke $r11.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        return;

     label3:
        if r3 == null goto label5;

        $r4 = r3.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

     label4:
        r3 = new com.facebook.stetho.inspector.elements.ElementInfo;

        specialinvoke r3.<com.facebook.stetho.inspector.elements.ElementInfo: void <init>(java.lang.Object,java.lang.Object,java.util.List)>($r1, $r2, $r4);

        $r5 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r3);

        if $r2 != null goto label7;

        $r11 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mRootElementChanges>;

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        return;

     label5:
        if r9 == null goto label6;

        $r4 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        goto label4;

     label6:
        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label4;

     label7:
        $r11 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mRootElementChanges>;

        virtualinvoke $r11.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label8:
        return;
    }
    public com.facebook.stetho.inspector.elements.ShadowDocument$Update build()
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        com.facebook.stetho.inspector.elements.ShadowDocument$Update $r1;
        com.facebook.stetho.inspector.elements.ShadowDocument $r2;
        java.util.Map $r3;
        java.util.HashSet $r4;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        $r1 = new com.facebook.stetho.inspector.elements.ShadowDocument$Update;

        $r2 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0>;

        $r3 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        $r4 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet mRootElementChanges>;

        specialinvoke $r1.<com.facebook.stetho.inspector.elements.ShadowDocument$Update: void <init>(com.facebook.stetho.inspector.elements.ShadowDocument,java.util.Map,java.util.Set)>($r2, $r3, $r4);

        return $r1;
    }
    public void setElementChildren(java.lang.Object, java.util.List)
    {
        com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder r0;
        java.lang.Object $r1, $r4, $r10;
        java.util.List r2, $r6;
        java.util.Map $r3;
        com.facebook.stetho.inspector.elements.ElementInfo r5, r9, r11;
        boolean $z0;
        com.facebook.stetho.inspector.elements.ShadowDocument $r7;
        java.util.IdentityHashMap $r8;
        java.util.HashSet $r12;
        int i0, $i1;
        java.util.Iterator $r13;

        r0 := @this: com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder;

        $r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (com.facebook.stetho.inspector.elements.ElementInfo) $r4;

        if r5 == null goto label01;

        $r6 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $z0 = staticinvoke <com.facebook.stetho.common.ListUtil: boolean identityEquals(java.util.List,java.util.List)>(r2, $r6);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0>;

        $r8 = staticinvoke <com.facebook.stetho.inspector.elements.ShadowDocument: java.util.IdentityHashMap access$000(com.facebook.stetho.inspector.elements.ShadowDocument)>($r7);

        $r4 = virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r9 = (com.facebook.stetho.inspector.elements.ElementInfo) $r4;

        if r5 != null goto label02;

        if r9 == null goto label02;

        $r6 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $z0 = staticinvoke <com.facebook.stetho.common.ListUtil: boolean identityEquals(java.util.List,java.util.List)>(r2, $r6);

        if $z0 != 0 goto label17;

     label02:
        if r5 == null goto label05;

        if r9 == null goto label05;

        $r4 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        $r10 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r4 != $r10 goto label05;

        $r6 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $z0 = staticinvoke <com.facebook.stetho.common.ListUtil: boolean identityEquals(java.util.List,java.util.List)>(r2, $r6);

        if $z0 == 0 goto label05;

        $r7 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0>;

        $r8 = staticinvoke <com.facebook.stetho.inspector.elements.ShadowDocument: java.util.IdentityHashMap access$000(com.facebook.stetho.inspector.elements.ShadowDocument)>($r7);

        $r4 = virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r11 = (com.facebook.stetho.inspector.elements.ElementInfo) $r4;

        $r3 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label03:
        $r12 = specialinvoke r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.HashSet acquireNotNewChildrenHashSet()>();

        if r9 == null goto label09;

        r2 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r6 = r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        if r2 == $r6 goto label09;

        i0 = 0;

        r2 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label04:
        if i0 >= $i1 goto label09;

        r2 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label04;

     label05:
        if r5 == null goto label07;

        $r4 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

     label06:
        r11 = new com.facebook.stetho.inspector.elements.ElementInfo;

        specialinvoke r11.<com.facebook.stetho.inspector.elements.ElementInfo: void <init>(java.lang.Object,java.lang.Object,java.util.List)>($r1, $r4, r2);

        $r3 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r11);

        goto label03;

     label07:
        if r9 == null goto label08;

        $r4 = r9.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        goto label06;

     label08:
        $r4 = null;

        goto label06;

     label09:
        if r5 == null goto label11;

        r2 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r6 = r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        if r2 == $r6 goto label11;

        i0 = 0;

        r2 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label10:
        if i0 >= $i1 goto label11;

        r2 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label10;

     label11:
        i0 = 0;

        r2 = r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label12:
        if i0 >= $i1 goto label13;

        r2 = r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        specialinvoke r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: void setElementParent(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r12.<java.util.HashSet: boolean remove(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label12;

     label13:
        $r13 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r4 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r3 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: java.util.Map mElementToInfoChangesMap>;

        $r10 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r5 = (com.facebook.stetho.inspector.elements.ElementInfo) $r10;

        if r5 == null goto label15;

        $r10 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r10 != $r1 goto label14;

     label15:
        $r7 = r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: com.facebook.stetho.inspector.elements.ShadowDocument this$0>;

        $r8 = staticinvoke <com.facebook.stetho.inspector.elements.ShadowDocument: java.util.IdentityHashMap access$000(com.facebook.stetho.inspector.elements.ShadowDocument)>($r7);

        $r10 = virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r4);

        r5 = (com.facebook.stetho.inspector.elements.ElementInfo) $r10;

        if r5 == null goto label14;

        $r10 = r5.<com.facebook.stetho.inspector.elements.ElementInfo: java.lang.Object parentElement>;

        if $r10 != $r1 goto label14;

        specialinvoke r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: void setElementParent(java.lang.Object,java.lang.Object)>($r4, null);

        goto label14;

     label16:
        specialinvoke r0.<com.facebook.stetho.inspector.elements.ShadowDocument$UpdateBuilder: void releaseNotNewChildrenHashSet(java.util.HashSet)>($r12);

     label17:
        return;
    }
