com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver extends com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver
private static final java.lang.String sDatabaseName
private final com.facebook.stetho.inspector.database.ContentProviderSchema[] mContentProviderSchemas
private java.util.List mDatabaseNames
private java.util.List mTableNames
    public transient void <init>(android.content.Context, com.facebook.stetho.inspector.database.ContentProviderSchema[])
    {
        com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver r0;
        android.content.Context $r1;
        com.facebook.stetho.inspector.database.ContentProviderSchema[] $r2;

        r0 := @this: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.facebook.stetho.inspector.database.ContentProviderSchema[];

        specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: void <init>(android.content.Context)>($r1);

        r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: com.facebook.stetho.inspector.database.ContentProviderSchema[] mContentProviderSchemas> = $r2;

        return;
    }
    private java.lang.String fetchTableName(java.lang.String)
    {
        com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver r0;
        java.lang.String $r1, r5;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label1;

        return r5;

     label2:
        return "";
    }
    public com.facebook.stetho.inspector.protocol.module.Database$ExecuteSQLResponse executeSQL(java.lang.String, java.lang.String, com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver$ExecuteResultHandler) throws android.database.sqlite.SQLiteException
    {
        com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver r0;
        java.lang.String $r1, $r2;
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver$ExecuteResultHandler r3;
        com.facebook.stetho.inspector.database.ContentProviderSchema r4;
        java.util.List $r5;
        int $i0;
        com.facebook.stetho.inspector.database.ContentProviderSchema[] $r6;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        android.net.Uri $r9;
        java.lang.String[] $r10;
        android.database.Cursor $r11;
        java.lang.Object $r12;
        com.facebook.stetho.inspector.protocol.module.Database$ExecuteSQLResponse $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver$ExecuteResultHandler;

        $r1 = specialinvoke r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.lang.String fetchTableName(java.lang.String)>($r2);

        $r5 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames>;

        $i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>($r1);

        $r6 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: com.facebook.stetho.inspector.database.ContentProviderSchema[] mContentProviderSchemas>;

        r4 = $r6[$i0];

        $r7 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke r4.<com.facebook.stetho.inspector.database.ContentProviderSchema: android.net.Uri getUri()>();

        $r10 = virtualinvoke r4.<com.facebook.stetho.inspector.database.ContentProviderSchema: java.lang.String[] getProjection()>();

        $r11 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r10, null, null, null);

     label1:
        $r12 = interfaceinvoke r3.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver$ExecuteResultHandler: java.lang.Object handleSelect(android.database.Cursor)>($r11);

        $r13 = (com.facebook.stetho.inspector.protocol.module.Database$ExecuteSQLResponse) $r12;

     label2:
        interfaceinvoke $r11.<android.database.Cursor: void close()>();

        return $r13;

     label3:
        $r14 := @caughtexception;

        interfaceinvoke $r11.<android.database.Cursor: void close()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.util.List getDatabaseNames()
    {
        com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver r0;
        java.util.List $r1;
        com.facebook.stetho.inspector.database.ContentProviderSchema[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;

        $r1 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mDatabaseNames>;

        if $r1 != null goto label1;

        $r2 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: com.facebook.stetho.inspector.database.ContentProviderSchema[] mContentProviderSchemas>;

        if $r2 == null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mDatabaseNames> = $r3;

        $r1 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mDatabaseNames>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("content-providers");

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mDatabaseNames>;

        return $r1;
    }
    public java.util.List getTableNames(java.lang.String)
    {
        com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver r0;
        java.lang.String $r1;
        com.facebook.stetho.inspector.database.ContentProviderSchema r2;
        com.facebook.stetho.inspector.database.ContentProviderSchema[] $r3;
        int $i0, $i1;
        java.util.List $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames>;

        if $r4 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames> = $r5;

        $r3 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: com.facebook.stetho.inspector.database.ContentProviderSchema[] mContentProviderSchemas>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        $r4 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames>;

        $r1 = virtualinvoke r2.<com.facebook.stetho.inspector.database.ContentProviderSchema: java.lang.String getTableName()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver: java.util.List mTableNames>;

        return $r4;
    }
