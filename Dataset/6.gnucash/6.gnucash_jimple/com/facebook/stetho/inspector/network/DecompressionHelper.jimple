com.facebook.stetho.inspector.network.DecompressionHelper extends java.lang.Object
static final java.lang.String DEFLATE_ENCODING
static final java.lang.String GZIP_ENCODING
    public void <init>()
    {
        com.facebook.stetho.inspector.network.DecompressionHelper r0;

        r0 := @this: com.facebook.stetho.inspector.network.DecompressionHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.io.InputStream teeInputWithDecompression(com.facebook.stetho.inspector.network.NetworkPeerManager, java.lang.String, java.io.InputStream, java.io.OutputStream, java.lang.String, com.facebook.stetho.inspector.network.ResponseHandler) throws java.io.IOException
    {
        com.facebook.stetho.inspector.network.NetworkPeerManager $r0;
        java.lang.String $r1, $r4, $r8;
        java.io.InputStream $r2;
        java.io.OutputStream $r3, r6;
        com.facebook.stetho.inspector.network.ResponseHandler $r5;
        com.facebook.stetho.inspector.network.CountingOutputStream r7, $r12;
        boolean $z0, $z1;
        com.facebook.stetho.inspector.protocol.module.Console$MessageLevel $r9;
        com.facebook.stetho.inspector.protocol.module.Console$MessageSource $r10;
        java.lang.StringBuilder $r11, $r15;
        com.facebook.stetho.inspector.network.ResponseHandlingInputStream $r13;
        java.util.zip.InflaterOutputStream $r14;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.NetworkPeerManager;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.InputStream;

        $r3 := @parameter3: java.io.OutputStream;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: com.facebook.stetho.inspector.network.ResponseHandler;

        r6 = $r3;

        r7 = null;

        if $r4 == null goto label2;

        $r8 = "gzip";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        $r8 = "deflate";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        if $z1 == 0 goto label4;

     label1:
        $r12 = new com.facebook.stetho.inspector.network.CountingOutputStream;

        r7 = $r12;

        specialinvoke $r12.<com.facebook.stetho.inspector.network.CountingOutputStream: void <init>(java.io.OutputStream)>($r3);

        if $z0 == 0 goto label3;

        r6 = staticinvoke <com.facebook.stetho.inspector.network.GunzippingOutputStream: com.facebook.stetho.inspector.network.GunzippingOutputStream create(java.io.OutputStream)>($r12);

     label2:
        $r13 = new com.facebook.stetho.inspector.network.ResponseHandlingInputStream;

        specialinvoke $r13.<com.facebook.stetho.inspector.network.ResponseHandlingInputStream: void <init>(java.io.InputStream,java.lang.String,java.io.OutputStream,com.facebook.stetho.inspector.network.CountingOutputStream,com.facebook.stetho.inspector.helper.ChromePeerManager,com.facebook.stetho.inspector.network.ResponseHandler)>($r2, $r1, r6, r7, $r0, $r5);

        return $r13;

     label3:
        if $z1 == 0 goto label2;

        $r14 = new java.util.zip.InflaterOutputStream;

        r6 = $r14;

        specialinvoke $r14.<java.util.zip.InflaterOutputStream: void <init>(java.io.OutputStream)>($r12);

        goto label2;

     label4:
        $r9 = <com.facebook.stetho.inspector.protocol.module.Console$MessageLevel: com.facebook.stetho.inspector.protocol.module.Console$MessageLevel WARNING>;

        $r10 = <com.facebook.stetho.inspector.protocol.module.Console$MessageSource: com.facebook.stetho.inspector.protocol.module.Console$MessageSource NETWORK>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Content-Encoding in response for request #");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.inspector.console.CLog: void writeToConsole(com.facebook.stetho.inspector.helper.ChromePeerManager,com.facebook.stetho.inspector.protocol.module.Console$MessageLevel,com.facebook.stetho.inspector.protocol.module.Console$MessageSource,java.lang.String)>($r0, $r9, $r10, $r4);

        goto label2;
    }
