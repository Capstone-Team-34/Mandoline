com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder extends java.lang.Object
private static java.util.concurrent.ExecutorService sExecutorService
    private void <init>()
    {
        com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder r0;

        r0 := @this: com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void ensureInitialized()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = <com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder: java.util.concurrent.ExecutorService sExecutorService>;

        if $r0 != null goto label1;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        <com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder: java.util.concurrent.ExecutorService sExecutorService> = $r0;

     label1:
        return;
    }
    public static java.util.concurrent.ExecutorService getExecutorService()
    {
        java.util.concurrent.ExecutorService r0;

        r0 = <com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder: java.util.concurrent.ExecutorService sExecutorService>;

        return r0;
    }
    public static void shutdown()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = <com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder: java.util.concurrent.ExecutorService sExecutorService>;

        interfaceinvoke $r0.<java.util.concurrent.ExecutorService: void shutdown()>();

        <com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder: java.util.concurrent.ExecutorService sExecutorService> = null;

        return;
    }
