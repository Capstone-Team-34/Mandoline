com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable extends java.lang.Object implements java.util.concurrent.Callable
private final java.io.InputStream mIn
private final java.io.OutputStream mOut
    public void <init>(java.io.InputStream, java.io.OutputStream)
    {
        com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.InputStream mIn> = $r1;

        r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.OutputStream mOut> = $r2;

        return;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable r0;
        java.lang.Void $r1;

        r0 := @this: com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable;

        $r1 = virtualinvoke r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.lang.Void call()>();

        return $r1;
    }
    public java.lang.Void call() throws java.io.IOException
    {
        com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable r0;
        java.util.zip.GZIPInputStream r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable;

        r1 = new java.util.zip.GZIPInputStream;

        $r2 = r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.InputStream mIn>;

        specialinvoke r1.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r2);

     label1:
        $r3 = r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.OutputStream mOut>;

        $r4 = newarray (byte)[1024];

        staticinvoke <com.facebook.stetho.common.Util: void copy(java.io.InputStream,java.io.OutputStream,byte[])>(r1, $r3, $r4);

     label2:
        virtualinvoke r1.<java.util.zip.GZIPInputStream: void close()>();

        $r3 = r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.OutputStream mOut>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        return null;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r1.<java.util.zip.GZIPInputStream: void close()>();

        $r3 = r0.<com.facebook.stetho.inspector.network.GunzippingOutputStream$GunzippingCallable: java.io.OutputStream mOut>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
