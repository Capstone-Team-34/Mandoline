com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule extends java.lang.Object
private final boolean mHasWildcard
private final java.lang.String mMatchPrefix
private final java.lang.Object mResultIfMatched
final com.facebook.stetho.inspector.network.MimeMatcher this$0
    public void <init>(com.facebook.stetho.inspector.network.MimeMatcher, java.lang.String, java.lang.Object)
    {
        com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule r0;
        com.facebook.stetho.inspector.network.MimeMatcher $r1;
        java.lang.String $r2, $r4;
        java.lang.Object r3;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule;

        $r1 := @parameter0: com.facebook.stetho.inspector.network.MimeMatcher;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: com.facebook.stetho.inspector.network.MimeMatcher this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z0 == 0 goto label2;

        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: boolean mHasWildcard> = 1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.String mMatchPrefix> = $r4;

     label1:
        $r4 = r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.String mMatchPrefix>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z0 == 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple wildcards present in rule expression ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label2:
        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: boolean mHasWildcard> = 0;

        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.String mMatchPrefix> = $r2;

        goto label1;

     label3:
        r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.Object mResultIfMatched> = r3;

        return;
    }
    public java.lang.Object getResultIfMatched()
    {
        com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule r0;
        java.lang.Object r1;

        r0 := @this: com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule;

        r1 = r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.Object mResultIfMatched>;

        return r1;
    }
    public boolean match(java.lang.String)
    {
        com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.String mMatchPrefix>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: boolean mHasWildcard>;

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = r0.<com.facebook.stetho.inspector.network.MimeMatcher$MimeMatcherRule: java.lang.String mMatchPrefix>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != $i1 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
