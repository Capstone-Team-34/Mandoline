com.facebook.stetho.inspector.network.NetworkEventReporterImpl extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter
private static com.facebook.stetho.inspector.network.NetworkEventReporter sInstance
private com.facebook.stetho.inspector.network.ResourceTypeHelper mResourceTypeHelper
    private void <init>()
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static com.facebook.stetho.inspector.network.AsyncPrettyPrinter createPrettyPrinterForResponse(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse, com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse $r0;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry $r1;
        int i0, $i1;
        java.lang.String $r2, $r4;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory $r3;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinter $r5;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse;

        $r1 := @parameter1: com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry;

        if $r1 == null goto label3;

        i0 = 0;

        $i1 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: int headerCount()>();

     label1:
        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String headerName(int)>(i0);

        $r3 = virtualinvoke $r1.<com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry: com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory lookup(java.lang.String)>($r2);

        if $r3 == null goto label2;

        $r2 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String headerName(int)>(i0);

        $r4 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String headerValue(int)>(i0);

        $r5 = interfaceinvoke $r3.<com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory: com.facebook.stetho.inspector.network.AsyncPrettyPrinter getInstance(java.lang.String,java.lang.String)>($r2, $r4);

        return $r5;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    private static com.facebook.stetho.inspector.protocol.module.Page$ResourceType determineResourceType(com.facebook.stetho.inspector.network.AsyncPrettyPrinter, java.lang.String, com.facebook.stetho.inspector.network.ResourceTypeHelper)
    {
        com.facebook.stetho.inspector.network.AsyncPrettyPrinter $r0;
        java.lang.String $r1;
        com.facebook.stetho.inspector.network.ResourceTypeHelper $r2;
        com.facebook.stetho.inspector.network.PrettyPrinterDisplayType $r3;
        com.facebook.stetho.inspector.protocol.module.Page$ResourceType $r4;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.AsyncPrettyPrinter;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.facebook.stetho.inspector.network.ResourceTypeHelper;

        if $r0 == null goto label1;

        $r3 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.AsyncPrettyPrinter: com.facebook.stetho.inspector.network.PrettyPrinterDisplayType getPrettifiedType()>();

        $r4 = virtualinvoke $r3.<com.facebook.stetho.inspector.network.PrettyPrinterDisplayType: com.facebook.stetho.inspector.protocol.module.Page$ResourceType getResourceType()>();

        return $r4;

     label1:
        if $r1 == null goto label2;

        $r4 = virtualinvoke $r2.<com.facebook.stetho.inspector.network.ResourceTypeHelper: com.facebook.stetho.inspector.protocol.module.Page$ResourceType determineResourceType(java.lang.String)>($r1);

        return $r4;

     label2:
        $r4 = <com.facebook.stetho.inspector.protocol.module.Page$ResourceType: com.facebook.stetho.inspector.protocol.module.Page$ResourceType OTHER>;

        return $r4;
    }
    private static org.json.JSONObject formatHeadersAsJSON(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders $r0;
        org.json.JSONException r1;
        org.json.JSONObject r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r6;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.RuntimeException $r7;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders;

        r2 = new org.json.JSONObject;

        specialinvoke r2.<org.json.JSONObject: void <init>()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders: int headerCount()>();

        if i0 >= $i1 goto label9;

        $r3 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders: java.lang.String headerName(int)>(i0);

        $r4 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders: java.lang.String headerValue(int)>(i0);

     label2:
        $z0 = virtualinvoke r2.<org.json.JSONObject: boolean has(java.lang.String)>($r3);

     label3:
        if $z0 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r4);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r4);

     label7:
        goto label5;

     label8:
        r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r7;

     label9:
        return r2;

        catch org.json.JSONException from label2 to label3 with label8;
        catch org.json.JSONException from label4 to label5 with label8;
        catch org.json.JSONException from label6 to label7 with label8;
    }
    public static com.facebook.stetho.inspector.network.NetworkEventReporter get()
    {
        com.facebook.stetho.inspector.network.NetworkEventReporter $r0;
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl $r1;
        java.lang.Throwable $r2;

        entermonitor class "Lcom/facebook/stetho/inspector/network/NetworkEventReporterImpl;";

     label1:
        $r0 = <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkEventReporter sInstance>;

        if $r0 != null goto label2;

        $r1 = new com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        specialinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: void <init>()>();

        <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkEventReporter sInstance> = $r1;

     label2:
        $r0 = <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkEventReporter sInstance>;

     label3:
        exitmonitor class "Lcom/facebook/stetho/inspector/network/NetworkEventReporterImpl;";

        return $r0;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/facebook/stetho/inspector/network/NetworkEventReporterImpl;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    private java.lang.String getContentType(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders;

        $r2 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders: java.lang.String firstHeaderValue(java.lang.String)>("Content-Type");

        return $r2;
    }
    private com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r1;
        boolean $z0;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 = staticinvoke <com.facebook.stetho.inspector.network.NetworkPeerManager: com.facebook.stetho.inspector.network.NetworkPeerManager getInstanceOrNull()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.facebook.stetho.inspector.network.NetworkPeerManager: boolean hasRegisteredPeers()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        return null;
    }
    private com.facebook.stetho.inspector.network.ResourceTypeHelper getResourceTypeHelper()
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.ResourceTypeHelper $r1;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 = r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper mResourceTypeHelper>;

        if $r1 != null goto label1;

        $r1 = new com.facebook.stetho.inspector.network.ResourceTypeHelper;

        specialinvoke $r1.<com.facebook.stetho.inspector.network.ResourceTypeHelper: void <init>()>();

        r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper mResourceTypeHelper> = $r1;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper mResourceTypeHelper>;

        return $r1;
    }
    private static com.facebook.stetho.inspector.network.AsyncPrettyPrinter initAsyncPrettyPrinterForResponse(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse, com.facebook.stetho.inspector.network.NetworkPeerManager)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse $r0;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r1;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry $r2;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinter $r3;
        com.facebook.stetho.inspector.network.ResponseBodyFileManager $r4;
        java.lang.String $r5;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse;

        $r1 := @parameter1: com.facebook.stetho.inspector.network.NetworkPeerManager;

        $r2 = virtualinvoke $r1.<com.facebook.stetho.inspector.network.NetworkPeerManager: com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry getAsyncPrettyPrinterRegistry()>();

        $r3 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.AsyncPrettyPrinter createPrettyPrinterForResponse(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse,com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry)>($r0, $r2);

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r1.<com.facebook.stetho.inspector.network.NetworkPeerManager: com.facebook.stetho.inspector.network.ResponseBodyFileManager getResponseBodyFileManager()>();

        $r5 = interfaceinvoke $r0.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String requestId()>();

        virtualinvoke $r4.<com.facebook.stetho.inspector.network.ResponseBodyFileManager: void associateAsyncPrettyPrinterWithId(java.lang.String,com.facebook.stetho.inspector.network.AsyncPrettyPrinter)>($r5, $r3);

     label1:
        return $r3;
    }
    private void loadingFailed(java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1, $r2;
        com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams r3;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r4;
        long $l0;
        double $d0;
        com.facebook.stetho.inspector.protocol.module.Page$ResourceType $r5;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r4 == null goto label1;

        r3 = new com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams: void <init>()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams: java.lang.String requestId> = $r1;

        $l0 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: long stethoNow()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams: double timestamp> = $d0;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams: java.lang.String errorText> = $r2;

        $r5 = <com.facebook.stetho.inspector.protocol.module.Page$ResourceType: com.facebook.stetho.inspector.protocol.module.Page$ResourceType OTHER>;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFailedParams: com.facebook.stetho.inspector.protocol.module.Page$ResourceType type> = $r5;

        virtualinvoke $r4.<com.facebook.stetho.inspector.network.NetworkPeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("Network.loadingFailed", r3);

     label1:
        return;
    }
    private void loadingFinished(java.lang.String)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1;
        com.facebook.stetho.inspector.protocol.module.Network$LoadingFinishedParams r2;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r3;
        long $l0;
        double $d0;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r3 == null goto label1;

        r2 = new com.facebook.stetho.inspector.protocol.module.Network$LoadingFinishedParams;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFinishedParams: void <init>()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFinishedParams: java.lang.String requestId> = $r1;

        $l0 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: long stethoNow()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$LoadingFinishedParams: double timestamp> = $d0;

        virtualinvoke $r3.<com.facebook.stetho.inspector.network.NetworkPeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("Network.loadingFinished", r2);

     label1:
        return;
    }
    private static java.lang.String readBodyAsString(com.facebook.stetho.inspector.network.NetworkPeerManager, com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest)
    {
        com.facebook.stetho.inspector.network.NetworkPeerManager $r0;
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest $r1;
        byte[] $r2;
        java.lang.String $r3;
        java.nio.charset.Charset $r4;
        java.lang.Throwable r5;
        com.facebook.stetho.inspector.protocol.module.Console$MessageLevel $r6;
        com.facebook.stetho.inspector.protocol.module.Console$MessageSource $r7;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: com.facebook.stetho.inspector.network.NetworkPeerManager;

        $r1 := @parameter1: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest;

     label1:
        $r2 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: byte[] body()>();

     label2:
        if $r2 == null goto label8;

     label3:
        $r3 = new java.lang.String;

        $r4 = <com.facebook.stetho.common.Utf8Charset: java.nio.charset.Charset INSTANCE>;

     label4:
        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r2, $r4);

     label5:
        return $r3;

     label6:
        r5 := @caughtexception;

     label7:
        $r6 = <com.facebook.stetho.inspector.protocol.module.Console$MessageLevel: com.facebook.stetho.inspector.protocol.module.Console$MessageLevel WARNING>;

        $r7 = <com.facebook.stetho.inspector.protocol.module.Console$MessageSource: com.facebook.stetho.inspector.protocol.module.Console$MessageSource NETWORK>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not reproduce POST body: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.inspector.console.CLog: void writeToConsole(com.facebook.stetho.inspector.helper.ChromePeerManager,com.facebook.stetho.inspector.protocol.module.Console$MessageLevel,com.facebook.stetho.inspector.protocol.module.Console$MessageSource,java.lang.String)>($r0, $r6, $r7, $r3);

     label8:
        return null;

     label9:
        r5 := @caughtexception;

        goto label7;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label4 to label5 with label9;
        catch java.lang.OutOfMemoryError from label1 to label2 with label6;
        catch java.lang.OutOfMemoryError from label3 to label5 with label6;
    }
    private static long stethoNow()
    {
        long $l0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        return $l0;
    }
    public void dataReceived(java.lang.String, int, int)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1;
        int $i0, $i1;
        com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams r2;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r3;
        long $l2;
        double $d0;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r3 == null goto label1;

        r2 = new com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams: void <init>()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams: java.lang.String requestId> = $r1;

        $l2 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: long stethoNow()>();

        $d0 = (double) $l2;

        $d0 = $d0 / 1000.0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams: double timestamp> = $d0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams: int dataLength> = $i0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$DataReceivedParams: int encodedDataLength> = $i1;

        virtualinvoke $r3.<com.facebook.stetho.inspector.network.NetworkPeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("Network.dataReceived", r2);

     label1:
        return;
    }
    public void dataSent(java.lang.String, int, int)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: void dataReceived(java.lang.String,int,int)>($r1, $i0, $i1);

        return;
    }
    public void httpExchangeFailed(java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: void loadingFailed(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public java.io.InputStream interpretResponseStream(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream, com.facebook.stetho.inspector.network.ResponseHandler)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1, $r2, $r3;
        com.facebook.stetho.inspector.network.ResponseHandler $r4;
        java.io.IOException r5;
        java.io.InputStream r6, $r13;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r7;
        com.facebook.stetho.inspector.network.ResourceTypeHelper $r8;
        com.facebook.stetho.inspector.protocol.module.Page$ResourceType $r9, $r10;
        boolean z0;
        com.facebook.stetho.inspector.network.ResponseBodyFileManager $r11;
        java.io.OutputStream $r12;
        com.facebook.stetho.inspector.protocol.module.Console$MessageLevel $r14;
        com.facebook.stetho.inspector.protocol.module.Console$MessageSource $r15;
        java.lang.StringBuilder $r16;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r6 := @parameter3: java.io.InputStream;

        $r4 := @parameter4: com.facebook.stetho.inspector.network.ResponseHandler;

        $r7 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r7 == null goto label7;

        if r6 != null goto label1;

        interfaceinvoke $r4.<com.facebook.stetho.inspector.network.ResponseHandler: void onEOF()>();

        return null;

     label1:
        if $r2 == null goto label5;

        $r8 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper getResourceTypeHelper()>();

        $r9 = virtualinvoke $r8.<com.facebook.stetho.inspector.network.ResourceTypeHelper: com.facebook.stetho.inspector.protocol.module.Page$ResourceType determineResourceType(java.lang.String)>($r2);

     label2:
        z0 = 0;

        if $r9 == null goto label3;

        $r10 = <com.facebook.stetho.inspector.protocol.module.Page$ResourceType: com.facebook.stetho.inspector.protocol.module.Page$ResourceType IMAGE>;

        if $r9 != $r10 goto label3;

        z0 = 1;

     label3:
        $r11 = virtualinvoke $r7.<com.facebook.stetho.inspector.network.NetworkPeerManager: com.facebook.stetho.inspector.network.ResponseBodyFileManager getResponseBodyFileManager()>();

        $r12 = virtualinvoke $r11.<com.facebook.stetho.inspector.network.ResponseBodyFileManager: java.io.OutputStream openResponseBodyFile(java.lang.String,boolean)>($r1, z0);

        $r13 = staticinvoke <com.facebook.stetho.inspector.network.DecompressionHelper: java.io.InputStream teeInputWithDecompression(com.facebook.stetho.inspector.network.NetworkPeerManager,java.lang.String,java.io.InputStream,java.io.OutputStream,java.lang.String,com.facebook.stetho.inspector.network.ResponseHandler)>($r7, $r1, r6, $r12, $r3, $r4);

     label4:
        return $r13;

     label5:
        $r9 = null;

        goto label2;

     label6:
        r5 := @caughtexception;

        $r14 = <com.facebook.stetho.inspector.protocol.module.Console$MessageLevel: com.facebook.stetho.inspector.protocol.module.Console$MessageLevel ERROR>;

        $r15 = <com.facebook.stetho.inspector.protocol.module.Console$MessageSource: com.facebook.stetho.inspector.protocol.module.Console$MessageSource NETWORK>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing response body data for request #");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.inspector.console.CLog: void writeToConsole(com.facebook.stetho.inspector.helper.ChromePeerManager,com.facebook.stetho.inspector.protocol.module.Console$MessageLevel,com.facebook.stetho.inspector.protocol.module.Console$MessageSource,java.lang.String)>($r7, $r14, $r15, $r1);

     label7:
        return r6;

        catch java.io.IOException from label3 to label4 with label6;
    }
    public boolean isEnabled()
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r1;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public void requestWillBeSent(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest $r1;
        com.facebook.stetho.inspector.protocol.module.Network$Initiator r2;
        com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams r3;
        com.facebook.stetho.inspector.protocol.module.Network$Request r4;
        com.facebook.stetho.inspector.protocol.module.Console$CallFrame $r5;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r6;
        java.lang.String $r7;
        org.json.JSONObject $r8;
        java.lang.Integer $r9;
        com.facebook.stetho.inspector.protocol.module.Network$InitiatorType $r10;
        java.util.ArrayList $r11;
        java.util.List $r12;
        int $i0;
        long $l1;
        double $d0;
        com.facebook.stetho.inspector.protocol.module.Page$ResourceType $r13;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest;

        $r6 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r6 == null goto label3;

        r4 = new com.facebook.stetho.inspector.protocol.module.Network$Request;

        specialinvoke r4.<com.facebook.stetho.inspector.protocol.module.Network$Request: void <init>()>();

        $r7 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.String url()>();

        r4.<com.facebook.stetho.inspector.protocol.module.Network$Request: java.lang.String url> = $r7;

        $r7 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.String method()>();

        r4.<com.facebook.stetho.inspector.protocol.module.Network$Request: java.lang.String method> = $r7;

        $r8 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: org.json.JSONObject formatHeadersAsJSON(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders)>($r1);

        r4.<com.facebook.stetho.inspector.protocol.module.Network$Request: org.json.JSONObject headers> = $r8;

        $r7 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: java.lang.String readBodyAsString(com.facebook.stetho.inspector.network.NetworkPeerManager,com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest)>($r6, $r1);

        r4.<com.facebook.stetho.inspector.protocol.module.Network$Request: java.lang.String postData> = $r7;

        $r7 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.String friendlyName()>();

        $r9 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.Integer friendlyNameExtra()>();

        r2 = new com.facebook.stetho.inspector.protocol.module.Network$Initiator;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Network$Initiator: void <init>()>();

        $r10 = <com.facebook.stetho.inspector.protocol.module.Network$InitiatorType: com.facebook.stetho.inspector.protocol.module.Network$InitiatorType SCRIPT>;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$Initiator: com.facebook.stetho.inspector.protocol.module.Network$InitiatorType type> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Network$Initiator: java.util.List stackTrace> = $r11;

        $r12 = r2.<com.facebook.stetho.inspector.protocol.module.Network$Initiator: java.util.List stackTrace>;

        $r5 = new com.facebook.stetho.inspector.protocol.module.Console$CallFrame;

        if $r9 == null goto label2;

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

     label1:
        specialinvoke $r5.<com.facebook.stetho.inspector.protocol.module.Console$CallFrame: void <init>(java.lang.String,java.lang.String,int,int)>($r7, $r7, $i0, 0);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r5);

        r3 = new com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: void <init>()>();

        $r7 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.String id()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: java.lang.String requestId> = $r7;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: java.lang.String frameId> = "1";

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: java.lang.String loaderId> = "1";

        $r7 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest: java.lang.String url()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: java.lang.String documentURL> = $r7;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: com.facebook.stetho.inspector.protocol.module.Network$Request request> = r4;

        $l1 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: long stethoNow()>();

        $d0 = (double) $l1;

        $d0 = $d0 / 1000.0;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: double timestamp> = $d0;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: com.facebook.stetho.inspector.protocol.module.Network$Initiator initiator> = r2;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: com.facebook.stetho.inspector.protocol.module.Network$Response redirectResponse> = null;

        $r13 = <com.facebook.stetho.inspector.protocol.module.Page$ResourceType: com.facebook.stetho.inspector.protocol.module.Page$ResourceType OTHER>;

        r3.<com.facebook.stetho.inspector.protocol.module.Network$RequestWillBeSentParams: com.facebook.stetho.inspector.protocol.module.Page$ResourceType type> = $r13;

        virtualinvoke $r6.<com.facebook.stetho.inspector.network.NetworkPeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("Network.requestWillBeSent", r3);

        return;

     label2:
        $i0 = 0;

        goto label1;

     label3:
        return;
    }
    public void responseHeadersReceived(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse $r1;
        com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams r2;
        com.facebook.stetho.inspector.protocol.module.Network$Response r3;
        com.facebook.stetho.inspector.network.NetworkPeerManager $r4;
        java.lang.String $r5, $r8;
        int $i0;
        org.json.JSONObject $r6;
        com.facebook.stetho.inspector.network.ResourceTypeHelper $r7;
        boolean $z0;
        java.lang.Boolean $r9;
        long $l1;
        double $d0;
        com.facebook.stetho.inspector.network.AsyncPrettyPrinter $r10;
        com.facebook.stetho.inspector.protocol.module.Page$ResourceType $r11;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse;

        $r4 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.NetworkPeerManager getPeerManagerIfEnabled()>();

        if $r4 == null goto label3;

        r3 = new com.facebook.stetho.inspector.protocol.module.Network$Response;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: void <init>()>();

        $r5 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String url()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: java.lang.String url> = $r5;

        $i0 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: int statusCode()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: int status> = $i0;

        $r5 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String reasonPhrase()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: java.lang.String statusText> = $r5;

        $r6 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: org.json.JSONObject formatHeadersAsJSON(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders)>($r1);

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: org.json.JSONObject headers> = $r6;

        $r5 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: java.lang.String getContentType(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders)>($r1);

        if $r5 == null goto label2;

        $r7 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper getResourceTypeHelper()>();

        $r8 = virtualinvoke $r7.<com.facebook.stetho.inspector.network.ResourceTypeHelper: java.lang.String stripContentExtras(java.lang.String)>($r5);

     label1:
        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: java.lang.String mimeType> = $r8;

        $z0 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: boolean connectionReused()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: boolean connectionReused> = $z0;

        $i0 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: int connectionId()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: int connectionId> = $i0;

        $z0 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: boolean fromDiskCache()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r3.<com.facebook.stetho.inspector.protocol.module.Network$Response: java.lang.Boolean fromDiskCache> = $r9;

        r2 = new com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: void <init>()>();

        $r8 = interfaceinvoke $r1.<com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse: java.lang.String requestId()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: java.lang.String requestId> = $r8;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: java.lang.String frameId> = "1";

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: java.lang.String loaderId> = "1";

        $l1 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: long stethoNow()>();

        $d0 = (double) $l1;

        $d0 = $d0 / 1000.0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: double timestamp> = $d0;

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: com.facebook.stetho.inspector.protocol.module.Network$Response response> = r3;

        $r10 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.AsyncPrettyPrinter initAsyncPrettyPrinterForResponse(com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse,com.facebook.stetho.inspector.network.NetworkPeerManager)>($r1, $r4);

        $r7 = specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.network.ResourceTypeHelper getResourceTypeHelper()>();

        $r11 = staticinvoke <com.facebook.stetho.inspector.network.NetworkEventReporterImpl: com.facebook.stetho.inspector.protocol.module.Page$ResourceType determineResourceType(com.facebook.stetho.inspector.network.AsyncPrettyPrinter,java.lang.String,com.facebook.stetho.inspector.network.ResourceTypeHelper)>($r10, $r5, $r7);

        r2.<com.facebook.stetho.inspector.protocol.module.Network$ResponseReceivedParams: com.facebook.stetho.inspector.protocol.module.Page$ResourceType type> = $r11;

        virtualinvoke $r4.<com.facebook.stetho.inspector.network.NetworkPeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("Network.responseReceived", r2);

        return;

     label2:
        $r8 = "application/octet-stream";

        goto label1;

     label3:
        return;
    }
    public void responseReadFailed(java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: void loadingFailed(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void responseReadFinished(java.lang.String)
    {
        com.facebook.stetho.inspector.network.NetworkEventReporterImpl r0;
        java.lang.String $r1;

        r0 := @this: com.facebook.stetho.inspector.network.NetworkEventReporterImpl;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.facebook.stetho.inspector.network.NetworkEventReporterImpl: void loadingFinished(java.lang.String)>($r1);

        return;
    }
