com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable extends java.lang.Object implements java.lang.Runnable
final com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0
    private void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r1;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable;

        $r1 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r1;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1 $r2;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable;

        $r1 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r2 := @parameter1: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1;

        specialinvoke r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r1);

        return;
    }
    private void updateScreenBitmap()
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable r0;
        int i0, i1, $i2, $i3;
        java.lang.OutOfMemoryError r1;
        android.graphics.Matrix r2;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r3, $r12;
        boolean $z0;
        com.facebook.stetho.inspector.elements.android.ActivityTracker $r4;
        android.app.Activity $r5;
        android.view.Window $r6;
        android.view.View $r7;
        android.graphics.Bitmap $r8;
        com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest $r9;
        float $f0, $f1, $f2;
        android.graphics.Bitmap$Config $r10;
        android.graphics.Canvas $r11;
        android.graphics.RectF $r13, $r14;
        android.graphics.Matrix$ScaleToFit $r15;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable;

        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

        $z0 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: boolean access$600(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

        $r4 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.elements.android.ActivityTracker access$700(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

        $r5 = virtualinvoke $r4.<com.facebook.stetho.inspector.elements.android.ActivityTracker: android.app.Activity tryGetTopActivity()>();

        if $r5 == null goto label35;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.view.Window getWindow()>();

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label02:
        $r8 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Bitmap access$800(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label03:
        if $r8 != null goto label31;

     label04:
        $i2 = virtualinvoke $r7.<android.view.View: int getWidth()>();

        $i3 = virtualinvoke $r7.<android.view.View: int getHeight()>();

     label05:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label06:
        $r9 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest access$900(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label07:
        i0 = $r9.<com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest: int maxWidth>;

        $f0 = (float) i0;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label08:
        $r9 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest access$900(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label09:
        i0 = $r9.<com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest: int maxHeight>;

        $f1 = (float) i0;

        $f2 = (float) $i3;

        $f1 = $f1 / $f2;

     label10:
        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

     label11:
        $f1 = (float) $i2;

        $f1 = $f1 * $f0;

        i1 = (int) $f1;

        $f1 = (float) $i3;

        $f0 = $f1 * $f0;

        i0 = (int) $f0;

        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label12:
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i0, $r10);

        staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Bitmap access$802(com.facebook.stetho.inspector.screencast.ScreencastDispatcher,android.graphics.Bitmap)>($r3, $r8);

     label13:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label14:
        $r11 = new android.graphics.Canvas;

     label15:
        $r12 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label16:
        $r8 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Bitmap access$800(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r12);

        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r8);

        staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Canvas access$1002(com.facebook.stetho.inspector.screencast.ScreencastDispatcher,android.graphics.Canvas)>($r3, $r11);

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

     label17:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label18:
        $r13 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF access$1100(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label19:
        $f0 = (float) $i2;

        $f1 = (float) $i3;

     label20:
        virtualinvoke $r13.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

     label21:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label22:
        $r13 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF access$1200(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label23:
        $f0 = (float) i1;

        $f1 = (float) i0;

     label24:
        virtualinvoke $r13.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

     label25:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label26:
        $r13 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF access$1100(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

     label27:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label28:
        $r14 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF access$1200(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

        $r15 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r13, $r14, $r15);

     label29:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label30:
        $r11 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Canvas access$1000(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

        virtualinvoke $r11.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>(r2);

     label31:
        $r3 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

     label32:
        $r11 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Canvas access$1000(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r3);

        virtualinvoke $r7.<android.view.View: void draw(android.graphics.Canvas)>($r11);

     label33:
        return;

     label34:
        r1 := @caughtexception;

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>("Out of memory trying to allocate screencast Bitmap.");

     label35:
        return;

        catch java.lang.OutOfMemoryError from label02 to label03 with label34;
        catch java.lang.OutOfMemoryError from label04 to label05 with label34;
        catch java.lang.OutOfMemoryError from label06 to label07 with label34;
        catch java.lang.OutOfMemoryError from label08 to label09 with label34;
        catch java.lang.OutOfMemoryError from label10 to label11 with label34;
        catch java.lang.OutOfMemoryError from label12 to label13 with label34;
        catch java.lang.OutOfMemoryError from label14 to label15 with label34;
        catch java.lang.OutOfMemoryError from label16 to label17 with label34;
        catch java.lang.OutOfMemoryError from label18 to label19 with label34;
        catch java.lang.OutOfMemoryError from label20 to label21 with label34;
        catch java.lang.OutOfMemoryError from label22 to label23 with label34;
        catch java.lang.OutOfMemoryError from label24 to label25 with label34;
        catch java.lang.OutOfMemoryError from label26 to label27 with label34;
        catch java.lang.OutOfMemoryError from label28 to label29 with label34;
        catch java.lang.OutOfMemoryError from label30 to label31 with label34;
        catch java.lang.OutOfMemoryError from label32 to label33 with label34;
    }
    public void run()
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r1;
        android.os.Handler $r2;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable $r3;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable;

        specialinvoke r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: void updateScreenBitmap()>();

        $r1 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

        $r2 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler access$500(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r1);

        $r1 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher this$0>;

        $r3 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable access$300(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)>($r1);

        $r3 = staticinvoke <com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable access$400(com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable,java.lang.Runnable)>($r3, r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }
