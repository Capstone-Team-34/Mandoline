com.facebook.stetho.inspector.screencast.ScreencastDispatcher extends java.lang.Object
private static final long FRAME_DELAY
private final com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker
private android.os.Handler mBackgroundHandler
private android.graphics.Bitmap mBitmap
private final com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable mBitmapFetchRunnable
private android.graphics.Canvas mCanvas
private com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent mEvent
private final com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable mEventDispatchRunnable
private android.os.HandlerThread mHandlerThread
private boolean mIsRunning
private final android.os.Handler mMainHandler
private com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata mMetadata
private com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer mPeer
private com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest mRequest
private java.io.ByteArrayOutputStream mStream
private final android.graphics.RectF mTempDst
private final android.graphics.RectF mTempSrc
    public void <init>()
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable $r3;
        com.facebook.stetho.inspector.elements.android.ActivityTracker $r4;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable $r5;
        android.graphics.RectF $r6;
        com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent $r7;
        com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata $r8;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mMainHandler> = $r1;

        $r3 = new com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable;

        specialinvoke $r3.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable: void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher,com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1)>(r0, null);

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable mBitmapFetchRunnable> = $r3;

        $r4 = staticinvoke <com.facebook.stetho.inspector.elements.android.ActivityTracker: com.facebook.stetho.inspector.elements.android.ActivityTracker get()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker> = $r4;

        $r5 = new com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable;

        specialinvoke $r5.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable: void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher,com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1)>(r0, null);

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable mEventDispatchRunnable> = $r5;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF mTempSrc> = $r6;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF mTempDst> = $r6;

        $r7 = new com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent;

        specialinvoke $r7.<com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent: void <init>()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent mEvent> = $r7;

        $r8 = new com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata;

        specialinvoke $r8.<com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata: void <init>()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata mMetadata> = $r8;

        return;
    }
    static android.graphics.Canvas access$1000(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.Canvas r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Canvas mCanvas>;

        return r1;
    }
    static android.graphics.Canvas access$1002(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, android.graphics.Canvas)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.Canvas $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r1 := @parameter1: android.graphics.Canvas;

        $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Canvas mCanvas> = $r1;

        return $r1;
    }
    static android.graphics.RectF access$1100(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.RectF r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF mTempSrc>;

        return r1;
    }
    static android.graphics.RectF access$1200(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.RectF r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.RectF mTempDst>;

        return r1;
    }
    static java.io.ByteArrayOutputStream access$1300(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        java.io.ByteArrayOutputStream r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: java.io.ByteArrayOutputStream mStream>;

        return r1;
    }
    static java.io.ByteArrayOutputStream access$1302(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, java.io.ByteArrayOutputStream)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        java.io.ByteArrayOutputStream $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r1 := @parameter1: java.io.ByteArrayOutputStream;

        $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: java.io.ByteArrayOutputStream mStream> = $r1;

        return $r1;
    }
    static com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent access$1400(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEvent mEvent>;

        return r1;
    }
    static com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata access$1500(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$ScreencastFrameEventMetadata mMetadata>;

        return r1;
    }
    static com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer access$1600(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer mPeer>;

        return r1;
    }
    static android.os.Handler access$1700(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mMainHandler>;

        return r1;
    }
    static android.os.HandlerThread access$1800(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.os.HandlerThread r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.HandlerThread mHandlerThread>;

        return r1;
    }
    static android.os.HandlerThread access$1802(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, android.os.HandlerThread)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.os.HandlerThread $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r1 := @parameter1: android.os.HandlerThread;

        $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.HandlerThread mHandlerThread> = $r1;

        return $r1;
    }
    static com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable access$1900(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable mBitmapFetchRunnable>;

        return r1;
    }
    static com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable access$300(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$EventDispatchRunnable mEventDispatchRunnable>;

        return r1;
    }
    static android.os.Handler access$500(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mBackgroundHandler>;

        return r1;
    }
    static boolean access$600(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        boolean z0;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        z0 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: boolean mIsRunning>;

        return z0;
    }
    static boolean access$602(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, boolean)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $z0 := @parameter1: boolean;

        $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: boolean mIsRunning> = $z0;

        return $z0;
    }
    static com.facebook.stetho.inspector.elements.android.ActivityTracker access$700(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.elements.android.ActivityTracker r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.elements.android.ActivityTracker mActivityTracker>;

        return r1;
    }
    static android.graphics.Bitmap access$800(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.Bitmap r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Bitmap mBitmap>;

        return r1;
    }
    static android.graphics.Bitmap access$802(com.facebook.stetho.inspector.screencast.ScreencastDispatcher, android.graphics.Bitmap)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.graphics.Bitmap mBitmap> = $r1;

        return $r1;
    }
    static com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest access$900(com.facebook.stetho.inspector.screencast.ScreencastDispatcher)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher $r0;
        com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        r1 = $r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest mRequest>;

        return r1;
    }
    public void startScreencast(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest)
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest $r2;
        android.os.Looper $r3;
        android.os.HandlerThread $r4;
        java.io.ByteArrayOutputStream $r5;
        android.os.Handler $r6;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable $r7;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest;

        staticinvoke <com.facebook.stetho.common.LogUtil: void d(java.lang.String)>("Starting screencast");

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.protocol.module.Page$StartScreencastRequest mRequest> = $r2;

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("Screencast Thread");

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.HandlerThread mHandlerThread> = $r4;

        $r4 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r4.<android.os.HandlerThread: void start()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer mPeer> = $r1;

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: boolean mIsRunning> = 1;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: java.io.ByteArrayOutputStream mStream> = $r5;

        $r6 = new android.os.Handler;

        $r4 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.HandlerThread mHandlerThread>;

        $r3 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mBackgroundHandler> = $r6;

        $r6 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mMainHandler>;

        $r7 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: com.facebook.stetho.inspector.screencast.ScreencastDispatcher$BitmapFetchRunnable mBitmapFetchRunnable>;

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 200L);

        return;
    }
    public void stopScreencast()
    {
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher r0;
        com.facebook.stetho.inspector.screencast.ScreencastDispatcher$CancellationRunnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.facebook.stetho.inspector.screencast.ScreencastDispatcher;

        staticinvoke <com.facebook.stetho.common.LogUtil: void d(java.lang.String)>("Stopping screencast");

        $r2 = r0.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher: android.os.Handler mBackgroundHandler>;

        $r1 = new com.facebook.stetho.inspector.screencast.ScreencastDispatcher$CancellationRunnable;

        specialinvoke $r1.<com.facebook.stetho.inspector.screencast.ScreencastDispatcher$CancellationRunnable: void <init>(com.facebook.stetho.inspector.screencast.ScreencastDispatcher,com.facebook.stetho.inspector.screencast.ScreencastDispatcher$1)>(r0, null);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }
