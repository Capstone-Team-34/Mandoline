com.facebook.stetho.inspector.helper.PeersRegisteredListener extends java.lang.Object implements com.facebook.stetho.inspector.helper.PeerRegistrationListener
private java.util.concurrent.atomic.AtomicInteger mPeers
    public void <init>()
    {
        com.facebook.stetho.inspector.helper.PeersRegisteredListener r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.PeersRegisteredListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: java.util.concurrent.atomic.AtomicInteger mPeers> = $r1;

        return;
    }
protected abstract void onFirstPeerRegistered() { 
// no body
} 
protected abstract void onLastPeerUnregistered() { 
// no body
} 
    protected void onPeerAdded(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.PeersRegisteredListener r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.PeersRegisteredListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        return;
    }
    public final void onPeerRegistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.PeersRegisteredListener r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.PeersRegisteredListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 = r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: java.util.concurrent.atomic.AtomicInteger mPeers>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        if $i0 != 1 goto label1;

        virtualinvoke r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: void onFirstPeerRegistered()>();

     label1:
        virtualinvoke r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: void onPeerAdded(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
    protected void onPeerRemoved(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.PeersRegisteredListener r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.PeersRegisteredListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        return;
    }
    public final void onPeerUnregistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.PeersRegisteredListener r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.PeersRegisteredListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 = r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: java.util.concurrent.atomic.AtomicInteger mPeers>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: void onLastPeerUnregistered()>();

     label1:
        virtualinvoke r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: void onPeerRemoved(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
