com.facebook.stetho.inspector.helper.ChromePeerManager extends java.lang.Object
private static final java.lang.String TAG
private com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener
private final java.util.Map mReceivingPeers
private com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot
    public void <init>()
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        java.util.HashMap $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers> = $r1;

        return;
    }
    private com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] getReceivingPeersSnapshot()
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        int $i0;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot>;

        if $r1 != null goto label2;

        $r2 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r2 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r1 = newarray (com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)[$i0];

        $r4 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = (com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[]) $r4;

        r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot> = $r1;

     label2:
        $r1 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    private void sendMessageToPeers(java.lang.String, java.lang.Object, com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback $r3;
        java.nio.channels.NotYetConnectedException r4;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r5;
        int $i0, $i1;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] $r6;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback;

        $r6 = specialinvoke r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] getReceivingPeersSnapshot()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        r5 = $r6[$i1];

     label2:
        virtualinvoke r5.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: void invokeMethod(java.lang.String,java.lang.Object,com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>($r1, $r2, $r3);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r4 := @caughtexception;

        staticinvoke <com.facebook.stetho.common.LogRedirector: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ChromePeerManager", "Error delivering data to Chrome", r4);

        goto label3;

     label5:
        return;

        catch java.nio.channels.NotYetConnectedException from label2 to label3 with label4;
    }
    public boolean addPeer(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        com.facebook.stetho.inspector.helper.ChromePeerManager$UnregisterOnDisconnect r2;
        boolean $z0;
        java.util.Map $r3;
        com.facebook.stetho.inspector.helper.PeerRegistrationListener $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        entermonitor r0;

     label1:
        $r3 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label2:
        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        r2 = new com.facebook.stetho.inspector.helper.ChromePeerManager$UnregisterOnDisconnect;

        specialinvoke r2.<com.facebook.stetho.inspector.helper.ChromePeerManager$UnregisterOnDisconnect: void <init>(com.facebook.stetho.inspector.helper.ChromePeerManager,com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>(r0, $r1);

        virtualinvoke $r1.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: void registerDisconnectReceiver(com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver)>(r2);

        $r3 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

        r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot> = null;

        $r4 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener>;

        if $r4 == null goto label5;

        $r4 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener>;

        interfaceinvoke $r4.<com.facebook.stetho.inspector.helper.PeerRegistrationListener: void onPeerRegistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

     label5:
        $z0 = 1;

        goto label3;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
    public boolean hasRegisteredPeers()
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        boolean $z0;
        java.util.Map $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

     label2:
        if $z0 != 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public void invokeMethodOnPeers(java.lang.String, java.lang.Object, com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback $r3;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r3);

        specialinvoke r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: void sendMessageToPeers(java.lang.String,java.lang.Object,com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>($r1, $r2, $r3);

        return;
    }
    public void removePeer(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        com.facebook.stetho.inspector.helper.PeerRegistrationListener $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        entermonitor r0;

     label1:
        $r3 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: java.util.Map mReceivingPeers>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        if $r2 == null goto label2;

        r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer[] mReceivingPeersSnapshot> = null;

        $r4 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener>;

        if $r4 == null goto label2;

        $r4 = r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener>;

        interfaceinvoke $r4.<com.facebook.stetho.inspector.helper.PeerRegistrationListener: void onPeerUnregistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void sendNotificationToPeers(java.lang.String, java.lang.Object)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: void sendMessageToPeers(java.lang.String,java.lang.Object,com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>($r1, $r2, null);

        return;
    }
    public void setListener(com.facebook.stetho.inspector.helper.PeerRegistrationListener)
    {
        com.facebook.stetho.inspector.helper.ChromePeerManager r0;
        com.facebook.stetho.inspector.helper.PeerRegistrationListener $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ChromePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.helper.PeerRegistrationListener;

        entermonitor r0;

     label1:
        r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mListener> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
