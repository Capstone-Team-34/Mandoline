com.facebook.stetho.inspector.helper.ThreadBoundProxy extends java.lang.Object implements com.facebook.stetho.common.ThreadBound
private final com.facebook.stetho.common.ThreadBound mEnforcer
    public void <init>(com.facebook.stetho.common.ThreadBound)
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        com.facebook.stetho.common.ThreadBound $r1;
        java.lang.Object $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 := @parameter0: com.facebook.stetho.common.ThreadBound;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $r1 = (com.facebook.stetho.common.ThreadBound) $r2;

        r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer> = $r1;

        return;
    }
    public final boolean checkThreadAccess()
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        boolean $z0;
        com.facebook.stetho.common.ThreadBound $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        $z0 = interfaceinvoke $r1.<com.facebook.stetho.common.ThreadBound: boolean checkThreadAccess()>();

        return $z0;
    }
    public final java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        com.facebook.stetho.common.UncheckedCallable r1;
        java.lang.Object $r2;
        com.facebook.stetho.common.ThreadBound $r3;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        r1 := @parameter0: com.facebook.stetho.common.UncheckedCallable;

        $r3 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        $r2 = interfaceinvoke $r3.<com.facebook.stetho.common.ThreadBound: java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)>(r1);

        return $r2;
    }
    public final void postAndWait(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        java.lang.Runnable $r1;
        com.facebook.stetho.common.ThreadBound $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        interfaceinvoke $r2.<com.facebook.stetho.common.ThreadBound: void postAndWait(java.lang.Runnable)>($r1);

        return;
    }
    public final void postDelayed(java.lang.Runnable, long)
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        java.lang.Runnable $r1;
        long $l0;
        com.facebook.stetho.common.ThreadBound $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r2 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        interfaceinvoke $r2.<com.facebook.stetho.common.ThreadBound: void postDelayed(java.lang.Runnable,long)>($r1, $l0);

        return;
    }
    public final void removeCallbacks(java.lang.Runnable)
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        java.lang.Runnable $r1;
        com.facebook.stetho.common.ThreadBound $r2;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        interfaceinvoke $r2.<com.facebook.stetho.common.ThreadBound: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }
    public final void verifyThreadAccess()
    {
        com.facebook.stetho.inspector.helper.ThreadBoundProxy r0;
        com.facebook.stetho.common.ThreadBound $r1;

        r0 := @this: com.facebook.stetho.inspector.helper.ThreadBoundProxy;

        $r1 = r0.<com.facebook.stetho.inspector.helper.ThreadBoundProxy: com.facebook.stetho.common.ThreadBound mEnforcer>;

        interfaceinvoke $r1.<com.facebook.stetho.common.ThreadBound: void verifyThreadAccess()>();

        return;
    }
