com.facebook.stetho.inspector.MismatchedResponseException extends com.facebook.stetho.inspector.MessageHandlingException
public long mRequestId
    public void <init>(long)
    {
        com.facebook.stetho.inspector.MismatchedResponseException r0;
        long $l0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.stetho.inspector.MismatchedResponseException;

        $l0 := @parameter0: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response for request id ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but no such request is pending");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.facebook.stetho.inspector.MessageHandlingException: void <init>(java.lang.String)>($r2);

        r0.<com.facebook.stetho.inspector.MismatchedResponseException: long mRequestId> = $l0;

        return;
    }
    public long getRequestId()
    {
        com.facebook.stetho.inspector.MismatchedResponseException r0;
        long l0;

        r0 := @this: com.facebook.stetho.inspector.MismatchedResponseException;

        l0 = r0.<com.facebook.stetho.inspector.MismatchedResponseException: long mRequestId>;

        return l0;
    }
