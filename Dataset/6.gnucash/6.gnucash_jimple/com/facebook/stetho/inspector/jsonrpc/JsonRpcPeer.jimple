com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer extends java.lang.Object
private final com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable mDisconnectObservable
private long mNextRequestId
private final com.facebook.stetho.json.ObjectMapper mObjectMapper
private final com.facebook.stetho.websocket.SimpleSession mPeer
private final java.util.Map mPendingRequests
    public void <init>(com.facebook.stetho.json.ObjectMapper, com.facebook.stetho.websocket.SimpleSession)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.json.ObjectMapper $r1;
        com.facebook.stetho.websocket.SimpleSession $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable $r5;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 := @parameter0: com.facebook.stetho.json.ObjectMapper;

        $r2 := @parameter1: com.facebook.stetho.websocket.SimpleSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: java.util.Map mPendingRequests> = $r4;

        $r5 = new com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable;

        specialinvoke $r5.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: void <init>(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$1)>(null);

        r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable mDisconnectObservable> = $r5;

        r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.json.ObjectMapper mObjectMapper> = $r1;

        $r3 = staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r2);

        $r2 = (com.facebook.stetho.websocket.SimpleSession) $r3;

        r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.websocket.SimpleSession mPeer> = $r2;

        return;
    }
    private long preparePendingRequest(com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback $r1;
        long l0, $l1;
        com.facebook.stetho.inspector.jsonrpc.PendingRequest $r2;
        java.lang.Long $r3;
        java.util.Map $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback;

        entermonitor r0;

     label1:
        l0 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: long mNextRequestId>;

        $l1 = 1L + l0;

        r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: long mNextRequestId> = $l1;

        $r4 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: java.util.Map mPendingRequests>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2 = new com.facebook.stetho.inspector.jsonrpc.PendingRequest;

        specialinvoke $r2.<com.facebook.stetho.inspector.jsonrpc.PendingRequest: void <init>(long,com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>(l0, $r1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.facebook.stetho.inspector.jsonrpc.PendingRequest getAndRemovePendingRequest(long)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        long $l0;
        java.util.Map $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        com.facebook.stetho.inspector.jsonrpc.PendingRequest $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: java.util.Map mPendingRequests>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        $r4 = (com.facebook.stetho.inspector.jsonrpc.PendingRequest) $r3;

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.facebook.stetho.websocket.SimpleSession getWebSocket()
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.websocket.SimpleSession r1;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        r1 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.websocket.SimpleSession mPeer>;

        return r1;
    }
    public void invokeDisconnectReceivers()
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable $r1;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable mDisconnectObservable>;

        virtualinvoke $r1.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: void onDisconnect()>();

        return;
    }
    public void invokeMethod(java.lang.String, java.lang.Object, com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback) throws java.nio.channels.NotYetConnectedException
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback $r3;
        com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcRequest r4;
        long $l0;
        java.lang.Long $r5;
        com.facebook.stetho.json.ObjectMapper $r6;
        org.json.JSONObject r7;
        com.facebook.stetho.websocket.SimpleSession $r8;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback;

        staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        if $r3 == null goto label2;

        $l0 = specialinvoke r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: long preparePendingRequest(com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>($r3);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label1:
        $r6 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r2 = virtualinvoke $r6.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lorg/json/JSONObject;");

        r7 = (org.json.JSONObject) $r2;

        r4 = new com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcRequest;

        specialinvoke r4.<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcRequest: void <init>(java.lang.Long,java.lang.String,org.json.JSONObject)>($r5, $r1, r7);

        $r6 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r2 = virtualinvoke $r6.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>(r4, class "Lorg/json/JSONObject;");

        r7 = (org.json.JSONObject) $r2;

        $r1 = virtualinvoke r7.<org.json.JSONObject: java.lang.String toString()>();

        $r8 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.websocket.SimpleSession mPeer>;

        interfaceinvoke $r8.<com.facebook.stetho.websocket.SimpleSession: void sendText(java.lang.String)>($r1);

        return;

     label2:
        $r5 = null;

        goto label1;
    }
    public void registerDisconnectReceiver(com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver $r1;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable $r2;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver;

        $r2 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable mDisconnectObservable>;

        virtualinvoke $r2.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: void registerObserver(java.lang.Object)>($r1);

        return;
    }
    public void unregisterDisconnectReceiver(com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer r0;
        com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver $r1;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable $r2;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver;

        $r2 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable mDisconnectObservable>;

        virtualinvoke $r2.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: void unregisterObserver(java.lang.Object)>($r1);

        return;
    }
