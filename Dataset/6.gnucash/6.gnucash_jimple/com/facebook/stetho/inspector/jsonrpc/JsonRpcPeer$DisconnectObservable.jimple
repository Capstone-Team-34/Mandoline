com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable extends android.database.Observable
    private void <init>()
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable r0;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable;

        specialinvoke r0.<android.database.Observable: void <init>()>();

        return;
    }
    void <init>(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$1)
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$1 $r1;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$1;

        specialinvoke r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: void <init>()>();

        return;
    }
    public void onDisconnect()
    {
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable r0;
        int i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver r3;

        r0 := @this: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable;

        i0 = 0;

        $r1 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: java.util.ArrayList mObservers>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= $i1 goto label2;

        $r1 = r0.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer$DisconnectObservable: java.util.ArrayList mObservers>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver) $r2;

        interfaceinvoke r3.<com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver: void onDisconnect()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
