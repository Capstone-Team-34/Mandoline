com.facebook.stetho.inspector.domstorage.SharedPreferencesHelper extends java.lang.Object
private static final java.lang.String PREFS_SUFFIX
    private void <init>()
    {
        com.facebook.stetho.inspector.domstorage.SharedPreferencesHelper r0;

        r0 := @this: com.facebook.stetho.inspector.domstorage.SharedPreferencesHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.util.List getSharedPreferenceTags(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File r1;
        java.util.ArrayList r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String $r5, $r7;
        boolean $z0;
        java.io.File[] $r6;

        $r0 := @parameter0: android.content.Context;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/shared_prefs");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r1 = $r6[$i1];

        $r5 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r7 = ".xml";

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = $i2 - $i3;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        return r2;
    }
    private static java.lang.Boolean parseBoolean(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Boolean r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

     label1:
        r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r4;

     label2:
        $r1 = "0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label3;

        $r1 = "false";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label4;

     label3:
        r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r4;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected boolean, got ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    public static java.lang.Object valueFromString(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.lang.Object $r0;
        org.json.JSONException r1;
        org.json.JSONArray r2;
        java.util.HashSet r3;
        java.lang.String r4;
        boolean $z0;
        int $i0, i2;
        java.lang.Integer $r5;
        long $l1;
        java.lang.Long $r6;
        float $f0;
        java.lang.Float $r7;
        java.lang.Boolean $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10;
        java.lang.Class $r11;

        r4 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object;

        $z0 = $r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label01;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r5;

     label01:
        $z0 = $r0 instanceof java.lang.Long;

        if $z0 == 0 goto label02;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r6;

     label02:
        $z0 = $r0 instanceof java.lang.Float;

        if $z0 == 0 goto label03;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r4);

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;

     label03:
        $z0 = $r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label04;

        $r8 = staticinvoke <com.facebook.stetho.inspector.domstorage.SharedPreferencesHelper: java.lang.Boolean parseBoolean(java.lang.String)>(r4);

        return $r8;

     label04:
        $z0 = $r0 instanceof java.lang.String;

        if $z0 != 0 goto label15;

        $z0 = $r0 instanceof java.util.Set;

        if $z0 == 0 goto label14;

        r2 = new org.json.JSONArray;

     label05:
        specialinvoke r2.<org.json.JSONArray: void <init>(java.lang.String)>(r4);

        $i0 = virtualinvoke r2.<org.json.JSONArray: int length()>();

     label06:
        r3 = new java.util.HashSet;

     label07:
        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

     label08:
        i2 = 0;

     label09:
        if i2 >= $i0 goto label12;

     label10:
        r4 = virtualinvoke r2.<org.json.JSONArray: java.lang.String getString(int)>(i2);

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label11:
        i2 = i2 + 1;

        goto label09;

     label12:
        return r3;

     label13:
        r1 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r1);

        throw $r9;

     label14:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r11 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r4);

        throw $r9;

     label15:
        return r4;

        catch org.json.JSONException from label05 to label06 with label13;
        catch org.json.JSONException from label07 to label08 with label13;
        catch org.json.JSONException from label10 to label11 with label13;
    }
    public static java.lang.String valueToString(java.lang.Object)
    {
        org.json.JSONArray r0;
        java.lang.Object r1;
        boolean $z0;
        java.util.Set r2;
        java.util.Iterator $r3;
        java.lang.String r4;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label4;

        $z0 = r1 instanceof java.util.Set;

        if $z0 == 0 goto label3;

        r0 = new org.json.JSONArray;

        specialinvoke r0.<org.json.JSONArray: void <init>()>();

        r2 = (java.util.Set) r1;

        $r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) r1;

        virtualinvoke r0.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r4);

        goto label1;

     label2:
        r4 = virtualinvoke r0.<org.json.JSONArray: java.lang.String toString()>();

        return r4;

     label3:
        r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return r4;

     label4:
        return null;
    }
