com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager extends com.facebook.stetho.inspector.helper.ChromePeerManager
private final android.content.Context mContext
private final com.facebook.stetho.inspector.helper.PeerRegistrationListener mPeerListener
    public void <init>(android.content.Context)
    {
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager r0;
        android.content.Context $r1;
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager$1 $r2;
        com.facebook.stetho.inspector.helper.PeerRegistrationListener $r3;

        r0 := @this: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.facebook.stetho.inspector.helper.ChromePeerManager: void <init>()>();

        $r2 = new com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager$1;

        specialinvoke $r2.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager$1: void <init>(com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager)>(r0);

        r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mPeerListener> = $r2;

        r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: android.content.Context mContext> = $r1;

        $r3 = r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: com.facebook.stetho.inspector.helper.PeerRegistrationListener mPeerListener>;

        virtualinvoke r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: void setListener(com.facebook.stetho.inspector.helper.PeerRegistrationListener)>($r3);

        return;
    }
    static android.content.Context access$000(com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager)
    {
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager $r0;
        android.content.Context r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager;

        r1 = $r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: android.content.Context mContext>;

        return r1;
    }
    static java.util.Map access$100(java.util.Map)
    {
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r0 = staticinvoke <com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: java.util.Map prefsCopy(java.util.Map)>($r0);

        return $r0;
    }
    private static java.util.Map prefsCopy(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap r1;
        int $i0;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry r5;
        java.lang.String r6;

        r0 := @parameter0: java.util.Map;

        r1 = new java.util.HashMap;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        specialinvoke r1.<java.util.HashMap: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r4 instanceof java.util.Set;

        if $z0 == 0 goto label2;

        $r2 = (java.util.Set) $r4;

        $r2 = staticinvoke <com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: java.util.Set shallowCopy(java.util.Set)>($r2);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r2);

        goto label1;

     label2:
        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r4);

        goto label1;

     label3:
        return r1;
    }
    private static java.util.Set shallowCopy(java.util.Set)
    {
        java.util.Set r0;
        java.util.HashSet r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.Set;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return r1;
    }
    public void signalItemAdded(com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId, java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager r0;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId $r1;
        java.lang.String $r2, $r3;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams r4;

        r0 := @this: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams;

        specialinvoke r4.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams: void <init>()>();

        r4.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId storageId> = $r1;

        r4.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams: java.lang.String key> = $r2;

        r4.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemAddedParams: java.lang.String newValue> = $r3;

        virtualinvoke r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("DOMStorage.domStorageItemAdded", r4);

        return;
    }
    public void signalItemRemoved(com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId, java.lang.String)
    {
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager r0;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId $r1;
        java.lang.String $r2;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemRemovedParams r3;

        r0 := @this: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId;

        $r2 := @parameter1: java.lang.String;

        r3 = new com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemRemovedParams;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemRemovedParams: void <init>()>();

        r3.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemRemovedParams: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId storageId> = $r1;

        r3.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemRemovedParams: java.lang.String key> = $r2;

        virtualinvoke r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("DOMStorage.domStorageItemRemoved", r3);

        return;
    }
    public void signalItemUpdated(com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId, java.lang.String, java.lang.String, java.lang.String)
    {
        com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager r0;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId $r1;
        java.lang.String $r2, $r3, $r4;
        com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams r5;

        r0 := @this: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        r5 = new com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams;

        specialinvoke r5.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams: void <init>()>();

        r5.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams: com.facebook.stetho.inspector.protocol.module.DOMStorage$StorageId storageId> = $r1;

        r5.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams: java.lang.String key> = $r2;

        r5.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams: java.lang.String oldValue> = $r3;

        r5.<com.facebook.stetho.inspector.protocol.module.DOMStorage$DomStorageItemUpdatedParams: java.lang.String newValue> = $r4;

        virtualinvoke r0.<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager: void sendNotificationToPeers(java.lang.String,java.lang.Object)>("DOMStorage.domStorageItemUpdated", r5);

        return;
    }
