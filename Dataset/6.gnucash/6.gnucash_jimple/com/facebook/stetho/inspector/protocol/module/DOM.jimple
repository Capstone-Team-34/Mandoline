com.facebook.stetho.inspector.protocol.module.DOM extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain
private com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent mCachedChildNodeInsertedEvent
private com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent mCachedChildNodeRemovedEvent
private final com.facebook.stetho.inspector.elements.Document mDocument
private final com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener mListener
private final com.facebook.stetho.json.ObjectMapper mObjectMapper
private final com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager
private final java.util.concurrent.atomic.AtomicInteger mResultCounter
private final java.util.Map mSearchResults
    public void <init>(com.facebook.stetho.inspector.elements.Document)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.elements.Document $r1;
        com.facebook.stetho.json.ObjectMapper $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        java.util.Map $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        com.facebook.stetho.inspector.helper.ChromePeerManager $r7;
        com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener $r8;
        com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener $r9;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.elements.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.facebook.stetho.json.ObjectMapper;

        specialinvoke $r2.<com.facebook.stetho.json.ObjectMapper: void <init>()>();

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper> = $r2;

        $r3 = staticinvoke <com.facebook.stetho.common.Util: java.lang.Object throwIfNull(java.lang.Object)>($r1);

        $r1 = (com.facebook.stetho.inspector.elements.Document) $r3;

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument> = $r1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map mSearchResults> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.concurrent.atomic.AtomicInteger mResultCounter> = $r6;

        $r7 = new com.facebook.stetho.inspector.helper.ChromePeerManager;

        specialinvoke $r7.<com.facebook.stetho.inspector.helper.ChromePeerManager: void <init>()>();

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager> = $r7;

        $r7 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager>;

        $r8 = new com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener;

        specialinvoke $r8.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$1)>(r0, null);

        virtualinvoke $r7.<com.facebook.stetho.inspector.helper.ChromePeerManager: void setListener(com.facebook.stetho.inspector.helper.PeerRegistrationListener)>($r8);

        $r9 = new com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener;

        specialinvoke $r9.<com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$1)>(r0, null);

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener mListener> = $r9;

        return;
    }
    static com.facebook.stetho.inspector.helper.ChromePeerManager access$1200(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.helper.ChromePeerManager r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager>;

        return r1;
    }
    static com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent access$1500(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 = specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent acquireChildNodeRemovedEvent()>();

        return $r1;
    }
    static void access$1600(com.facebook.stetho.inspector.protocol.module.DOM, com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter1: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent;

        specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.DOM: void releaseChildNodeRemovedEvent(com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent)>($r1);

        return;
    }
    static com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent access$1700(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 = specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent acquireChildNodeInsertedEvent()>();

        return $r1;
    }
    static void access$1800(com.facebook.stetho.inspector.protocol.module.DOM, com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter1: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent;

        specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.DOM: void releaseChildNodeInsertedEvent(com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent)>($r1);

        return;
    }
    static com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener access$1900(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener mListener>;

        return r1;
    }
    static java.util.Map access$2000(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = $r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map mSearchResults>;

        return r1;
    }
    static com.facebook.stetho.inspector.elements.Document access$300(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        com.facebook.stetho.inspector.elements.Document r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        return r1;
    }
    static com.facebook.stetho.inspector.protocol.module.DOM$Node access$400(com.facebook.stetho.inspector.protocol.module.DOM, java.lang.Object, com.facebook.stetho.inspector.elements.DocumentView, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.protocol.module.DOM $r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.DocumentView $r2;
        com.facebook.stetho.common.Accumulator $r3;
        com.facebook.stetho.inspector.protocol.module.DOM$Node $r4;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: com.facebook.stetho.inspector.elements.DocumentView;

        $r3 := @parameter3: com.facebook.stetho.common.Accumulator;

        $r4 = specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$Node createNodeForElement(java.lang.Object,com.facebook.stetho.inspector.elements.DocumentView,com.facebook.stetho.common.Accumulator)>($r1, $r2, $r3);

        return $r4;
    }
    private com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent acquireChildNodeInsertedEvent()
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent mCachedChildNodeInsertedEvent>;

        if r1 != null goto label1;

        r1 = new com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent;

        specialinvoke r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

     label1:
        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent mCachedChildNodeInsertedEvent> = null;

        return r1;
    }
    private com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent acquireChildNodeRemovedEvent()
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent mCachedChildNodeRemovedEvent>;

        if r1 != null goto label1;

        r1 = new com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent;

        specialinvoke r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

     label1:
        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent mCachedChildNodeRemovedEvent> = null;

        return r1;
    }
    private com.facebook.stetho.inspector.protocol.module.DOM$Node createNodeForElement(java.lang.Object, com.facebook.stetho.inspector.elements.DocumentView, com.facebook.stetho.common.Accumulator)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.elements.DocumentView $r2;
        com.facebook.stetho.common.Accumulator r3;
        com.facebook.stetho.inspector.protocol.module.DOM$Node r5, $r14;
        com.facebook.stetho.inspector.elements.Document $r6;
        com.facebook.stetho.inspector.elements.NodeDescriptor $r7;
        java.lang.Integer $r8;
        int $i0, $i1;
        com.facebook.stetho.inspector.elements.NodeType $r9;
        java.lang.String $r10;
        com.facebook.stetho.inspector.elements.ElementInfo $r11;
        java.util.List $r12, $r13;
        com.facebook.stetho.inspector.elements.Document$AttributeListAccumulator $r15;
        java.util.ArrayList $r16;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.facebook.stetho.inspector.elements.DocumentView;

        r3 := @parameter2: com.facebook.stetho.common.Accumulator;

        if r3 == null goto label1;

        interfaceinvoke r3.<com.facebook.stetho.common.Accumulator: void store(java.lang.Object)>($r1);

     label1:
        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r7 = virtualinvoke $r6.<com.facebook.stetho.inspector.elements.Document: com.facebook.stetho.inspector.elements.NodeDescriptor getNodeDescriptor(java.lang.Object)>($r1);

        $r14 = new com.facebook.stetho.inspector.protocol.module.DOM$Node;

        r5 = $r14;

        specialinvoke $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r8 = virtualinvoke $r6.<com.facebook.stetho.inspector.elements.Document: java.lang.Integer getNodeIdForElement(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: int nodeId> = $i0;

        $r9 = interfaceinvoke $r7.<com.facebook.stetho.inspector.elements.NodeDescriptor: com.facebook.stetho.inspector.elements.NodeType getNodeType(java.lang.Object)>($r1);

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: com.facebook.stetho.inspector.elements.NodeType nodeType> = $r9;

        $r10 = interfaceinvoke $r7.<com.facebook.stetho.inspector.elements.NodeDescriptor: java.lang.String getNodeName(java.lang.Object)>($r1);

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.lang.String nodeName> = $r10;

        $r10 = interfaceinvoke $r7.<com.facebook.stetho.inspector.elements.NodeDescriptor: java.lang.String getLocalName(java.lang.Object)>($r1);

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.lang.String localName> = $r10;

        $r10 = interfaceinvoke $r7.<com.facebook.stetho.inspector.elements.NodeDescriptor: java.lang.String getNodeValue(java.lang.Object)>($r1);

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.lang.String nodeValue> = $r10;

        $r15 = new com.facebook.stetho.inspector.elements.Document$AttributeListAccumulator;

        specialinvoke $r15.<com.facebook.stetho.inspector.elements.Document$AttributeListAccumulator: void <init>()>();

        interfaceinvoke $r7.<com.facebook.stetho.inspector.elements.NodeDescriptor: void getAttributes(java.lang.Object,com.facebook.stetho.inspector.elements.AttributeAccumulator)>($r1, $r15);

        $r14.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.util.List attributes> = $r15;

        $r11 = interfaceinvoke $r2.<com.facebook.stetho.inspector.elements.DocumentView: com.facebook.stetho.inspector.elements.ElementInfo getElementInfo(java.lang.Object)>($r1);

        $r12 = $r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label2:
        $i0 = 0;

        $r13 = $r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

     label3:
        if $i0 >= $i1 goto label5;

        $r13 = $r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $r1 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i0);

        $r14 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$Node createNodeForElement(java.lang.Object,com.facebook.stetho.inspector.elements.DocumentView,com.facebook.stetho.common.Accumulator)>($r1, $r2, r3);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r14);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r16 = new java.util.ArrayList;

        $r12 = $r16;

        $r13 = $r11.<com.facebook.stetho.inspector.elements.ElementInfo: java.util.List children>;

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i0);

        goto label2;

     label5:
        r5.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.util.List children> = $r12;

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r5.<com.facebook.stetho.inspector.protocol.module.DOM$Node: java.lang.Integer childNodeCount> = $r8;

        return r5;
    }
    private void releaseChildNodeInsertedEvent(com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent $r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent;

        $r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent: int parentNodeId> = -1;

        $r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent: int previousNodeId> = -1;

        $r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent: com.facebook.stetho.inspector.protocol.module.DOM$Node node> = null;

        $r2 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent mCachedChildNodeInsertedEvent>;

        if $r2 != null goto label1;

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeInsertedEvent mCachedChildNodeInsertedEvent> = $r1;

     label1:
        return;
    }
    private void releaseChildNodeRemovedEvent(com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent $r1, $r2;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent;

        $r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent: int parentNodeId> = -1;

        $r1.<com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent: int nodeId> = -1;

        $r2 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent mCachedChildNodeRemovedEvent>;

        if $r2 != null goto label1;

        r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$ChildNodeRemovedEvent mCachedChildNodeRemovedEvent> = $r1;

     label1:
        return;
    }
    public void disable(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.helper.ChromePeerManager $r3;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.helper.ChromePeerManager: void removePeer(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
    public void discardSearchResults(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        java.lang.Object $r3;
        com.facebook.stetho.json.ObjectMapper $r4;
        com.facebook.stetho.inspector.protocol.module.DOM$DiscardSearchResultsRequest r5;
        java.lang.String $r6;
        java.util.Map $r7;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r4 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r3 = virtualinvoke $r4.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$DiscardSearchResultsRequest;");

        r5 = (com.facebook.stetho.inspector.protocol.module.DOM$DiscardSearchResultsRequest) $r3;

        $r6 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$DiscardSearchResultsRequest: java.lang.String searchId>;

        if $r6 == null goto label1;

        $r7 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map mSearchResults>;

        $r6 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$DiscardSearchResultsRequest: java.lang.String searchId>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

     label1:
        return;
    }
    public void enable(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.helper.ChromePeerManager $r3;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.helper.ChromePeerManager mPeerManager>;

        virtualinvoke $r3.<com.facebook.stetho.inspector.helper.ChromePeerManager: boolean addPeer(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
    public com.facebook.stetho.inspector.jsonrpc.JsonRpcResult getDocument(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.protocol.module.DOM$GetDocumentResponse r3;
        com.facebook.stetho.inspector.protocol.module.DOM$1 $r4;
        java.lang.Object $r5;
        com.facebook.stetho.inspector.elements.Document $r6;
        com.facebook.stetho.inspector.protocol.module.DOM$Node $r7;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        r3 = new com.facebook.stetho.inspector.protocol.module.DOM$GetDocumentResponse;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.DOM$GetDocumentResponse: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r4 = new com.facebook.stetho.inspector.protocol.module.DOM$1;

        specialinvoke $r4.<com.facebook.stetho.inspector.protocol.module.DOM$1: void <init>(com.facebook.stetho.inspector.protocol.module.DOM)>(r0);

        $r5 = virtualinvoke $r6.<com.facebook.stetho.inspector.elements.Document: java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)>($r4);

        $r7 = (com.facebook.stetho.inspector.protocol.module.DOM$Node) $r5;

        r3.<com.facebook.stetho.inspector.protocol.module.DOM$GetDocumentResponse: com.facebook.stetho.inspector.protocol.module.DOM$Node root> = $r7;

        return r3;
    }
    public com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsResponse getSearchResults(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.json.ObjectMapper $r3;
        java.lang.Object $r4;
        com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest r5;
        java.lang.String $r6;
        java.util.Map $r7;
        java.util.List r8;
        java.lang.StringBuilder $r9;
        int $i0, $i1;
        com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsResponse r10;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r4 = virtualinvoke $r3.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$GetSearchResultsRequest;");

        r5 = (com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest) $r4;

        $r6 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest: java.lang.String searchId>;

        if $r6 != null goto label1;

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>("searchId may not be null");

        return null;

     label1:
        $r7 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map mSearchResults>;

        $r6 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest: java.lang.String searchId>;

        $r4 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.util.List) $r4;

        if r8 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest: java.lang.String searchId>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a valid reference to a search result");

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>($r6);

        return null;

     label2:
        $i0 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest: int fromIndex>;

        $i1 = r5.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsRequest: int toIndex>;

        r8 = interfaceinvoke r8.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        r10 = new com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsResponse;

        specialinvoke r10.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsResponse: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

        r10.<com.facebook.stetho.inspector.protocol.module.DOM$GetSearchResultsResponse: java.util.List nodeIds> = r8;

        return r10;
    }
    public void hideHighlight(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.elements.Document $r3;
        com.facebook.stetho.inspector.protocol.module.DOM$3 $r4;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r4 = new com.facebook.stetho.inspector.protocol.module.DOM$3;

        specialinvoke $r4.<com.facebook.stetho.inspector.protocol.module.DOM$3: void <init>(com.facebook.stetho.inspector.protocol.module.DOM)>(r0);

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Document: void postAndWait(java.lang.Runnable)>($r4);

        return;
    }
    public void highlightNode(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.protocol.module.DOM$RGBAColor r3;
        java.lang.Object $r4;
        com.facebook.stetho.json.ObjectMapper $r5;
        com.facebook.stetho.inspector.protocol.module.DOM$HighlightNodeRequest r6;
        java.lang.Integer $r7;
        com.facebook.stetho.inspector.protocol.module.DOM$HighlightConfig $r8;
        com.facebook.stetho.inspector.elements.Document $r9;
        com.facebook.stetho.inspector.protocol.module.DOM$2 $r10;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r5 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r4 = virtualinvoke $r5.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$HighlightNodeRequest;");

        r6 = (com.facebook.stetho.inspector.protocol.module.DOM$HighlightNodeRequest) $r4;

        $r7 = r6.<com.facebook.stetho.inspector.protocol.module.DOM$HighlightNodeRequest: java.lang.Integer nodeId>;

        if $r7 != null goto label1;

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>("DOM.highlightNode was not given a nodeId; JS objectId is not supported");

        return;

     label1:
        $r8 = r6.<com.facebook.stetho.inspector.protocol.module.DOM$HighlightNodeRequest: com.facebook.stetho.inspector.protocol.module.DOM$HighlightConfig highlightConfig>;

        r3 = $r8.<com.facebook.stetho.inspector.protocol.module.DOM$HighlightConfig: com.facebook.stetho.inspector.protocol.module.DOM$RGBAColor contentColor>;

        if r3 != null goto label2;

        staticinvoke <com.facebook.stetho.common.LogUtil: void w(java.lang.String)>("DOM.highlightNode was not given a color to highlight with");

        return;

     label2:
        $r9 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r10 = new com.facebook.stetho.inspector.protocol.module.DOM$2;

        specialinvoke $r10.<com.facebook.stetho.inspector.protocol.module.DOM$2: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$HighlightNodeRequest,com.facebook.stetho.inspector.protocol.module.DOM$RGBAColor)>(r0, r6, r3);

        virtualinvoke $r9.<com.facebook.stetho.inspector.elements.Document: void postAndWait(java.lang.Runnable)>($r10);

        return;
    }
    public com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse performSearch(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse r3;
        com.facebook.stetho.common.ArrayListAccumulator r4;
        com.facebook.stetho.json.ObjectMapper $r5;
        java.lang.Object $r6;
        com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchRequest r7;
        com.facebook.stetho.inspector.elements.Document $r8;
        com.facebook.stetho.inspector.protocol.module.DOM$7 $r9;
        java.util.concurrent.atomic.AtomicInteger $r10;
        int $i0;
        java.lang.String $r11;
        java.util.Map $r12;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r5 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r6 = virtualinvoke $r5.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$PerformSearchRequest;");

        r7 = (com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchRequest) $r6;

        r4 = new com.facebook.stetho.common.ArrayListAccumulator;

        specialinvoke r4.<com.facebook.stetho.common.ArrayListAccumulator: void <init>()>();

        $r8 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r9 = new com.facebook.stetho.inspector.protocol.module.DOM$7;

        specialinvoke $r9.<com.facebook.stetho.inspector.protocol.module.DOM$7: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchRequest,com.facebook.stetho.common.ArrayListAccumulator)>(r0, r7, r4);

        virtualinvoke $r8.<com.facebook.stetho.inspector.elements.Document: void postAndWait(java.lang.Runnable)>($r9);

        $r10 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.concurrent.atomic.AtomicInteger mResultCounter>;

        $i0 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r12 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map mSearchResults>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r4);

        r3 = new com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

        r3.<com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse: java.lang.String searchId> = $r11;

        $i0 = virtualinvoke r4.<com.facebook.stetho.common.ArrayListAccumulator: int size()>();

        r3.<com.facebook.stetho.inspector.protocol.module.DOM$PerformSearchResponse: int resultCount> = $i0;

        return r3;
    }
    public com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeResponse resolveNode(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject) throws com.facebook.stetho.inspector.jsonrpc.JsonRpcException
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject r3;
        com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeResponse r4;
        com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode $r5;
        com.facebook.stetho.json.ObjectMapper $r6;
        java.lang.Object $r7;
        com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeRequest r8;
        com.facebook.stetho.inspector.elements.Document $r9;
        com.facebook.stetho.inspector.protocol.module.DOM$4 $r10;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcException $r11;
        com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError $r12;
        java.lang.StringBuilder $r13;
        int $i0;
        java.lang.String $r14;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType $r15;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType $r16;
        java.lang.Class $r17;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r7 = virtualinvoke $r6.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$ResolveNodeRequest;");

        r8 = (com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeRequest) $r7;

        $r9 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r10 = new com.facebook.stetho.inspector.protocol.module.DOM$4;

        specialinvoke $r10.<com.facebook.stetho.inspector.protocol.module.DOM$4: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeRequest)>(r0, r8);

        $r7 = virtualinvoke $r9.<com.facebook.stetho.inspector.elements.Document: java.lang.Object postAndWait(com.facebook.stetho.common.UncheckedCallable)>($r10);

        if $r7 != null goto label1;

        $r11 = new com.facebook.stetho.inspector.jsonrpc.JsonRpcException;

        $r12 = new com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError;

        $r5 = <com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode INVALID_PARAMS>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No known nodeId=");

        $i0 = r8.<com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeRequest: int nodeId>;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError: void <init>(com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode,java.lang.String,org.json.JSONObject)>($r5, $r14, null);

        specialinvoke $r11.<com.facebook.stetho.inspector.jsonrpc.JsonRpcException: void <init>(com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError)>($r12);

        throw $r11;

     label1:
        $i0 = staticinvoke <com.facebook.stetho.inspector.protocol.module.Runtime: int mapObject(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer,java.lang.Object)>($r1, $r7);

        r3 = new com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: void <init>()>();

        $r15 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType OBJECT>;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r15;

        $r16 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType NODE>;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType subtype> = $r16;

        $r17 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String className> = $r14;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = null;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = null;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String objectId> = $r14;

        r4 = new com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeResponse;

        specialinvoke r4.<com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeResponse: void <init>(com.facebook.stetho.inspector.protocol.module.DOM$1)>(null);

        r4.<com.facebook.stetho.inspector.protocol.module.DOM$ResolveNodeResponse: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject object> = r3;

        return r4;
    }
    public void setAttributesAsText(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        java.lang.Object $r3;
        com.facebook.stetho.json.ObjectMapper $r4;
        com.facebook.stetho.inspector.protocol.module.DOM$SetAttributesAsTextRequest r5;
        com.facebook.stetho.inspector.elements.Document $r6;
        com.facebook.stetho.inspector.protocol.module.DOM$5 $r7;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r4 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r3 = virtualinvoke $r4.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$SetAttributesAsTextRequest;");

        r5 = (com.facebook.stetho.inspector.protocol.module.DOM$SetAttributesAsTextRequest) $r3;

        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r7 = new com.facebook.stetho.inspector.protocol.module.DOM$5;

        specialinvoke $r7.<com.facebook.stetho.inspector.protocol.module.DOM$5: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$SetAttributesAsTextRequest)>(r0, r5);

        virtualinvoke $r6.<com.facebook.stetho.inspector.elements.Document: void postAndWait(java.lang.Runnable)>($r7);

        return;
    }
    public void setInspectModeEnabled(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.DOM r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        org.json.JSONObject $r2;
        java.lang.Object $r3;
        com.facebook.stetho.json.ObjectMapper $r4;
        com.facebook.stetho.inspector.protocol.module.DOM$SetInspectModeEnabledRequest r5;
        com.facebook.stetho.inspector.elements.Document $r6;
        com.facebook.stetho.inspector.protocol.module.DOM$6 $r7;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r2 := @parameter1: org.json.JSONObject;

        $r4 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r3 = virtualinvoke $r4.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/DOM$SetInspectModeEnabledRequest;");

        r5 = (com.facebook.stetho.inspector.protocol.module.DOM$SetInspectModeEnabledRequest) $r3;

        $r6 = r0.<com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document mDocument>;

        $r7 = new com.facebook.stetho.inspector.protocol.module.DOM$6;

        specialinvoke $r7.<com.facebook.stetho.inspector.protocol.module.DOM$6: void <init>(com.facebook.stetho.inspector.protocol.module.DOM,com.facebook.stetho.inspector.protocol.module.DOM$SetInspectModeEnabledRequest)>(r0, r5);

        virtualinvoke $r6.<com.facebook.stetho.inspector.elements.Document: void postAndWait(java.lang.Runnable)>($r7);

        return;
    }
