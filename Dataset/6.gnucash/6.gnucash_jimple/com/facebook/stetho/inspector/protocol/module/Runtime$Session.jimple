com.facebook.stetho.inspector.protocol.module.Runtime$Session extends java.lang.Object
private final com.facebook.stetho.json.ObjectMapper mObjectMapper
private final com.facebook.stetho.inspector.helper.ObjectIdMapper mObjects
private com.facebook.stetho.inspector.console.RuntimeRepl mRepl
    private void <init>()
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.helper.ObjectIdMapper $r1;
        com.facebook.stetho.json.ObjectMapper $r2;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.facebook.stetho.inspector.helper.ObjectIdMapper;

        specialinvoke $r1.<com.facebook.stetho.inspector.helper.ObjectIdMapper: void <init>()>();

        r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.helper.ObjectIdMapper mObjects> = $r1;

        $r2 = new com.facebook.stetho.json.ObjectMapper;

        specialinvoke $r2.<com.facebook.stetho.json.ObjectMapper: void <init>()>();

        r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.json.ObjectMapper mObjectMapper> = $r2;

        return;
    }
    void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.protocol.module.Runtime$1 $r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.Runtime$1;

        specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: void <init>()>();

        return;
    }
    private java.util.List arrayToList(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.Object r1, $r9;
        java.lang.Class $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Object[] r6;
        java.util.List $r7;
        int $i0, i1;
        java.util.ArrayList r8;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument must be an array.  Was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label2;

        r6 = (java.lang.Object[]) r1;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r6);

        return $r7;

     label2:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i1);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        return r8;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse buildExceptionResponse(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject $r3;
        com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails $r4;
        java.lang.String $r5;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: java.lang.Object;

        r2 = new com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: boolean wasThrown> = 1;

        $r3 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)>($r1);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject result> = $r3;

        $r4 = new com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails;

        specialinvoke $r4.<com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails exceptionDetails> = $r4;

        $r4 = r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails exceptionDetails>;

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4.<com.facebook.stetho.inspector.protocol.module.Runtime$ExceptionDetails: java.lang.String text> = $r5;

        return r2;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse buildNormalResponse(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.Object $r1;
        com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject $r3;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: java.lang.Object;

        r2 = new com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: boolean wasThrown> = 0;

        $r3 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)>($r1);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject result> = $r3;

        return r2;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForIterable(java.lang.Iterable, boolean)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.Iterable r1;
        boolean $z0, $z1;
        java.util.ArrayList r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor r3;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse r4;
        int i0;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject $r8;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        r1 := @parameter0: java.lang.Iterable;

        $z0 := @parameter1: boolean;

        r4 = new com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse;

        specialinvoke r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r3 = new com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        if $z0 == 0 goto label3;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        i0 = i0 + 1;

     label2:
        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: java.lang.String name> = $r7;

        $r8 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)>($r6);

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject value> = $r8;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label3:
        $r7 = null;

        goto label2;

     label4:
        r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result> = r2;

        return r4;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForMap(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.util.ArrayList r1;
        com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse r3;
        java.lang.Object $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.util.Map$Entry r8;
        java.lang.String $r9;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject $r10;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r4 := @parameter0: java.lang.Object;

        r3 = new com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r5 = (java.util.Map) $r4;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r4;

        r2 = new com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        $r4 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: java.lang.String name> = $r9;

        $r4 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)>($r4);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject value> = $r10;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label1;

     label2:
        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result> = r1;

        return r3;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForObject(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.Object $r1, $r13;
        java.lang.IllegalAccessException r2;
        java.util.ArrayList r3, r4;
        com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor r5;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse r6;
        java.lang.Class $r7, $r10;
        java.lang.reflect.Field[] $r8;
        java.util.List $r9;
        java.lang.String r11, $r16;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.reflect.Field r14;
        int $i0;
        java.lang.StringBuilder $r15;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject $r17;
        java.lang.RuntimeException $r18;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: java.lang.Object;

        r6 = new com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse;

        specialinvoke r6.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label01:
        if $r7 == null goto label17;

        r3 = new java.util.ArrayList;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        specialinvoke r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r3);

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 != $r10 goto label15;

        r11 = "";

     label02:
        $r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.reflect.Field) $r13;

        $i0 = virtualinvoke r14.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 != 0 goto label03;

        virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label04:
        $r13 = virtualinvoke r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label05:
        r5 = new com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor;

     label06:
        specialinvoke r5.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

     label07:
        $r15 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r16 = virtualinvoke r14.<java.lang.reflect.Field: java.lang.String getName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        r5.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: java.lang.String name> = $r16;

     label10:
        $r17 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)>($r13);

     label11:
        r5.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject value> = $r17;

     label12:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label13:
        goto label03;

     label14:
        r2 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r18;

     label15:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        r11 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r11 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label16:
        $r7 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label01;

     label17:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r4);

        r6.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result> = r4;

        return r6;

        catch java.lang.IllegalAccessException from label04 to label05 with label14;
        catch java.lang.IllegalAccessException from label06 to label07 with label14;
        catch java.lang.IllegalAccessException from label08 to label09 with label14;
        catch java.lang.IllegalAccessException from label10 to label11 with label14;
        catch java.lang.IllegalAccessException from label12 to label13 with label14;
    }
    private com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForProtoContainer(com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer $r1;
        com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject r3;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse r4;
        java.lang.Object r5;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType $r6;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType $r7;
        java.lang.Class $r8;
        java.lang.String $r9;
        com.facebook.stetho.inspector.helper.ObjectIdMapper $r10;
        int $i0;
        java.util.ArrayList $r11;
        java.util.List $r12;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer;

        r5 = $r1.<com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer: java.lang.Object object>;

        r3 = new com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: void <init>()>();

        $r6 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType OBJECT>;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r6;

        $r7 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType NODE>;

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType subtype> = $r7;

        $r8 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String className> = $r9;

        $r9 = staticinvoke <com.facebook.stetho.inspector.protocol.module.Runtime: java.lang.String access$300(java.lang.Object)>(r5);

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = $r9;

        $r10 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.helper.ObjectIdMapper mObjects>;

        $i0 = virtualinvoke $r10.<com.facebook.stetho.inspector.helper.ObjectIdMapper: int putObject(java.lang.Object)>(r5);

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        r3.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String objectId> = $r9;

        r2 = new com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: java.lang.String name> = "1";

        r2.<com.facebook.stetho.inspector.protocol.module.Runtime$PropertyDescriptor: com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject value> = r3;

        r4 = new com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse;

        specialinvoke r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(1);

        r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result> = $r11;

        $r12 = r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r4;
    }
    private com.facebook.stetho.inspector.console.RuntimeRepl getRepl(com.facebook.stetho.inspector.console.RuntimeReplFactory)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.console.RuntimeReplFactory $r1;
        com.facebook.stetho.inspector.console.RuntimeRepl $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: com.facebook.stetho.inspector.console.RuntimeReplFactory;

        entermonitor r0;

     label1:
        $r2 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.console.RuntimeRepl mRepl>;

        if $r2 != null goto label2;

        $r2 = interfaceinvoke $r1.<com.facebook.stetho.inspector.console.RuntimeReplFactory: com.facebook.stetho.inspector.console.RuntimeRepl newInstance()>();

        r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.console.RuntimeRepl mRepl> = $r2;

     label2:
        $r2 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.console.RuntimeRepl mRepl>;

     label3:
        exitmonitor r0;

        return $r2;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse evaluate(com.facebook.stetho.inspector.console.RuntimeReplFactory, org.json.JSONObject)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.console.RuntimeReplFactory $r1;
        org.json.JSONObject $r2;
        java.lang.Throwable r3;
        com.facebook.stetho.json.ObjectMapper $r4;
        java.lang.Object $r5;
        com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateRequest r6;
        java.lang.String $r7;
        boolean $z0;
        com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse $r8;
        com.facebook.stetho.inspector.console.RuntimeRepl $r9;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: com.facebook.stetho.inspector.console.RuntimeReplFactory;

        $r2 := @parameter1: org.json.JSONObject;

        $r4 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r5 = virtualinvoke $r4.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r2, class "Lcom/facebook/stetho/inspector/protocol/module/Runtime$EvaluateRequest;");

        r6 = (com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateRequest) $r5;

     label1:
        $r7 = r6.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateRequest: java.lang.String objectGroup>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("console");

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r8 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse buildExceptionResponse(java.lang.Object)>("Not supported by FAB");

     label4:
        return $r8;

     label5:
        $r9 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.console.RuntimeRepl getRepl(com.facebook.stetho.inspector.console.RuntimeReplFactory)>($r1);

        $r7 = r6.<com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateRequest: java.lang.String expression>;

        $r5 = interfaceinvoke $r9.<com.facebook.stetho.inspector.console.RuntimeRepl: java.lang.Object evaluate(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse buildNormalResponse(java.lang.Object)>($r5);

     label6:
        return $r8;

     label7:
        r3 := @caughtexception;

        $r8 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$EvaluateResponse buildExceptionResponse(java.lang.Object)>(r3);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    public java.lang.Object getObjectOrThrow(java.lang.String) throws com.facebook.stetho.inspector.jsonrpc.JsonRpcException
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        java.lang.String $r1;
        com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode $r2;
        com.facebook.stetho.inspector.helper.ObjectIdMapper $r3;
        int $i0;
        java.lang.Object $r4;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcException $r5;
        com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.helper.ObjectIdMapper getObjects()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.facebook.stetho.inspector.helper.ObjectIdMapper: java.lang.Object getObjectForId(int)>($i0);

        if $r4 != null goto label1;

        $r5 = new com.facebook.stetho.inspector.jsonrpc.JsonRpcException;

        $r6 = new com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError;

        $r2 = <com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode INVALID_REQUEST>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No object found for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError: void <init>(com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError$ErrorCode,java.lang.String,org.json.JSONObject)>($r2, $r1, null);

        specialinvoke $r5.<com.facebook.stetho.inspector.jsonrpc.JsonRpcException: void <init>(com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError)>($r6);

        throw $r5;

     label1:
        return $r4;
    }
    public com.facebook.stetho.inspector.helper.ObjectIdMapper getObjects()
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.helper.ObjectIdMapper r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        r1 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.helper.ObjectIdMapper mObjects>;

        return r1;
    }
    public com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getProperties(org.json.JSONObject) throws com.facebook.stetho.inspector.jsonrpc.JsonRpcException
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        org.json.JSONObject $r1;
        com.facebook.stetho.json.ObjectMapper $r2;
        java.lang.Object $r3, r8;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesRequest r4;
        boolean $z0;
        com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse r5;
        java.util.ArrayList $r6;
        java.lang.String $r7;
        java.lang.Class $r9;
        java.util.List $r10;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer r11;
        java.util.Set r12;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.json.ObjectMapper mObjectMapper>;

        $r3 = virtualinvoke $r2.<com.facebook.stetho.json.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>($r1, class "Lcom/facebook/stetho/inspector/protocol/module/Runtime$GetPropertiesRequest;");

        r4 = (com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesRequest) $r3;

        $z0 = r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesRequest: boolean ownProperties>;

        if $z0 != 0 goto label1;

        r5 = new com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse;

        specialinvoke r5.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: void <init>(com.facebook.stetho.inspector.protocol.module.Runtime$1)>(null);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r5.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse: java.util.List result> = $r6;

        return r5;

     label1:
        $r7 = r4.<com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesRequest: java.lang.String objectId>;

        $r3 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: java.lang.Object getObjectOrThrow(java.lang.String)>($r7);

        r8 = $r3;

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        r8 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: java.util.List arrayToList(java.lang.Object)>($r3);

     label2:
        $z0 = r8 instanceof com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer;

        if $z0 == 0 goto label3;

        r11 = (com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer) r8;

        r5 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForProtoContainer(com.facebook.stetho.inspector.protocol.module.Runtime$ObjectProtoContainer)>(r11);

        return r5;

     label3:
        $z0 = r8 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r10 = (java.util.List) r8;

        r5 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForIterable(java.lang.Iterable,boolean)>($r10, 1);

        return r5;

     label4:
        $z0 = r8 instanceof java.util.Set;

        if $z0 == 0 goto label5;

        r12 = (java.util.Set) r8;

        r5 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForIterable(java.lang.Iterable,boolean)>(r12, 0);

        return r5;

     label5:
        $z0 = r8 instanceof java.util.Map;

        if $z0 == 0 goto label6;

        r5 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForMap(java.lang.Object)>(r8);

        return r5;

     label6:
        r5 = specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.protocol.module.Runtime$GetPropertiesResponse getPropertiesForObject(java.lang.Object)>(r8);

        return r5;
    }
    public com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject objectForRemote(java.lang.Object)
    {
        com.facebook.stetho.inspector.protocol.module.Runtime$Session r0;
        com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject r1;
        java.lang.Object r2;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType $r3;
        com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType $r4;
        boolean $z0;
        java.lang.Character r5;
        char $c0;
        java.lang.Integer $r6;
        java.lang.String $r7;
        com.facebook.stetho.inspector.helper.ObjectIdMapper $r8;
        int $i1;
        java.lang.Class $r9;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Runtime$Session;

        r2 := @parameter0: java.lang.Object;

        r1 = new com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject;

        specialinvoke r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: void <init>()>();

        if r2 != null goto label1;

        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType OBJECT>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        $r4 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType NULL>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectSubType subtype> = $r4;

        r2 = <org.json.JSONObject: java.lang.Object NULL>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = r2;

        return r1;

     label1:
        $z0 = r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType BOOLEAN>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = r2;

        return r1;

     label2:
        $z0 = r2 instanceof java.lang.Number;

        if $z0 == 0 goto label3;

        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType NUMBER>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = r2;

        return r1;

     label3:
        $z0 = r2 instanceof java.lang.Character;

        if $z0 == 0 goto label4;

        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType NUMBER>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        r5 = (java.lang.Character) r2;

        $c0 = virtualinvoke r5.<java.lang.Character: char charValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($c0);

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = $r6;

        return r1;

     label4:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType STRING>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.Object value> = $r7;

        return r1;

     label5:
        $r3 = <com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType OBJECT>;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: com.facebook.stetho.inspector.protocol.module.Runtime$ObjectType type> = $r3;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String className> = "What??";

        $r8 = r0.<com.facebook.stetho.inspector.protocol.module.Runtime$Session: com.facebook.stetho.inspector.helper.ObjectIdMapper mObjects>;

        $i1 = virtualinvoke $r8.<com.facebook.stetho.inspector.helper.ObjectIdMapper: int putObject(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String objectId> = $r7;

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label6;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = "array";

        return r1;

     label6:
        $z0 = r2 instanceof java.util.List;

        if $z0 == 0 goto label7;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = "List";

        return r1;

     label7:
        $z0 = r2 instanceof java.util.Set;

        if $z0 == 0 goto label8;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = "Set";

        return r1;

     label8:
        $z0 = r2 instanceof java.util.Map;

        if $z0 == 0 goto label9;

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = "Map";

        return r1;

     label9:
        $r7 = staticinvoke <com.facebook.stetho.inspector.protocol.module.Runtime: java.lang.String access$300(java.lang.Object)>(r2);

        r1.<com.facebook.stetho.inspector.protocol.module.Runtime$RemoteObject: java.lang.String description> = $r7;

        return r1;
    }
