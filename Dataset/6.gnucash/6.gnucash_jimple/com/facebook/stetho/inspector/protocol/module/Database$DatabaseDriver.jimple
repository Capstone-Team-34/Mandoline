com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver extends java.lang.Object
protected android.content.Context mContext
    public void <init>(android.content.Context)
    {
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver r0;
        android.content.Context $r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: android.content.Context mContext> = $r1;

        return;
    }
    static void access$300(com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver, com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver $r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver;

        $r1 := @parameter1: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: void onRegistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
    static void access$400(com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver, com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver $r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;

        $r0 := @parameter0: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver;

        $r1 := @parameter1: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        specialinvoke $r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: void onUnregistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)>($r1);

        return;
    }
    private final void onRegistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject r2;
        com.facebook.stetho.inspector.protocol.module.Database$AddDatabaseEvent r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String r7;
        android.content.Context $r8;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        $r4 = virtualinvoke r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: java.util.List getDatabaseNames()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        r2 = new com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject;

        specialinvoke r2.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject: void <init>()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject: java.lang.String id> = r7;

        r2.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject: java.lang.String name> = r7;

        $r8 = r0.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver: android.content.Context mContext>;

        r7 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        r2.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject: java.lang.String domain> = r7;

        r2.<com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject: java.lang.String version> = "N/A";

        r3 = new com.facebook.stetho.inspector.protocol.module.Database$AddDatabaseEvent;

        specialinvoke r3.<com.facebook.stetho.inspector.protocol.module.Database$AddDatabaseEvent: void <init>()>();

        r3.<com.facebook.stetho.inspector.protocol.module.Database$AddDatabaseEvent: com.facebook.stetho.inspector.protocol.module.Database$DatabaseObject database> = r2;

        virtualinvoke $r1.<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer: void invokeMethod(java.lang.String,java.lang.Object,com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback)>("Database.addDatabase", r3, null);

        goto label1;

     label2:
        return;
    }
    private final void onUnregistered(com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer)
    {
        com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver r0;
        com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer $r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver;

        $r1 := @parameter0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer;

        return;
    }
public abstract com.facebook.stetho.inspector.protocol.module.Database$ExecuteSQLResponse executeSQL(java.lang.String, java.lang.String, com.facebook.stetho.inspector.protocol.module.Database$DatabaseDriver$ExecuteResultHandler) throws android.database.sqlite.SQLiteException { 
// no body
} 
public abstract java.util.List getDatabaseNames() { 
// no body
} 
public abstract java.util.List getTableNames(java.lang.String) { 
// no body
} 
