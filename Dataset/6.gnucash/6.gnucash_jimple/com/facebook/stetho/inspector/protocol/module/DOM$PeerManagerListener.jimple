com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener extends com.facebook.stetho.inspector.helper.PeersRegisteredListener
final com.facebook.stetho.inspector.protocol.module.DOM this$0
    private void <init>(com.facebook.stetho.inspector.protocol.module.DOM)
    {
        com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener r0;
        com.facebook.stetho.inspector.protocol.module.DOM $r1;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0> = $r1;

        specialinvoke r0.<com.facebook.stetho.inspector.helper.PeersRegisteredListener: void <init>()>();

        return;
    }
    void <init>(com.facebook.stetho.inspector.protocol.module.DOM, com.facebook.stetho.inspector.protocol.module.DOM$1)
    {
        com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener r0;
        com.facebook.stetho.inspector.protocol.module.DOM $r1;
        com.facebook.stetho.inspector.protocol.module.DOM$1 $r2;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener;

        $r1 := @parameter0: com.facebook.stetho.inspector.protocol.module.DOM;

        $r2 := @parameter1: com.facebook.stetho.inspector.protocol.module.DOM$1;

        specialinvoke r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: void <init>(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        return;
    }
    protected void onFirstPeerRegistered()
    {
        com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener r0;
        com.facebook.stetho.inspector.protocol.module.DOM $r1;
        com.facebook.stetho.inspector.elements.Document $r2;
        com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r2 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document access$300(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        virtualinvoke $r2.<com.facebook.stetho.inspector.elements.Document: void addRef()>();

        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r2 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document access$300(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r3 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener access$1900(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        virtualinvoke $r2.<com.facebook.stetho.inspector.elements.Document: void addUpdateListener(com.facebook.stetho.inspector.elements.Document$UpdateListener)>($r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    protected void onLastPeerUnregistered()
    {
        com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener r0;
        com.facebook.stetho.inspector.protocol.module.DOM $r1;
        java.util.Map $r2;
        com.facebook.stetho.inspector.elements.Document $r3;
        com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r2 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: java.util.Map access$2000(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r3 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document access$300(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r4 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.protocol.module.DOM$DocumentUpdateListener access$1900(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Document: void removeUpdateListener(com.facebook.stetho.inspector.elements.Document$UpdateListener)>($r4);

        $r1 = r0.<com.facebook.stetho.inspector.protocol.module.DOM$PeerManagerListener: com.facebook.stetho.inspector.protocol.module.DOM this$0>;

        $r3 = staticinvoke <com.facebook.stetho.inspector.protocol.module.DOM: com.facebook.stetho.inspector.elements.Document access$300(com.facebook.stetho.inspector.protocol.module.DOM)>($r1);

        virtualinvoke $r3.<com.facebook.stetho.inspector.elements.Document: void release()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
