com.facebook.stetho.websocket.WebSocketHandler extends java.lang.Object implements com.facebook.stetho.server.http.HttpHandler
private static final java.lang.String HEADER_CONNECTION
private static final java.lang.String HEADER_CONNECTION_UPGRADE
private static final java.lang.String HEADER_SEC_WEBSOCKET_ACCEPT
private static final java.lang.String HEADER_SEC_WEBSOCKET_KEY
private static final java.lang.String HEADER_SEC_WEBSOCKET_PROTOCOL
private static final java.lang.String HEADER_SEC_WEBSOCKET_VERSION
private static final java.lang.String HEADER_SEC_WEBSOCKET_VERSION_13
private static final java.lang.String HEADER_UPGRADE
private static final java.lang.String HEADER_UPGRADE_WEBSOCKET
private static final java.lang.String SERVER_KEY_GUID
private final com.facebook.stetho.websocket.SimpleEndpoint mEndpoint
    public void <init>(com.facebook.stetho.websocket.SimpleEndpoint)
    {
        com.facebook.stetho.websocket.WebSocketHandler r0;
        com.facebook.stetho.websocket.SimpleEndpoint $r1;

        r0 := @this: com.facebook.stetho.websocket.WebSocketHandler;

        $r1 := @parameter0: com.facebook.stetho.websocket.SimpleEndpoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.stetho.websocket.WebSocketHandler: com.facebook.stetho.websocket.SimpleEndpoint mEndpoint> = $r1;

        return;
    }
    private void doUpgrade(com.facebook.stetho.server.SocketLike, com.facebook.stetho.server.http.LightHttpRequest, com.facebook.stetho.server.http.LightHttpResponse) throws java.io.IOException
    {
        com.facebook.stetho.websocket.WebSocketHandler r0;
        com.facebook.stetho.server.SocketLike $r1;
        com.facebook.stetho.server.http.LightHttpRequest $r2;
        com.facebook.stetho.server.http.LightHttpResponse $r3;
        com.facebook.stetho.websocket.WebSocketSession r4;
        java.lang.String $r5;
        java.io.InputStream $r6;
        java.io.OutputStream $r7;
        com.facebook.stetho.server.http.LightHttpServer$HttpMessageWriter $r8;
        java.io.BufferedOutputStream $r9;
        com.facebook.stetho.websocket.SimpleEndpoint $r10;

        r0 := @this: com.facebook.stetho.websocket.WebSocketHandler;

        $r1 := @parameter0: com.facebook.stetho.server.SocketLike;

        $r2 := @parameter1: com.facebook.stetho.server.http.LightHttpRequest;

        $r3 := @parameter2: com.facebook.stetho.server.http.LightHttpResponse;

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: int code> = 101;

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: java.lang.String reasonPhrase> = "Switching Protocols";

        virtualinvoke $r3.<com.facebook.stetho.server.http.LightHttpResponse: void addHeader(java.lang.String,java.lang.String)>("Upgrade", "websocket");

        virtualinvoke $r3.<com.facebook.stetho.server.http.LightHttpResponse: void addHeader(java.lang.String,java.lang.String)>("Connection", "Upgrade");

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: com.facebook.stetho.server.http.LightHttpBody body> = null;

        $r5 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String getFirstHeaderValue(com.facebook.stetho.server.http.LightHttpMessage,java.lang.String)>($r2, "Sec-WebSocket-Key");

        if $r5 == null goto label1;

        $r5 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String generateServerKey(java.lang.String)>($r5);

        virtualinvoke $r3.<com.facebook.stetho.server.http.LightHttpResponse: void addHeader(java.lang.String,java.lang.String)>("Sec-WebSocket-Accept", $r5);

     label1:
        $r6 = virtualinvoke $r1.<com.facebook.stetho.server.SocketLike: java.io.InputStream getInput()>();

        $r7 = virtualinvoke $r1.<com.facebook.stetho.server.SocketLike: java.io.OutputStream getOutput()>();

        $r8 = new com.facebook.stetho.server.http.LightHttpServer$HttpMessageWriter;

        $r9 = new java.io.BufferedOutputStream;

        specialinvoke $r9.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);

        specialinvoke $r8.<com.facebook.stetho.server.http.LightHttpServer$HttpMessageWriter: void <init>(java.io.BufferedOutputStream)>($r9);

        staticinvoke <com.facebook.stetho.server.http.LightHttpServer: void writeResponseMessage(com.facebook.stetho.server.http.LightHttpResponse,com.facebook.stetho.server.http.LightHttpServer$HttpMessageWriter)>($r3, $r8);

        r4 = new com.facebook.stetho.websocket.WebSocketSession;

        $r10 = r0.<com.facebook.stetho.websocket.WebSocketHandler: com.facebook.stetho.websocket.SimpleEndpoint mEndpoint>;

        specialinvoke r4.<com.facebook.stetho.websocket.WebSocketSession: void <init>(java.io.InputStream,java.io.OutputStream,com.facebook.stetho.websocket.SimpleEndpoint)>($r6, $r7, $r10);

        virtualinvoke r4.<com.facebook.stetho.websocket.WebSocketSession: void handle()>();

        return;
    }
    private static java.lang.String generateServerKey(java.lang.String)
    {
        java.lang.String $r0;
        java.security.NoSuchAlgorithmException r1;
        java.lang.StringBuilder $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        java.lang.RuntimeException $r5;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("258EAFA5-E914-47DA-95CA-C5AB0DC85B11");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        $r4 = staticinvoke <com.facebook.stetho.common.Utf8Charset: byte[] encodeUTF8(java.lang.String)>($r0);

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, 2);

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    private static java.lang.String getFirstHeaderValue(com.facebook.stetho.server.http.LightHttpMessage, java.lang.String)
    {
        com.facebook.stetho.server.http.LightHttpMessage $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.facebook.stetho.server.http.LightHttpMessage;

        $r1 := @parameter1: java.lang.String;

        $r1 = virtualinvoke $r0.<com.facebook.stetho.server.http.LightHttpMessage: java.lang.String getFirstHeaderValue(java.lang.String)>($r1);

        return $r1;
    }
    private static boolean isSupportableUpgradeRequest(com.facebook.stetho.server.http.LightHttpRequest)
    {
        com.facebook.stetho.server.http.LightHttpRequest $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: com.facebook.stetho.server.http.LightHttpRequest;

        $r1 = "websocket";

        $r2 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String getFirstHeaderValue(com.facebook.stetho.server.http.LightHttpMessage,java.lang.String)>($r0, "Upgrade");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r1 = "Upgrade";

        $r2 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String getFirstHeaderValue(com.facebook.stetho.server.http.LightHttpMessage,java.lang.String)>($r0, "Connection");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = "13";

        $r2 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String getFirstHeaderValue(com.facebook.stetho.server.http.LightHttpMessage,java.lang.String)>($r0, "Sec-WebSocket-Version");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean handleRequest(com.facebook.stetho.server.SocketLike, com.facebook.stetho.server.http.LightHttpRequest, com.facebook.stetho.server.http.LightHttpResponse) throws java.io.IOException
    {
        com.facebook.stetho.websocket.WebSocketHandler r0;
        com.facebook.stetho.server.SocketLike $r1;
        com.facebook.stetho.server.http.LightHttpRequest $r2;
        com.facebook.stetho.server.http.LightHttpResponse $r3;
        boolean $z0;
        com.facebook.stetho.server.http.LightHttpBody $r4;

        r0 := @this: com.facebook.stetho.websocket.WebSocketHandler;

        $r1 := @parameter0: com.facebook.stetho.server.SocketLike;

        $r2 := @parameter1: com.facebook.stetho.server.http.LightHttpRequest;

        $r3 := @parameter2: com.facebook.stetho.server.http.LightHttpResponse;

        $z0 = staticinvoke <com.facebook.stetho.websocket.WebSocketHandler: boolean isSupportableUpgradeRequest(com.facebook.stetho.server.http.LightHttpRequest)>($r2);

        if $z0 != 0 goto label1;

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: int code> = 501;

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: java.lang.String reasonPhrase> = "Not Implemented";

        $r4 = staticinvoke <com.facebook.stetho.server.http.LightHttpBody: com.facebook.stetho.server.http.LightHttpBody create(java.lang.String,java.lang.String)>("Not a supported WebSocket upgrade request\n", "text/plain");

        $r3.<com.facebook.stetho.server.http.LightHttpResponse: com.facebook.stetho.server.http.LightHttpBody body> = $r4;

        return 1;

     label1:
        specialinvoke r0.<com.facebook.stetho.websocket.WebSocketHandler: void doUpgrade(com.facebook.stetho.server.SocketLike,com.facebook.stetho.server.http.LightHttpRequest,com.facebook.stetho.server.http.LightHttpResponse)>($r1, $r2, $r3);

        return 0;
    }
