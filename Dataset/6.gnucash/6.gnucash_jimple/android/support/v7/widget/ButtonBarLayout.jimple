android.support.v7.widget.ButtonBarLayout extends android.widget.LinearLayout
private boolean mAllowStacking
private int mLastWidthSize
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.ButtonBarLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.ButtonBarLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<android.support.v7.widget.ButtonBarLayout: int mLastWidthSize> = -1;

        $r3 = <android.support.v7.appcompat.R$styleable: int[] ButtonBarLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <android.support.v7.appcompat.R$styleable: int ButtonBarLayout_allowStacking>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    private boolean isStacked()
    {
        android.support.v7.widget.ButtonBarLayout r0;
        int $i0;

        r0 := @this: android.support.v7.widget.ButtonBarLayout;

        $i0 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getOrientation()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void setStacked(boolean)
    {
        android.support.v7.widget.ButtonBarLayout r0;
        boolean $z0;
        byte $b0;
        int $i1;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.ButtonBarLayout;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label6;

        $b0 = 1;

     label1:
        virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: void setOrientation(int)>($b0);

        if $z0 == 0 goto label7;

        $b0 = 5;

     label2:
        virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: void setGravity(int)>($b0);

        $i1 = <android.support.v7.appcompat.R$id: int spacer>;

        $r1 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: android.view.View findViewById(int)>($i1);

        if $r1 == null goto label4;

        if $z0 == 0 goto label8;

        $b0 = 8;

     label3:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b0);

     label4:
        $i1 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getChildCount()>();

        $i1 = $i1 + -2;

     label5:
        if $i1 < 0 goto label9;

        $r1 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: android.view.View getChildAt(int)>($i1);

        virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: void bringChildToFront(android.view.View)>($r1);

        $i1 = $i1 + -1;

        goto label5;

     label6:
        $b0 = 0;

        goto label1;

     label7:
        $b0 = 80;

        goto label2;

     label8:
        $b0 = 4;

        goto label3;

     label9:
        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.v7.widget.ButtonBarLayout r0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6;
        boolean z0, $z1, $z2;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.ButtonBarLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        z0 = 0;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $z1 = r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z1 == 0 goto label02;

        $i3 = r0.<android.support.v7.widget.ButtonBarLayout: int mLastWidthSize>;

        if i2 <= $i3 goto label01;

        $z1 = specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: boolean isStacked()>();

        if $z1 == 0 goto label01;

        specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: void setStacked(boolean)>(0);

     label01:
        r0.<android.support.v7.widget.ButtonBarLayout: int mLastWidthSize> = i2;

     label02:
        $z1 = 0;

        $z2 = specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: boolean isStacked()>();

        if $z2 != 0 goto label06;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        if $i3 != 1073741824 goto label06;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, -2147483648);

        $z1 = 1;

     label03:
        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i3, $i1);

        $z2 = r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z2 == 0 goto label05;

        $z2 = specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: boolean isStacked()>();

        if $z2 != 0 goto label05;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 11 goto label07;

        i2 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)>(r0);

        i2 = i2 & -16777216;

        if i2 != 16777216 goto label04;

        z0 = 1;

     label04:
        if z0 == 0 goto label05;

        specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: void setStacked(boolean)>(1);

        $z1 = 1;

     label05:
        if $z1 == 0 goto label10;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        return;

     label06:
        $i3 = $i0;

        goto label03;

     label07:
        $i3 = 0;

        i4 = 0;

        $i5 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getChildCount()>();

     label08:
        if i4 >= $i5 goto label09;

        $r1 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: android.view.View getChildAt(int)>(i4);

        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $i3 + $i6;

        i4 = i4 + 1;

        goto label08;

     label09:
        i4 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getPaddingLeft()>();

        $i3 = i4 + $i3;

        i4 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getPaddingRight()>();

        $i3 = $i3 + i4;

        if $i3 <= i2 goto label04;

        z0 = 1;

        goto label04;

     label10:
        return;
    }
    public void setAllowStacking(boolean)
    {
        android.support.v7.widget.ButtonBarLayout r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.v7.widget.ButtonBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z1 == $z0 goto label2;

        r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking> = $z0;

        $z0 = r0.<android.support.v7.widget.ButtonBarLayout: boolean mAllowStacking>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: int getOrientation()>();

        if $i0 != 1 goto label1;

        specialinvoke r0.<android.support.v7.widget.ButtonBarLayout: void setStacked(boolean)>(0);

     label1:
        virtualinvoke r0.<android.support.v7.widget.ButtonBarLayout: void requestLayout()>();

     label2:
        return;
    }
