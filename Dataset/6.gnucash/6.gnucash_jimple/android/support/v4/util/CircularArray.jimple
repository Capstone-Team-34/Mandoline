android.support.v4.util.CircularArray extends java.lang.Object
private int mCapacityBitmask
private java.lang.Object[] mElements
private int mHead
private int mTail
    public void <init>()
    {
        android.support.v4.util.CircularArray r0;

        r0 := @this: android.support.v4.util.CircularArray;

        specialinvoke r0.<android.support.v4.util.CircularArray: void <init>(int)>(8);

        return;
    }
    public void <init>(int)
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be >= 1");

        throw $r1;

     label1:
        if $i0 <= 1073741824 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be <= 2^30");

        throw $r1;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        if $i1 == 1 goto label4;

        $i0 = $i0 + -1;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        $i0 = $i0 << 1;

     label3:
        $i1 = $i0 + -1;

        r0.<android.support.v4.util.CircularArray: int mCapacityBitmask> = $i1;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements> = $r2;

        return;

     label4:
        goto label3;
    }
    private void doubleCapacity()
    {
        android.support.v4.util.CircularArray r0;
        int i0, i1, i2, $i3;
        java.lang.Object[] $r1, $r3;
        java.lang.RuntimeException $r2;

        r0 := @this: android.support.v4.util.CircularArray;

        $r1 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        i0 = lengthof $r1;

        i1 = r0.<android.support.v4.util.CircularArray: int mHead>;

        i2 = i0 - i1;

        i1 = i0 << 1;

        if i1 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Max array capacity exceeded");

        throw $r2;

     label1:
        $r1 = newarray (java.lang.Object)[i1];

        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i3 = r0.<android.support.v4.util.CircularArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r1, 0, i2);

        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i3 = r0.<android.support.v4.util.CircularArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1, i2, $i3);

        r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements> = $r1;

        r0.<android.support.v4.util.CircularArray: int mHead> = 0;

        r0.<android.support.v4.util.CircularArray: int mTail> = i0;

        i0 = i1 + -1;

        r0.<android.support.v4.util.CircularArray: int mCapacityBitmask> = i0;

        return;
    }
    public void addFirst(java.lang.Object)
    {
        android.support.v4.util.CircularArray r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.v4.util.CircularArray;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i0 = $i0 + -1;

        $i1 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        r0.<android.support.v4.util.CircularArray: int mHead> = $i0;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $r2[$i0] = r1;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<android.support.v4.util.CircularArray: void doubleCapacity()>();

     label1:
        return;
    }
    public void addLast(java.lang.Object)
    {
        android.support.v4.util.CircularArray r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        int $i0, $i1;

        r0 := @this: android.support.v4.util.CircularArray;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        $r2[$i0] = r1;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        r0.<android.support.v4.util.CircularArray: int mTail> = $i0;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mHead>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<android.support.v4.util.CircularArray: void doubleCapacity()>();

     label1:
        return;
    }
    public void clear()
    {
        android.support.v4.util.CircularArray r0;
        int $i0;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 = virtualinvoke r0.<android.support.v4.util.CircularArray: int size()>();

        virtualinvoke r0.<android.support.v4.util.CircularArray: void removeFromStart(int)>($i0);

        return;
    }
    public java.lang.Object get(int)
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.support.v4.util.CircularArray: int size()>();

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = $i1 + $i0;

        $i0 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        $r3 = $r2[$i0];

        return $r3;
    }
    public java.lang.Object getFirst()
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i0 != $i1 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $r3 = $r2[$i0];

        return $r3;
    }
    public java.lang.Object getLast()
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i0 != $i1 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        $i1 = $i0 + -1;

        $i0 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i1 & $i0;

        $r3 = $r2[$i0];

        return $r3;
    }
    public boolean isEmpty()
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.util.CircularArray;

        $i1 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.Object popFirst()
    {
        android.support.v4.util.CircularArray r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i0 != $i1 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        r1 = $r3[$i0];

        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $r3[$i0] = null;

        $i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        r0.<android.support.v4.util.CircularArray: int mHead> = $i0;

        return r1;
    }
    public java.lang.Object popLast()
    {
        android.support.v4.util.CircularArray r0;
        java.lang.Object r1;
        int i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;

        r0 := @this: android.support.v4.util.CircularArray;

        i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if i0 != $i1 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        i0 = i0 + -1;

        $i1 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        i0 = i0 & $i1;

        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        r1 = $r3[i0];

        $r3 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $r3[i0] = null;

        r0.<android.support.v4.util.CircularArray: int mTail> = i0;

        return r1;
    }
    public void removeFromEnd(int)
    {
        android.support.v4.util.CircularArray r0;
        int i0, i1, $i2, $i3;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.v4.util.CircularArray;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return;

     label1:
        i1 = virtualinvoke r0.<android.support.v4.util.CircularArray: int size()>();

        if i0 <= i1 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        i1 = 0;

        $i2 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if i0 >= $i2 goto label3;

        i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        i1 = i1 - i0;

     label3:
        $i2 = i1;

     label4:
        $i3 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if $i2 >= $i3 goto label5;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $r2[$i2] = null;

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $i2 = r0.<android.support.v4.util.CircularArray: int mTail>;

        i1 = $i2 - i1;

        i0 = i0 - i1;

        $i2 = r0.<android.support.v4.util.CircularArray: int mTail>;

        i1 = $i2 - i1;

        r0.<android.support.v4.util.CircularArray: int mTail> = i1;

        if i0 <= 0 goto label8;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        i1 = lengthof $r2;

        r0.<android.support.v4.util.CircularArray: int mTail> = i1;

        i1 = r0.<android.support.v4.util.CircularArray: int mTail>;

        i0 = i1 - i0;

        i1 = i0;

     label6:
        $i2 = r0.<android.support.v4.util.CircularArray: int mTail>;

        if i1 >= $i2 goto label7;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $r2[i1] = null;

        i1 = i1 + 1;

        goto label6;

     label7:
        r0.<android.support.v4.util.CircularArray: int mTail> = i0;

     label8:
        return;
    }
    public void removeFromStart(int)
    {
        android.support.v4.util.CircularArray r0;
        int i0, $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.support.v4.util.CircularArray;

        $i1 := @parameter0: int;

        if $i1 > 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<android.support.v4.util.CircularArray: int size()>();

        if $i1 <= i0 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        i0 = lengthof $r2;

        $i2 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i2 = i0 - $i2;

        if $i1 >= $i2 goto label3;

        i0 = r0.<android.support.v4.util.CircularArray: int mHead>;

        i0 = i0 + $i1;

     label3:
        $i2 = r0.<android.support.v4.util.CircularArray: int mHead>;

     label4:
        if $i2 >= i0 goto label5;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $r2[$i2] = null;

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $i2 = r0.<android.support.v4.util.CircularArray: int mHead>;

        i0 = i0 - $i2;

        $i1 = $i1 - i0;

        $i2 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i2 = $i2 + i0;

        i0 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        i0 = $i2 & i0;

        r0.<android.support.v4.util.CircularArray: int mHead> = i0;

        if $i1 <= 0 goto label8;

        i0 = 0;

     label6:
        if i0 >= $i1 goto label7;

        $r2 = r0.<android.support.v4.util.CircularArray: java.lang.Object[] mElements>;

        $r2[i0] = null;

        i0 = i0 + 1;

        goto label6;

     label7:
        r0.<android.support.v4.util.CircularArray: int mHead> = $i1;

     label8:
        return;
    }
    public int size()
    {
        android.support.v4.util.CircularArray r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.util.CircularArray;

        $i0 = r0.<android.support.v4.util.CircularArray: int mTail>;

        $i1 = r0.<android.support.v4.util.CircularArray: int mHead>;

        $i0 = $i0 - $i1;

        $i1 = r0.<android.support.v4.util.CircularArray: int mCapacityBitmask>;

        $i0 = $i0 & $i1;

        return $i0;
    }
