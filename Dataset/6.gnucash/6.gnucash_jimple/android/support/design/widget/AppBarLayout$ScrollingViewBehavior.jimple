android.support.design.widget.AppBarLayout$ScrollingViewBehavior extends android.support.design.widget.HeaderScrollingViewBehavior
    public void <init>()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: void <init>()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <android.support.design.R$styleable: int[] ScrollingViewBehavior_Params>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <android.support.design.R$styleable: int ScrollingViewBehavior_Params_behavior_overlapTop>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: void setOverlayTop(int)>($i0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    private static int getAppBarLayoutOffset(android.support.design.widget.AppBarLayout)
    {
        android.support.design.widget.AppBarLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;
        android.support.design.widget.CoordinatorLayout$Behavior $r3;
        boolean $z0;
        android.support.design.widget.AppBarLayout$Behavior r4;
        int $i0;

        $r0 := @parameter0: android.support.design.widget.AppBarLayout;

        $r1 = virtualinvoke $r0.<android.support.design.widget.AppBarLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r1;

        $r3 = virtualinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        $z0 = $r3 instanceof android.support.design.widget.AppBarLayout$Behavior;

        if $z0 == 0 goto label1;

        r4 = (android.support.design.widget.AppBarLayout$Behavior) $r3;

        $i0 = virtualinvoke r4.<android.support.design.widget.AppBarLayout$Behavior: int getTopBottomOffsetForScrollingSibling()>();

        return $i0;

     label1:
        return 0;
    }
    private void offsetChildAsNeeded(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;
        boolean $z0;
        android.support.design.widget.AppBarLayout$Behavior r7;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        $z0 = $r6 instanceof android.support.design.widget.AppBarLayout$Behavior;

        if $z0 == 0 goto label1;

        r7 = (android.support.design.widget.AppBarLayout$Behavior) $r6;

        virtualinvoke r7.<android.support.design.widget.AppBarLayout$Behavior: int getTopBottomOffsetForScrollingSibling()>();

        $i0 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i0 = $i0 - $i1;

        $i1 = staticinvoke <android.support.design.widget.AppBarLayout$Behavior: int access$1000(android.support.design.widget.AppBarLayout$Behavior)>(r7);

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int getVerticalLayoutGap()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int getOverlapPixelsForOffset(android.view.View)>($r3);

        $i0 = $i0 - $i1;

        staticinvoke <android.support.v4.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>($r2, $i0);

     label1:
        return;
    }
    android.view.View findFirstDependency(java.util.List)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        java.util.List r1;
        boolean $z0;
        int i0, $i1;
        java.lang.Object $r2;
        android.view.View r3;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        r1 := @parameter0: java.util.List;

        i0 = 0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (android.view.View) $r2;

        $z0 = r3 instanceof android.support.design.widget.AppBarLayout;

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    public volatile int getLeftAndRightOffset()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getLeftAndRightOffset()>();

        return $i0;
    }
    float getOverlapRatioForOffset(android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.view.View $r1;
        int i0, $i1, $i2, $i3;
        float $f0, $f1;
        boolean $z0;
        android.support.design.widget.AppBarLayout r2;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof android.support.design.widget.AppBarLayout;

        if $z0 == 0 goto label2;

        r2 = (android.support.design.widget.AppBarLayout) $r1;

        i0 = virtualinvoke r2.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        $i1 = staticinvoke <android.support.design.widget.AppBarLayout: int access$200(android.support.design.widget.AppBarLayout)>(r2);

        $i2 = staticinvoke <android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int getAppBarLayoutOffset(android.support.design.widget.AppBarLayout)>(r2);

        if $i1 == 0 goto label1;

        $i3 = i0 + $i2;

        if $i3 > $i1 goto label1;

        return 0.0F;

     label1:
        i0 = i0 - $i1;

        if i0 == 0 goto label2;

        $f1 = (float) $i2;

        $f0 = (float) i0;

        $f0 = $f1 / $f0;

        $f0 = 1.0F + $f0;

        return $f0;

     label2:
        return 0.0F;
    }
    int getScrollRange(android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.view.View r1;
        boolean $z0;
        android.support.design.widget.AppBarLayout r2;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof android.support.design.widget.AppBarLayout;

        if $z0 == 0 goto label1;

        r2 = (android.support.design.widget.AppBarLayout) r1;

        $i0 = virtualinvoke r2.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getScrollRange(android.view.View)>(r1);

        return $i0;
    }
    public volatile int getTopAndBottomOffset()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getTopAndBottomOffset()>();

        return $i0;
    }
    public boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $z0 = $r3 instanceof android.support.design.widget.AppBarLayout;

        return $z0;
    }
    public boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r3;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        specialinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: void offsetChildAsNeeded(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>($r1, $r2, $r3);

        return 0;
    }
    public volatile boolean onLayoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        return $z0;
    }
    public volatile boolean onMeasureChild(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int, int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)>($r1, $r2, $i0, $i1, $i2, $i3);

        return $z0;
    }
    public volatile boolean setLeftAndRightOffset(int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: boolean setLeftAndRightOffset(int)>($i0);

        return $z0;
    }
    public volatile boolean setTopAndBottomOffset(int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: boolean setTopAndBottomOffset(int)>($i0);

        return $z0;
    }
