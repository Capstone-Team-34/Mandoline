android.support.design.widget.SwipeDismissBehavior extends android.support.design.widget.CoordinatorLayout$Behavior
private static final float DEFAULT_ALPHA_END_DISTANCE
private static final float DEFAULT_ALPHA_START_DISTANCE
private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
public static final int STATE_DRAGGING
public static final int STATE_IDLE
public static final int STATE_SETTLING
public static final int SWIPE_DIRECTION_ANY
public static final int SWIPE_DIRECTION_END_TO_START
public static final int SWIPE_DIRECTION_START_TO_END
private float mAlphaEndSwipeDistance
private float mAlphaStartSwipeDistance
private final android.support.v4.widget.ViewDragHelper$Callback mDragCallback
private float mDragDismissThreshold
private boolean mIgnoreEvents
private android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener
private float mSensitivity
private boolean mSensitivitySet
private int mSwipeDirection
private android.support.v4.widget.ViewDragHelper mViewDragHelper
    public void <init>()
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.support.design.widget.SwipeDismissBehavior$1 $r1;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout$Behavior: void <init>()>();

        r0.<android.support.design.widget.SwipeDismissBehavior: float mSensitivity> = 0.0F;

        r0.<android.support.design.widget.SwipeDismissBehavior: int mSwipeDirection> = 2;

        r0.<android.support.design.widget.SwipeDismissBehavior: float mDragDismissThreshold> = 0.5F;

        r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaStartSwipeDistance> = 0.0F;

        r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaEndSwipeDistance> = 0.5F;

        $r1 = new android.support.design.widget.SwipeDismissBehavior$1;

        specialinvoke $r1.<android.support.design.widget.SwipeDismissBehavior$1: void <init>(android.support.design.widget.SwipeDismissBehavior)>(r0);

        r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback> = $r1;

        return;
    }
    static android.support.design.widget.SwipeDismissBehavior$OnDismissListener access$000(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        android.support.design.widget.SwipeDismissBehavior$OnDismissListener r1;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        r1 = $r0.<android.support.design.widget.SwipeDismissBehavior: android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener>;

        return r1;
    }
    static android.support.v4.widget.ViewDragHelper access$100(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        android.support.v4.widget.ViewDragHelper r1;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        r1 = $r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        return r1;
    }
    static int access$200(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        int i0;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        i0 = $r0.<android.support.design.widget.SwipeDismissBehavior: int mSwipeDirection>;

        return i0;
    }
    static float access$300(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        float f0;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        f0 = $r0.<android.support.design.widget.SwipeDismissBehavior: float mDragDismissThreshold>;

        return f0;
    }
    static int access$400(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = staticinvoke <android.support.design.widget.SwipeDismissBehavior: int clamp(int,int,int)>($i0, $i1, $i2);

        return $i0;
    }
    static float access$500(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        float f0;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        f0 = $r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaStartSwipeDistance>;

        return f0;
    }
    static float access$600(android.support.design.widget.SwipeDismissBehavior)
    {
        android.support.design.widget.SwipeDismissBehavior $r0;
        float f0;

        $r0 := @parameter0: android.support.design.widget.SwipeDismissBehavior;

        f0 = $r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaEndSwipeDistance>;

        return f0;
    }
    static float access$700(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f0 = staticinvoke <android.support.design.widget.SwipeDismissBehavior: float clamp(float,float,float)>($f0, $f1, $f2);

        return $f0;
    }
    private static float clamp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f2);

        return $f0;
    }
    private static int clamp(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        return $i0;
    }
    private void ensureViewDragHelper(android.view.ViewGroup)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.view.ViewGroup $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        android.support.v4.widget.ViewDragHelper $r3;
        boolean $z0;
        float $f0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 := @parameter0: android.view.ViewGroup;

        $r3 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        if $r3 != null goto label3;

        $z0 = r0.<android.support.design.widget.SwipeDismissBehavior: boolean mSensitivitySet>;

        if $z0 == 0 goto label2;

        $f0 = r0.<android.support.design.widget.SwipeDismissBehavior: float mSensitivity>;

        $r2 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback>;

        $r3 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>($r1, $f0, $r2);

     label1:
        r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper> = $r3;

        return;

     label2:
        $r2 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper$Callback mDragCallback>;

        $r3 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r1, $r2);

        goto label1;

     label3:
        return;
    }
    static float fraction(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f2 = $f2 - $f0;

        $f0 = $f1 - $f0;

        $f0 = $f2 / $f0;

        return $f0;
    }
    public boolean canSwipeDismissView(android.view.View)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.view.View $r1;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 := @parameter0: android.view.View;

        return 1;
    }
    public int getDragState()
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        int $i0;
        android.support.v4.widget.ViewDragHelper $r1;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();

        return $i0;

     label1:
        return 0;
    }
    public boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        android.view.MotionEvent $r3;
        int $i0, $i1;
        float $f0;
        boolean $z0;
        android.support.v4.widget.ViewDragHelper $r4;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r3);

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z0 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>(r2, $i0, $i1);

        if $z0 != 0 goto label5;

        $z0 = 1;

     label2:
        r0.<android.support.design.widget.SwipeDismissBehavior: boolean mIgnoreEvents> = $z0;

     label3:
        $z0 = r0.<android.support.design.widget.SwipeDismissBehavior: boolean mIgnoreEvents>;

        if $z0 == 0 goto label6;

        return 0;

     label4:
        $z0 = r0.<android.support.design.widget.SwipeDismissBehavior: boolean mIgnoreEvents>;

        if $z0 == 0 goto label3;

        r0.<android.support.design.widget.SwipeDismissBehavior: boolean mIgnoreEvents> = 0;

        return 0;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        specialinvoke r0.<android.support.design.widget.SwipeDismissBehavior: void ensureViewDragHelper(android.view.ViewGroup)>($r1);

        $r4 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        $z0 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>($r3);

        return $z0;
    }
    public boolean onTouchEvent(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.MotionEvent)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View r2;
        android.view.MotionEvent $r3;
        android.support.v4.widget.ViewDragHelper $r4;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.MotionEvent;

        $r4 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        if $r4 == null goto label1;

        $r4 = r0.<android.support.design.widget.SwipeDismissBehavior: android.support.v4.widget.ViewDragHelper mViewDragHelper>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>($r3);

        return 1;

     label1:
        return 0;
    }
    public void setDragDismissDistance(float)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        float $f0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <android.support.design.widget.SwipeDismissBehavior: float clamp(float,float,float)>(0.0F, $f0, 1.0F);

        r0.<android.support.design.widget.SwipeDismissBehavior: float mDragDismissThreshold> = $f0;

        return;
    }
    public void setEndAlphaSwipeDistance(float)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        float $f0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <android.support.design.widget.SwipeDismissBehavior: float clamp(float,float,float)>(0.0F, $f0, 1.0F);

        r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaEndSwipeDistance> = $f0;

        return;
    }
    public void setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        android.support.design.widget.SwipeDismissBehavior$OnDismissListener $r1;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $r1 := @parameter0: android.support.design.widget.SwipeDismissBehavior$OnDismissListener;

        r0.<android.support.design.widget.SwipeDismissBehavior: android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener> = $r1;

        return;
    }
    public void setSensitivity(float)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        float $f0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $f0 := @parameter0: float;

        r0.<android.support.design.widget.SwipeDismissBehavior: float mSensitivity> = $f0;

        r0.<android.support.design.widget.SwipeDismissBehavior: boolean mSensitivitySet> = 1;

        return;
    }
    public void setStartAlphaSwipeDistance(float)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        float $f0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <android.support.design.widget.SwipeDismissBehavior: float clamp(float,float,float)>(0.0F, $f0, 1.0F);

        r0.<android.support.design.widget.SwipeDismissBehavior: float mAlphaStartSwipeDistance> = $f0;

        return;
    }
    public void setSwipeDirection(int)
    {
        android.support.design.widget.SwipeDismissBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.SwipeDismissBehavior;

        $i0 := @parameter0: int;

        r0.<android.support.design.widget.SwipeDismissBehavior: int mSwipeDirection> = $i0;

        return;
    }
