android.support.design.widget.FloatingActionButtonImpl extends java.lang.Object
static final int[] EMPTY_STATE_SET
static final int[] FOCUSED_ENABLED_STATE_SET
static final int[] PRESSED_ENABLED_STATE_SET
static final int SHOW_HIDE_ANIM_DURATION
android.support.design.widget.CircularBorderDrawable mBorderDrawable
android.graphics.drawable.Drawable mContentBackground
float mElevation
private android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener
float mPressedTranslationZ
android.graphics.drawable.Drawable mRippleDrawable
final android.support.design.widget.ShadowViewDelegate mShadowViewDelegate
android.graphics.drawable.Drawable mShapeDrawable
private final android.graphics.Rect mTmpRect
final android.support.design.widget.VisibilityAwareImageButton mView
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[2];

        $r0[0] = 16842919;

        $r0[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET> = $r0;

        $r0 = newarray (int)[2];

        $r0[0] = 16842908;

        $r0[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET> = $r0;

        $r0 = newarray (int)[0];

        <android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET> = $r0;

        return;
    }
    void <init>(android.support.design.widget.VisibilityAwareImageButton, android.support.design.widget.ShadowViewDelegate)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        android.support.design.widget.ShadowViewDelegate $r2;
        android.graphics.Rect $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.support.design.widget.VisibilityAwareImageButton;

        $r2 := @parameter1: android.support.design.widget.ShadowViewDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect mTmpRect> = $r3;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView> = $r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate> = $r2;

        return;
    }
    private void ensurePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.support.design.widget.FloatingActionButtonImpl$1 $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        if $r1 != null goto label1;

        $r2 = new android.support.design.widget.FloatingActionButtonImpl$1;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl$1: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener> = $r2;

     label1:
        return;
    }
    android.support.design.widget.CircularBorderDrawable createBorderDrawable(int, android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.ColorStateList $r1;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.content.res.Resources $r3;
        android.support.design.widget.CircularBorderDrawable $r4;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable newCircularDrawable()>();

        $i1 = <android.support.design.R$color: int design_fab_stroke_top_outer_color>;

        $i1 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>($i1);

        $i2 = <android.support.design.R$color: int design_fab_stroke_top_inner_color>;

        $i2 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>($i2);

        $i3 = <android.support.design.R$color: int design_fab_stroke_end_inner_color>;

        $i3 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>($i3);

        $i4 = <android.support.design.R$color: int design_fab_stroke_end_outer_color>;

        $i4 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>($i4);

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setGradientColors(int,int,int,int)>($i1, $i2, $i3, $i4);

        $f0 = (float) $i0;

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setBorderWidth(float)>($f0);

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setBorderTint(android.content.res.ColorStateList)>($r1);

        return $r4;
    }
    android.graphics.drawable.GradientDrawable createShapeDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.GradientDrawable r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke r1.<android.graphics.drawable.GradientDrawable: void <init>()>();

        virtualinvoke r1.<android.graphics.drawable.GradientDrawable: void setShape(int)>(1);

        virtualinvoke r1.<android.graphics.drawable.GradientDrawable: void setColor(int)>(-1);

        return r1;
    }
    final android.graphics.drawable.Drawable getContentBackground()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mContentBackground>;

        return r1;
    }
abstract float getElevation() { 
// no body
} 
abstract void getPadding(android.graphics.Rect) { 
// no body
} 
abstract void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean) { 
// no body
} 
abstract void jumpDrawableToCurrentState() { 
// no body
} 
    android.support.design.widget.CircularBorderDrawable newCircularDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.CircularBorderDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = new android.support.design.widget.CircularBorderDrawable;

        specialinvoke $r1.<android.support.design.widget.CircularBorderDrawable: void <init>()>();

        return $r1;
    }
    void onAttachedToWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        boolean $z0;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.view.ViewTreeObserver $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $z0 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean requirePreDrawListener()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void ensurePreDrawListener()>();

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label1:
        return;
    }
abstract void onCompatShadowChanged() { 
// no body
} 
    void onDetachedFromWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;
        android.support.design.widget.VisibilityAwareImageButton $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r2 = virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener> = null;

     label1:
        return;
    }
abstract void onDrawableStateChanged(int[]) { 
// no body
} 
abstract void onElevationChanged(float) { 
// no body
} 
    void onPaddingUpdated(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.Rect;

        return;
    }
    void onPreDraw()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return;
    }
abstract void onTranslationZChanged(float) { 
// no body
} 
    boolean requirePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return 0;
    }
abstract void setBackgroundDrawable(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int, int) { 
// no body
} 
abstract void setBackgroundTintList(android.content.res.ColorStateList) { 
// no body
} 
abstract void setBackgroundTintMode(android.graphics.PorterDuff$Mode) { 
// no body
} 
    final void setElevation(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation> = $f0;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationChanged(float)>($f0);

     label1:
        return;
    }
    final void setPressedTranslationZ(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ> = $f0;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onTranslationZChanged(float)>($f0);

     label1:
        return;
    }
abstract void setRippleColor(int) { 
// no body
} 
abstract void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean) { 
// no body
} 
    final void updatePadding()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect r1;
        android.support.design.widget.ShadowViewDelegate $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect mTmpRect>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)>(r1);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int top>;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r2.<android.support.design.widget.ShadowViewDelegate: void setShadowPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
