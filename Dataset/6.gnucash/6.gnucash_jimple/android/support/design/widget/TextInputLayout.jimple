android.support.design.widget.TextInputLayout extends android.widget.LinearLayout
private static final int ANIMATION_DURATION
private static final int INVALID_MAX_LENGTH
private static final java.lang.String LOG_TAG
private android.support.design.widget.ValueAnimatorCompat mAnimator
private final android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper
private boolean mCounterEnabled
private int mCounterMaxLength
private int mCounterOverflowTextAppearance
private boolean mCounterOverflowed
private int mCounterTextAppearance
private android.widget.TextView mCounterView
private android.content.res.ColorStateList mDefaultTextColor
private android.widget.EditText mEditText
private java.lang.CharSequence mError
private boolean mErrorEnabled
private boolean mErrorShown
private int mErrorTextAppearance
private android.widget.TextView mErrorView
private android.content.res.ColorStateList mFocusedTextColor
private boolean mHasReconstructedEditTextBackground
private java.lang.CharSequence mHint
private boolean mHintAnimationEnabled
private boolean mHintEnabled
private android.widget.LinearLayout mIndicatorArea
private int mIndicatorsAdded
private android.graphics.Paint mTmpPaint
    public void <init>(android.content.Context)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.support.design.widget.CollapsingTextHelper $r3;
        android.view.animation.Interpolator $r4;
        android.view.animation.AccelerateInterpolator $r5;
        int[] $r6;
        android.content.res.TypedArray $r7;
        boolean $z0, $z1;
        java.lang.CharSequence $r8;
        android.content.res.ColorStateList $r9;
        android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate $r10;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.support.design.widget.CollapsingTextHelper;

        specialinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void <init>(android.view.View)>(r0);

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper> = $r3;

        staticinvoke <android.support.design.widget.ThemeUtils: void checkAppCompatTheme(android.content.Context)>($r1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setOrientation(int)>(1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setAddStatesFromChildren(boolean)>(1);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r4 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setTextSizeInterpolator(android.view.animation.Interpolator)>($r4);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r5.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setPositionInterpolator(android.view.animation.Interpolator)>($r5);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>(8388659);

        $r6 = <android.support.design.R$styleable: int[] TextInputLayout>;

        $i1 = <android.support.design.R$style: int Widget_Design_TextInputLayout>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r6, $i0, $i1);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintEnabled>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled> = $z0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_hint>;

        $r8 = virtualinvoke $r7.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r8);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintAnimationEnabled>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled> = $z0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_textColorHint>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label1;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_textColorHint>;

        $r9 = virtualinvoke $r7.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor> = $r9;

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor> = $r9;

     label1:
        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, -1);

        if $i0 == -1 goto label2;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHintTextAppearance(int)>($i0);

     label2:
        $i0 = <android.support.design.R$styleable: int TextInputLayout_errorTextAppearance>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mErrorTextAppearance> = $i0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_errorEnabled>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterEnabled>;

        $z1 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterMaxLength>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getInt(int,int)>($i0, -1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterMaxLength(int)>($i0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterTextAppearance>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance> = $i0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterOverflowTextAppearance>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mCounterOverflowTextAppearance> = $i0;

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>($z0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterEnabled(boolean)>($z1);

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i0 != 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

     label3:
        $r10 = new android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate;

        specialinvoke $r10.<android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate: void <init>(android.support.design.widget.TextInputLayout,android.support.design.widget.TextInputLayout$1)>(r0, null);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r10);

        return;
    }
    static void access$100(android.support.design.widget.TextInputLayout, boolean)
    {
        android.support.design.widget.TextInputLayout $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>($z0);

        return;
    }
    static boolean access$200(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout $r0;
        boolean z0;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        z0 = $r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        return z0;
    }
    static void access$300(android.support.design.widget.TextInputLayout, int)
    {
        android.support.design.widget.TextInputLayout $r0;
        int $i0;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

        return;
    }
    static android.widget.TextView access$400(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        r1 = $r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        return r1;
    }
    static android.support.design.widget.CollapsingTextHelper access$500(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout $r0;
        android.support.design.widget.CollapsingTextHelper r1;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        r1 = $r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        return r1;
    }
    static android.widget.EditText access$600(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout $r0;
        android.widget.EditText r1;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        r1 = $r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        return r1;
    }
    private void addIndicator(android.widget.TextView, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.TextView $r1;
        int $i0;
        android.support.v4.widget.Space r2;
        android.widget.LinearLayout$LayoutParams r3;
        android.widget.LinearLayout $r4;
        android.content.Context $r5;
        android.widget.EditText $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r4 != null goto label1;

        $r4 = new android.widget.LinearLayout;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r4.<android.widget.LinearLayout: void <init>(android.content.Context)>($r5);

        r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea> = $r4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void addView(android.view.View,int,int)>($r4, -1, -2);

        r2 = new android.support.v4.widget.Space;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke r2.<android.support.v4.widget.Space: void <init>(android.content.Context)>($r5);

        r3 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke r3.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(0, 0, 1.0F);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r3);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r6 == null goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void adjustIndicatorPadding()>();

     label1:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void addView(android.view.View,int)>($r1, $i0);

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded>;

        $i0 = $i0 + 1;

        r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded> = $i0;

        return;
    }
    private void adjustIndicatorPadding()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.LinearLayout $r1;
        android.widget.EditText $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r2);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r2);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getPaddingBottom()>();

        staticinvoke <android.support.v4.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>($r1, $i0, 0, $i1, $i2);

        return;
    }
    private void animateToExpansionFraction(float)
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0, $f1;
        android.support.design.widget.CollapsingTextHelper $r1;
        byte $b0;
        android.support.design.widget.ValueAnimatorCompat $r2;
        android.view.animation.Interpolator $r3;
        android.support.design.widget.TextInputLayout$4 $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 := @parameter0: float;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f1 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r2 != null goto label2;

        $r2 = staticinvoke <android.support.design.widget.ViewUtils: android.support.design.widget.ValueAnimatorCompat createAnimator()>();

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator> = $r2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r3 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setInterpolator(android.view.animation.Interpolator)>($r3);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setDuration(int)>(200);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r4 = new android.support.design.widget.TextInputLayout$4;

        specialinvoke $r4.<android.support.design.widget.TextInputLayout$4: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener)>($r4);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f1 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setFloatValues(float,float)>($f1, $f0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void start()>();

        return;
    }
    private static boolean arrayContains(int[], int)
    {
        int[] $r0;
        int $i0, i1, i2, i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        i1 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        i2 = $r0[i3];

        if i2 != $i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    private void collapseHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        android.support.design.widget.ValueAnimatorCompat $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: void cancel()>();

     label1:
        if $z0 == 0 goto label2;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(1.0F);

        return;

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(1.0F);

        return;
    }
    private void ensureBackgroundDrawableStateWorkaround()
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.widget.EditText $r1;
        android.graphics.drawable.Drawable $r2, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable$ConstantState $r3;
        android.graphics.drawable.DrawableContainer r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 != 21 goto label3;

        if i0 == 22 goto label1;

        return;

     label1:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == null goto label3;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground>;

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $z0 = $r2 instanceof android.graphics.drawable.DrawableContainer;

        if $z0 == 0 goto label2;

        r5 = (android.graphics.drawable.DrawableContainer) $r2;

        $r3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $z0 = staticinvoke <android.support.design.widget.DrawableUtils: boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState)>(r5, $r3);

        r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground> = $z0;

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground>;

        if $z0 != 0 goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r4);

        r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground> = 1;

     label3:
        return;
    }
    private void expandHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        android.support.design.widget.ValueAnimatorCompat $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: void cancel()>();

     label1:
        if $z0 == 0 goto label2;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(0.0F);

        return;

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(0.0F);

        return;
    }
    private void removeIndicator(android.widget.TextView)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.TextView $r1;
        android.widget.LinearLayout $r2;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.TextView;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void removeView(android.view.View)>($r1);

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded>;

        $i0 = $i0 + -1;

        r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded> = $i0;

        if $i0 != 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(8);

     label1:
        return;
    }
    private void setEditText(android.widget.EditText)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.support.design.widget.CollapsingTextHelper $r4;
        android.graphics.Typeface $r5;
        float $f0;
        int $i0, $i1;
        android.support.design.widget.TextInputLayout$1 $r6;
        android.content.res.ColorStateList $r7;
        java.lang.CharSequence $r8;
        android.widget.TextView $r9;
        android.text.Editable $r10;
        android.widget.LinearLayout $r11;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.EditText;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("We already have an EditText, can only have one");

        throw $r3;

     label1:
        $z0 = $r1 instanceof android.support.design.widget.TextInputEditText;

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextInputLayout", "EditText added is not a TextInputEditText. Please switch to using that class instead.");

     label2:
        r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText> = $r1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r5 = virtualinvoke $r1.<android.widget.EditText: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r5);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $f0 = virtualinvoke $r1.<android.widget.EditText: float getTextSize()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextSize(float)>($f0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getGravity()>();

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i1 = 8388615 & $i0;

        $i1 = $i1 | 48;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>($i1);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextGravity(int)>($i0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r6 = new android.support.design.widget.TextInputLayout$1;

        specialinvoke $r6.<android.support.design.widget.TextInputLayout$1: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r1.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r6);

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r7 != null goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r7 = virtualinvoke $r1.<android.widget.EditText: android.content.res.ColorStateList getHintTextColors()>();

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor> = $r7;

     label3:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label4;

        $r8 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 == 0 goto label4;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r8 = virtualinvoke $r1.<android.widget.EditText: java.lang.CharSequence getHint()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r8);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label4:
        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r9 == null goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r10 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r10.<android.text.Editable: int length()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

     label5:
        $r11 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r11 == null goto label6;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void adjustIndicatorPadding()>();

     label6:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        return;
    }
    private void setHintInternal(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint> = $r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setText(java.lang.CharSequence)>($r1);

        return;
    }
    private void updateCounter(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        boolean z0, $z1;
        android.widget.TextView $r1;
        java.lang.String $r2;
        android.widget.EditText $r3;
        android.content.Context $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i1 != -1 goto label2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed> = 0;

     label1:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r3 == null goto label8;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if z0 == $z1 goto label8;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        return;

     label2:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i0 <= $i1 goto label6;

        $z1 = 1;

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed> = $z1;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if z0 == $z1 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z1 == 0 goto label7;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterOverflowTextAppearance>;

     label4:
        virtualinvoke $r1.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r4, $i1);

     label5:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i1 = <android.support.design.R$string: int character_counter_pattern>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i1, $r5);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        goto label1;

     label6:
        $z1 = 0;

        goto label3;

     label7:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance>;

        goto label4;

     label8:
        return;
    }
    private void updateEditTextBackground()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1;
        android.graphics.drawable.Drawable $r2, r3;
        boolean $z0;
        android.widget.TextView $r4;
        int $i0;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.PorterDuffColorFilter $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void ensureBackgroundDrawableStateWorkaround()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        r3 = $r2;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label2;

        r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z0 == 0 goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i0 = virtualinvoke $r4.<android.widget.TextView: int getCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label3:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z0 == 0 goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r4 == null goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = virtualinvoke $r4.<android.widget.TextView: int getCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label4:
        virtualinvoke r3.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void refreshDrawableState()>();

        return;
    }
    private android.widget.LinearLayout$LayoutParams updateEditTextMargin(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.TextInputLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.widget.LinearLayout$LayoutParams r2;
        android.graphics.Paint $r3;
        android.support.design.widget.CollapsingTextHelper $r4;
        android.graphics.Typeface $r5;
        float $f0;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z0 == 0 goto label3;

        r2 = (android.widget.LinearLayout$LayoutParams) r1;

     label1:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label4;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        if $r3 != null goto label2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint> = $r3;

     label2:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: android.graphics.Typeface getCollapsedTypeface()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f0 = virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: float getCollapsedTextSize()>();

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $f0 = virtualinvoke $r3.<android.graphics.Paint: float ascent()>();

        $f0 = neg $f0;

        $i0 = (int) $f0;

        r2.<android.widget.LinearLayout$LayoutParams: int topMargin> = $i0;

        return r2;

     label3:
        r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        goto label1;

     label4:
        r2.<android.widget.LinearLayout$LayoutParams: int topMargin> = 0;

        return r2;
    }
    private void updateLabelState(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.EditText $r1;
        android.text.Editable $r2;
        int[] $r3;
        java.lang.CharSequence $r4;
        android.content.res.ColorStateList $r5;
        android.support.design.widget.CollapsingTextHelper $r6;
        int $i0;
        android.widget.TextView $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 == null goto label06;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label06;

        $z1 = 1;

     label01:
        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int[] getDrawableState()>();

        $z2 = staticinvoke <android.support.design.widget.TextInputLayout: boolean arrayContains(int[],int)>($r3, 16842908);

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence getError()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z3 != 0 goto label07;

        $z3 = 1;

     label02:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r5 == null goto label03;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        $i0 = virtualinvoke $r5.<android.content.res.ColorStateList: int getDefaultColor()>();

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextColor(int)>($i0);

     label03:
        $z4 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z4 == 0 goto label08;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r7 == null goto label08;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = virtualinvoke $r7.<android.widget.TextView: int getCurrentTextColor()>();

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(int)>($i0);

     label04:
        if $z1 != 0 goto label05;

        if $z2 != 0 goto label05;

        if $z3 == 0 goto label10;

     label05:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void collapseHint(boolean)>($z0);

        return;

     label06:
        $z1 = 0;

        goto label01;

     label07:
        $z3 = 0;

        goto label02;

     label08:
        if $z2 == 0 goto label09;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor>;

        if $r5 == null goto label09;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor>;

        $i0 = virtualinvoke $r5.<android.content.res.ColorStateList: int getDefaultColor()>();

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(int)>($i0);

        goto label04;

     label09:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r5 == null goto label04;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        $i0 = virtualinvoke $r5.<android.content.res.ColorStateList: int getDefaultColor()>();

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(int)>($i0);

        goto label04;

     label10:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void expandHint(boolean)>($z0);

        return;
    }
    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.TextInputLayout r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;
        boolean $z0;
        android.widget.EditText $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.widget.EditText;

        if $z0 == 0 goto label1;

        $r4 = (android.widget.EditText) $r1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setEditText(android.widget.EditText)>($r4);

        $r3 = specialinvoke r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout$LayoutParams updateEditTextMargin(android.view.ViewGroup$LayoutParams)>($r2);

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, 0, $r3);

        return;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }
    public void draw(android.graphics.Canvas)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>($r1);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void draw(android.graphics.Canvas)>($r1);

     label1:
        return;
    }
    public int getCounterMaxLength()
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        return i0;
    }
    public android.widget.EditText getEditText()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        return r1;
    }
    public java.lang.CharSequence getError()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mError>;

        return r1;

     label1:
        return null;
    }
    public java.lang.CharSequence getHint()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        return r1;

     label1:
        return null;
    }
    public android.graphics.Typeface getTypeface()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: android.graphics.Typeface getCollapsedTypeface()>();

        return $r1;
    }
    public boolean isCounterEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        return z0;
    }
    public boolean isErrorEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        return z0;
    }
    public boolean isHintAnimationEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        return z0;
    }
    public boolean isHintEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        return z0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.EditText $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getLeft()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingLeft()>();

        $i0 = $i0 + $i2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r1.<android.widget.EditText: int getRight()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i4 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingRight()>();

        $i2 = $i2 - $i4;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i4 = virtualinvoke $r1.<android.widget.EditText: int getTop()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i5 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingTop()>();

        $i4 = $i4 + $i5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i5 = virtualinvoke $r1.<android.widget.EditText: int getBottom()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i6 = virtualinvoke $r1.<android.widget.EditText: int getCompoundPaddingBottom()>();

        $i5 = $i5 - $i6;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpandedBounds(int,int,int,int)>($i0, $i4, $i2, $i5);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingTop()>();

        $i1 = $i3 - $i1;

        $i3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i3;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setCollapsedBounds(int,int,int,int)>($i0, $i4, $i2, $i1);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void recalculate()>();

     label1:
        return;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.design.widget.TextInputLayout r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.support.design.widget.TextInputLayout$SavedState r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.support.design.widget.TextInputLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        r2 = (android.support.design.widget.TextInputLayout$SavedState) $r1;

        $r1 = virtualinvoke r2.<android.support.design.widget.TextInputLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r2.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setError(java.lang.CharSequence)>($r3);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void requestLayout()>();

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.TextInputLayout$SavedState r1;
        android.os.Parcelable $r2;
        boolean $z0;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>();

        r1 = new android.support.design.widget.TextInputLayout$SavedState;

        specialinvoke r1.<android.support.design.widget.TextInputLayout$SavedState: void <init>(android.os.Parcelable)>($r2);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence getError()>();

        r1.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error> = $r3;

     label1:
        return r1;
    }
    public void refreshDrawableState()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        specialinvoke r0.<android.widget.LinearLayout: void refreshDrawableState()>();

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>($z0);

        return;
    }
    public void setCounterEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.Exception r1;
        android.widget.TextView $r2;
        android.content.Context $r3;
        int $i0;
        android.widget.EditText $r4;
        android.text.Editable $r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        if $z1 == $z0 goto label7;

        if $z0 == 0 goto label6;

        $r2 = new android.widget.TextView;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TextView: void <init>(android.content.Context)>($r3);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView> = $r2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        virtualinvoke $r2.<android.widget.TextView: void setMaxLines(int)>(1);

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void addIndicator(android.widget.TextView,int)>($r2, -1);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r4 != null goto label5;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>(0);

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled> = $z0;

        return;

     label4:
        r1 := @caughtexception;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$style: int TextAppearance_AppCompat_Caption>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$color: int design_textinput_error_color_light>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i0);

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>($i0);

        goto label2;

     label5:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r5 = virtualinvoke $r4.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r5.<android.text.Editable: int length()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

        goto label3;

     label6:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void removeIndicator(android.widget.TextView)>($r2);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView> = null;

        goto label3;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
    }
    public void setCounterMaxLength(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        boolean $z0;
        android.widget.EditText $r1;
        android.text.Editable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i1 == $i0 goto label5;

        if $i0 <= 0 goto label3;

        r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength> = $i0;

     label1:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 != null goto label4;

        $i0 = 0;

     label2:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

        return;

     label3:
        r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength> = -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        goto label2;

     label5:
        return;
    }
    public void setError(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0, $z1;
        android.widget.TextView $r3;
        float $f0;
        byte $b0;
        android.support.v4.view.ViewPropertyAnimatorCompat $r4;
        android.view.animation.Interpolator $r5;
        android.support.design.widget.TextInputLayout$2 $r6;
        int $i1;
        android.support.design.widget.TextInputLayout$3 $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mError>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mError> = $r1;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label9;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>(1);

     label2:
        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label6;

        $z1 = 1;

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown> = $z1;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z1 == 0 goto label7;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(0);

        if $z0 == 0 goto label5;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $f0 = staticinvoke <android.support.v4.view.ViewCompat: float getAlpha(android.view.View)>($r3);

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label4;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r3, 0.0F);

     label4:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r5 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r5);

        $r6 = new android.support.design.widget.TextInputLayout$2;

        specialinvoke $r6.<android.support.design.widget.TextInputLayout$2: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r6);

        virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

     label5:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(1);

        return;

     label6:
        $z1 = 0;

        goto label3;

     label7:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i1 = virtualinvoke $r3.<android.widget.TextView: int getVisibility()>();

        if $i1 != 0 goto label5;

        if $z0 == 0 goto label8;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r3);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r5 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r5);

        $r7 = new android.support.design.widget.TextInputLayout$3;

        specialinvoke $r7.<android.support.design.widget.TextInputLayout$3: void <init>(android.support.design.widget.TextInputLayout,java.lang.CharSequence)>(r0, $r1);

        $r4 = virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r7);

        virtualinvoke $r4.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

        goto label5;

     label8:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(4);

        goto label5;

     label9:
        return;
    }
    public void setErrorEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.Exception r1;
        android.widget.TextView $r2;
        android.support.v4.view.ViewPropertyAnimatorCompat $r3;
        android.content.Context $r4;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z1 == $z0 goto label7;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        if $z0 == 0 goto label6;

        $r2 = new android.widget.TextView;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TextView: void <init>(android.content.Context)>($r4);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView> = $r2;

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mErrorTextAppearance>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r4, $i0);

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(4);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r2, 1);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void addIndicator(android.widget.TextView,int)>($r2, 0);

     label4:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled> = $z0;

        return;

     label5:
        r1 := @caughtexception;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$style: int TextAppearance_AppCompat_Caption>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r4, $i0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$color: int design_textinput_error_color_light>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r4, $i0);

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>($i0);

        goto label3;

     label6:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown> = 0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void removeIndicator(android.widget.TextView)>($r2);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView> = null;

        goto label4;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }
    public void setHint(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void sendAccessibilityEvent(int)>(2048);

     label1:
        return;
    }
    public void setHintAnimationEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled> = $z0;

        return;
    }
    public void setHintEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.CharSequence $r1, $r3;
        android.widget.EditText $r2;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == $z1 goto label5;

        r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled> = $z0;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 != 0 goto label3;

        $r3 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r1);

     label1:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>(null);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label5;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r4 = virtualinvoke $r2.<android.widget.EditText: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = specialinvoke r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout$LayoutParams updateEditTextMargin(android.view.ViewGroup$LayoutParams)>($r4);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r2.<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

        return;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r1);

     label4:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

        goto label2;

     label5:
        return;
    }
    public void setHintTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.support.design.widget.CollapsingTextHelper $r1;
        android.content.res.ColorStateList $r2;
        android.widget.EditText $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.LinearLayout$LayoutParams $r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextAppearance(int)>($i0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: int getCollapsedTextColor()>();

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor> = $r2;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r4 = virtualinvoke $r3.<android.widget.EditText: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = specialinvoke r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout$LayoutParams updateEditTextMargin(android.view.ViewGroup$LayoutParams)>($r4);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r3.<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r3.<android.widget.EditText: void requestLayout()>();

     label1:
        return;
    }
    public void setTypeface(android.graphics.Typeface)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r1);

        return;
    }
