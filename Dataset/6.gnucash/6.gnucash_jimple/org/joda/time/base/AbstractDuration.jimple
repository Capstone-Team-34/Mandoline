org.joda.time.base.AbstractDuration extends java.lang.Object implements org.joda.time.ReadableDuration
    protected void <init>()
    {
        org.joda.time.base.AbstractDuration r0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compareTo(java.lang.Object)
    {
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        java.lang.Object $r1;
        org.joda.time.ReadableDuration $r2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.joda.time.ReadableDuration) $r1;

        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(org.joda.time.ReadableDuration)>($r2);

        return $i0;
    }
    public int compareTo(org.joda.time.ReadableDuration)
    {
        org.joda.time.base.AbstractDuration r0;
        org.joda.time.ReadableDuration $r1;
        byte $b0;
        long $l1, $l2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: org.joda.time.ReadableDuration;

        $l1 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $l2 = interfaceinvoke $r1.<org.joda.time.ReadableDuration: long getMillis()>();

        $b0 = $l1 cmp $l2;

        if $b0 >= 0 goto label1;

        return -1;

     label1:
        $b0 = $l1 cmp $l2;

        if $b0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.base.AbstractDuration r0;
        java.lang.Object $r1;
        boolean $z0;
        org.joda.time.ReadableDuration $r2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.ReadableDuration;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (org.joda.time.ReadableDuration) $r1;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $l1 = interfaceinvoke $r2.<org.joda.time.ReadableDuration: long getMillis()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public int hashCode()
    {
        org.joda.time.base.AbstractDuration r0;
        long $l0, $l1;
        int $i2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $l1 = $l0 >>> 32;

        $l0 = $l0 ^ $l1;

        $i2 = (int) $l0;

        return $i2;
    }
    public boolean isEqual(org.joda.time.ReadableDuration)
    {
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        org.joda.time.ReadableDuration $r1;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: org.joda.time.ReadableDuration;

        if $r1 != null goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(org.joda.time.ReadableDuration)>($r1);

        if $i0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isLongerThan(org.joda.time.ReadableDuration)
    {
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        org.joda.time.ReadableDuration $r1;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: org.joda.time.ReadableDuration;

        if $r1 != null goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(org.joda.time.ReadableDuration)>($r1);

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean isShorterThan(org.joda.time.ReadableDuration)
    {
        org.joda.time.base.AbstractDuration r0;
        int $i0;
        org.joda.time.ReadableDuration $r1;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 := @parameter0: org.joda.time.ReadableDuration;

        if $r1 != null goto label1;

        $r1 = <org.joda.time.Duration: org.joda.time.Duration ZERO>;

     label1:
        $i0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: int compareTo(org.joda.time.ReadableDuration)>($r1);

        if $i0 >= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public org.joda.time.Duration toDuration()
    {
        org.joda.time.base.AbstractDuration r0;
        org.joda.time.Duration $r1;
        long $l0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 = new org.joda.time.Duration;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        specialinvoke $r1.<org.joda.time.Duration: void <init>(long)>($l0);

        return $r1;
    }
    public org.joda.time.Period toPeriod()
    {
        org.joda.time.base.AbstractDuration r0;
        org.joda.time.Period $r1;
        long $l0;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $r1 = new org.joda.time.Period;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        specialinvoke $r1.<org.joda.time.Period: void <init>(long)>($l0);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.joda.time.base.AbstractDuration r0;
        java.lang.StringBuffer $r1;
        long $l0, $l3;
        byte $b1;
        boolean $z0;
        int $i2;
        java.lang.String $r2;

        r0 := @this: org.joda.time.base.AbstractDuration;

        $l0 = virtualinvoke r0.<org.joda.time.base.AbstractDuration: long getMillis()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PT");

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label05;

        $z0 = 1;

     label01:
        staticinvoke <org.joda.time.format.FormatUtils: void appendUnpaddedInteger(java.lang.StringBuffer,long)>($r1, $l0);

     label02:
        $i2 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $z0 == 0 goto label06;

        $b1 = 7;

     label03:
        if $i2 >= $b1 goto label08;

        if $z0 == 0 goto label07;

        $b1 = 3;

     label04:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($b1, "0");

        goto label02;

     label05:
        $z0 = 0;

        goto label01;

     label06:
        $b1 = 6;

        goto label03;

     label07:
        $b1 = 2;

        goto label04;

     label08:
        $l3 = $l0 / 1000L;

        $l3 = $l3 * 1000L;

        $b1 = $l3 cmp $l0;

        if $b1 != 0 goto label10;

        $i2 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i2 = $i2 + -3;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>($i2);

     label09:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(83);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label10:
        $i2 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i2 = $i2 + -3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($i2, ".");

        goto label09;
    }
