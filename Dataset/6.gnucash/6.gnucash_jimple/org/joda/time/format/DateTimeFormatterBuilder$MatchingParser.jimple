org.joda.time.format.DateTimeFormatterBuilder$MatchingParser extends java.lang.Object implements org.joda.time.format.InternalParser
private final int iParsedLengthEstimate
private final org.joda.time.format.InternalParser[] iParsers
    void <init>(org.joda.time.format.InternalParser[])
    {
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;
        org.joda.time.format.InternalParser[] $r1;
        int $i0, $i1, $i2, $i3;
        org.joda.time.format.InternalParser $r2;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        $r1 := @parameter0: org.joda.time.format.InternalParser[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: org.joda.time.format.InternalParser[] iParsers> = $r1;

        $i2 = 0;

        $i0 = lengthof $r1;

     label1:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label3;

        $r2 = $r1[$i0];

        if $r2 == null goto label4;

        $i1 = interfaceinvoke $r2.<org.joda.time.format.InternalParser: int estimateParsedLength()>();

        $i3 = $i1;

        if $i1 <= $i2 goto label4;

     label2:
        $i2 = $i3;

        goto label1;

     label3:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: int iParsedLengthEstimate> = $i2;

        return;

     label4:
        $i3 = $i2;

        goto label2;
    }
    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;
        int i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: int iParsedLengthEstimate>;

        return i0;
    }
    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$MatchingParser r0;
        org.joda.time.format.DateTimeParserBucket $r1;
        java.lang.CharSequence $r2;
        org.joda.time.format.InternalParser[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r4, $r5;
        org.joda.time.format.InternalParser $r6;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$MatchingParser;

        $r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        $r2 := @parameter1: java.lang.CharSequence;

        $i1 := @parameter2: int;

        $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$MatchingParser: org.joda.time.format.InternalParser[] iParsers>;

        $i0 = lengthof $r3;

        $r4 = virtualinvoke $r1.<org.joda.time.format.DateTimeParserBucket: java.lang.Object saveState()>();

        $r5 = null;

        $i2 = 0;

        $i3 = $i1;

        $i4 = $i1;

     label01:
        if $i2 >= $i0 goto label13;

        $r6 = $r3[$i2];

        if $r6 != null goto label06;

        if $i4 > $i1 goto label02;

        return $i1;

     label02:
        $z0 = 1;

     label03:
        if $i4 > $i1 goto label04;

        if $i4 != $i1 goto label11;

        if $z0 == 0 goto label11;

     label04:
        if $r5 == null goto label05;

        virtualinvoke $r1.<org.joda.time.format.DateTimeParserBucket: boolean restoreState(java.lang.Object)>($r5);

     label05:
        return $i4;

     label06:
        $i5 = interfaceinvoke $r6.<org.joda.time.format.InternalParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>($r1, $r2, $i1);

        if $i5 < $i1 goto label10;

        if $i5 <= $i4 goto label12;

        $i4 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i5 >= $i4 goto label07;

        $i4 = $i2 + 1;

        if $i4 >= $i0 goto label07;

        $i4 = $i2 + 1;

        $r6 = $r3[$i4];

        if $r6 != null goto label08;

     label07:
        return $i5;

     label08:
        $r5 = virtualinvoke $r1.<org.joda.time.format.DateTimeParserBucket: java.lang.Object saveState()>();

     label09:
        virtualinvoke $r1.<org.joda.time.format.DateTimeParserBucket: boolean restoreState(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        $i4 = $i5;

        goto label01;

     label10:
        if $i5 >= 0 goto label12;

        $i5 = $i5 ^ -1;

        if $i5 <= $i3 goto label12;

        $i3 = $i5;

        $i5 = $i4;

        goto label09;

     label11:
        $i1 = $i3 ^ -1;

        return $i1;

     label12:
        $i5 = $i4;

        goto label09;

     label13:
        $z0 = 0;

        goto label03;
    }
