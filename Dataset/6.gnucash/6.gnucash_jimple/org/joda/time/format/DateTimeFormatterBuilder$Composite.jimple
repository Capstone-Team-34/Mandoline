org.joda.time.format.DateTimeFormatterBuilder$Composite extends java.lang.Object implements org.joda.time.format.InternalPrinter org.joda.time.format.InternalParser
private final int iParsedLengthEstimate
private final org.joda.time.format.InternalParser[] iParsers
private final int iPrintedLengthEstimate
private final org.joda.time.format.InternalPrinter[] iPrinters
    void <init>(java.util.List)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.util.List $r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        org.joda.time.format.InternalPrinter[] $r4;
        java.lang.Object $r5;
        org.joda.time.format.InternalPrinter $r6;
        org.joda.time.format.InternalParser[] $r7;
        org.joda.time.format.InternalParser $r8;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        $i0 = 0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>($r1, $r3, $r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label1:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 != 0 goto label3;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label7;

     label3:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = 0;

        return;

     label4:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (org.joda.time.format.InternalPrinter)[$i1];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters> = $r4;

        $i2 = 0;

        $i3 = 0;

     label5:
        if $i2 >= $i1 goto label6;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (org.joda.time.format.InternalPrinter) $r5;

        $i4 = interfaceinvoke $r6.<org.joda.time.format.InternalPrinter: int estimatePrintedLength()>();

        $i3 = $i3 + $i4;

        $r4 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        $r4[$i2] = $r6;

        $i2 = $i2 + 1;

        goto label5;

     label6:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = $i3;

        goto label2;

     label7:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r7 = newarray (org.joda.time.format.InternalParser)[$i1];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers> = $r7;

        $i3 = 0;

     label8:
        if $i0 >= $i1 goto label9;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (org.joda.time.format.InternalParser) $r5;

        $i2 = interfaceinvoke $r8.<org.joda.time.format.InternalParser: int estimateParsedLength()>();

        $i3 = $i3 + $i2;

        $r7 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        $r7[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label8;

     label9:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = $i3;

        return;
    }
    private void addArrayToList(java.util.List, java.lang.Object[])
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.util.List $r1;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.Object[];

        if $r2 == null goto label2;

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r3 = $r2[$i0];

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private void decompose(java.util.List, java.util.List, java.util.List)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0, $r5;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        boolean $z0;
        org.joda.time.format.InternalPrinter[] $r6;
        org.joda.time.format.InternalParser[] $r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $z0 = $r4 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z0 == 0 goto label4;

        $r5 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) $r4;

        $r6 = $r5.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>($r2, $r6);

     label2:
        $i2 = $i1 + 1;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $z0 = $r4 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z0 == 0 goto label5;

        $r5 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) $r4;

        $r7 = $r5.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>($r3, $r7);

     label3:
        $i1 = $i1 + 2;

        goto label1;

     label4:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label5:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label3;

     label6:
        return;
    }
    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        int i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate>;

        return i0;
    }
    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        int i0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate>;

        return i0;
    }
    boolean isParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.InternalParser[] $r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isPrinter()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.InternalPrinter[] $r1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimeParserBucket $r1;
        java.lang.CharSequence $r2;
        org.joda.time.format.InternalParser[] $r3;
        int $i0, $i1, $i2;
        org.joda.time.format.InternalParser $r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        $r2 := @parameter1: java.lang.CharSequence;

        $i1 := @parameter2: int;

        $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalParser[] iParsers>;

        if $r3 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        $i0 = lengthof $r3;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label3;

        if $i1 < 0 goto label3;

        $r4 = $r3[$i2];

        $i1 = interfaceinvoke $r4.<org.joda.time.format.InternalParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)>($r1, $r2, $i1);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return $i1;
    }
    public void printTo(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.lang.Appendable $r1;
        long $l0;
        org.joda.time.Chronology $r2;
        int $i1, $i2, $i3;
        org.joda.time.DateTimeZone $r3;
        java.util.Locale $r4;
        org.joda.time.format.InternalPrinter[] $r5;
        java.lang.UnsupportedOperationException $r6;
        org.joda.time.format.InternalPrinter $r7;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: java.lang.Appendable;

        $l0 := @parameter1: long;

        $r2 := @parameter2: org.joda.time.Chronology;

        $i1 := @parameter3: int;

        $r3 := @parameter4: org.joda.time.DateTimeZone;

        $r4 := @parameter5: java.util.Locale;

        $r5 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if $r5 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        if $r4 != null goto label5;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i2 = lengthof $r5;

        $i3 = 0;

     label3:
        if $i3 >= $i2 goto label4;

        $r7 = $r5[$i3];

        interfaceinvoke $r7.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>($r1, $l0, $r2, $i1, $r3, $r4);

        $i3 = $i3 + 1;

        goto label3;

     label4:
        return;

     label5:
        goto label2;
    }
    public void printTo(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.lang.Appendable $r1;
        org.joda.time.ReadablePartial $r2;
        org.joda.time.format.InternalPrinter[] $r3;
        int $i0, $i1;
        org.joda.time.format.InternalPrinter $r4;
        java.util.Locale $r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 := @parameter1: org.joda.time.ReadablePartial;

        $r5 := @parameter2: java.util.Locale;

        $r3 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.InternalPrinter[] iPrinters>;

        if $r3 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        if $r5 != null goto label2;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i0 = lengthof $r3;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r4 = $r3[$i1];

        interfaceinvoke $r4.<org.joda.time.format.InternalPrinter: void printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)>($r1, $r2, $r5);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }
