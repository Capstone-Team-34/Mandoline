org.joda.time.format.DateTimeParserInternalParser extends java.lang.Object implements org.joda.time.format.InternalParser
private final org.joda.time.format.DateTimeParser underlying
    private void <init>(org.joda.time.format.DateTimeParser)
    {
        org.joda.time.format.DateTimeParserInternalParser r0;
        org.joda.time.format.DateTimeParser $r1;

        r0 := @this: org.joda.time.format.DateTimeParserInternalParser;

        $r1 := @parameter0: org.joda.time.format.DateTimeParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeParserInternalParser: org.joda.time.format.DateTimeParser underlying> = $r1;

        return;
    }
    static org.joda.time.format.InternalParser of(org.joda.time.format.DateTimeParser)
    {
        org.joda.time.format.DateTimeParser $r0;
        boolean $z0;
        org.joda.time.format.InternalParser $r1;
        org.joda.time.format.DateTimeParserInternalParser $r2;

        $r0 := @parameter0: org.joda.time.format.DateTimeParser;

        $z0 = $r0 instanceof org.joda.time.format.InternalParserDateTimeParser;

        if $z0 == 0 goto label1;

        $r1 = (org.joda.time.format.InternalParser) $r0;

        return $r1;

     label1:
        if $r0 != null goto label2;

        return null;

     label2:
        $r2 = new org.joda.time.format.DateTimeParserInternalParser;

        specialinvoke $r2.<org.joda.time.format.DateTimeParserInternalParser: void <init>(org.joda.time.format.DateTimeParser)>($r0);

        return $r2;
    }
    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeParserInternalParser r0;
        int $i0;
        org.joda.time.format.DateTimeParser $r1;

        r0 := @this: org.joda.time.format.DateTimeParserInternalParser;

        $r1 = r0.<org.joda.time.format.DateTimeParserInternalParser: org.joda.time.format.DateTimeParser underlying>;

        $i0 = interfaceinvoke $r1.<org.joda.time.format.DateTimeParser: int estimateParsedLength()>();

        return $i0;
    }
    org.joda.time.format.DateTimeParser getUnderlying()
    {
        org.joda.time.format.DateTimeParserInternalParser r0;
        org.joda.time.format.DateTimeParser r1;

        r0 := @this: org.joda.time.format.DateTimeParserInternalParser;

        r1 = r0.<org.joda.time.format.DateTimeParserInternalParser: org.joda.time.format.DateTimeParser underlying>;

        return r1;
    }
    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int)
    {
        org.joda.time.format.DateTimeParserInternalParser r0;
        org.joda.time.format.DateTimeParserBucket $r1;
        java.lang.CharSequence $r2;
        int $i0;
        org.joda.time.format.DateTimeParser $r3;
        java.lang.String $r4;

        r0 := @this: org.joda.time.format.DateTimeParserInternalParser;

        $r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        $r2 := @parameter1: java.lang.CharSequence;

        $i0 := @parameter2: int;

        $r3 = r0.<org.joda.time.format.DateTimeParserInternalParser: org.joda.time.format.DateTimeParser underlying>;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i0 = interfaceinvoke $r3.<org.joda.time.format.DateTimeParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>($r1, $r4, $i0);

        return $i0;
    }
