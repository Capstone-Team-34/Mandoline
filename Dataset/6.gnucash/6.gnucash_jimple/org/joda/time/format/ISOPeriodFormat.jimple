org.joda.time.format.ISOPeriodFormat extends java.lang.Object
private static org.joda.time.format.PeriodFormatter cAlternate
private static org.joda.time.format.PeriodFormatter cAlternateExtended
private static org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks
private static org.joda.time.format.PeriodFormatter cAlternateWithWeeks
private static org.joda.time.format.PeriodFormatter cStandard
    protected void <init>()
    {
        org.joda.time.format.ISOPeriodFormat r0;

        r0 := @this: org.joda.time.format.ISOPeriodFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.joda.time.format.PeriodFormatter alternate()
    {
        org.joda.time.format.PeriodFormatter $r0;
        org.joda.time.format.PeriodFormatterBuilder $r1;

        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternate>;

        if $r0 != null goto label1;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>();

        $r0 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternate> = $r0;

     label1:
        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternate>;

        return $r0;
    }
    public static org.joda.time.format.PeriodFormatter alternateExtended()
    {
        org.joda.time.format.PeriodFormatter $r0;
        org.joda.time.format.PeriodFormatterBuilder $r1;

        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtended>;

        if $r0 != null goto label1;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>();

        $r0 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtended> = $r0;

     label1:
        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtended>;

        return $r0;
    }
    public static org.joda.time.format.PeriodFormatter alternateExtendedWithWeeks()
    {
        org.joda.time.format.PeriodFormatter $r0;
        org.joda.time.format.PeriodFormatterBuilder $r1;

        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks>;

        if $r0 != null goto label1;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)>("W");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>("-");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>();

        $r0 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks> = $r0;

     label1:
        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateExtendedWihWeeks>;

        return $r0;
    }
    public static org.joda.time.format.PeriodFormatter alternateWithWeeks()
    {
        org.joda.time.format.PeriodFormatter $r0;
        org.joda.time.format.PeriodFormatterBuilder $r1;

        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateWithWeeks>;

        if $r0 != null goto label1;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder printZeroAlways()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(4);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder minimumPrintedDigits(int)>(2);

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendPrefix(java.lang.String)>("W");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>();

        $r0 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateWithWeeks> = $r0;

     label1:
        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cAlternateWithWeeks>;

        return $r0;
    }
    public static org.joda.time.format.PeriodFormatter standard()
    {
        org.joda.time.format.PeriodFormatter $r0;
        org.joda.time.format.PeriodFormatterBuilder $r1;

        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>;

        if $r0 != null goto label1;

        $r1 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendLiteral(java.lang.String)>("P");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("Y");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("M");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("W");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("D");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparatorIfFieldsAfter(java.lang.String)>("T");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("H");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("M");

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSecondsWithOptionalMillis()>();

        $r1 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String)>("S");

        $r0 = virtualinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard> = $r0;

     label1:
        $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>;

        return $r0;
    }
