org.joda.time.chrono.LimitChronology$LimitException extends java.lang.IllegalArgumentException
private static final long serialVersionUID
private final boolean iIsLow
final org.joda.time.chrono.LimitChronology this$0
    void <init>(org.joda.time.chrono.LimitChronology, java.lang.String, boolean)
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        org.joda.time.chrono.LimitChronology $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        $r1 := @parameter0: org.joda.time.chrono.LimitChronology;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0> = $r1;

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        r0.<org.joda.time.chrono.LimitChronology$LimitException: boolean iIsLow> = $z0;

        return;
    }
    public java.lang.String getMessage()
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        org.joda.time.format.DateTimeFormatter $r3;
        org.joda.time.chrono.LimitChronology $r4;
        org.joda.time.Chronology $r5;
        boolean $z0;
        org.joda.time.DateTime $r6;
        long $l0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(85);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The");

        $r2 = specialinvoke r0.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        if $r2 == null goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" instant is ");

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>();

        $r4 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r5 = virtualinvoke $r4.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>();

        $r3 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r5);

        $z0 = r0.<org.joda.time.chrono.LimitChronology$LimitException: boolean iIsLow>;

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("below the supported minimum of ");

        $r4 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r6 = virtualinvoke $r4.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>();

        $l0 = virtualinvoke $r6.<org.joda.time.DateTime: long getMillis()>();

        virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>($r1, $l0);

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r4 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r5 = virtualinvoke $r4.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("above the supported maximum of ");

        $r4 = r0.<org.joda.time.chrono.LimitChronology$LimitException: org.joda.time.chrono.LimitChronology this$0>;

        $r6 = virtualinvoke $r4.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>();

        $l0 = virtualinvoke $r6.<org.joda.time.DateTime: long getMillis()>();

        virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>($r1, $l0);

        goto label2;
    }
    public java.lang.String toString()
    {
        org.joda.time.chrono.LimitChronology$LimitException r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalArgumentException: ");

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
