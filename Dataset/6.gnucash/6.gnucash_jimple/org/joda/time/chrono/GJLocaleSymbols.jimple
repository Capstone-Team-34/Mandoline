org.joda.time.chrono.GJLocaleSymbols extends java.lang.Object
private static java.util.concurrent.ConcurrentMap cCache
private final java.lang.String[] iDaysOfWeek
private final java.lang.String[] iEras
private final java.lang.String[] iHalfday
private final int iMaxDayOfWeekLength
private final int iMaxEraLength
private final int iMaxHalfdayLength
private final int iMaxMonthLength
private final int iMaxShortDayOfWeekLength
private final int iMaxShortMonthLength
private final java.lang.String[] iMonths
private final java.util.TreeMap iParseDaysOfWeek
private final java.util.TreeMap iParseEras
private final java.util.TreeMap iParseMonths
private final java.lang.String[] iShortDaysOfWeek
private final java.lang.String[] iShortMonths
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache> = $r0;

        return;
    }
    private void <init>(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.util.Locale $r1;
        java.text.DateFormatSymbols $r2;
        java.lang.String[] $r3;
        java.lang.Integer[] $r4;
        int $i0;
        java.lang.Integer $r5;
        java.util.TreeMap $r6;
        java.util.Comparator $r7;
        java.lang.String $r8, $r9;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.joda.time.DateTimeUtils: java.text.DateFormatSymbols getDateFormatSymbols(java.util.Locale)>($r1);

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getEras()>();

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras> = $r3;

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();

        $r3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignDaysOfWeek(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek> = $r3;

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignDaysOfWeek(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek> = $r3;

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();

        $r3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignMonths(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths> = $r3;

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        $r3 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] realignMonths(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths> = $r3;

        $r3 = virtualinvoke $r2.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday> = $r3;

        $r4 = newarray (java.lang.Integer)[13];

        $i0 = 0;

     label1:
        if $i0 >= 13 goto label2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new java.util.TreeMap;

        $r7 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r6.<java.util.TreeMap: void <init>(java.util.Comparator)>($r7);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras> = $r6;

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r6, $r3, $r4);

        $r8 = "en";

        $r9 = virtualinvoke $r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r5 = $r4[0];

        virtualinvoke $r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BCE", $r5);

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r5 = $r4[1];

        virtualinvoke $r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CE", $r5);

     label3:
        $r6 = new java.util.TreeMap;

        $r7 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r6.<java.util.TreeMap: void <init>(java.util.Comparator)>($r7);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek> = $r6;

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r6, $r3, $r4);

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r6, $r3, $r4);

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])>($r6, 1, 7, $r4);

        $r6 = new java.util.TreeMap;

        $r7 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r6.<java.util.TreeMap: void <init>(java.util.Comparator)>($r7);

        r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths> = $r6;

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r6, $r3, $r4);

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])>($r6, $r3, $r4);

        $r6 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        staticinvoke <org.joda.time.chrono.GJLocaleSymbols: void addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])>($r6, 1, 12, $r4);

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxEraLength> = $i0;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxDayOfWeekLength> = $i0;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortDayOfWeekLength> = $i0;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxMonthLength> = $i0;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortMonthLength> = $i0;

        $r3 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        $i0 = staticinvoke <org.joda.time.chrono.GJLocaleSymbols: int maxLength(java.lang.String[])>($r3);

        r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxHalfdayLength> = $i0;

        return;
    }
    private static void addNumerals(java.util.TreeMap, int, int, java.lang.Integer[])
    {
        java.util.TreeMap $r0;
        int $i0, $i1;
        java.lang.Integer[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.util.TreeMap;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Integer[];

     label1:
        if $i1 > $i0 goto label2;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        $r2 = $r1[$i1];

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private static void addSymbols(java.util.TreeMap, java.lang.String[], java.lang.Integer[])
    {
        java.util.TreeMap $r0;
        java.lang.String[] $r1;
        java.lang.Integer[] $r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        int $i0;

        $r0 := @parameter0: java.util.TreeMap;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.Integer[];

        $i0 = lengthof $r1;

     label1:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label2;

        $r3 = $r1[$i0];

        if $r3 == null goto label1;

        $r4 = $r2[$i0];

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label2:
        return;
    }
    static org.joda.time.chrono.GJLocaleSymbols forLocale(java.util.Locale)
    {
        org.joda.time.chrono.GJLocaleSymbols $r0, $r4;
        java.util.Locale $r1;
        java.util.concurrent.ConcurrentMap $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: java.util.Locale;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r2 = <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r0 = (org.joda.time.chrono.GJLocaleSymbols) $r3;

        if $r0 != null goto label2;

        $r0 = new org.joda.time.chrono.GJLocaleSymbols;

        specialinvoke $r0.<org.joda.time.chrono.GJLocaleSymbols: void <init>(java.util.Locale)>($r1);

        $r2 = <org.joda.time.chrono.GJLocaleSymbols: java.util.concurrent.ConcurrentMap cCache>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r0);

        $r4 = (org.joda.time.chrono.GJLocaleSymbols) $r3;

        if $r4 == null goto label2;

        return $r4;

     label2:
        return $r0;
    }
    private static int maxLength(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.String[];

        $i2 = 0;

        $i0 = lengthof $r0;

     label1:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label3;

        $r1 = $r0[$i0];

        if $r1 == null goto label4;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i1;

        if $i1 <= $i2 goto label4;

     label2:
        $i2 = $i3;

        goto label1;

     label3:
        return $i2;

     label4:
        $i3 = $i2;

        goto label2;
    }
    private static java.lang.String[] realignDaysOfWeek(java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.String[];

        $r1 = newarray (java.lang.String)[8];

        $i0 = 1;

     label1:
        if $i0 >= 8 goto label4;

        if $i0 >= 7 goto label3;

        $i1 = $i0 + 1;

     label2:
        $r2 = $r0[$i1];

        $r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i1 = 1;

        goto label2;

     label4:
        return $r1;
    }
    private static java.lang.String[] realignMonths(java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.String[];

        $r1 = newarray (java.lang.String)[13];

        $i0 = 1;

     label1:
        if $i0 >= 13 goto label2;

        $i1 = $i0 + -1;

        $r2 = $r0[$i1];

        $r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }
    public int dayOfWeekTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String $r1;
        java.util.TreeMap $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        int $i0;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseDaysOfWeek>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, $r1);

        throw $r5;
    }
    public java.lang.String dayOfWeekValueToShortText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortDaysOfWeek>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String dayOfWeekValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iDaysOfWeek>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public int eraTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String $r1;
        java.util.TreeMap $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        int $i0;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseEras>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType era()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, $r1);

        throw $r5;
    }
    public java.lang.String eraValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iEras>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public int getDayOfWeekMaxShortTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortDayOfWeekLength>;

        return i0;
    }
    public int getDayOfWeekMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxDayOfWeekLength>;

        return i0;
    }
    public int getEraMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxEraLength>;

        return i0;
    }
    public int getHalfdayMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxHalfdayLength>;

        return i0;
    }
    public int getMonthMaxShortTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxShortMonthLength>;

        return i0;
    }
    public int getMonthMaxTextLength()
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int i0;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        i0 = r0.<org.joda.time.chrono.GJLocaleSymbols: int iMaxMonthLength>;

        return i0;
    }
    public int halfdayTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        int $i0;
        boolean $z0;
        org.joda.time.IllegalFieldValueException $r4;
        org.joda.time.DateTimeFieldType $r5;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        $i0 = lengthof $r2;

     label1:
        $i0 = $i0 + -1;

        if $i0 < 0 goto label2;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $i0;

     label2:
        $r4 = new org.joda.time.IllegalFieldValueException;

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType halfdayOfDay()>();

        specialinvoke $r4.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r5, $r1);

        throw $r4;
    }
    public java.lang.String halfdayValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iHalfday>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public int monthOfYearTextToValue(java.lang.String)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        java.lang.String $r1;
        java.util.TreeMap $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        int $i0;
        org.joda.time.IllegalFieldValueException $r5;
        org.joda.time.DateTimeFieldType $r6;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.util.TreeMap iParseMonths>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Integer) $r3;

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r5 = new org.joda.time.IllegalFieldValueException;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        specialinvoke $r5.<org.joda.time.IllegalFieldValueException: void <init>(org.joda.time.DateTimeFieldType,java.lang.String)>($r6, $r1);

        throw $r5;
    }
    public java.lang.String monthOfYearValueToShortText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iShortMonths>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String monthOfYearValueToText(int)
    {
        org.joda.time.chrono.GJLocaleSymbols r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.chrono.GJLocaleSymbols;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.chrono.GJLocaleSymbols: java.lang.String[] iMonths>;

        $r2 = $r1[$i0];

        return $r2;
    }
