org.joda.time.PeriodType extends java.lang.Object implements java.io.Serializable
static int DAY_INDEX
static int HOUR_INDEX
static int MILLI_INDEX
static int MINUTE_INDEX
static int MONTH_INDEX
static int SECOND_INDEX
static int WEEK_INDEX
static int YEAR_INDEX
private static org.joda.time.PeriodType cDTime
private static org.joda.time.PeriodType cDays
private static org.joda.time.PeriodType cHours
private static org.joda.time.PeriodType cMillis
private static org.joda.time.PeriodType cMinutes
private static org.joda.time.PeriodType cMonths
private static org.joda.time.PeriodType cSeconds
private static org.joda.time.PeriodType cStandard
private static org.joda.time.PeriodType cTime
private static final java.util.Map cTypes
private static org.joda.time.PeriodType cWeeks
private static org.joda.time.PeriodType cYD
private static org.joda.time.PeriodType cYDTime
private static org.joda.time.PeriodType cYMD
private static org.joda.time.PeriodType cYMDTime
private static org.joda.time.PeriodType cYWD
private static org.joda.time.PeriodType cYWDTime
private static org.joda.time.PeriodType cYears
private static final long serialVersionUID
private final int[] iIndices
private final java.lang.String iName
private final org.joda.time.DurationFieldType[] iTypes
    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(32);

        <org.joda.time.PeriodType: java.util.Map cTypes> = $r0;

        <org.joda.time.PeriodType: int YEAR_INDEX> = 0;

        <org.joda.time.PeriodType: int MONTH_INDEX> = 1;

        <org.joda.time.PeriodType: int WEEK_INDEX> = 2;

        <org.joda.time.PeriodType: int DAY_INDEX> = 3;

        <org.joda.time.PeriodType: int HOUR_INDEX> = 4;

        <org.joda.time.PeriodType: int MINUTE_INDEX> = 5;

        <org.joda.time.PeriodType: int SECOND_INDEX> = 6;

        <org.joda.time.PeriodType: int MILLI_INDEX> = 7;

        return;
    }
    protected void <init>(java.lang.String, org.joda.time.DurationFieldType[], int[])
    {
        org.joda.time.PeriodType r0;
        java.lang.String $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.joda.time.DurationFieldType[];

        $r3 := @parameter2: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.PeriodType: java.lang.String iName> = $r1;

        r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes> = $r2;

        r0.<org.joda.time.PeriodType: int[] iIndices> = $r3;

        return;
    }
    public static org.joda.time.PeriodType dayTime()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDTime>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[5];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r1[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r1[3] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r1[4] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = 0;

        $r3[4] = 1;

        $r3[5] = 2;

        $r3[6] = 3;

        $r3[7] = 4;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("DayTime", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cDTime> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType days()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = 0;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Days", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType forFields(org.joda.time.DurationFieldType[])
    {
        org.joda.time.DurationFieldType[] $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Throwable $r2;
        org.joda.time.DurationFieldType $r3;
        java.util.Map $r4;
        boolean $z0;
        org.joda.time.PeriodType $r5, $r6, $r10;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.util.ArrayList $r11;
        java.util.List $r12;

        $r0 := @parameter0: org.joda.time.DurationFieldType[];

        entermonitor class "Lorg/joda/time/PeriodType;";

        if $r0 == null goto label02;

     label01:
        $i0 = lengthof $r0;

        if $i0 != 0 goto label04;

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Types array must not be null or empty");

        throw $r1;

     label03:
        $r2 := @caughtexception;

        exitmonitor class "Lorg/joda/time/PeriodType;";

        throw $r2;

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label07;

        $r3 = $r0[$i0];

        if $r3 != null goto label06;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Types array must not contain null");

        throw $r1;

     label06:
        $i0 = $i0 + 1;

        goto label05;

     label07:
        $r4 = <org.joda.time.PeriodType: java.util.Map cTypes>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDayTime()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearMonthDay()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDayTime()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearWeekDay()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDayTime()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType yearDay()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType dayTime()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType time()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType years()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType months()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType weeks()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType days()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType hours()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType minutes()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType seconds()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r5 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>();

        $r6 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType millis()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label08:
        $r5 = new org.joda.time.PeriodType;

        specialinvoke $r5.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>(null, $r0, null);

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z0 = $r7 instanceof org.joda.time.PeriodType;

        if $z0 == 0 goto label10;

        $r5 = (org.joda.time.PeriodType) $r7;

     label09:
        exitmonitor class "Lorg/joda/time/PeriodType;";

        return $r5;

     label10:
        if $r7 == null goto label12;

     label11:
        $r1 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PeriodType does not support fields: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label12:
        $r10 = staticinvoke <org.joda.time.PeriodType: org.joda.time.PeriodType standard()>();

        $r6 = $r10;

        $r11 = new java.util.ArrayList;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label13;

        $r6 = virtualinvoke $r10.<org.joda.time.PeriodType: org.joda.time.PeriodType withYearsRemoved()>();

     label13:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label14;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withMonthsRemoved()>();

     label14:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label15;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withWeeksRemoved()>();

     label15:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label16;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withDaysRemoved()>();

     label16:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label17;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withHoursRemoved()>();

     label17:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label18;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withMinutesRemoved()>();

     label18:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label19;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withSecondsRemoved()>();

     label19:
        $r3 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $z0 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label20;

        $r6 = virtualinvoke $r6.<org.joda.time.PeriodType: org.joda.time.PeriodType withMillisRemoved()>();

     label20:
        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i0 <= 0 goto label21;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r11);

        $r1 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PeriodType does not support fields: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label21:
        $r10 = new org.joda.time.PeriodType;

        $r0 = $r6.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        specialinvoke $r10.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>(null, $r0, null);

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r5 = (org.joda.time.PeriodType) $r7;

        if $r5 == null goto label22;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r5);

        goto label09;

     label22:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r6);

     label23:
        $r5 = $r6;

        goto label09;

        catch java.lang.Throwable from label01 to label03 with label03;
        catch java.lang.Throwable from label05 to label09 with label03;
        catch java.lang.Throwable from label11 to label23 with label03;
    }
    public static org.joda.time.PeriodType hours()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cHours>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = 0;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Hours", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cHours> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType millis()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMillis>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = 0;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Millis", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cMillis> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType minutes()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMinutes>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = 0;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Minutes", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cMinutes> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType months()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cMonths>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = 0;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Months", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cMonths> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType seconds()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = 0;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Seconds", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType standard()
    {
        org.joda.time.DurationFieldType[] $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r0 = newarray (org.joda.time.DurationFieldType)[8];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r0[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $r0[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $r0[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r0[3] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r0[4] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r0[5] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r0[6] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r0[7] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 2;

        $r3[3] = 3;

        $r3[4] = 4;

        $r3[5] = 5;

        $r3[6] = 6;

        $r3[7] = 7;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Standard", $r0, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cStandard> = $r1;

     label1:
        return $r1;
    }
    public static org.joda.time.PeriodType time()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cTime>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[4];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r1[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r1[3] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = 0;

        $r3[5] = 1;

        $r3[6] = 2;

        $r3[7] = 3;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Time", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cTime> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType weeks()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cWeeks>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = 0;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Weeks", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cWeeks> = $r1;

     label1:
        return $r1;
    }
    private org.joda.time.PeriodType withFieldRemoved(int, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r0, $r9;
        org.joda.time.DurationFieldType[] $r1, $r4;
        org.joda.time.PeriodType r2, $r7;
        int[] $r3, $r6;
        org.joda.time.DurationFieldType $r5;
        java.lang.StringBuilder $r8;

        r2 := @this: org.joda.time.PeriodType;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i1 = 0;

        $r3 = r2.<org.joda.time.PeriodType: int[] iIndices>;

        $i2 = $r3[$i0];

        if $i2 != -1 goto label01;

        return r2;

     label01:
        $i3 = virtualinvoke r2.<org.joda.time.PeriodType: int size()>();

        $i3 = $i3 + -1;

        $r1 = newarray (org.joda.time.DurationFieldType)[$i3];

        $i3 = 0;

     label02:
        $r4 = r2.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $i4 = lengthof $r4;

        if $i3 >= $i4 goto label05;

        if $i3 >= $i2 goto label04;

        $r4 = r2.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r5 = $r4[$i3];

        $r1[$i3] = $r5;

     label03:
        $i3 = $i3 + 1;

        goto label02;

     label04:
        if $i3 <= $i2 goto label03;

        $i4 = $i3 + -1;

        $r4 = r2.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r5 = $r4[$i3];

        $r1[$i4] = $r5;

        goto label03;

     label05:
        $r3 = newarray (int)[8];

     label06:
        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label12;

        if $i1 >= $i0 goto label08;

        $r6 = r2.<org.joda.time.PeriodType: int[] iIndices>;

        $i2 = $r6[$i1];

        $r3[$i1] = $i2;

     label07:
        $i1 = $i1 + 1;

        goto label06;

     label08:
        if $i1 <= $i0 goto label11;

        $r6 = r2.<org.joda.time.PeriodType: int[] iIndices>;

        $i2 = $r6[$i1];

        if $i2 != -1 goto label10;

        $i2 = -1;

     label09:
        $r3[$i1] = $i2;

        goto label07;

     label10:
        $r6 = r2.<org.joda.time.PeriodType: int[] iIndices>;

        $i2 = $r6[$i1];

        $i2 = $i2 + -1;

        goto label09;

     label11:
        $r3[$i1] = -1;

        goto label07;

     label12:
        $r7 = new org.joda.time.PeriodType;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r2.<org.joda.time.PeriodType: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>($r0, $r1, $r3);

        return $r7;
    }
    public static org.joda.time.PeriodType yearDay()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYD>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[2];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[1] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = 1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearDay", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYD> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType yearDayTime()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYDTime>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[6];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r1[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r1[3] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r1[4] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r1[5] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = 1;

        $r3[4] = 2;

        $r3[5] = 3;

        $r3[6] = 4;

        $r3[7] = 5;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearDayTime", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYDTime> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType yearMonthDay()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMD>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[3];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[2] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = -1;

        $r3[3] = 2;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearMonthDay", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYMD> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType yearMonthDayTime()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYMDTime>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[7];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType months()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r1[3] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r1[4] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r1[5] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r1[6] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = -1;

        $r3[3] = 2;

        $r3[4] = 3;

        $r3[5] = 4;

        $r3[6] = 5;

        $r3[7] = 6;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearMonthDayTime", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYMDTime> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType yearWeekDay()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWD>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[3];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[2] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = -1;

        $r3[2] = 1;

        $r3[3] = 2;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearWeekDay", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYWD> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType yearWeekDayTime()
    {
        org.joda.time.PeriodType $r0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;
        int[] $r3;

        $r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYWDTime>;

        if $r0 != null goto label1;

        $r0 = new org.joda.time.PeriodType;

        $r1 = newarray (org.joda.time.DurationFieldType)[7];

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType weeks()>();

        $r1[1] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>();

        $r1[2] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>();

        $r1[3] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType minutes()>();

        $r1[4] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>();

        $r1[5] = $r2;

        $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType millis()>();

        $r1[6] = $r2;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = -1;

        $r3[2] = 1;

        $r3[3] = 2;

        $r3[4] = 3;

        $r3[5] = 4;

        $r3[6] = 5;

        $r3[7] = 6;

        specialinvoke $r0.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("YearWeekDayTime", $r1, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYWDTime> = $r0;

     label1:
        return $r0;
    }
    public static org.joda.time.PeriodType years()
    {
        org.joda.time.DurationFieldType $r0;
        org.joda.time.PeriodType $r1;
        org.joda.time.DurationFieldType[] $r2;
        int[] $r3;

        $r1 = <org.joda.time.PeriodType: org.joda.time.PeriodType cYears>;

        if $r1 != null goto label1;

        $r1 = new org.joda.time.PeriodType;

        $r2 = newarray (org.joda.time.DurationFieldType)[1];

        $r0 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType years()>();

        $r2[0] = $r0;

        $r3 = newarray (int)[8];

        $r3[0] = 0;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        specialinvoke $r1.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Years", $r2, $r3);

        <org.joda.time.PeriodType: org.joda.time.PeriodType cYears> = $r1;

     label1:
        return $r1;
    }
    boolean addIndexedField(org.joda.time.ReadablePeriod, int, int[], int)
    {
        org.joda.time.PeriodType r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0, $i1, $i2;
        int[] $r2, $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i1 := @parameter3: int;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.joda.time.PeriodType: int[] iIndices>;

        $i0 = $r3[$i0];

        if $i0 != -1 goto label2;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Field is not supported");

        throw $r4;

     label2:
        $i2 = $r2[$i0];

        $i1 = staticinvoke <org.joda.time.field.FieldUtils: int safeAdd(int,int)>($i2, $i1);

        $r2[$i0] = $i1;

        return 1;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.PeriodType r0, $r3;
        org.joda.time.DurationFieldType[] $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: org.joda.time.PeriodType;

        $r2 := @parameter0: java.lang.Object;

        if r0 != $r2 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof org.joda.time.PeriodType;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (org.joda.time.PeriodType) $r2;

        $r4 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r1 = $r3.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r1);

        return $z0;
    }
    public org.joda.time.DurationFieldType getFieldType(int)
    {
        org.joda.time.PeriodType r0;
        int $i0;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;

        r0 := @this: org.joda.time.PeriodType;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r2 = $r1[$i0];

        return $r2;
    }
    int getIndexedField(org.joda.time.ReadablePeriod, int)
    {
        org.joda.time.PeriodType r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0;
        int[] $r2;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.PeriodType: int[] iIndices>;

        $i0 = $r2[$i0];

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.joda.time.ReadablePeriod: int getValue(int)>($i0);

        return $i0;
    }
    public java.lang.String getName()
    {
        org.joda.time.PeriodType r0;
        java.lang.String r1;

        r0 := @this: org.joda.time.PeriodType;

        r1 = r0.<org.joda.time.PeriodType: java.lang.String iName>;

        return r1;
    }
    public int hashCode()
    {
        org.joda.time.PeriodType r0;
        int $i0, $i1, $i2;
        org.joda.time.DurationFieldType[] $r1;
        org.joda.time.DurationFieldType $r2;

        r0 := @this: org.joda.time.PeriodType;

        $i1 = 0;

        $i2 = 0;

     label1:
        $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label2;

        $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r2 = $r1[$i1];

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i2 + $i0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }
    public int indexOf(org.joda.time.DurationFieldType)
    {
        org.joda.time.PeriodType r0;
        org.joda.time.DurationFieldType $r1, $r3;
        int $i0, $i1;
        org.joda.time.DurationFieldType[] $r2;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: org.joda.time.DurationFieldType;

        $i1 = 0;

        $i0 = virtualinvoke r0.<org.joda.time.PeriodType: int size()>();

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $r3 = $r2[$i1];

        if $r3 != $r1 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }
    public boolean isSupported(org.joda.time.DurationFieldType)
    {
        org.joda.time.PeriodType r0;
        org.joda.time.DurationFieldType $r1;
        int $i0;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: org.joda.time.DurationFieldType;

        $i0 = virtualinvoke r0.<org.joda.time.PeriodType: int indexOf(org.joda.time.DurationFieldType)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean setIndexedField(org.joda.time.ReadablePeriod, int, int[], int)
    {
        org.joda.time.PeriodType r0;
        org.joda.time.ReadablePeriod $r1;
        int $i0, $i1;
        int[] $r2, $r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: org.joda.time.PeriodType;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i1 := @parameter3: int;

        $r3 = r0.<org.joda.time.PeriodType: int[] iIndices>;

        $i0 = $r3[$i0];

        if $i0 != -1 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Field is not supported");

        throw $r4;

     label1:
        $r2[$i0] = $i1;

        return 1;
    }
    public int size()
    {
        org.joda.time.PeriodType r0;
        org.joda.time.DurationFieldType[] $r1;
        int $i0;

        r0 := @this: org.joda.time.PeriodType;

        $r1 = r0.<org.joda.time.PeriodType: org.joda.time.DurationFieldType[] iTypes>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public java.lang.String toString()
    {
        org.joda.time.PeriodType r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.joda.time.PeriodType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PeriodType[");

        $r2 = virtualinvoke r0.<org.joda.time.PeriodType: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public org.joda.time.PeriodType withDaysRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(3, "NoDays");

        return r0;
    }
    public org.joda.time.PeriodType withHoursRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(4, "NoHours");

        return r0;
    }
    public org.joda.time.PeriodType withMillisRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(7, "NoMillis");

        return r0;
    }
    public org.joda.time.PeriodType withMinutesRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(5, "NoMinutes");

        return r0;
    }
    public org.joda.time.PeriodType withMonthsRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(1, "NoMonths");

        return r0;
    }
    public org.joda.time.PeriodType withSecondsRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(6, "NoSeconds");

        return r0;
    }
    public org.joda.time.PeriodType withWeeksRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(2, "NoWeeks");

        return r0;
    }
    public org.joda.time.PeriodType withYearsRemoved()
    {
        org.joda.time.PeriodType r0;

        r0 := @this: org.joda.time.PeriodType;

        r0 = specialinvoke r0.<org.joda.time.PeriodType: org.joda.time.PeriodType withFieldRemoved(int,java.lang.String)>(0, "NoYears");

        return r0;
    }
