org.joda.time.field.StrictDateTimeField extends org.joda.time.field.DelegatedDateTimeField
private static final long serialVersionUID
    protected void <init>(org.joda.time.DateTimeField)
    {
        org.joda.time.field.StrictDateTimeField r0;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.field.StrictDateTimeField;

        $r1 := @parameter0: org.joda.time.DateTimeField;

        specialinvoke r0.<org.joda.time.field.DelegatedDateTimeField: void <init>(org.joda.time.DateTimeField)>($r1);

        return;
    }
    public static org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField)
    {
        org.joda.time.DateTimeField $r0;
        boolean $z0;
        org.joda.time.field.LenientDateTimeField $r1;
        org.joda.time.field.StrictDateTimeField $r2;

        $r0 := @parameter0: org.joda.time.DateTimeField;

        if $r0 != null goto label1;

        return null;

     label1:
        $z0 = $r0 instanceof org.joda.time.field.LenientDateTimeField;

        if $z0 == 0 goto label2;

        $r1 = (org.joda.time.field.LenientDateTimeField) $r0;

        $r0 = virtualinvoke $r1.<org.joda.time.field.LenientDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

     label2:
        $z0 = virtualinvoke $r0.<org.joda.time.DateTimeField: boolean isLenient()>();

        if $z0 == 0 goto label3;

        $r2 = new org.joda.time.field.StrictDateTimeField;

        specialinvoke $r2.<org.joda.time.field.StrictDateTimeField: void <init>(org.joda.time.DateTimeField)>($r0);

        return $r2;

     label3:
        return $r0;
    }
    public final boolean isLenient()
    {
        org.joda.time.field.StrictDateTimeField r0;

        r0 := @this: org.joda.time.field.StrictDateTimeField;

        return 0;
    }
    public long set(long, int)
    {
        org.joda.time.field.StrictDateTimeField r0;
        long $l0;
        int $i1, $i2, $i3;

        r0 := @this: org.joda.time.field.StrictDateTimeField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<org.joda.time.field.StrictDateTimeField: int getMinimumValue(long)>($l0);

        $i3 = virtualinvoke r0.<org.joda.time.field.StrictDateTimeField: int getMaximumValue(long)>($l0);

        staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, $i1, $i2, $i3);

        $l0 = specialinvoke r0.<org.joda.time.field.DelegatedDateTimeField: long set(long,int)>($l0, $i1);

        return $l0;
    }
