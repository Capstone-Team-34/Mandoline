org.joda.time.field.ScaledDurationField extends org.joda.time.field.DecoratedDurationField
private static final long serialVersionUID
private final int iScalar
    public void <init>(org.joda.time.DurationField, org.joda.time.DurationFieldType, int)
    {
        org.joda.time.field.ScaledDurationField r0;
        org.joda.time.DurationField $r1;
        org.joda.time.DurationFieldType $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $r1 := @parameter0: org.joda.time.DurationField;

        $r2 := @parameter1: org.joda.time.DurationFieldType;

        $i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.field.DecoratedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.DurationFieldType)>($r1, $r2);

        if $i0 == 0 goto label1;

        if $i0 != 1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The scalar must not be 0 or 1");

        throw $r3;

     label2:
        r0.<org.joda.time.field.ScaledDurationField: int iScalar> = $i0;

        return;
    }
    public long add(long, int)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l2, $l3;
        int $i1;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l2 = (long) $i1;

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l3 = (long) $i1;

        $l2 = $l2 * $l3;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,long)>($l0, $l2);

        return $l0;
    }
    public long add(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        int $i2;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l1 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>($l1, $i2);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,long)>($l0, $l1);

        return $l0;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.field.ScaledDurationField r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        org.joda.time.DurationField $r3, $r4;
        org.joda.time.DurationFieldType $r5, $r6;
        int $i0, $i1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.field.ScaledDurationField;

        if $z0 == 0 goto label2;

        $r2 = (org.joda.time.field.ScaledDurationField) $r1;

        $r3 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $r4 = virtualinvoke $r2.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        $r6 = virtualinvoke $r2.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        if $r5 != $r6 goto label2;

        $i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i1 = $r2.<org.joda.time.field.ScaledDurationField: int iScalar>;

        if $i0 == $i1 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public int getDifference(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        int $i2, $i3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i3 = virtualinvoke $r1.<org.joda.time.DurationField: int getDifference(long,long)>($l0, $l1);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i2 = $i3 / $i2;

        return $i2;
    }
    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        org.joda.time.DurationField $r1;
        int $i2;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getDifferenceAsLong(long,long)>($l0, $l1);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l1 = (long) $i2;

        $l0 = $l0 / $l1;

        return $l0;
    }
    public long getMillis(int)
    {
        org.joda.time.field.ScaledDurationField r0;
        int $i0;
        long $l1, $l2;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l2 = (long) $i0;

        $l1 = $l1 * $l2;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long)>($l1);

        return $l1;
    }
    public long getMillis(int, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        int $i0;
        long $l1, $l2, $l3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 = (long) $i0;

        $i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l3 = (long) $i0;

        $l2 = $l2 * $l3;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long,long)>($l2, $l1);

        return $l1;
    }
    public long getMillis(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0;
        int $i1;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l0 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>($l0, $i1);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long)>($l0);

        return $l0;
    }
    public long getMillis(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        int $i2;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l0 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>($l0, $i2);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long,long)>($l0, $l1);

        return $l0;
    }
    public int getScalar()
    {
        org.joda.time.field.ScaledDurationField r0;
        int i0;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        return i0;
    }
    public long getUnitMillis()
    {
        org.joda.time.field.ScaledDurationField r0;
        org.joda.time.DurationField $r1;
        long $l0, $l2;
        int $i1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getUnitMillis()>();

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l2 = (long) $i1;

        $l0 = $l0 * $l2;

        return $l0;
    }
    public int getValue(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0;
        int $i1, $i2;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i2 = virtualinvoke $r1.<org.joda.time.DurationField: int getValue(long)>($l0);

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i1 = $i2 / $i1;

        return $i1;
    }
    public int getValue(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        int $i2, $i3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i3 = virtualinvoke $r1.<org.joda.time.DurationField: int getValue(long,long)>($l0, $l1);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i2 = $i3 / $i2;

        return $i2;
    }
    public long getValueAsLong(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l2;
        org.joda.time.DurationField $r1;
        int $i1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getValueAsLong(long)>($l0);

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l2 = (long) $i1;

        $l0 = $l0 / $l2;

        return $l0;
    }
    public long getValueAsLong(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long $l0, $l1;
        org.joda.time.DurationField $r1;
        int $i2;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getValueAsLong(long,long)>($l0, $l1);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l1 = (long) $i2;

        $l0 = $l0 / $l1;

        return $l0;
    }
    public int hashCode()
    {
        org.joda.time.field.ScaledDurationField r0;
        int $i0, $i3;
        long $l1, $l2;
        org.joda.time.DurationFieldType $r1;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l1 = (long) $i0;

        $l2 = $l1 >>> 32;

        $l1 = $l1 ^ $l2;

        $i0 = (int) $l1;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        $i3 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i3;

        $r2 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i3;

        return $i0;
    }
