org.apache.commons.cli.PatternOptionBuilder extends java.lang.Object
public static final java.lang.Class CLASS_VALUE
public static final java.lang.Class DATE_VALUE
public static final java.lang.Class EXISTING_FILE_VALUE
public static final java.lang.Class FILES_VALUE
public static final java.lang.Class FILE_VALUE
public static final java.lang.Class NUMBER_VALUE
public static final java.lang.Class OBJECT_VALUE
public static final java.lang.Class STRING_VALUE
public static final java.lang.Class URL_VALUE
static java.lang.Class array$Ljava$io$File
static java.lang.Class class$java$io$File
static java.lang.Class class$java$io$FileInputStream
static java.lang.Class class$java$lang$Class
static java.lang.Class class$java$lang$Number
static java.lang.Class class$java$lang$Object
static java.lang.Class class$java$lang$String
static java.lang.Class class$java$net$URL
static java.lang.Class class$java$util$Date
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$String>;

        if $r0 != null goto label10;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$String> = $r0;

     label01:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class STRING_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Object>;

        if $r0 != null goto label11;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Object> = $r0;

     label02:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class OBJECT_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Number>;

        if $r0 != null goto label12;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Number> = $r0;

     label03:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class NUMBER_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$util$Date>;

        if $r0 != null goto label13;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.util.Date");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$util$Date> = $r0;

     label04:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class DATE_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Class>;

        if $r0 != null goto label14;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Class> = $r0;

     label05:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class CLASS_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$FileInputStream>;

        if $r0 != null goto label15;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.io.FileInputStream");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$FileInputStream> = $r0;

     label06:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class EXISTING_FILE_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$File>;

        if $r0 != null goto label16;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.io.File");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$File> = $r0;

     label07:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILE_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class array$Ljava$io$File>;

        if $r0 != null goto label17;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("[Ljava.io.File;");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class array$Ljava$io$File> = $r0;

     label08:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILES_VALUE> = $r1;

        $r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$net$URL>;

        if $r0 != null goto label18;

        $r0 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$(java.lang.String)>("java.net.URL");

        $r1 = $r0;

        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$net$URL> = $r0;

     label09:
        <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class URL_VALUE> = $r1;

        return;

     label10:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$String>;

        goto label01;

     label11:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Object>;

        goto label02;

     label12:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Number>;

        goto label03;

     label13:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$util$Date>;

        goto label04;

     label14:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$lang$Class>;

        goto label05;

     label15:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$FileInputStream>;

        goto label06;

     label16:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$io$File>;

        goto label07;

     label17:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class array$Ljava$io$File>;

        goto label08;

     label18:
        $r1 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class class$java$net$URL>;

        goto label09;
    }
    public void <init>()
    {
        org.apache.commons.cli.PatternOptionBuilder r0;

        r0 := @this: org.apache.commons.cli.PatternOptionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static java.lang.Object getValueClass(char)
    {
        char $c0;
        java.lang.Class r0;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 35: goto label06;
            case 37: goto label04;
            case 42: goto label09;
            case 43: goto label05;
            case 47: goto label10;
            case 58: goto label03;
            case 60: goto label07;
            case 62: goto label08;
            case 64: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class OBJECT_VALUE>;

        return r0;

     label03:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class STRING_VALUE>;

        return r0;

     label04:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class NUMBER_VALUE>;

        return r0;

     label05:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class CLASS_VALUE>;

        return r0;

     label06:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class DATE_VALUE>;

        return r0;

     label07:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class EXISTING_FILE_VALUE>;

        return r0;

     label08:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILE_VALUE>;

        return r0;

     label09:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILES_VALUE>;

        return r0;

     label10:
        r0 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class URL_VALUE>;

        return r0;
    }
    public static boolean isValueCode(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if $c0 == 64 goto label1;

        if $c0 == 58 goto label1;

        if $c0 == 37 goto label1;

        if $c0 == 43 goto label1;

        if $c0 == 35 goto label1;

        if $c0 == 60 goto label1;

        if $c0 == 62 goto label1;

        if $c0 == 42 goto label1;

        if $c0 == 47 goto label1;

        if $c0 != 33 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static org.apache.commons.cli.Options parsePattern(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.commons.cli.Options r1;
        boolean $z0, z1, $z2;
        char c0, $c3;
        java.lang.Object r2;
        int i1, $i2;
        org.apache.commons.cli.Option $r3;

        $r0 := @parameter0: java.lang.String;

        $z0 = 1;

        c0 = 32;

        z1 = 0;

        r2 = null;

        r1 = new org.apache.commons.cli.Options;

        specialinvoke r1.<org.apache.commons.cli.Options: void <init>()>();

        i1 = 0;

     label01:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label08;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $z2 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: boolean isValueCode(char)>($c3);

        if $z2 != 0 goto label06;

        if c0 == 32 goto label03;

        if r2 == null goto label05;

        $z2 = 1;

     label02:
        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder hasArg(boolean)>($z2);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder isRequired(boolean)>(z1);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withType(java.lang.Object)>(r2);

        $r3 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(c0);

        virtualinvoke r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r3);

        z1 = 0;

        r2 = null;

     label03:
        c0 = $c3;

     label04:
        i1 = i1 + 1;

        goto label01;

     label05:
        $z2 = 0;

        goto label02;

     label06:
        if $c3 != 33 goto label07;

        z1 = 1;

        goto label04;

     label07:
        r2 = staticinvoke <org.apache.commons.cli.PatternOptionBuilder: java.lang.Object getValueClass(char)>($c3);

        goto label04;

     label08:
        if c0 == 32 goto label11;

        if r2 == null goto label10;

     label09:
        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder hasArg(boolean)>($z0);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder isRequired(boolean)>(z1);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withType(java.lang.Object)>(r2);

        $r3 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(c0);

        virtualinvoke r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r3);

        return r1;

     label10:
        $z0 = 0;

        goto label09;

     label11:
        return r1;
    }
