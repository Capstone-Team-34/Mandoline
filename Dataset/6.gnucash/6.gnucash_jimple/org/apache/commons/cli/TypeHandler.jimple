org.apache.commons.cli.TypeHandler extends java.lang.Object
    public void <init>()
    {
        org.apache.commons.cli.TypeHandler r0;

        r0 := @this: org.apache.commons.cli.TypeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.Class createClass(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        org.apache.commons.cli.ParseException $r3;
        java.lang.StringBuffer $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new org.apache.commons.cli.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find the class: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.commons.cli.ParseException: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static java.util.Date createDate(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not yet implemented");

        throw $r1;
    }
    public static java.io.File createFile(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        return $r1;
    }
    public static java.io.File[] createFiles(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not yet implemented");

        throw $r1;
    }
    public static java.lang.Number createNumber(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.lang.NumberFormatException r1;
        int $i0;
        java.lang.Double $r2;
        java.lang.Long $r3;
        org.apache.commons.cli.ParseException $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(46);

     label2:
        if $i0 == -1 goto label5;

     label3:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r0);

     label4:
        return $r2;

     label5:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r0);

     label6:
        return $r3;

     label7:
        r1 := @caughtexception;

        $r4 = new org.apache.commons.cli.ParseException;

        $r0 = virtualinvoke r1.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $r4.<org.apache.commons.cli.ParseException: void <init>(java.lang.String)>($r0);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }
    public static java.lang.Object createObject(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0, $r7;
        java.lang.ClassNotFoundException r1;
        java.lang.Exception r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        org.apache.commons.cli.ParseException $r5;
        java.lang.StringBuffer $r6;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

     label3:
        return $r4;

     label4:
        r1 := @caughtexception;

        $r5 = new org.apache.commons.cli.ParseException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find the class: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.cli.ParseException: void <init>(java.lang.String)>($r0);

        throw $r5;

     label5:
        r2 := @caughtexception;

        $r5 = new org.apache.commons.cli.ParseException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Unable to create an instance of: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.cli.ParseException: void <init>(java.lang.String)>($r0);

        throw $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }
    public static java.net.URL createURL(java.lang.String) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.net.MalformedURLException r1;
        java.net.URL $r2;
        org.apache.commons.cli.ParseException $r3;
        java.lang.StringBuffer $r4;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new org.apache.commons.cli.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse the URL: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.commons.cli.ParseException: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }
    public static java.lang.Object createValue(java.lang.String, java.lang.Class) throws org.apache.commons.cli.ParseException
    {
        java.lang.Class $r0, $r2;
        java.lang.String r1;
        java.lang.Object $r3;
        java.lang.Number $r4;
        java.util.Date $r5;
        java.io.File $r6;
        java.io.File[] $r7;
        java.net.URL $r8;

        r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Class;

        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class STRING_VALUE>;

        if $r2 != $r0 goto label1;

        return r1;

     label1:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class OBJECT_VALUE>;

        if $r2 != $r0 goto label2;

        $r3 = staticinvoke <org.apache.commons.cli.TypeHandler: java.lang.Object createObject(java.lang.String)>(r1);

        return $r3;

     label2:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class NUMBER_VALUE>;

        if $r2 != $r0 goto label3;

        $r4 = staticinvoke <org.apache.commons.cli.TypeHandler: java.lang.Number createNumber(java.lang.String)>(r1);

        return $r4;

     label3:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class DATE_VALUE>;

        if $r2 != $r0 goto label4;

        $r5 = staticinvoke <org.apache.commons.cli.TypeHandler: java.util.Date createDate(java.lang.String)>(r1);

        return $r5;

     label4:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class CLASS_VALUE>;

        if $r2 != $r0 goto label5;

        $r0 = staticinvoke <org.apache.commons.cli.TypeHandler: java.lang.Class createClass(java.lang.String)>(r1);

        return $r0;

     label5:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILE_VALUE>;

        if $r2 != $r0 goto label6;

        $r6 = staticinvoke <org.apache.commons.cli.TypeHandler: java.io.File createFile(java.lang.String)>(r1);

        return $r6;

     label6:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class EXISTING_FILE_VALUE>;

        if $r2 != $r0 goto label7;

        $r6 = staticinvoke <org.apache.commons.cli.TypeHandler: java.io.File createFile(java.lang.String)>(r1);

        return $r6;

     label7:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class FILES_VALUE>;

        if $r2 != $r0 goto label8;

        $r7 = staticinvoke <org.apache.commons.cli.TypeHandler: java.io.File[] createFiles(java.lang.String)>(r1);

        return $r7;

     label8:
        $r2 = <org.apache.commons.cli.PatternOptionBuilder: java.lang.Class URL_VALUE>;

        if $r2 != $r0 goto label9;

        $r8 = staticinvoke <org.apache.commons.cli.TypeHandler: java.net.URL createURL(java.lang.String)>(r1);

        return $r8;

     label9:
        return null;
    }
    public static java.lang.Object createValue(java.lang.String, java.lang.Object) throws org.apache.commons.cli.ParseException
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.Class) $r1;

        $r1 = staticinvoke <org.apache.commons.cli.TypeHandler: java.lang.Object createValue(java.lang.String,java.lang.Class)>($r0, $r2);

        return $r1;
    }
