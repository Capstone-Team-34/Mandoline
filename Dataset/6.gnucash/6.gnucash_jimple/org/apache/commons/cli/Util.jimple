org.apache.commons.cli.Util extends java.lang.Object
    void <init>()
    {
        org.apache.commons.cli.Util r0;

        r0 := @this: org.apache.commons.cli.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String stripLeadingAndTrailingQuotes(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        return $r0;
    }
    static java.lang.String stripLeadingHyphens(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i0);

        return r0;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label3:
        return r0;
    }
