org.apache.commons.httpclient.auth.AuthState extends java.lang.Object
public static final java.lang.String PREEMPTIVE_AUTH_SCHEME
private boolean authAttempted
private boolean authRequested
private org.apache.commons.httpclient.auth.AuthScheme authScheme
private boolean preemptive
    public void <init>()
    {
        org.apache.commons.httpclient.auth.AuthState r0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme> = null;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authRequested> = 0;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted> = 0;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive> = 0;

        return;
    }
    public org.apache.commons.httpclient.auth.AuthScheme getAuthScheme()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        org.apache.commons.httpclient.auth.AuthScheme r1;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        r1 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        return r1;
    }
    public java.lang.String getRealm()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.auth.AuthScheme $r2;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        $r1 = interfaceinvoke $r2.<org.apache.commons.httpclient.auth.AuthScheme: java.lang.String getRealm()>();

        return $r1;

     label1:
        return null;
    }
    public void invalidate()
    {
        org.apache.commons.httpclient.auth.AuthState r0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme> = null;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authRequested> = 0;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted> = 0;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive> = 0;

        return;
    }
    public boolean isAuthAttempted()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted>;

        return z0;
    }
    public boolean isAuthRequested()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean authRequested>;

        return z0;
    }
    public boolean isPreemptive()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive>;

        return z0;
    }
    public void setAuthAttempted(boolean)
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        $z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted> = $z0;

        return;
    }
    public void setAuthRequested(boolean)
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        $z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authRequested> = $z0;

        return;
    }
    public void setAuthScheme(org.apache.commons.httpclient.auth.AuthScheme)
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        org.apache.commons.httpclient.auth.AuthScheme $r1, $r2;
        boolean $z0;
        java.lang.Class $r3;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        $r1 := @parameter0: org.apache.commons.httpclient.auth.AuthScheme;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.apache.commons.httpclient.auth.AuthState: void invalidate()>();

        return;

     label1:
        $z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive> = 0;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted> = 0;

     label2:
        r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme> = $r1;

        return;
    }
    public void setPreemptive()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        org.apache.commons.httpclient.auth.AuthScheme $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        $z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Authentication state already initialized");

        throw $r2;

     label1:
        $r1 = staticinvoke <org.apache.commons.httpclient.auth.AuthPolicy: org.apache.commons.httpclient.auth.AuthScheme getAuthScheme(java.lang.String)>("basic");

        r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme> = $r1;

        r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive> = 1;

     label2:
        return;
    }
    public java.lang.String toString()
    {
        org.apache.commons.httpclient.auth.AuthState r0;
        java.lang.StringBuffer r1;
        boolean $z0;
        org.apache.commons.httpclient.auth.AuthScheme $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.auth.AuthState;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Auth state: auth requested [");

        $z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean authRequested>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]; auth attempted [");

        $z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean authAttempted>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]; auth scheme [");

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.httpclient.auth.AuthScheme: java.lang.String getSchemeName()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]; realm [");

        $r2 = r0.<org.apache.commons.httpclient.auth.AuthState: org.apache.commons.httpclient.auth.AuthScheme authScheme>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.httpclient.auth.AuthScheme: java.lang.String getRealm()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] preemptive [");

        $z0 = r0.<org.apache.commons.httpclient.auth.AuthState: boolean preemptive>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
