org.apache.commons.httpclient.auth.DigestScheme extends org.apache.commons.httpclient.auth.RFC2617Scheme
private static final char[] HEXADECIMAL
private static final org.apache.commons.logging.Log LOG
private static final java.lang.String NC
private static final int QOP_AUTH
private static final int QOP_AUTH_INT
private static final int QOP_MISSING
static java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme
private java.lang.String cnonce
private boolean complete
private final org.apache.commons.httpclient.util.ParameterFormatter formatter
private int qopVariant
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        org.apache.commons.logging.Log $r2;
        char[] $r3;

        $r0 = <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.auth.DigestScheme");

        $r1 = $r0;

        <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme> = $r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG> = $r2;

        $r3 = newarray (char)[16];

        $r3[0] = 48;

        $r3[1] = 49;

        $r3[2] = 50;

        $r3[3] = 51;

        $r3[4] = 52;

        $r3[5] = 53;

        $r3[6] = 54;

        $r3[7] = 55;

        $r3[8] = 56;

        $r3[9] = 57;

        $r3[10] = 97;

        $r3[11] = 98;

        $r3[12] = 99;

        $r3[13] = 100;

        $r3[14] = 101;

        $r3[15] = 102;

        <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL> = $r3;

        return;

     label2:
        $r1 = <org.apache.commons.httpclient.auth.DigestScheme: java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme>;

        goto label1;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        org.apache.commons.httpclient.util.ParameterFormatter $r1;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        specialinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 0;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete> = 0;

        $r1 = new org.apache.commons.httpclient.util.ParameterFormatter;

        specialinvoke $r1.<org.apache.commons.httpclient.util.ParameterFormatter: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter> = $r1;

        return;
    }
    public void <init>(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: void processChallenge(java.lang.String)>($r1);

        return;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static java.lang.String createCnonce()
    {
        java.security.NoSuchAlgorithmException r0;
        org.apache.commons.logging.Log $r1;
        java.security.MessageDigest $r2;
        long $l0;
        java.lang.String $r3;
        byte[] $r4;
        org.apache.commons.httpclient.HttpClientError $r5;

        $r1 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createCnonce()");

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

        $r3 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r4);

        return $r3;

     label3:
        r0 := @caughtexception;

        $r5 = new org.apache.commons.httpclient.HttpClientError;

        specialinvoke $r5.<org.apache.commons.httpclient.HttpClientError: void <init>(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: MD5");

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    private java.lang.String createDigest(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1, $r2, $r6, $r7, $r8, $r9, $r10, $r11, r12, $r13;
        java.lang.Exception r3;
        java.lang.StringBuffer r4;
        org.apache.commons.logging.Log $r5;
        int $i0, $i1;
        org.apache.commons.httpclient.auth.AuthenticationException $r14;
        java.security.MessageDigest $r15;
        boolean $z0;
        byte[] $r16;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createDigest(String, String, Map)");

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r9 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        $r10 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("methodname");

        $r11 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        r12 = $r11;

        if $r11 != null goto label01;

        r12 = "MD5";

     label01:
        $r13 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        $r11 = $r13;

        if $r13 != null goto label02;

        $r11 = "ISO-8859-1";

     label02:
        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label03;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("qop=auth-int is not supported");

        $r14 = new org.apache.commons.httpclient.auth.AuthenticationException;

        specialinvoke $r14.<org.apache.commons.httpclient.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported qop in HTTP Digest authentication");

        throw $r14;

     label03:
        $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label04:
        r4 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 2;

        specialinvoke r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = $r2;

        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("MD5-sess");

        if $z0 == 0 goto label09;

        $r16 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>($r2, $r11);

        $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16);

        $r1 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r16);

        r4 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r2 = r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 2;

        specialinvoke r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r1 = r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $r16 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>($r1, $r11);

        $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16);

        $r1 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r16);

        $r2 = null;

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label10;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Unhandled qop auth-int");

     label06:
        $r16 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r2);

        $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16);

        $r2 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r16);

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label11;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Using null qop method");

        r4 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        specialinvoke r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        $r16 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16);

        $r1 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])>($r16);

        return $r1;

     label08:
        r3 := @caughtexception;

        $r14 = new org.apache.commons.httpclient.auth.AuthenticationException;

        specialinvoke $r14.<org.apache.commons.httpclient.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: MD5");

        throw $r14;

     label09:
        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("MD5");

        if $z0 != 0 goto label05;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        r4 = new java.lang.StringBuffer;

        specialinvoke r4.<java.lang.StringBuffer: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled algorithm ");

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" requested");

        $r2 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r2);

        goto label05;

     label10:
        r4 = new java.lang.StringBuffer;

        specialinvoke r4.<java.lang.StringBuffer: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r2 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label11:
        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label12;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        r4 = new java.lang.StringBuffer;

        specialinvoke r4.<java.lang.StringBuffer: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Using qop method ");

        r4 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r9);

     label12:
        $r9 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getQopVariantString()>();

        r4 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r6 = "00000001";

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r6 = r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i0 = $i0 + 5;

        specialinvoke r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00000001");

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r1 = r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label07;

        catch java.lang.Exception from label03 to label04 with label08;
    }
    private java.lang.String createDigestHeader(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1, $r2, $r6, $r7, $r8, $r9, $r10;
        java.lang.StringBuffer r3;
        java.util.ArrayList r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.httpclient.NameValuePair $r11;
        int $i0, $i1;
        java.lang.Object $r12;
        boolean $z0;
        org.apache.commons.httpclient.util.ParameterFormatter $r13;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.createDigestHeader(String, Map, String)");

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        $r9 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("opaque");

        $r10 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(20);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("username", $r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("realm", $r7);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("nonce", $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("uri", $r6);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("response", $r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 == 0 goto label01;

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        $r1 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getQopVariantString()>();

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("qop", $r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("nc", "00000001");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        $r1 = r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce>;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("cnonce", $r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label01:
        if $r10 == null goto label02;

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("algorithm", $r10);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label02:
        if $r9 == null goto label03;

        $r11 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r11.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("opaque", $r9);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label03:
        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label04:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 >= $i1 goto label11;

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r11 = (org.apache.commons.httpclient.NameValuePair) $r12;

        if $i0 <= 0 goto label05;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label05:
        $r1 = "nc";

        $r2 = virtualinvoke $r11.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label06;

        $r1 = "qop";

        $r2 = virtualinvoke $r11.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label09;

     label06:
        $z0 = 1;

     label07:
        $r13 = r0.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        if $z0 != 0 goto label10;

        $z0 = 1;

     label08:
        virtualinvoke $r13.<org.apache.commons.httpclient.util.ParameterFormatter: void setAlwaysUseQuotes(boolean)>($z0);

        $r13 = r0.<org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        virtualinvoke $r13.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>(r3, $r11);

        $i0 = $i0 + 1;

        goto label04;

     label09:
        $z0 = 0;

        goto label07;

     label10:
        $z0 = 0;

        goto label08;

     label11:
        $r1 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    private static java.lang.String encode(byte[])
    {
        byte[] $r0;
        char[] r1, $r3;
        int i0, i1, i2, $i4;
        org.apache.commons.logging.Log $r2;
        byte $b3;
        char $c5;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

        $r2 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.encode(byte[])");

        i1 = lengthof $r0;

        if i1 == 16 goto label1;

        return null;

     label1:
        r1 = newarray (char)[32];

        i2 = 0;

     label2:
        if i2 >= 16 goto label3;

        $b3 = $r0[i2];

        i1 = $b3 & 15;

        $b3 = $r0[i2];

        i0 = $b3 & 240;

        i0 = i0 >> 4;

        $i4 = i2 * 2;

        $r3 = <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL>;

        $c5 = $r3[i0];

        r1[$i4] = $c5;

        i0 = i2 * 2;

        i0 = i0 + 1;

        $r3 = <org.apache.commons.httpclient.auth.DigestScheme: char[] HEXADECIMAL>;

        $c5 = $r3[i1];

        r1[i0] = $c5;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r1);

        return $r4;
    }
    private java.lang.String getQopVariantString()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label1;

        return "auth-int";

     label1:
        return "auth";
    }
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        org.apache.commons.httpclient.Credentials $r1;
        java.lang.String $r2, $r3;
        java.lang.ClassCastException r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.httpclient.UsernamePasswordCredentials $r6;
        java.util.Map $r7;
        java.lang.StringBuffer $r8;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r9;
        java.lang.Class $r10;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.authenticate(Credentials, String, String)");

     label1:
        $r6 = (org.apache.commons.httpclient.UsernamePasswordCredentials) $r1;

     label2:
        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r2);

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r3);

        $r2 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r3 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getPassword()>();

        $r2 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>($r2, $r3);

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Digest ");

        $r3 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r2 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigestHeader(java.lang.String,java.lang.String)>($r3, $r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        r4 := @caughtexception;

        $r9 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for digest authentication: ");

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r2);

        throw $r9;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        org.apache.commons.httpclient.Credentials $r1;
        org.apache.commons.httpclient.HttpMethod $r2;
        java.lang.StringBuffer r3;
        java.lang.ClassCastException r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.httpclient.UsernamePasswordCredentials $r6;
        java.util.Map $r7;
        java.lang.String $r8, $r10;
        int $i0;
        org.apache.commons.httpclient.params.HttpMethodParams $r9;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r11;
        java.lang.Class $r12;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        $r2 := @parameter1: org.apache.commons.httpclient.HttpMethod;

        $r5 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter DigestScheme.authenticate(Credentials, HttpMethod)");

     label1:
        $r6 = (org.apache.commons.httpclient.UsernamePasswordCredentials) $r1;

     label2:
        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r8 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: java.lang.String getName()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r8);

        r3 = new java.lang.StringBuffer;

        $r8 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: java.lang.String getPath()>();

        specialinvoke r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r8);

        $r8 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: java.lang.String getQueryString()>();

        if $r8 == null goto label4;

        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i0 == 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

     label3:
        $r8 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: java.lang.String getQueryString()>();

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label4:
        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r8);

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        if $r8 != null goto label5;

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.util.Map getParameters()>();

        $r9 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: org.apache.commons.httpclient.params.HttpMethodParams getParams()>();

        $r8 = virtualinvoke $r9.<org.apache.commons.httpclient.params.HttpMethodParams: java.lang.String getCredentialCharset()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", $r8);

     label5:
        $r8 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r10 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getPassword()>();

        $r8 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>($r8, $r10);

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Digest ");

        $r10 = virtualinvoke $r6.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()>();

        $r8 = specialinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigestHeader(java.lang.String,java.lang.String)>($r10, $r8);

        r3 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label6:
        r4 := @caughtexception;

        $r11 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for digest authentication: ");

        $r12 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        r3 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r8);

        throw $r11;

        catch java.lang.ClassCastException from label1 to label2 with label6;
    }
    public java.lang.String getID()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuffer $r3;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getRealm()>();

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return $r1;
    }
    public java.lang.String getSchemeName()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        return "digest";
    }
    public boolean isComplete()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("stale");

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete>;

        return $z0;
    }
    public boolean isConnectionBased()
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        return 0;
    }
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        org.apache.commons.httpclient.auth.DigestScheme r0;
        java.lang.String $r1;
        java.util.StringTokenizer r2;
        org.apache.commons.httpclient.auth.MalformedChallengeException $r3;
        boolean z0, $z1;
        int $i0;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;

        r0 := @this: org.apache.commons.httpclient.auth.DigestScheme;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: void processChallenge(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        if $r1 != null goto label1;

        $r3 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r3.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing realm in challange");

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r1 != null goto label2;

        $r3 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r3.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing nonce in challange");

        throw $r3;

     label2:
        z0 = 0;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        if $r1 == null goto label4;

        r2 = new java.util.StringTokenizer;

        specialinvoke r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ",");

     label3:
        $z1 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label4;

        $r1 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z1 == 0 goto label5;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 2;

     label4:
        if z0 == 0 goto label7;

        $i0 = r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label7;

        $r3 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        specialinvoke $r3.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>("None of the qop methods is supported");

        throw $r3;

     label5:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("auth-int");

        if $z1 == 0 goto label6;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: int qopVariant> = 1;

        goto label3;

     label6:
        z0 = 1;

        $r4 = <org.apache.commons.httpclient.auth.DigestScheme: org.apache.commons.logging.Log LOG>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported qop detected: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r1);

        goto label3;

     label7:
        $r1 = staticinvoke <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>();

        r0.<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String cnonce> = $r1;

        r0.<org.apache.commons.httpclient.auth.DigestScheme: boolean complete> = 1;

        return;
    }
