org.apache.commons.httpclient.auth.NTLMScheme extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
private static final int FAILED
private static final int INITIATED
private static final org.apache.commons.logging.Log LOG
private static final int TYPE1_MSG_GENERATED
private static final int TYPE2_MSG_RECEIVED
private static final int TYPE3_MSG_GENERATED
private static final int UNINITIATED
static java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme
private java.lang.String ntlmchallenge
private int state
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        org.apache.commons.logging.Log $r2;

        $r0 = <org.apache.commons.httpclient.auth.NTLMScheme: java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <org.apache.commons.httpclient.auth.NTLMScheme: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.auth.NTLMScheme");

        $r1 = $r0;

        <org.apache.commons.httpclient.auth.NTLMScheme: java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme> = $r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        <org.apache.commons.httpclient.auth.NTLMScheme: org.apache.commons.logging.Log LOG> = $r2;

        return;

     label2:
        $r1 = <org.apache.commons.httpclient.auth.NTLMScheme: java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme>;

        goto label1;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge> = null;

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 0;

        return;
    }
    public void <init>(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.auth.NTLMScheme: void processChallenge(java.lang.String)>($r1);

        return;
    }
    public static java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.NTCredentials $r0;
        java.lang.String $r1, $r5, $r6, $r7, $r8;
        org.apache.commons.httpclient.auth.NTLM r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuffer $r9;

        $r0 := @parameter0: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter1: java.lang.String;

        $r3 = <org.apache.commons.httpclient.auth.NTLMScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter NTLMScheme.authenticate(NTCredentials, String)");

        if $r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null");

        throw $r4;

     label1:
        r2 = new org.apache.commons.httpclient.auth.NTLM;

        specialinvoke r2.<org.apache.commons.httpclient.auth.NTLM: void <init>()>();

        $r5 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getUserName()>();

        $r6 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getPassword()>();

        $r7 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getHost()>();

        $r8 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getDomain()>();

        $r1 = virtualinvoke r2.<org.apache.commons.httpclient.auth.NTLM: java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r5, $r6, $r7, $r8);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NTLM ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    public static java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.NTCredentials $r0;
        java.lang.String $r1, $r2, $r6, $r7, $r8;
        org.apache.commons.httpclient.auth.NTLM r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r9;

        $r0 := @parameter0: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = <org.apache.commons.httpclient.auth.NTLMScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter NTLMScheme.authenticate(NTCredentials, String)");

        if $r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null");

        throw $r5;

     label1:
        r3 = new org.apache.commons.httpclient.auth.NTLM;

        specialinvoke r3.<org.apache.commons.httpclient.auth.NTLM: void <init>()>();

        virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: void setCredentialCharset(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getUserName()>();

        $r6 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getPassword()>();

        $r7 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getHost()>();

        $r8 = virtualinvoke $r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String getDomain()>();

        $r1 = virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r6, $r7, $r8);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NTLM ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        org.apache.commons.httpclient.Credentials $r1;
        java.lang.String $r2, $r3;
        java.lang.ClassCastException r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.httpclient.NTCredentials $r6;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r7;
        java.lang.StringBuffer $r8;
        java.lang.Class $r9;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = <org.apache.commons.httpclient.auth.NTLMScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter NTLMScheme.authenticate(Credentials, String, String)");

     label1:
        $r6 = (org.apache.commons.httpclient.NTCredentials) $r1;

     label2:
        $r2 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge>;

        $r2 = staticinvoke <org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials,java.lang.String)>($r6, $r2);

        return $r2;

     label3:
        r4 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r9 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r2);

        throw $r7;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        org.apache.commons.httpclient.Credentials $r1;
        org.apache.commons.httpclient.HttpMethod $r2;
        org.apache.commons.httpclient.auth.NTLM r3;
        java.lang.ClassCastException r4;
        org.apache.commons.logging.Log $r5;
        int $i0;
        java.lang.IllegalStateException $r6;
        org.apache.commons.httpclient.NTCredentials $r7;
        org.apache.commons.httpclient.params.HttpMethodParams $r8;
        java.lang.String $r9, $r10, $r14, $r15, $r16;
        java.lang.StringBuffer $r11;
        org.apache.commons.httpclient.auth.InvalidCredentialsException $r12;
        java.lang.Class $r13;
        byte[] $r17;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $r1 := @parameter0: org.apache.commons.httpclient.Credentials;

        $r2 := @parameter1: org.apache.commons.httpclient.HttpMethod;

        $r5 = <org.apache.commons.httpclient.auth.NTLMScheme: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter NTLMScheme.authenticate(Credentials, HttpMethod)");

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("NTLM authentication process has not been initiated");

        throw $r6;

     label1:
        $r7 = (org.apache.commons.httpclient.NTCredentials) $r1;

     label2:
        r3 = new org.apache.commons.httpclient.auth.NTLM;

        specialinvoke r3.<org.apache.commons.httpclient.auth.NTLM: void <init>()>();

        $r8 = interfaceinvoke $r2.<org.apache.commons.httpclient.HttpMethod: org.apache.commons.httpclient.params.HttpMethodParams getParams()>();

        $r9 = virtualinvoke $r8.<org.apache.commons.httpclient.params.HttpMethodParams: java.lang.String getCredentialCharset()>();

        virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: void setCredentialCharset(java.lang.String)>($r9);

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 == 1 goto label3;

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 != 2147483647 goto label6;

     label3:
        $r9 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getHost()>();

        $r10 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getDomain()>();

        $r9 = virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: java.lang.String getType1Message(java.lang.String,java.lang.String)>($r9, $r10);

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 2;

     label4:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NTLM ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label5:
        r4 := @caughtexception;

        $r12 = new org.apache.commons.httpclient.auth.InvalidCredentialsException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r13 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.commons.httpclient.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r9);

        throw $r12;

     label6:
        $r9 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getUserName()>();

        $r10 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getPassword()>();

        $r14 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getHost()>();

        $r15 = virtualinvoke $r7.<org.apache.commons.httpclient.NTCredentials: java.lang.String getDomain()>();

        $r16 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge>;

        $r17 = virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: byte[] parseType2Message(java.lang.String)>($r16);

        $r9 = virtualinvoke r3.<org.apache.commons.httpclient.auth.NTLM: java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])>($r9, $r10, $r14, $r15, $r17);

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 4;

        goto label4;

        catch java.lang.ClassCastException from label1 to label2 with label5;
    }
    public java.lang.String getID()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        r1 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge>;

        return r1;
    }
    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter name may not be null");

        throw $r2;

     label1:
        return null;
    }
    public java.lang.String getRealm()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        return null;
    }
    public java.lang.String getSchemeName()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        return "ntlm";
    }
    public boolean isComplete()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 == 4 goto label1;

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 != 2147483647 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isConnectionBased()
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        return 1;
    }
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        org.apache.commons.httpclient.auth.NTLMScheme r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.apache.commons.httpclient.auth.MalformedChallengeException $r4;
        java.lang.StringBuffer $r5;
        int $i0, $i1;

        r0 := @this: org.apache.commons.httpclient.auth.NTLMScheme;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.httpclient.auth.AuthChallengeParser: java.lang.String extractScheme(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid NTLM challenge: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(32);

        if $i0 == -1 goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge> = $r1;

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 3;

        return;

     label2:
        r0.<org.apache.commons.httpclient.auth.NTLMScheme: java.lang.String ntlmchallenge> = "";

        $i0 = r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state>;

        if $i0 != 0 goto label3;

        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 1;

        return;

     label3:
        r0.<org.apache.commons.httpclient.auth.NTLMScheme: int state> = 2147483647;

        return;
    }
