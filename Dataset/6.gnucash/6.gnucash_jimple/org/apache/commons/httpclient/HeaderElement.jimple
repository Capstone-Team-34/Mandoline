org.apache.commons.httpclient.HeaderElement extends org.apache.commons.httpclient.NameValuePair
private static final org.apache.commons.logging.Log LOG
static java.lang.Class class$org$apache$commons$httpclient$HeaderElement
private org.apache.commons.httpclient.NameValuePair[] parameters
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        org.apache.commons.logging.Log $r2;

        $r0 = <org.apache.commons.httpclient.HeaderElement: java.lang.Class class$org$apache$commons$httpclient$HeaderElement>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <org.apache.commons.httpclient.HeaderElement: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.HeaderElement");

        $r1 = $r0;

        <org.apache.commons.httpclient.HeaderElement: java.lang.Class class$org$apache$commons$httpclient$HeaderElement> = $r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        <org.apache.commons.httpclient.HeaderElement: org.apache.commons.logging.Log LOG> = $r2;

        return;

     label2:
        $r1 = <org.apache.commons.httpclient.HeaderElement: java.lang.Class class$org$apache$commons$httpclient$HeaderElement>;

        goto label1;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.HeaderElement r0;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        specialinvoke r0.<org.apache.commons.httpclient.HeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.commons.httpclient.NameValuePair[])>(null, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.HeaderElement r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.commons.httpclient.NameValuePair[])>($r1, $r2, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, org.apache.commons.httpclient.NameValuePair[])
    {
        org.apache.commons.httpclient.HeaderElement r0;
        java.lang.String $r1, $r2;
        org.apache.commons.httpclient.NameValuePair[] $r3;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.commons.httpclient.NameValuePair[];

        specialinvoke r0.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        r0.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] parameters> = null;

        r0.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] parameters> = $r3;

        return;
    }
    public void <init>(char[])
    {
        org.apache.commons.httpclient.HeaderElement r0;
        char[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        $r1 := @parameter0: char[];

        $i0 = lengthof $r1;

        specialinvoke r0.<org.apache.commons.httpclient.HeaderElement: void <init>(char[],int,int)>($r1, 0, $i0);

        return;
    }
    public void <init>(char[], int, int)
    {
        org.apache.commons.httpclient.HeaderElement r0;
        char[] $r1;
        int $i0, $i1;
        org.apache.commons.httpclient.util.ParameterParser r2;
        java.util.List $r3;
        java.lang.Object $r4;
        org.apache.commons.httpclient.NameValuePair r5;
        java.lang.String $r6;
        org.apache.commons.httpclient.NameValuePair[] $r7;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.httpclient.HeaderElement: void <init>()>();

        if $r1 != null goto label1;

        return;

     label1:
        r2 = new org.apache.commons.httpclient.util.ParameterParser;

        specialinvoke r2.<org.apache.commons.httpclient.util.ParameterParser: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.util.ParameterParser: java.util.List parse(char[],int,int,char)>($r1, $i0, $i1, 59);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r5 = (org.apache.commons.httpclient.NameValuePair) $r4;

        $r6 = virtualinvoke r5.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderElement: void setName(java.lang.String)>($r6);

        $r6 = virtualinvoke r5.<org.apache.commons.httpclient.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderElement: void setValue(java.lang.String)>($r6);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r7 = newarray (org.apache.commons.httpclient.NameValuePair)[$i0];

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (org.apache.commons.httpclient.NameValuePair[]) $r8;

        r0.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] parameters> = $r7;

     label2:
        return;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static final org.apache.commons.httpclient.HeaderElement[] parse(java.lang.String) throws org.apache.commons.httpclient.HttpException
    {
        java.lang.String $r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.httpclient.HeaderElement[] $r2;
        char[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.httpclient.HeaderElement: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HeaderElement.parse(String)");

        if $r0 != null goto label1;

        $r2 = newarray (org.apache.commons.httpclient.HeaderElement)[0];

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.HeaderElement[] parseElements(char[])>($r3);

        return $r2;
    }
    public static final org.apache.commons.httpclient.HeaderElement[] parseElements(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.commons.logging.Log $r1;
        org.apache.commons.httpclient.HeaderElement[] $r2;
        char[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.httpclient.HeaderElement: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HeaderElement.parseElements(String)");

        if $r0 != null goto label1;

        $r2 = newarray (org.apache.commons.httpclient.HeaderElement)[0];

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.HeaderElement[] parseElements(char[])>($r3);

        return $r2;
    }
    public static final org.apache.commons.httpclient.HeaderElement[] parseElements(char[])
    {
        char[] $r0;
        char c0;
        java.util.ArrayList r1;
        int i1, i2, i3, $i4;
        org.apache.commons.logging.Log $r2;
        org.apache.commons.httpclient.HeaderElement[] $r3;
        boolean z0;
        org.apache.commons.httpclient.HeaderElement r4;
        java.lang.String $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: char[];

        $r2 = <org.apache.commons.httpclient.HeaderElement: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HeaderElement.parseElements(char[])");

        if $r0 != null goto label1;

        $r3 = newarray (org.apache.commons.httpclient.HeaderElement)[0];

        return $r3;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i2 = 0;

        i3 = 0;

        i1 = lengthof $r0;

        z0 = 0;

     label2:
        if i2 >= i1 goto label8;

        c0 = $r0[i2];

        if c0 != 34 goto label3;

        if z0 != 0 goto label6;

        z0 = 1;

     label3:
        r4 = null;

        if z0 != 0 goto label7;

        if c0 != 44 goto label7;

        r4 = new org.apache.commons.httpclient.HeaderElement;

        specialinvoke r4.<org.apache.commons.httpclient.HeaderElement: void <init>(char[],int,int)>($r0, i3, i2);

        i3 = i2 + 1;

     label4:
        if r4 == null goto label5;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.HeaderElement: java.lang.String getName()>();

        if $r5 == null goto label5;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        z0 = 0;

        goto label3;

     label7:
        $i4 = i1 + -1;

        if i2 != $i4 goto label4;

        r4 = new org.apache.commons.httpclient.HeaderElement;

        specialinvoke r4.<org.apache.commons.httpclient.HeaderElement: void <init>(char[],int,int)>($r0, i3, i1);

        goto label4;

     label8:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.commons.httpclient.HeaderElement)[i1];

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (org.apache.commons.httpclient.HeaderElement[]) $r6;

        return $r3;
    }
    public org.apache.commons.httpclient.NameValuePair getParameterByName(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderElement r0;
        java.lang.String $r1, $r6;
        org.apache.commons.httpclient.NameValuePair r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.commons.httpclient.NameValuePair[] $r5;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        $r1 := @parameter0: java.lang.String;

        $r3 = <org.apache.commons.httpclient.HeaderElement: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HeaderElement.getParameterByName(String)");

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r4;

     label1:
        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] getParameters()>();

        if $r5 == null goto label4;

        i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if i0 >= $i1 goto label4;

        r2 = $r5[i0];

        $r6 = virtualinvoke r2.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return null;
    }
    public org.apache.commons.httpclient.NameValuePair[] getParameters()
    {
        org.apache.commons.httpclient.HeaderElement r0;
        org.apache.commons.httpclient.NameValuePair[] r1;

        r0 := @this: org.apache.commons.httpclient.HeaderElement;

        r1 = r0.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] parameters>;

        return r1;
    }
