org.apache.commons.httpclient.URI extends java.lang.Object implements java.lang.Cloneable java.lang.Comparable java.io.Serializable
protected static final java.util.BitSet IPv4address
protected static final java.util.BitSet IPv6address
protected static final java.util.BitSet IPv6reference
protected static final java.util.BitSet URI_reference
protected static final java.util.BitSet abs_path
protected static final java.util.BitSet absoluteURI
public static final java.util.BitSet allowed_IPv6reference
public static final java.util.BitSet allowed_abs_path
public static final java.util.BitSet allowed_authority
public static final java.util.BitSet allowed_fragment
public static final java.util.BitSet allowed_host
public static final java.util.BitSet allowed_opaque_part
public static final java.util.BitSet allowed_query
public static final java.util.BitSet allowed_reg_name
public static final java.util.BitSet allowed_rel_path
public static final java.util.BitSet allowed_userinfo
public static final java.util.BitSet allowed_within_authority
public static final java.util.BitSet allowed_within_path
public static final java.util.BitSet allowed_within_query
public static final java.util.BitSet allowed_within_userinfo
protected static final java.util.BitSet alpha
protected static final java.util.BitSet alphanum
protected static final java.util.BitSet authority
public static final java.util.BitSet control
protected static java.lang.String defaultDocumentCharset
protected static java.lang.String defaultDocumentCharsetByLocale
protected static java.lang.String defaultDocumentCharsetByPlatform
protected static java.lang.String defaultProtocolCharset
public static final java.util.BitSet delims
protected static final java.util.BitSet digit
public static final java.util.BitSet disallowed_opaque_part
public static final java.util.BitSet disallowed_rel_path
protected static final java.util.BitSet domainlabel
protected static final java.util.BitSet escaped
protected static final java.util.BitSet fragment
protected static final java.util.BitSet hex
protected static final java.util.BitSet hier_part
protected static final java.util.BitSet host
protected static final java.util.BitSet hostname
protected static final java.util.BitSet hostport
protected static final java.util.BitSet mark
protected static final java.util.BitSet net_path
protected static final java.util.BitSet opaque_part
protected static final java.util.BitSet param
protected static final java.util.BitSet path
protected static final java.util.BitSet path_segments
protected static final java.util.BitSet pchar
protected static final java.util.BitSet percent
protected static final java.util.BitSet port
protected static final java.util.BitSet query
protected static final java.util.BitSet reg_name
protected static final java.util.BitSet rel_path
protected static final java.util.BitSet rel_segment
protected static final java.util.BitSet relativeURI
protected static final java.util.BitSet reserved
protected static final char[] rootPath
protected static final java.util.BitSet scheme
protected static final java.util.BitSet segment
static final long serialVersionUID
protected static final java.util.BitSet server
public static final java.util.BitSet space
protected static final java.util.BitSet toplabel
protected static final java.util.BitSet unreserved
public static final java.util.BitSet unwise
protected static final java.util.BitSet uric
protected static final java.util.BitSet uric_no_slash
protected static final java.util.BitSet userinfo
public static final java.util.BitSet within_userinfo
protected char[] _authority
protected char[] _fragment
protected char[] _host
protected boolean _is_IPv4address
protected boolean _is_IPv6reference
protected boolean _is_abs_path
protected boolean _is_hier_part
protected boolean _is_hostname
protected boolean _is_net_path
protected boolean _is_opaque_part
protected boolean _is_reg_name
protected boolean _is_rel_path
protected boolean _is_server
protected char[] _opaque
protected char[] _path
protected int _port
protected char[] _query
protected char[] _scheme
protected char[] _uri
protected char[] _userinfo
protected int hash
protected java.lang.String protocolCharset
    static void <clinit>()
    {
        java.util.Locale $r0;
        java.lang.String $r1;
        char[] $r2;
        java.util.BitSet $r3, $r4;
        int i0;
        java.lang.SecurityException $r5;

        <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset> = "UTF-8";

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = null;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale> = null;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform> = null;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        if $r0 == null goto label01;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI$LocaleToCharsetMap: java.lang.String getCharset(java.util.Locale)>($r0);

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale> = $r1;

        $r1 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale>;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = $r1;

     label01:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

     label02:
        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform> = $r1;

     label03:
        $r1 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset>;

        if $r1 != null goto label04;

        $r1 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform>;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = $r1;

     label04:
        $r2 = newarray (char)[1];

        $r2[0] = 47;

        <org.apache.commons.httpclient.URI: char[] rootPath> = $r2;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet percent> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet digit> = $r3;

        i0 = 48;

     label05:
        if i0 > 57 goto label06;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label05;

     label06:
        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet alpha> = $r3;

        i0 = 97;

     label07:
        if i0 > 122 goto label08;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label07;

     label08:
        i0 = 65;

     label09:
        if i0 > 90 goto label10;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label09;

     label10:
        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet alphanum> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hex> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        i0 = 97;

     label11:
        if i0 > 102 goto label12;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label11;

     label12:
        i0 = 65;

     label13:
        if i0 > 70 goto label14;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label13;

     label14:
        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet escaped> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet mark> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(45);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(95);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(46);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(33);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(126);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(42);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(39);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(40);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(41);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet unreserved> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet reserved> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(47);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(63);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet uric> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        <org.apache.commons.httpclient.URI: java.util.BitSet fragment> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        <org.apache.commons.httpclient.URI: java.util.BitSet query> = $r3;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet pchar> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        <org.apache.commons.httpclient.URI: java.util.BitSet param> = $r3;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet segment> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet param>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet path_segments> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(47);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet abs_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(47);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(63);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        <org.apache.commons.httpclient.URI: java.util.BitSet port> = $r3;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(46);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(91);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(93);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet toplabel> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(45);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        <org.apache.commons.httpclient.URI: java.util.BitSet domainlabel> = $r3;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hostname> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(46);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet host> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hostport> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet port>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet userinfo> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(63);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(47);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet server> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet reg_name> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet authority> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet scheme> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(45);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(46);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(38);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(43);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(36);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(44);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet rel_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet net_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(47);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hier_part> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(35);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet fragment>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet control> = $r3;

        i0 = 0;

     label15:
        if i0 > 31 goto label16;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet control>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label15;

     label16:
        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet control>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(127);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet space> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet space>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(32);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet delims> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(60);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(62);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(35);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(37);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(34);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet unwise> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(123);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(125);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(124);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(92);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(94);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(91);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(93);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(96);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r3.<java.util.BitSet: void andNot(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r3.<java.util.BitSet: void andNot(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(91);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(93);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(64);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(63);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(47);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r3.<java.util.BitSet: void andNot(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(43);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(43);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(47);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(59);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(61);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(63);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r3.<java.util.BitSet: void andNot(java.util.BitSet)>($r4);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment> = $r3;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r3.<java.util.BitSet: void or(java.util.BitSet)>($r4);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        virtualinvoke $r3.<java.util.BitSet: void clear(int)>(37);

        return;

     label17:
        $r5 := @caughtexception;

        goto label03;

        catch java.lang.SecurityException from label01 to label02 with label17;
    }
    protected void <init>()
    {
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        return;
    }
    public void <init>(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = $r2;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3;
        char[] $r4, $r6;
        org.apache.commons.httpclient.URIException $r5;
        java.util.BitSet $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = null;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "scheme required");

        throw $r5;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r7 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r6, $r7);

        if $z0 == 0 goto label3;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r6;

        $r7 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r6 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r2, $r7, $r1);

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r6;

        r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = 1;

        if $r3 != null goto label4;

     label2:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r4;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label3:
        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect scheme");

        throw $r5;

     label4:
        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        goto label2;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, null, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, $r4, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, $r4, $r5, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0;
        java.lang.StringBuffer $r7, $r8;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        $r6 := @parameter6: java.lang.String;

        if $r3 != null goto label2;

        $r2 = null;

     label1:
        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r4, $r5, $r6);

        return;

     label2:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        if $r2 == null goto label5;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        if $i0 == -1 goto label6;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label5:
        $r2 = "";

        goto label3;

     label6:
        $r2 = "";

        goto label4;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, null, $r4);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        java.lang.StringBuffer r6;
        boolean $z0;
        org.apache.commons.httpclient.URIException $r7;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r6 = new java.lang.StringBuffer;

        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

        if $r1 == null goto label1;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        if $r2 == null goto label2;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label2:
        if $r3 == null goto label5;

        if $r1 != null goto label3;

        if $r2 == null goto label4;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label4;

        $r7 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r7.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "abs_path requested");

        throw $r7;

     label4:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label5:
        if $r4 == null goto label6;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label6:
        if $r5 == null goto label7;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label7:
        $r1 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r1, 0);

        return;
    }
    public void <init>(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r1, $z0);

        return;
    }
    public void <init>(java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = $r2;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r1, $z0);

        return;
    }
    public void <init>(org.apache.commons.httpclient.URI, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0, $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: org.apache.commons.httpclient.URI;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.commons.httpclient.URI;

        specialinvoke $r3.<org.apache.commons.httpclient.URI: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>($r1, $r3);

        return;
    }
    public void <init>(org.apache.commons.httpclient.URI, java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0, $r1, $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: org.apache.commons.httpclient.URI;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = new org.apache.commons.httpclient.URI;

        specialinvoke $r3.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,boolean)>($r2, $z0);

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>($r1, $r3);

        return;
    }
    public void <init>(org.apache.commons.httpclient.URI, org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0, $r1, $r2;
        boolean $z0, $z1;
        char[] $r3, $r5;
        org.apache.commons.httpclient.URIException $r4;
        int $i0;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: org.apache.commons.httpclient.URI;

        $r2 := @parameter1: org.apache.commons.httpclient.URI;

        $z0 = 0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 != null goto label01;

        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "base URI required");

        throw $r4;

     label01:
        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 == null goto label02;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r3;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r3;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z1;

     label02:
        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 != 0 goto label03;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 == 0 goto label06;

     label03:
        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r3;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 != 0 goto label04;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 == 0 goto label05;

     label04:
        $z0 = 1;

     label05:
        r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = $z0;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _opaque>;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r3;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r3;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label06:
        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $r5 = $r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>($r3, $r5);

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 == null goto label18;

        if $z0 == 0 goto label07;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r3 == null goto label18;

     label07:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r3;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r3;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z1 == 0 goto label17;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r3;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r3;

        $i0 = $r2.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i0;

     label08:
        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z1;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

     label09:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r3 == null goto label11;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r3;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z1 == 0 goto label20;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r3;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r3;

        $i0 = $r2.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i0;

     label10:
        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z1;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z1;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

     label11:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r3 != null goto label14;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 == null goto label12;

        if $z0 == 0 goto label14;

     label12:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r3 == null goto label13;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _path>;

        $i0 = lengthof $r3;

        if $i0 != 0 goto label21;

     label13:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r3 != null goto label21;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _query>;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r3;

     label14:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r3 == null goto label15;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _query>;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r3;

     label15:
        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r3 == null goto label16;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r3;

     label16:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        $r6 = new java.lang.String;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r3);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r6, 1);

        return;

     label17:
        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z1 == 0 goto label08;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z1;

        goto label08;

     label18:
        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r3 == null goto label09;

        $r3 = $r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 != null goto label09;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z1;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r3;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z1 == 0 goto label19;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z1;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r3;

        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r3;

        $i0 = $r1.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i0;

        goto label09;

     label19:
        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z1 == 0 goto label09;

        $z1 = $r1.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z1;

        goto label09;

     label20:
        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z1 == 0 goto label10;

        $z1 = $r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z1;

        goto label10;

     label21:
        $r3 = $r1.<org.apache.commons.httpclient.URI: char[] _path>;

        $r5 = $r2.<org.apache.commons.httpclient.URI: char[] _path>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] resolvePath(char[],char[])>($r3, $r5);

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

        goto label14;
    }
    public void <init>(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        return;
    }
    public void <init>(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        r0.<org.apache.commons.httpclient.URI: int _port> = -1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = $r2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        return;
    }
    protected static java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        org.apache.commons.codec.DecoderException r2;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;
        org.apache.commons.httpclient.URIException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component array of chars may not be null");

        throw $r3;

     label1:
        $r4 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r0);

        $r4 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] decodeUrl(byte[])>($r4);

     label2:
        $r0 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getString(byte[],java.lang.String)>($r4, $r1);

        return $r0;

     label3:
        r2 := @caughtexception;

        $r5 = new org.apache.commons.httpclient.URIException;

        $r0 = virtualinvoke r2.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>($r0);

        throw $r5;

        catch org.apache.commons.codec.DecoderException from label1 to label2 with label3;
    }
    protected static java.lang.String decode(char[], java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] $r0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component array of chars may not be null");

        throw $r2;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r0);

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(java.lang.String,java.lang.String)>($r3, $r1);

        return $r1;
    }
    protected static char[] encode(java.lang.String, java.util.BitSet, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r2;
        java.util.BitSet $r1;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;
        char[] $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.BitSet;

        $r2 := @parameter2: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Original string may not be null");

        throw $r3;

     label1:
        if $r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Allowed bitset may not be null");

        throw $r3;

     label2:
        $r4 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>($r0, $r2);

        $r4 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] encodeUrl(java.util.BitSet,byte[])>($r1, $r4);

        $r0 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getAsciiString(byte[])>($r4);

        $r5 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        return $r5;
    }
    public static java.lang.String getDefaultDocumentCharset()
    {
        java.lang.String r0;

        r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset>;

        return r0;
    }
    public static java.lang.String getDefaultDocumentCharsetByLocale()
    {
        java.lang.String r0;

        r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale>;

        return r0;
    }
    public static java.lang.String getDefaultDocumentCharsetByPlatform()
    {
        java.lang.String r0;

        r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform>;

        return r0;
    }
    public static java.lang.String getDefaultProtocolCharset()
    {
        java.lang.String r0;

        r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset>;

        return r0;
    }
    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        org.apache.commons.httpclient.URI r0;
        java.io.ObjectInputStream $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        return;
    }
    public static void setDefaultDocumentCharset(java.lang.String) throws org.apache.commons.httpclient.URI$DefaultCharsetChanged
    {
        java.lang.String $r0;
        org.apache.commons.httpclient.URI$DefaultCharsetChanged $r1;

        $r0 := @parameter0: java.lang.String;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = $r0;

        $r1 = new org.apache.commons.httpclient.URI$DefaultCharsetChanged;

        specialinvoke $r1.<org.apache.commons.httpclient.URI$DefaultCharsetChanged: void <init>(int,java.lang.String)>(2, "the default document charset changed");

        throw $r1;
    }
    public static void setDefaultProtocolCharset(java.lang.String) throws org.apache.commons.httpclient.URI$DefaultCharsetChanged
    {
        java.lang.String $r0;
        org.apache.commons.httpclient.URI$DefaultCharsetChanged $r1;

        $r0 := @parameter0: java.lang.String;

        <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset> = $r0;

        $r1 = new org.apache.commons.httpclient.URI$DefaultCharsetChanged;

        specialinvoke $r1.<org.apache.commons.httpclient.URI$DefaultCharsetChanged: void <init>(int,java.lang.String)>(1, "the default protocol charset changed");

        throw $r1;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.httpclient.URI r0;
        java.io.ObjectOutputStream $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }
    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.httpclient.URI r0, r2;
        java.lang.Object $r1;
        char[] $r3;
        int $i0;
        java.lang.String $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.URI;

        entermonitor r0;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.httpclient.URI) $r1;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        r2.<org.apache.commons.httpclient.URI: char[] _uri> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r2.<org.apache.commons.httpclient.URI: char[] _scheme> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        r2.<org.apache.commons.httpclient.URI: char[] _opaque> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        r2.<org.apache.commons.httpclient.URI: char[] _authority> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r2.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        r2.<org.apache.commons.httpclient.URI: char[] _host> = $r3;

        $i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        r2.<org.apache.commons.httpclient.URI: int _port> = $i0;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        r2.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        r2.<org.apache.commons.httpclient.URI: char[] _query> = $r3;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r2.<org.apache.commons.httpclient.URI: char[] _fragment> = $r3;

        $r4 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        r2.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = $r4;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_server> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hostname>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_hostname> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = $z0;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = $z0;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        org.apache.commons.httpclient.URI r0, r2;
        java.lang.Object $r1;
        char[] $r3, $r4;
        boolean $z0;
        java.lang.String $r5, $r6;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.Object;

        r2 = (org.apache.commons.httpclient.URI) $r1;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r4 = virtualinvoke r2.<org.apache.commons.httpclient.URI: char[] getRawAuthority()>();

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String toString()>();

        $r6 = virtualinvoke r2.<org.apache.commons.httpclient.URI: java.lang.String toString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r6);

        return $i0;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.URI r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        char[] $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.commons.httpclient.URI;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.httpclient.URI) $r1;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _opaque>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _path>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _query>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $r4 = r2.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }
    protected boolean equals(char[], char[])
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1, $r2;
        int $i0, $i1;
        char $c2, $c3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: char[];

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        if $r2 != null goto label3;

     label2:
        return 0;

     label3:
        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        $i0 = 0;

     label5:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        $c2 = $r1[$i0];

        $c3 = $r2[$i0];

        if $c2 == $c3 goto label6;

        return 0;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        return 1;
    }
    public java.lang.String getAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawAboveHierPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getAuthority() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getEscapedAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawAboveHierPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedAuthority()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedFragment()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedName()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedPath()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedPathQuery()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPathQuery()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedQuery()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedURI()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedURIReference()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawURIReference()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedUserinfo()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getFragment() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getHost() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;

     label1:
        return null;
    }
    public java.lang.String getName() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getPathQuery() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPathQuery()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public int getPort()
    {
        org.apache.commons.httpclient.URI r0;
        int i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        return i0;
    }
    public java.lang.String getProtocolCharset()
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        return $r1;

     label1:
        $r1 = <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset>;

        return $r1;
    }
    public java.lang.String getQuery() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public char[] getRawAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r1);

        return $r1;
    }
    public char[] getRawAuthority()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        return r1;
    }
    public char[] getRawCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r1);

        return $r1;
    }
    protected char[] getRawCurrentHierPath(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String r1;
        char[] r2;
        boolean $z0;
        org.apache.commons.httpclient.URIException $r3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: char[];

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "no hierarchy level");

        throw $r3;

     label1:
        if r2 != null goto label2;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "empty path");

        throw $r3;

     label2:
        r1 = new java.lang.String;

        specialinvoke r1.<java.lang.String: void <init>(char[])>(r2);

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        $i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        if $i1 != 0 goto label3;

        r2 = <org.apache.commons.httpclient.URI: char[] rootPath>;

        return r2;

     label3:
        if $i0 == $i1 goto label4;

        if $i1 == -1 goto label4;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

     label4:
        return r2;
    }
    public char[] getRawFragment()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        return r1;
    }
    public char[] getRawHost()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        return r1;
    }
    public char[] getRawName()
    {
        org.apache.commons.httpclient.URI r0;
        int i0, i1;
        char[] $r1, $r2;
        char $c2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r1 != null goto label1;

        return null;

     label1:
        i1 = 0;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        i0 = lengthof $r1;

        i0 = i0 + -1;

     label2:
        if i0 < 0 goto label3;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $c2 = $r1[i0];

        if $c2 != 47 goto label4;

        i1 = i0 + 1;

     label3:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        i0 = lengthof $r1;

        i0 = i0 - i1;

        $r1 = newarray (char)[i0];

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i1, $r1, 0, i0);

        return $r1;

     label4:
        i0 = i0 + -1;

        goto label2;
    }
    public char[] getRawPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label1;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        return r1;

     label1:
        r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        return r1;
    }
    public char[] getRawPathQuery()
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.StringBuffer r1;
        char[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r2 != null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r2 != null goto label1;

        return null;

     label1:
        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label2:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r2 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        return $r2;
    }
    public char[] getRawQuery()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        return r1;
    }
    public char[] getRawScheme()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        return r1;
    }
    public char[] getRawURI()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        return r1;
    }
    public char[] getRawURIReference()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        return $r1;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r1 != null goto label2;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        return $r1;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r3 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        return $r1;
    }
    public char[] getRawUserinfo()
    {
        org.apache.commons.httpclient.URI r0;
        char[] r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        return r1;
    }
    public java.lang.String getScheme()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getURI() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getURIReference() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawURIReference()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public java.lang.String getUserinfo() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public boolean hasAuthority()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean hasFragment()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasQuery()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasUserinfo()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        org.apache.commons.httpclient.URI r0;
        int $i0, i1, $i2;
        char[] r1;
        char $c3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $i0 = r0.<org.apache.commons.httpclient.URI: int hash>;

        if $i0 != 0 goto label4;

        r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if r1 == null goto label2;

        $i0 = 0;

        i1 = lengthof r1;

     label1:
        if $i0 >= i1 goto label2;

        $i2 = r0.<org.apache.commons.httpclient.URI: int hash>;

        $i2 = $i2 * 31;

        $c3 = r1[$i0];

        $i2 = $i2 + $c3;

        r0.<org.apache.commons.httpclient.URI: int hash> = $i2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if r1 == null goto label4;

        $i0 = 0;

        i1 = lengthof r1;

     label3:
        if $i0 >= i1 goto label4;

        $i2 = r0.<org.apache.commons.httpclient.URI: int hash>;

        $i2 = $i2 * 31;

        $c3 = r1[$i0];

        $i2 = $i2 + $c3;

        r0.<org.apache.commons.httpclient.URI: int hash> = $i2;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = r0.<org.apache.commons.httpclient.URI: int hash>;

        return $i0;
    }
    protected int indexFirstOf(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>($r1, $r2, -1);

        return $i0;
    }
    protected int indexFirstOf(java.lang.String, java.lang.String, int)
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, i2, $i3;
        char[] $r3;
        char $c4;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $r1 == null goto label8;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return -1;

     label1:
        if $r2 == null goto label8;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label8;

        if $i0 >= 0 goto label5;

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        i2 = 0;

     label3:
        $i3 = lengthof $r3;

        if i2 >= $i3 goto label6;

        $c4 = $r3[i2];

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>($c4, $i0);

        if $i3 < 0 goto label4;

        if $i3 >= $i1 goto label4;

        $i1 = $i3;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label2;

        return -1;

     label6:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != $i0 goto label7;

        $i1 = -1;

     label7:
        return $i1;

     label8:
        return -1;
    }
    protected int indexFirstOf(char[], char)
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        char $c0;
        int $i1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $c0 := @parameter1: char;

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(char[],char,int)>($r1, $c0, 0);

        return $i1;
    }
    protected int indexFirstOf(char[], char, int)
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        char $c0, $c3;
        int $i1, $i2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $c0 := @parameter1: char;

        $i1 := @parameter2: int;

        if $r1 == null goto label1;

        $i2 = lengthof $r1;

        if $i2 != 0 goto label2;

     label1:
        return -1;

     label2:
        if $i1 >= 0 goto label4;

        $i1 = 0;

     label3:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label5;

        $c3 = $r1[$i1];

        if $c3 == $c0 goto label6;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i2 = lengthof $r1;

        if $i1 <= $i2 goto label3;

     label5:
        return -1;

     label6:
        return $i1;
    }
    public boolean isAbsPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        return z0;
    }
    public boolean isAbsoluteURI()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isHierPart()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part>;

        return z0;
    }
    public boolean isHostname()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hostname>;

        return z0;
    }
    public boolean isIPv4address()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address>;

        return z0;
    }
    public boolean isIPv6reference()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference>;

        return z0;
    }
    public boolean isNetPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public boolean isOpaquePart()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        return z0;
    }
    public boolean isRegName()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        return z0;
    }
    public boolean isRelPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        return z0;
    }
    public boolean isRelativeURI()
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isServer()
    {
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_server>;

        return z0;
    }
    public void normalize() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean isAbsPath()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r1);

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

     label1:
        return;
    }
    protected char[] normalize(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String r2, $r4;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.StringBuffer $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        if $r1 != null goto label01;

        return null;

     label01:
        r2 = new java.lang.String;

        specialinvoke r2.<java.lang.String: void <init>(char[])>($r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("./");

        if $z0 == 0 goto label03;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/./");

        if $i0 == -1 goto label05;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = $i0 + 2;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label02;

     label03:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("../");

        if $z0 == 0 goto label04;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(2);

        goto label02;

     label04:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("..");

        if $z0 == 0 goto label02;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(2);

        goto label02;

     label05:
        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/.");

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label06:
        $i0 = 0;

     label07:
        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("/../", $i0);

        if $i1 == -1 goto label09;

        $i2 = $i1 + -1;

        $i2 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i2);

        if $i2 < 0 goto label08;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i1 = $i1 + 3;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label07;

     label08:
        $i0 = $i1 + 3;

        goto label07;

     label09:
        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z0 == 0 goto label10;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i0 = $i0 + -4;

        $i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i0);

        if $i0 < 0 goto label10;

        $i0 = $i0 + 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label10:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/../");

        if $i0 == -1 goto label11;

        $i1 = $i0 + -1;

        $i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i1);

        if $i1 < 0 goto label13;

     label11:
        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i0 = $i0 + -4;

        $i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i0);

        if $i0 >= 0 goto label12;

        r2 = "/";

     label12:
        $r1 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        return $r1;

     label13:
        $i0 = $i0 + 3;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label10;
    }
    protected void parseAuthority(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r4, $r5;
        boolean $z0, z1, $z2;
        java.lang.StringBuffer r2;
        java.lang.NumberFormatException r3;
        int i0, $i1, $i2;
        char[] $r6;
        org.apache.commons.httpclient.URIException $r7;
        java.util.BitSet $r8;
        char $c3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = 0;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        z1 = 1;

        i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i1 == -1 goto label02;

        if $z0 == 0 goto label03;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

     label01:
        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r6;

        i0 = $i1 + 1;

     label02:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(91, i0);

        if $i1 < i0 goto label08;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(93, i0);

        if $i1 != -1 goto label04;

        $r7 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r7.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "IPv6reference");

        throw $r7;

     label03:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        $r6 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r5, $r8, $r4);

        goto label01;

     label04:
        $i1 = $i1 + 1;

        if $z0 == 0 goto label07;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

     label05:
        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r6;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 1;

     label06:
        $z2 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z2 == 0 goto label13;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 0;

        if $z0 == 0 goto label12;

        $r6 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r6;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r6, $r8);

        if $z0 != 0 goto label20;

        $r7 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r7.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("Invalid authority");

        throw $r7;

     label07:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        $r6 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r5, $r8, $r4);

        goto label05;

     label08:
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(58, i0);

        $i1 = $i2;

        if $i2 != -1 goto label09;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        z1 = 0;

     label09:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r6;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        $z2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r6, $r8);

        if $z2 == 0 goto label10;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 1;

        goto label06;

     label10:
        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        $z2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r6, $r8);

        if $z2 == 0 goto label11;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 1;

        goto label06;

     label11:
        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = 1;

        goto label06;

     label12:
        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        $r6 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r8, $r4);

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r6;

        return;

     label13:
        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 + -1;

        if i0 <= $i1 goto label16;

        if z1 == 0 goto label16;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 58 goto label16;

        i0 = $i1 + 1;

     label14:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label15:
        r0.<org.apache.commons.httpclient.URI: int _port> = i0;

     label16:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r6 == null goto label17;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label17:
        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        if $r6 == null goto label18;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        if i0 == -1 goto label18;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label18:
        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r6;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 1;

        return;

     label19:
        r3 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r7.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "invalid port number");

        throw $r7;

     label20:
        return;

        catch java.lang.NumberFormatException from label14 to label15 with label19;
    }
    protected void parseUriReference(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r4, $r6;
        boolean $z0, $z1, $z2;
        char[] r2;
        org.apache.commons.httpclient.URIException $r3;
        int $i0, i1, $i3, $i4;
        char $c2;
        java.util.BitSet $r5;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label01;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("URI-Reference required");

        throw $r3;

     label01:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r1 = $r4;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        i1 = $i0;

        if $i0 <= 0 goto label02;

        r2 = newarray (char)[1];

        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        r2[0] = $c2;

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z1 == 0 goto label02;

        if $i0 < 2 goto label02;

        r2 = newarray (char)[1];

        $i3 = $i0 + -1;

        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i3);

        r2[0] = $c2;

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z1 == 0 goto label02;

        i1 = $i0 + -1;

        $r1 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(1, i1);

        i1 = $i0 + -2;

     label02:
        $i3 = 0;

        $z1 = 0;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(58);

        $i4 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(47);

        if $i0 > 0 goto label03;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z2 == 0 goto label04;

     label03:
        if $i4 < 0 goto label05;

        if $i4 >= $i0 goto label05;

     label04:
        $z1 = 1;

     label05:
        if $z1 == 0 goto label19;

        $r4 = "/?#";

     label06:
        $i4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>($r1, $r4, 0);

        $i0 = $i4;

        if $i4 != -1 goto label07;

        $i0 = 0;

     label07:
        if $i0 <= 0 goto label08;

        if $i0 >= i1 goto label08;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 58 goto label08;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        r2 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $z2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z2 == 0 goto label20;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = r2;

        $i0 = $i0 + 1;

        $i3 = $i0;

     label08:
        r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = 0;

        if $i0 < 0 goto label11;

        if $i0 >= i1 goto label11;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 47 goto label11;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = 1;

        $i4 = $i0 + 2;

        if $i4 >= i1 goto label10;

        $i4 = $i0 + 1;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        if $c2 != 47 goto label10;

        if $z1 != 0 goto label10;

        $i3 = $i0 + 2;

        $i4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>($r1, "/?#", $i3);

        $i3 = $i4;

        if $i4 != -1 goto label09;

        $i3 = $i0 + 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i3 != 0 goto label21;

        $i3 = $i0 + 2;

     label09:
        $i0 = $i0 + 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>($r4, $z0);

        $i0 = $i3;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = 1;

     label10:
        if $i3 != $i0 goto label11;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = 1;

     label11:
        if $i3 >= i1 goto label17;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>($r1, "?#", $i3);

        $i4 = $i0;

        if $i0 != -1 goto label12;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

     label12:
        $z1 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z1 != 0 goto label15;

        if $z0 != 0 goto label13;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean prevalidate(java.lang.String,java.util.BitSet)>($r4, $r5);

        if $z1 != 0 goto label14;

     label13:
        if $z0 == 0 goto label22;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        r2 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z1 == 0 goto label22;

     label14:
        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = 1;

     label15:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        if $z0 == 0 goto label26;

        r2 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setRawPath(char[])>(r2);

     label16:
        $i0 = $i4;

     label17:
        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        if $i0 < 0 goto label29;

        $i3 = $i0 + 1;

        if $i3 >= i1 goto label29;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 63 goto label29;

        $i3 = $i0 + 1;

        $i4 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(35, $i3);

        $i3 = $i4;

        if $i4 != -1 goto label18;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

     label18:
        if $z0 == 0 goto label27;

        $i0 = $i0 + 1;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        r2 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _query> = r2;

        r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z1 != 0 goto label28;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("Invalid query");

        throw $r3;

     label19:
        $r4 = ":/?#";

        goto label06;

     label20:
        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("incorrect scheme");

        throw $r3;

     label21:
        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        goto label09;

     label22:
        if $z0 != 0 goto label23;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean prevalidate(java.lang.String,java.util.BitSet)>($r4, $r5);

        if $z1 != 0 goto label24;

     label23:
        if $z0 == 0 goto label25;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        r2 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r2, $r5);

        if $z1 == 0 goto label25;

     label24:
        r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = 1;

        goto label15;

     label25:
        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        goto label15;

     label26:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setPath(java.lang.String)>($r4);

        goto label16;

     label27:
        $i0 = $i0 + 1;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        r2 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r6, $r5, $r4);

        r0.<org.apache.commons.httpclient.URI: char[] _query> = r2;

     label28:
        $i0 = $i3;

     label29:
        if $i0 < 0 goto label30;

        $i3 = $i0 + 1;

        if $i3 > i1 goto label30;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 35 goto label30;

        $i3 = $i0 + 1;

        if $i3 != i1 goto label31;

        $r1 = "";

        r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = r2;

     label30:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label31:
        if $z0 == 0 goto label33;

        i1 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i1);

        r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

     label32:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = r2;

        goto label30;

     label33:
        i1 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i1);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        r2 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        goto label32;
    }
    protected boolean prevalidate(java.lang.String, java.util.BitSet)
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;
        java.util.BitSet $r2;
        char[] $r3;
        int i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.BitSet;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $c2 = $r3[i0];

        $z0 = virtualinvoke $r2.<java.util.BitSet: boolean get(int)>($c2);

        if $z0 != 0 goto label4;

        i0 = i0 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
    protected char[] removeFragmentIdentifier(char[])
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(35);

        if $i0 == -1 goto label2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r1 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

     label2:
        return $r1;
    }
    protected char[] resolvePath(char[], char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1, $r3;
        java.lang.StringBuffer r2;
        java.lang.String r4, $r5;
        int $i0, $i2, $i3;
        char $c1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r3 := @parameter0: char[];

        $r1 := @parameter1: char[];

        if $r3 != null goto label3;

        r4 = "";

     label1:
        if $r1 == null goto label2;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label4;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r3);

        return $r3;

     label3:
        r4 = new java.lang.String;

        specialinvoke r4.<java.lang.String: void <init>(char[])>($r3);

        goto label1;

     label4:
        $c1 = $r1[0];

        if $c1 != 47 goto label5;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r1);

        return $r3;

     label5:
        $i0 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 == -1 goto label6;

        $i2 = $i0 + 1;

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

     label6:
        r2 = new java.lang.StringBuffer;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $i3 = lengthof $r1;

        $i2 = $i2 + $i3;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>($i2);

        if $i0 == -1 goto label8;

        $i0 = $i0 + 1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label7:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r1);

        r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r3);

        return $r3;

     label8:
        r4 = "/";

        goto label7;
    }
    public void setEscapedAuthority(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>($r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }
    public void setEscapedFragment(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setRawFragment(char[])>($r2);

        return;
    }
    public void setEscapedPath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setRawPath(char[])>($r2);

        return;
    }
    public void setEscapedQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setRawQuery(char[])>($r2);

        return;
    }
    public void setFragment(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r4;
        int $i0;
        char[] $r2;
        java.util.BitSet $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label1:
        if $r1 != null goto label3;

        $r2 = null;

     label2:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r2;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        goto label2;

     label4:
        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r3, $r4);

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r2;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;
    }
    public void setPath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r4, $r7;
        java.lang.StringBuffer r2;
        int $i0;
        char[] $r3;
        boolean $z0;
        java.util.BitSet $r5;
        org.apache.commons.httpclient.URIException $r6;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label01:
        if $r1 != null goto label03;

        $r3 = null;

     label02:
        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r3;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label03:
        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        goto label02;

     label04:
        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label05;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z0 == 0 goto label07;

     label05:
        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

     label06:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label07:
        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        if $z0 == 0 goto label11;

        r2 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(47);

        if $i0 != 0 goto label08;

        $r6 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r6.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect relative path");

        throw $r6;

     label08:
        if $i0 <= 0 goto label10;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r7, $r5, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

     label09:
        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r3;

        goto label06;

     label10:
        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        goto label09;

     label11:
        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label12;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r7, $r5, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>(0, $r3);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>(1, $r3);

        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r3;

        goto label06;

     label12:
        $r6 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r6.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r6;
    }
    public void setQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1, $r4;
        int $i0;
        char[] $r2;
        java.util.BitSet $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label1:
        if $r1 != null goto label3;

        $r2 = null;

     label2:
        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r2;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        goto label2;

     label4:
        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r3, $r4);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setRawQuery(char[])>($r2);

        return;
    }
    public void setRawAuthority(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }
    public void setRawFragment(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        boolean $z0;
        int $i0;
        java.util.BitSet $r2;
        org.apache.commons.httpclient.URIException $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r1;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label2:
        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet fragment>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r1, $r2);

        if $z0 != 0 goto label3;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped fragment not valid");

        throw $r3;

     label3:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r1;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;
    }
    public void setRawPath(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        int $i0, $i2;
        boolean $z0;
        char $c1;
        org.apache.commons.httpclient.URIException $r2;
        java.util.BitSet $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

     label01:
        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label02:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] removeFragmentIdentifier(char[])>($r1);

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label03;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z0 == 0 goto label07;

     label03:
        $c1 = $r1[0];

        if $c1 == 47 goto label04;

        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "not absolute path");

        throw $r2;

     label04:
        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r1, $r3);

        if $z0 != 0 goto label05;

        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped absolute path not valid");

        throw $r2;

     label05:
        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

     label06:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label07:
        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(char[],char)>($r1, 47);

        if $i0 != 0 goto label08;

        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r2;

     label08:
        if $i0 <= 0 goto label09;

        $i2 = $i0 + -1;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 0, $i2, $r3);

        if $z0 != 0 goto label09;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, $i0, -1, $r3);

        if $z0 == 0 goto label10;

     label09:
        if $i0 >= 0 goto label11;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 0, -1, $r3);

        if $z0 != 0 goto label11;

     label10:
        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped relative path not valid");

        throw $r2;

     label11:
        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

        goto label06;

     label12:
        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label14;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $c1 = $r1[0];

        $z0 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>($c1);

        if $z0 != 0 goto label13;

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 1, -1, $r3);

        if $z0 != 0 goto label13;

        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped opaque part not valid");

        throw $r2;

     label13:
        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r1;

        goto label06;

     label14:
        $r2 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r2.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r2;
    }
    public void setRawQuery(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        int $i0;
        java.util.BitSet $r2;
        boolean $z0;
        org.apache.commons.httpclient.URIException $r3;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label2:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] removeFragmentIdentifier(char[])>($r1);

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r1, $r2);

        if $z0 != 0 goto label3;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped query not valid");

        throw $r3;

     label3:
        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }
    protected void setURI()
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.StringBuffer r1;
        char[] $r2;
        boolean $z0;
        java.lang.String $r3;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label2:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        if $r2 == null goto label5;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label5;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label3:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r2 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = $r2;

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label5:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label3;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        goto label3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.httpclient.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getEscapedURI()>();

        return $r1;
    }
    protected boolean validate(char[], int, int, java.util.BitSet)
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        int $i0, $i1;
        java.util.BitSet $r2;
        boolean $z0;
        char $c2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.util.BitSet;

        if $i1 != -1 goto label1;

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

     label1:
        if $i0 > $i1 goto label3;

        $c2 = $r1[$i0];

        $z0 = virtualinvoke $r2.<java.util.BitSet: boolean get(int)>($c2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }
    protected boolean validate(char[], java.util.BitSet)
    {
        org.apache.commons.httpclient.URI r0;
        char[] $r1;
        java.util.BitSet $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.util.BitSet;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 0, -1, $r2);

        return $z0;
    }
