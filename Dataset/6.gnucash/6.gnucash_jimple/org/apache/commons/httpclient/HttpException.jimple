org.apache.commons.httpclient.HttpException extends java.io.IOException
static java.lang.Class class$java$lang$Throwable
private final java.lang.Throwable cause
private java.lang.String reason
private int reasonCode
    public void <init>()
    {
        org.apache.commons.httpclient.HttpException r0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = null;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>($r1);

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = null;

        return;
    }
    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        java.lang.Class[] r3;
        java.lang.Class $r4, $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        java.lang.Exception $r8;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>($r1);

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = 200;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause> = $r2;

     label01:
        r3 = newarray (java.lang.Class)[1];

     label02:
        $r4 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        if $r4 != null goto label11;

     label03:
        $r4 = staticinvoke <org.apache.commons.httpclient.HttpException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

     label04:
        $r5 = $r4;

        <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable> = $r4;

     label05:
        r3[0] = $r5;

     label06:
        $r4 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        if $r4 != null goto label12;

     label07:
        $r4 = staticinvoke <org.apache.commons.httpclient.HttpException: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

     label08:
        $r5 = $r4;

        <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable> = $r4;

     label09:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", r3);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r2;

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

     label10:
        return;

     label11:
        $r5 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        goto label05;

     label12:
        $r5 = <org.apache.commons.httpclient.HttpException: java.lang.Class class$java$lang$Throwable>;

        goto label09;

     label13:
        $r8 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public java.lang.Throwable getCause()
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.Throwable r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r1 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        return r1;
    }
    public java.lang.String getReason()
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        r1 = r0.<org.apache.commons.httpclient.HttpException: java.lang.String reason>;

        return r1;
    }
    public int getReasonCode()
    {
        org.apache.commons.httpclient.HttpException r0;
        int i0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        i0 = r0.<org.apache.commons.httpclient.HttpException: int reasonCode>;

        return i0;
    }
    public void printStackTrace()
    {
        org.apache.commons.httpclient.HttpException r0;
        java.io.PrintStream $r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpException: void printStackTrace(java.io.PrintStream)>($r1);

        return;
    }
    public void printStackTrace(java.io.PrintStream)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.io.PrintStream $r1;
        java.lang.Exception r2;
        java.lang.Class[] r3;
        java.lang.Class $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 := @parameter0: java.io.PrintStream;

     label1:
        r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStackTrace", r3);

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r1);

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        if $r5 == null goto label4;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("Caused by: ");

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void printStackTrace(java.io.PrintWriter)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.io.PrintWriter $r1;
        java.lang.Exception r2;
        java.lang.Class[] r3;
        java.lang.Class $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 := @parameter0: java.io.PrintWriter;

     label1:
        r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStackTrace", r3);

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        specialinvoke r0.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>($r1);

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        if $r5 == null goto label4;

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("Caused by: ");

        $r5 = r0.<org.apache.commons.httpclient.HttpException: java.lang.Throwable cause>;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void setReason(java.lang.String)
    {
        org.apache.commons.httpclient.HttpException r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.httpclient.HttpException: java.lang.String reason> = $r1;

        return;
    }
    public void setReasonCode(int)
    {
        org.apache.commons.httpclient.HttpException r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpException;

        $i0 := @parameter0: int;

        r0.<org.apache.commons.httpclient.HttpException: int reasonCode> = $i0;

        return;
    }
