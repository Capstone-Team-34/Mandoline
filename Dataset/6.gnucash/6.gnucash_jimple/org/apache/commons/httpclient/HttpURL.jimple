org.apache.commons.httpclient.HttpURL extends org.apache.commons.httpclient.URI
public static final int DEFAULT_PORT
public static final char[] DEFAULT_SCHEME
public static final int _default_port
public static final char[] _default_scheme
static final long serialVersionUID
    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[4];

        $r0[0] = 104;

        $r0[1] = 116;

        $r0[2] = 116;

        $r0[3] = 112;

        <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME> = $r0;

        $r0 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        <org.apache.commons.httpclient.HttpURL: char[] _default_scheme> = $r0;

        return;
    }
    protected void <init>()
    {
        org.apache.commons.httpclient.HttpURL r0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        return;
    }
    public void <init>(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r1, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    public void <init>(java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, $r1, $i0, $r2, null, null);

        return;
    }
    public void <init>(java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, $r1, $i0, $r2, $r3, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpURL: java.lang.String protocolCharset> = $r2;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r1, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    public void <init>(java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $i0, $r3, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $i0, $r3, $r4, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.StringBuffer r6;
        char[] $r7;
        java.util.BitSet $r8;
        boolean $z0;
        org.apache.commons.httpclient.URIException $r9;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        r6 = new java.lang.StringBuffer;

        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        if $i0 == -1 goto label4;

     label1:
        $r7 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme> = $r7;

        $r7 = <org.apache.commons.httpclient.HttpURL: char[] _default_scheme>;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        if $r1 == null goto label2;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        if $r2 == null goto label4;

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r1 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r2, $r8);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        if $i0 != -1 goto label3;

        if $i0 == 80 goto label4;

     label3:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label4:
        if $r3 == null goto label6;

        $r8 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet scheme>;

        if $r8 == null goto label5;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label5;

        $r9 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r9.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "abs_path requested");

        throw $r9;

     label5:
        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r1 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r3, $r8);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label6:
        if $r4 == null goto label7;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r1 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r4, $r8);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label7:
        if $r5 == null goto label8;

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r1 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r5, $r8);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label8:
        $r1 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, -1, null, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, null, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, $r4, null, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $i0, $r4, $r5, null);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        $r6 := @parameter6: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String toUserinfo(java.lang.String,java.lang.String)>($r1, $r2);

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, $i0, $r4, $r5, $r6);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, null, $r1, -1, $r2, $r3, $r4);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, -1, $r3, $r4, $r5);

        return;
    }
    public void <init>(org.apache.commons.httpclient.HttpURL, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0, $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpURL;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.commons.httpclient.HttpURL;

        specialinvoke $r3.<org.apache.commons.httpclient.HttpURL: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(org.apache.commons.httpclient.HttpURL,org.apache.commons.httpclient.HttpURL)>($r1, $r3);

        return;
    }
    public void <init>(org.apache.commons.httpclient.HttpURL, org.apache.commons.httpclient.HttpURL) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0, $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpURL;

        $r2 := @parameter1: org.apache.commons.httpclient.HttpURL;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>($r1, $r2);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    public void <init>(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: char[];

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    public void <init>(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpURL: java.lang.String protocolCharset> = $r2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void checkValid()>();

        return;
    }
    protected static java.lang.String toUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuffer r2;
        java.util.BitSet $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>(20);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r0, $r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        if $r1 != null goto label2;

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>($r1, $r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    protected void checkValid() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        boolean $z0;
        char[] $r1, $r2;
        org.apache.commons.httpclient.URIException $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        $r2 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean equals(char[],char[])>($r1, $r2);

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r1 == null goto label1;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "wrong class use");

        throw $r3;

     label1:
        return;
    }
    public java.lang.String getEscapedPassword()
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getEscapedUser()
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getPassword() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public int getPort()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        if $i0 != -1 goto label1;

        return 80;

     label1:
        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        return $i0;
    }
    public char[] getRawAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawCurrentHierPath()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

        return $r1;

     label2:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawCurrentHierPath(char[])>($r1);

        return $r1;
    }
    public char[] getRawCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

        return $r1;

     label2:
        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $r1 = specialinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r1);

        return $r1;
    }
    public char[] getRawPassword()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int i0, $i1;
        char[] $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: int indexFirstOf(char[],char)>($r1, 58);

        if $i1 != -1 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        i0 = lengthof $r1;

        i0 = i0 - $i1;

        i0 = i0 + -1;

        $r1 = newarray (char)[i0];

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i1 = $i1 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, 0, i0);

        return $r1;
    }
    public char[] getRawPath()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = specialinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpURL: char[] rootPath>;

     label2:
        return $r1;
    }
    public char[] getRawScheme()
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        return $r1;
    }
    public char[] getRawUser()
    {
        org.apache.commons.httpclient.HttpURL r0;
        int $i0;
        char[] $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: int indexFirstOf(char[],char)>($r1, 58);

        if $i0 != -1 goto label3;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        return $r1;

     label3:
        $r1 = newarray (char)[$i0];

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;
    }
    public java.lang.String getScheme()
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

        $r1 = <org.apache.commons.httpclient.HttpURL: char[] DEFAULT_SCHEME>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }
    public java.lang.String getUser() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

        return $r2;
    }
    public void setEscapedPassword(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawPassword(char[])>($r2);

        return;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        goto label1;
    }
    public void setEscapedUser(java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUser(char[])>($r2);

        return;
    }
    public void setEscapedUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2;
        char[] $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        if $r2 != null goto label2;

        $r4 = null;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUserinfo(char[],char[])>($r3, $r4);

        return;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        goto label1;
    }
    public void setPassword(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r4;
        char[] $r2;
        java.util.BitSet $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawPassword(char[])>($r2);

        return;

     label2:
        $r3 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_userinfo>;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r3, $r4);

        goto label1;
    }
    public void setQuery(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuffer r3;
        java.util.BitSet $r5;
        char[] $r6;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r5 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r6 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r5, $r4);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r5 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r6 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r2, $r5, $r4);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        $r1 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _query> = $r6;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }
    public void setQuery(java.lang.String[], java.lang.String[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String[] $r1, $r2;
        java.lang.StringBuffer r3;
        int i0, $i1, $i2;
        org.apache.commons.httpclient.URIException $r4;
        java.lang.String $r5, $r6;
        java.util.BitSet $r7;
        char[] $r8;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String[];

        i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if i0 == $i1 goto label1;

        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("wrong array size of query");

        throw $r4;

     label1:
        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $i1 = 0;

     label2:
        if $i1 >= i0 goto label4;

        $r6 = $r1[$i1];

        $r7 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r8 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r6, $r7, $r5);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r6 = $r2[$i1];

        $r7 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_query>;

        $r8 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r6, $r7, $r5);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

        $i2 = $i1 + 1;

        if $i2 >= i0 goto label3;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r5 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _query> = $r8;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;
    }
    public void setRawPassword(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1, $r6;
        java.lang.String r2, r3;
        java.util.BitSet $r4;
        boolean $z0;
        org.apache.commons.httpclient.URIException $r5;
        int $i0;
        java.lang.StringBuffer $r7, $r8;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: char[];

        if $r1 == null goto label1;

        $r4 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>($r1, $r4);

        if $z0 != 0 goto label1;

        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped password not valid");

        throw $r5;

     label1:
        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        if $r6 == null goto label2;

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        $i0 = lengthof $r6;

        if $i0 != 0 goto label3;

     label2:
        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "username required");

        throw $r5;

     label3:
        r3 = new java.lang.String;

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawUser()>();

        specialinvoke r3.<java.lang.String: void <init>(char[])>($r6);

        if $r1 != null goto label7;

        r2 = null;

     label4:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        if r2 != null goto label8;

        r3 = "";

     label5:
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r2 = new java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke r2.<java.lang.String: void <init>(char[])>($r1);

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        if $i0 != -1 goto label9;

     label6:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r1;

        $r1 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;

     label7:
        r2 = new java.lang.String;

        specialinvoke r2.<java.lang.String: void <init>(char[])>($r1);

        goto label4;

     label8:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label9:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;
    }
    public void setRawUser(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1;
        java.lang.String r2, r3;
        int $i0;
        org.apache.commons.httpclient.URIException $r4;
        java.util.BitSet $r5;
        boolean $z0;
        java.lang.StringBuffer $r6, $r7;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: char[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

     label1:
        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "user required");

        throw $r4;

     label2:
        $r5 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>($r1, $r5);

        if $z0 != 0 goto label3;

        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped user not valid");

        throw $r4;

     label3:
        r3 = new java.lang.String;

        specialinvoke r3.<java.lang.String: void <init>(char[])>($r1);

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawPassword()>();

        if $r1 != null goto label7;

        r2 = null;

     label4:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        if r2 != null goto label8;

        r3 = "";

     label5:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r2 = new java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke r2.<java.lang.String: void <init>(char[])>($r1);

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        if $i0 != -1 goto label9;

     label6:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r1;

        $r1 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;

     label7:
        r2 = new java.lang.String;

        specialinvoke r2.<java.lang.String: void <init>(char[])>($r1);

        goto label4;

     label8:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label9:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;
    }
    public void setRawUserinfo(char[], char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpURL r0;
        char[] $r1, $r2;
        java.lang.String r3, r4;
        int $i0;
        org.apache.commons.httpclient.URIException $r5;
        java.util.BitSet $r6;
        boolean $z0;
        java.lang.StringBuffer $r7, $r8;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: char[];

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

     label01:
        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "user required");

        throw $r5;

     label02:
        $r6 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>($r1, $r6);

        if $z0 == 0 goto label03;

        if $r2 == null goto label04;

        $r6 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: boolean validate(char[],java.util.BitSet)>($r2, $r6);

        if $z0 != 0 goto label04;

     label03:
        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped userinfo not valid");

        throw $r5;

     label04:
        r4 = new java.lang.String;

        specialinvoke r4.<java.lang.String: void <init>(char[])>($r1);

        if $r2 != null goto label08;

        r3 = null;

     label05:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        if r3 != null goto label09;

        r4 = "";

     label06:
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r3 = new java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: char[] getRawHost()>();

        specialinvoke r3.<java.lang.String: void <init>(char[])>($r1);

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        if $i0 != -1 goto label10;

     label07:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo> = $r1;

        $r1 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _authority> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setURI()>();

        return;

     label08:
        r3 = new java.lang.String;

        specialinvoke r3.<java.lang.String: void <init>(char[])>($r2);

        goto label05;

     label09:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label10:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label07;
    }
    protected void setURI()
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.StringBuffer r1;
        char[] $r2;
        boolean $z0;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _scheme>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $z0 = r0.<org.apache.commons.httpclient.HttpURL: boolean _is_net_path>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _authority>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _userinfo>;

        if $r2 == null goto label5;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _host>;

        if $r2 == null goto label2;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _host>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        if $i0 == -1 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i0 = r0.<org.apache.commons.httpclient.HttpURL: int _port>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label2:
        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _opaque>;

        if $r2 == null goto label6;

        $z0 = r0.<org.apache.commons.httpclient.HttpURL: boolean _is_opaque_part>;

        if $z0 == 0 goto label6;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _opaque>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label3:
        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _query>;

        if $r2 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _query>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.HttpURL: char[] _uri> = $r2;

        r0.<org.apache.commons.httpclient.HttpURL: int hash> = 0;

        return;

     label5:
        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _authority>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        goto label2;

     label6:
        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        $i0 = lengthof $r2;

        if $i0 == 0 goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HttpURL: char[] _path>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        goto label3;
    }
    public void setUser(java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r3;
        java.util.BitSet $r2;
        char[] $r4;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet allowed_within_userinfo>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r2, $r3);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUser(char[])>($r4);

        return;
    }
    public void setUserinfo(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpURL r0;
        java.lang.String $r1, $r2, $r3;
        java.util.BitSet $r4;
        char[] $r5, $r6;

        r0 := @this: org.apache.commons.httpclient.HttpURL;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: java.lang.String getProtocolCharset()>();

        $r4 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $r5 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r1, $r4, $r3);

        if $r2 != null goto label2;

        $r6 = null;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.HttpURL: void setRawUserinfo(char[],char[])>($r5, $r6);

        return;

     label2:
        $r4 = <org.apache.commons.httpclient.HttpURL: java.util.BitSet within_userinfo>;

        $r6 = staticinvoke <org.apache.commons.httpclient.HttpURL: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r2, $r4, $r3);

        goto label1;
    }
