org.apache.commons.httpclient.params.DefaultHttpParams extends java.lang.Object implements org.apache.commons.httpclient.params.HttpParams java.io.Serializable java.lang.Cloneable
private static final org.apache.commons.logging.Log LOG
static java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams
private static org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory
private org.apache.commons.httpclient.params.HttpParams defaults
private java.util.HashMap parameters
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.commons.httpclient.params.DefaultHttpParamsFactory $r3;

        $r0 = <org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.params.DefaultHttpParams");

        $r1 = $r0;

        <org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams> = $r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.logging.Log LOG> = $r2;

        $r3 = new org.apache.commons.httpclient.params.DefaultHttpParamsFactory;

        specialinvoke $r3.<org.apache.commons.httpclient.params.DefaultHttpParamsFactory: void <init>()>();

        <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory> = $r3;

        return;

     label2:
        $r1 = <org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams>;

        goto label1;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        org.apache.commons.httpclient.params.HttpParams $r1;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 = staticinvoke <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams getDefaultParams()>();

        specialinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void <init>(org.apache.commons.httpclient.params.HttpParams)>($r1);

        return;
    }
    public void <init>(org.apache.commons.httpclient.params.HttpParams)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        org.apache.commons.httpclient.params.HttpParams $r1;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: org.apache.commons.httpclient.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults> = null;

        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters> = null;

        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults> = $r1;

        return;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static org.apache.commons.httpclient.params.HttpParams getDefaultParams()
    {
        org.apache.commons.httpclient.params.HttpParams $r0;
        org.apache.commons.httpclient.params.HttpParamsFactory $r1;

        $r1 = <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory>;

        $r0 = interfaceinvoke $r1.<org.apache.commons.httpclient.params.HttpParamsFactory: org.apache.commons.httpclient.params.HttpParams getDefaultParams()>();

        return $r0;
    }
    public static void setHttpParamsFactory(org.apache.commons.httpclient.params.HttpParamsFactory)
    {
        org.apache.commons.httpclient.params.HttpParamsFactory $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: org.apache.commons.httpclient.params.HttpParamsFactory;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("httpParamsFactory may not be null");

        throw $r1;

     label1:
        <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory> = $r0;

        return;
    }
    public void clear()
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters> = null;

        return;
    }
    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0, r2;
        java.lang.Object $r1;
        java.util.HashMap $r3;
        org.apache.commons.httpclient.params.HttpParams $r4;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.httpclient.params.DefaultHttpParams) $r1;

        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        if $r3 == null goto label1;

        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        $r1 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object clone()>();

        $r3 = (java.util.HashMap) $r1;

        r2.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters> = $r3;

     label1:
        $r4 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults>;

        virtualinvoke r2.<org.apache.commons.httpclient.params.DefaultHttpParams: void setDefaults(org.apache.commons.httpclient.params.HttpParams)>($r4);

        return r2;
    }
    public boolean getBooleanParameter(java.lang.String, boolean)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        boolean z0;
        java.lang.Object $r2;
        java.lang.Boolean r3;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

        if $r2 != null goto label1;

        return z0;

     label1:
        r3 = (java.lang.Boolean) $r2;

        z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        return z0;
    }
    public org.apache.commons.httpclient.params.HttpParams getDefaults()
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.Throwable $r1;
        org.apache.commons.httpclient.params.HttpParams r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        entermonitor r0;

     label1:
        r2 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public double getDoubleParameter(java.lang.String, double)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        double d0;
        java.lang.Object $r2;
        java.lang.Double r3;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

        if $r2 != null goto label1;

        return d0;

     label1:
        r3 = (java.lang.Double) $r2;

        d0 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        return d0;
    }
    public int getIntParameter(java.lang.String, int)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.Integer r3;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

        if $r2 != null goto label1;

        return i0;

     label1:
        r3 = (java.lang.Integer) $r2;

        i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return i0;
    }
    public long getLongParameter(java.lang.String, long)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        long l0;
        java.lang.Object $r2;
        java.lang.Long r3;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

        if $r2 != null goto label1;

        return l0;

     label1:
        r3 = (java.lang.Long) $r2;

        l0 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        return l0;
    }
    public java.lang.Object getParameter(java.lang.String)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        java.lang.Object r2;
        java.util.HashMap $r3;
        org.apache.commons.httpclient.params.HttpParams $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

        r2 = null;

     label1:
        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        if $r3 == null goto label2;

        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        if r2 == null goto label4;

     label3:
        exitmonitor r0;

        return r2;

     label4:
        $r4 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults>;

        if $r4 == null goto label6;

        $r4 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults>;

        r2 = interfaceinvoke $r4.<org.apache.commons.httpclient.params.HttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

     label5:
        goto label3;

     label6:
        r2 = null;

        goto label3;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
    public boolean isParameterFalse(java.lang.String)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>($r1, 0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isParameterSet(java.lang.String)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isParameterSetLocally(java.lang.String)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        if $r3 == null goto label1;

        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isParameterTrue(java.lang.String)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>($r1, 0);

        return $z0;
    }
    public void setBooleanParameter(java.lang.String, boolean)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void setParameter(java.lang.String,java.lang.Object)>($r1, $r2);

        return;

     label2:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label1;
    }
    public void setDefaults(org.apache.commons.httpclient.params.HttpParams)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        org.apache.commons.httpclient.params.HttpParams $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: org.apache.commons.httpclient.params.HttpParams;

        entermonitor r0;

     label1:
        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.httpclient.params.HttpParams defaults> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setDoubleParameter(java.lang.String, double)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        double $d0;
        java.lang.Double $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = new java.lang.Double;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0);

        virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void setParameter(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }
    public void setIntParameter(java.lang.String, int)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void setParameter(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }
    public void setLongParameter(java.lang.String, long)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        long $l0;
        java.lang.Long $r2;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>($l0);

        virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void setParameter(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }
    public void setParameter(java.lang.String, java.lang.Object)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        org.apache.commons.logging.Log $r4;
        boolean $z0;
        java.lang.StringBuffer $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        if $r3 != null goto label2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters> = $r3;

     label2:
        $r3 = r0.<org.apache.commons.httpclient.params.DefaultHttpParams: java.util.HashMap parameters>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r4 = <org.apache.commons.httpclient.params.DefaultHttpParams: org.apache.commons.logging.Log LOG>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Set parameter ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public void setParameters(java.lang.String[], java.lang.Object)
    {
        org.apache.commons.httpclient.params.DefaultHttpParams r0;
        java.lang.String[] $r1;
        java.lang.Object $r2;
        int i0, $i1;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.commons.httpclient.params.DefaultHttpParams;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.Object;

        entermonitor r0;

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r3 = $r1[i0];

        virtualinvoke r0.<org.apache.commons.httpclient.params.DefaultHttpParams: void setParameter(java.lang.String,java.lang.Object)>($r3, $r2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
