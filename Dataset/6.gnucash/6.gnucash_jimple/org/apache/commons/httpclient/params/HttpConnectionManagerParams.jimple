org.apache.commons.httpclient.params.HttpConnectionManagerParams extends org.apache.commons.httpclient.params.HttpConnectionParams
public static final java.lang.String MAX_HOST_CONNECTIONS
public static final java.lang.String MAX_TOTAL_CONNECTIONS
    public void <init>()
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionParams: void <init>()>();

        return;
    }
    public int getDefaultMaxConnectionsPerHost()
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        int $i0;
        org.apache.commons.httpclient.HostConfiguration $r1;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $r1 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)>($r1);

        return $i0;
    }
    public int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        org.apache.commons.httpclient.HostConfiguration $r1, $r5;
        java.lang.Object $r2;
        java.util.Map r3;
        java.lang.Integer r4;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $r1 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.max-per-host");

        r3 = (java.util.Map) $r2;

        if r3 != null goto label1;

        return 2;

     label1:
        $r2 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Integer) $r2;

        if r4 != null goto label2;

        $r5 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        if $r1 == $r5 goto label2;

        $r1 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)>($r1);

        return $i0;

     label2:
        if r4 == null goto label3;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label3:
        return 2;
    }
    public int getMaxTotalConnections()
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getIntParameter(java.lang.String,int)>("http.connection-manager.max-total", 20);

        return $i0;
    }
    public void setDefaultMaxConnectionsPerHost(int)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        int $i0;
        org.apache.commons.httpclient.HostConfiguration $r1;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $i0 := @parameter0: int;

        $r1 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration,int)>($r1, $i0);

        return;
    }
    public void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration, int)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        org.apache.commons.httpclient.HostConfiguration $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Map r4;
        java.util.HashMap r5;
        java.lang.Integer $r6;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $r1 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        $i0 := @parameter1: int;

        if $i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxHostConnections must be greater than 0");

        throw $r3;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.max-per-host");

        r4 = (java.util.Map) $r2;

        if r4 != null goto label3;

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

     label2:
        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i0);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setParameter(java.lang.String,java.lang.Object)>("http.connection-manager.max-per-host", r5);

        return;

     label3:
        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>(java.util.Map)>(r4);

        goto label2;
    }
    public void setMaxTotalConnections(int)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setIntParameter(java.lang.String,int)>("http.connection-manager.max-total", $i0);

        return;
    }
