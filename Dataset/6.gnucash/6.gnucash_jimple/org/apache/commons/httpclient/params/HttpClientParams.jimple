org.apache.commons.httpclient.params.HttpClientParams extends org.apache.commons.httpclient.params.HttpMethodParams
public static final java.lang.String ALLOW_CIRCULAR_REDIRECTS
public static final java.lang.String CONNECTION_MANAGER_CLASS
public static final java.lang.String CONNECTION_MANAGER_TIMEOUT
public static final java.lang.String MAX_REDIRECTS
public static final java.lang.String PREEMPTIVE_AUTHENTICATION
private static final java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS
public static final java.lang.String REJECT_RELATIVE_REDIRECT
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "http.protocol.reject-relative-redirect";

        $r0[1] = "http.protocol.allow-circular-redirects";

        <org.apache.commons.httpclient.params.HttpClientParams: java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpMethodParams: void <init>()>();

        return;
    }
    public void <init>(org.apache.commons.httpclient.params.HttpParams)
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        org.apache.commons.httpclient.params.HttpParams $r1;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $r1 := @parameter0: org.apache.commons.httpclient.params.HttpParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpMethodParams: void <init>(org.apache.commons.httpclient.params.HttpParams)>($r1);

        return;
    }
    public java.lang.Class getConnectionManagerClass()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.class");

        $r2 = (java.lang.Class) $r1;

        return $r2;
    }
    public long getConnectionManagerTimeout()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        long $l0;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $l0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: long getLongParameter(java.lang.String,long)>("http.connection-manager.timeout", 0L);

        return $l0;
    }
    public boolean isAuthenticationPreemptive()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.authentication.preemptive", 0);

        return $z0;
    }
    public void makeLenient()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        java.lang.String[] $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpMethodParams: void makeLenient()>();

        $r1 = <org.apache.commons.httpclient.params.HttpClientParams: java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS>;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameters(java.lang.String[],java.lang.Object)>($r1, $r2);

        return;
    }
    public void makeStrict()
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        java.lang.String[] $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpMethodParams: void makeStrict()>();

        $r1 = <org.apache.commons.httpclient.params.HttpClientParams: java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameters(java.lang.String[],java.lang.Object)>($r1, $r2);

        return;
    }
    public void setAuthenticationPreemptive(boolean)
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: void setBooleanParameter(java.lang.String,boolean)>("http.authentication.preemptive", $z0);

        return;
    }
    public void setConnectionManagerClass(java.lang.Class)
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: void setParameter(java.lang.String,java.lang.Object)>("http.connection-manager.class", $r1);

        return;
    }
    public void setConnectionManagerTimeout(long)
    {
        org.apache.commons.httpclient.params.HttpClientParams r0;
        long $l0;

        r0 := @this: org.apache.commons.httpclient.params.HttpClientParams;

        $l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpClientParams: void setLongParameter(java.lang.String,long)>("http.connection-manager.timeout", $l0);

        return;
    }
