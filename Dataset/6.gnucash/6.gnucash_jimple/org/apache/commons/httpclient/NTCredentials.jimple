org.apache.commons.httpclient.NTCredentials extends org.apache.commons.httpclient.UsernamePasswordCredentials
private java.lang.String domain
private java.lang.String host
    public void <init>()
    {
        org.apache.commons.httpclient.NTCredentials r0;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        specialinvoke r0.<org.apache.commons.httpclient.UsernamePasswordCredentials: void <init>()>();

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.UsernamePasswordCredentials: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Domain may not be null");

        throw $r5;

     label1:
        r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain> = $r4;

        if $r3 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host may not be null");

        throw $r5;

     label2:
        r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host> = $r3;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.NTCredentials r0, r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        if $r1 != null goto label1;

        return 0;

     label1:
        if r0 != $r1 goto label2;

        return 1;

     label2:
        $z1 = specialinvoke r0.<org.apache.commons.httpclient.UsernamePasswordCredentials: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label5;

        $z1 = $r1 instanceof org.apache.commons.httpclient.NTCredentials;

        if $z1 == 0 goto label5;

        r2 = (org.apache.commons.httpclient.NTCredentials) $r1;

        $r3 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain>;

        $r4 = r2.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label4;

        $r3 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host>;

        $r4 = r2.<org.apache.commons.httpclient.NTCredentials: java.lang.String host>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label4;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return 0;
    }
    public java.lang.String getDomain()
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        r1 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain>;

        return r1;
    }
    public java.lang.String getHost()
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        r1 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.commons.httpclient.NTCredentials r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        $i0 = specialinvoke r0.<org.apache.commons.httpclient.UsernamePasswordCredentials: int hashCode()>();

        $r1 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r1);

        $r1 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r1);

        return $i0;
    }
    public void setDomain(java.lang.String)
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Domain may not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain> = $r1;

        return;
    }
    public void setHost(java.lang.String)
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host may not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host> = $r1;

        return;
    }
    public java.lang.String toString()
    {
        org.apache.commons.httpclient.NTCredentials r0;
        java.lang.StringBuffer r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.NTCredentials;

        r1 = new java.lang.StringBuffer;

        $r2 = specialinvoke r0.<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String toString()>();

        specialinvoke r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r2 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String host>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r2 = r0.<org.apache.commons.httpclient.NTCredentials: java.lang.String domain>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
