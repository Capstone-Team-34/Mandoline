org.apache.commons.httpclient.StatusLine extends java.lang.Object
private final java.lang.String httpVersion
private final java.lang.String reasonPhrase
private final int statusCode
private final java.lang.String statusLine
    public void <init>(java.lang.String) throws org.apache.commons.httpclient.HttpException
    {
        org.apache.commons.httpclient.StatusLine r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, i1, i2, i4;
        char $c3;
        boolean $z0;
        org.apache.commons.httpclient.HttpException $r4;
        java.lang.StringBuffer $r5;
        java.lang.StringIndexOutOfBoundsException r6, r9;
        org.apache.commons.httpclient.ProtocolException $r7;
        java.lang.NumberFormatException r8;

        r0 := @this: org.apache.commons.httpclient.StatusLine;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = 0;

        i2 = 0;

     label01:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

     label02:
        if $z0 == 0 goto label03;

        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label01;

     label03:
        $r2 = "HTTP";

        i4 = i2 + 4;

     label04:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label05:
        if $z0 != 0 goto label10;

        $r4 = new org.apache.commons.httpclient.HttpException;

        $r5 = new java.lang.StringBuffer;

     label06:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Status-Line \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not start with HTTP");

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.httpclient.HttpException: void <init>(java.lang.String)>($r2);

     label07:
        throw $r4;

     label08:
        r6 := @caughtexception;

     label09:
        $r4 = new org.apache.commons.httpclient.HttpException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Status-Line \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not valid");

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.httpclient.HttpException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label10:
        i4 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(" ", i4);

     label11:
        i2 = i4;

        if i4 > 0 goto label14;

        $r7 = new org.apache.commons.httpclient.ProtocolException;

        $r5 = new java.lang.StringBuffer;

     label12:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse HTTP-Version from the status line: \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.httpclient.ProtocolException: void <init>(java.lang.String)>($r2);

     label13:
        throw $r7;

     label14:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i4);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

     label15:
        r0.<org.apache.commons.httpclient.StatusLine: java.lang.String httpVersion> = $r2;

     label16:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

     label17:
        if $c3 != 32 goto label18;

        i2 = i2 + 1;

        goto label16;

     label18:
        i4 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(" ", i2);

     label19:
        i1 = i4;

        if i4 >= 0 goto label20;

        i1 = $i0;

     label20:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label21:
        r0.<org.apache.commons.httpclient.StatusLine: int statusCode> = i2;

        i1 = i1 + 1;

        if i1 >= $i0 goto label28;

     label22:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i1);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label23:
        r0.<org.apache.commons.httpclient.StatusLine: java.lang.String reasonPhrase> = $r2;

     label24:
        r0.<org.apache.commons.httpclient.StatusLine: java.lang.String statusLine> = $r1;

        return;

     label25:
        r8 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.ProtocolException;

        $r5 = new java.lang.StringBuffer;

     label26:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse status code from status line: \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.httpclient.ProtocolException: void <init>(java.lang.String)>($r2);

     label27:
        throw $r7;

     label28:
        r0.<org.apache.commons.httpclient.StatusLine: java.lang.String reasonPhrase> = "";

        goto label24;

     label29:
        r9 := @caughtexception;

        goto label09;

        catch java.lang.StringIndexOutOfBoundsException from label01 to label02 with label29;
        catch java.lang.StringIndexOutOfBoundsException from label04 to label05 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label06 to label07 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label10 to label11 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label12 to label13 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label14 to label15 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label16 to label17 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label18 to label19 with label08;
        catch java.lang.NumberFormatException from label20 to label21 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label20 to label21 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label22 to label23 with label08;
        catch java.lang.StringIndexOutOfBoundsException from label26 to label27 with label08;
    }
    public static boolean startsWithHTTP(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.StringIndexOutOfBoundsException r1;
        int i0, $i2;
        char $c1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

     label2:
        if $z0 == 0 goto label3;

        i0 = i0 + 1;

        goto label1;

     label3:
        $r2 = "HTTP";

        $i2 = i0 + 4;

     label4:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

     label5:
        return $z0;

     label6:
        r1 := @caughtexception;

        return 0;

        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label6;
        catch java.lang.StringIndexOutOfBoundsException from label4 to label5 with label6;
    }
    public final java.lang.String getHttpVersion()
    {
        org.apache.commons.httpclient.StatusLine r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.StatusLine;

        r1 = r0.<org.apache.commons.httpclient.StatusLine: java.lang.String httpVersion>;

        return r1;
    }
    public final java.lang.String getReasonPhrase()
    {
        org.apache.commons.httpclient.StatusLine r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.StatusLine;

        r1 = r0.<org.apache.commons.httpclient.StatusLine: java.lang.String reasonPhrase>;

        return r1;
    }
    public final int getStatusCode()
    {
        org.apache.commons.httpclient.StatusLine r0;
        int i0;

        r0 := @this: org.apache.commons.httpclient.StatusLine;

        i0 = r0.<org.apache.commons.httpclient.StatusLine: int statusCode>;

        return i0;
    }
    public final java.lang.String toString()
    {
        org.apache.commons.httpclient.StatusLine r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.StatusLine;

        r1 = r0.<org.apache.commons.httpclient.StatusLine: java.lang.String statusLine>;

        return r1;
    }
