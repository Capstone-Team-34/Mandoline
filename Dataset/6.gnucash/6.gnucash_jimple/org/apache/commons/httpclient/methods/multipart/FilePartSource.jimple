org.apache.commons.httpclient.methods.multipart.FilePartSource extends java.lang.Object implements org.apache.commons.httpclient.methods.multipart.PartSource
private java.io.File file
private java.lang.String fileName
    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        org.apache.commons.httpclient.methods.multipart.FilePartSource r0;
        java.io.File $r1;
        boolean $z0;
        java.io.FileNotFoundException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.methods.multipart.FilePartSource;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file> = null;

        r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.lang.String fileName> = null;

        r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file> = $r1;

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label1;

        $r2 = new java.io.FileNotFoundException;

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>("File is not a normal file.");

        throw $r2;

     label1:
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label2;

        $r2 = new java.io.FileNotFoundException;

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>("File is not readable.");

        throw $r2;

     label2:
        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.lang.String fileName> = $r3;

     label3:
        return;
    }
    public void <init>(java.lang.String, java.io.File) throws java.io.FileNotFoundException
    {
        org.apache.commons.httpclient.methods.multipart.FilePartSource r0;
        java.lang.String $r1;
        java.io.File $r2;

        r0 := @this: org.apache.commons.httpclient.methods.multipart.FilePartSource;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: void <init>(java.io.File)>($r2);

        if $r1 == null goto label1;

        r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.lang.String fileName> = $r1;

     label1:
        return;
    }
    public java.io.InputStream createInputStream() throws java.io.IOException
    {
        org.apache.commons.httpclient.methods.multipart.FilePartSource r0;
        java.io.File $r1;
        java.io.FileInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        byte[] $r4;

        r0 := @this: org.apache.commons.httpclient.methods.multipart.FilePartSource;

        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file>;

        if $r1 == null goto label1;

        $r2 = new java.io.FileInputStream;

        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file>;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        return $r2;

     label1:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = newarray (byte)[0];

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        return $r3;
    }
    public java.lang.String getFileName()
    {
        org.apache.commons.httpclient.methods.multipart.FilePartSource r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.methods.multipart.FilePartSource;

        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.lang.String fileName>;

        if $r1 != null goto label1;

        return "noname";

     label1:
        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.lang.String fileName>;

        return $r1;
    }
    public long getLength()
    {
        org.apache.commons.httpclient.methods.multipart.FilePartSource r0;
        long $l0;
        java.io.File $r1;

        r0 := @this: org.apache.commons.httpclient.methods.multipart.FilePartSource;

        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.commons.httpclient.methods.multipart.FilePartSource: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;

     label1:
        return 0L;
    }
