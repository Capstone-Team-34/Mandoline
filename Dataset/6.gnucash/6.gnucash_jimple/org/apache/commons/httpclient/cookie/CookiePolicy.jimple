org.apache.commons.httpclient.cookie.CookiePolicy extends java.lang.Object
public static final java.lang.String BROWSER_COMPATIBILITY
public static final int COMPATIBILITY
public static final java.lang.String DEFAULT
public static final java.lang.String IGNORE_COOKIES
protected static final org.apache.commons.logging.Log LOG
public static final java.lang.String NETSCAPE
public static final int NETSCAPE_DRAFT
public static final int RFC2109
public static final int RFC2965
public static final java.lang.String RFC_2109
public static final java.lang.String RFC_2965
private static java.util.Map SPECS
static java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy
static java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase
static java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec
static java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec
static java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec
static java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec
private static int defaultPolicy
    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;
        java.lang.Class $r2, $r3;
        org.apache.commons.logging.Log $r4;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS> = $r1;

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec>;

        if $r2 != null goto label08;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.RFC2109Spec");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec> = $r2;

     label01:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("default", $r3);

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec>;

        if $r2 != null goto label09;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.RFC2109Spec");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec> = $r2;

     label02:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("rfc2109", $r3);

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec>;

        if $r2 != null goto label10;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.RFC2965Spec");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec> = $r2;

     label03:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("rfc2965", $r3);

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase>;

        if $r2 != null goto label11;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.CookieSpecBase");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase> = $r2;

     label04:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("compatibility", $r3);

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec>;

        if $r2 != null goto label12;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.NetscapeDraftSpec");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec> = $r2;

     label05:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("netscape", $r3);

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec>;

        if $r2 != null goto label13;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.IgnoreCookiesSpec");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec> = $r2;

     label06:
        staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: void registerCookieSpec(java.lang.String,java.lang.Class)>("ignoreCookies", $r3);

        <org.apache.commons.httpclient.cookie.CookiePolicy: int defaultPolicy> = 2;

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy>;

        if $r2 != null goto label14;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.CookiePolicy");

        $r3 = $r2;

        <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy> = $r2;

     label07:
        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.logging.Log LOG> = $r4;

        return;

     label08:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec>;

        goto label01;

     label09:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec>;

        goto label02;

     label10:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec>;

        goto label03;

     label11:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase>;

        goto label04;

     label12:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec>;

        goto label05;

     label13:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec>;

        goto label06;

     label14:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy>;

        goto label07;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.cookie.CookiePolicy r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookiePolicy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public static org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec()
    {
        org.apache.commons.httpclient.cookie.CookieSpec $r0;

        $r0 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int)>(0);

        return $r0;
    }
    public static org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) throws java.lang.IllegalStateException
    {
        java.lang.String $r0, $r4;
        java.lang.Exception r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Map $r3;
        java.lang.Object $r5;
        java.lang.Class r6;
        org.apache.commons.httpclient.cookie.CookieSpec $r7;
        org.apache.commons.logging.Log $r8;
        java.lang.StringBuffer $r9;
        java.lang.IllegalStateException $r10;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r2;

     label1:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS>;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (java.lang.Class) $r5;

        if r6 == null goto label5;

     label2:
        $r5 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();

        $r7 = (org.apache.commons.httpclient.cookie.CookieSpec) $r5;

     label3:
        return $r7;

     label4:
        r1 := @caughtexception;

        $r8 = <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.logging.Log LOG>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error initializing cookie spec: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, r1);

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cookie spec implemented by ");

        $r0 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" could not be initialized");

        $r0 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r10;

     label5:
        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported cookie spec ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r10;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public static int getDefaultPolicy()
    {
        int i0;

        i0 = <org.apache.commons.httpclient.cookie.CookiePolicy: int defaultPolicy>;

        return i0;
    }
    public static org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec()
    {
        java.lang.IllegalStateException r0;
        org.apache.commons.httpclient.cookie.CookieSpec $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.commons.httpclient.cookie.RFC2109Spec $r3;

     label1:
        $r1 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String)>("default");

     label2:
        return $r1;

     label3:
        r0 := @caughtexception;

        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Default cookie policy is not registered");

        $r3 = new org.apache.commons.httpclient.cookie.RFC2109Spec;

        specialinvoke $r3.<org.apache.commons.httpclient.cookie.RFC2109Spec: void <init>()>();

        return $r3;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }
    public static java.lang.String[] getRegisteredCookieSpecs()
    {
        java.util.Map $r0;
        java.util.Set $r1;
        int $i0;
        java.lang.String[] $r2;
        java.lang.Object[] $r3;

        $r0 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r0 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.lang.String[]) $r3;

        return $r2;
    }
    public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int)
    {
        int $i0;
        org.apache.commons.httpclient.cookie.CookieSpec $r0;
        org.apache.commons.httpclient.cookie.CookieSpecBase $r1;
        org.apache.commons.httpclient.cookie.NetscapeDraftSpec $r2;
        org.apache.commons.httpclient.cookie.RFC2109Spec $r3;
        org.apache.commons.httpclient.cookie.RFC2965Spec $r4;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec()>();

        return $r0;

     label2:
        $r1 = new org.apache.commons.httpclient.cookie.CookieSpecBase;

        specialinvoke $r1.<org.apache.commons.httpclient.cookie.CookieSpecBase: void <init>()>();

        return $r1;

     label3:
        $r2 = new org.apache.commons.httpclient.cookie.NetscapeDraftSpec;

        specialinvoke $r2.<org.apache.commons.httpclient.cookie.NetscapeDraftSpec: void <init>()>();

        return $r2;

     label4:
        $r3 = new org.apache.commons.httpclient.cookie.RFC2109Spec;

        specialinvoke $r3.<org.apache.commons.httpclient.cookie.RFC2109Spec: void <init>()>();

        return $r3;

     label5:
        $r4 = new org.apache.commons.httpclient.cookie.RFC2965Spec;

        specialinvoke $r4.<org.apache.commons.httpclient.cookie.RFC2965Spec: void <init>()>();

        return $r4;
    }
    public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int)
    {
        int $i0;
        org.apache.commons.httpclient.cookie.CookieSpec $r0;
        org.apache.commons.httpclient.cookie.NetscapeDraftSpec $r1;
        org.apache.commons.httpclient.cookie.RFC2109Spec $r2;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec()>();

        return $r0;

     label2:
        $r1 = new org.apache.commons.httpclient.cookie.NetscapeDraftSpec;

        specialinvoke $r1.<org.apache.commons.httpclient.cookie.NetscapeDraftSpec: void <init>()>();

        return $r1;

     label3:
        $r2 = new org.apache.commons.httpclient.cookie.RFC2109Spec;

        specialinvoke $r2.<org.apache.commons.httpclient.cookie.RFC2109Spec: void <init>()>();

        return $r2;
    }
    public static void registerCookieSpec(java.lang.String, java.lang.Class)
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Map $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Class;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie spec class may not be null");

        throw $r2;

     label2:
        $r3 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return;
    }
    public static void setDefaultPolicy(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <org.apache.commons.httpclient.cookie.CookiePolicy: int defaultPolicy> = $i0;

        return;
    }
    public static void unregisterCookieSpec(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r1;
        java.util.Map $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r1;

     label1:
        $r2 = <org.apache.commons.httpclient.cookie.CookiePolicy: java.util.Map SPECS>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        return;
    }
