org.apache.commons.httpclient.cookie.RFC2965Spec extends org.apache.commons.httpclient.cookie.CookieSpecBase implements org.apache.commons.httpclient.cookie.CookieVersionSupport
private static final java.util.Comparator PATH_COMPOARATOR
public static final java.lang.String SET_COOKIE2_KEY
private final java.util.List attribHandlerList
private final java.util.Map attribHandlerMap
private final org.apache.commons.httpclient.util.ParameterFormatter formatter
private final org.apache.commons.httpclient.cookie.CookieSpec rfc2109
    static void <clinit>()
    {
        org.apache.commons.httpclient.cookie.CookiePathComparator $r0;

        $r0 = new org.apache.commons.httpclient.cookie.CookiePathComparator;

        specialinvoke $r0.<org.apache.commons.httpclient.cookie.CookiePathComparator: void <init>()>();

        <org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Comparator PATH_COMPOARATOR> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        org.apache.commons.httpclient.util.ParameterFormatter $r1;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        org.apache.commons.httpclient.cookie.RFC2109Spec $r4;
        org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PathAttributeHandler $r5;
        org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2DomainAttributeHandler $r6;
        org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PortAttributeHandler $r7;
        org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2MaxageAttributeHandler $r8;
        org.apache.commons.httpclient.cookie.RFC2965Spec$CookieSecureAttributeHandler $r9;
        org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentAttributeHandler $r10;
        org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentUrlAttributeHandler $r11;
        org.apache.commons.httpclient.cookie.RFC2965Spec$CookieDiscardAttributeHandler $r12;
        org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2VersionAttributeHandler $r13;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        specialinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: void <init>()>();

        $r1 = new org.apache.commons.httpclient.util.ParameterFormatter;

        specialinvoke $r1.<org.apache.commons.httpclient.util.ParameterFormatter: void <init>()>();

        r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter> = $r1;

        $r1 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        virtualinvoke $r1.<org.apache.commons.httpclient.util.ParameterFormatter: void setAlwaysUseQuotes(boolean)>(1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(10);

        r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Map attribHandlerMap> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.List attribHandlerList> = $r3;

        $r4 = new org.apache.commons.httpclient.cookie.RFC2109Spec;

        specialinvoke $r4.<org.apache.commons.httpclient.cookie.RFC2109Spec: void <init>()>();

        r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109> = $r4;

        $r5 = new org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PathAttributeHandler;

        specialinvoke $r5.<org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PathAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("path", $r5);

        $r6 = new org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2DomainAttributeHandler;

        specialinvoke $r6.<org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2DomainAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("domain", $r6);

        $r7 = new org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PortAttributeHandler;

        specialinvoke $r7.<org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PortAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("port", $r7);

        $r8 = new org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2MaxageAttributeHandler;

        specialinvoke $r8.<org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2MaxageAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("max-age", $r8);

        $r9 = new org.apache.commons.httpclient.cookie.RFC2965Spec$CookieSecureAttributeHandler;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.RFC2965Spec$CookieSecureAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("secure", $r9);

        $r10 = new org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentAttributeHandler;

        specialinvoke $r10.<org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("comment", $r10);

        $r11 = new org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentUrlAttributeHandler;

        specialinvoke $r11.<org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentUrlAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("commenturl", $r11);

        $r12 = new org.apache.commons.httpclient.cookie.RFC2965Spec$CookieDiscardAttributeHandler;

        specialinvoke $r12.<org.apache.commons.httpclient.cookie.RFC2965Spec$CookieDiscardAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("discard", $r12);

        $r13 = new org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2VersionAttributeHandler;

        specialinvoke $r13.<org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2VersionAttributeHandler: void <init>(org.apache.commons.httpclient.cookie.RFC2965Spec,org.apache.commons.httpclient.cookie.RFC2965Spec$1)>(r0, null);

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler)>("version", $r13);

        return;
    }
    static boolean access$1000(org.apache.commons.httpclient.cookie.RFC2965Spec, int, int[])
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec $r0;
        int $i0;
        int[] $r1;
        boolean $z0;

        $r0 := @parameter0: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $z0 = specialinvoke $r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: boolean portMatch(int,int[])>($i0, $r1);

        return $z0;
    }
    static int[] access$900(org.apache.commons.httpclient.cookie.RFC2965Spec, java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec $r0;
        java.lang.String $r1;
        int[] $r2;

        $r0 := @parameter0: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: int[] parsePortAttribute(java.lang.String)>($r1);

        return $r2;
    }
    private java.lang.String createPortAttribute(int[])
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        int[] $r1;
        int i0, i1, $i2;
        java.lang.StringBuffer r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: int[];

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

        i0 = lengthof $r1;

     label1:
        if i1 >= i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        $i2 = $r1[i1];

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
    private void doFormatCookie2(org.apache.commons.httpclient.cookie.Cookie2, java.lang.StringBuffer)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        org.apache.commons.httpclient.cookie.Cookie2 $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, $r4, r5;
        org.apache.commons.httpclient.util.ParameterFormatter $r6;
        org.apache.commons.httpclient.NameValuePair $r7;
        boolean $z0;
        int[] $r8;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.commons.httpclient.cookie.Cookie2;

        $r2 := @parameter1: java.lang.StringBuffer;

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getValue()>();

        r5 = $r4;

        if $r4 != null goto label1;

        r5 = "";

     label1:
        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r7 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r7.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>($r3, r5);

        virtualinvoke $r6.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>($r2, $r7);

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getDomain()>();

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: boolean isDomainAttributeSpecified()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r7 = new org.apache.commons.httpclient.NameValuePair;

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getDomain()>();

        specialinvoke $r7.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Domain", $r3);

        virtualinvoke $r6.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>($r2, $r7);

     label2:
        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getPath()>();

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: boolean isPathAttributeSpecified()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r7 = new org.apache.commons.httpclient.NameValuePair;

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: java.lang.String getPath()>();

        specialinvoke $r7.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Path", $r3);

        virtualinvoke $r6.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>($r2, $r7);

     label3:
        $z0 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: boolean isPortAttributeSpecified()>();

        if $z0 == 0 goto label5;

        $r3 = "";

        $z0 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: boolean isPortAttributeBlank()>();

        if $z0 != 0 goto label4;

        $r8 = virtualinvoke $r1.<org.apache.commons.httpclient.cookie.Cookie2: int[] getPorts()>();

        $r3 = specialinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.lang.String createPortAttribute(int[])>($r8);

     label4:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r7 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r7.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Port", $r3);

        virtualinvoke $r6.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>($r2, $r7);

     label5:
        return;
    }
    private static java.lang.String getEffectiveHost(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;
        java.lang.StringBuffer $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(46);

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".local");

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label1:
        return $r1;
    }
    private int[] parsePortAttribute(java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        int[] r3;
        java.util.StringTokenizer r4;
        int $i0, $i1;
        boolean $z0;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r5;
        java.lang.StringBuffer $r6;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        r4 = new java.util.StringTokenizer;

        specialinvoke r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ",");

        $i0 = virtualinvoke r4.<java.util.StringTokenizer: int countTokens()>();

        r3 = newarray (int)[$i0];

        $i0 = 0;

     label1:
        $z0 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

     label2:
        if $z0 == 0 goto label9;

     label3:
        $r1 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label4:
        r3[$i0] = $i1;

        $i1 = r3[$i0];

        if $i1 >= 0 goto label8;

        $r5 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

     label5:
        specialinvoke $r5.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid Port attribute.");

     label6:
        throw $r5;

     label7:
        r2 := @caughtexception;

        $r5 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid Port attribute: ");

        $r1 = virtualinvoke r2.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label8:
        $i0 = $i0 + 1;

        goto label1;

     label9:
        return r3;

        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }
    private boolean portMatch(int, int[])
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        int $i0, i1, $i2, i3;
        int[] $r1;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        i3 = 0;

        i1 = lengthof $r1;

     label1:
        if i3 >= i1 goto label3;

        $i2 = $r1[i3];

        if $i0 != $i2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    public boolean domainMatch(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    protected org.apache.commons.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler $r4;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Map attribHandlerMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (org.apache.commons.httpclient.cookie.CookieAttributeHandler) $r2;

        return $r4;
    }
    public java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        org.apache.commons.httpclient.Cookie $r1;
        java.lang.StringBuffer r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        org.apache.commons.httpclient.cookie.Cookie2 r5;
        int $i0;
        org.apache.commons.httpclient.util.ParameterFormatter $r6;
        org.apache.commons.httpclient.NameValuePair $r7;
        java.lang.String $r8;
        org.apache.commons.httpclient.cookie.CookieSpec $r9;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r3 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965Spec.formatCookie(Cookie)");

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;

     label1:
        $z0 = $r1 instanceof org.apache.commons.httpclient.cookie.Cookie2;

        if $z0 == 0 goto label2;

        r5 = (org.apache.commons.httpclient.cookie.Cookie2) $r1;

        $i0 = virtualinvoke r5.<org.apache.commons.httpclient.cookie.Cookie2: int getVersion()>();

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r7 = new org.apache.commons.httpclient.NameValuePair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r7.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Version", $r8);

        virtualinvoke $r6.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>(r2, $r7);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        specialinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void doFormatCookie2(org.apache.commons.httpclient.cookie.Cookie2,java.lang.StringBuffer)>(r5, r2);

        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label2:
        $r9 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109>;

        $r8 = interfaceinvoke $r9.<org.apache.commons.httpclient.cookie.CookieSpec: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>($r1);

        return $r8;
    }
    public java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[])
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        org.apache.commons.httpclient.Cookie[] $r1;
        java.lang.StringBuffer r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        boolean z0, $z1;
        int i0, i1, $i2;
        org.apache.commons.httpclient.Cookie r5;
        org.apache.commons.httpclient.cookie.CookieSpec $r6;
        java.lang.String $r7;
        java.util.Comparator $r8;
        org.apache.commons.httpclient.util.ParameterFormatter $r9;
        org.apache.commons.httpclient.NameValuePair $r10;
        org.apache.commons.httpclient.cookie.Cookie2 r11;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r3 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965Spec.formatCookieHeader(Cookie[])");

        if $r1 != null goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookies may not be null");

        throw $r4;

     label01:
        z0 = 0;

        i0 = -1;

        i1 = 0;

     label02:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label03;

        r5 = $r1[i1];

        $z1 = r5 instanceof org.apache.commons.httpclient.cookie.Cookie2;

        if $z1 != 0 goto label06;

        z0 = 1;

     label03:
        if i0 >= 0 goto label04;

        i0 = 0;

     label04:
        if z0 != 0 goto label05;

        if i0 >= 1 goto label08;

     label05:
        $r6 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.httpclient.cookie.CookieSpec: java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[])>($r1);

        return $r7;

     label06:
        $i2 = virtualinvoke r5.<org.apache.commons.httpclient.Cookie: int getVersion()>();

        if $i2 <= i0 goto label07;

        i0 = virtualinvoke r5.<org.apache.commons.httpclient.Cookie: int getVersion()>();

     label07:
        i1 = i1 + 1;

        goto label02;

     label08:
        $r8 = <org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Comparator PATH_COMPOARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r1, $r8);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r9 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.util.ParameterFormatter formatter>;

        $r10 = new org.apache.commons.httpclient.NameValuePair;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r10.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Version", $r7);

        virtualinvoke $r9.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>(r2, $r10);

        i1 = 0;

     label09:
        i0 = lengthof $r1;

        if i1 >= i0 goto label10;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        r5 = $r1[i1];

        r11 = (org.apache.commons.httpclient.cookie.Cookie2) r5;

        specialinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void doFormatCookie2(org.apache.commons.httpclient.cookie.Cookie2,java.lang.StringBuffer)>(r11, r2);

        i1 = i1 + 1;

        goto label09;

     label10:
        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
    protected org.apache.commons.httpclient.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1;
        java.lang.IllegalStateException $r2;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler $r3;
        java.lang.StringBuffer $r4;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Handler not registered for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" attribute.");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        return $r3;
    }
    protected java.util.Iterator getAttribHandlerIterator()
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r2 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.List attribHandlerList>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
    public int getVersion()
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        return 1;
    }
    public org.apache.commons.httpclient.Header getVersionHeader()
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.StringBuffer r1;
        org.apache.commons.httpclient.util.ParameterFormatter r2;
        org.apache.commons.httpclient.NameValuePair $r3;
        int $i0;
        java.lang.String $r4;
        org.apache.commons.httpclient.Header $r5;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        r2 = new org.apache.commons.httpclient.util.ParameterFormatter;

        specialinvoke r2.<org.apache.commons.httpclient.util.ParameterFormatter: void <init>()>();

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = new org.apache.commons.httpclient.NameValuePair;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: int getVersion()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r3.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>("$Version", $r4);

        virtualinvoke r2.<org.apache.commons.httpclient.util.ParameterFormatter: void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair)>(r1, $r3);

        $r5 = new org.apache.commons.httpclient.Header;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String,boolean)>("Cookie2", $r4, 1);

        return $r5;
    }
    public boolean match(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0, $z1;
        org.apache.commons.httpclient.Cookie $r3;
        org.apache.commons.httpclient.cookie.CookieOrigin r4;
        org.apache.commons.logging.Log $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler r9;
        org.apache.commons.httpclient.cookie.CookieSpec $r10;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r5 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965.match(String, int, String, boolean, Cookie");

        if $r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r6;

     label1:
        $z1 = $r3 instanceof org.apache.commons.httpclient.cookie.Cookie2;

        if $z1 == 0 goto label5;

        $z1 = virtualinvoke $r3.<org.apache.commons.httpclient.Cookie: boolean isPersistent()>();

        if $z1 == 0 goto label2;

        $z1 = virtualinvoke $r3.<org.apache.commons.httpclient.Cookie: boolean isExpired()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        r4 = new org.apache.commons.httpclient.cookie.CookieOrigin;

        $r1 = staticinvoke <org.apache.commons.httpclient.cookie.RFC2965Spec: java.lang.String getEffectiveHost(java.lang.String)>($r1);

        specialinvoke r4.<org.apache.commons.httpclient.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r1, $i0, $r2, $z0);

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Iterator getAttribHandlerIterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.commons.httpclient.cookie.CookieAttributeHandler) $r8;

        $z0 = interfaceinvoke r9.<org.apache.commons.httpclient.cookie.CookieAttributeHandler: boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin)>($r3, r4);

        if $z0 != 0 goto label3;

        return 0;

     label4:
        return 1;

     label5:
        $r10 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109>;

        $z0 = interfaceinvoke $r10.<org.apache.commons.httpclient.cookie.CookieSpec: boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie)>($r1, $i0, $r2, $z0, $r3);

        return $z0;
    }
    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        int $i0, i1, $i2;
        boolean $z0;
        java.lang.String $r1, $r8, $r9, $r11;
        int[] $r2;
        java.util.HashMap r3;
        java.util.LinkedList r4;
        java.lang.IllegalArgumentException r5;
        org.apache.commons.httpclient.HeaderElement r6;
        org.apache.commons.httpclient.NameValuePair r7;
        org.apache.commons.logging.Log $r10;
        java.lang.StringBuffer $r12;
        char[] $r13;
        org.apache.commons.httpclient.HeaderElement[] $r14;
        org.apache.commons.httpclient.cookie.Cookie2 r15;
        org.apache.commons.httpclient.NameValuePair[] $r16;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r17;
        java.util.Set $r18;
        java.util.Iterator $r19;
        java.lang.Object $r20;
        java.util.Map$Entry r21;
        org.apache.commons.httpclient.Cookie[] $r22;
        java.lang.Object[] $r23;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r8 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r9 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: java.lang.String;

        $r10 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965Spec.parse(String, int, String, boolean, String)");

        if $r8 != null goto label01;

        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw r5;

     label01:
        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw r5;

     label02:
        if $i0 >= 0 goto label03;

        r5 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r5;

     label03:
        if $r9 != null goto label04;

        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw r5;

     label04:
        if $r1 != null goto label05;

        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw r5;

     label05:
        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label06;

        $r9 = "/";

     label06:
        $r8 = staticinvoke <org.apache.commons.httpclient.cookie.RFC2965Spec: java.lang.String getEffectiveHost(java.lang.String)>($r8);

        $r13 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r14 = staticinvoke <org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.HeaderElement[] parseElements(char[])>($r13);

        r4 = new java.util.LinkedList;

        specialinvoke r4.<java.util.LinkedList: void <init>()>();

        i1 = 0;

     label07:
        $i2 = lengthof $r14;

        if i1 >= $i2 goto label17;

        r6 = $r14[i1];

        r15 = new org.apache.commons.httpclient.cookie.Cookie2;

     label08:
        $r1 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: java.lang.String getName()>();

        $r11 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: java.lang.String getValue()>();

     label09:
        $r2 = newarray (int)[1];

        $r2[0] = $i0;

     label10:
        specialinvoke r15.<org.apache.commons.httpclient.cookie.Cookie2: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean,int[])>($r8, $r1, $r11, $r9, null, 0, $r2);

     label11:
        $r16 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] getParameters()>();

        if $r16 == null goto label16;

        r3 = new java.util.HashMap;

        $i2 = lengthof $r16;

        specialinvoke r3.<java.util.HashMap: void <init>(int)>($i2);

        $i2 = lengthof $r16;

        $i2 = $i2 + -1;

     label12:
        if $i2 < 0 goto label14;

        r7 = $r16[$i2];

        $r1 = virtualinvoke r7.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r7);

        $i2 = $i2 + -1;

        goto label12;

     label13:
        r5 := @caughtexception;

        $r17 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r8 = virtualinvoke r5.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r17.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r8);

        throw $r17;

     label14:
        $r18 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r20 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (org.apache.commons.httpclient.NameValuePair) $r20;

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie)>(r7, r15);

        goto label15;

     label16:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r15);

        i1 = i1 + 1;

        goto label07;

     label17:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r22 = newarray (org.apache.commons.httpclient.Cookie)[$i0];

        $r23 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        $r22 = (org.apache.commons.httpclient.Cookie[]) $r23;

        return $r22;

        catch java.lang.IllegalArgumentException from label08 to label09 with label13;
        catch java.lang.IllegalArgumentException from label10 to label11 with label13;
    }
    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1, $r2, $r6;
        int $i0;
        boolean $z0, $z1;
        org.apache.commons.httpclient.Header $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.commons.httpclient.Cookie[] $r7;
        org.apache.commons.httpclient.cookie.CookieSpec $r8;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r9;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: org.apache.commons.httpclient.Header;

        $r4 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965.parse(String, int, String, boolean, Header)");

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw $r5;

     label1:
        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        if $r6 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header name may not be null.");

        throw $r5;

     label2:
        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("set-cookie2");

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String)>($r1, $i0, $r2, $z0, $r6);

        return $r7;

     label3:
        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("set-cookie");

        if $z1 == 0 goto label4;

        $r8 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109>;

        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r7 = interfaceinvoke $r8.<org.apache.commons.httpclient.cookie.CookieSpec: org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String)>($r1, $i0, $r2, $z0, $r6);

        return $r7;

     label4:
        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Header name is not valid. RFC 2965 supports \"set-cookie\" and \"set-cookie2\" headers.");

        throw $r9;
    }
    public void parseAttribute(org.apache.commons.httpclient.NameValuePair, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        org.apache.commons.httpclient.NameValuePair $r1;
        org.apache.commons.httpclient.Cookie $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r5;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler $r6;
        org.apache.commons.logging.Log $r7;
        boolean $z0;
        java.lang.StringBuffer $r8;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: org.apache.commons.httpclient.NameValuePair;

        $r2 := @parameter1: org.apache.commons.httpclient.Cookie;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute may not be null.");

        throw $r3;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        if $r4 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute Name may not be null.");

        throw $r3;

     label2:
        if $r2 != null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null.");

        throw $r3;

     label3:
        $r4 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String getValue()>();

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r4);

        if $r6 != null goto label4;

        $r7 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label5;

        $r7 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized cookie attribute: ");

        $r4 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

        return;

     label4:
        interfaceinvoke $r6.<org.apache.commons.httpclient.cookie.CookieAttributeHandler: void parse(org.apache.commons.httpclient.Cookie,java.lang.String)>($r2, $r5);

     label5:
        return;
    }
    protected void registerAttribHandler(java.lang.String, org.apache.commons.httpclient.cookie.CookieAttributeHandler)
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r4;
        java.util.Map $r5;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.commons.httpclient.cookie.CookieAttributeHandler;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute name may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute handler may not be null");

        throw $r3;

     label2:
        $r4 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.List attribHandlerList>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.List attribHandlerList>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

     label3:
        $r5 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Map attribHandlerMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    public void validate(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.RFC2965Spec r0;
        java.lang.String $r1, $r2, $r6;
        int $i0, $i1;
        boolean $z0, $z1;
        org.apache.commons.httpclient.Cookie $r3;
        org.apache.commons.httpclient.cookie.CookieOrigin r4;
        org.apache.commons.logging.Log $r5;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        org.apache.commons.httpclient.cookie.CookieAttributeHandler r10;
        org.apache.commons.httpclient.cookie.CookieSpec $r11;

        r0 := @this: org.apache.commons.httpclient.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r5 = <org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter RFC2965Spec.validate(String, int, String, boolean, Cookie)");

        $z1 = $r3 instanceof org.apache.commons.httpclient.cookie.Cookie2;

        if $z1 == 0 goto label4;

        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(32);

        if $i1 == -1 goto label1;

        $r7 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r7.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not contain blanks");

        throw $r7;

     label1:
        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z1 == 0 goto label2;

        $r7 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r7.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not start with $");

        throw $r7;

     label2:
        r4 = new org.apache.commons.httpclient.cookie.CookieOrigin;

        $r1 = staticinvoke <org.apache.commons.httpclient.cookie.RFC2965Spec: java.lang.String getEffectiveHost(java.lang.String)>($r1);

        specialinvoke r4.<org.apache.commons.httpclient.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r1, $i0, $r2, $z0);

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: java.util.Iterator getAttribHandlerIterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.commons.httpclient.cookie.CookieAttributeHandler) $r9;

        interfaceinvoke r10.<org.apache.commons.httpclient.cookie.CookieAttributeHandler: void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin)>($r3, r4);

        goto label3;

     label4:
        $r11 = r0.<org.apache.commons.httpclient.cookie.RFC2965Spec: org.apache.commons.httpclient.cookie.CookieSpec rfc2109>;

        interfaceinvoke $r11.<org.apache.commons.httpclient.cookie.CookieSpec: void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie)>($r1, $i0, $r2, $z0, $r3);

     label5:
        return;
    }
