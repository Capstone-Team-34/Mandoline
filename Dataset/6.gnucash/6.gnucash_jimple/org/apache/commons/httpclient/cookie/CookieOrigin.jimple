org.apache.commons.httpclient.cookie.CookieOrigin extends java.lang.Object
private final java.lang.String host
private final java.lang.String path
private final int port
private final boolean secure
    public void <init>(java.lang.String, int, java.lang.String, boolean)
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        java.lang.String $r1, $r2, $r4;
        int $i0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuffer $r5;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r3;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r3;

     label2:
        if $i0 >= 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label3:
        if $r2 != null goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r3;

     label4:
        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String host> = $r1;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: int port> = $i0;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String path> = $r2;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: boolean secure> = $z0;

        return;
    }
    public java.lang.String getHost()
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        r1 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String host>;

        return r1;
    }
    public java.lang.String getPath()
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        r1 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String path>;

        return r1;
    }
    public int getPort()
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        int i0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        i0 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: int port>;

        return i0;
    }
    public boolean isSecure()
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        z0 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: boolean secure>;

        return z0;
    }
