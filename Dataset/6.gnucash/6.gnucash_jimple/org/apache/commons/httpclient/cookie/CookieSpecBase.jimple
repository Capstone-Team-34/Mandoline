org.apache.commons.httpclient.cookie.CookieSpecBase extends java.lang.Object implements org.apache.commons.httpclient.cookie.CookieSpec
protected static final org.apache.commons.logging.Log LOG
static java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec
private java.util.Collection datepatterns
    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        org.apache.commons.logging.Log $r2;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.CookieSpec");

        $r1 = $r0;

        <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec> = $r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG> = $r2;

        return;

     label2:
        $r1 = <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec>;

        goto label1;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns> = null;

        return;
    }
    private static void addInPathOrder(java.util.List, org.apache.commons.httpclient.Cookie)
    {
        java.util.List $r0;
        org.apache.commons.httpclient.Cookie $r1, r3;
        int i0, $i1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: org.apache.commons.httpclient.Cookie;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (org.apache.commons.httpclient.Cookie) $r2;

        $i1 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: int compare(java.lang.Object,java.lang.Object)>($r1, r3);

        if $i1 <= 0 goto label3;

     label2:
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(i0, $r1);

        return;

     label3:
        i0 = i0 + 1;

        goto label1;
    }
    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    public boolean domainMatch(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuffer $r3;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        org.apache.commons.httpclient.Cookie $r1;
        java.lang.StringBuffer r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r3 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookie(Cookie)");

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;

     label1:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r5 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getValue()>();

        if $r5 == null goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label2:
        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
    public org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        org.apache.commons.httpclient.Cookie $r1;
        java.lang.String $r2;
        org.apache.commons.logging.Log $r3;
        org.apache.commons.httpclient.Header $r4;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r3 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookieHeader(Cookie)");

        $r4 = new org.apache.commons.httpclient.Header;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>($r1);

        specialinvoke $r4.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>("Cookie", $r2);

        return $r4;
    }
    public org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[])
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        org.apache.commons.httpclient.Cookie[] $r1;
        java.lang.String $r2;
        org.apache.commons.logging.Log $r3;
        org.apache.commons.httpclient.Header $r4;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r3 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookieHeader(Cookie[])");

        $r4 = new org.apache.commons.httpclient.Header;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[])>($r1);

        specialinvoke $r4.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>("Cookie", $r2);

        return $r4;
    }
    public java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        org.apache.commons.httpclient.Cookie[] $r1;
        java.lang.StringBuffer r2;
        org.apache.commons.logging.Log $r3;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1;
        org.apache.commons.httpclient.Cookie $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r3 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookies(Cookie[])");

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie array may not be null");

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie array may not be empty");

        throw $r4;

     label2:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        if $i0 <= 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

     label4:
        $r5 = $r1[$i0];

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>($r5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = $i0 + 1;

        goto label3;

     label5:
        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
    public java.util.Collection getValidDateFormats()
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r1 = r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

        return r1;
    }
    public boolean match(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        int $i0;
        boolean $z0, $z1;
        org.apache.commons.httpclient.Cookie $r1;
        java.lang.String $r2, $r3, $r6;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r7;
        java.util.Date $r8, $r9;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r4 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.match(String, int, String, boolean, Cookie");

        if $r2 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r5;

     label01:
        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label02;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r5;

     label02:
        if $i0 >= 0 goto label03;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label03:
        if $r3 != null goto label04;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r5;

     label04:
        if $r1 != null goto label05;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r5;

     label05:
        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label06;

        $r3 = "/";

     label06:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        if $r6 != null goto label07;

        $r4 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Invalid cookie state: domain not specified");

        return 0;

     label07:
        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r6 != null goto label08;

        $r4 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Invalid cookie state: path not specified");

        return 0;

     label08:
        $r8 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.util.Date getExpiryDate()>();

        if $r8 == null goto label09;

        $r8 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.util.Date getExpiryDate()>();

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        $z1 = virtualinvoke $r8.<java.util.Date: boolean after(java.util.Date)>($r9);

        if $z1 == 0 goto label11;

     label09:
        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean domainMatch(java.lang.String,java.lang.String)>($r2, $r6);

        if $z1 == 0 goto label11;

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean pathMatch(java.lang.String,java.lang.String)>($r3, $r2);

        if $z1 == 0 goto label11;

        $z1 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: boolean getSecure()>();

        if $z1 == 0 goto label10;

        if $z0 == 0 goto label11;

     label10:
        return 1;

     label11:
        return 0;
    }
    public org.apache.commons.httpclient.Cookie[] match(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie[])
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.lang.String $r1, $r2;
        int $i0, i1, $i2;
        boolean $z0, $z1;
        org.apache.commons.httpclient.Cookie[] $r3;
        org.apache.commons.httpclient.Cookie $r4;
        java.util.LinkedList r5;
        org.apache.commons.logging.Log $r6;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: org.apache.commons.httpclient.Cookie[];

        $r6 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.match(String, int, String, boolean, Cookie[])");

        if $r3 != null goto label1;

        return null;

     label1:
        r5 = new java.util.LinkedList;

        specialinvoke r5.<java.util.LinkedList: void <init>()>();

        i1 = 0;

     label2:
        $i2 = lengthof $r3;

        if i1 >= $i2 goto label4;

        $r4 = $r3[i1];

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie)>($r1, $i0, $r2, $z0, $r4);

        if $z1 == 0 goto label3;

        $r4 = $r3[i1];

        staticinvoke <org.apache.commons.httpclient.cookie.CookieSpecBase: void addInPathOrder(java.util.List,org.apache.commons.httpclient.Cookie)>(r5, $r4);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $r3 = newarray (org.apache.commons.httpclient.Cookie)[$i0];

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (org.apache.commons.httpclient.Cookie[]) $r7;

        return $r3;
    }
    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        int $i0, i1, i2;
        boolean $z0;
        java.lang.String $r1, $r5, $r6, $r8;
        org.apache.commons.httpclient.Cookie[] r2;
        java.lang.IllegalArgumentException r3;
        org.apache.commons.httpclient.HeaderElement r4;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r9;
        java.util.Collection $r10;
        org.apache.commons.httpclient.HeaderElement[] r11;
        char[] $r12;
        org.apache.commons.httpclient.Cookie r13;
        org.apache.commons.httpclient.NameValuePair[] $r14;
        org.apache.commons.httpclient.NameValuePair $r15;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r16;
        org.apache.commons.httpclient.util.DateParseException $r17;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r5 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r6 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: java.lang.String;

        $r7 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.parse(String, port, path, boolean, Header)");

        if $r5 != null goto label01;

        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw r3;

     label01:
        $r8 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw r3;

     label02:
        if $i0 >= 0 goto label03;

        r3 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r3;

     label03:
        if $r6 != null goto label04;

        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw r3;

     label04:
        if $r1 != null goto label05;

        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw r3;

     label05:
        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label06;

        $r6 = "/";

     label06:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = $r6;

        $i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        i1 = $i0;

        if $i0 < 0 goto label08;

        if $i0 != 0 goto label07;

        i1 = 1;

     label07:
        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label08:
        $z0 = 0;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("expires=");

        if $i0 == -1 goto label13;

        $r6 = "expires=";

        i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + i1;

        i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(";", $i0);

        i2 = i1;

        if i1 != -1 goto label09;

        i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label09:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, i2);

     label10:
        $r10 = r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

     label11:
        staticinvoke <org.apache.commons.httpclient.util.DateUtil: java.util.Date parseDate(java.lang.String,java.util.Collection)>($r6, $r10);

     label12:
        $z0 = 1;

     label13:
        if $z0 == 0 goto label19;

        r11 = newarray (org.apache.commons.httpclient.HeaderElement)[1];

        r4 = new org.apache.commons.httpclient.HeaderElement;

        $r12 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke r4.<org.apache.commons.httpclient.HeaderElement: void <init>(char[])>($r12);

        r11[0] = r4;

     label14:
        $i0 = lengthof r11;

        r2 = newarray (org.apache.commons.httpclient.Cookie)[$i0];

        $i0 = 0;

     label15:
        i1 = lengthof r11;

        if $i0 >= i1 goto label22;

        r4 = r11[$i0];

        r13 = new org.apache.commons.httpclient.Cookie;

     label16:
        $r6 = virtualinvoke r4.<org.apache.commons.httpclient.HeaderElement: java.lang.String getName()>();

        $r1 = virtualinvoke r4.<org.apache.commons.httpclient.HeaderElement: java.lang.String getValue()>();

        specialinvoke r13.<org.apache.commons.httpclient.Cookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean)>($r5, $r6, $r1, $r8, null, 0);

     label17:
        $r14 = virtualinvoke r4.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] getParameters()>();

        if $r14 == null goto label21;

        i1 = 0;

     label18:
        i2 = lengthof $r14;

        if i1 >= i2 goto label21;

        $r15 = $r14[i1];

        virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie)>($r15, r13);

        i1 = i1 + 1;

        goto label18;

     label19:
        $r12 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r11 = staticinvoke <org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.HeaderElement[] parseElements(char[])>($r12);

        goto label14;

     label20:
        r3 := @caughtexception;

        $r16 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r5 = virtualinvoke r3.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r16.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r5);

        throw $r16;

     label21:
        r2[$i0] = r13;

        $i0 = $i0 + 1;

        goto label15;

     label22:
        return r2;

     label23:
        $r17 := @caughtexception;

        goto label13;

        catch org.apache.commons.httpclient.util.DateParseException from label09 to label10 with label23;
        catch org.apache.commons.httpclient.util.DateParseException from label11 to label12 with label23;
        catch java.lang.IllegalArgumentException from label16 to label17 with label20;
    }
    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.lang.String $r1, $r2, $r6;
        int $i0;
        boolean $z0;
        org.apache.commons.httpclient.Header $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.commons.httpclient.Cookie[] $r7;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: org.apache.commons.httpclient.Header;

        $r4 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.parse(String, port, path, boolean, String)");

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw $r5;

     label1:
        $r6 = virtualinvoke $r3.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r7 = virtualinvoke r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String)>($r1, $i0, $r2, $z0, $r6);

        return $r7;
    }
    public void parseAttribute(org.apache.commons.httpclient.NameValuePair, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        org.apache.commons.httpclient.NameValuePair $r1;
        org.apache.commons.httpclient.Cookie $r2;
        org.apache.commons.httpclient.util.DateParseException r3;
        java.lang.NumberFormatException r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, $r7, r8;
        boolean $z0;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r9;
        int $i0;
        java.util.Date $r10;
        long $l1, $l2;
        java.lang.StringBuffer $r11;
        java.util.Collection $r12;
        org.apache.commons.logging.Log $r13;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: org.apache.commons.httpclient.NameValuePair;

        $r2 := @parameter1: org.apache.commons.httpclient.Cookie;

        if $r1 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute may not be null.");

        throw $r5;

     label01:
        if $r2 != null goto label02;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null.");

        throw $r5;

     label02:
        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String getValue()>();

        r8 = $r6;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("path");

        if $z0 == 0 goto label05;

        if $r6 == null goto label03;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label04;

     label03:
        r8 = "/";

     label04:
        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setPath(java.lang.String)>(r8);

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setPathAttributeSpecified(boolean)>(1);

        return;

     label05:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("domain");

        if $z0 == 0 goto label08;

        if $r6 != null goto label06;

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for domain attribute");

        throw $r9;

     label06:
        r8 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label07;

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for domain attribute");

        throw $r9;

     label07:
        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setDomain(java.lang.String)>($r6);

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setDomainAttributeSpecified(boolean)>(1);

        return;

     label08:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("max-age");

        if $z0 == 0 goto label12;

        if $r6 != null goto label09;

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for max-age attribute");

        throw $r9;

     label09:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label10:
        $r10 = new java.util.Date;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = (long) $i0;

        $l2 = $l2 * 1000L;

        $l1 = $l1 + $l2;

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l1);

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>($r10);

        return;

     label11:
        r4 := @caughtexception;

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid max-age attribute: ");

        $r6 = virtualinvoke r4.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r6);

        throw $r9;

     label12:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("secure");

        if $z0 == 0 goto label13;

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setSecure(boolean)>(1);

        return;

     label13:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("comment");

        if $z0 == 0 goto label14;

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setComment(java.lang.String)>($r6);

        return;

     label14:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("expires");

        if $z0 == 0 goto label19;

        if $r6 != null goto label15;

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for expires attribute");

        throw $r9;

     label15:
        $r12 = r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

     label16:
        $r10 = staticinvoke <org.apache.commons.httpclient.util.DateUtil: java.util.Date parseDate(java.lang.String,java.util.Collection)>($r6, $r12);

        virtualinvoke $r2.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>($r10);

     label17:
        return;

     label18:
        r3 := @caughtexception;

        $r13 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error parsing cookie date", r3);

        $r9 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse expiration date parameter: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r6);

        throw $r9;

     label19:
        $r13 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label20;

        $r13 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized cookie attribute: ");

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.NameValuePair: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

     label20:
        return;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch org.apache.commons.httpclient.util.DateParseException from label16 to label17 with label18;
    }
    public boolean pathMatch(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        char $c2, $c3;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == $i1 goto label2;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c3 = <org.apache.commons.httpclient.cookie.CookieSpec: char PATH_DELIM_CHAR>;

        if $c2 != $c3 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return $z0;
    }
    public void setValidDateFormats(java.util.Collection)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 := @parameter0: java.util.Collection;

        r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns> = $r1;

        return;
    }
    public void validate(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        int $i0;
        boolean $z0;
        org.apache.commons.httpclient.Cookie $r1;
        java.lang.String $r2, $r3, $r6, r9;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r7;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r8;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r4 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.validate(String, port, path, boolean, Cookie)");

        if $r2 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r5;

     label01:
        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r5;

     label02:
        if $i0 >= 0 goto label03;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label03:
        if $r3 != null goto label04;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r5;

     label04:
        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label05;

        $r3 = "/";

     label05:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: int getVersion()>();

        if $i0 >= 0 goto label06;

        $r8 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal version number ");

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getValue()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label06:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(".");

        if $i0 < 0 goto label08;

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z0 != 0 goto label09;

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        r9 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label07:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 != 0 goto label09;

        $r8 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal domain attribute \"");

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Domain of origin: \"");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label08:
        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label09;

        $r8 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal domain attribute \"");

        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Domain of origin: \"");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label09:
        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 != 0 goto label10;

        $r8 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal path attribute \"");

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Path of origin: \"");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label10:
        return;
    }
