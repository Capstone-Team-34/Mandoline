org.apache.commons.httpclient.util.URIUtil extends java.lang.Object
protected static final java.util.BitSet empty
    static void <clinit>()
    {
        java.util.BitSet $r0;

        $r0 = new java.util.BitSet;

        specialinvoke $r0.<java.util.BitSet: void <init>(int)>(1);

        <org.apache.commons.httpclient.util.URIUtil: java.util.BitSet empty> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.util.URIUtil r0;

        r0 := @this: org.apache.commons.httpclient.util.URIUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String decode(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0;
        org.apache.commons.codec.DecoderException r1;
        byte[] $r2;
        org.apache.commons.httpclient.URIException $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r0);

        $r2 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] decodeUrl(byte[])>($r2);

        $r0 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getString(byte[],java.lang.String)>($r2, $r0);

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        $r3 = new org.apache.commons.httpclient.URIException;

        $r0 = virtualinvoke r1.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch org.apache.commons.codec.DecoderException from label1 to label2 with label3;
    }
    public static java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        char[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil$Coder: java.lang.String decode(char[],java.lang.String)>($r2, $r1);

        return $r0;
    }
    public static java.lang.String encode(java.lang.String, java.util.BitSet) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r2;
        java.util.BitSet $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.BitSet;

        $r2 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r1, $r2);

        return $r0;
    }
    public static java.lang.String encode(java.lang.String, java.util.BitSet, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r2;
        java.util.BitSet $r1;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.BitSet;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>($r0, $r2);

        $r3 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] encodeUrl(java.util.BitSet,byte[])>($r1, $r3);

        $r0 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getAsciiString(byte[])>($r3);

        return $r0;
    }
    public static java.lang.String encodeAll(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeAll(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodeAll(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.util.URIUtil: java.util.BitSet empty>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String encodePath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePath(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodePath(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String encodePathQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePathQuery(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodePathQuery(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1, $r4;
        int $i0;
        java.util.BitSet $r2;
        java.lang.StringBuffer $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(63);

        if $i0 >= 0 goto label1;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r4 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r4, $r2, $r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    public static java.lang.String encodeQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeQuery(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodeQuery(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinAuthority(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinAuthority(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinAuthority(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinPath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinPath(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinPath(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String getDefaultProtocolCharset()>();

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinQuery(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }
    public static java.lang.String encodeWithinQuery(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String $r0, $r1;
        java.util.BitSet $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query>;

        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)>($r0, $r2, $r1);

        return $r0;
    }
    public static java.lang.String getFromPath(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if r0 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i2 < 0 goto label2;

        $i0 = $i2 + -1;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>("/", $i0);

        if $i0 < 0 goto label3;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i1);

        if $i1 >= 0 goto label4;

        if $i2 < 0 goto label5;

        return "/";

     label3:
        $i1 = $i2 + 2;

        goto label2;

     label4:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label5:
        return r0;
    }
    public static java.lang.String getName(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return $r0;

     label2:
        $r0 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String getPath(java.lang.String)>($r0);

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 < 0 goto label3;

        $i1 = $i1 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

     label3:
        return $r0;
    }
    public static java.lang.String getPath(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if r0 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i2 < 0 goto label2;

        $i0 = $i2 + -1;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>("/", $i0);

        if $i0 < 0 goto label5;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i1);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i1);

        if $i3 == -1 goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i1);

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

        if $i3 <= $i1 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

        if $i3 >= $i0 goto label4;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

     label4:
        if $i1 >= 0 goto label6;

        if $i2 < 0 goto label7;

        return "/";

     label5:
        $i1 = $i2 + 2;

        goto label2;

     label6:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

     label7:
        return r0;
    }
    public static java.lang.String getPathQuery(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if r0 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i2 < 0 goto label2;

        $i0 = $i2 + -1;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>("/", $i0);

        if $i0 < 0 goto label4;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i1);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

        if $i3 <= $i1 goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

     label3:
        if $i1 >= 0 goto label5;

        if $i2 < 0 goto label6;

        return "/";

     label4:
        $i1 = $i2 + 2;

        goto label2;

     label5:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

     label6:
        return r0;
    }
    public static java.lang.String getQuery(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 == null goto label8;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i2 < 0 goto label2;

        $i0 = $i2 + -1;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>("/", $i0);

        if $i0 < 0 goto label6;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i1);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("?", $i2);

        if $i2 < 0 goto label8;

        $i2 = $i2 + 1;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

        if $i0 <= $i2 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("#");

     label3:
        if $i2 < 0 goto label4;

        if $i2 != $i1 goto label7;

     label4:
        $r0 = null;

     label5:
        return $r0;

     label6:
        $i1 = $i2 + 2;

        goto label2;

     label7:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        goto label5;

     label8:
        return null;
    }
