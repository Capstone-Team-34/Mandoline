org.apache.commons.httpclient.util.ParameterParser extends java.lang.Object
private char[] chars
private int i1
private int i2
private int len
private int pos
    public void <init>()
    {
        org.apache.commons.httpclient.util.ParameterParser r0;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars> = null;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = 0;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int len> = 0;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i1> = 0;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = 0;

        return;
    }
    private java.lang.String getToken(boolean)
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        boolean $z0, $z1;
        int $i0, $i1, $i3;
        char[] $r1;
        char $c2;
        java.lang.String r2;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $z0 := @parameter0: boolean;

     label1:
        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        if $i1 >= $i0 goto label2;

        $r1 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $c2 = $r1[$i1];

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z1 == 0 goto label2;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i1> = $i1;

        goto label1;

     label2:
        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        if $i1 <= $i0 goto label3;

        $r1 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + -1;

        $c2 = $r1[$i1];

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z1 == 0 goto label3;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + -1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

        goto label2;

     label3:
        if $z0 == 0 goto label4;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i1 = $i1 - $i0;

        if $i1 < 2 goto label4;

        $r1 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $c2 = $r1[$i1];

        if $c2 != 34 goto label4;

        $r1 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + -1;

        $c2 = $r1[$i1];

        if $c2 != 34 goto label4;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i1> = $i1;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + -1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

     label4:
        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        if $i1 < $i0 goto label5;

        r2 = new java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i3 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i1>;

        $i0 = $i3 - $i0;

        specialinvoke r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i1, $i0);

        return r2;

     label5:
        return null;
    }
    private boolean hasChar()
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int len>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isOneOf(char, char[])
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        char $c0, $c3;
        char[] $r1;
        int i1, $i2;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $c0 := @parameter0: char;

        $r1 := @parameter1: char[];

        i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $c3 = $r1[i1];

        if $c0 != $c3 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    private java.lang.String parseQuotedToken(char[])
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        char[] $r1, $r2;
        char c0;
        int $i1;
        boolean z0, z1, $z2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $r1 := @parameter0: char[];

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i1> = $i1;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

        z0 = 0;

        z1 = 0;

     label1:
        $z2 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean hasChar()>();

        if $z2 == 0 goto label2;

        $r2 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        c0 = $r2[$i1];

        if z0 != 0 goto label3;

        $z2 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean isOneOf(char,char[])>(c0, $r1);

        if $z2 == 0 goto label3;

     label2:
        $r3 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.lang.String getToken(boolean)>(1);

        return $r3;

     label3:
        if z1 != 0 goto label4;

        if c0 != 34 goto label4;

        if z0 != 0 goto label6;

        z0 = 1;

     label4:
        if z1 != 0 goto label7;

        if c0 != 92 goto label7;

        z1 = 1;

     label5:
        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = $i1;

        goto label1;

     label6:
        z0 = 0;

        goto label4;

     label7:
        z1 = 0;

        goto label5;
    }
    private java.lang.String parseToken(char[])
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        char[] $r1, $r2;
        char c0;
        int $i1;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $r1 := @parameter0: char[];

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i1> = $i1;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean hasChar()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars>;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        c0 = $r2[$i1];

        $z0 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean isOneOf(char,char[])>(c0, $r1);

        if $z0 == 0 goto label3;

     label2:
        $r3 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.lang.String getToken(boolean)>(0);

        return $r3;

     label3:
        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int i2>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int i2> = $i1;

        $i1 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $i1 = $i1 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = $i1;

        goto label1;
    }
    public java.util.List parse(java.lang.String, char)
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        java.lang.String $r1;
        char $c0;
        java.util.ArrayList $r2;
        char[] $r3;
        java.util.List $r4;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.util.List parse(char[],char)>($r3, $c0);

        return $r4;
    }
    public java.util.List parse(char[], char)
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        char[] $r1;
        char $c0;
        int $i1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $r1 := @parameter0: char[];

        $c0 := @parameter1: char;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;

     label1:
        $i1 = lengthof $r1;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.util.List parse(char[],int,int,char)>($r1, 0, $i1, $c0);

        return $r2;
    }
    public java.util.List parse(char[], int, int, char)
    {
        org.apache.commons.httpclient.util.ParameterParser r0;
        char[] $r1, $r3;
        int $i0, $i1;
        char $c2, $c3;
        java.util.ArrayList r2;
        boolean $z0;
        java.lang.String $r4, r5;
        org.apache.commons.httpclient.NameValuePair $r6;

        r0 := @this: org.apache.commons.httpclient.util.ParameterParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $c2 := @parameter3: char;

        if $r1 != null goto label1;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        return r2;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.httpclient.util.ParameterParser: char[] chars> = $r1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = $i0;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int len> = $i1;

     label2:
        $z0 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean hasChar()>();

        if $z0 == 0 goto label6;

        $r3 = newarray (char)[2];

        $r3[0] = 61;

        $r3[1] = $c2;

        $r4 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.lang.String parseToken(char[])>($r3);

        r5 = null;

        $z0 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean hasChar()>();

        if $z0 == 0 goto label3;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $c3 = $r1[$i0];

        if $c3 != 61 goto label3;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $i0 = $i0 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = $i0;

        $r3 = newarray (char)[1];

        $r3[0] = $c2;

        r5 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: java.lang.String parseQuotedToken(char[])>($r3);

     label3:
        $z0 = specialinvoke r0.<org.apache.commons.httpclient.util.ParameterParser: boolean hasChar()>();

        if $z0 == 0 goto label4;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $c3 = $r1[$i0];

        if $c3 != $c2 goto label4;

        $i0 = r0.<org.apache.commons.httpclient.util.ParameterParser: int pos>;

        $i0 = $i0 + 1;

        r0.<org.apache.commons.httpclient.util.ParameterParser: int pos> = $i0;

     label4:
        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label5;

        if r5 == null goto label2;

     label5:
        $r6 = new org.apache.commons.httpclient.NameValuePair;

        specialinvoke $r6.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>($r4, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label6:
        return r2;
    }
