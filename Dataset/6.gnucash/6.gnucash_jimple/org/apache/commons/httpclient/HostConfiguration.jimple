org.apache.commons.httpclient.HostConfiguration extends java.lang.Object implements java.lang.Cloneable
public static final org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION
private org.apache.commons.httpclient.HttpHost host
private java.net.InetAddress localAddress
private org.apache.commons.httpclient.params.HostParams params
private org.apache.commons.httpclient.ProxyHost proxyHost
    static void <clinit>()
    {
        org.apache.commons.httpclient.HostConfiguration $r0;

        $r0 = new org.apache.commons.httpclient.HostConfiguration;

        specialinvoke $r0.<org.apache.commons.httpclient.HostConfiguration: void <init>()>();

        <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.params.HostParams $r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = null;

        $r1 = new org.apache.commons.httpclient.params.HostParams;

        specialinvoke $r1.<org.apache.commons.httpclient.params.HostParams: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r1;

        return;
    }
    public void <init>(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.HostConfiguration r0, $r1;
        org.apache.commons.httpclient.params.HostParams $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = null;

        $r2 = new org.apache.commons.httpclient.params.HostParams;

        specialinvoke $r2.<org.apache.commons.httpclient.params.HostParams: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r2;

        specialinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void init(org.apache.commons.httpclient.HostConfiguration)>($r1);

        return;
    }
    private void init(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.HostConfiguration r0, $r1;
        java.lang.CloneNotSupportedException r2;
        org.apache.commons.httpclient.HttpHost $r3;
        java.lang.Object $r4;
        org.apache.commons.httpclient.ProxyHost $r5;
        java.net.InetAddress $r6;
        org.apache.commons.httpclient.params.HostParams $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        entermonitor $r1;

     label01:
        $r3 = $r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r3 == null goto label13;

        $r3 = $r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

     label02:
        $r4 = virtualinvoke $r3.<org.apache.commons.httpclient.HttpHost: java.lang.Object clone()>();

     label03:
        $r3 = (org.apache.commons.httpclient.HttpHost) $r4;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r3;

     label04:
        $r5 = $r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r5 == null goto label19;

        $r5 = $r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

     label05:
        $r4 = virtualinvoke $r5.<org.apache.commons.httpclient.ProxyHost: java.lang.Object clone()>();

     label06:
        $r5 = (org.apache.commons.httpclient.ProxyHost) $r4;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = $r5;

     label07:
        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress getLocalAddress()>();

     label08:
        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = $r6;

     label09:
        $r7 = virtualinvoke $r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams getParams()>();

        $r4 = virtualinvoke $r7.<org.apache.commons.httpclient.params.HostParams: java.lang.Object clone()>();

     label10:
        $r7 = (org.apache.commons.httpclient.params.HostParams) $r4;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r7;

     label11:
        exitmonitor $r1;

     label12:
        return;

     label13:
        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

     label14:
        goto label04;

     label15:
        r2 := @caughtexception;

     label16:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host configuration could not be cloned");

        throw $r8;

     label17:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label18:
        throw $r9;

     label19:
        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

     label20:
        goto label07;

        catch java.lang.CloneNotSupportedException from label02 to label03 with label15;
        catch java.lang.CloneNotSupportedException from label05 to label06 with label15;
        catch java.lang.CloneNotSupportedException from label07 to label08 with label15;
        catch java.lang.CloneNotSupportedException from label09 to label10 with label15;
        catch java.lang.Throwable from label01 to label11 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label16 to label18 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
    }
    public java.lang.Object clone()
    {
        org.apache.commons.httpclient.HostConfiguration r0, r4;
        java.lang.CloneNotSupportedException r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r4 = (org.apache.commons.httpclient.HostConfiguration) $r3;

        specialinvoke r4.<org.apache.commons.httpclient.HostConfiguration: void init(org.apache.commons.httpclient.HostConfiguration)>(r0);

        return r4;

     label3:
        r1 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host configuration could not be cloned");

        throw $r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.HostConfiguration r0, $r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        org.apache.commons.httpclient.HttpHost $r3, $r4;
        org.apache.commons.httpclient.ProxyHost $r5, $r6;
        java.net.InetAddress $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        entermonitor r0;

     label1:
        $z1 = $r1 instanceof org.apache.commons.httpclient.HostConfiguration;

     label2:
        if $z1 == 0 goto label7;

        if $r1 != r0 goto label4;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $r2 = (org.apache.commons.httpclient.HostConfiguration) $r1;

        $r3 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r4 = $r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label6;

        $r5 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r6 = $r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label6;

        $r7 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $r8 = $r2.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);

     label5:
        if $z1 != 0 goto label3;

     label6:
        $z0 = 0;

        goto label3;

     label7:
        $z0 = 0;

        goto label3;

     label8:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
    public java.lang.String getHost()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.HttpHost $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r1 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: java.lang.String getHostName()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r1 = null;

        goto label2;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public java.lang.String getHostURL()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.HttpHost $r2;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 != null goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Host must be set to create a host URL");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r1 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: java.lang.String toURI()>();

     label4:
        exitmonitor r0;

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public java.net.InetAddress getLocalAddress()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.Throwable $r1;
        java.net.InetAddress r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        r2 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public org.apache.commons.httpclient.params.HostParams getParams()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.params.HostParams r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        return r1;
    }
    public int getPort()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0;
        org.apache.commons.httpclient.HttpHost $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label3;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpHost: int getPort()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $i0 = -1;

        goto label2;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public org.apache.commons.httpclient.protocol.Protocol getProtocol()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.protocol.Protocol $r1;
        org.apache.commons.httpclient.HttpHost $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r1 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r1 = null;

        goto label2;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public java.lang.String getProxyHost()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.ProxyHost $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r2 == null goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r1 = virtualinvoke $r2.<org.apache.commons.httpclient.ProxyHost: java.lang.String getHostName()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r1 = null;

        goto label2;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public int getProxyPort()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0;
        org.apache.commons.httpclient.ProxyHost $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r1 == null goto label3;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i0 = virtualinvoke $r1.<org.apache.commons.httpclient.ProxyHost: int getPort()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $i0 = -1;

        goto label2;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public java.lang.String getVirtualHost()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.params.HostParams $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        $r1 = virtualinvoke $r2.<org.apache.commons.httpclient.params.HostParams: java.lang.String getVirtualHost()>();

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int hashCode()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.HttpHost $r1;
        int $i0;
        org.apache.commons.httpclient.ProxyHost $r2;
        java.net.InetAddress $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r2);

        $r3 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r3);

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean hostEquals(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.HttpConnection $r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        org.apache.commons.httpclient.HttpHost $r4;
        java.lang.String $r5, $r6;
        int $i0, $i1;
        org.apache.commons.httpclient.protocol.Protocol $r7, $r8;
        java.net.InetAddress $r9, $r10;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        $z0 = 0;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r4 == null goto label5;

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r5 = virtualinvoke $r4.<org.apache.commons.httpclient.HttpHost: java.lang.String getHostName()>();

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: java.lang.String getHost()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

     label4:
        if $z1 != 0 goto label6;

     label5:
        exitmonitor r0;

        return $z0;

     label6:
        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = virtualinvoke $r4.<org.apache.commons.httpclient.HttpHost: int getPort()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: int getPort()>();

        if $i0 != $i1 goto label5;

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r7 = virtualinvoke $r4.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

        $r8 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

        $z1 = virtualinvoke $r7.<org.apache.commons.httpclient.protocol.Protocol: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label5;

        $r9 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        if $r9 == null goto label8;

        $r9 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $r10 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: java.net.InetAddress getLocalAddress()>();

        $z1 = virtualinvoke $r9.<java.net.InetAddress: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label5;

     label7:
        $z0 = 1;

        goto label5;

     label8:
        $r9 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: java.net.InetAddress getLocalAddress()>();

     label9:
        if $r9 == null goto label7;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label6 to label9 with label2;
    }
    public boolean isHostSet()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.HttpHost $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

     label2:
        if $r1 == null goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public boolean isProxySet()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.ProxyHost $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

     label2:
        if $r1 == null goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public boolean proxyEquals(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.HttpConnection $r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        org.apache.commons.httpclient.ProxyHost $r4;
        java.lang.String $r5, $r6;
        int $i0, $i1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        $z0 = 1;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r4 == null goto label7;

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r5 = virtualinvoke $r4.<org.apache.commons.httpclient.ProxyHost: java.lang.String getHostName()>();

        $r6 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: java.lang.String getProxyHost()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z1 == 0 goto label6;

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i0 = virtualinvoke $r4.<org.apache.commons.httpclient.ProxyHost: int getPort()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: int getProxyPort()>();

     label4:
        if $i0 != $i1 goto label6;

     label5:
        exitmonitor r0;

        return $z0;

     label6:
        $z0 = 0;

        goto label5;

     label7:
        $r5 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpConnection: java.lang.String getProxyHost()>();

     label8:
        if $r5 == null goto label5;

        $z0 = 0;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }
    public void setHost(java.lang.String)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        int $i0;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        $i0 = virtualinvoke $r2.<org.apache.commons.httpclient.protocol.Protocol: int getDefaultPort()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r1, $i0, $r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setHost(java.lang.String, int)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r1, $i0, $r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setHost(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1, $r2;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r3;
        org.apache.commons.httpclient.HttpHost $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = new org.apache.commons.httpclient.HttpHost;

        $r3 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>($r2);

        specialinvoke $r4.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r1, $i0, $r3);

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r4;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setHost(java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;
        org.apache.commons.httpclient.HttpHost $r5;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.commons.httpclient.protocol.Protocol;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("host must not be null");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        if $r2 != null goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocol must not be null");

        throw $r3;

     label5:
        $r5 = new org.apache.commons.httpclient.HttpHost;

        specialinvoke $r5.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r1, $i0, $r2);

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r5;

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label4 to label6 with label2;
    }
    public void setHost(java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1, $r2;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r3;
        org.apache.commons.httpclient.params.HostParams $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.apache.commons.httpclient.protocol.Protocol;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r1, $i0, $r3);

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        virtualinvoke $r4.<org.apache.commons.httpclient.params.HostParams: void setVirtualHost(java.lang.String)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setHost(org.apache.commons.httpclient.HttpHost)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.HttpHost $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpHost;

        entermonitor r0;

     label1:
        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setHost(org.apache.commons.httpclient.URI)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.URI $r1;
        org.apache.commons.httpclient.URIException r2;
        java.lang.String $r3, $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.URI;

        entermonitor r0;

     label1:
        $r3 = virtualinvoke $r1.<org.apache.commons.httpclient.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.httpclient.URI: int getPort()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.httpclient.URI: java.lang.String getScheme()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,java.lang.String)>($r3, $i0, $r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        r2 := @caughtexception;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.URIException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch org.apache.commons.httpclient.URIException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }
    public void setLocalAddress(java.net.InetAddress)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.net.InetAddress $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.net.InetAddress;

        entermonitor r0;

     label1:
        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setParams(org.apache.commons.httpclient.params.HostParams)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.params.HostParams $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.params.HostParams;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r1;

        return;
    }
    public void setProxy(java.lang.String, int)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r1;
        int $i0;
        org.apache.commons.httpclient.ProxyHost $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = new org.apache.commons.httpclient.ProxyHost;

        specialinvoke $r2.<org.apache.commons.httpclient.ProxyHost: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = $r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void setProxyHost(org.apache.commons.httpclient.ProxyHost)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.ProxyHost $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 := @parameter0: org.apache.commons.httpclient.ProxyHost;

        entermonitor r0;

     label1:
        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.StringBuffer r1, $r3;
        boolean z0;
        org.apache.commons.httpclient.HttpHost $r2;
        org.apache.commons.httpclient.ProxyHost $r4;
        java.net.InetAddress $r5;
        org.apache.commons.httpclient.params.HostParams $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

        z0 = 0;

     label01:
        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>(50);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HostConfiguration[");

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 == null goto label02;

        z0 = 1;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("host=");

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

     label02:
        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r4 == null goto label04;

        if z0 == 0 goto label09;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label03:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("proxyHost=");

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

     label04:
        $r5 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        if $r5 == null goto label07;

        if z0 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label05:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("localAddress=");

        $r5 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        if z0 == 0 goto label11;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label06:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("params=");

        $r6 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

     label07:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        exitmonitor r0;

        return $r7;

     label09:
        z0 = 1;

        goto label03;

     label10:
        z0 = 1;

        goto label05;

     label11:
        goto label06;

     label12:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.lang.Throwable from label01 to label08 with label12;
    }
