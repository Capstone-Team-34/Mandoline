org.apache.commons.httpclient.HeaderGroup extends java.lang.Object
private java.util.List headers
    public void <init>()
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers> = $r1;

        return;
    }
    public void addHeader(org.apache.commons.httpclient.Header)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: org.apache.commons.httpclient.Header;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void clear()
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    public boolean containsHeader(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.lang.String $r1, $r6;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.commons.httpclient.Header r5;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.httpclient.Header) $r4;

        $r6 = virtualinvoke r5.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public org.apache.commons.httpclient.Header[] getAllHeaders()
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.List $r1, $r2;
        int $i0;
        org.apache.commons.httpclient.Header[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (org.apache.commons.httpclient.Header)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (org.apache.commons.httpclient.Header[]) $r4;

        return $r3;
    }
    public org.apache.commons.httpclient.Header getCondensedHeader(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.lang.String $r1, $r6;
        java.lang.StringBuffer r2;
        org.apache.commons.httpclient.Header[] $r3;
        int $i0, $i1;
        org.apache.commons.httpclient.Header $r4, $r5;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: org.apache.commons.httpclient.Header[] getHeaders(java.lang.String)>($r1);

        $i0 = lengthof $r3;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i0 = lengthof $r3;

        if $i0 != 1 goto label2;

        $r4 = new org.apache.commons.httpclient.Header;

        $r5 = $r3[0];

        $r1 = virtualinvoke $r5.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $r5 = $r3[0];

        $r6 = virtualinvoke $r5.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        specialinvoke $r4.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>($r1, $r6);

        return $r4;

     label2:
        r2 = new java.lang.StringBuffer;

        $r4 = $r3[0];

        $r6 = virtualinvoke $r4.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        specialinvoke r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        $i0 = 1;

     label3:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r4 = $r3[$i0];

        $r6 = virtualinvoke $r4.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r4 = new org.apache.commons.httpclient.Header;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>($r1, $r6);

        return $r4;
    }
    public org.apache.commons.httpclient.Header getFirstHeader(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.lang.String $r1, $r6;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.commons.httpclient.Header r5;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.httpclient.Header) $r4;

        $r6 = virtualinvoke r5.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return r5;

     label2:
        return null;
    }
    public org.apache.commons.httpclient.Header[] getHeaders(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.lang.String $r1, $r7;
        java.util.ArrayList r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.commons.httpclient.Header r6;
        int $i0;
        org.apache.commons.httpclient.Header[] $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.httpclient.Header) $r5;

        $r7 = virtualinvoke r6.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r8 = newarray (org.apache.commons.httpclient.Header)[$i0];

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r8 = (org.apache.commons.httpclient.Header[]) $r9;

        return $r8;
    }
    public java.util.Iterator getIterator()
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
    public org.apache.commons.httpclient.Header getLastHeader(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.lang.String $r1, $r5;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.commons.httpclient.Header r4;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        r4 = (org.apache.commons.httpclient.Header) $r3;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }
    public void removeHeader(org.apache.commons.httpclient.Header)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header $r1;
        java.util.List $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: org.apache.commons.httpclient.Header;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void setHeaders(org.apache.commons.httpclient.Header[])
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header[] $r1;
        int i0, $i1;
        org.apache.commons.httpclient.Header $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 := @parameter0: org.apache.commons.httpclient.Header[];

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: void clear()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r2 = $r1[i0];

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: void addHeader(org.apache.commons.httpclient.Header)>($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
