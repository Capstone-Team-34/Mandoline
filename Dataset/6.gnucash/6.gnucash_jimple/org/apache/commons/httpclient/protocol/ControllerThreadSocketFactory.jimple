org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory extends java.lang.Object
    private void <init>()
    {
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask, int) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask $r0;
        int $i0;
        org.apache.commons.httpclient.util.TimeoutController$TimeoutException r1;
        long $l1;
        java.net.Socket $r2;
        java.io.IOException $r3;
        org.apache.commons.httpclient.ConnectTimeoutException $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        $i0 := @parameter1: int;

        $l1 = (long) $i0;

     label1:
        staticinvoke <org.apache.commons.httpclient.util.TimeoutController: void execute(java.lang.Runnable,long)>($r0, $l1);

     label2:
        $r2 = virtualinvoke $r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket getSocket()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>($r0);

        if $r3 == null goto label4;

        $r3 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>($r0);

        throw $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new org.apache.commons.httpclient.ConnectTimeoutException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The host did not accept the connection within timeout of ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ms");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.httpclient.ConnectTimeoutException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        return $r2;

        catch org.apache.commons.httpclient.util.TimeoutController$TimeoutException from label1 to label2 with label3;
    }
    public static java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        org.apache.commons.httpclient.protocol.ProtocolSocketFactory $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        java.net.InetAddress $r2;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1 r3;
        org.apache.commons.httpclient.util.TimeoutController$TimeoutException r4;
        long $l3;
        java.net.Socket $r5;
        java.io.IOException $r6;
        org.apache.commons.httpclient.ConnectTimeoutException $r7;
        java.lang.StringBuffer $r8;

        $r0 := @parameter0: org.apache.commons.httpclient.protocol.ProtocolSocketFactory;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        r3 = new org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1;

        specialinvoke r3.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1: void <init>(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int)>($r0, $r1, $i0, $r2, $i1);

        $l3 = (long) $i2;

     label1:
        staticinvoke <org.apache.commons.httpclient.util.TimeoutController: void execute(java.lang.Runnable,long)>(r3, $l3);

     label2:
        $r5 = virtualinvoke r3.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket getSocket()>();

        $r6 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>(r3);

        if $r6 == null goto label4;

        $r6 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>(r3);

        throw $r6;

     label3:
        r4 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.ConnectTimeoutException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The host did not accept the connection within timeout of ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ms");

        $r1 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.httpclient.ConnectTimeoutException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label4:
        return $r5;

        catch org.apache.commons.httpclient.util.TimeoutController$TimeoutException from label1 to label2 with label3;
    }
