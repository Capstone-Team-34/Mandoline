org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory extends java.lang.Object implements org.apache.commons.httpclient.protocol.ProtocolSocketFactory
private static final org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory
    static void <clinit>()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory $r0;

        $r0 = new org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        specialinvoke $r0.<org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: void <init>()>();

        <org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory getSocketFactory()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;

        r0 = <org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory>;

        return r0;
    }
    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;
        java.lang.String $r1;
        int $i0;
        java.net.Socket $r2;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new java.net.Socket;

        specialinvoke $r2.<java.net.Socket: void <init>(java.lang.String,int)>($r1, $i0);

        return $r2;
    }
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        java.net.Socket $r3;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = new java.net.Socket;

        specialinvoke $r3.<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        return $r3;
    }
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        java.net.InetAddress $r2;
        org.apache.commons.httpclient.params.HttpConnectionParams $r3;
        java.lang.IllegalArgumentException $r4;
        java.net.Socket $r5;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 := @parameter4: org.apache.commons.httpclient.params.HttpConnectionParams;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r4;

     label1:
        $i2 = virtualinvoke $r3.<org.apache.commons.httpclient.params.HttpConnectionParams: int getConnectionTimeout()>();

        if $i2 != 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        return $r5;

     label2:
        $r5 = staticinvoke <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.net.Socket createSocket(java.lang.String,java.lang.String,int,java.net.InetAddress,int,int)>("javax.net.SocketFactory", $r1, $i0, $r2, $i1, $i2);

        if $r5 != null goto label3;

        $r5 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory: java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int,int)>(r0, $r1, $i0, $r2, $i1, $i2);

     label3:
        return $r5;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
