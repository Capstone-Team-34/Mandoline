org.apache.commons.codec.language.Soundex extends java.lang.Object implements org.apache.commons.codec.StringEncoder
public static final org.apache.commons.codec.language.Soundex US_ENGLISH
public static final char[] US_ENGLISH_MAPPING
public static final java.lang.String US_ENGLISH_MAPPING_STRING
private int maxLength
private char[] soundexMapping
    static void <clinit>()
    {
        char[] $r0;
        org.apache.commons.codec.language.Soundex $r1;
        java.lang.String $r2;

        $r1 = new org.apache.commons.codec.language.Soundex;

        specialinvoke $r1.<org.apache.commons.codec.language.Soundex: void <init>()>();

        <org.apache.commons.codec.language.Soundex: org.apache.commons.codec.language.Soundex US_ENGLISH> = $r1;

        $r2 = "01230120022455012623010202";

        $r0 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.apache.commons.codec.language.Soundex: char[] US_ENGLISH_MAPPING> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 = <org.apache.commons.codec.language.Soundex: char[] US_ENGLISH_MAPPING>;

        specialinvoke r0.<org.apache.commons.codec.language.Soundex: void <init>(char[])>($r1);

        return;
    }
    public void <init>(char[])
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.Soundex: int maxLength> = 4;

        specialinvoke r0.<org.apache.commons.codec.language.Soundex: void setSoundexMapping(char[])>($r1);

        return;
    }
    private char getMappingCode(java.lang.String, int)
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String $r1;
        int $i0, $i2;
        char $c1, $c3, $c4;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c1 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char map(char)>($c1);

        if $i0 <= 1 goto label3;

        if $c1 == 48 goto label3;

        $i2 = $i0 + -1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        if 72 == $c3 goto label1;

        if 87 != $c3 goto label3;

     label1:
        $i0 = $i0 + -2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c4 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char map(char)>($c3);

        if $c4 == $c1 goto label2;

        if 72 == $c3 goto label2;

        if 87 != $c3 goto label3;

     label2:
        return 0;

     label3:
        return $c1;
    }
    private char[] getSoundexMapping()
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 = r0.<org.apache.commons.codec.language.Soundex: char[] soundexMapping>;

        return r1;
    }
    private char map(char)
    {
        org.apache.commons.codec.language.Soundex r0;
        char $c0;
        int i1, $i2;
        char[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $c0 := @parameter0: char;

        i1 = $c0 + -65;

        if i1 < 0 goto label1;

        $r1 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()>();

        $i2 = lengthof $r1;

        if i1 < $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The character is not mapped: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r1 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()>();

        $c0 = $r1[i1];

        return $c0;
    }
    private void setSoundexMapping(char[])
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 := @parameter0: char[];

        r0.<org.apache.commons.codec.language.Soundex: char[] soundexMapping> = $r1;

        return;
    }
    public int difference(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String)>(r0, $r1, $r2);

        return $i0;
    }
    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.commons.codec.EncoderException $r3;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r3.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("Parameter supplied to Soundex encode is not of type java.lang.String");

        throw $r3;

     label1:
        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encode(java.lang.String)
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>($r1);

        return $r1;
    }
    public int getMaxLength()
    {
        org.apache.commons.codec.language.Soundex r0;
        int i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        i0 = r0.<org.apache.commons.codec.language.Soundex: int maxLength>;

        return i0;
    }
    public void setMaxLength(int)
    {
        org.apache.commons.codec.language.Soundex r0;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $i0 := @parameter0: int;

        r0.<org.apache.commons.codec.language.Soundex: int maxLength> = $i0;

        return;
    }
    public java.lang.String soundex(java.lang.String)
    {
        org.apache.commons.codec.language.Soundex r0;
        int i0, i1, $i2;
        char[] r1;
        java.lang.String $r2;
        char $c3, $c4;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)>($r2);

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label2;

        return $r2;

     label2:
        r1 = newarray (char)[4];

        r1[0] = 48;

        r1[1] = 48;

        r1[2] = 48;

        r1[3] = 48;

        i0 = 1;

        $i2 = 1;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        r1[0] = $c3;

        $c3 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)>($r2, 0);

     label3:
        i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 >= i1 goto label5;

        i1 = lengthof r1;

        if $i2 >= i1 goto label5;

        i1 = i0 + 1;

        $c4 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)>($r2, i0);

        if $c4 == 0 goto label6;

        if $c4 == 48 goto label4;

        if $c4 == $c3 goto label4;

        r1[$i2] = $c4;

        $i2 = $i2 + 1;

     label4:
        $c3 = $c4;

        i0 = i1;

        goto label3;

     label5:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;

     label6:
        i0 = i1;

        goto label3;
    }
