org.apache.jackrabbit.webdav.Status extends java.lang.Object implements org.apache.jackrabbit.webdav.DavConstants org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private final int code
private final java.lang.String phrase
private final java.lang.String version
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/Status;");

        <org.apache.jackrabbit.webdav.Status: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(int)
    {
        org.apache.jackrabbit.webdav.Status r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.Status;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.Status: java.lang.String version> = "HTTP/1.1";

        r0.<org.apache.jackrabbit.webdav.Status: int code> = $i0;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.DavException: java.lang.String getStatusPhrase(int)>($i0);

        r0.<org.apache.jackrabbit.webdav.Status: java.lang.String phrase> = $r1;

        return;
    }
    public void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.jackrabbit.webdav.Status r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.Status;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.Status: java.lang.String version> = $r1;

        r0.<org.apache.jackrabbit.webdav.Status: int code> = $i0;

        r0.<org.apache.jackrabbit.webdav.Status: java.lang.String phrase> = $r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.Status parse(java.lang.String)
    {
        java.lang.String $r0, $r3, $r4;
        org.apache.jackrabbit.webdav.Status r1;
        java.lang.IllegalArgumentException $r2;
        int $i0, i1, i2, i4;
        char $c3;
        boolean $z0;
        org.slf4j.Logger $r5;
        java.lang.StringBuilder $r6;
        java.lang.NumberFormatException r7;
        java.lang.StringIndexOutOfBoundsException r8, r9;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to parse status line from null xml element.");

        throw $r2;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = 0;

        i2 = 0;

     label02:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

     label03:
        if $z0 == 0 goto label04;

        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label02;

     label04:
        $r3 = "HTTP";

        i4 = i2 + 4;

     label05:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label06:
        if $z0 != 0 goto label08;

        $r5 = <org.apache.jackrabbit.webdav.Status: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status-Line \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not start with HTTP");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r3);

     label08:
        i4 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(32, i4);

     label09:
        i2 = i4;

        if i4 > 0 goto label11;

        $r5 = <org.apache.jackrabbit.webdav.Status: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse HTTP-Version from the status line: \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r3);

     label11:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i4);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

     label12:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

     label13:
        if $c3 != 32 goto label14;

        i2 = i2 + 1;

        goto label12;

     label14:
        i4 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(32, i2);

     label15:
        i1 = i4;

        if i4 >= 0 goto label16;

        i1 = $i0;

     label16:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label17:
        $r4 = "";

        i1 = i1 + 1;

        if i1 >= $i0 goto label19;

     label18:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

     label19:
        r1 = new org.apache.jackrabbit.webdav.Status;

     label20:
        specialinvoke r1.<org.apache.jackrabbit.webdav.Status: void <init>(java.lang.String,int,java.lang.String)>($r3, i2, $r4);

     label21:
        return r1;

     label22:
        r7 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse status code from status line: \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

     label24:
        throw $r2;

     label25:
        r8 := @caughtexception;

     label26:
        $r2 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status-Line \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not valid");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label27:
        r9 := @caughtexception;

        goto label26;

        catch java.lang.StringIndexOutOfBoundsException from label02 to label03 with label27;
        catch java.lang.StringIndexOutOfBoundsException from label05 to label06 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label07 to label09 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label10 to label13 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label14 to label15 with label25;
        catch java.lang.NumberFormatException from label16 to label17 with label22;
        catch java.lang.StringIndexOutOfBoundsException from label16 to label17 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label18 to label19 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label20 to label21 with label25;
        catch java.lang.StringIndexOutOfBoundsException from label23 to label24 with label25;
    }
    public int getStatusCode()
    {
        org.apache.jackrabbit.webdav.Status r0;
        int i0;

        r0 := @this: org.apache.jackrabbit.webdav.Status;

        i0 = r0.<org.apache.jackrabbit.webdav.Status: int code>;

        return i0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.Status r0;
        org.w3c.dom.Document $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i0;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.w3c.dom.Element $r5;

        r0 := @this: org.apache.jackrabbit.webdav.Status;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.jackrabbit.webdav.Status: java.lang.String version>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = r0.<org.apache.jackrabbit.webdav.Status: int code>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = r0.<org.apache.jackrabbit.webdav.Status: java.lang.String phrase>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <org.apache.jackrabbit.webdav.Status: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "status", $r4);

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void setText(org.w3c.dom.Element,java.lang.String)>($r5, $r3);

        return $r5;
    }
