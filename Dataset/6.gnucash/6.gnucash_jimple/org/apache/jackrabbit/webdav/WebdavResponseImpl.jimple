org.apache.jackrabbit.webdav.WebdavResponseImpl extends java.lang.Object implements org.apache.jackrabbit.webdav.WebdavResponse
private static org.slf4j.Logger log
private javax.servlet.http.HttpServletResponse httpResponse
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/WebdavResponseImpl;");

        <org.apache.jackrabbit.webdav.WebdavResponseImpl: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(javax.servlet.http.HttpServletResponse)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void <init>(javax.servlet.http.HttpServletResponse,boolean)>($r1, 0);

        return;
    }
    public void <init>(javax.servlet.http.HttpServletResponse, boolean)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.HttpServletResponse $r1;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: javax.servlet.http.HttpServletResponse;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse> = $r1;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void addHeader(java.lang.String,java.lang.String)>("Pragma", "No-cache");

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void addHeader(java.lang.String,java.lang.String)>("Cache-Control", "no-cache");

     label1:
        return;
    }
    public void addCookie(javax.servlet.http.Cookie)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.Cookie $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: javax.servlet.http.Cookie;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void addCookie(javax.servlet.http.Cookie)>($r1);

        return;
    }
    public void addDateHeader(java.lang.String, long)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        long $l0;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void addDateHeader(java.lang.String,long)>($r1, $l0);

        return;
    }
    public void addHeader(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1, $r2;
        javax.servlet.http.HttpServletResponse $r3;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void addIntHeader(java.lang.String, int)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        int $i0;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void addIntHeader(java.lang.String,int)>($r1, $i0);

        return;
    }
    public boolean containsHeader(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        boolean $z0;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $z0 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>($r1);

        return $z0;
    }
    public java.lang.String encodeRedirectURL(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encodeRedirectUrl(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encodeURL(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encodeUrl(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.lang.String encodeUrl(java.lang.String)>($r1);

        return $r1;
    }
    public void flushBuffer() throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        return;
    }
    public int getBufferSize()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $i0 = interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: int getBufferSize()>();

        return $i0;
    }
    public java.lang.String getCharacterEncoding()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.lang.String getCharacterEncoding()>();

        return $r1;
    }
    public java.util.Locale getLocale()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.util.Locale $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.util.Locale getLocale()>();

        return $r1;
    }
    public javax.servlet.ServletOutputStream getOutputStream() throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.ServletOutputStream $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        return $r1;
    }
    public java.io.PrintWriter getWriter() throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.io.PrintWriter $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r1 = interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        return $r1;
    }
    public boolean isCommitted()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        boolean $z0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $z0 = interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        return $z0;
    }
    public void reset()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void reset()>();

        return;
    }
    public void resetBuffer()
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void resetBuffer()>();

        return;
    }
    public void sendError(int) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void sendError(int)>($i0);

        return;
    }
    public void sendError(int, java.lang.String) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>($i0, $r1);

        return;
    }
    public void sendError(org.apache.jackrabbit.webdav.DavException) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.DavException $r1;
        boolean $z0;
        javax.servlet.http.HttpServletResponse $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavException;

        $z0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.DavException: boolean hasErrorCondition()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $i0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.DavException: int getErrorCode()>();

        $r3 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.DavException: java.lang.String getStatusPhrase()>();

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>($i0, $r3);

        return;

     label1:
        $i0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.DavException: int getErrorCode()>();

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable,int)>($r1, $i0);

        return;
    }
    public void sendMultiStatus(org.apache.jackrabbit.webdav.MultiStatus) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.MultiStatus $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.MultiStatus;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable,int)>($r1, 207);

        return;
    }
    public void sendPollResponse(org.apache.jackrabbit.webdav.observation.EventDiscovery) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.observation.EventDiscovery $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.observation.EventDiscovery;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable,int)>($r1, 200);

        return;
    }
    public void sendRedirect(java.lang.String) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r1);

        return;
    }
    public void sendRefreshLockResponse(org.apache.jackrabbit.webdav.lock.ActiveLock[]) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.lock.ActiveLock[] $r1;
        org.apache.jackrabbit.webdav.property.DavPropertySet r2;
        org.apache.jackrabbit.webdav.lock.LockDiscovery $r3;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.ActiveLock[];

        r2 = new org.apache.jackrabbit.webdav.property.DavPropertySet;

        specialinvoke r2.<org.apache.jackrabbit.webdav.property.DavPropertySet: void <init>()>();

        $r3 = new org.apache.jackrabbit.webdav.lock.LockDiscovery;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.lock.LockDiscovery: void <init>(org.apache.jackrabbit.webdav.lock.ActiveLock[])>($r1);

        virtualinvoke r2.<org.apache.jackrabbit.webdav.property.DavPropertySet: org.apache.jackrabbit.webdav.property.DavProperty add(org.apache.jackrabbit.webdav.property.DavProperty)>($r3);

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable,int)>(r2, 200);

        return;
    }
    public void sendSubscriptionResponse(org.apache.jackrabbit.webdav.observation.Subscription) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.observation.Subscription $r1;
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r2;
        org.apache.jackrabbit.webdav.property.DavPropertySet r3;
        java.lang.String $r4, $r6;
        javax.servlet.http.HttpServletResponse $r5;
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery $r7;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.observation.Subscription;

        $r4 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.observation.Subscription: java.lang.String getSubscriptionId()>();

        if $r4 == null goto label1;

        r2 = new org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        specialinvoke r2.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: void <init>(java.lang.String,java.lang.String)>("SubscriptionId", $r4);

        $r5 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        $r4 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.header.Header: java.lang.String getHeaderName()>();

        $r6 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.header.Header: java.lang.String getHeaderValue()>();

        interfaceinvoke $r5.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>($r4, $r6);

     label1:
        r3 = new org.apache.jackrabbit.webdav.property.DavPropertySet;

        specialinvoke r3.<org.apache.jackrabbit.webdav.property.DavPropertySet: void <init>()>();

        $r7 = new org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        specialinvoke $r7.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: void <init>(org.apache.jackrabbit.webdav.observation.Subscription)>($r1);

        virtualinvoke r3.<org.apache.jackrabbit.webdav.property.DavPropertySet: org.apache.jackrabbit.webdav.property.DavProperty add(org.apache.jackrabbit.webdav.property.DavProperty)>($r7);

        virtualinvoke r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable,int)>(r3, 200);

        return;
    }
    public void sendXmlResponse(org.apache.jackrabbit.webdav.xml.XmlSerializable, int) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        org.apache.jackrabbit.webdav.xml.XmlSerializable $r1;
        int $i0;
        javax.servlet.http.HttpServletResponse $r4;
        org.w3c.dom.Document $r5;
        org.w3c.dom.Element $r6;
        javax.servlet.ServletOutputStream $r7;
        javax.xml.parsers.ParserConfigurationException r8;
        org.slf4j.Logger $r9;
        java.lang.String $r10;
        javax.xml.transform.TransformerException r11;
        org.xml.sax.SAXException r12;
        java.io.ByteArrayOutputStream $r13;
        java.io.OutputStreamWriter $r14;
        java.io.IOException $r15;
        java.io.OutputStream $r16;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.xml.XmlSerializable;

        $i0 := @parameter1: int;

        $r4 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: void setStatus(int)>($i0);

        if $r1 == null goto label16;

        $r13 = new java.io.ByteArrayOutputStream;

        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Document createDocument()>();

        $r6 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.xml.XmlSerializable: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r5);

        interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label02:
        $r14 = new java.io.OutputStreamWriter;

     label03:
        specialinvoke $r14.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r13, "UTF-8");

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void transformDocument(org.w3c.dom.Document,java.io.Writer)>($r5, $r14);

        virtualinvoke $r14.<java.io.Writer: void flush()>();

     label04:
        $r4 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

     label05:
        interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/xml; charset=UTF-8");

     label06:
        $r4 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

     label07:
        $i0 = virtualinvoke $r13.<java.io.ByteArrayOutputStream: int size()>();

        interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i0);

     label08:
        $r4 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

     label09:
        $r7 = interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

     label10:
        $r16 = (java.io.OutputStream) $r7;

     label11:
        virtualinvoke $r13.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r16);

     label12:
        return;

     label13:
        r8 := @caughtexception;

        $r9 = <org.apache.jackrabbit.webdav.WebdavResponseImpl: org.slf4j.Logger log>;

        $r10 = virtualinvoke r8.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r10);

        $r15 = new java.io.IOException;

        $r10 = virtualinvoke r8.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label14:
        r11 := @caughtexception;

        $r9 = <org.apache.jackrabbit.webdav.WebdavResponseImpl: org.slf4j.Logger log>;

        $r10 = virtualinvoke r11.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r10);

        $r15 = new java.io.IOException;

        $r10 = virtualinvoke r11.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label15:
        r12 := @caughtexception;

        $r9 = <org.apache.jackrabbit.webdav.WebdavResponseImpl: org.slf4j.Logger log>;

        $r10 = virtualinvoke r12.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r10);

        $r15 = new java.io.IOException;

        $r10 = virtualinvoke r12.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label16:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label13;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label13;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label06 with label13;
        catch javax.xml.parsers.ParserConfigurationException from label07 to label08 with label13;
        catch javax.xml.parsers.ParserConfigurationException from label09 to label10 with label13;
        catch javax.xml.parsers.ParserConfigurationException from label11 to label12 with label13;
        catch javax.xml.transform.TransformerException from label01 to label02 with label14;
        catch javax.xml.transform.TransformerException from label03 to label04 with label14;
        catch javax.xml.transform.TransformerException from label05 to label06 with label14;
        catch javax.xml.transform.TransformerException from label07 to label08 with label14;
        catch javax.xml.transform.TransformerException from label09 to label10 with label14;
        catch javax.xml.transform.TransformerException from label11 to label12 with label14;
        catch org.xml.sax.SAXException from label01 to label02 with label15;
        catch org.xml.sax.SAXException from label03 to label04 with label15;
        catch org.xml.sax.SAXException from label05 to label06 with label15;
        catch org.xml.sax.SAXException from label07 to label08 with label15;
        catch org.xml.sax.SAXException from label09 to label10 with label15;
        catch org.xml.sax.SAXException from label11 to label12 with label15;
    }
    public void setBufferSize(int)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void setBufferSize(int)>($i0);

        return;
    }
    public void setContentLength(int)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i0);

        return;
    }
    public void setContentType(java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r1);

        return;
    }
    public void setDateHeader(java.lang.String, long)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        long $l0;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>($r1, $l0);

        return;
    }
    public void setHeader(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1, $r2;
        javax.servlet.http.HttpServletResponse $r3;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setIntHeader(java.lang.String, int)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.lang.String $r1;
        int $i0;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void setIntHeader(java.lang.String,int)>($r1, $i0);

        return;
    }
    public void setLocale(java.util.Locale)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        java.util.Locale $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void setLocale(java.util.Locale)>($r1);

        return;
    }
    public void setStatus(int)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        javax.servlet.http.HttpServletResponse $r1;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void setStatus(int)>($i0);

        return;
    }
    public void setStatus(int, java.lang.String)
    {
        org.apache.jackrabbit.webdav.WebdavResponseImpl r0;
        int $i0;
        java.lang.String $r1;
        javax.servlet.http.HttpServletResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.WebdavResponseImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.WebdavResponseImpl: javax.servlet.http.HttpServletResponse httpResponse>;

        interfaceinvoke $r2.<javax.servlet.http.HttpServletResponse: void setStatus(int,java.lang.String)>($i0, $r1);

        return;
    }
