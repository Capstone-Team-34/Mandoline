org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl extends java.lang.Object implements org.apache.jackrabbit.webdav.DavResourceLocator
private final org.apache.jackrabbit.webdav.AbstractLocatorFactory factory
private final java.lang.String href
private final java.lang.String prefix
private final java.lang.String resourcePath
final org.apache.jackrabbit.webdav.AbstractLocatorFactory this$0
private final java.lang.String workspacePath
    private void <init>(org.apache.jackrabbit.webdav.AbstractLocatorFactory, java.lang.String, java.lang.String, java.lang.String, org.apache.jackrabbit.webdav.AbstractLocatorFactory)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory $r1, $r5;
        java.lang.String $r2, $r3, $r4;
        java.lang.StringBuffer r6;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        char $c1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: org.apache.jackrabbit.webdav.AbstractLocatorFactory this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String prefix> = $r2;

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String workspacePath> = $r3;

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String resourcePath> = $r4;

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: org.apache.jackrabbit.webdav.AbstractLocatorFactory factory> = $r5;

        r6 = new java.lang.StringBuffer;

        specialinvoke r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        if $r4 == null goto label2;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource path \'");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not start with workspace path \'");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label1:
        $r2 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String escapePath(java.lang.String)>($r4);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label2:
        $i0 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        if $i0 == 0 goto label3;

        if $i0 <= 0 goto label4;

        $i0 = $i0 + -1;

        $c1 = virtualinvoke r6.<java.lang.StringBuffer: char charAt(int)>($i0);

        if $c1 == 47 goto label4;

     label3:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

     label4:
        $r2 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String href> = $r2;

        return;
    }
    void <init>(org.apache.jackrabbit.webdav.AbstractLocatorFactory, java.lang.String, java.lang.String, java.lang.String, org.apache.jackrabbit.webdav.AbstractLocatorFactory, org.apache.jackrabbit.webdav.AbstractLocatorFactory$1)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory $r1, $r5;
        java.lang.String $r2, $r3, $r4;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$1 $r6;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r6 := @parameter5: org.apache.jackrabbit.webdav.AbstractLocatorFactory$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: void <init>(org.apache.jackrabbit.webdav.AbstractLocatorFactory,java.lang.String,java.lang.String,java.lang.String,org.apache.jackrabbit.webdav.AbstractLocatorFactory)>($r1, $r2, $r3, $r4, $r5);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        if $z0 == 0 goto label2;

        r2 = (org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl) $r1;

        $i0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: int hashCode()>();

        $i1 = virtualinvoke r2.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: int hashCode()>();

        if $i0 == $i1 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public org.apache.jackrabbit.webdav.DavLocatorFactory getFactory()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: org.apache.jackrabbit.webdav.AbstractLocatorFactory factory>;

        return r1;
    }
    public java.lang.String getHref(boolean)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        boolean $z0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String href>;

        return $r1;

     label1:
        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String href>;

        $r2 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String href>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }
    public java.lang.String getPrefix()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String prefix>;

        return r1;
    }
    public java.lang.String getRepositoryPath()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: org.apache.jackrabbit.webdav.AbstractLocatorFactory factory>;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String getResourcePath()>();

        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String getWorkspacePath()>();

        $r2 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String getRepositoryPath(java.lang.String,java.lang.String)>($r2, $r3);

        return $r2;
    }
    public java.lang.String getResourcePath()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String resourcePath>;

        return r1;
    }
    public java.lang.String getWorkspaceName()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String workspacePath>;

        if $r1 == null goto label1;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String workspacePath>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String workspacePath>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        return $r1;

     label1:
        return null;
    }
    public java.lang.String getWorkspacePath()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String workspacePath>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String href>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
    public boolean isRootLocation()
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String getWorkspacePath()>();

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isSameWorkspace(java.lang.String)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: java.lang.String getWorkspaceName()>();

        if $r2 != null goto label2;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
    public boolean isSameWorkspace(org.apache.jackrabbit.webdav.DavResourceLocator)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl r0;
        org.apache.jackrabbit.webdav.DavResourceLocator $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResourceLocator;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResourceLocator: java.lang.String getWorkspaceName()>();

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: boolean isSameWorkspace(java.lang.String)>($r2);

        return $z0;
    }
