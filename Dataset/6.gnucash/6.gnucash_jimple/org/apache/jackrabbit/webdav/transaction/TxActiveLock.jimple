org.apache.jackrabbit.webdav.transaction.TxActiveLock extends org.apache.jackrabbit.webdav.lock.DefaultActiveLock implements org.apache.jackrabbit.webdav.transaction.TransactionConstants
public static final long DEFAULT_TIMEOUT
private final org.apache.jackrabbit.webdav.lock.Scope scope
    public void <init>(org.apache.jackrabbit.webdav.lock.LockInfo)
    {
        org.apache.jackrabbit.webdav.transaction.TxActiveLock r0;
        org.apache.jackrabbit.webdav.lock.LockInfo $r1;
        org.apache.jackrabbit.webdav.lock.Type $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        org.apache.jackrabbit.webdav.lock.Scope $r5, $r6;
        java.lang.String $r7;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.transaction.TxActiveLock;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.LockInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: void <init>()>();

        if $r1 == null goto label4;

        $r2 = <org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Type TRANSACTION>;

        $r3 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type getType()>();

        $z0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.lock.Type: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only \'transaction\' type is allowed for a transaction-activelock object.");

        throw $r4;

     label1:
        $r5 = <org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope LOCAL>;

        $r6 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        $r5 = <org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope GLOBAL>;

        $r6 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only \'global\' or \'local\' are valid scopes within a transaction-activelock element.");

        throw $r4;

     label2:
        $z0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isDeep()>();

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only transaction locks can only be deep.");

        throw $r4;

     label3:
        $r7 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String getOwner()>();

        virtualinvoke r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: void setOwner(java.lang.String)>($r7);

        $l0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: long getTimeout()>();

        virtualinvoke r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: void setTimeout(long)>($l0);

        $r5 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope scope> = $r5;

        return;

     label4:
        virtualinvoke r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: void setTimeout(long)>(300000L);

        $r5 = <org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope LOCAL>;

        r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope scope> = $r5;

        return;
    }
    public org.apache.jackrabbit.webdav.lock.Scope getScope()
    {
        org.apache.jackrabbit.webdav.transaction.TxActiveLock r0;
        org.apache.jackrabbit.webdav.lock.Scope r1;

        r0 := @this: org.apache.jackrabbit.webdav.transaction.TxActiveLock;

        r1 = r0.<org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Scope scope>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.lock.Type getType()
    {
        org.apache.jackrabbit.webdav.transaction.TxActiveLock r0;
        org.apache.jackrabbit.webdav.lock.Type r1;

        r0 := @this: org.apache.jackrabbit.webdav.transaction.TxActiveLock;

        r1 = <org.apache.jackrabbit.webdav.transaction.TxActiveLock: org.apache.jackrabbit.webdav.lock.Type TRANSACTION>;

        return r1;
    }
    public boolean isDeep()
    {
        org.apache.jackrabbit.webdav.transaction.TxActiveLock r0;

        r0 := @this: org.apache.jackrabbit.webdav.transaction.TxActiveLock;

        return 1;
    }
