org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private static org.slf4j.Logger log
private final java.util.Set reportTypes
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/report/SupportedReportSetProperty;");

        <org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.util.HashSet $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUPPORTED_REPORT_SET>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, 1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes> = $r2;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.version.report.ReportType[])
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        org.apache.jackrabbit.webdav.version.report.ReportType[] $r1;
        int i0, i1;
        org.apache.jackrabbit.webdav.version.report.ReportType r2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3;
        java.util.HashSet $r4;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportType[];

        $r3 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUPPORTED_REPORT_SET>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r3, 1);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes> = $r4;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: void addReportType(org.apache.jackrabbit.webdav.version.report.ReportType)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void addReportType(org.apache.jackrabbit.webdav.version.report.ReportType)
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        org.apache.jackrabbit.webdav.version.report.ReportType $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportType;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        java.util.Set $r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set getValue()>();

        return $r1;
    }
    public java.util.Set getValue()
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        java.util.Set r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes>;

        return r1;
    }
    public boolean isSupportedReport(org.apache.jackrabbit.webdav.version.report.ReportInfo)
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.jackrabbit.webdav.version.report.ReportType r5;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.jackrabbit.webdav.version.report.ReportType) $r4;

        $z0 = virtualinvoke r5.<org.apache.jackrabbit.webdav.version.report.ReportType: boolean isRequestedReportType(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        org.w3c.dom.Element $r3, $r9, $r10;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.jackrabbit.webdav.version.report.ReportType r7;
        org.apache.jackrabbit.webdav.xml.Namespace $r8;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        $r4 = r0.<org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty: java.util.Set reportTypes>;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.jackrabbit.webdav.version.report.ReportType) $r6;

        $r8 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "supported-report", $r8);

        $r8 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r9, "report", $r8);

        $r10 = virtualinvoke r7.<org.apache.jackrabbit.webdav.version.report.ReportType: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        goto label1;

     label2:
        return $r3;
    }
