org.apache.jackrabbit.webdav.version.MergeInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.version.DeltaVConstants org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private final org.w3c.dom.Element mergeElement
private final org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/MergeInfo;");

        <org.apache.jackrabbit.webdav.version.MergeInfo: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.w3c.dom.Element $r1, $r5;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0;
        org.slf4j.Logger $r3;
        org.apache.jackrabbit.webdav.DavException $r4;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r6;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        $r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "merge", $r2);

        if $z0 != 0 goto label1;

        $r3 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("\'DAV:merge\' element expected");

        $r4 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r4;

     label1:
        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "prop", $r2);

        if $r5 == null goto label3;

        $r6 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r6.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>(org.w3c.dom.Element)>($r5);

        r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet> = $r6;

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r5);

     label2:
        r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement> = $r1;

        return;

     label3:
        $r6 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r6.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet> = $r6;

        goto label2;
    }
    public static org.w3c.dom.Element createMergeElement(java.lang.String[], boolean, boolean, org.w3c.dom.Document)
    {
        java.lang.String[] $r0;
        boolean $z0, $z1;
        org.w3c.dom.Document $r1;
        int i0, i1;
        java.lang.String r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        org.w3c.dom.Element $r4, $r5, $r6;

        $r0 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 := @parameter3: org.w3c.dom.Document;

        $r3 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "merge", $r3);

        $r3 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r4, "source", $r3);

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r0[i1];

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>(r2, $r1);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        if $z0 == 0 goto label3;

        $r3 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r4, "no-auto-merge", $r3);

     label3:
        if $z1 == 0 goto label4;

        $r3 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r4, "no-checkout", $r3);

     label4:
        return $r4;
    }
    public org.w3c.dom.Element getMergeElement()
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.property.DavPropertyNameSet getPropertyNameSet()
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet>;

        return r1;
    }
    public java.lang.String[] getSourceHrefs()
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        java.util.ArrayList r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r4;
        boolean $z0;
        java.lang.String $r5;
        int $i0;
        java.lang.String[] $r6;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement>;

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "source", $r2);

        if $r3 == null goto label2;

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "href", $r2);

     label1:
        $z0 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getTextTrim(org.w3c.dom.Element)>($r3);

        if $r5 == null goto label1;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (java.lang.String[]) $r7;

        return $r6;
    }
    public boolean isNoAutoMerge()
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        boolean $z0;
        org.w3c.dom.Element $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement>;

        $r1 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "no-auto-merge", $r1);

        return $z0;
    }
    public boolean isNoCheckout()
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        boolean $z0;
        org.w3c.dom.Element $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement>;

        $r1 = <org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "no-checkout", $r1);

        return $z0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.MergeInfo r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Element $r2, $r5;
        org.w3c.dom.Node $r3;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r4;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.version.MergeInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.w3c.dom.Element mergeElement>;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r2, 1);

        $r2 = (org.w3c.dom.Element) $r3;

        $r4 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet>;

        $z0 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.jackrabbit.webdav.version.MergeInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNameSet>;

        $r5 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label1:
        return $r2;
    }
