org.apache.jackrabbit.webdav.version.OptionsInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private final java.util.Set entriesLocalNames
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/OptionsInfo;");

        <org.apache.jackrabbit.webdav.version.OptionsInfo: org.slf4j.Logger log> = $r0;

        return;
    }
    private void <init>()
    {
        org.apache.jackrabbit.webdav.version.OptionsInfo r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.OptionsInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames> = $r1;

        return;
    }
    public void <init>(java.lang.String[])
    {
        org.apache.jackrabbit.webdav.version.OptionsInfo r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.util.HashSet $r3;
        java.util.Set $r4;

        r0 := @this: org.apache.jackrabbit.webdav.version.OptionsInfo;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames> = $r3;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

     label1:
        return;
    }
    public static org.apache.jackrabbit.webdav.version.OptionsInfo createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.version.OptionsInfo r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0;
        org.slf4j.Logger $r3;
        org.apache.jackrabbit.webdav.DavException $r4;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r5;
        java.util.Set $r6;
        java.lang.String $r7;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r2 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "options", $r2);

        if $z0 != 0 goto label1;

        $r3 = <org.apache.jackrabbit.webdav.version.OptionsInfo: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("DAV:options element expected");

        $r4 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r4;

     label1:
        r1 = new org.apache.jackrabbit.webdav.version.OptionsInfo;

        specialinvoke r1.<org.apache.jackrabbit.webdav.version.OptionsInfo: void <init>()>();

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element)>($r0);

     label2:
        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = r1.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames>;

        $r0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r7 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return r1;
    }
    public boolean containsElement(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.version.OptionsInfo r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2, $r3;
        boolean $z0;
        java.util.Set $r4;

        r0 := @this: org.apache.jackrabbit.webdav.version.OptionsInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.xml.Namespace: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.OptionsInfo r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String r7;

        r0 := @this: org.apache.jackrabbit.webdav.version.OptionsInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "options", $r2);

        $r4 = r0.<org.apache.jackrabbit.webdav.version.OptionsInfo: java.util.Set entriesLocalNames>;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r2 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, r7, $r2);

        goto label1;

     label2:
        return $r3;
    }
