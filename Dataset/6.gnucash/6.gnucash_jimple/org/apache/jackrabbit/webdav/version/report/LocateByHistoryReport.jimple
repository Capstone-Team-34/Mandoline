org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport extends java.lang.Object implements org.apache.jackrabbit.webdav.version.report.Report org.apache.jackrabbit.webdav.version.DeltaVConstants
private static org.slf4j.Logger log
private org.apache.jackrabbit.webdav.version.report.ReportInfo info
private org.apache.jackrabbit.webdav.DavResource resource
private java.util.Set vhHrefSet
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/report/LocateByHistoryReport;");

        <org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        java.util.HashSet $r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: java.util.Set vhHrefSet> = $r1;

        return;
    }
    private void buildResponse(org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.property.DavPropertyNameSet, int, org.apache.jackrabbit.webdav.MultiStatus)
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r2;
        int $i0, $i1;
        org.apache.jackrabbit.webdav.MultiStatus $r3;
        org.apache.jackrabbit.webdav.DavException r4;
        org.apache.jackrabbit.webdav.DavResourceIterator $r5;
        java.util.Set $r6;
        boolean $z0;
        org.apache.jackrabbit.webdav.version.VersionControlledResource $r7;
        org.apache.jackrabbit.webdav.version.VersionHistoryResource $r8;
        java.lang.String $r9;
        org.slf4j.Logger $r10;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.apache.jackrabbit.webdav.MultiStatus;

        $r5 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.DavResourceIterator getMembers()>();

     label01:
        $r6 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: java.util.Set vhHrefSet>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label13;

        $z0 = interfaceinvoke $r5.<org.apache.jackrabbit.webdav.DavResourceIterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r1 = interfaceinvoke $r5.<org.apache.jackrabbit.webdav.DavResourceIterator: org.apache.jackrabbit.webdav.DavResource nextResource()>();

        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.version.VersionControlledResource;

        if $z0 == 0 goto label09;

        $r7 = (org.apache.jackrabbit.webdav.version.VersionControlledResource) $r1;

     label02:
        $r8 = interfaceinvoke $r7.<org.apache.jackrabbit.webdav.version.VersionControlledResource: org.apache.jackrabbit.webdav.version.VersionHistoryResource getVersionHistory()>();

     label03:
        $r6 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: java.util.Set vhHrefSet>;

     label04:
        $r9 = interfaceinvoke $r8.<org.apache.jackrabbit.webdav.version.VersionHistoryResource: java.lang.String getHref()>();

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>($r9);

     label05:
        if $z0 == 0 goto label09;

     label06:
        $z0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: boolean isEmpty()>();

     label07:
        if $z0 == 0 goto label10;

     label08:
        virtualinvoke $r3.<org.apache.jackrabbit.webdav.MultiStatus: void addResourceStatus(org.apache.jackrabbit.webdav.DavResource,int,int)>($r1, 200, 0);

     label09:
        if $i0 <= 0 goto label01;

        $r1 = interfaceinvoke $r5.<org.apache.jackrabbit.webdav.DavResourceIterator: org.apache.jackrabbit.webdav.DavResource nextResource()>();

        $i1 = $i0 + -1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: void buildResponse(org.apache.jackrabbit.webdav.DavResource,org.apache.jackrabbit.webdav.property.DavPropertyNameSet,int,org.apache.jackrabbit.webdav.MultiStatus)>($r1, $r2, $i1, $r3);

        goto label01;

     label10:
        virtualinvoke $r3.<org.apache.jackrabbit.webdav.MultiStatus: void addResourceProperties(org.apache.jackrabbit.webdav.DavResource,org.apache.jackrabbit.webdav.property.DavPropertyNameSet,int)>($r1, $r2, 0);

     label11:
        goto label09;

     label12:
        r4 := @caughtexception;

        $r10 = <org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.slf4j.Logger log>;

        $r9 = virtualinvoke r4.<org.apache.jackrabbit.webdav.DavException: java.lang.String getMessage()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r9);

        goto label09;

     label13:
        return;

        catch org.apache.jackrabbit.webdav.DavException from label02 to label03 with label12;
        catch org.apache.jackrabbit.webdav.DavException from label04 to label05 with label12;
        catch org.apache.jackrabbit.webdav.DavException from label06 to label07 with label12;
        catch org.apache.jackrabbit.webdav.DavException from label08 to label09 with label12;
        catch org.apache.jackrabbit.webdav.DavException from label10 to label11 with label12;
    }
    private org.apache.jackrabbit.webdav.MultiStatus getMultiStatus()
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.apache.jackrabbit.webdav.MultiStatus r1;
        org.apache.jackrabbit.webdav.DavResource $r2;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r3;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r4;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        r1 = new org.apache.jackrabbit.webdav.MultiStatus;

        specialinvoke r1.<org.apache.jackrabbit.webdav.MultiStatus: void <init>()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.DavResource resource>;

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.version.report.ReportInfo info>;

        $r4 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet getPropertyNameSet()>();

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.version.report.ReportInfo info>;

        $i0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int getDepth()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: void buildResponse(org.apache.jackrabbit.webdav.DavResource,org.apache.jackrabbit.webdav.property.DavPropertyNameSet,int,org.apache.jackrabbit.webdav.MultiStatus)>($r2, $r4, $i0, r1);

        return r1;
    }
    private void setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r1;
        org.apache.jackrabbit.webdav.version.report.ReportType $r2;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.w3c.dom.Element $r5;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r6;
        java.lang.String $r7;
        java.util.Set $r8;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.version.report.ReportType getType()>();

        $z0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.version.report.ReportType: boolean isRequestedReportType(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r1);

        if $z0 != 0 goto label2;

     label1:
        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "DAV:locate-by-history element expected.");

        throw $r3;

     label2:
        $r4 = <org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.w3c.dom.Element getContentElement(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("version-history-set", $r4);

        if $r5 != null goto label3;

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "The DAV:locate-by-history element must contain a DAV:version-history-set child.");

        throw $r3;

     label3:
        $r4 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r5, "href", $r4);

     label4:
        $z0 = virtualinvoke $r6.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = virtualinvoke $r6.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r7 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getText(org.w3c.dom.Element)>($r5);

        if $r7 == null goto label4;

        $r8 = r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: java.util.Set vhHrefSet>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label4;

     label5:
        r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.version.report.ReportInfo info> = $r1;

        return;
    }
    public org.apache.jackrabbit.webdav.version.report.ReportType getType()
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.apache.jackrabbit.webdav.version.report.ReportType r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        r1 = <org.apache.jackrabbit.webdav.version.report.ReportType: org.apache.jackrabbit.webdav.version.report.ReportType LOCATE_BY_HISTORY>;

        return r1;
    }
    public void init(org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r2;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r3;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.version.VersionControlledResource;

        if $z0 != 0 goto label2;

     label1:
        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "DAV:version-tree report can only be created for version-controlled resources and version resources.");

        throw $r3;

     label2:
        r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.DavResource resource> = $r1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: void setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r2);

        return;
    }
    public boolean isMultiStatusReport()
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        return 1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.MultiStatus $r2;
        org.w3c.dom.Element $r3;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.LocateByHistoryReport: org.apache.jackrabbit.webdav.MultiStatus getMultiStatus()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.MultiStatus: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        return $r3;
    }
