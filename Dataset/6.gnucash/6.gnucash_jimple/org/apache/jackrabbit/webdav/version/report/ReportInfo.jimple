org.apache.jackrabbit.webdav.version.report.ReportInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private final java.util.List content
private final int depth
private final org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames
private final java.lang.String typeLocalName
private final org.apache.jackrabbit.webdav.xml.Namespace typeNamespace
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/report/ReportInfo;");

        <org.apache.jackrabbit.webdav.version.report.ReportInfo: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,int,org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r1, $r2, 0, null);

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace, int, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        int $i0;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r3, $r5;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content> = $r4;

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.lang.String typeLocalName> = $r1;

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.xml.Namespace typeNamespace> = $r2;

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int depth> = $i0;

        if $r3 == null goto label1;

        $r5 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r5.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r3);

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames> = $r5;

        return;

     label1:
        $r3 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames> = $r3;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.version.report.ReportType)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.apache.jackrabbit.webdav.version.report.ReportType $r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportType;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: void <init>(org.apache.jackrabbit.webdav.version.report.ReportType,int,org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r1, 0, null);

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.version.report.ReportType, int)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.apache.jackrabbit.webdav.version.report.ReportType $r1;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportType;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: void <init>(org.apache.jackrabbit.webdav.version.report.ReportType,int,org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r1, $i0, null);

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.version.report.ReportType, int, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.apache.jackrabbit.webdav.version.report.ReportType $r1;
        int $i0;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r2;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportType;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        $r3 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.version.report.ReportType: java.lang.String getLocalName()>();

        $r4 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.version.report.ReportType: org.apache.jackrabbit.webdav.xml.Namespace getNamespace()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,int,org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r3, $r4, $i0, $r2);

        return;
    }
    public void <init>(org.w3c.dom.Element, int) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.w3c.dom.Element $r1, $r7;
        int $i0;
        java.util.ArrayList $r2;
        org.slf4j.Logger $r3;
        org.apache.jackrabbit.webdav.DavException $r4;
        java.lang.String $r5, $r10;
        org.apache.jackrabbit.webdav.xml.Namespace $r6;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r8;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r9;
        boolean $z0;
        java.util.List $r11;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.w3c.dom.Element;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content> = $r2;

        if $r1 != null goto label1;

        $r3 = <org.apache.jackrabbit.webdav.version.report.ReportInfo: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Report request body must not be null.");

        $r4 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r4;

     label1:
        $r5 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.lang.String typeLocalName> = $r5;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.xml.Namespace typeNamespace> = $r6;

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int depth> = $i0;

        $r6 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r7 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "prop", $r6);

        if $r7 == null goto label4;

        $r8 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r8.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>(org.w3c.dom.Element)>($r7);

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames> = $r8;

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r7);

     label2:
        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element)>($r1);

     label3:
        $z0 = virtualinvoke $r9.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r1 = virtualinvoke $r9.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r5 = "prop";

        $r10 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label3;

        $r11 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label3;

     label4:
        $r8 = new org.apache.jackrabbit.webdav.property.DavPropertyNameSet;

        specialinvoke $r8.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames> = $r8;

        goto label2;

     label5:
        return;
    }
    public boolean containsContentElement(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        java.lang.String $r1, $r7;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.util.List $r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        org.w3c.dom.Element r6;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.w3c.dom.Element) $r5;

        if $r2 != null goto label5;

        $r7 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r7 != null goto label4;

        $z0 = 1;

     label3:
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r7 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: boolean isSame(java.lang.String)>($r7);

        goto label3;

     label6:
        return 0;
    }
    public org.w3c.dom.Element getContentElement(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.w3c.dom.Element $r5;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List getContentElements(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.w3c.dom.Element) $r4;

        return $r5;
    }
    public java.util.List getContentElements(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.util.ArrayList r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.w3c.dom.Element r7;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.w3c.dom.Element) $r6;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>(r7, $r1, $r2);

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label1;

     label2:
        return r3;
    }
    public int getDepth()
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        int i0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        i0 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int depth>;

        return i0;
    }
    public org.apache.jackrabbit.webdav.property.DavPropertyNameSet getPropertyNameSet()
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames>;

        return r1;
    }
    public java.lang.String getReportName()
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.lang.String typeLocalName>;

        $r1 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.xml.Namespace typeNamespace>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getExpandedName(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, $r1);

        return $r2;
    }
    public void setContentElement(org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.w3c.dom.Element $r1;
        java.util.List $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.w3c.dom.Element;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.report.ReportInfo r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.String $r3;
        org.w3c.dom.Element $r4, r8;
        java.util.List $r5;
        boolean $z0;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        org.w3c.dom.Node $r9;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r10;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.lang.String typeLocalName>;

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.xml.Namespace typeNamespace>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r3, $r2);

        $r5 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List content>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.w3c.dom.Element) $r7;

        $r9 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r8, 1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        goto label1;

     label2:
        $r10 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames>;

        $z0 = virtualinvoke $r10.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r10 = r0.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet propertyNames>;

        r8 = virtualinvoke $r10.<org.apache.jackrabbit.webdav.property.DavPropertyNameSet: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r8);

     label3:
        return $r4;
    }
