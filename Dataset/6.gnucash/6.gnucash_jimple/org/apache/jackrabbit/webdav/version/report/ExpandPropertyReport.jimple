org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport extends java.lang.Object implements org.apache.jackrabbit.webdav.version.report.Report org.apache.jackrabbit.webdav.version.DeltaVConstants
private static org.slf4j.Logger log
private org.apache.jackrabbit.webdav.version.report.ReportInfo info
private java.util.Iterator propertyElements
private org.apache.jackrabbit.webdav.DavResource resource
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/report/ExpandPropertyReport;");

        <org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.apache.jackrabbit.webdav.MultiStatusResponse access$100(org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport, org.apache.jackrabbit.webdav.DavResource, java.util.Iterator)
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport $r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        java.util.Iterator $r2;
        org.apache.jackrabbit.webdav.MultiStatusResponse $r3;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter2: java.util.Iterator;

        $r3 = specialinvoke $r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.MultiStatusResponse getResponse(org.apache.jackrabbit.webdav.DavResource,java.util.Iterator)>($r1, $r2);

        return $r3;
    }
    static org.slf4j.Logger access$200()
    {
        org.slf4j.Logger r0;

        r0 = <org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.slf4j.Logger log>;

        return r0;
    }
    private void addResponses(org.apache.jackrabbit.webdav.DavResource, int, org.apache.jackrabbit.webdav.MultiStatus)
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        int $i0, $i1;
        org.apache.jackrabbit.webdav.MultiStatus $r2;
        java.util.Iterator $r3;
        org.apache.jackrabbit.webdav.MultiStatusResponse $r4;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavResourceIterator $r5;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.jackrabbit.webdav.MultiStatus;

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: java.util.Iterator propertyElements>;

        $r4 = specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.MultiStatusResponse getResponse(org.apache.jackrabbit.webdav.DavResource,java.util.Iterator)>($r1, $r3);

        virtualinvoke $r2.<org.apache.jackrabbit.webdav.MultiStatus: void addResponse(org.apache.jackrabbit.webdav.MultiStatusResponse)>($r4);

        if $i0 <= 0 goto label2;

        $z0 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: boolean isCollection()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.DavResourceIterator getMembers()>();

     label1:
        $z0 = interfaceinvoke $r5.<org.apache.jackrabbit.webdav.DavResourceIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r5.<org.apache.jackrabbit.webdav.DavResourceIterator: org.apache.jackrabbit.webdav.DavResource nextResource()>();

        $i1 = $i0 + -1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: void addResponses(org.apache.jackrabbit.webdav.DavResource,int,org.apache.jackrabbit.webdav.MultiStatus)>($r1, $i1, $r2);

        goto label1;

     label2:
        return;
    }
    private org.apache.jackrabbit.webdav.MultiStatus getMultiStatus()
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.MultiStatus r1;
        org.apache.jackrabbit.webdav.DavResource $r2;
        int $i0;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r3;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        r1 = new org.apache.jackrabbit.webdav.MultiStatus;

        specialinvoke r1.<org.apache.jackrabbit.webdav.MultiStatus: void <init>()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.DavResource resource>;

        $r3 = r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.version.report.ReportInfo info>;

        $i0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int getDepth()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: void addResponses(org.apache.jackrabbit.webdav.DavResource,int,org.apache.jackrabbit.webdav.MultiStatus)>($r2, $i0, r1);

        return r1;
    }
    private org.apache.jackrabbit.webdav.MultiStatusResponse getResponse(org.apache.jackrabbit.webdav.DavResource, java.util.Iterator)
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        java.util.Iterator r2;
        org.apache.jackrabbit.webdav.MultiStatusResponse r3;
        java.lang.String $r4, $r7;
        boolean $z0;
        java.lang.Object $r5;
        org.w3c.dom.Element r6;
        org.apache.jackrabbit.webdav.xml.Namespace $r8;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r9;
        org.apache.jackrabbit.webdav.property.DavProperty $r10;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r11;
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport$ExpandProperty $r12;
        org.apache.jackrabbit.webdav.version.DeltaVResource $r13;
        org.apache.jackrabbit.webdav.property.HrefProperty $r14;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        r2 := @parameter1: java.util.Iterator;

        r3 = new org.apache.jackrabbit.webdav.MultiStatusResponse;

        $r4 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: java.lang.String getHref()>();

        specialinvoke r3.<org.apache.jackrabbit.webdav.MultiStatusResponse: void <init>(java.lang.String,java.lang.String)>($r4, null);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.w3c.dom.Element) $r5;

        $r4 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        if $r4 == null goto label1;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r7 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("namespace");

        if $r7 == null goto label3;

        $r8 = staticinvoke <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String)>($r7);

     label2:
        $r9 = staticinvoke <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName create(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r4, $r8);

        $r10 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.property.DavProperty getProperty(org.apache.jackrabbit.webdav.property.DavPropertyName)>($r9);

        if $r10 == null goto label5;

        $z0 = $r10 instanceof org.apache.jackrabbit.webdav.property.HrefProperty;

        if $z0 == 0 goto label4;

        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.version.DeltaVResource;

        if $z0 == 0 goto label4;

        $r8 = <org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r11 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>(r6, "property", $r8);

        $r12 = new org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport$ExpandProperty;

        $r13 = (org.apache.jackrabbit.webdav.version.DeltaVResource) $r1;

        $r14 = (org.apache.jackrabbit.webdav.property.HrefProperty) $r10;

        specialinvoke $r12.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport$ExpandProperty: void <init>(org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport,org.apache.jackrabbit.webdav.version.DeltaVResource,org.apache.jackrabbit.webdav.property.HrefProperty,org.apache.jackrabbit.webdav.xml.ElementIterator,org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport$1)>(r0, $r13, $r14, $r11, null);

        virtualinvoke r3.<org.apache.jackrabbit.webdav.MultiStatusResponse: void add(org.apache.jackrabbit.webdav.property.DavProperty)>($r12);

        goto label1;

     label3:
        $r8 = <org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        goto label2;

     label4:
        virtualinvoke r3.<org.apache.jackrabbit.webdav.MultiStatusResponse: void add(org.apache.jackrabbit.webdav.property.DavProperty)>($r10);

        goto label1;

     label5:
        virtualinvoke r3.<org.apache.jackrabbit.webdav.MultiStatusResponse: void add(org.apache.jackrabbit.webdav.property.DavPropertyName,int)>($r9, 404);

        goto label1;

     label6:
        return r3;
    }
    private void setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r1;
        org.apache.jackrabbit.webdav.DavException $r2;
        org.apache.jackrabbit.webdav.version.report.ReportType $r3;
        boolean $z0;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        java.util.List $r5;
        java.util.Iterator $r6;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        if $r1 != null goto label1;

        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "The report info specified must not be null.");

        throw $r2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.version.report.ReportType getType()>();

        $z0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.version.report.ReportType: boolean isRequestedReportType(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r1);

        if $z0 != 0 goto label2;

        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "DAV:expand-property element expected.");

        throw $r2;

     label2:
        r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.version.report.ReportInfo info> = $r1;

        $r4 = <org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.util.List getContentElements(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("property", $r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: java.util.Iterator propertyElements> = $r6;

        return;
    }
    private void setResource(org.apache.jackrabbit.webdav.DavResource) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        org.apache.jackrabbit.webdav.DavException $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        if $r1 != null goto label1;

        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "The resource specified must not be null.");

        throw $r2;

     label1:
        r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.DavResource resource> = $r1;

        return;
    }
    public org.apache.jackrabbit.webdav.version.report.ReportType getType()
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.version.report.ReportType r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        r1 = <org.apache.jackrabbit.webdav.version.report.ReportType: org.apache.jackrabbit.webdav.version.report.ReportType EXPAND_PROPERTY>;

        return r1;
    }
    public void init(org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: void setResource(org.apache.jackrabbit.webdav.DavResource)>($r1);

        specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: void setInfo(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r2);

        return;
    }
    public boolean isMultiStatusReport()
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        return 1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.MultiStatus $r2;
        org.w3c.dom.Element $r3;

        r0 := @this: org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = specialinvoke r0.<org.apache.jackrabbit.webdav.version.report.ExpandPropertyReport: org.apache.jackrabbit.webdav.MultiStatus getMultiStatus()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.MultiStatus: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        return $r3;
    }
