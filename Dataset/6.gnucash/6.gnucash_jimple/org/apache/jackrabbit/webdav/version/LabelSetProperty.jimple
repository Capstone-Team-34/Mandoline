org.apache.jackrabbit.webdav.version.LabelSetProperty extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private static org.slf4j.Logger log
private final java.lang.String[] value
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/version/LabelSetProperty;");

        <org.apache.jackrabbit.webdav.version.LabelSetProperty: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String[])
    {
        org.apache.jackrabbit.webdav.version.LabelSetProperty r0;
        java.lang.String[] $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;

        r0 := @this: org.apache.jackrabbit.webdav.version.LabelSetProperty;

        $r1 := @parameter0: java.lang.String[];

        $r2 = <org.apache.jackrabbit.webdav.version.VersionResource: org.apache.jackrabbit.webdav.property.DavPropertyName LABEL_NAME_SET>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 1);

        r0.<org.apache.jackrabbit.webdav.version.LabelSetProperty: java.lang.String[] value> = $r1;

        return;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.version.LabelSetProperty r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.LabelSetProperty;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.LabelSetProperty: java.lang.String[] getValue()>();

        return $r1;
    }
    public java.lang.String[] getValue()
    {
        org.apache.jackrabbit.webdav.version.LabelSetProperty r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.jackrabbit.webdav.version.LabelSetProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.version.LabelSetProperty: java.lang.String[] value>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.version.LabelSetProperty r0;
        org.w3c.dom.Document $r1;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.String r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r5;
        org.w3c.dom.Element $r6;

        r0 := @this: org.apache.jackrabbit.webdav.version.LabelSetProperty;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r5 = virtualinvoke r0.<org.apache.jackrabbit.webdav.version.LabelSetProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r6 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        r2 = r0.<org.apache.jackrabbit.webdav.version.LabelSetProperty: java.lang.String[] value>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r4 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r6, "label-name", $r4, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r6;
    }
