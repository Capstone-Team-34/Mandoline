org.apache.jackrabbit.webdav.bind.UnbindInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private java.lang.String segment
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/bind/UnbindInfo;");

        <org.apache.jackrabbit.webdav.bind.UnbindInfo: org.slf4j.Logger log> = $r0;

        return;
    }
    private void <init>()
    {
        org.apache.jackrabbit.webdav.bind.UnbindInfo r0;

        r0 := @this: org.apache.jackrabbit.webdav.bind.UnbindInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.jackrabbit.webdav.bind.UnbindInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.bind.UnbindInfo;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.bind.UnbindInfo: java.lang.String segment> = $r1;

        return;
    }
    public static org.apache.jackrabbit.webdav.bind.UnbindInfo createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        boolean $z0;
        org.slf4j.Logger $r2;
        org.apache.jackrabbit.webdav.DavException $r3;
        java.lang.String r4;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r5;
        java.lang.StringBuilder $r6;
        org.apache.jackrabbit.webdav.bind.UnbindInfo $r7;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 = <org.apache.jackrabbit.webdav.bind.BindConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "unbind", $r1);

        if $z0 != 0 goto label1;

        $r2 = <org.apache.jackrabbit.webdav.bind.UnbindInfo: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>("DAV:unbind element expected");

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r3;

     label1:
        r4 = null;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element)>($r0);

     label2:
        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r1 = <org.apache.jackrabbit.webdav.bind.BindConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "segment", $r1);

        if $z0 == 0 goto label4;

        if r4 != null goto label3;

        r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getText(org.w3c.dom.Element)>($r0);

        goto label2;

     label3:
        $r2 = <org.apache.jackrabbit.webdav.bind.UnbindInfo: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>("unexpected multiple occurrence of DAV:segment element");

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r3;

     label4:
        $r2 = <org.apache.jackrabbit.webdav.bind.UnbindInfo: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected element ");

        r4 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>(r4);

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r3;

     label5:
        if r4 != null goto label6;

        $r2 = <org.apache.jackrabbit.webdav.bind.UnbindInfo: org.slf4j.Logger log>;

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>("DAV:segment element expected");

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r3;

     label6:
        $r7 = new org.apache.jackrabbit.webdav.bind.UnbindInfo;

        specialinvoke $r7.<org.apache.jackrabbit.webdav.bind.UnbindInfo: void <init>(java.lang.String)>(r4);

        return $r7;
    }
    public java.lang.String getSegment()
    {
        org.apache.jackrabbit.webdav.bind.UnbindInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.bind.UnbindInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.bind.UnbindInfo: java.lang.String segment>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.bind.UnbindInfo r0;
        org.w3c.dom.Document $r1;
        java.lang.String $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        org.w3c.dom.Element $r4, $r5;

        r0 := @this: org.apache.jackrabbit.webdav.bind.UnbindInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = <org.apache.jackrabbit.webdav.bind.BindConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "unbind", $r3);

        $r3 = <org.apache.jackrabbit.webdav.bind.BindConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = r0.<org.apache.jackrabbit.webdav.bind.UnbindInfo: java.lang.String segment>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r1, "segment", $r3, $r2);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        return $r4;
    }
