org.apache.jackrabbit.webdav.util.EncodeUtil extends java.lang.Object
private static java.util.BitSet URISave
private static java.util.BitSet URISaveEx
public static final char[] hexTable
private static final org.slf4j.Logger log
    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.lang.String $r1;
        char[] $r2;
        java.util.BitSet $r3;
        int i0;
        java.lang.Object $r4;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/util/EncodeUtil;");

        <org.apache.jackrabbit.webdav.util.EncodeUtil: org.slf4j.Logger log> = $r0;

        $r1 = "0123456789abcdef";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.apache.jackrabbit.webdav.util.EncodeUtil: char[] hexTable> = $r2;

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave> = $r3;

        i0 = 97;

     label1:
        if i0 > 122 goto label2;

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 65;

     label3:
        if i0 > 90 goto label4;

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = 48;

     label5:
        if i0 > 57 goto label6;

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label5;

     label6:
        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(45);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(95);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(46);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(33);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(126);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(42);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(39);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(40);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(41);

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        $r4 = virtualinvoke $r3.<java.util.BitSet: java.lang.Object clone()>();

        $r3 = (java.util.BitSet) $r4;

        <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISaveEx> = $r3;

        $r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISaveEx>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>(47);

        return;
    }
    private void <init>()
    {
        org.apache.jackrabbit.webdav.util.EncodeUtil r0;

        r0 := @this: org.apache.jackrabbit.webdav.util.EncodeUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static byte decodeDigit(byte)
    {
        byte $b0;
        int $i1;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1;
        char $c2;
        java.lang.String $r2;

        $b0 := @parameter0: byte;

        if $b0 < 48 goto label1;

        if $b0 > 57 goto label1;

        $i1 = $b0 + -48;

        $b0 = (byte) $i1;

        return $b0;

     label1:
        if $b0 < 65 goto label2;

        if $b0 > 70 goto label2;

        $i1 = $b0 + -55;

        $b0 = (byte) $i1;

        return $b0;

     label2:
        if $b0 < 97 goto label3;

        if $b0 > 102 goto label3;

        $i1 = $b0 + -87;

        $b0 = (byte) $i1;

        return $b0;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Escape sequence is not hexadecimal: ");

        $c2 = (char) $b0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;
    }
    public static java.lang.String escape(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String escape(java.lang.String,char,boolean)>($r0, 37, 0);

        return $r0;
    }
    private static java.lang.String escape(java.lang.String, char, boolean)
    {
        java.lang.String $r0;
        char $c0, $c5;
        boolean $z0;
        byte b1;
        int i2, i3, i4, $i6;
        java.io.UnsupportedEncodingException r1;
        java.lang.StringBuffer r2;
        java.util.BitSet r3;
        byte[] $r4;
        char[] $r5;
        java.lang.InternalError $r6;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label10;

        r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISaveEx>;

     label01:
        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label02:
        r2 = new java.lang.StringBuffer;

        i3 = lengthof $r4;

     label03:
        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>(i3);

     label04:
        i3 = lengthof $r4;

        i4 = 0;

     label05:
        if i4 >= i3 goto label18;

        b1 = $r4[i4];

        i2 = b1 & 255;

     label06:
        $z0 = virtualinvoke r3.<java.util.BitSet: boolean get(int)>(i2);

     label07:
        if $z0 == 0 goto label11;

        if i2 == $c0 goto label11;

        $c5 = (char) i2;

     label08:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label09:
        i4 = i4 + 1;

        goto label05;

     label10:
        r3 = <org.apache.jackrabbit.webdav.util.EncodeUtil: java.util.BitSet URISave>;

        goto label01;

     label11:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

     label12:
        $r5 = <org.apache.jackrabbit.webdav.util.EncodeUtil: char[] hexTable>;

        $i6 = i2 >> 4;

        $i6 = $i6 & 15;

        $c5 = $r5[$i6];

     label13:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label14:
        $r5 = <org.apache.jackrabbit.webdav.util.EncodeUtil: char[] hexTable>;

        i2 = i2 & 15;

        $c5 = $r5[i2];

     label15:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label16:
        goto label09;

     label17:
        r1 := @caughtexception;

        $r6 = new java.lang.InternalError;

        $r0 = virtualinvoke r1.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>($r0);

        throw $r6;

     label18:
        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label19:
        return $r0;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label17;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label17;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label17;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label17;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label17;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label17;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label17;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label17;
    }
    public static java.lang.String escapePath(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String escape(java.lang.String,char,boolean)>($r0, 37, 1);

        return $r0;
    }
    public static java.lang.String unescape(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String unescape(java.lang.String,char)>($r0, 37);

        return $r0;
    }
    private static java.lang.String unescape(java.lang.String, char)
    {
        java.lang.String $r0;
        char $c0;
        byte b1;
        java.io.UnsupportedEncodingException r1;
        java.io.ByteArrayOutputStream r2;
        byte[] $r3;
        int $i2, $i3;
        java.lang.IllegalArgumentException $r4;
        java.lang.InternalError $r5;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

     label01:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label02:
        $i2 = lengthof $r3;

        if $i2 < 1 goto label03;

        $i2 = lengthof $r3;

        $i2 = $i2 + -1;

        b1 = $r3[$i2];

        if b1 == $c0 goto label04;

     label03:
        $i2 = lengthof $r3;

        if $i2 < 2 goto label08;

        $i2 = lengthof $r3;

        $i2 = $i2 + -2;

        b1 = $r3[$i2];

        if b1 != $c0 goto label08;

     label04:
        $r4 = new java.lang.IllegalArgumentException;

     label05:
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Premature end of escape sequence at end of input");

     label06:
        throw $r4;

     label07:
        r1 := @caughtexception;

        $r5 = new java.lang.InternalError;

        $r0 = virtualinvoke r1.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.InternalError: void <init>(java.lang.String)>($r0);

        throw $r5;

     label08:
        r2 = new java.io.ByteArrayOutputStream;

        $i2 = lengthof $r3;

     label09:
        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i2);

     label10:
        $i2 = 0;

     label11:
        $i3 = lengthof $r3;

        if $i2 >= $i3 goto label20;

        b1 = $r3[$i2];

        if b1 != $c0 goto label18;

        $i2 = $i2 + 1;

        b1 = $r3[$i2];

     label12:
        b1 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: byte decodeDigit(byte)>(b1);

     label13:
        $i3 = b1 << 4;

        $i2 = $i2 + 1;

        b1 = $r3[$i2];

     label14:
        b1 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: byte decodeDigit(byte)>(b1);

     label15:
        $i3 = $i3 + b1;

     label16:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i3);

     label17:
        $i2 = $i2 + 1;

        goto label11;

     label18:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(b1);

     label19:
        goto label17;

     label20:
        $r0 = new java.lang.String;

     label21:
        $r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "utf-8");

     label22:
        return $r0;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label07;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label07;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label07;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label07;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label07;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label07;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label07;
    }
