org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap extends java.util.HashMap implements org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface
    private void <init>()
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        return;
    }
    void <init>(org.apache.jackrabbit.webdav.header.IfHeader$1)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap r0;
        org.apache.jackrabbit.webdav.header.IfHeader$1 $r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.header.IfHeader$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap: void <init>()>();

        return;
    }
    public boolean matches(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap r0;
        java.lang.String $r1, $r2, $r3, $r6;
        org.slf4j.Logger $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList r8;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger access$300()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matches: Trying to match resource=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", token=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap: java.lang.Object get(java.lang.Object)>($r1);

        r8 = (org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList) $r7;

        if r8 != null goto label1;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger access$300()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matches: No entry for tag ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", assuming match");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r1);

        return 1;

     label1:
        $z0 = virtualinvoke r8.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList: boolean matches(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $z0;
    }
