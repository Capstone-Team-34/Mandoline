org.apache.jackrabbit.webdav.header.LabelHeader extends java.lang.Object implements org.apache.jackrabbit.webdav.header.Header
private static org.slf4j.Logger log
private final java.lang.String label
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/header/LabelHeader;");

        <org.apache.jackrabbit.webdav.header.LabelHeader: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.jackrabbit.webdav.header.LabelHeader r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.LabelHeader;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null is not a valid label.");

        throw $r2;

     label1:
        r0.<org.apache.jackrabbit.webdav.header.LabelHeader: java.lang.String label> = $r1;

        return;
    }
    public static org.apache.jackrabbit.webdav.header.LabelHeader parse(org.apache.jackrabbit.webdav.WebdavRequest)
    {
        org.apache.jackrabbit.webdav.WebdavRequest $r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.header.LabelHeader $r2;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.WebdavRequest;

        $r1 = interfaceinvoke $r0.<org.apache.jackrabbit.webdav.WebdavRequest: java.lang.String getHeader(java.lang.String)>("Label");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new org.apache.jackrabbit.webdav.header.LabelHeader;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String unescape(java.lang.String)>($r1);

        specialinvoke $r2.<org.apache.jackrabbit.webdav.header.LabelHeader: void <init>(java.lang.String)>($r1);

        return $r2;
    }
    public java.lang.String getHeaderName()
    {
        org.apache.jackrabbit.webdav.header.LabelHeader r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.LabelHeader;

        return "Label";
    }
    public java.lang.String getHeaderValue()
    {
        org.apache.jackrabbit.webdav.header.LabelHeader r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.LabelHeader;

        $r1 = r0.<org.apache.jackrabbit.webdav.header.LabelHeader: java.lang.String label>;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String escape(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String getLabel()
    {
        org.apache.jackrabbit.webdav.header.LabelHeader r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.LabelHeader;

        r1 = r0.<org.apache.jackrabbit.webdav.header.LabelHeader: java.lang.String label>;

        return r1;
    }
