org.apache.jackrabbit.webdav.header.IfHeader extends java.lang.Object implements org.apache.jackrabbit.webdav.header.Header
private static final org.slf4j.Logger log
private java.util.List allNotTokens
private java.util.List allTokens
private final java.lang.String headerValue
private final org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/header/IfHeader;");

        <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(javax.servlet.http.HttpServletRequest)
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.ArrayList $r2;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface $r4;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allTokens> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allNotTokens> = $r2;

        $r3 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("If");

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue> = $r3;

        $r4 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface parse()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader> = $r4;

        return;
    }
    public void <init>(java.lang.String[])
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.lang.String[] $r1;
        java.lang.StringBuffer r2, $r7;
        int i0, i1;
        java.lang.String r3;
        java.util.ArrayList $r4;
        java.util.List $r5, $r6;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface $r8;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allTokens> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allNotTokens> = $r4;

        $r5 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allTokens>;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r1[i1];

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        i1 = i1 + 1;

        goto label1;

     label2:
        r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue> = r3;

        $r8 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface parse()>();

        r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader> = $r8;

        return;
    }
    static org.slf4j.Logger access$300()
    {
        org.slf4j.Logger r0;

        r0 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        return r0;
    }
    private void logIllegalState(java.lang.String, int, java.lang.String, java.io.StringReader)
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.lang.String $r1, $r2, r5;
        java.io.StringReader $r3;
        java.io.IOException r4;
        int $i0, $i1;
        org.slf4j.Logger $r6;
        java.lang.StringBuilder $r7;
        char $c2;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.io.StringReader;

        if $i0 >= 0 goto label10;

        r5 = "<EOF>";

     label01:
        $r6 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logIllegalState: Unexpected character \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in state ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected any of ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r1);

        if $r3 == null goto label12;

        if $i0 < 0 goto label12;

        $r6 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logIllegalState: Catch up to any of ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r1);

     label03:
        virtualinvoke $r3.<java.io.StringReader: void mark(int)>(1);

        $i0 = virtualinvoke $r3.<java.io.StringReader: int read()>();

     label04:
        if $i0 < 0 goto label07;

     label05:
        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($i0);

     label06:
        if $i1 < 0 goto label03;

     label07:
        if $i0 < 0 goto label12;

     label08:
        virtualinvoke $r3.<java.io.StringReader: void reset()>();

     label09:
        return;

     label10:
        $c2 = (char) $i0;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        goto label01;

     label11:
        r4 := @caughtexception;

        $r6 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logIllegalState: IO Problem catching up to any of ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r1);

     label12:
        return;

        catch java.io.IOException from label02 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label08 to label09 with label11;
    }
    private org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface parse()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.StringReader r1, r3;
        java.lang.String $r2;
        int $i0, $i1;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList $r4;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface r5;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap $r6;
        java.lang.Throwable $r7;
        org.slf4j.Logger $r8;
        java.io.IOException $r9;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r2 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue>;

        if $r2 == null goto label17;

        $r2 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label17;

        r3 = null;

        $i0 = 0;

     label01:
        r1 = new java.io.StringReader;

        $r2 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue>;

        specialinvoke r1.<java.io.StringReader: void <init>(java.lang.String)>($r2);

     label02:
        virtualinvoke r1.<java.io.StringReader: void mark(int)>(1);

        $i1 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: int readWhiteSpace(java.io.Reader)>(r1);

     label03:
        $i0 = $i1;

     label04:
        virtualinvoke r1.<java.io.StringReader: void reset()>();

     label05:
        if $i0 != 40 goto label09;

     label06:
        $r4 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList parseUntagged(java.io.StringReader)>(r1);

     label07:
        r5 = $r4;

     label08:
        if r1 == null goto label20;

        virtualinvoke r1.<java.io.StringReader: void close()>();

        return r5;

     label09:
        if $i0 != 60 goto label12;

     label10:
        $r6 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap parseTagged(java.io.StringReader)>(r1);

     label11:
        r5 = $r6;

        goto label08;

     label12:
        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("If", $i0, "(<", null);

     label13:
        r5 = null;

        goto label08;

     label14:
        $r7 := @caughtexception;

     label15:
        if r3 == null goto label16;

        virtualinvoke r3.<java.io.StringReader: void close()>();

     label16:
        throw $r7;

     label17:
        $r8 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>("IfHeader: No If header in request");

        return null;

     label18:
        $r7 := @caughtexception;

        r3 = r1;

        goto label15;

     label19:
        $r9 := @caughtexception;

        goto label05;

     label20:
        return r5;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label02 to label03 with label19;
        catch java.io.IOException from label04 to label05 with label19;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
    }
    private org.apache.jackrabbit.webdav.header.IfHeader$IfList parseIfList(java.io.StringReader) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.StringReader $r1;
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r2;
        boolean z0;
        int $i0;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryToken $r4;
        java.util.List $r5;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryEtag $r6;
        org.slf4j.Logger $r7;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.io.StringReader;

        r2 = new org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        specialinvoke r2.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: void <init>(org.apache.jackrabbit.webdav.header.IfHeader$1)>(null);

        z0 = 1;

     label01:
        $i0 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: int readWhiteSpace(java.io.Reader)>($r1);

        lookupswitch($i0)
        {
            case 41: goto label10;
            case 60: goto label06;
            case 78: goto label03;
            case 91: goto label09;
            case 110: goto label03;
            default: goto label02;
        };

     label02:
        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("IfList", $i0, "nN<[)", $r1);

        if $i0 >= 0 goto label01;

        return r2;

     label03:
        $i0 = virtualinvoke $r1.<java.io.StringReader: int read()>();

        if $i0 == 111 goto label04;

        if $i0 == 79 goto label04;

        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("IfList-Not", $i0, "o", null);

        goto label01;

     label04:
        $i0 = virtualinvoke $r1.<java.io.StringReader: int read()>();

        if $i0 == 116 goto label05;

        if $i0 == 84 goto label05;

        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("IfList-Not", $i0, "t", null);

        goto label01;

     label05:
        z0 = 0;

        goto label01;

     label06:
        $r3 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String readWord(java.io.Reader,char)>($r1, 62);

        if $r3 == null goto label01;

        $r4 = new org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryToken;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryToken: void <init>(java.lang.String,boolean)>($r3, z0);

        virtualinvoke r2.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: boolean add(org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)>($r4);

        if z0 == 0 goto label08;

        $r5 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allTokens>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

     label07:
        z0 = 1;

        goto label01;

     label08:
        $r5 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allNotTokens>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label07;

     label09:
        $r3 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String readWord(java.io.Reader,char)>($r1, 93);

        if $r3 == null goto label01;

        $r6 = new org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryEtag;

        specialinvoke $r6.<org.apache.jackrabbit.webdav.header.IfHeader$IfListEntryEtag: void <init>(java.lang.String,boolean)>($r3, z0);

        virtualinvoke r2.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: boolean add(org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)>($r6);

        z0 = 1;

        goto label01;

     label10:
        $r7 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>("parseIfList: End of If list, terminating loop");

        return r2;
    }
    private org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap parseTagged(java.io.StringReader)
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.StringReader $r1;
        java.io.IOException r2;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap r3;
        int $i0;
        java.lang.String $r4;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList $r5;
        org.slf4j.Logger $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.io.StringReader;

        r3 = new org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap;

        specialinvoke r3.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap: void <init>(org.apache.jackrabbit.webdav.header.IfHeader$1)>(null);

     label01:
        $i0 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: int readWhiteSpace(java.io.Reader)>($r1);

     label02:
        if $i0 >= 0 goto label03;

        return r3;

     label03:
        if $i0 != 60 goto label09;

     label04:
        $r4 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String readWord(java.io.Reader,char)>($r1, 62);

     label05:
        if $r4 == null goto label11;

     label06:
        $r5 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList parseUntagged(java.io.StringReader)>($r1);

        virtualinvoke r3.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label07:
        goto label01;

     label08:
        r2 := @caughtexception;

        $r6 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseTagged: Problem parsing If header: ");

        $r4 = virtualinvoke r2.<java.io.IOException: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>($r4);

        return r3;

     label09:
        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("Tagged", $i0, "<", $r1);

     label10:
        goto label01;

     label11:
        return r3;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label08;
    }
    private org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList parseUntagged(java.io.StringReader)
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.StringReader $r1;
        java.io.IOException r2;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList r3;
        int $i0;
        org.apache.jackrabbit.webdav.header.IfHeader$IfList $r4;
        org.slf4j.Logger $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.io.StringReader;

        r3 = new org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList;

        specialinvoke r3.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList: void <init>(org.apache.jackrabbit.webdav.header.IfHeader$1)>(null);

     label01:
        virtualinvoke $r1.<java.io.StringReader: void mark(int)>(1);

        $i0 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: int readWhiteSpace(java.io.Reader)>($r1);

     label02:
        if $i0 >= 0 goto label03;

        return r3;

     label03:
        if $i0 != 40 goto label07;

     label04:
        $r4 = specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfList parseIfList(java.io.StringReader)>($r1);

        virtualinvoke r3.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderList: boolean add(java.lang.Object)>($r4);

     label05:
        goto label01;

     label06:
        r2 := @caughtexception;

        $r5 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseUntagged: Problem parsing If header: ");

        $r7 = virtualinvoke r2.<java.io.IOException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>($r7);

        return r3;

     label07:
        if $i0 != 60 goto label10;

     label08:
        virtualinvoke $r1.<java.io.StringReader: void reset()>();

     label09:
        return r3;

     label10:
        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader: void logIllegalState(java.lang.String,int,java.lang.String,java.io.StringReader)>("Untagged", $i0, "(", $r1);

     label11:
        goto label01;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label08 to label09 with label06;
        catch java.io.IOException from label10 to label11 with label06;
    }
    private int readWhiteSpace(java.io.Reader) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.Reader $r1;
        int $i0;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.io.Reader;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

     label1:
        if $i0 < 0 goto label2;

        $c1 = (char) $i0;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        goto label1;

     label2:
        return $i0;
    }
    private java.lang.String readWord(java.io.Reader, char) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.io.Reader $r1;
        char $c0, $c2;
        java.lang.StringBuffer r2;
        int $i1;
        org.slf4j.Logger $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.io.Reader;

        $c0 := @parameter1: char;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

     label1:
        if $i1 < 0 goto label2;

        if $i1 == $c0 goto label2;

        $c2 = (char) $i1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        goto label1;

     label2:
        if $i1 >= 0 goto label3;

        $r3 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String)>("readWord: Unexpected end of input reading word");

        return null;

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
    public java.util.Iterator getAllNotTokens()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r2 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allNotTokens>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
    public java.util.Iterator getAllTokens()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r2 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.util.List allTokens>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
    public java.lang.String getHeaderName()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        return "If";
    }
    public java.lang.String getHeaderValue()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        r1 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: java.lang.String headerValue>;

        return r1;
    }
    public boolean hasValue()
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface $r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean matches(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.header.IfHeader r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface $r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader>;

        if $r4 != null goto label1;

        $r5 = <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("matches: No If header, assume match");

        return 1;

     label1:
        $r4 = r0.<org.apache.jackrabbit.webdav.header.IfHeader: org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface ifHeader>;

        $z0 = interfaceinvoke $r4.<org.apache.jackrabbit.webdav.header.IfHeader$IfHeaderInterface: boolean matches(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $z0;
    }
