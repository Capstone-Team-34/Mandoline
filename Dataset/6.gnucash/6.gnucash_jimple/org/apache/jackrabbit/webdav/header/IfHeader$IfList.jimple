org.apache.jackrabbit.webdav.header.IfHeader$IfList extends java.util.ArrayList
    private void <init>()
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }
    void <init>(org.apache.jackrabbit.webdav.header.IfHeader$1)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        org.apache.jackrabbit.webdav.header.IfHeader$1 $r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.header.IfHeader$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: void <init>()>();

        return;
    }
    public volatile void add(int, java.lang.Object)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry) $r1;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: void add(int,org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)>($i0, $r2);

        return;
    }
    public void add(int, org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        int $i0;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry $r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry;

        specialinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public volatile boolean add(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        boolean $z0;
        java.lang.Object $r1;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry) $r1;

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: boolean add(org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)>($r2);

        return $z0;
    }
    public boolean add(org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry $r1;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $z0;
    }
    public boolean match(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.header.IfHeader$IfList r0;
        java.lang.String $r1, $r2, $r5;
        org.slf4j.Logger $r3;
        java.lang.StringBuilder $r4;
        int i0, $i1;
        java.lang.Object $r6;
        org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry r7;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.IfHeader$IfList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger access$300()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("match: Trying to match token=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", etag=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r5);

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: int size()>();

        if i0 >= $i1 goto label3;

        $r6 = virtualinvoke r0.<org.apache.jackrabbit.webdav.header.IfHeader$IfList: java.lang.Object get(int)>(i0);

        r7 = (org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry) $r6;

        $z0 = virtualinvoke r7.<org.apache.jackrabbit.webdav.header.IfHeader$IfListEntry: boolean match(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.header.IfHeader: org.slf4j.Logger access$300()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("match: Entry ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r1);

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }
