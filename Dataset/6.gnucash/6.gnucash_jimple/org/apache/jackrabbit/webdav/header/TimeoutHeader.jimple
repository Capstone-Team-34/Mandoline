org.apache.jackrabbit.webdav.header.TimeoutHeader extends java.lang.Object implements org.apache.jackrabbit.webdav.header.Header org.apache.jackrabbit.webdav.DavConstants
private static org.slf4j.Logger log
private final long timeout
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/header/TimeoutHeader;");

        <org.apache.jackrabbit.webdav.header.TimeoutHeader: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(long)
    {
        org.apache.jackrabbit.webdav.header.TimeoutHeader r0;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.header.TimeoutHeader;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.TimeoutHeader: long timeout> = $l0;

        return;
    }
    public static long parse(java.lang.String, long)
    {
        java.lang.String $r0, $r2;
        long $l0, $l5;
        java.lang.NumberFormatException r1;
        int $i1, i2, $i3;
        char $c4;
        boolean $z0;
        org.slf4j.Logger $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        if $r0 == null goto label6;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label6;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("Second-");

        if $i1 < 0 goto label5;

        $i1 = $i1 + 7;

        i2 = $i1;

     label1:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i2 >= $i3 goto label2;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, i2);

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label3:
        $l0 = 1000L * $l5;

        return $l0;

     label4:
        r1 := @caughtexception;

        $r3 = <org.apache.jackrabbit.webdav.header.TimeoutHeader: org.slf4j.Logger log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid timeout format: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String)>($r0);

        return $l0;

     label5:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Infinite");

        if $z0 == 0 goto label6;

        return 2147483647L;

     label6:
        return $l0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }
    public static org.apache.jackrabbit.webdav.header.TimeoutHeader parse(javax.servlet.http.HttpServletRequest, long)
    {
        javax.servlet.http.HttpServletRequest $r0;
        long $l0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.header.TimeoutHeader $r2;

        $r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $l0 := @parameter1: long;

        $r1 = interfaceinvoke $r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Timeout");

        $l0 = staticinvoke <org.apache.jackrabbit.webdav.header.TimeoutHeader: long parse(java.lang.String,long)>($r1, $l0);

        $r2 = new org.apache.jackrabbit.webdav.header.TimeoutHeader;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.header.TimeoutHeader: void <init>(long)>($l0);

        return $r2;
    }
    public java.lang.String getHeaderName()
    {
        org.apache.jackrabbit.webdav.header.TimeoutHeader r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.TimeoutHeader;

        return "Timeout";
    }
    public java.lang.String getHeaderValue()
    {
        org.apache.jackrabbit.webdav.header.TimeoutHeader r0;
        long $l0;
        byte $b1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.TimeoutHeader;

        $l0 = r0.<org.apache.jackrabbit.webdav.header.TimeoutHeader: long timeout>;

        $b1 = $l0 cmp 2147483647L;

        if $b1 != 0 goto label1;

        return "Infinite";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Second-");

        $l0 = r0.<org.apache.jackrabbit.webdav.header.TimeoutHeader: long timeout>;

        $l0 = $l0 / 1000L;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public long getTimeout()
    {
        org.apache.jackrabbit.webdav.header.TimeoutHeader r0;
        long l0;

        r0 := @this: org.apache.jackrabbit.webdav.header.TimeoutHeader;

        l0 = r0.<org.apache.jackrabbit.webdav.header.TimeoutHeader: long timeout>;

        return l0;
    }
