org.apache.jackrabbit.webdav.header.CodedUrlHeader extends java.lang.Object implements org.apache.jackrabbit.webdav.header.Header
private static org.slf4j.Logger log
private final java.lang.String headerName
private final java.lang.String headerValue
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/header/CodedUrlHeader;");

        <org.apache.jackrabbit.webdav.header.CodedUrlHeader: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerName> = $r1;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(">");

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerValue> = $r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.header.CodedUrlHeader parse(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        javax.servlet.http.HttpServletRequest $r0;
        java.lang.String $r1, $r3;
        org.apache.jackrabbit.webdav.header.CodedUrlHeader $r2;

        $r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke $r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($r1);

        $r2 = new org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        return $r2;
    }
    public java.lang.String getCodedUrl()
    {
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String[] getCodedUrls()>();

        if $r1 == null goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }
    public java.lang.String[] getCodedUrls()
    {
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r0;
        java.lang.String $r1;
        java.lang.String[] $r2, r3;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        $r1 = r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerValue>;

        if $r1 == null goto label4;

        $r1 = r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerValue>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r2;

        r3 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label5;

        $r1 = $r2[$i0];

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(60);

        if $i2 >= 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CodedURL header value:");

        $r1 = $r2[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        $r1 = $r2[$i0];

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(62, $i2);

        if $i1 >= 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CodedURL header value:");

        $r1 = $r2[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label3:
        $r1 = $r2[$i0];

        $i2 = $i2 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        r3[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        return null;

     label5:
        return r3;
    }
    public java.lang.String getHeaderName()
    {
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        r1 = r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerName>;

        return r1;
    }
    public java.lang.String getHeaderValue()
    {
        org.apache.jackrabbit.webdav.header.CodedUrlHeader r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.header.CodedUrlHeader;

        r1 = r0.<org.apache.jackrabbit.webdav.header.CodedUrlHeader: java.lang.String headerValue>;

        return r1;
    }
