org.apache.jackrabbit.webdav.header.OverwriteHeader extends java.lang.Object implements org.apache.jackrabbit.webdav.header.Header
public static final java.lang.String OVERWRITE_FALSE
public static final java.lang.String OVERWRITE_TRUE
private static org.slf4j.Logger log
private final boolean doOverwrite
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/header/OverwriteHeader;");

        <org.apache.jackrabbit.webdav.header.OverwriteHeader: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(javax.servlet.http.HttpServletRequest)
    {
        org.apache.jackrabbit.webdav.header.OverwriteHeader r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.OverwriteHeader;

        $r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Overwrite");

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("T");

        r0.<org.apache.jackrabbit.webdav.header.OverwriteHeader: boolean doOverwrite> = $z0;

        return;

     label1:
        r0.<org.apache.jackrabbit.webdav.header.OverwriteHeader: boolean doOverwrite> = 1;

        return;
    }
    public void <init>(boolean)
    {
        org.apache.jackrabbit.webdav.header.OverwriteHeader r0;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.OverwriteHeader;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.header.OverwriteHeader: boolean doOverwrite> = $z0;

        return;
    }
    public java.lang.String getHeaderName()
    {
        org.apache.jackrabbit.webdav.header.OverwriteHeader r0;

        r0 := @this: org.apache.jackrabbit.webdav.header.OverwriteHeader;

        return "Overwrite";
    }
    public java.lang.String getHeaderValue()
    {
        org.apache.jackrabbit.webdav.header.OverwriteHeader r0;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.OverwriteHeader;

        $z0 = r0.<org.apache.jackrabbit.webdav.header.OverwriteHeader: boolean doOverwrite>;

        if $z0 == 0 goto label1;

        return "T";

     label1:
        return "F";
    }
    public boolean isOverwrite()
    {
        org.apache.jackrabbit.webdav.header.OverwriteHeader r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.header.OverwriteHeader;

        z0 = r0.<org.apache.jackrabbit.webdav.header.OverwriteHeader: boolean doOverwrite>;

        return z0;
    }
