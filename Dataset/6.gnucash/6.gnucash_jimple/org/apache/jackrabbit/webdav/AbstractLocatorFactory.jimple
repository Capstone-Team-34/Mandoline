org.apache.jackrabbit.webdav.AbstractLocatorFactory extends java.lang.Object implements org.apache.jackrabbit.webdav.DavLocatorFactory
private static org.slf4j.Logger log
private final java.lang.String pathPrefix
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/AbstractLocatorFactory;");

        <org.apache.jackrabbit.webdav.AbstractLocatorFactory: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix> = $r1;

        return;
    }
    public org.apache.jackrabbit.webdav.DavResourceLocator createResourceLocator(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory r0;
        java.lang.String $r1, $r3, $r5;
        java.lang.StringBuffer r2;
        java.lang.IllegalArgumentException $r4;
        int $i0;
        boolean $z0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl $r6;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r1 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request handle must not be null.");

        throw $r4;

     label1:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        if $r1 == null goto label4;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r5);

        if $z0 != 0 goto label3;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label3:
        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String pathPrefix>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label4:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label5:
        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label7;

        $r1 = null;

        $r3 = null;

     label6:
        $r6 = new org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: void <init>(org.apache.jackrabbit.webdav.AbstractLocatorFactory,java.lang.String,java.lang.String,java.lang.String,org.apache.jackrabbit.webdav.AbstractLocatorFactory,org.apache.jackrabbit.webdav.AbstractLocatorFactory$1)>(r0, $r5, $r3, $r1, r0, null);

        return $r6;

     label7:
        $r5 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String unescape(java.lang.String)>($r3);

        $r1 = $r5;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int,int)>(47, 1);

        if $i0 != -1 goto label8;

        $r3 = $r5;

        goto label6;

     label8:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.util.EncodeUtil: java.lang.String unescape(java.lang.String)>($r3);

        goto label6;
    }
    public org.apache.jackrabbit.webdav.DavResourceLocator createResourceLocator(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory r0;
        java.lang.String $r1, $r2, $r3;
        org.apache.jackrabbit.webdav.DavResourceLocator $r4;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: org.apache.jackrabbit.webdav.DavResourceLocator createResourceLocator(java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r2, $r3, 1);

        return $r4;
    }
    public org.apache.jackrabbit.webdav.DavResourceLocator createResourceLocator(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.jackrabbit.webdav.AbstractLocatorFactory r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl $r4;

        r0 := @this: org.apache.jackrabbit.webdav.AbstractLocatorFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label2;

     label1:
        $r4 = new org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.AbstractLocatorFactory$DavResourceLocatorImpl: void <init>(org.apache.jackrabbit.webdav.AbstractLocatorFactory,java.lang.String,java.lang.String,java.lang.String,org.apache.jackrabbit.webdav.AbstractLocatorFactory,org.apache.jackrabbit.webdav.AbstractLocatorFactory$1)>(r0, $r1, $r2, $r3, r0, null);

        return $r4;

     label2:
        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.AbstractLocatorFactory: java.lang.String getResourcePath(java.lang.String,java.lang.String)>($r3, $r2);

        goto label1;
    }
protected abstract java.lang.String getRepositoryPath(java.lang.String, java.lang.String) { 
// no body
} 
protected abstract java.lang.String getResourcePath(java.lang.String, java.lang.String) { 
// no body
} 
