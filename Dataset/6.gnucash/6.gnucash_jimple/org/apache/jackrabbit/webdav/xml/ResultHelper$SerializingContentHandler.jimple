org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler extends org.xml.sax.helpers.DefaultHandler
private final java.util.List addedPrefixMappings
private final org.xml.sax.ContentHandler handler
private boolean hasMappings
private java.util.List prefixList
private java.util.Map prefixToUriMap
private java.util.List uriList
private java.util.Map uriToPrefixMap
    private void <init>(org.xml.sax.ContentHandler)
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        org.xml.sax.ContentHandler $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List uriList> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap> = $r3;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap> = $r3;

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: boolean hasMappings> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings> = $r2;

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler> = $r1;

        return;
    }
    void <init>(org.xml.sax.ContentHandler, org.apache.jackrabbit.webdav.xml.ResultHelper$1)
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        org.xml.sax.ContentHandler $r1;
        org.apache.jackrabbit.webdav.xml.ResultHelper$1 $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.ResultHelper$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void <init>(org.xml.sax.ContentHandler)>($r1);

        return;
    }
    private void checkPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1, $r2, r4;
        int i0;
        boolean $z0;
        java.util.Map $r3;
        java.lang.StringBuilder $r5, $r9;
        java.util.List $r6, $r8;
        java.lang.Object $r7;
        java.util.ArrayList $r10;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label5;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 <= 0 goto label5;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("xml");

        if $z0 != 0 goto label5;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label5;

        r4 = "ns";

        if $r2 == null goto label1;

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 <= 0 goto label1;

        i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(58);

        if i0 == -1 goto label1;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        $r2 = r4;

        i0 = 2;

     label2:
        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i0 = i0 + -1;

        $r6 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (java.util.List) $r7;

        if $r6 != null goto label4;

        $r10 = new java.util.ArrayList;

        $r6 = $r10;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        interfaceinvoke $r8.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r10);

     label4:
        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

        virtualinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>(r4, $r1);

     label5:
        return;
    }
    private void clearMappings()
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.util.List $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: boolean hasMappings> = 0;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List uriList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        char[] $r1;
        int $i0, $i1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, $i0, $i1);

        return;
    }
    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.util.Map $r1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void clearMappings()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }
    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1, $r2, $r3;
        int i0;
        java.util.Map $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        org.xml.sax.ContentHandler $r7;
        java.util.List $r8;
        java.util.Iterator $r9;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r1 == null goto label1;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 == 0 goto label1;

        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r7 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r7.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r8 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        i0 = i0 + -1;

        $r8 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        $r6 = interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i0);

        $r8 = (java.util.List) $r6;

        if $r8 == null goto label3;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r6;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void endPrefixMapping(java.lang.String)>($r1);

        goto label2;

     label3:
        return;
    }
    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1;
        java.util.Map $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.List $r5;
        int $i0;
        org.xml.sax.ContentHandler $r6;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        $z0 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: boolean hasMappings>;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        $i0 = interfaceinvoke $r5.<java.util.List: int lastIndexOf(java.lang.Object)>($r1);

        if $i0 == -1 goto label2;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>($i0);

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List uriList>;

        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>($i0);

     label2:
        $r6 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r1);

        return;
    }
    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        char[] $r1;
        int $i0, $i1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>($r1, $i0, $i1);

        return;
    }
    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1, $r2;
        org.xml.sax.ContentHandler $r3;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        org.xml.sax.Locator $r1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: org.xml.sax.Locator;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r1);

        return;
    }
    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void skippedEntity(java.lang.String)>($r1);

        return;
    }
    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.util.Map $r1;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void clearMappings()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void startDocument()>();

        return;
    }
    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1, $r2, $r3, $r6, $r7, r12, $r13;
        org.xml.sax.Attributes r4;
        java.util.List $r5;
        int i0, $i1, i2, i3;
        java.util.Map $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9;
        java.lang.Object $r10;
        org.xml.sax.helpers.AttributesImpl r11;
        org.xml.sax.SAXException $r14;
        org.xml.sax.ContentHandler $r15;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List addedPrefixMappings>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(null);

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void checkPrefixMapping(java.lang.String,java.lang.String)>($r1, $r3);

        i0 = 0;

     label01:
        $i1 = interfaceinvoke r4.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label02;

        $r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i0);

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void checkPrefixMapping(java.lang.String,java.lang.String)>($r6, $r7);

        i0 = i0 + 1;

        goto label01;

     label02:
        if $r1 == null goto label03;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 == 0 goto label03;

        $r8 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label03;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $z0 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: boolean hasMappings>;

        if $z0 == 0 goto label18;

        r11 = null;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = interfaceinvoke r4.<org.xml.sax.Attributes: int getLength()>();

        i2 = 0;

     label04:
        if i2 >= i0 goto label15;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List uriList>;

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.String) $r10;

        $r5 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (java.lang.String) $r10;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label07;

        r12 = "xmlns";

     label05:
        $z0 = 0;

        i3 = 0;

     label06:
        if i3 >= $i1 goto label09;

        $r13 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i3);

        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label12;

        $r13 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i3);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label08;

        $r14 = new org.xml.sax.SAXException;

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>("URI in prefix mapping and attribute do not match");

        throw $r14;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label08:
        $z0 = 1;

     label09:
        if $z0 != 0 goto label11;

        if r11 != null goto label10;

        if $i1 != 0 goto label13;

        r11 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke r11.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

     label10:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label14;

        virtualinvoke r11.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", r12, r12, "CDATA", $r6);

     label11:
        i2 = i2 + 1;

        goto label04;

     label12:
        i3 = i3 + 1;

        goto label06;

     label13:
        r11 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke r11.<org.xml.sax.helpers.AttributesImpl: void <init>(org.xml.sax.Attributes)>(r4);

        goto label10;

     label14:
        virtualinvoke r11.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", $r7, r12, "CDATA", $r6);

        goto label11;

     label15:
        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void clearMappings()>();

        $r15 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        if r11 != null goto label17;

     label16:
        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, r4);

        return;

     label17:
        r4 = r11;

        goto label16;

     label18:
        $r15 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, r4);

        return;
    }
    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler r0;
        java.lang.String $r1, $r2, $r6;
        boolean $z0;
        java.util.List $r3;
        int $i0;
        java.util.Map $r4;
        java.lang.StringBuilder $r5;
        org.xml.sax.ContentHandler $r7;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("xml");

        if $z0 != 0 goto label2;

        r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: boolean hasMappings> = 1;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List prefixList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.List uriList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

     label1:
        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map prefixToUriMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        $r7 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r7.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label3:
        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: java.util.Map uriToPrefixMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        goto label1;
    }
