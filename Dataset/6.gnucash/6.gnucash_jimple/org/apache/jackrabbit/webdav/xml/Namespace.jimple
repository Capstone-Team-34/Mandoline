org.apache.jackrabbit.webdav.xml.Namespace extends java.lang.Object
public static final org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE
public static final org.apache.jackrabbit.webdav.xml.Namespace XMLNS_NAMESPACE
public static final org.apache.jackrabbit.webdav.xml.Namespace XML_NAMESPACE
private static org.slf4j.Logger log
private final java.lang.String prefix
private final java.lang.String uri
    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/xml/Namespace;");

        <org.apache.jackrabbit.webdav.xml.Namespace: org.slf4j.Logger log> = $r0;

        $r1 = new org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke $r1.<org.apache.jackrabbit.webdav.xml.Namespace: void <init>(java.lang.String,java.lang.String)>("", "");

        <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE> = $r1;

        $r1 = new org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke $r1.<org.apache.jackrabbit.webdav.xml.Namespace: void <init>(java.lang.String,java.lang.String)>("xml", "http://www.w3.org/XML/1998/namespace");

        <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace XML_NAMESPACE> = $r1;

        $r1 = new org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke $r1.<org.apache.jackrabbit.webdav.xml.Namespace: void <init>(java.lang.String,java.lang.String)>("xmlns", "http://www.w3.org/2000/xmlns/");

        <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace XMLNS_NAMESPACE> = $r1;

        return;
    }
    private void <init>(java.lang.String, java.lang.String)
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String prefix> = $r1;

        r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String uri> = $r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String,java.lang.String)>("", $r0);

        return $r1;
    }
    public static org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

        $r0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getPrefix()>();

     label1:
        if $r1 != null goto label2;

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

        $r1 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getURI()>();

     label2:
        $r2 = new org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.Object r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        r2 := @parameter0: java.lang.Object;

        if r2 != r0 goto label1;

        return 1;

     label1:
        $z0 = r2 instanceof org.apache.jackrabbit.webdav.xml.Namespace;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String uri>;

        r0 = (org.apache.jackrabbit.webdav.xml.Namespace) r2;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String uri>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label2:
        return 0;
    }
    public java.lang.String getPrefix()
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        r1 = r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String prefix>;

        return r1;
    }
    public java.lang.String getURI()
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        r1 = r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String uri>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String uri>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
    public boolean isSame(java.lang.String)
    {
        org.apache.jackrabbit.webdav.xml.Namespace r0, $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.xml.Namespace;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.xml.Namespace: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }
