org.apache.jackrabbit.webdav.xml.ElementIterator extends java.lang.Object implements java.util.Iterator
private static org.slf4j.Logger log
private final java.lang.String localName
private final org.apache.jackrabbit.webdav.xml.Namespace namespace
private org.w3c.dom.Element next
private final javax.xml.namespace.QName qName
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/xml/ElementIterator;");

        <org.apache.jackrabbit.webdav.xml.ElementIterator: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, null, null);

        return;
    }
    public void <init>(org.w3c.dom.Element, java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;
        java.lang.String $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 := @parameter0: org.w3c.dom.Element;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: java.lang.String localName> = $r2;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.apache.jackrabbit.webdav.xml.Namespace namespace> = $r3;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: javax.xml.namespace.QName qName> = null;

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: void seek(org.w3c.dom.Element)>($r1);

        return;
    }
    public void <init>(org.w3c.dom.Element, javax.xml.namespace.QName)
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 := @parameter0: org.w3c.dom.Element;

        $r2 := @parameter1: javax.xml.namespace.QName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: java.lang.String localName> = null;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.apache.jackrabbit.webdav.xml.Namespace namespace> = null;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: javax.xml.namespace.QName qName> = $r2;

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: void seek(org.w3c.dom.Element)>($r1);

        return;
    }
    private boolean matchesName(org.w3c.dom.Node)
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Node $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0;
        javax.xml.namespace.QName $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 := @parameter0: org.w3c.dom.Node;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean isElement(org.w3c.dom.Node)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: javax.xml.namespace.QName qName>;

        if $r3 == null goto label2;

        $r3 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: javax.xml.namespace.QName qName>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,javax.xml.namespace.QName)>($r1, $r3);

        return $z0;

     label2:
        $r4 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: java.lang.String localName>;

        $r2 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r4, $r2);

        return $z0;
    }
    private void seek()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Node $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node getNextSibling()>();

     label1:
        if $r2 == null goto label3;

        $z0 = specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean matchesName(org.w3c.dom.Node)>($r2);

        if $z0 == 0 goto label2;

        $r1 = (org.w3c.dom.Element) $r2;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next> = $r1;

        return;

     label2:
        $r2 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next> = null;

        return;
    }
    private void seek(org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.NodeList $r2;
        int i0, $i1;
        org.w3c.dom.Node $r3;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 := @parameter0: org.w3c.dom.Element;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i1 goto label3;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean matchesName(org.w3c.dom.Node)>($r3);

        if $z0 == 0 goto label2;

        $r1 = (org.w3c.dom.Element) $r3;

        r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next> = $r1;

        return;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    public boolean hasNext()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public volatile java.lang.Object next()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next()>();

        return $r1;
    }
    public org.w3c.dom.Element next()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        return $r1;
    }
    public org.w3c.dom.Element nextElement()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        org.w3c.dom.Element $r1;
        java.util.NoSuchElementException $r2;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next>;

        if $r1 != null goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element next>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.xml.ElementIterator: void seek()>();

        return $r1;
    }
    public void remove()
    {
        org.apache.jackrabbit.webdav.xml.ElementIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ElementIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Remove not implemented.");

        throw $r1;
    }
