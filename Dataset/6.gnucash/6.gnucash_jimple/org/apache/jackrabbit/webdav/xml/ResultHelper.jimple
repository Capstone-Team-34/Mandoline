org.apache.jackrabbit.webdav.xml.ResultHelper extends java.lang.Object
private static final javax.xml.transform.sax.SAXTransformerFactory FACTORY
private static final boolean NEEDS_XMLNS_ATTRIBUTES
private static final java.lang.String XML
private static final org.slf4j.Logger log
    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        javax.xml.transform.TransformerFactory $r1;
        javax.xml.transform.sax.SAXTransformerFactory $r2;
        boolean $z0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/xml/ResultHelper;");

        <org.apache.jackrabbit.webdav.xml.ResultHelper: org.slf4j.Logger log> = $r0;

        $r1 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r2 = (javax.xml.transform.sax.SAXTransformerFactory) $r1;

        <org.apache.jackrabbit.webdav.xml.ResultHelper: javax.xml.transform.sax.SAXTransformerFactory FACTORY> = $r2;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.ResultHelper: boolean needsXmlnsAttributes()>();

        <org.apache.jackrabbit.webdav.xml.ResultHelper: boolean NEEDS_XMLNS_ATTRIBUTES> = $z0;

        return;
    }
    private void <init>()
    {
        org.apache.jackrabbit.webdav.xml.ResultHelper r0;

        r0 := @this: org.apache.jackrabbit.webdav.xml.ResultHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static javax.xml.transform.Result getResult(javax.xml.transform.Result) throws org.xml.sax.SAXException
    {
        javax.xml.transform.TransformerConfigurationException r0;
        javax.xml.transform.Result $r1;
        javax.xml.transform.sax.SAXTransformerFactory $r2;
        javax.xml.transform.sax.TransformerHandler $r3;
        javax.xml.transform.Transformer $r4;
        boolean $z0;
        javax.xml.transform.sax.SAXResult $r5;
        org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler $r6;
        org.xml.sax.SAXException $r7;

        $r1 := @parameter0: javax.xml.transform.Result;

        $r2 = <org.apache.jackrabbit.webdav.xml.ResultHelper: javax.xml.transform.sax.SAXTransformerFactory FACTORY>;

     label1:
        $r3 = virtualinvoke $r2.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler()>();

        interfaceinvoke $r3.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>($r1);

        $r4 = interfaceinvoke $r3.<javax.xml.transform.sax.TransformerHandler: javax.xml.transform.Transformer getTransformer()>();

        virtualinvoke $r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", "xml");

        virtualinvoke $r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", "UTF-8");

        virtualinvoke $r4.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "no");

     label2:
        $z0 = <org.apache.jackrabbit.webdav.xml.ResultHelper: boolean NEEDS_XMLNS_ATTRIBUTES>;

        if $z0 == 0 goto label6;

        $r5 = new javax.xml.transform.sax.SAXResult;

        $r6 = new org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler;

     label3:
        specialinvoke $r6.<org.apache.jackrabbit.webdav.xml.ResultHelper$SerializingContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.jackrabbit.webdav.xml.ResultHelper$1)>($r3, null);

        specialinvoke $r5.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>($r6);

     label4:
        return $r5;

     label5:
        r0 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>("Failed to initialize XML serializer", r0);

        throw $r7;

     label6:
        return $r1;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label5;
        catch javax.xml.transform.TransformerConfigurationException from label3 to label4 with label5;
    }
    private static boolean needsXmlnsAttributes()
    {
        java.lang.Exception r0;
        java.io.StringWriter r1;
        org.xml.sax.helpers.AttributesImpl $r2;
        javax.xml.transform.sax.SAXTransformerFactory $r3;
        javax.xml.transform.sax.TransformerHandler $r4;
        javax.xml.transform.stream.StreamResult $r5;
        java.lang.String $r6;
        int $i0;
        java.lang.UnsupportedOperationException $r7;

        r1 = new java.io.StringWriter;

     label01:
        specialinvoke r1.<java.io.StringWriter: void <init>()>();

     label02:
        $r3 = <org.apache.jackrabbit.webdav.xml.ResultHelper: javax.xml.transform.sax.SAXTransformerFactory FACTORY>;

     label03:
        $r4 = virtualinvoke $r3.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler()>();

     label04:
        $r5 = new javax.xml.transform.stream.StreamResult;

     label05:
        specialinvoke $r5.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r1);

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>($r5);

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void startDocument()>();

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void startPrefixMapping(java.lang.String,java.lang.String)>("p", "uri");

     label06:
        $r2 = new org.xml.sax.helpers.AttributesImpl;

     label07:
        specialinvoke $r2.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("uri", "e", "p:e", $r2);

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>("uri", "e", "p:e");

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void endPrefixMapping(java.lang.String)>("p");

        interfaceinvoke $r4.<javax.xml.transform.sax.TransformerHandler: void endDocument()>();

        $r6 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("xmlns");

     label08:
        if $i0 != -1 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        r0 := @caughtexception;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("XML serialization fails");

        throw $r7;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }
