org.apache.jackrabbit.webdav.property.DefaultDavProperty extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private static org.slf4j.Logger log
private final java.lang.Object value
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/property/DefaultDavProperty;");

        <org.apache.jackrabbit.webdav.property.DefaultDavProperty: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String, java.lang.Object, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r0;
        java.lang.String $r1;
        java.lang.Object r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;

        r0 := @this: org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(java.lang.String,java.lang.Object,org.apache.jackrabbit.webdav.xml.Namespace,boolean)>($r1, r2, $r3, 0);

        return;
    }
    public void <init>(java.lang.String, java.lang.Object, org.apache.jackrabbit.webdav.xml.Namespace, boolean)
    {
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r0;
        java.lang.String $r1;
        java.lang.Object r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        boolean $z0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r4;

        r0 := @this: org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.apache.jackrabbit.webdav.xml.Namespace;

        $z0 := @parameter3: boolean;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName create(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r3);

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r4, $z0);

        r0.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: java.lang.Object value> = r2;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName, java.lang.Object)
    {
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.lang.Object r2;

        r0 := @this: org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,java.lang.Object,boolean)>($r1, r2, 0);

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName, java.lang.Object, boolean)
    {
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        r2 := @parameter1: java.lang.Object;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, $z0);

        r0.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: java.lang.Object value> = r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.property.DefaultDavProperty createFromXml(org.w3c.dom.Element)
    {
        org.w3c.dom.Element $r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        boolean $z0;
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        org.w3c.dom.Node r6;
        java.lang.String $r7;

        $r0 := @parameter0: org.w3c.dom.Element;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a new DavProperty from a \'null\' element.");

        throw $r1;

     label1:
        $r2 = staticinvoke <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName createFromXml(org.w3c.dom.Element)>($r0);

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasContent(org.w3c.dom.Node)>($r0);

        if $z0 != 0 goto label2;

        r3 = new org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        specialinvoke r3.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,java.lang.Object,boolean)>($r2, null, 0);

        return r3;

     label2:
        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.util.List getContent(org.w3c.dom.Node)>($r0);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.w3c.dom.Node) $r5;

        $z0 = r6 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label3;

        r3 = new org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r0 = (org.w3c.dom.Element) r6;

        specialinvoke r3.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,java.lang.Object,boolean)>($r2, $r0, 0);

        return r3;

     label3:
        r3 = new org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        $r7 = interfaceinvoke r6.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        specialinvoke r3.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,java.lang.Object,boolean)>($r2, $r7, 0);

        return r3;

     label4:
        r3 = new org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        specialinvoke r3.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,java.lang.Object,boolean)>($r2, $r4, 0);

        return r3;
    }
    public java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.property.DefaultDavProperty r0;
        java.lang.Object r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.DefaultDavProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.property.DefaultDavProperty: java.lang.Object value>;

        return r1;
    }
