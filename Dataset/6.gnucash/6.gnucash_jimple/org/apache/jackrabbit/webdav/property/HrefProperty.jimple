org.apache.jackrabbit.webdav.property.HrefProperty extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private static org.slf4j.Logger log
private final java.lang.String[] value
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/property/HrefProperty;");

        <org.apache.jackrabbit.webdav.property.HrefProperty: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavProperty)
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0, r4;
        java.util.ArrayList r1;
        org.apache.jackrabbit.webdav.property.DavProperty r2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3;
        boolean $z0;
        java.lang.String[] $r5;
        java.lang.Object $r6;
        java.util.List r7;
        java.util.Iterator $r8;
        java.lang.String $r9, $r11;
        org.w3c.dom.Element $r10;
        org.slf4j.Logger $r12;
        java.lang.StringBuilder $r13;
        int $i0;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        r2 := @parameter0: org.apache.jackrabbit.webdav.property.DavProperty;

        $r3 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $z0 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: boolean isInvisibleInAllprop()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r3, $z0);

        $z0 = r2 instanceof org.apache.jackrabbit.webdav.property.HrefProperty;

        if $z0 == 0 goto label1;

        r4 = (org.apache.jackrabbit.webdav.property.HrefProperty) r2;

        $r5 = r4.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value>;

        r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value> = $r5;

        return;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: java.lang.Object getValue()>();

        $z0 = $r6 instanceof java.util.List;

        if $z0 == 0 goto label5;

        r7 = (java.util.List) $r6;

        $r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r6 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        $r9 = "href";

        $r10 = (org.w3c.dom.Element) $r6;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label4;

        $r10 = (org.w3c.dom.Element) $r6;

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getText(org.w3c.dom.Element)>($r10);

        if $r9 == null goto label3;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        $r12 = <org.apache.jackrabbit.webdav.property.HrefProperty: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Valid DAV:href element expected instead of ");

        $r9 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        goto label2;

     label4:
        $r12 = <org.apache.jackrabbit.webdav.property.HrefProperty: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DAV: href element expected in the content of ");

        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.HrefProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r9 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyName: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        goto label2;

     label5:
        $z0 = $r6 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label6;

        $r9 = "href";

        $r10 = (org.w3c.dom.Element) $r6;

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label6;

        $r10 = (org.w3c.dom.Element) $r6;

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getTextTrim(org.w3c.dom.Element)>($r10);

        if $r9 == null goto label7;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label6:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r14;

        r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value> = $r5;

        return;

     label7:
        $r12 = <org.apache.jackrabbit.webdav.property.HrefProperty: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Valid DAV:href element expected instead of ");

        $r9 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        goto label6;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName, java.lang.String, boolean)
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.String[] $r3;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, $z0);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r2;

        r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value> = $r3;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName, java.lang.String[], boolean)
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        $r2 := @parameter1: java.lang.String[];

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, $z0);

        r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value> = $r2;

        return;
    }
    public java.util.List getHrefs()
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        java.util.List $r1;
        java.lang.String[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        $r2 = r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r1;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] getValue()>();

        return $r1;
    }
    public java.lang.String[] getValue()
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] value>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.property.HrefProperty r0;
        org.w3c.dom.Document $r1;
        java.lang.String r2;
        int i0, i1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3;
        org.w3c.dom.Element $r4, $r6;
        java.lang.String[] $r5;

        r0 := @this: org.apache.jackrabbit.webdav.property.HrefProperty;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.HrefProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r4 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        $r5 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.HrefProperty: java.lang.String[] getValue()>();

        if $r5 == null goto label2;

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r5[i1];

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>(r2, $r1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r4;
    }
