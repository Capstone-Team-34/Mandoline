org.apache.jackrabbit.webdav.property.AbstractDavProperty extends java.lang.Object implements org.apache.jackrabbit.webdav.property.DavProperty
private static org.slf4j.Logger log
private final boolean isInvisibleInAllprop
private final org.apache.jackrabbit.webdav.property.DavPropertyName name
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/property/AbstractDavProperty;");

        <org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName, boolean)
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName name> = $r1;

        r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: boolean isInvisibleInAllprop> = $z0;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        java.lang.Object $r1, $r5;
        boolean $z0, z1;
        org.apache.jackrabbit.webdav.property.DavProperty r2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3, $r4;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.property.DavProperty;

        if $z0 == 0 goto label4;

        r2 = (org.apache.jackrabbit.webdav.property.DavProperty) $r1;

        $r3 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r4 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $z0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyName: boolean equals(java.lang.Object)>($r4);

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: java.lang.Object getValue()>();

        if $r1 != null goto label3;

        $r1 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: java.lang.Object getValue()>();

        if $r1 != null goto label2;

        z1 = 1;

     label1:
        if $z0 == 0 goto label4;

        if z1 == 0 goto label4;

        return 1;

     label2:
        z1 = 0;

        goto label1;

     label3:
        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: java.lang.Object getValue()>();

        $r5 = interfaceinvoke r2.<org.apache.jackrabbit.webdav.property.DavProperty: java.lang.Object getValue()>();

        z1 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        goto label1;

     label4:
        return 0;
    }
    public org.apache.jackrabbit.webdav.property.DavPropertyName getName()
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName name>;

        return r1;
    }
    public int hashCode()
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        int $i0, i1;
        java.lang.Object $r2;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $i0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.property.DavPropertyName: int hashCode()>();

        i1 = $i0;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: java.lang.Object getValue()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: java.lang.Object getValue()>();

        i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i1 = $i0 + i1;

     label1:
        $i0 = i1 % 2147483647;

        return $i0;
    }
    public boolean isInvisibleInAllprop()
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        z0 = r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: boolean isInvisibleInAllprop>;

        return z0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.property.AbstractDavProperty r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        org.w3c.dom.Element $r3, $r6;
        java.lang.Object $r4;
        boolean $z0;
        org.apache.jackrabbit.webdav.xml.XmlSerializable r5;
        org.w3c.dom.Node r7;
        int i0, $i1;
        org.w3c.dom.Node[] $r8;
        java.util.Collection r9;
        java.util.Iterator $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.jackrabbit.webdav.property.AbstractDavProperty;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: java.lang.Object getValue()>();

        if $r4 == null goto label9;

        $z0 = $r4 instanceof org.apache.jackrabbit.webdav.xml.XmlSerializable;

        if $z0 == 0 goto label1;

        r5 = (org.apache.jackrabbit.webdav.xml.XmlSerializable) $r4;

        $r6 = interfaceinvoke r5.<org.apache.jackrabbit.webdav.xml.XmlSerializable: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        return $r3;

     label1:
        $z0 = $r4 instanceof org.w3c.dom.Node;

        if $z0 == 0 goto label2;

        r7 = (org.w3c.dom.Node) $r4;

        r7 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r7, 1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        return $r3;

     label2:
        $z0 = $r4 instanceof org.w3c.dom.Node[];

        if $z0 == 0 goto label4;

        i0 = 0;

     label3:
        $r8 = (org.w3c.dom.Node[]) $r4;

        $i1 = lengthof $r8;

        if i0 >= $i1 goto label9;

        $r8 = (org.w3c.dom.Node[]) $r4;

        r7 = $r8[i0];

        r7 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r7, 1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        i0 = i0 + 1;

        goto label3;

     label4:
        $z0 = $r4 instanceof java.util.Collection;

        if $z0 == 0 goto label8;

        r9 = (java.util.Collection) $r4;

        $r10 = interfaceinvoke r9.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r4 instanceof org.apache.jackrabbit.webdav.xml.XmlSerializable;

        if $z0 == 0 goto label6;

        r5 = (org.apache.jackrabbit.webdav.xml.XmlSerializable) $r4;

        $r6 = interfaceinvoke r5.<org.apache.jackrabbit.webdav.xml.XmlSerializable: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        goto label5;

     label6:
        $z0 = $r4 instanceof org.w3c.dom.Node;

        if $z0 == 0 goto label7;

        r7 = (org.w3c.dom.Node) $r4;

        r7 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>(r7, 1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        goto label5;

     label7:
        $r11 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void setText(org.w3c.dom.Element,java.lang.String)>($r3, $r11);

        goto label5;

     label8:
        $r11 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void setText(org.w3c.dom.Element,java.lang.String)>($r3, $r11);

     label9:
        return $r3;
    }
