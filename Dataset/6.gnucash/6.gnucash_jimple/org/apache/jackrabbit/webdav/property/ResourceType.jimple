org.apache.jackrabbit.webdav.property.ResourceType extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
public static final int ACTIVITY
public static final int BASELINE
public static final int COLLECTION
public static final int DEFAULT_RESOURCE
private static final java.util.List NAMES
public static final int VERSION_HISTORY
private final int[] resourceTypes
    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.List $r1;
        org.apache.jackrabbit.webdav.property.ResourceType$TypeName $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES> = $r0;

        $r1 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(null);

        $r1 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $r2 = new org.apache.jackrabbit.webdav.property.ResourceType$TypeName;

        $r3 = <org.apache.jackrabbit.webdav.property.ResourceType: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.property.ResourceType$TypeName: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,org.apache.jackrabbit.webdav.property.ResourceType$1)>("collection", $r3, null);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $r2 = new org.apache.jackrabbit.webdav.property.ResourceType$TypeName;

        $r3 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.property.ResourceType$TypeName: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,org.apache.jackrabbit.webdav.property.ResourceType$1)>("version-history", $r3, null);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $r2 = new org.apache.jackrabbit.webdav.property.ResourceType$TypeName;

        $r3 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.property.ResourceType$TypeName: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,org.apache.jackrabbit.webdav.property.ResourceType$1)>("activity", $r3, null);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $r2 = new org.apache.jackrabbit.webdav.property.ResourceType$TypeName;

        $r3 = <org.apache.jackrabbit.webdav.version.DeltaVConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.property.ResourceType$TypeName: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,org.apache.jackrabbit.webdav.property.ResourceType$1)>("baseline", $r3, null);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }
    public void <init>(int)
    {
        org.apache.jackrabbit.webdav.property.ResourceType r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.ResourceType;

        $i0 := @parameter0: int;

        $r1 = newarray (int)[1];

        $r1[0] = $i0;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.ResourceType: void <init>(int[])>($r1);

        return;
    }
    public void <init>(int[])
    {
        org.apache.jackrabbit.webdav.property.ResourceType r0;
        int[] $r1;
        int i0, i1, i2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.jackrabbit.webdav.property.ResourceType;

        $r1 := @parameter0: int[];

        $r2 = <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName RESOURCETYPE>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 0);

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        i1 = $r1[i2];

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.property.ResourceType: boolean isValidResourceType(int)>(i1);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid resource type \'");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r0.<org.apache.jackrabbit.webdav.property.ResourceType: int[] resourceTypes> = $r1;

        return;
    }
    private static boolean isValidResourceType(int)
    {
        int $i0, $i1;
        java.util.List $r0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r0 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if $i0 <= $i1 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
    public static int registerResourceType(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        java.lang.String $r0, $r6;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.apache.jackrabbit.webdav.property.ResourceType$TypeName r2;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r4;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot register a <null> resourcetype");

        throw $r3;

     label2:
        r2 = new org.apache.jackrabbit.webdav.property.ResourceType$TypeName;

        specialinvoke r2.<org.apache.jackrabbit.webdav.property.ResourceType$TypeName: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,org.apache.jackrabbit.webdav.property.ResourceType$1)>($r0, $r1, null);

        $r4 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r4 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $i0 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>(r2);

        return $i0;

     label3:
        $r4 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        $r4 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        return $i0;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not register resourcetype ");

        $r6 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getPrefix()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }
    public int[] getResourceTypes()
    {
        org.apache.jackrabbit.webdav.property.ResourceType r0;
        int[] r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.ResourceType;

        r1 = r0.<org.apache.jackrabbit.webdav.property.ResourceType: int[] resourceTypes>;

        return r1;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.property.ResourceType r0;
        java.util.Set $r1;

        r0 := @this: org.apache.jackrabbit.webdav.property.ResourceType;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.ResourceType: java.util.Set getValue()>();

        return $r1;
    }
    public java.util.Set getValue()
    {
        org.apache.jackrabbit.webdav.property.ResourceType r0;
        int[] r1;
        int i0, i1, i2;
        java.util.HashSet r2;
        java.util.List $r3;
        java.lang.Object $r4;
        org.apache.jackrabbit.webdav.property.ResourceType$TypeName r5;

        r0 := @this: org.apache.jackrabbit.webdav.property.ResourceType;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        r1 = r0.<org.apache.jackrabbit.webdav.property.ResourceType: int[] resourceTypes>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        i1 = r1[i2];

        $r3 = <org.apache.jackrabbit.webdav.property.ResourceType: java.util.List NAMES>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.jackrabbit.webdav.property.ResourceType$TypeName) $r4;

        if r5 == null goto label2;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r2;
    }
