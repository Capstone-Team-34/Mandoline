org.apache.jackrabbit.webdav.property.PropContainer extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable org.apache.jackrabbit.webdav.DavConstants
private static org.slf4j.Logger log
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/property/PropContainer;");

        <org.apache.jackrabbit.webdav.property.PropContainer: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>()
    {
        org.apache.jackrabbit.webdav.property.PropContainer r0;

        r0 := @this: org.apache.jackrabbit.webdav.property.PropContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public boolean addContent(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.property.PropContainer r0;
        boolean $z0;
        java.lang.Object r1;
        org.apache.jackrabbit.webdav.property.PropEntry r2;

        r0 := @this: org.apache.jackrabbit.webdav.property.PropContainer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.jackrabbit.webdav.property.PropEntry;

        if $z0 == 0 goto label1;

        r2 = (org.apache.jackrabbit.webdav.property.PropEntry) r1;

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.PropContainer: boolean addContent(org.apache.jackrabbit.webdav.property.PropEntry)>(r2);

        return $z0;

     label1:
        return 0;
    }
public abstract boolean addContent(org.apache.jackrabbit.webdav.property.PropEntry) { 
// no body
} 
public abstract boolean contains(org.apache.jackrabbit.webdav.property.DavPropertyName) { 
// no body
} 
public abstract java.util.Collection getContent() { 
// no body
} 
public abstract int getContentSize() { 
// no body
} 
public abstract boolean isEmpty() { 
// no body
} 
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.property.PropContainer r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3, $r8;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.jackrabbit.webdav.xml.XmlSerializable r7;
        org.slf4j.Logger $r9;

        r0 := @this: org.apache.jackrabbit.webdav.property.PropContainer;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = <org.apache.jackrabbit.webdav.property.PropContainer: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "prop", $r2);

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.property.PropContainer: java.util.Collection getContent()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r6 instanceof org.apache.jackrabbit.webdav.xml.XmlSerializable;

        if $z0 == 0 goto label2;

        r7 = (org.apache.jackrabbit.webdav.xml.XmlSerializable) $r6;

        $r8 = interfaceinvoke r7.<org.apache.jackrabbit.webdav.xml.XmlSerializable: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label1;

     label2:
        $r9 = <org.apache.jackrabbit.webdav.property.PropContainer: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>("Unexpected content in PropContainer: should be XmlSerializable.");

        goto label1;

     label3:
        return $r3;
    }
