org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private final org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions
    public void <init>(org.apache.jackrabbit.webdav.observation.Subscription)
    {
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery r0;
        org.apache.jackrabbit.webdav.observation.Subscription $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        org.apache.jackrabbit.webdav.observation.Subscription[] $r3;

        r0 := @this: org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.observation.Subscription;

        $r2 = <org.apache.jackrabbit.webdav.observation.ObservationConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUBSCRIPTIONDISCOVERY>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 1);

        if $r1 == null goto label1;

        $r3 = newarray (org.apache.jackrabbit.webdav.observation.Subscription)[1];

        $r3[0] = $r1;

        r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions> = $r3;

        return;

     label1:
        $r3 = newarray (org.apache.jackrabbit.webdav.observation.Subscription)[0];

        r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions> = $r3;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.observation.Subscription[])
    {
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery r0;
        org.apache.jackrabbit.webdav.observation.Subscription[] $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;

        r0 := @this: org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.observation.Subscription[];

        $r2 = <org.apache.jackrabbit.webdav.observation.ObservationConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUBSCRIPTIONDISCOVERY>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 1);

        if $r1 == null goto label1;

        r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions> = $r1;

        return;

     label1:
        $r1 = newarray (org.apache.jackrabbit.webdav.observation.Subscription)[0];

        r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions> = $r1;

        return;
    }
    public static org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery createFromXml(org.w3c.dom.Element)
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery$1 r1;
        java.util.ArrayList r2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3;
        java.lang.String $r4;
        org.apache.jackrabbit.webdav.xml.Namespace $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r7;
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery $r8;
        int $i0;
        org.apache.jackrabbit.webdav.observation.Subscription[] $r9;
        java.lang.Object[] $r10;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r3 = <org.apache.jackrabbit.webdav.observation.ObservationConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUBSCRIPTIONDISCOVERY>;

        $r4 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyName: java.lang.String getName()>();

        $r3 = <org.apache.jackrabbit.webdav.observation.ObservationConstants: org.apache.jackrabbit.webdav.property.DavPropertyName SUBSCRIPTIONDISCOVERY>;

        $r5 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.xml.Namespace getNamespace()>();

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, $r4, $r5);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'subscriptiondiscovery\' element expected.");

        throw $r6;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r5 = <org.apache.jackrabbit.webdav.observation.ObservationConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r7 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "subscription", $r5);

     label2:
        $z0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        r1 = new org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery$1;

        specialinvoke r1.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery$1: void <init>(org.w3c.dom.Element)>($r0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label2;

     label3:
        $r8 = new org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r9 = newarray (org.apache.jackrabbit.webdav.observation.Subscription)[$i0];

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (org.apache.jackrabbit.webdav.observation.Subscription[]) $r10;

        specialinvoke $r8.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: void <init>(org.apache.jackrabbit.webdav.observation.Subscription[])>($r9);

        return $r8;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery r0;
        org.apache.jackrabbit.webdav.observation.Subscription[] $r1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] getValue()>();

        return $r1;
    }
    public org.apache.jackrabbit.webdav.observation.Subscription[] getValue()
    {
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery r0;
        org.apache.jackrabbit.webdav.observation.Subscription[] r1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        r1 = r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.observation.Subscription[] r2;
        int i0, i1;
        org.apache.jackrabbit.webdav.observation.Subscription r3;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r4;
        org.w3c.dom.Element $r5, $r6;

        r0 := @this: org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r5 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        r2 = r0.<org.apache.jackrabbit.webdav.observation.SubscriptionDiscovery: org.apache.jackrabbit.webdav.observation.Subscription[] subscriptions>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r6 = interfaceinvoke r3.<org.apache.jackrabbit.webdav.observation.Subscription: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r5;
    }
