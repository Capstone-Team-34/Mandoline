org.apache.jackrabbit.webdav.observation.Filter extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private final java.lang.String filterName
private final org.apache.jackrabbit.webdav.xml.Namespace filterNamespace
private final java.lang.String filterValue
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/observation/Filter;");

        <org.apache.jackrabbit.webdav.observation.Filter: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace, java.lang.String)
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        java.lang.String $r1, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filterName must not be null.");

        throw $r4;

     label1:
        r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterName> = $r1;

        r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace> = $r2;

        r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterValue> = $r3;

        return;
    }
    public void <init>(org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        org.w3c.dom.Element $r1;
        java.lang.String $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        $r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterName> = $r2;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace> = $r3;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getTextTrim(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterValue> = $r2;

        return;
    }
    public java.lang.String getName()
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        r1 = r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterName>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.xml.Namespace getNamespace()
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        org.apache.jackrabbit.webdav.xml.Namespace r1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        r1 = r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace>;

        return r1;
    }
    public java.lang.String getValue()
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        r1 = r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterValue>;

        return r1;
    }
    public boolean isMatchingFilter(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        java.lang.String $r1, $r4;
        org.apache.jackrabbit.webdav.xml.Namespace $r2, $r3;
        boolean z0, $z1;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 = r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace>;

        if $r3 != null goto label3;

        if $r2 != null goto label2;

        z0 = 1;

     label1:
        $r4 = r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterName>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label4;

        if z0 == 0 goto label4;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r3 = r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace>;

        z0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.xml.Namespace: boolean equals(java.lang.Object)>($r2);

        goto label1;

     label4:
        return 0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.observation.Filter r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.String $r3, $r5;
        org.w3c.dom.Element $r4;

        r0 := @this: org.apache.jackrabbit.webdav.observation.Filter;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r5 = r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterName>;

        $r2 = r0.<org.apache.jackrabbit.webdav.observation.Filter: org.apache.jackrabbit.webdav.xml.Namespace filterNamespace>;

        $r3 = r0.<org.apache.jackrabbit.webdav.observation.Filter: java.lang.String filterValue>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r1, $r5, $r2, $r3);

        return $r4;
    }
