org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
private static org.slf4j.Logger log
private final java.io.ByteArrayOutputStream xml
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/client/methods/XmlRequestEntity;");

        <org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(org.w3c.dom.Document) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity r0;
        org.w3c.dom.Document $r1;
        java.io.ByteArrayOutputStream $r2;
        javax.xml.transform.TransformerException r3;
        org.slf4j.Logger $r4;
        java.lang.String $r5;
        java.io.IOException $r6;
        org.xml.sax.SAXException r7;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity;

        $r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: java.io.ByteArrayOutputStream xml> = $r2;

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: java.io.ByteArrayOutputStream xml>;

     label1:
        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void transformDocument(org.w3c.dom.Document,java.io.OutputStream)>($r1, $r2);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r4 = <org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: org.slf4j.Logger log>;

        $r5 = virtualinvoke r3.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>($r5);

        $r6 = new java.io.IOException;

        $r5 = virtualinvoke r3.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r6;

     label4:
        r7 := @caughtexception;

        $r4 = <org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: org.slf4j.Logger log>;

        $r5 = virtualinvoke r7.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>($r5);

        $r6 = new java.io.IOException;

        $r5 = virtualinvoke r7.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r6;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
    }
    public long getContentLength()
    {
        org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity r0;
        int $i0;
        java.io.ByteArrayOutputStream $r1;
        long $l1;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity;

        $r1 = r0.<org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: java.io.ByteArrayOutputStream xml>;

        $i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }
    public java.lang.String getContentType()
    {
        org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity r0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity;

        return "text/xml; charset=UTF-8";
    }
    public boolean isRepeatable()
    {
        org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity r0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity;

        return 1;
    }
    public void writeRequest(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity r0;
        java.io.OutputStream $r1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.XmlRequestEntity: java.io.ByteArrayOutputStream xml>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r1);

        return;
    }
