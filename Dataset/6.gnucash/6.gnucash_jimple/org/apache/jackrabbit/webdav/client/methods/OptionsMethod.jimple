org.apache.jackrabbit.webdav.client.methods.OptionsMethod extends org.apache.jackrabbit.webdav.client.methods.DavMethodBase
private static org.slf4j.Logger log
private final java.util.Set allowedMethods
private final java.util.Set complianceClasses
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/client/methods/OptionsMethod;");

        <org.apache.jackrabbit.webdav.client.methods.OptionsMethod: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.lang.String $r1;
        java.util.HashSet $r2;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.DavMethodBase: void <init>(java.lang.String)>($r1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods> = $r2;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses> = $r2;

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.version.OptionsInfo) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.version.OptionsInfo $r2;
        java.util.HashSet $r3;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.version.OptionsInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.DavMethodBase: void <init>(java.lang.String)>($r1);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods> = $r3;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses> = $r3;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void setRequestBody(org.apache.jackrabbit.webdav.xml.XmlSerializable)>($r2);

     label1:
        return;
    }
    public void <init>(java.lang.String, java.lang.String[]) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        org.apache.jackrabbit.webdav.version.OptionsInfo $r3;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 = new org.apache.jackrabbit.webdav.version.OptionsInfo;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.version.OptionsInfo: void <init>(java.lang.String[])>($r2);

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void <init>(java.lang.String,org.apache.jackrabbit.webdav.version.OptionsInfo)>($r1, $r3);

        return;
    }
    public java.lang.String[] getAllowedMethods()
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.util.Set $r1, $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void checkUsed()>();

        $r1 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods>;

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r4;

        return $r3;
    }
    public java.lang.String[] getComplianceClasses()
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.util.Set $r1, $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void checkUsed()>();

        $r1 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses>;

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r4;

        return $r3;
    }
    public java.lang.String getName()
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        return "OPTIONS";
    }
    public org.apache.jackrabbit.webdav.version.OptionsResponse getResponseAsOptionsResponse() throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        org.w3c.dom.Element $r1;
        org.apache.jackrabbit.webdav.version.OptionsResponse $r2;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void checkUsed()>();

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: org.w3c.dom.Element getRootElement()>();

        if $r1 == null goto label1;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.version.OptionsResponse: org.apache.jackrabbit.webdav.version.OptionsResponse createFromXml(org.w3c.dom.Element)>($r1);

        return $r2;

     label1:
        return null;
    }
    public boolean hasComplianceClass(java.lang.String)
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Set $r2;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void checkUsed()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }
    public boolean isAllowed(java.lang.String)
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        java.lang.String $r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: void checkUsed()>();

        $r2 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }
    protected boolean isSuccess(int)
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $i0 := @parameter0: int;

        if $i0 != 200 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void processResponseHeaders(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.jackrabbit.webdav.client.methods.OptionsMethod r0;
        org.apache.commons.httpclient.HttpState $r1;
        org.apache.commons.httpclient.HttpConnection $r2;
        java.lang.String r3;
        org.apache.commons.httpclient.Header $r4;
        java.lang.String[] $r5;
        int i0, i1;
        java.util.Set $r6;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.OptionsMethod;

        $r1 := @parameter0: org.apache.commons.httpclient.HttpState;

        $r2 := @parameter1: org.apache.commons.httpclient.HttpConnection;

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: org.apache.commons.httpclient.Header getResponseHeader(java.lang.String)>("Allow");

        if $r4 == null goto label2;

        r3 = virtualinvoke $r4.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r5[i1];

        $r6 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set allowedMethods>;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String toUpperCase()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: org.apache.commons.httpclient.Header getResponseHeader(java.lang.String)>("DAV");

        if $r4 == null goto label4;

        r3 = virtualinvoke $r4.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof $r5;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r3 = $r5[i1];

        $r6 = r0.<org.apache.jackrabbit.webdav.client.methods.OptionsMethod: java.util.Set complianceClasses>;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
