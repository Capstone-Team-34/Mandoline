org.apache.jackrabbit.webdav.client.methods.SearchMethod extends org.apache.jackrabbit.webdav.client.methods.DavMethodBase
private static org.slf4j.Logger log
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/client/methods/SearchMethod;");

        <org.apache.jackrabbit.webdav.client.methods.SearchMethod: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.SearchMethod r0;
        java.lang.String $r1, $r2, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.SearchMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.SearchMethod: void <init>(java.lang.String,java.lang.String,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r2, $r3, $r4);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.SearchMethod r0;
        java.lang.String $r1, $r2, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.apache.jackrabbit.webdav.search.SearchInfo r5;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.SearchMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.DavMethodBase: void <init>(java.lang.String)>($r1);

        if $r3 == null goto label1;

        if $r2 == null goto label1;

        r5 = new org.apache.jackrabbit.webdav.search.SearchInfo;

        specialinvoke r5.<org.apache.jackrabbit.webdav.search.SearchInfo: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r3, $r4, $r2);

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.SearchMethod: void setRequestBody(org.apache.jackrabbit.webdav.xml.XmlSerializable)>(r5);

     label1:
        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.search.SearchInfo) throws java.io.IOException
    {
        org.apache.jackrabbit.webdav.client.methods.SearchMethod r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.search.SearchInfo $r2;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.SearchMethod;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.search.SearchInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.client.methods.DavMethodBase: void <init>(java.lang.String)>($r1);

        virtualinvoke r0.<org.apache.jackrabbit.webdav.client.methods.SearchMethod: void setRequestBody(org.apache.jackrabbit.webdav.xml.XmlSerializable)>($r2);

        return;
    }
    public java.lang.String getName()
    {
        org.apache.jackrabbit.webdav.client.methods.SearchMethod r0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.SearchMethod;

        return "SEARCH";
    }
    protected boolean isSuccess(int)
    {
        org.apache.jackrabbit.webdav.client.methods.SearchMethod r0;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.client.methods.SearchMethod;

        $i0 := @parameter0: int;

        if $i0 != 207 goto label1;

        return 1;

     label1:
        return 0;
    }
