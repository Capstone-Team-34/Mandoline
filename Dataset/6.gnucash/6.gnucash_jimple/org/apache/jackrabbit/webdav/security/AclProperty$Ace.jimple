org.apache.jackrabbit.webdav.security.AclProperty$Ace extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable org.apache.jackrabbit.webdav.security.SecurityConstants
private static final java.lang.String XML_ACE
private static final java.lang.String XML_DENY
private static final java.lang.String XML_GRANT
private static final java.lang.String XML_INHERITED
private static final java.lang.String XML_INVERT
private static final java.lang.String XML_PROTECTED
private final boolean grant
private final java.lang.String inheritedHref
private final boolean invert
private final boolean isProtected
private final org.apache.jackrabbit.webdav.security.Principal principal
private final org.apache.jackrabbit.webdav.security.Privilege[] privileges
    private void <init>(org.apache.jackrabbit.webdav.security.Principal, boolean, org.apache.jackrabbit.webdav.security.Privilege[], boolean, boolean, java.lang.String)
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.apache.jackrabbit.webdav.security.Principal $r1;
        boolean $z0, $z1, $z2;
        org.apache.jackrabbit.webdav.security.Privilege[] $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.security.Principal;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.jackrabbit.webdav.security.Privilege[];

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a new ACE with \'null\' principal.");

        throw $r4;

     label1:
        if $r2 == null goto label2;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create a new ACE: at least a single privilege must be specified.");

        throw $r4;

     label3:
        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Principal principal> = $r1;

        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean invert> = $z0;

        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Privilege[] privileges> = $r2;

        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean grant> = $z1;

        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean isProtected> = $z2;

        r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: java.lang.String inheritedHref> = $r3;

        return;
    }
    private void <init>(org.apache.jackrabbit.webdav.security.Principal, boolean, org.apache.jackrabbit.webdav.security.Privilege[], boolean, boolean, org.apache.jackrabbit.webdav.security.AclResource)
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.apache.jackrabbit.webdav.security.Principal $r1;
        boolean $z0, $z1, $z2;
        org.apache.jackrabbit.webdav.security.Privilege[] $r2;
        org.apache.jackrabbit.webdav.security.AclResource $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.security.Principal;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.jackrabbit.webdav.security.Privilege[];

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: org.apache.jackrabbit.webdav.security.AclResource;

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.webdav.security.AclResource: java.lang.String getHref()>();

     label1:
        specialinvoke r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: void <init>(org.apache.jackrabbit.webdav.security.Principal,boolean,org.apache.jackrabbit.webdav.security.Privilege[],boolean,boolean,java.lang.String)>($r1, $z0, $r2, $z1, $z2, $r4);

        return;

     label2:
        $r4 = null;

        goto label1;
    }
    void <init>(org.apache.jackrabbit.webdav.security.Principal, boolean, org.apache.jackrabbit.webdav.security.Privilege[], boolean, boolean, org.apache.jackrabbit.webdav.security.AclResource, org.apache.jackrabbit.webdav.security.AclProperty$1)
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.apache.jackrabbit.webdav.security.Principal $r1;
        boolean $z0, $z1, $z2;
        org.apache.jackrabbit.webdav.security.Privilege[] $r2;
        org.apache.jackrabbit.webdav.security.AclResource $r3;
        org.apache.jackrabbit.webdav.security.AclProperty$1 $r4;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.security.Principal;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.apache.jackrabbit.webdav.security.Privilege[];

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: org.apache.jackrabbit.webdav.security.AclResource;

        $r4 := @parameter6: org.apache.jackrabbit.webdav.security.AclProperty$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: void <init>(org.apache.jackrabbit.webdav.security.Principal,boolean,org.apache.jackrabbit.webdav.security.Privilege[],boolean,boolean,org.apache.jackrabbit.webdav.security.AclResource)>($r1, $z0, $r2, $z1, $z2, $r3);

        return;
    }
    static org.apache.jackrabbit.webdav.security.AclProperty$Ace access$000(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace $r1;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.AclProperty$Ace createFromXml(org.w3c.dom.Element)>($r0);

        return $r1;
    }
    private static org.apache.jackrabbit.webdav.security.AclProperty$Ace createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0, $r3;
        java.util.ArrayList r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.jackrabbit.webdav.security.Principal $r4;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r5;
        org.apache.jackrabbit.webdav.security.Privilege $r6;
        int $i0;
        org.apache.jackrabbit.webdav.security.Privilege[] $r7;
        java.lang.Object[] $r8;
        java.lang.String r9;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace $r10;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "invert", $r2);

        if $z0 == 0 goto label4;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "invert", $r2);

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "principal", $r2);

     label1:
        $r4 = staticinvoke <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal createFromXml(org.w3c.dom.Element)>($r3);

        $r2 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z1 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "grant", $r2);

        if $z1 == 0 goto label5;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "grant", $r2);

     label2:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "privilege", $r2);

     label3:
        $z2 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r3 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(org.w3c.dom.Element)>($r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label3;

     label4:
        $r2 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "principal", $r2);

        goto label1;

     label5:
        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "deny", $r2);

        goto label2;

     label6:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r7 = newarray (org.apache.jackrabbit.webdav.security.Privilege)[$i0];

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (org.apache.jackrabbit.webdav.security.Privilege[]) $r8;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "protected", $r2);

        r9 = null;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "inherited", $r2);

        if $z3 == 0 goto label7;

        $r2 = <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "inherited", $r2);

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildText(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "href", $r2);

     label7:
        $r10 = new org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        specialinvoke $r10.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: void <init>(org.apache.jackrabbit.webdav.security.Principal,boolean,org.apache.jackrabbit.webdav.security.Privilege[],boolean,boolean,java.lang.String)>($r4, $z0, $r7, $z1, $z2, r9);

        return $r10;
    }
    public java.lang.String getInheritedHref()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        r1 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: java.lang.String inheritedHref>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.security.Principal getPrincipal()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.apache.jackrabbit.webdav.security.Principal r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        r1 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Principal principal>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.security.Privilege[] getPrivileges()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.apache.jackrabbit.webdav.security.Privilege[] r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        r1 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Privilege[] privileges>;

        return r1;
    }
    public boolean isDeny()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        $z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean grant>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isGrant()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean grant>;

        return z0;
    }
    public boolean isInvert()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean invert>;

        return z0;
    }
    public boolean isProtected()
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean isProtected>;

        return z0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.security.Privilege[] r2;
        int i0, i1;
        org.apache.jackrabbit.webdav.security.Privilege r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.w3c.dom.Element $r5, $r6, $r8;
        boolean $z0;
        org.apache.jackrabbit.webdav.security.Principal $r7;
        java.lang.String $r9;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "ace", $r4);

        $z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean invert>;

        if $z0 == 0 goto label4;

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r5, "invert", $r4);

        $r7 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Principal principal>;

        $r8 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.security.Principal: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label1:
        $z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean grant>;

        if $z0 == 0 goto label5;

        $r9 = "grant";

     label2:
        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r5, $r9, $r4);

        r2 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Privilege[] privileges>;

        i0 = lengthof r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        $r8 = virtualinvoke r3.<org.apache.jackrabbit.webdav.security.Privilege: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r7 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Principal principal>;

        $r6 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.security.Principal: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        goto label1;

     label5:
        $r9 = "deny";

        goto label2;

     label6:
        $z0 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: boolean isProtected>;

        if $z0 == 0 goto label7;

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r5, "protected", $r4);

     label7:
        $r9 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: java.lang.String inheritedHref>;

        if $r9 == null goto label8;

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r5, "inherited", $r4);

        $r9 = r0.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: java.lang.String inheritedHref>;

        $r8 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>($r9, $r1);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label8:
        return $r5;
    }
