org.apache.jackrabbit.webdav.security.Principal extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable org.apache.jackrabbit.webdav.security.SecurityConstants
private static final org.apache.jackrabbit.webdav.security.Principal ALL_PRINCIPAL
private static final org.apache.jackrabbit.webdav.security.Principal AUTHENTICATED_PRINCIPAL
private static final java.util.Map PROP_PRINCIPALS
private static final org.apache.jackrabbit.webdav.security.Principal SELF_PRINCIPAL
private static final int TYPE_ALL
private static final int TYPE_AUTHENTICATED
private static final int TYPE_HREF
private static final int TYPE_PROPERTY
private static final int TYPE_SELF
private static final int TYPE_UNAUTHENTICATED
private static final org.apache.jackrabbit.webdav.security.Principal UNAUTHENTICATED_PRINCIPAL
private static final java.lang.String XML_ALL
private static final java.lang.String XML_AUTHENTICATED
public static final java.lang.String XML_PRINCIPAL
private static final java.lang.String XML_PROPERTY
private static final java.lang.String XML_SELF
private static final java.lang.String XML_UNAUTHENTICATED
private java.lang.String href
private org.apache.jackrabbit.webdav.property.DavPropertyName propertyName
private final int type
    static void <clinit>()
    {
        org.apache.jackrabbit.webdav.security.Principal $r0;
        java.util.HashMap $r1;

        $r0 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke $r0.<org.apache.jackrabbit.webdav.security.Principal: void <init>(int)>(0);

        <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal ALL_PRINCIPAL> = $r0;

        $r0 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke $r0.<org.apache.jackrabbit.webdav.security.Principal: void <init>(int)>(1);

        <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal AUTHENTICATED_PRINCIPAL> = $r0;

        $r0 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke $r0.<org.apache.jackrabbit.webdav.security.Principal: void <init>(int)>(2);

        <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal UNAUTHENTICATED_PRINCIPAL> = $r0;

        $r0 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke $r0.<org.apache.jackrabbit.webdav.security.Principal: void <init>(int)>(3);

        <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal SELF_PRINCIPAL> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.apache.jackrabbit.webdav.security.Principal: java.util.Map PROP_PRINCIPALS> = $r1;

        return;
    }
    private void <init>(int)
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.security.Principal: int type> = $i0;

        return;
    }
    private void <init>(java.lang.String)
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.security.Principal: int type> = 5;

        r0.<org.apache.jackrabbit.webdav.security.Principal: java.lang.String href> = $r1;

        return;
    }
    private void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName)
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.security.Principal: int type> = 4;

        r0.<org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.property.DavPropertyName propertyName> = $r1;

        return;
    }
    public static org.apache.jackrabbit.webdav.security.Principal createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r2;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.security.Principal $r4;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r5;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "principal", $r1);

        if $z0 != 0 goto label1;

        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "DAV:principal element expected.");

        throw $r2;

     label1:
        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "all", $r1);

        if $z0 == 0 goto label2;

        $r4 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal ALL_PRINCIPAL>;

        return $r4;

     label2:
        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "self", $r1);

        if $z0 == 0 goto label3;

        $r4 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal SELF_PRINCIPAL>;

        return $r4;

     label3:
        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "authenticated", $r1);

        if $z0 == 0 goto label4;

        $r4 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal AUTHENTICATED_PRINCIPAL>;

        return $r4;

     label4:
        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "unauthenticated", $r1);

        if $z0 == 0 goto label5;

        $r4 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal UNAUTHENTICATED_PRINCIPAL>;

        return $r4;

     label5:
        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "href", $r1);

        if $z0 == 0 goto label6;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildText(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "href", $r1);

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal getHrefPrincipal(java.lang.String)>($r3);

        return $r4;

     label6:
        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "property", $r1);

        if $z0 == 0 goto label7;

        $r1 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "property", $r1);

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r0);

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName createFromXml(org.w3c.dom.Element)>($r0);

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal getPropertyPrincipal(org.apache.jackrabbit.webdav.property.DavPropertyName)>($r5);

        return $r4;

     label7:
        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "Invalid structure inside DAV:principal element.");

        throw $r2;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getAllPrincipal()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;

        r0 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal ALL_PRINCIPAL>;

        return r0;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getAuthenticatedPrincipal()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;

        r0 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal AUTHENTICATED_PRINCIPAL>;

        return r0;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getHrefPrincipal(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r1;
        org.apache.jackrabbit.webdav.security.Principal $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Href-Principal must contain a valid href.");

        throw $r1;

     label1:
        $r2 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.security.Principal: void <init>(java.lang.String)>($r0);

        return $r2;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getPropertyPrincipal(org.apache.jackrabbit.webdav.property.DavPropertyName)
    {
        org.apache.jackrabbit.webdav.property.DavPropertyName $r0;
        org.apache.jackrabbit.webdav.security.Principal r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.property.DavPropertyName;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property-Principal must contain a valid property name.");

        throw $r2;

     label1:
        $r3 = <org.apache.jackrabbit.webdav.security.Principal: java.util.Map PROP_PRINCIPALS>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        $r3 = <org.apache.jackrabbit.webdav.security.Principal: java.util.Map PROP_PRINCIPALS>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r1 = (org.apache.jackrabbit.webdav.security.Principal) $r4;

        return r1;

     label2:
        r1 = new org.apache.jackrabbit.webdav.security.Principal;

        specialinvoke r1.<org.apache.jackrabbit.webdav.security.Principal: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName)>($r0);

        $r3 = <org.apache.jackrabbit.webdav.security.Principal: java.util.Map PROP_PRINCIPALS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r1);

        return r1;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getSelfPrincipal()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;

        r0 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal SELF_PRINCIPAL>;

        return r0;
    }
    public static org.apache.jackrabbit.webdav.security.Principal getUnauthenticatedPrincipal()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;

        r0 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.security.Principal UNAUTHENTICATED_PRINCIPAL>;

        return r0;
    }
    public java.lang.String getHref()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        r1 = r0.<org.apache.jackrabbit.webdav.security.Principal: java.lang.String href>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.property.DavPropertyName getPropertyName()
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        r1 = r0.<org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.property.DavPropertyName propertyName>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.security.Principal r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3, $r4, $r6;
        int $i0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r5;
        java.lang.String $r7;

        r0 := @this: org.apache.jackrabbit.webdav.security.Principal;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "principal", $r2);

        $i0 = r0.<org.apache.jackrabbit.webdav.security.Principal: int type>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        return $r3;

     label2:
        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "all", $r2);

        return $r3;

     label3:
        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "authenticated", $r2);

        return $r3;

     label4:
        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "unauthenticated", $r2);

        return $r3;

     label5:
        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "self", $r2);

        return $r3;

     label6:
        $r2 = <org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "property", $r2);

        $r5 = r0.<org.apache.jackrabbit.webdav.security.Principal: org.apache.jackrabbit.webdav.property.DavPropertyName propertyName>;

        $r6 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        return $r3;

     label7:
        $r7 = r0.<org.apache.jackrabbit.webdav.security.Principal: java.lang.String href>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>($r7, $r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return $r3;
    }
