org.apache.jackrabbit.webdav.security.Privilege extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_ALL
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_BIND
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ_ACL
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ_CURRENT_USER_PRIVILEGE_SET
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_UNBIND
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_UNLOCK
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_ACL
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_CONTENT
public static final org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_PROPERTIES
private static final java.util.Map REGISTERED_PRIVILEGES
public static final java.lang.String XML_PRIVILEGE
private final org.apache.jackrabbit.webdav.xml.Namespace namespace
private final java.lang.String privilege
    static void <clinit>()
    {
        java.util.HashMap $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.apache.jackrabbit.webdav.security.Privilege $r2;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.jackrabbit.webdav.security.Privilege: java.util.Map REGISTERED_PRIVILEGES> = $r0;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("read", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("write", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("write-properties", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_PROPERTIES> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("write-content", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_CONTENT> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("unlock", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_UNLOCK> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("read-acl", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ_ACL> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("read-current-user-privilege-set", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_READ_CURRENT_USER_PRIVILEGE_SET> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("write-acl", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_WRITE_ACL> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("bind", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_BIND> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("unbind", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_UNBIND> = $r2;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("all", $r1);

        <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege PRIVILEGE_ALL> = $r2;

        return;
    }
    private void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.security.Privilege r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;

        r0 := @this: org.apache.jackrabbit.webdav.security.Privilege;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.security.Privilege: java.lang.String privilege> = $r1;

        r0.<org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.xml.Namespace namespace> = $r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        java.lang.String $r0, $r5;
        org.apache.jackrabbit.webdav.security.Privilege r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.util.Map $r6;
        boolean $z0;
        java.lang.Object $r7;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'null\' is not a valid privilege.");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r5 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getURI()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <org.apache.jackrabbit.webdav.security.Privilege: java.util.Map REGISTERED_PRIVILEGES>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r6 = <org.apache.jackrabbit.webdav.security.Privilege: java.util.Map REGISTERED_PRIVILEGES>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (org.apache.jackrabbit.webdav.security.Privilege) $r7;

        return r1;

     label3:
        r1 = new org.apache.jackrabbit.webdav.security.Privilege;

        specialinvoke r1.<org.apache.jackrabbit.webdav.security.Privilege: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, $r2);

        $r6 = <org.apache.jackrabbit.webdav.security.Privilege: java.util.Map REGISTERED_PRIVILEGES>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        return r1;
    }
    public static org.apache.jackrabbit.webdav.security.Privilege getPrivilege(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r2;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.security.Privilege $r4;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "privilege", $r1);

        if $z0 != 0 goto label1;

        $r2 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r2.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "DAV:privilege element expected.");

        throw $r2;

     label1:
        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r0);

        $r3 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(org.w3c.dom.Element)>($r0);

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.security.Privilege getPrivilege(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, $r1);

        return $r4;
    }
    public java.lang.String getName()
    {
        org.apache.jackrabbit.webdav.security.Privilege r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Privilege;

        r1 = r0.<org.apache.jackrabbit.webdav.security.Privilege: java.lang.String privilege>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.xml.Namespace getNamespace()
    {
        org.apache.jackrabbit.webdav.security.Privilege r0;
        org.apache.jackrabbit.webdav.xml.Namespace r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.Privilege;

        r1 = r0.<org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.security.Privilege r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Element $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.security.Privilege;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "privilege", $r3);

        $r4 = r0.<org.apache.jackrabbit.webdav.security.Privilege: java.lang.String privilege>;

        $r3 = r0.<org.apache.jackrabbit.webdav.security.Privilege: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, $r4, $r3);

        return $r2;
    }
