org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport extends java.lang.Object implements org.apache.jackrabbit.webdav.version.report.Report
protected org.apache.jackrabbit.webdav.MultiStatusResponse[] responses
    public void <init>()
    {
        org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void init(org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r2;
        org.apache.jackrabbit.webdav.DavException $r3;
        org.apache.jackrabbit.webdav.version.report.ReportType $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "Unable to run report: WebDAV Resource and ReportInfo must not be null.");

        throw $r3;

     label2:
        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: org.apache.jackrabbit.webdav.version.report.ReportType getType()>();

        $z0 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.version.report.ReportType: boolean isRequestedReportType(org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r2);

        if $z0 != 0 goto label3;

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected report type: \'");

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: org.apache.jackrabbit.webdav.version.report.ReportType getType()>();

        $r6 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.version.report.ReportType: java.lang.String getReportName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', found: \'");

        $r6 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.version.report.ReportInfo: java.lang.String getReportName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, $r6);

        throw $r3;

     label3:
        $i0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int getDepth()>();

        if $i0 <= 0 goto label4;

        $r3 = new org.apache.jackrabbit.webdav.DavException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Depth header: ");

        $i0 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.version.report.ReportInfo: int getDepth()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, $r6);

        throw $r3;

     label4:
        return;
    }
    public boolean isMultiStatusReport()
    {
        org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport;

        return 1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.MultiStatusResponse[] r2;
        int i0, i1;
        org.apache.jackrabbit.webdav.MultiStatus r3;
        org.apache.jackrabbit.webdav.MultiStatusResponse r4;
        org.w3c.dom.Element $r5;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport;

        $r1 := @parameter0: org.w3c.dom.Document;

        r3 = new org.apache.jackrabbit.webdav.MultiStatus;

        specialinvoke r3.<org.apache.jackrabbit.webdav.MultiStatus: void <init>()>();

        r2 = r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: org.apache.jackrabbit.webdav.MultiStatusResponse[] responses>;

        if r2 == null goto label2;

        r2 = r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: org.apache.jackrabbit.webdav.MultiStatusResponse[] responses>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r2[i1];

        virtualinvoke r3.<org.apache.jackrabbit.webdav.MultiStatus: void addResponse(org.apache.jackrabbit.webdav.MultiStatusResponse)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r3.<org.apache.jackrabbit.webdav.MultiStatus: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        return $r5;
    }
