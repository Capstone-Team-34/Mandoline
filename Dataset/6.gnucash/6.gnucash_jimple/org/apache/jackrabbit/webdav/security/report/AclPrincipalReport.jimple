org.apache.jackrabbit.webdav.security.report.AclPrincipalReport extends org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport
public static final java.lang.String REPORT_NAME
public static final org.apache.jackrabbit.webdav.version.report.ReportType REPORT_TYPE
    static void <clinit>()
    {
        org.apache.jackrabbit.webdav.xml.Namespace $r0;
        org.apache.jackrabbit.webdav.version.report.ReportType $r1;

        $r0 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.version.report.ReportType: org.apache.jackrabbit.webdav.version.report.ReportType register(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.Class)>("acl-principal-prop-set", $r0, class "Lorg/apache/jackrabbit/webdav/security/report/AclPrincipalReport;");

        <org.apache.jackrabbit.webdav.security.report.AclPrincipalReport: org.apache.jackrabbit.webdav.version.report.ReportType REPORT_TYPE> = $r1;

        return;
    }
    public void <init>()
    {
        org.apache.jackrabbit.webdav.security.report.AclPrincipalReport r0;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AclPrincipalReport;

        specialinvoke r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: void <init>()>();

        return;
    }
    public org.apache.jackrabbit.webdav.version.report.ReportType getType()
    {
        org.apache.jackrabbit.webdav.security.report.AclPrincipalReport r0;
        org.apache.jackrabbit.webdav.version.report.ReportType r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AclPrincipalReport;

        r1 = <org.apache.jackrabbit.webdav.security.report.AclPrincipalReport: org.apache.jackrabbit.webdav.version.report.ReportType REPORT_TYPE>;

        return r1;
    }
    public void init(org.apache.jackrabbit.webdav.DavResource, org.apache.jackrabbit.webdav.version.report.ReportInfo) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.security.report.AclPrincipalReport r0;
        org.apache.jackrabbit.webdav.DavResource $r1, $r20;
        org.apache.jackrabbit.webdav.version.report.ReportInfo $r2;
        java.util.HashMap r3;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r4;
        org.apache.jackrabbit.webdav.property.DavProperty $r5;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r6;
        org.apache.jackrabbit.webdav.DavResourceLocator $r7, $r17;
        org.apache.jackrabbit.webdav.security.AclProperty r8;
        java.util.List $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace r12;
        org.apache.jackrabbit.webdav.security.Principal $r13;
        java.lang.String $r14, $r16;
        org.apache.jackrabbit.webdav.DavLocatorFactory $r15;
        org.apache.jackrabbit.webdav.DavResourceFactory $r18;
        org.apache.jackrabbit.webdav.DavSession $r19;
        org.apache.jackrabbit.webdav.MultiStatusResponse $r21;
        org.apache.jackrabbit.webdav.property.DavPropertyNameSet $r22;
        java.util.Collection $r23;
        int $i0;
        org.apache.jackrabbit.webdav.MultiStatusResponse[] $r24;
        java.lang.Object[] $r25;

        r0 := @this: org.apache.jackrabbit.webdav.security.report.AclPrincipalReport;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.DavResource;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.version.report.ReportInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.security.report.AbstractSecurityReport: void init(org.apache.jackrabbit.webdav.DavResource,org.apache.jackrabbit.webdav.version.report.ReportInfo)>($r1, $r2);

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.property.DavPropertyName ACL>;

        $r5 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.property.DavProperty getProperty(org.apache.jackrabbit.webdav.property.DavPropertyName)>($r4);

        $z0 = $r5 instanceof org.apache.jackrabbit.webdav.security.AclProperty;

        if $z0 != 0 goto label1;

        $r6 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r6.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(500, "DAV:acl property expected.");

        throw $r6;

     label1:
        $r7 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.DavResourceLocator getLocator()>();

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        r8 = (org.apache.jackrabbit.webdav.security.AclProperty) $r5;

        $r9 = virtualinvoke r8.<org.apache.jackrabbit.webdav.security.AclProperty: java.util.List getValue()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.jackrabbit.webdav.security.AclProperty$Ace) $r11;

        $r13 = virtualinvoke r12.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.Principal getPrincipal()>();

        $r14 = virtualinvoke $r13.<org.apache.jackrabbit.webdav.security.Principal: java.lang.String getHref()>();

        if $r14 == null goto label2;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

        if $z0 != 0 goto label2;

        $r15 = interfaceinvoke $r7.<org.apache.jackrabbit.webdav.DavResourceLocator: org.apache.jackrabbit.webdav.DavLocatorFactory getFactory()>();

        $r16 = interfaceinvoke $r7.<org.apache.jackrabbit.webdav.DavResourceLocator: java.lang.String getPrefix()>();

        $r17 = interfaceinvoke $r15.<org.apache.jackrabbit.webdav.DavLocatorFactory: org.apache.jackrabbit.webdav.DavResourceLocator createResourceLocator(java.lang.String,java.lang.String)>($r16, $r14);

        $r18 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.DavResourceFactory getFactory()>();

        $r19 = interfaceinvoke $r1.<org.apache.jackrabbit.webdav.DavResource: org.apache.jackrabbit.webdav.DavSession getSession()>();

        $r20 = interfaceinvoke $r18.<org.apache.jackrabbit.webdav.DavResourceFactory: org.apache.jackrabbit.webdav.DavResource createResource(org.apache.jackrabbit.webdav.DavResourceLocator,org.apache.jackrabbit.webdav.DavSession)>($r17, $r19);

        $r21 = new org.apache.jackrabbit.webdav.MultiStatusResponse;

        $r22 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.version.report.ReportInfo: org.apache.jackrabbit.webdav.property.DavPropertyNameSet getPropertyNameSet()>();

        specialinvoke $r21.<org.apache.jackrabbit.webdav.MultiStatusResponse: void <init>(org.apache.jackrabbit.webdav.DavResource,org.apache.jackrabbit.webdav.property.DavPropertyNameSet)>($r20, $r22);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r21);

        goto label2;

     label3:
        $r23 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        $r24 = newarray (org.apache.jackrabbit.webdav.MultiStatusResponse)[$i0];

        $r25 = interfaceinvoke $r23.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        $r24 = (org.apache.jackrabbit.webdav.MultiStatusResponse[]) $r25;

        r0.<org.apache.jackrabbit.webdav.security.report.AclPrincipalReport: org.apache.jackrabbit.webdav.MultiStatusResponse[] responses> = $r24;

        return;
    }
