org.apache.jackrabbit.webdav.security.AclProperty extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private final java.util.List aces
    private void <init>(java.util.List)
    {
        org.apache.jackrabbit.webdav.security.AclProperty r0;
        java.util.List r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty;

        r1 := @parameter0: java.util.List;

        $r2 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.property.DavPropertyName ACL>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 1);

        r0.<org.apache.jackrabbit.webdav.security.AclProperty: java.util.List aces> = r1;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.security.AclProperty$Ace[])
    {
        org.apache.jackrabbit.webdav.security.AclProperty r0;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace[] $r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.security.AclProperty$Ace[];

        if $r1 != null goto label2;

        $r3 = new java.util.ArrayList;

        $r2 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        specialinvoke r0.<org.apache.jackrabbit.webdav.security.AclProperty: void <init>(java.util.List)>($r2);

        return;

     label2:
        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        goto label1;
    }
    public static org.apache.jackrabbit.webdav.security.AclProperty$Ace createDenyAce(org.apache.jackrabbit.webdav.security.Principal, org.apache.jackrabbit.webdav.security.Privilege[], boolean, boolean, org.apache.jackrabbit.webdav.security.AclResource)
    {
        org.apache.jackrabbit.webdav.security.Principal $r0;
        org.apache.jackrabbit.webdav.security.Privilege[] $r1;
        boolean $z0, $z1;
        org.apache.jackrabbit.webdav.security.AclResource $r2;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace $r3;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.security.Principal;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.security.Privilege[];

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r2 := @parameter4: org.apache.jackrabbit.webdav.security.AclResource;

        $r3 = new org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: void <init>(org.apache.jackrabbit.webdav.security.Principal,boolean,org.apache.jackrabbit.webdav.security.Privilege[],boolean,boolean,org.apache.jackrabbit.webdav.security.AclResource,org.apache.jackrabbit.webdav.security.AclProperty$1)>($r0, $z0, $r1, 0, $z1, $r2, null);

        return $r3;
    }
    public static org.apache.jackrabbit.webdav.security.AclProperty createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0;
        java.util.ArrayList r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        java.lang.String $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        boolean $z0;
        org.apache.jackrabbit.webdav.DavException $r5;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r6;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace $r7;
        org.apache.jackrabbit.webdav.security.AclProperty $r8;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r2 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.property.DavPropertyName ACL>;

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: java.lang.String getName()>();

        $r2 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.property.DavPropertyName ACL>;

        $r4 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.xml.Namespace getNamespace()>();

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, $r3, $r4);

        if $z0 != 0 goto label1;

        $r5 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r5.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String)>(400, "ACL request requires a DAV:acl body.");

        throw $r5;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r4 = <org.apache.jackrabbit.webdav.security.SecurityConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "ace", $r4);

     label2:
        $z0 = virtualinvoke $r6.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r6.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r7 = staticinvoke <org.apache.jackrabbit.webdav.security.AclProperty$Ace: org.apache.jackrabbit.webdav.security.AclProperty$Ace access$000(org.w3c.dom.Element)>($r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r8 = new org.apache.jackrabbit.webdav.security.AclProperty;

        specialinvoke $r8.<org.apache.jackrabbit.webdav.security.AclProperty: void <init>(java.util.List)>(r1);

        return $r8;
    }
    public static org.apache.jackrabbit.webdav.security.AclProperty$Ace createGrantAce(org.apache.jackrabbit.webdav.security.Principal, org.apache.jackrabbit.webdav.security.Privilege[], boolean, boolean, org.apache.jackrabbit.webdav.security.AclResource)
    {
        org.apache.jackrabbit.webdav.security.Principal $r0;
        org.apache.jackrabbit.webdav.security.Privilege[] $r1;
        boolean $z0, $z1;
        org.apache.jackrabbit.webdav.security.AclResource $r2;
        org.apache.jackrabbit.webdav.security.AclProperty$Ace $r3;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.security.Principal;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.security.Privilege[];

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r2 := @parameter4: org.apache.jackrabbit.webdav.security.AclResource;

        $r3 = new org.apache.jackrabbit.webdav.security.AclProperty$Ace;

        specialinvoke $r3.<org.apache.jackrabbit.webdav.security.AclProperty$Ace: void <init>(org.apache.jackrabbit.webdav.security.Principal,boolean,org.apache.jackrabbit.webdav.security.Privilege[],boolean,boolean,org.apache.jackrabbit.webdav.security.AclResource,org.apache.jackrabbit.webdav.security.AclProperty$1)>($r0, $z0, $r1, 1, $z1, $r2, null);

        return $r3;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.security.AclProperty r0;
        java.util.List $r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.security.AclProperty: java.util.List getValue()>();

        return $r1;
    }
    public java.util.List getValue()
    {
        org.apache.jackrabbit.webdav.security.AclProperty r0;
        java.util.List r1;

        r0 := @this: org.apache.jackrabbit.webdav.security.AclProperty;

        r1 = r0.<org.apache.jackrabbit.webdav.security.AclProperty: java.util.List aces>;

        return r1;
    }
