org.apache.jackrabbit.webdav.DavException extends java.lang.Exception implements org.apache.jackrabbit.webdav.xml.XmlSerializable
public static final java.lang.String XML_ERROR
private static org.slf4j.Logger log
private static java.util.Properties statusPhrases
private int errorCode
private org.w3c.dom.Element errorCondition
    static void <clinit>()
    {
        java.io.IOException r0;
        org.slf4j.Logger $r1;
        java.util.Properties $r2;
        java.lang.Class $r3;
        java.io.InputStream $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/DavException;");

        <org.apache.jackrabbit.webdav.DavException: org.slf4j.Logger log> = $r1;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        <org.apache.jackrabbit.webdav.DavException: java.util.Properties statusPhrases> = $r2;

        $r2 = <org.apache.jackrabbit.webdav.DavException: java.util.Properties statusPhrases>;

        $r3 = class "Lorg/apache/jackrabbit/webdav/DavException;";

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("statuscode.properties");

        virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>($r4);

     label2:
        return;

     label3:
        r0 := @caughtexception;

        $r1 = <org.apache.jackrabbit.webdav.DavException: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load status properties: ");

        $r6 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void error(java.lang.String)>($r6);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void <init>(int)
    {
        org.apache.jackrabbit.webdav.DavException r0;
        int $i0;
        java.util.Properties $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $i0 := @parameter0: int;

        $r1 = <org.apache.jackrabbit.webdav.DavException: java.util.Properties statusPhrases>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

        specialinvoke r0.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String,java.lang.Throwable,org.w3c.dom.Element)>($i0, $r2, null, null);

        return;
    }
    public void <init>(int, java.lang.String)
    {
        org.apache.jackrabbit.webdav.DavException r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String,java.lang.Throwable,org.w3c.dom.Element)>($i0, $r1, null, null);

        return;
    }
    public void <init>(int, java.lang.String, java.lang.Throwable, org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.DavException r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        org.w3c.dom.Element $r3;
        org.slf4j.Logger $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 := @parameter3: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        r0.<org.apache.jackrabbit.webdav.DavException: int errorCode> = 500;

        r0.<org.apache.jackrabbit.webdav.DavException: int errorCode> = $i0;

        r0.<org.apache.jackrabbit.webdav.DavException: org.w3c.dom.Element errorCondition> = $r3;

        $r4 = <org.apache.jackrabbit.webdav.DavException: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DavException: (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r1);

        return;
    }
    public void <init>(int, java.lang.Throwable)
    {
        org.apache.jackrabbit.webdav.DavException r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.apache.jackrabbit.webdav.DavException: void <init>(int,java.lang.String,java.lang.Throwable,org.w3c.dom.Element)>($i0, null, $r1, null);

        return;
    }
    public static java.lang.String getStatusPhrase(int)
    {
        int $i0;
        java.util.Properties $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $r0 = <org.apache.jackrabbit.webdav.DavException: java.util.Properties statusPhrases>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

        return $r2;
    }
    public int getErrorCode()
    {
        org.apache.jackrabbit.webdav.DavException r0;
        int i0;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        i0 = r0.<org.apache.jackrabbit.webdav.DavException: int errorCode>;

        return i0;
    }
    public java.lang.String getStatusPhrase()
    {
        org.apache.jackrabbit.webdav.DavException r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $i0 = r0.<org.apache.jackrabbit.webdav.DavException: int errorCode>;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.DavException: java.lang.String getStatusPhrase(int)>($i0);

        return $r1;
    }
    public boolean hasErrorCondition()
    {
        org.apache.jackrabbit.webdav.DavException r0;
        org.w3c.dom.Element $r1;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $r1 = r0.<org.apache.jackrabbit.webdav.DavException: org.w3c.dom.Element errorCondition>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.DavException r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0;
        org.w3c.dom.Element $r3, $r5;
        org.w3c.dom.Node $r4;

        r0 := @this: org.apache.jackrabbit.webdav.DavException;

        $r1 := @parameter0: org.w3c.dom.Document;

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.DavException: boolean hasErrorCondition()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.jackrabbit.webdav.DavException: org.w3c.dom.Element errorCondition>;

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "error", $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.jackrabbit.webdav.DavException: org.w3c.dom.Element errorCondition>;

        $r4 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r3, 1);

        $r3 = (org.w3c.dom.Element) $r4;

        return $r3;

     label1:
        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "error", $r2);

        $r5 = r0.<org.apache.jackrabbit.webdav.DavException: org.w3c.dom.Element errorCondition>;

        $r4 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r5, 1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return $r3;

     label2:
        return null;
    }
