org.apache.jackrabbit.webdav.DavMethods extends java.lang.Object
public static final int DAV_ACL
public static final int DAV_BASELINE_CONTROL
public static final int DAV_BIND
public static final int DAV_CHECKIN
public static final int DAV_CHECKOUT
public static final int DAV_COPY
public static final int DAV_DELETE
public static final int DAV_GET
public static final int DAV_HEAD
public static final int DAV_LABEL
public static final int DAV_LOCK
public static final int DAV_MERGE
public static final int DAV_MKACTIVITY
public static final int DAV_MKCOL
public static final int DAV_MKWORKSPACE
public static final int DAV_MOVE
public static final int DAV_OPTIONS
public static final int DAV_ORDERPATCH
public static final int DAV_POLL
public static final int DAV_POST
public static final int DAV_PROPFIND
public static final int DAV_PROPPATCH
public static final int DAV_PUT
public static final int DAV_REBIND
public static final int DAV_REPORT
public static final int DAV_SEARCH
public static final int DAV_SUBSCRIBE
public static final int DAV_UNBIND
public static final int DAV_UNCHECKOUT
public static final int DAV_UNLOCK
public static final int DAV_UNSUBSCRIBE
public static final int DAV_UPDATE
public static final int DAV_VERSION_CONTROL
public static final java.lang.String METHOD_ACL
public static final java.lang.String METHOD_BASELINE_CONTROL
public static final java.lang.String METHOD_BIND
public static final java.lang.String METHOD_CHECKIN
public static final java.lang.String METHOD_CHECKOUT
public static final java.lang.String METHOD_COPY
public static final java.lang.String METHOD_DELETE
public static final java.lang.String METHOD_GET
public static final java.lang.String METHOD_HEAD
public static final java.lang.String METHOD_LABEL
public static final java.lang.String METHOD_LOCK
public static final java.lang.String METHOD_MERGE
public static final java.lang.String METHOD_MKACTIVITY
public static final java.lang.String METHOD_MKCOL
public static final java.lang.String METHOD_MKWORKSPACE
public static final java.lang.String METHOD_MOVE
public static final java.lang.String METHOD_OPTIONS
public static final java.lang.String METHOD_ORDERPATCH
public static final java.lang.String METHOD_POLL
public static final java.lang.String METHOD_POST
public static final java.lang.String METHOD_PROPFIND
public static final java.lang.String METHOD_PROPPATCH
public static final java.lang.String METHOD_PUT
public static final java.lang.String METHOD_REBIND
public static final java.lang.String METHOD_REPORT
public static final java.lang.String METHOD_SEARCH
public static final java.lang.String METHOD_SUBSCRIBE
public static final java.lang.String METHOD_UNBIND
public static final java.lang.String METHOD_UNCHECKOUT
public static final java.lang.String METHOD_UNLOCK
public static final java.lang.String METHOD_UNSUBSCRIBE
public static final java.lang.String METHOD_UPDATE
public static final java.lang.String METHOD_VERSION_CONTROL
private static int[] deltaVMethods
private static int[] labelMethods
private static java.util.Map methodMap
    static void <clinit>()
    {
        java.util.HashMap $r0;
        int[] $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.jackrabbit.webdav.DavMethods: java.util.Map methodMap> = $r0;

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("OPTIONS", 1);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("GET", 2);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("HEAD", 3);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("POST", 4);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("PUT", 6);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("DELETE", 5);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("PROPFIND", 7);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("PROPPATCH", 8);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("MKCOL", 9);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("COPY", 10);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("MOVE", 11);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("LOCK", 12);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("UNLOCK", 13);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("ORDERPATCH", 14);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("SUBSCRIBE", 15);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("UNSUBSCRIBE", 16);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("POLL", 17);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("SEARCH", 18);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("REPORT", 19);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("VERSION-CONTROL", 20);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("CHECKIN", 21);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("CHECKOUT", 22);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("UNCHECKOUT", 23);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("LABEL", 24);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("MERGE", 25);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("UPDATE", 26);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("MKWORKSPACE", 27);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("BASELINE-CONTROL", 28);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("MKACTIVITY", 29);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("ACL", 30);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("REBIND", 31);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("UNBIND", 32);

        staticinvoke <org.apache.jackrabbit.webdav.DavMethods: void addMethodCode(java.lang.String,int)>("BIND", 33);

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 7;

        $r1[4] = 24;

        $r1[5] = 10;

        <org.apache.jackrabbit.webdav.DavMethods: int[] labelMethods> = $r1;

        $r1 = newarray (int)[11];

        $r1[0] = 19;

        $r1[1] = 20;

        $r1[2] = 21;

        $r1[3] = 22;

        $r1[4] = 23;

        $r1[5] = 24;

        $r1[6] = 25;

        $r1[7] = 26;

        $r1[8] = 27;

        $r1[9] = 28;

        $r1[10] = 29;

        <org.apache.jackrabbit.webdav.DavMethods: int[] deltaVMethods> = $r1;

        return;
    }
    private void <init>()
    {
        org.apache.jackrabbit.webdav.DavMethods r0;

        r0 := @this: org.apache.jackrabbit.webdav.DavMethods;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static void addMethodCode(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        java.util.Map $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = <org.apache.jackrabbit.webdav.DavMethods: java.util.Map methodMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

        return;
    }
    public static int getMethodCode(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.jackrabbit.webdav.DavMethods: java.util.Map methodMap>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (java.lang.Integer) $r2;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return 0;
    }
    public static boolean isCreateCollectionRequest(org.apache.jackrabbit.webdav.DavServletRequest)
    {
        org.apache.jackrabbit.webdav.DavServletRequest $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.DavServletRequest;

        $r1 = interfaceinvoke $r0.<org.apache.jackrabbit.webdav.DavServletRequest: java.lang.String getMethod()>();

        $i0 = staticinvoke <org.apache.jackrabbit.webdav.DavMethods: int getMethodCode(java.lang.String)>($r1);

        if $i0 == 9 goto label1;

        if $i0 != 27 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static boolean isCreateRequest(org.apache.jackrabbit.webdav.DavServletRequest)
    {
        org.apache.jackrabbit.webdav.DavServletRequest $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.DavServletRequest;

        $r1 = interfaceinvoke $r0.<org.apache.jackrabbit.webdav.DavServletRequest: java.lang.String getMethod()>();

        $i0 = staticinvoke <org.apache.jackrabbit.webdav.DavMethods: int getMethodCode(java.lang.String)>($r1);

        if $i0 == 6 goto label1;

        if $i0 == 4 goto label1;

        if $i0 == 9 goto label1;

        if $i0 != 27 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static boolean isDeltaVMethod(org.apache.jackrabbit.webdav.DavServletRequest)
    {
        org.apache.jackrabbit.webdav.DavServletRequest $r0;
        int[] r1;
        int i0, i1, $i2, i3;
        java.lang.String $r2;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.DavServletRequest;

        $r2 = interfaceinvoke $r0.<org.apache.jackrabbit.webdav.DavServletRequest: java.lang.String getMethod()>();

        $i2 = staticinvoke <org.apache.jackrabbit.webdav.DavMethods: int getMethodCode(java.lang.String)>($r2);

        r1 = <org.apache.jackrabbit.webdav.DavMethods: int[] deltaVMethods>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        i0 = r1[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    public static boolean isMethodAffectedByLabel(org.apache.jackrabbit.webdav.DavServletRequest)
    {
        org.apache.jackrabbit.webdav.DavServletRequest $r0;
        int[] r1;
        int i0, i1, $i2, i3;
        java.lang.String $r2;

        $r0 := @parameter0: org.apache.jackrabbit.webdav.DavServletRequest;

        $r2 = interfaceinvoke $r0.<org.apache.jackrabbit.webdav.DavServletRequest: java.lang.String getMethod()>();

        $i2 = staticinvoke <org.apache.jackrabbit.webdav.DavMethods: int getMethodCode(java.lang.String)>($r2);

        r1 = <org.apache.jackrabbit.webdav.DavMethods: int[] labelMethods>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        i0 = r1[i3];

        if $i2 != i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }
