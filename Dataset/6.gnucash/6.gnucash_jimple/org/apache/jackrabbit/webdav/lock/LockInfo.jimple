org.apache.jackrabbit.webdav.lock.LockInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.DavConstants org.apache.jackrabbit.webdav.xml.XmlSerializable
private static org.slf4j.Logger log
private boolean isDeep
private boolean isRefreshLock
private java.lang.String owner
private org.apache.jackrabbit.webdav.lock.Scope scope
private long timeout
private org.apache.jackrabbit.webdav.lock.Type type
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/lock/LockInfo;");

        <org.apache.jackrabbit.webdav.lock.LockInfo: org.slf4j.Logger log> = $r0;

        return;
    }
    public void <init>(long)
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        long l0;
        byte $b1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label2;

     label1:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: long timeout> = l0;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock> = 1;

        return;

     label2:
        l0 = 2147483647L;

        goto label1;
    }
    public void <init>(org.apache.jackrabbit.webdav.lock.Scope, org.apache.jackrabbit.webdav.lock.Type, java.lang.String, long, boolean)
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.apache.jackrabbit.webdav.lock.Scope $r1;
        org.apache.jackrabbit.webdav.lock.Type $r2;
        java.lang.String $r3;
        boolean $z0;
        long l0;
        byte $b1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Scope;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.lock.Type;

        $r3 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        $z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label3;

     label1:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: long timeout> = l0;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isDeep> = $z0;

        if $r1 == null goto label2;

        if $r2 != null goto label4;

     label2:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock> = 1;

        return;

     label3:
        l0 = 2147483647L;

        goto label1;

     label4:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope scope> = $r1;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type type> = $r2;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner> = $r3;

        return;
    }
    public void <init>(org.w3c.dom.Element, long, boolean) throws org.apache.jackrabbit.webdav.DavException
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.w3c.dom.Element $r1;
        boolean $z0;
        long l0;
        byte $b1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.slf4j.Logger $r3;
        org.apache.jackrabbit.webdav.DavException $r4;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r5;
        java.lang.String $r6, $r7;
        org.apache.jackrabbit.webdav.lock.Type $r8;
        org.apache.jackrabbit.webdav.lock.Scope $r9;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        $r1 := @parameter0: org.w3c.dom.Element;

        l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label2;

     label1:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: long timeout> = l0;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isDeep> = $z0;

        if $r1 == null goto label8;

        $r2 = <org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "lockinfo", $r2);

        if $z0 != 0 goto label3;

        $r3 = <org.apache.jackrabbit.webdav.lock.LockInfo: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("\'DAV:lockinfo\' element expected.");

        $r4 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r4;

     label2:
        l0 = 2147483647L;

        goto label1;

     label3:
        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element)>($r1);

     label4:
        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r1 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r7 = "locktype";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        $r8 = staticinvoke <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type createFromXml(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type type> = $r8;

        goto label4;

     label5:
        $r7 = "lockscope";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope createFromXml(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope scope> = $r9;

        goto label4;

     label6:
        $r7 = "owner";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r2 = <org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "href", $r2);

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner> = $r6;

        $r6 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner>;

        if $r6 != null goto label4;

        $r6 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getTextTrim(org.w3c.dom.Element)>($r1);

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner> = $r6;

        goto label4;

     label7:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock> = 0;

        return;

     label8:
        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock> = 1;

        return;
    }
    public java.lang.String getOwner()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.lock.Scope getScope()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.apache.jackrabbit.webdav.lock.Scope r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope scope>;

        return r1;
    }
    public long getTimeout()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        long l0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        l0 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: long timeout>;

        return l0;
    }
    public org.apache.jackrabbit.webdav.lock.Type getType()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.apache.jackrabbit.webdav.lock.Type r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type type>;

        return r1;
    }
    public boolean isDeep()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        z0 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isDeep>;

        return z0;
    }
    public boolean isRefreshLock()
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        z0 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock>;

        return z0;
    }
    public void setScope(org.apache.jackrabbit.webdav.lock.Scope)
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.apache.jackrabbit.webdav.lock.Scope $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Scope;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope scope> = $r1;

        return;
    }
    public void setType(org.apache.jackrabbit.webdav.lock.Type)
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.apache.jackrabbit.webdav.lock.Type $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Type;

        r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type type> = $r1;

        return;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.LockInfo r0;
        org.w3c.dom.Document $r1;
        java.lang.String $r2;
        boolean $z0;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        org.w3c.dom.Element $r4, $r6;
        org.apache.jackrabbit.webdav.lock.Scope $r5;
        org.apache.jackrabbit.webdav.lock.Type $r7;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $z0 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isRefreshLock>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = <org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "lockinfo", $r3);

        $r5 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope scope>;

        $r6 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.lock.Scope: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r7 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type type>;

        $r6 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.lock.Type: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner>;

        if $r2 == null goto label2;

        $r3 = <org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String owner>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r4, "owner", $r3, $r2);

     label2:
        return $r4;
    }
