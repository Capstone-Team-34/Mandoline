org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry extends org.apache.jackrabbit.webdav.lock.AbstractLockEntry
private final org.apache.jackrabbit.webdav.lock.Scope scope
    void <init>(org.apache.jackrabbit.webdav.lock.Type, org.apache.jackrabbit.webdav.lock.Scope)
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry r0;
        org.apache.jackrabbit.webdav.lock.Type $r1, $r3;
        org.apache.jackrabbit.webdav.lock.Scope $r2, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Type;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.lock.Scope;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractLockEntry: void <init>()>();

        $r3 = <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type WRITE>;

        $z0 = virtualinvoke $r3.<org.apache.jackrabbit.webdav.lock.Type: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Type:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r7 = <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope EXCLUSIVE>;

        $z0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r7 = <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope SHARED>;

        $z0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid scope:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        r0.<org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry: org.apache.jackrabbit.webdav.lock.Scope scope> = $r2;

        return;
    }
    public org.apache.jackrabbit.webdav.lock.Scope getScope()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry r0;
        org.apache.jackrabbit.webdav.lock.Scope r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry: org.apache.jackrabbit.webdav.lock.Scope scope>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.lock.Type getType()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry r0;
        org.apache.jackrabbit.webdav.lock.Type r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry;

        r1 = <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type WRITE>;

        return r1;
    }
