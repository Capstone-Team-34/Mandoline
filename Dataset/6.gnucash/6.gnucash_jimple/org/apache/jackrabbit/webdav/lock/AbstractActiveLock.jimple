org.apache.jackrabbit.webdav.lock.AbstractActiveLock extends java.lang.Object implements org.apache.jackrabbit.webdav.lock.ActiveLock org.apache.jackrabbit.webdav.DavConstants
private java.lang.String lockroot
    public void <init>()
    {
        org.apache.jackrabbit.webdav.lock.AbstractActiveLock r0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.AbstractActiveLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.String getLockroot()
    {
        org.apache.jackrabbit.webdav.lock.AbstractActiveLock r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.AbstractActiveLock;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String lockroot>;

        return r1;
    }
    public void setLockroot(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.AbstractActiveLock r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.AbstractActiveLock;

        $r1 := @parameter0: java.lang.String;

        r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String lockroot> = $r1;

        return;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.AbstractActiveLock r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3, $r5, $r8;
        org.apache.jackrabbit.webdav.lock.Scope $r4;
        org.apache.jackrabbit.webdav.lock.Type $r6;
        boolean $z0;
        long $l0;
        byte $b1;
        java.lang.String $r7;

        r0 := @this: org.apache.jackrabbit.webdav.lock.AbstractActiveLock;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = <org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "activelock", $r2);

        $r4 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        $r5 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.lock.Scope: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        $r6 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.lock.Type getType()>();

        $r5 = virtualinvoke $r6.<org.apache.jackrabbit.webdav.lock.Type: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: boolean isDeep()>();

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element depthToXml(boolean,org.w3c.dom.Document)>($z0, $r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        $l0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: long getTimeout()>();

        $z0 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: boolean isExpired()>();

        if $z0 != 0 goto label1;

        $b1 = $l0 cmp -2147483648L;

        if $b1 == 0 goto label1;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element timeoutToXml(long,org.w3c.dom.Document)>($l0, $r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label1:
        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getOwner()>();

        if $r7 == null goto label2;

        $r2 = <org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getOwner()>();

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r3, "owner", $r2, $r7);

     label2:
        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getToken()>();

        if $r7 == null goto label3;

        $r2 = <org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "locktoken", $r2);

        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getToken()>();

        $r8 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>($r7, $r1);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label3:
        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getLockroot()>();

        if $r7 == null goto label4;

        $r2 = <org.apache.jackrabbit.webdav.lock.AbstractActiveLock: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "lockroot", $r2);

        $r7 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: java.lang.String getLockroot()>();

        $r8 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element hrefToXml(java.lang.String,org.w3c.dom.Document)>($r7, $r1);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

     label4:
        return $r3;
    }
