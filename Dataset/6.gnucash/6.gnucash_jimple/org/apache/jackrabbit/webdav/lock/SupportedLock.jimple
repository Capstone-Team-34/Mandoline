org.apache.jackrabbit.webdav.lock.SupportedLock extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private final java.util.List entries
    public void <init>()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 = <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName SUPPORTEDLOCK>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, 0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries> = $r2;

        return;
    }
    public void addEntry(org.apache.jackrabbit.webdav.lock.LockEntry)
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        org.apache.jackrabbit.webdav.lock.LockEntry $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.LockEntry;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The lock entry cannot be null.");

        throw $r2;

     label1:
        $r3 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void addEntry(org.apache.jackrabbit.webdav.lock.Type, org.apache.jackrabbit.webdav.lock.Scope)
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        org.apache.jackrabbit.webdav.lock.Type $r1;
        org.apache.jackrabbit.webdav.lock.Scope $r2;
        java.util.List $r3;
        org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry $r4;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Type;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.lock.Scope;

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        $r4 = new org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry;

        specialinvoke $r4.<org.apache.jackrabbit.webdav.lock.SupportedLock$WriteLockEntry: void <init>(org.apache.jackrabbit.webdav.lock.Type,org.apache.jackrabbit.webdav.lock.Scope)>($r1, $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }
    public java.util.Iterator getSupportedLocks()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        java.util.List $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List getValue()>();

        return $r1;
    }
    public java.util.List getValue()
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        java.util.List r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        return r1;
    }
    public boolean isSupportedLock(org.apache.jackrabbit.webdav.lock.Type, org.apache.jackrabbit.webdav.lock.Scope)
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        org.apache.jackrabbit.webdav.lock.Type $r1, $r7;
        org.apache.jackrabbit.webdav.lock.Scope $r2, $r8;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.jackrabbit.webdav.lock.LockEntry r6;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.Type;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.lock.Scope;

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.jackrabbit.webdav.lock.LockEntry) $r5;

        $r7 = interfaceinvoke r6.<org.apache.jackrabbit.webdav.lock.LockEntry: org.apache.jackrabbit.webdav.lock.Type getType()>();

        $z0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.lock.Type: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r6.<org.apache.jackrabbit.webdav.lock.LockEntry: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        $z0 = virtualinvoke $r8.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.SupportedLock r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        org.w3c.dom.Element $r3, $r8;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.jackrabbit.webdav.lock.LockEntry r7;

        r0 := @this: org.apache.jackrabbit.webdav.lock.SupportedLock;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        $r4 = r0.<org.apache.jackrabbit.webdav.lock.SupportedLock: java.util.List entries>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.jackrabbit.webdav.lock.LockEntry) $r6;

        $r8 = interfaceinvoke r7.<org.apache.jackrabbit.webdav.lock.LockEntry: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label1;

     label2:
        return $r3;
    }
