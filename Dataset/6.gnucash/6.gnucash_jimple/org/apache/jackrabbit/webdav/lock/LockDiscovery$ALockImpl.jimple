org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl extends java.lang.Object implements org.apache.jackrabbit.webdav.lock.ActiveLock
private final org.w3c.dom.Element alElement
    private void <init>(org.w3c.dom.Element)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.w3c.dom.Element $r1;
        boolean $z0;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "activelock", $r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DAV:activelock element expected.");

        throw $r3;

     label1:
        r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement> = $r1;

        return;
    }
    void <init>(org.w3c.dom.Element, org.apache.jackrabbit.webdav.lock.LockDiscovery$1)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.w3c.dom.Element $r1;
        org.apache.jackrabbit.webdav.lock.LockDiscovery$1 $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: org.w3c.dom.Element;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.lock.LockDiscovery$1;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: void <init>(org.w3c.dom.Element)>($r1);

        return;
    }
    public java.lang.String getLockroot()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "lockroot", $r1);

        if $r2 == null goto label1;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "href", $r1);

        return $r3;

     label1:
        return null;
    }
    public java.lang.String getOwner()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "owner", $r1);

        if $r2 == null goto label2;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean hasChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "href", $r1);

        if $z0 == 0 goto label1;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "href", $r1);

        return $r3;

     label1:
        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getTextTrim(org.w3c.dom.Element)>($r2);

        return $r3;

     label2:
        return null;
    }
    public org.apache.jackrabbit.webdav.lock.Scope getScope()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        org.apache.jackrabbit.webdav.lock.Scope $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "lockscope", $r1);

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope createFromXml(org.w3c.dom.Element)>($r2);

        return $r3;
    }
    public long getTimeout()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.w3c.dom.Element $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "timeout", $r2);

        $l0 = staticinvoke <org.apache.jackrabbit.webdav.header.TimeoutHeader: long parse(java.lang.String,long)>($r3, -2147483648L);

        return $l0;
    }
    public java.lang.String getToken()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "locktoken", $r1);

        if $r2 == null goto label1;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildText(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "href", $r1);

        return $r3;

     label1:
        return null;
    }
    public org.apache.jackrabbit.webdav.lock.Type getType()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        org.apache.jackrabbit.webdav.lock.Type $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "locktype", $r1);

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type createFromXml(org.w3c.dom.Element)>($r2);

        return $r3;
    }
    public boolean isDeep()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.w3c.dom.Element $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r1 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, "depth", $r1);

        $r4 = "infinity";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        return $z0;
    }
    public boolean isExpired()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r1;
    }
    public boolean isLockedByToken(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: java.lang.String getToken()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
    public void setIsDeep(boolean)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r1;
    }
    public void setLockroot(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        java.lang.String $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r2;
    }
    public void setOwner(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        java.lang.String $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r2;
    }
    public void setTimeout(long)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        long $l0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $l0 := @parameter0: long;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Node $r2;
        org.w3c.dom.Element $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: org.w3c.dom.Element alElement>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)>($r3, 1);

        $r3 = (org.w3c.dom.Element) $r2;

        return $r3;
    }
