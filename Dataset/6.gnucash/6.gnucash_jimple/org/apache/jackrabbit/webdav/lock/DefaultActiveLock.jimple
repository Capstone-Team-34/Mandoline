org.apache.jackrabbit.webdav.lock.DefaultActiveLock extends org.apache.jackrabbit.webdav.lock.AbstractActiveLock
private long expirationTime
private boolean isDeep
private java.lang.String owner
private final java.lang.String token
    public void <init>()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        java.lang.StringBuilder $r1;
        java.util.UUID $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("opaquelocktoken:");

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String token> = $r3;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: boolean isDeep> = 1;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: long expirationTime> = 2147483647L;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.lock.LockInfo)
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        org.apache.jackrabbit.webdav.lock.LockInfo $r1;
        java.lang.StringBuilder $r2;
        java.util.UUID $r3;
        java.lang.String $r4;
        org.apache.jackrabbit.webdav.lock.Type $r5, $r6;
        boolean $z0;
        org.apache.jackrabbit.webdav.lock.Scope $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.LockInfo;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.AbstractActiveLock: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("opaquelocktoken:");

        $r3 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String token> = $r4;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: boolean isDeep> = 1;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: long expirationTime> = 2147483647L;

        if $r1 == null goto label3;

        $r5 = <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type WRITE>;

        $r6 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Type getType()>();

        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.lock.Type: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r7 = <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope EXCLUSIVE>;

        $r8 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: org.apache.jackrabbit.webdav.lock.Scope getScope()>();

        $z0 = virtualinvoke $r7.<org.apache.jackrabbit.webdav.lock.Scope: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only \'exclusive write\' lock is allowed scope/type pair.");

        throw $r9;

     label2:
        $r4 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: java.lang.String getOwner()>();

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String owner> = $r4;

        $z0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: boolean isDeep()>();

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: boolean isDeep> = $z0;

        $l0 = virtualinvoke $r1.<org.apache.jackrabbit.webdav.lock.LockInfo: long getTimeout()>();

        virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: void setTimeout(long)>($l0);

     label3:
        return;
    }
    public java.lang.String getOwner()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String owner>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.lock.Scope getScope()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        org.apache.jackrabbit.webdav.lock.Scope r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        r1 = <org.apache.jackrabbit.webdav.lock.Scope: org.apache.jackrabbit.webdav.lock.Scope EXCLUSIVE>;

        return r1;
    }
    public long getTimeout()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        long $l0, $l1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $l1 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: long expirationTime>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        return $l0;
    }
    public java.lang.String getToken()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String token>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.lock.Type getType()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        org.apache.jackrabbit.webdav.lock.Type r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        r1 = <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type WRITE>;

        return r1;
    }
    public boolean isDeep()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        boolean z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        z0 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: boolean isDeep>;

        return z0;
    }
    public boolean isExpired()
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: long expirationTime>;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isLockedByToken(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String token>;

        if $r2 == null goto label1;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String token>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void setIsDeep(boolean)
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        boolean $z0;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $z0 := @parameter0: boolean;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: boolean isDeep> = $z0;

        return;
    }
    public void setOwner(java.lang.String)
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $r1 := @parameter0: java.lang.String;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: java.lang.String owner> = $r1;

        return;
    }
    public void setTimeout(long)
    {
        org.apache.jackrabbit.webdav.lock.DefaultActiveLock r0;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.DefaultActiveLock;

        $l0 := @parameter0: long;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 + $l0;

        r0.<org.apache.jackrabbit.webdav.lock.DefaultActiveLock: long expirationTime> = $l0;

     label1:
        return;
    }
