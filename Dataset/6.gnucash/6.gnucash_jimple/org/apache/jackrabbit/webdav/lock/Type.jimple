org.apache.jackrabbit.webdav.lock.Type extends java.lang.Object implements org.apache.jackrabbit.webdav.xml.XmlSerializable
public static final org.apache.jackrabbit.webdav.lock.Type WRITE
private static java.util.Map types
private int hashCode
private final java.lang.String localName
private final org.apache.jackrabbit.webdav.xml.Namespace namespace
    static void <clinit>()
    {
        org.apache.jackrabbit.webdav.xml.Namespace $r0;
        org.apache.jackrabbit.webdav.lock.Type $r1;
        java.util.HashMap $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.apache.jackrabbit.webdav.lock.Type: java.util.Map types> = $r2;

        $r0 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r1 = staticinvoke <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type create(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>("write", $r0);

        <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type WRITE> = $r1;

        return;
    }
    private void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        org.apache.jackrabbit.webdav.lock.Type r0;
        java.lang.String $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.Type;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.lock.Type: int hashCode> = -1;

        r0.<org.apache.jackrabbit.webdav.lock.Type: java.lang.String localName> = $r1;

        r0.<org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.xml.Namespace namespace> = $r2;

        return;
    }
    public static org.apache.jackrabbit.webdav.lock.Type create(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace)
    {
        java.lang.String $r0, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r1;
        org.apache.jackrabbit.webdav.lock.Type r2;
        java.util.Map $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getExpandedName(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, $r1);

        $r4 = <org.apache.jackrabbit.webdav.lock.Type: java.util.Map types>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.jackrabbit.webdav.lock.Type: java.util.Map types>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r2 = (org.apache.jackrabbit.webdav.lock.Type) $r5;

        return r2;

     label1:
        r2 = new org.apache.jackrabbit.webdav.lock.Type;

        specialinvoke r2.<org.apache.jackrabbit.webdav.lock.Type: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, $r1);

        $r4 = <org.apache.jackrabbit.webdav.lock.Type: java.util.Map types>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        return r2;
    }
    public static org.apache.jackrabbit.webdav.lock.Type createFromXml(org.w3c.dom.Element)
    {
        org.w3c.dom.Element $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r4;
        org.apache.jackrabbit.webdav.lock.Type $r5;

        $r0 := @parameter0: org.w3c.dom.Element;

        if $r0 == null goto label1;

        $r1 = "locktype";

        $r2 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r0);

     label1:
        if $r0 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'null\' is not valid lock type entry.");

        throw $r3;

     label2:
        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        $r2 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.lock.Type create(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, $r4);

        return $r5;
    }
    public boolean equals(java.lang.Object)
    {
        org.apache.jackrabbit.webdav.lock.Type r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        org.apache.jackrabbit.webdav.xml.Namespace $r5, $r6;

        r0 := @this: org.apache.jackrabbit.webdav.lock.Type;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.apache.jackrabbit.webdav.lock.Type;

        if $z0 == 0 goto label2;

        r2 = (org.apache.jackrabbit.webdav.lock.Type) $r1;

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.Type: java.lang.String localName>;

        $r4 = r2.<org.apache.jackrabbit.webdav.lock.Type: java.lang.String localName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        $r6 = r2.<org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        $z0 = virtualinvoke $r5.<org.apache.jackrabbit.webdav.xml.Namespace: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public int hashCode()
    {
        org.apache.jackrabbit.webdav.lock.Type r0;
        java.lang.StringBuilder r1, $r2;
        int $i0;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.lock.Type;

        $i0 = r0.<org.apache.jackrabbit.webdav.lock.Type: int hashCode>;

        if $i0 != -1 goto label1;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LockType : {");

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = r0.<org.apache.jackrabbit.webdav.lock.Type: java.lang.String localName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        r0.<org.apache.jackrabbit.webdav.lock.Type: int hashCode> = $i0;

     label1:
        $i0 = r0.<org.apache.jackrabbit.webdav.lock.Type: int hashCode>;

        return $i0;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.Type r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Element $r2;
        org.apache.jackrabbit.webdav.xml.Namespace $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.jackrabbit.webdav.lock.Type;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r3 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r2 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "locktype", $r3);

        $r4 = r0.<org.apache.jackrabbit.webdav.lock.Type: java.lang.String localName>;

        $r3 = r0.<org.apache.jackrabbit.webdav.lock.Type: org.apache.jackrabbit.webdav.xml.Namespace namespace>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r2, $r4, $r3);

        return $r2;
    }
