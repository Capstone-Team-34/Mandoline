org.apache.jackrabbit.webdav.lock.LockDiscovery extends org.apache.jackrabbit.webdav.property.AbstractDavProperty
private java.util.List activeLocks
    public void <init>()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 = <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName LOCKDISCOVERY>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r1, 0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks> = $r2;

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.lock.ActiveLock)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        org.apache.jackrabbit.webdav.lock.ActiveLock $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.ActiveLock;

        $r2 = <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName LOCKDISCOVERY>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r2, 0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks> = $r3;

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: void addActiveLock(org.apache.jackrabbit.webdav.lock.ActiveLock)>($r1);

        return;
    }
    public void <init>(org.apache.jackrabbit.webdav.lock.ActiveLock[])
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        org.apache.jackrabbit.webdav.lock.ActiveLock[] $r1;
        int i0, i1;
        org.apache.jackrabbit.webdav.lock.ActiveLock r2;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.ActiveLock[];

        $r3 = <org.apache.jackrabbit.webdav.property.DavPropertyName: org.apache.jackrabbit.webdav.property.DavPropertyName LOCKDISCOVERY>;

        specialinvoke r0.<org.apache.jackrabbit.webdav.property.AbstractDavProperty: void <init>(org.apache.jackrabbit.webdav.property.DavPropertyName,boolean)>($r3, 0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks> = $r4;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        specialinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: void addActiveLock(org.apache.jackrabbit.webdav.lock.ActiveLock)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void addActiveLock(org.apache.jackrabbit.webdav.lock.ActiveLock)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        org.apache.jackrabbit.webdav.lock.ActiveLock $r1;
        java.util.List $r2;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 := @parameter0: org.apache.jackrabbit.webdav.lock.ActiveLock;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }
    public static org.apache.jackrabbit.webdav.lock.LockDiscovery createFromXml(org.w3c.dom.Element)
    {
        org.w3c.dom.Element $r0;
        java.util.ArrayList r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.jackrabbit.webdav.xml.ElementIterator $r4;
        org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl $r5;
        org.apache.jackrabbit.webdav.lock.LockDiscovery $r6;
        int $i0;
        org.apache.jackrabbit.webdav.lock.ActiveLock[] $r7;
        java.lang.Object[] $r8;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r2 = <org.apache.jackrabbit.webdav.lock.LockDiscovery: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $z0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: boolean matches(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "lockdiscovery", $r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DAV:lockdiscovery element expected.");

        throw $r3;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = <org.apache.jackrabbit.webdav.lock.LockDiscovery: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.ElementIterator getChildren(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "activelock", $r2);

     label2:
        $z0 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.xml.ElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r4.<org.apache.jackrabbit.webdav.xml.ElementIterator: org.w3c.dom.Element nextElement()>();

        $r5 = new org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl;

        specialinvoke $r5.<org.apache.jackrabbit.webdav.lock.LockDiscovery$ALockImpl: void <init>(org.w3c.dom.Element,org.apache.jackrabbit.webdav.lock.LockDiscovery$1)>($r0, null);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r6 = new org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r7 = newarray (org.apache.jackrabbit.webdav.lock.ActiveLock)[$i0];

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (org.apache.jackrabbit.webdav.lock.ActiveLock[]) $r8;

        specialinvoke $r6.<org.apache.jackrabbit.webdav.lock.LockDiscovery: void <init>(org.apache.jackrabbit.webdav.lock.ActiveLock[])>($r7);

        return $r6;
    }
    public volatile java.lang.Object getValue()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        java.util.List $r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List getValue()>();

        return $r1;
    }
    public java.util.List getValue()
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        java.util.List r1;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        r1 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks>;

        return r1;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.lock.LockDiscovery r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.property.DavPropertyName $r2;
        org.w3c.dom.Element $r3, $r8;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.jackrabbit.webdav.lock.ActiveLock r7;

        r0 := @this: org.apache.jackrabbit.webdav.lock.LockDiscovery;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = virtualinvoke r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: org.apache.jackrabbit.webdav.property.DavPropertyName getName()>();

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.property.DavPropertyName: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        $r4 = r0.<org.apache.jackrabbit.webdav.lock.LockDiscovery: java.util.List activeLocks>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.jackrabbit.webdav.lock.ActiveLock) $r6;

        $r8 = interfaceinvoke r7.<org.apache.jackrabbit.webdav.lock.ActiveLock: org.w3c.dom.Element toXml(org.w3c.dom.Document)>($r1);

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        goto label1;

     label2:
        return $r3;
    }
