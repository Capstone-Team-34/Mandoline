org.apache.jackrabbit.webdav.search.SearchInfo extends java.lang.Object implements org.apache.jackrabbit.webdav.search.SearchConstants org.apache.jackrabbit.webdav.xml.XmlSerializable
private static final java.util.Set IGNORED_NAMESPACES
private static final java.lang.String LIMIT
private static final java.lang.String NRESULTS
public static final long NRESULTS_UNDEFINED
private static final java.lang.String OFFSET
public static final long OFFSET_UNDEFINED
private static org.slf4j.Logger log
private final java.lang.String language
private final org.apache.jackrabbit.webdav.xml.Namespace languageNamespace
private final java.util.Map namespaces
private long nresults
private long offset
private final java.lang.String query
    static void <clinit>()
    {
        java.util.HashSet r0;
        org.slf4j.Logger $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.lang.String $r3;
        java.util.Set $r4;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jackrabbit/webdav/search/SearchInfo;");

        <org.apache.jackrabbit.webdav.search.SearchInfo: org.slf4j.Logger log> = $r1;

        r0 = new java.util.HashSet;

        specialinvoke r0.<java.util.HashSet: void <init>()>();

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace XMLNS_NAMESPACE>;

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getURI()>();

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace XML_NAMESPACE>;

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getURI()>();

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = <org.apache.jackrabbit.webdav.DavConstants: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = virtualinvoke $r2.<org.apache.jackrabbit.webdav.xml.Namespace: java.lang.String getURI()>();

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        <org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Set IGNORED_NAMESPACES> = $r4;

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace, java.lang.String)
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        java.lang.String $r1, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.util.Map $r4;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke r0.<org.apache.jackrabbit.webdav.search.SearchInfo: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String,java.util.Map)>($r1, $r2, $r3, $r4);

        return;
    }
    public void <init>(java.lang.String, org.apache.jackrabbit.webdav.xml.Namespace, java.lang.String, java.util.Map)
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        java.lang.String $r1, $r3;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        java.util.Map r4;
        java.util.HashMap $r5;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.jackrabbit.webdav.xml.Namespace;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults> = -1L;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset> = -1L;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String language> = $r1;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace languageNamespace> = $r2;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String query> = $r3;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>(r4);

        r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Map namespaces> = r4;

        return;
    }
    public static org.apache.jackrabbit.webdav.search.SearchInfo createFromXml(org.w3c.dom.Element) throws org.apache.jackrabbit.webdav.DavException
    {
        org.w3c.dom.Element $r0, $r8;
        int i0, i1;
        java.util.HashMap r1;
        org.w3c.dom.Attr r2;
        org.apache.jackrabbit.webdav.search.SearchInfo r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        org.slf4j.Logger $r6;
        org.apache.jackrabbit.webdav.DavException $r7;
        org.w3c.dom.Attr[] $r9;
        java.util.Set $r10;
        org.apache.jackrabbit.webdav.xml.Namespace $r11;
        java.lang.Long $r12;
        long $l2;
        java.lang.NumberFormatException r13, r14;

        $r0 := @parameter0: org.w3c.dom.Element;

        if $r0 == null goto label01;

        $r4 = "searchrequest";

        $r5 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label02;

     label01:
        $r6 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("The root element must be \'searchrequest\'.");

        $r7 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r7.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r7;

     label02:
        $r8 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r0);

        $r9 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Attr[] getNamespaceAttributes(org.w3c.dom.Element)>($r0);

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        i0 = lengthof $r9;

        i1 = 0;

     label03:
        if i1 >= i0 goto label05;

        r2 = $r9[i1];

        $r10 = <org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Set IGNORED_NAMESPACES>;

        $r4 = interfaceinvoke r2.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $z0 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label04;

        $r4 = interfaceinvoke r2.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r5 = interfaceinvoke r2.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        if $r8 == null goto label10;

        r3 = new org.apache.jackrabbit.webdav.search.SearchInfo;

        $r4 = interfaceinvoke $r8.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r11 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.apache.jackrabbit.webdav.xml.Namespace getNamespace(org.w3c.dom.Element)>($r8);

        $r5 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getText(org.w3c.dom.Element)>($r8);

        specialinvoke r3.<org.apache.jackrabbit.webdav.search.SearchInfo: void <init>(java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String,java.util.Map)>($r4, $r11, $r5, r1);

        $r11 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r0 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element getChildElement(org.w3c.dom.Node,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "limit", $r11);

        if $r0 == null goto label13;

        $r11 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "nresults", $r11);

        if $r4 == null goto label07;

     label06:
        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r4);

        $l2 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        virtualinvoke r3.<org.apache.jackrabbit.webdav.search.SearchInfo: void setNumberResults(long)>($l2);

     label07:
        $r11 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

        $r4 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: java.lang.String getChildTextTrim(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r0, "offset", $r11);

        if $r4 == null goto label13;

     label08:
        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r4);

        $l2 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        virtualinvoke r3.<org.apache.jackrabbit.webdav.search.SearchInfo: void setOffset(long)>($l2);

     label09:
        return r3;

     label10:
        $r6 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("A single child element is expected with the \'DAV:searchrequest\'.");

        $r7 = new org.apache.jackrabbit.webdav.DavException;

        specialinvoke $r7.<org.apache.jackrabbit.webdav.DavException: void <init>(int)>(400);

        throw $r7;

     label11:
        r13 := @caughtexception;

        $r6 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>("DAV:nresults cannot be parsed into a long -> ignore.");

        goto label07;

     label12:
        r14 := @caughtexception;

        $r6 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>("\'offset\' cannot be parsed into a long -> ignore.");

     label13:
        return r3;

        catch java.lang.NumberFormatException from label06 to label07 with label11;
        catch java.lang.NumberFormatException from label08 to label09 with label12;
    }
    public java.lang.String getLanguageName()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String language>;

        return r1;
    }
    public org.apache.jackrabbit.webdav.xml.Namespace getLanguageNameSpace()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        org.apache.jackrabbit.webdav.xml.Namespace r1;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace languageNamespace>;

        return r1;
    }
    public java.util.Map getNamespaces()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        java.util.Map r1;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Map namespaces>;

        return r1;
    }
    public long getNumberResults()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        long l0;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults>;

        return l0;
    }
    public long getOffset()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        long l0;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset>;

        return l0;
    }
    public java.lang.String getQuery()
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        java.lang.String r1;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        r1 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String query>;

        return r1;
    }
    public void setNumberResults(long)
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        $l0 := @parameter0: long;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults> = $l0;

        return;
    }
    public void setOffset(long)
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        long $l0;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        $l0 := @parameter0: long;

        r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset> = $l0;

        return;
    }
    public org.w3c.dom.Element toXml(org.w3c.dom.Document)
    {
        org.apache.jackrabbit.webdav.search.SearchInfo r0;
        org.w3c.dom.Document $r1;
        org.apache.jackrabbit.webdav.xml.Namespace $r2;
        org.w3c.dom.Element $r3, $r10;
        java.util.Map $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String r8, r9;
        long $l0;
        byte $b1;
        java.lang.StringBuilder $r11;

        r0 := @this: org.apache.jackrabbit.webdav.search.SearchInfo;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r3 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r1, "searchrequest", $r2);

        $r4 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Map namespaces>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r4 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.util.Map namespaces>;

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (java.lang.String) $r7;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: void setNamespaceAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r3, r8, r9);

        goto label1;

     label2:
        r8 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String language>;

        $r2 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace languageNamespace>;

        r9 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: java.lang.String query>;

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r3, r8, $r2, r9);

        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label3;

        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

     label3:
        $r2 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r10 = staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace)>($r3, "limit", $r2);

        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label4;

        $r2 = <org.apache.jackrabbit.webdav.search.SearchInfo: org.apache.jackrabbit.webdav.xml.Namespace NAMESPACE>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long nresults>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r10, "nresults", $r2, r8);

     label4:
        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

        $r2 = <org.apache.jackrabbit.webdav.xml.Namespace: org.apache.jackrabbit.webdav.xml.Namespace EMPTY_NAMESPACE>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $l0 = r0.<org.apache.jackrabbit.webdav.search.SearchInfo: long offset>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jackrabbit.webdav.xml.DomUtil: org.w3c.dom.Element addChildElement(org.w3c.dom.Element,java.lang.String,org.apache.jackrabbit.webdav.xml.Namespace,java.lang.String)>($r10, "offset", $r2, r8);

     label5:
        return $r3;
    }
