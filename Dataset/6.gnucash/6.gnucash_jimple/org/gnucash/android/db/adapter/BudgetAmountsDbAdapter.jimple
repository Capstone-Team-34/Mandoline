org.gnucash.android.db.adapter.BudgetAmountsDbAdapter extends org.gnucash.android.db.adapter.DatabaseAdapter
    public void <init>(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = newarray (java.lang.String)[5];

        $r2[0] = "budget_uid";

        $r2[1] = "account_uid";

        $r2[2] = "amount_num";

        $r2[3] = "amount_denom";

        $r2[4] = "period_num";

        specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>($r1, "budget_amounts", $r2);

        return;
    }
    public static org.gnucash.android.db.adapter.BudgetAmountsDbAdapter getInstance()
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r0;

        $r0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter getBudgetAmountsDbAdapter()>();

        return $r0;
    }
    public volatile org.gnucash.android.model.BaseModel buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.BudgetAmount $r2;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: org.gnucash.android.model.BudgetAmount buildModelInstance(android.database.Cursor)>($r1);

        return $r2;
    }
    public org.gnucash.android.model.BudgetAmount buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.BudgetAmount r2;
        int $i0;
        java.lang.String $r3, $r4;
        long $l1, $l2, $l3;
        org.gnucash.android.model.Money $r5;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("budget_uid");

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("account_uid");

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("amount_num");

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("amount_denom");

        $l2 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("period_num");

        $l3 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        r2 = new org.gnucash.android.model.BudgetAmount;

        specialinvoke r2.<org.gnucash.android.model.BudgetAmount: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        $r5 = new org.gnucash.android.model.Money;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.lang.String getAccountCurrencyCode(java.lang.String)>($r4);

        specialinvoke $r5.<org.gnucash.android.model.Money: void <init>(long,long,java.lang.String)>($l1, $l2, $r3);

        virtualinvoke r2.<org.gnucash.android.model.BudgetAmount: void setAmount(org.gnucash.android.model.Money)>($r5);

        virtualinvoke r2.<org.gnucash.android.model.BudgetAmount: void setPeriodNum(long)>($l3);

        virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: void populateBaseModelAttributes(android.database.Cursor,org.gnucash.android.model.BaseModel)>($r1, r2);

        return r2;
    }
    public int deleteBudgetAmountsForBudget(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        java.lang.String $r1, $r2;
        int $i0;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.lang.String mTableName>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r2, "budget_uid=?", $r4);

        return $i0;
    }
    public org.gnucash.android.model.Money getBudgetAmountSum(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        java.lang.String $r1;
        java.util.List $r2;
        org.gnucash.android.model.Money $r3, $r7;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.gnucash.android.model.BudgetAmount r6;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.util.List getBudgetAmounts(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.lang.String getAccountCurrencyCode(java.lang.String)>($r1);

        $r3 = staticinvoke <org.gnucash.android.model.Money: org.gnucash.android.model.Money createZeroInstance(java.lang.String)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.gnucash.android.model.BudgetAmount) $r5;

        $r7 = virtualinvoke r6.<org.gnucash.android.model.BudgetAmount: org.gnucash.android.model.Money getAmount()>();

        $r3 = virtualinvoke $r3.<org.gnucash.android.model.Money: org.gnucash.android.model.Money add(org.gnucash.android.model.Money)>($r7);

        goto label1;

     label2:
        return $r3;
    }
    public java.util.List getBudgetAmounts(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        java.lang.String $r1;
        java.util.ArrayList r2;
        java.lang.String[] $r3;
        android.database.Cursor $r4;
        boolean $z0;
        org.gnucash.android.model.BudgetAmount $r5;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r1;

        $r4 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: android.database.Cursor fetchAllRecords(java.lang.String,java.lang.String[],java.lang.String)>("account_uid = ?", $r3, null);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: org.gnucash.android.model.BudgetAmount buildModelInstance(android.database.Cursor)>($r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return r2;
    }
    public java.util.List getBudgetAmountsForBudget(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        java.lang.String $r1;
        java.util.ArrayList r2;
        java.lang.String[] $r3;
        android.database.Cursor $r4;
        boolean $z0;
        org.gnucash.android.model.BudgetAmount $r5;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r1;

        $r4 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: android.database.Cursor fetchAllRecords(java.lang.String,java.lang.String[],java.lang.String)>("budget_uid=?", $r3, null);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: org.gnucash.android.model.BudgetAmount buildModelInstance(android.database.Cursor)>($r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return r2;
    }
    protected volatile android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.BaseModel)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.BudgetAmount $r3;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.BaseModel;

        $r3 = (org.gnucash.android.model.BudgetAmount) $r2;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement,org.gnucash.android.model.BudgetAmount)>($r1, $r3);

        return $r1;
    }
    protected android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.BudgetAmount)
    {
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.BudgetAmount $r2;
        java.lang.String $r3;
        org.gnucash.android.model.Money $r4;
        long $l0;

        r0 := @this: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.BudgetAmount;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: java.lang.String getBudgetUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: java.lang.String getAccountUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, $r3);

        $r4 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: org.gnucash.android.model.Money getAmount()>();

        $l0 = virtualinvoke $r4.<org.gnucash.android.model.Money: long getNumerator()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(3, $l0);

        $r4 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: org.gnucash.android.model.Money getAmount()>();

        $l0 = virtualinvoke $r4.<org.gnucash.android.model.Money: long getDenominator()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(4, $l0);

        $l0 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: long getPeriodNum()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(5, $l0);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.BudgetAmount: java.lang.String getUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(6, $r3);

        return $r1;
    }
