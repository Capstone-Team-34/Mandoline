org.gnucash.android.db.adapter.CommoditiesDbAdapter extends org.gnucash.android.db.adapter.DatabaseAdapter
    public void <init>(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        org.gnucash.android.model.Commodity $r3;
        java.lang.String $r4;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = "fullname";

        $r2[1] = "namespace";

        $r2[2] = "mnemonic";

        $r2[3] = "local_symbol";

        $r2[4] = "cusip";

        $r2[5] = "fraction";

        $r2[6] = "quote_flag";

        specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>($r1, "commodities", $r2);

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("USD");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity USD> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("EUR");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity EUR> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("GBP");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity GBP> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("CHF");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity CHF> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("CAD");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity CAD> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("JPY");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity JPY> = $r3;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>("AUD");

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity AUD> = $r3;

        $r4 = staticinvoke <org.gnucash.android.app.GnuCashApplication: java.lang.String getDefaultCurrencyCode()>();

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>($r4);

        <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity DEFAULT_COMMODITY> = $r3;

        return;
    }
    public static org.gnucash.android.db.adapter.CommoditiesDbAdapter getInstance()
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter $r0;

        $r0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: org.gnucash.android.db.adapter.CommoditiesDbAdapter getCommoditiesDbAdapter()>();

        return $r0;
    }
    public volatile org.gnucash.android.model.BaseModel buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Commodity $r2;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity buildModelInstance(android.database.Cursor)>($r1);

        return $r2;
    }
    public org.gnucash.android.model.Commodity buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Commodity r2;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        org.gnucash.android.model.Commodity$Namespace $r8;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("fullname");

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("mnemonic");

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("namespace");

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("cusip");

        $r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("local_symbol");

        $r7 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("fraction");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("quote_flag");

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i1);

        r2 = new org.gnucash.android.model.Commodity;

        specialinvoke r2.<org.gnucash.android.model.Commodity: void <init>(java.lang.String,java.lang.String,int)>($r3, $r4, $i0);

        $r8 = staticinvoke <org.gnucash.android.model.Commodity$Namespace: org.gnucash.android.model.Commodity$Namespace valueOf(java.lang.String)>($r5);

        virtualinvoke r2.<org.gnucash.android.model.Commodity: void setNamespace(org.gnucash.android.model.Commodity$Namespace)>($r8);

        virtualinvoke r2.<org.gnucash.android.model.Commodity: void setCusip(java.lang.String)>($r6);

        virtualinvoke r2.<org.gnucash.android.model.Commodity: void setQuoteFlag(int)>($i1);

        virtualinvoke r2.<org.gnucash.android.model.Commodity: void setLocalSymbol(java.lang.String)>($r7);

        virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: void populateBaseModelAttributes(android.database.Cursor,org.gnucash.android.model.BaseModel)>($r1, r2);

        return r2;
    }
    public android.database.Cursor fetchAllRecords()
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        java.lang.String $r1;
        android.database.Cursor $r2;
        android.database.sqlite.SQLiteDatabase $r3;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r3 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r1 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String mTableName>;

        $r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, null, null, null, null, null, "fullname ASC");

        return $r2;
    }
    public android.database.Cursor fetchAllRecords(java.lang.String)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        java.lang.String $r1, $r2;
        android.database.Cursor $r3;
        android.database.sqlite.SQLiteDatabase $r4;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String mTableName>;

        $r3 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r2, null, null, null, null, null, $r1);

        return $r3;
    }
    public org.gnucash.android.model.Commodity getCommodity(java.lang.String)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        java.lang.String $r1, $r6;
        java.lang.String[] $r2;
        android.database.Cursor $r3;
        org.gnucash.android.model.Commodity r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r1;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: android.database.Cursor fetchAllRecords(java.lang.String,java.lang.String[],java.lang.String)>("mnemonic=?", $r2, null);

        r4 = null;

        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity buildModelInstance(android.database.Cursor)>($r3);

     label1:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return r4;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commodity not found in the database: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r1);

        staticinvoke <com.crashlytics.android.Crashlytics: void log(java.lang.String)>($r1);

        goto label1;
    }
    public java.lang.String getCurrencyCode(java.lang.String)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        java.lang.String $r1, $r3;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r4, $r5;
        android.database.Cursor $r6;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String mTableName>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "mnemonic";

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = $r1;

        $r6 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, "uid = ?", $r5, null, null, null);

     label1:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label2:
        if $z0 == 0 goto label5;

     label3:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("mnemonic");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label4:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $r1;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("guid ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not exits in commodity db");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label6:
        $r9 := @caughtexception;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
    protected volatile android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.BaseModel)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.Commodity $r3;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.BaseModel;

        $r3 = (org.gnucash.android.model.Commodity) $r2;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement,org.gnucash.android.model.Commodity)>($r1, $r3);

        return $r1;
    }
    protected android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.Commodity)
    {
        org.gnucash.android.db.adapter.CommoditiesDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.Commodity $r2;
        java.lang.String $r3;
        org.gnucash.android.model.Commodity$Namespace $r4;
        int $i0;
        long $l1;

        r0 := @this: org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.Commodity;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: java.lang.String getFullname()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r3);

        $r4 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity$Namespace getNamespace()>();

        $r3 = virtualinvoke $r4.<org.gnucash.android.model.Commodity$Namespace: java.lang.String name()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: java.lang.String getMnemonic()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(3, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: java.lang.String getLocalSymbol()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(4, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: java.lang.String getCusip()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(5, $r3);

        $i0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: int getSmallestFraction()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(6, $l1);

        $i0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: int getQuoteFlag()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(7, $l1);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: java.lang.String getUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(8, $r3);

        return $r1;
    }
