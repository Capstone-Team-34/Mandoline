org.gnucash.android.db.adapter.BooksDbAdapter extends org.gnucash.android.db.adapter.DatabaseAdapter
    public void <init>(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = "name";

        $r2[1] = "root_account_guid";

        $r2[2] = "root_template_guid";

        $r2[3] = "uri";

        $r2[4] = "is_active";

        $r2[5] = "uid";

        $r2[6] = "last_export_time";

        specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>($r1, "books", $r2);

        return;
    }
    public static org.gnucash.android.db.adapter.BooksDbAdapter getInstance()
    {
        org.gnucash.android.db.adapter.BooksDbAdapter $r0;

        $r0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: org.gnucash.android.db.adapter.BooksDbAdapter getBooksDbAdapter()>();

        return $r0;
    }
    public volatile org.gnucash.android.model.BaseModel buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Book $r2;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: org.gnucash.android.model.Book buildModelInstance(android.database.Cursor)>($r1);

        return $r2;
    }
    public org.gnucash.android.model.Book buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Book r2;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        android.net.Uri $r8;
        boolean $z0;
        java.sql.Timestamp $r9;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("root_account_guid");

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("root_template_guid");

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uri");

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("name");

        $r6 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("is_active");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("last_export_time");

        $r7 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i1);

        r2 = new org.gnucash.android.model.Book;

        specialinvoke r2.<org.gnucash.android.model.Book: void <init>(java.lang.String)>($r3);

        virtualinvoke r2.<org.gnucash.android.model.Book: void setDisplayName(java.lang.String)>($r6);

        virtualinvoke r2.<org.gnucash.android.model.Book: void setRootTemplateUID(java.lang.String)>($r4);

        if $r5 != null goto label3;

        $r8 = null;

     label1:
        virtualinvoke r2.<org.gnucash.android.model.Book: void setSourceUri(android.net.Uri)>($r8);

        if $i0 <= 0 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke r2.<org.gnucash.android.model.Book: void setActive(boolean)>($z0);

        $r9 = staticinvoke <org.gnucash.android.util.TimestampHelper: java.sql.Timestamp getTimestampFromUtcString(java.lang.String)>($r7);

        virtualinvoke r2.<org.gnucash.android.model.Book: void setLastSync(java.sql.Timestamp)>($r9);

        virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: void populateBaseModelAttributes(android.database.Cursor,org.gnucash.android.model.BaseModel)>($r1, r2);

        return r2;

     label3:
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }
    public boolean deleteBook(java.lang.String)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        java.lang.String $r1;
        android.content.Context $r2;
        boolean $z0, z1;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.content.Context getAppContext()>();

        $z0 = virtualinvoke $r2.<android.content.Context: boolean deleteDatabase(java.lang.String)>($r1);

        z1 = $z0;

        if $z0 == 0 goto label1;

        z1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: boolean deleteRecord(java.lang.String)>($r1);

        z1 = $z0 & z1;

     label1:
        $r3 = staticinvoke <org.gnucash.android.ui.settings.PreferenceActivity: android.content.SharedPreferences getBookSharedPreferences(java.lang.String)>($r1);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor clear()>();

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        return z1;
    }
    public java.lang.String generateDefaultBookName()
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        long $l0, $l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.database.sqlite.SQLiteDatabase $r3;
        android.database.sqlite.SQLiteStatement $r4;
        android.content.Context $r5;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        byte $b2;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $l0 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: long getRecordsCount()>();

        $l0 = $l0 + 1L;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT COUNT(*) FROM ");

        $r2 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String mTableName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ?");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r2);

     label1:
        $r5 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.content.Context getAppContext()>();

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r7;

        $r2 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296261, $r6);

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r2);

        $l1 = virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        return $r2;

     label2:
        $l0 = $l0 + 1L;

        goto label1;
    }
    public java.lang.String getActiveBookDisplayName()
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        java.lang.String $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r3;
        android.database.Cursor $r4;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r5;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r2 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r1 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String mTableName>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "name";

        $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, "is_active = 1", null, null, null, null);

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z0 == 0 goto label5;

     label3:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("name");

        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label4:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r1;

     label5:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return "Book1";

     label6:
        $r5 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }
    public java.lang.String getActiveBookUID()
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        android.database.Cursor $r4;
        int $i0;
        java.lang.RuntimeException $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String mTableName>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "uid";

        $r4 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, "is_active= 1", null, null, null, null, "1");

     label1:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getCount()>();

     label2:
        if $i0 != 0 goto label5;

     label3:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("There is no active book in the app. This should NEVER happen, fix your bugs!");

        throw $r5;

     label4:
        $r6 := @caughtexception;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw $r6;

     label5:
        interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uid");

        $r2 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label6:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public boolean isActive(java.lang.String)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String getAttribute(java.lang.String,java.lang.String)>($r1, "is_active");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.String setActive(java.lang.String)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.content.ContentValues r1;
        java.lang.String r2, $r5;
        java.lang.Integer $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r6;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        r2 := @parameter0: java.lang.String;

        if r2 != null goto label1;

        r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String getActiveBookUID()>();

        return r2;

     label1:
        r1 = new android.content.ContentValues;

        specialinvoke r1.<android.content.ContentValues: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("is_active", $r3);

        $r4 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r5 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String mTableName>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r5, r1, null, null);

        virtualinvoke r1.<android.content.ContentValues: void clear()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("is_active", $r3);

        $r4 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r5 = r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String mTableName>;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r2;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r5, r1, "uid = ?", $r6);

        return r2;
    }
    protected volatile android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.BaseModel)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.Book $r3;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.BaseModel;

        $r3 = (org.gnucash.android.model.Book) $r2;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement,org.gnucash.android.model.Book)>($r1, $r3);

        return $r1;
    }
    protected android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.Book)
    {
        org.gnucash.android.db.adapter.BooksDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.Book $r2;
        java.lang.String $r3;
        android.net.Uri $r4;
        boolean $z0;
        long $l0;
        java.sql.Timestamp $r5;

        r0 := @this: org.gnucash.android.db.adapter.BooksDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.Book;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.lang.String getDisplayName()>();

        if $r3 != null goto label4;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String generateDefaultBookName()>();

     label1:
        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.lang.String getRootAccountUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.lang.String getRootTemplateUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(3, $r3);

        $r4 = virtualinvoke $r2.<org.gnucash.android.model.Book: android.net.Uri getSourceUri()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke $r2.<org.gnucash.android.model.Book: android.net.Uri getSourceUri()>();

        $r3 = virtualinvoke $r4.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(4, $r3);

     label2:
        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Book: boolean isActive()>();

        if $z0 == 0 goto label5;

        $l0 = 1L;

     label3:
        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(5, $l0);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.lang.String getUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(6, $r3);

        $r5 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.sql.Timestamp getLastSync()>();

        $r3 = staticinvoke <org.gnucash.android.util.TimestampHelper: java.lang.String getUtcStringFromTimestamp(java.sql.Timestamp)>($r5);

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(7, $r3);

        return $r1;

     label4:
        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Book: java.lang.String getDisplayName()>();

        goto label1;

     label5:
        $l0 = 0L;

        goto label3;
    }
