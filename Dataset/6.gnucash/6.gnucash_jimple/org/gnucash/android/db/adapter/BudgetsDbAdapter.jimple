org.gnucash.android.db.adapter.BudgetsDbAdapter extends org.gnucash.android.db.adapter.DatabaseAdapter
private org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter
private org.gnucash.android.db.adapter.RecurrenceDbAdapter mRecurrenceDbAdapter
    public void <init>(android.database.sqlite.SQLiteDatabase, org.gnucash.android.db.adapter.BudgetAmountsDbAdapter, org.gnucash.android.db.adapter.RecurrenceDbAdapter)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r2;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter $r3;
        java.lang.String[] $r4;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        $r3 := @parameter2: org.gnucash.android.db.adapter.RecurrenceDbAdapter;

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "name";

        $r4[1] = "description";

        $r4[2] = "recurrence_uid";

        $r4[3] = "num_periods";

        specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>($r1, "budgets", $r4);

        r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.RecurrenceDbAdapter mRecurrenceDbAdapter> = $r3;

        r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter> = $r2;

        return;
    }
    public static org.gnucash.android.db.adapter.BudgetsDbAdapter getInstance()
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter $r0;

        $r0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: org.gnucash.android.db.adapter.BudgetsDbAdapter getBudgetDbAdapter()>();

        return $r0;
    }
    public volatile void addRecord(org.gnucash.android.model.BaseModel, org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.Budget $r3;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r2 := @parameter0: org.gnucash.android.model.BaseModel;

        $r1 := @parameter1: org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod;

        $r3 = (org.gnucash.android.model.Budget) $r2;

        virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: void addRecord(org.gnucash.android.model.Budget,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>($r3, $r1);

        return;
    }
    public void addRecord(org.gnucash.android.model.Budget, org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        org.gnucash.android.model.Budget $r1;
        org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod $r2;
        java.util.List $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter $r5;
        org.gnucash.android.model.Recurrence $r6;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r7;
        java.lang.String $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.gnucash.android.model.BudgetAmount r11;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: org.gnucash.android.model.Budget;

        $r2 := @parameter1: org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod;

        $r3 = virtualinvoke $r1.<org.gnucash.android.model.Budget: java.util.List getBudgetAmounts()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Budgets must have budget amounts");

        throw $r4;

     label1:
        $r5 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.RecurrenceDbAdapter mRecurrenceDbAdapter>;

        $r6 = virtualinvoke $r1.<org.gnucash.android.model.Budget: org.gnucash.android.model.Recurrence getRecurrence()>();

        virtualinvoke $r5.<org.gnucash.android.db.adapter.RecurrenceDbAdapter: void addRecord(org.gnucash.android.model.BaseModel,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>($r6, $r2);

        specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: void addRecord(org.gnucash.android.model.BaseModel,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>($r1, $r2);

        $r7 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter>;

        $r8 = virtualinvoke $r1.<org.gnucash.android.model.Budget: java.lang.String getUID()>();

        virtualinvoke $r7.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: int deleteBudgetAmountsForBudget(java.lang.String)>($r8);

        $r3 = virtualinvoke $r1.<org.gnucash.android.model.Budget: java.util.List getBudgetAmounts()>();

        $r9 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.gnucash.android.model.BudgetAmount) $r10;

        $r7 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter>;

        virtualinvoke $r7.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: void addRecord(org.gnucash.android.model.BaseModel,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>(r11, $r2);

        goto label2;

     label3:
        return;
    }
    public volatile org.gnucash.android.model.BaseModel buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Budget $r2;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $r2 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.model.Budget buildModelInstance(android.database.Cursor)>($r1);

        return $r2;
    }
    public org.gnucash.android.model.Budget buildModelInstance(android.database.Cursor)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        android.database.Cursor $r1;
        org.gnucash.android.model.Budget r2;
        int $i0;
        java.lang.String $r3, $r4, $r5;
        long $l1;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter $r6;
        org.gnucash.android.model.BaseModel $r7;
        org.gnucash.android.model.Recurrence $r8;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r9;
        java.util.List $r10;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("name");

        $r3 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("description");

        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("recurrence_uid");

        $r5 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("num_periods");

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        r2 = new org.gnucash.android.model.Budget;

        specialinvoke r2.<org.gnucash.android.model.Budget: void <init>(java.lang.String)>($r3);

        virtualinvoke r2.<org.gnucash.android.model.Budget: void setDescription(java.lang.String)>($r4);

        $r6 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.RecurrenceDbAdapter mRecurrenceDbAdapter>;

        $r7 = virtualinvoke $r6.<org.gnucash.android.db.adapter.RecurrenceDbAdapter: org.gnucash.android.model.BaseModel getRecord(java.lang.String)>($r5);

        $r8 = (org.gnucash.android.model.Recurrence) $r7;

        virtualinvoke r2.<org.gnucash.android.model.Budget: void setRecurrence(org.gnucash.android.model.Recurrence)>($r8);

        virtualinvoke r2.<org.gnucash.android.model.Budget: void setNumberOfPeriods(long)>($l1);

        virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: void populateBaseModelAttributes(android.database.Cursor,org.gnucash.android.model.BaseModel)>($r1, r2);

        $r9 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter>;

        $r3 = virtualinvoke r2.<org.gnucash.android.model.Budget: java.lang.String getUID()>();

        $r10 = virtualinvoke $r9.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.util.List getBudgetAmountsForBudget(java.lang.String)>($r3);

        virtualinvoke r2.<org.gnucash.android.model.Budget: void setBudgetAmounts(java.util.List)>($r10);

        return r2;
    }
    public long bulkAddRecords(java.util.List, org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        java.util.List r1, $r8;
        org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod $r2;
        java.util.ArrayList r3, r4;
        int $i0;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.gnucash.android.model.Budget r7;
        org.gnucash.android.model.Recurrence $r9;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter $r10;
        long $l1;
        byte $b2;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r11;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod;

        r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i0 = $i0 * 2;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.gnucash.android.model.Budget) $r6;

        $r8 = virtualinvoke r7.<org.gnucash.android.model.Budget: java.util.List getBudgetAmounts()>();

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label2:
        r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.gnucash.android.model.Budget) $r6;

        $r9 = virtualinvoke r7.<org.gnucash.android.model.Budget: org.gnucash.android.model.Recurrence getRecurrence()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label3;

     label4:
        $r10 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.RecurrenceDbAdapter mRecurrenceDbAdapter>;

        virtualinvoke $r10.<org.gnucash.android.db.adapter.RecurrenceDbAdapter: long bulkAddRecords(java.util.List,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>(r4, $r2);

        $l1 = specialinvoke r0.<org.gnucash.android.db.adapter.DatabaseAdapter: long bulkAddRecords(java.util.List,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>(r1, $r2);

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label5;

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r11 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter>;

        virtualinvoke $r11.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: long bulkAddRecords(java.util.List,org.gnucash.android.db.adapter.DatabaseAdapter$UpdateMethod)>(r3, $r2);

     label5:
        return $l1;
    }
    public android.database.Cursor fetchBudgetsForAccount(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        java.lang.String $r1;
        android.database.sqlite.SQLiteQueryBuilder r2;
        java.lang.String[] r3, r4;
        android.database.Cursor $r5;
        android.database.sqlite.SQLiteDatabase $r6;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke r2.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("budgets,budget_amounts ON budgets.uid = budget_amounts.budget_uid");

        virtualinvoke r2.<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>(1);

        r3 = newarray (java.lang.String)[1];

        r3[0] = "budgets.*";

        r4 = newarray (java.lang.String)[1];

        r4[0] = $r1;

        $r6 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r5 = virtualinvoke r2.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, r3, "budget_amounts.account_uid = ?", r4, null, null, "budgets.name ASC");

        return $r5;
    }
    public java.util.List getAccountBudgets(java.lang.String)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        java.lang.String $r1;
        java.util.ArrayList r2;
        android.database.Cursor $r3;
        boolean $z0;
        org.gnucash.android.model.Budget $r4;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: android.database.Cursor fetchBudgetsForAccount(java.lang.String)>($r1);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.model.Budget buildModelInstance(android.database.Cursor)>($r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return r2;
    }
    public org.gnucash.android.model.Money getAccountSum(java.lang.String, long, long)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        java.lang.String $r1;
        long $l0, $l1;
        java.util.ArrayList r2;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.gnucash.android.model.BudgetAmount r7;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r8;
        android.database.sqlite.SQLiteDatabase $r9;
        org.gnucash.android.model.Money $r10;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r3 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetAmountsDbAdapter mBudgetAmountsDbAdapter>;

        $r4 = virtualinvoke $r3.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: java.util.List getBudgetAmountsForBudget(java.lang.String)>($r1);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.gnucash.android.model.BudgetAmount) $r6;

        $r1 = virtualinvoke r7.<org.gnucash.android.model.BudgetAmount: java.lang.String getAccountUID()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label1;

     label2:
        $r8 = new org.gnucash.android.db.adapter.AccountsDbAdapter;

        $r9 = r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        specialinvoke $r8.<org.gnucash.android.db.adapter.AccountsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r9);

        $r10 = virtualinvoke $r8.<org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.model.Money getAccountsBalance(java.util.List,long,long)>(r2, $l0, $l1);

        return $r10;
    }
    protected volatile android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.BaseModel)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.Budget $r3;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.BaseModel;

        $r3 = (org.gnucash.android.model.Budget) $r2;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.adapter.BudgetsDbAdapter: android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement,org.gnucash.android.model.Budget)>($r1, $r3);

        return $r1;
    }
    protected android.database.sqlite.SQLiteStatement setBindings(android.database.sqlite.SQLiteStatement, org.gnucash.android.model.Budget)
    {
        org.gnucash.android.db.adapter.BudgetsDbAdapter r0;
        android.database.sqlite.SQLiteStatement $r1;
        org.gnucash.android.model.Budget $r2;
        java.lang.String $r3;
        org.gnucash.android.model.Recurrence $r4;
        long $l0;

        r0 := @this: org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: org.gnucash.android.model.Budget;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Budget: java.lang.String getName()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r3);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Budget: java.lang.String getDescription()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Budget: java.lang.String getDescription()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(2, $r3);

     label1:
        $r4 = virtualinvoke $r2.<org.gnucash.android.model.Budget: org.gnucash.android.model.Recurrence getRecurrence()>();

        $r3 = virtualinvoke $r4.<org.gnucash.android.model.Recurrence: java.lang.String getUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(3, $r3);

        $l0 = virtualinvoke $r2.<org.gnucash.android.model.Budget: long getNumberOfPeriods()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(4, $l0);

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Budget: java.lang.String getUID()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(5, $r3);

        return $r1;
    }
