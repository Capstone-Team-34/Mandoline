org.gnucash.android.ui.util.RecurrenceParser extends java.lang.Object
public static final long DAY_MILLIS
public static final long MINUTE_MILLIS
public static final long MONTH_MILLIS
public static final long SECOND_MILLIS
public static final long WEEK_MILLIS
public static final long YEAR_MILLIS
    public void <init>()
    {
        org.gnucash.android.ui.util.RecurrenceParser r0;

        r0 := @this: org.gnucash.android.ui.util.RecurrenceParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.gnucash.android.model.Recurrence parse(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence)
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r0;
        int $i0;
        org.gnucash.android.model.PeriodType r1;
        org.gnucash.android.model.Recurrence r2;
        int[] $r3;
        java.util.List $r4;
        android.text.format.Time $r5;
        java.sql.Timestamp $r6;
        long $l1;

        $r0 := @parameter0: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        if $r0 != null goto label01;

        return null;

     label01:
        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int freq>;

        lookupswitch($i0)
        {
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label02;
        };

     label02:
        r1 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType MONTH>;

     label03:
        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if $i0 != 0 goto label09;

        $i0 = 1;

     label04:
        virtualinvoke r1.<org.gnucash.android.model.PeriodType: void setMultiplier(int)>($i0);

        r2 = new org.gnucash.android.model.Recurrence;

        specialinvoke r2.<org.gnucash.android.model.Recurrence: void <init>(org.gnucash.android.model.PeriodType)>(r1);

        staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.Recurrence)>($r0, r2);

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        $r4 = staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: java.util.List parseByDay(int[])>($r3);

        virtualinvoke r2.<org.gnucash.android.model.Recurrence: void setByDays(java.util.List)>($r4);

        $r5 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: android.text.format.Time startDate>;

        if $r5 == null goto label10;

        $r6 = new java.sql.Timestamp;

        $r5 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: android.text.format.Time startDate>;

        $l1 = virtualinvoke $r5.<android.text.format.Time: long toMillis(boolean)>(0);

        specialinvoke $r6.<java.sql.Timestamp: void <init>(long)>($l1);

        virtualinvoke r2.<org.gnucash.android.model.Recurrence: void setPeriodStart(java.sql.Timestamp)>($r6);

        return r2;

     label05:
        r1 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType DAY>;

        goto label03;

     label06:
        r1 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType WEEK>;

        goto label03;

     label07:
        r1 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType MONTH>;

        goto label03;

     label08:
        r1 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType YEAR>;

        goto label03;

     label09:
        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        goto label04;

     label10:
        return r2;
    }
    private static java.util.List parseByDay(int[])
    {
        int[] $r0;
        int i0, $i1, $i2;
        java.util.List $r1;
        java.util.ArrayList r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: int[];

        if $r0 != null goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;

     label1:
        r2 = new java.util.ArrayList;

        $i1 = lengthof $r0;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i1);

        $i1 = lengthof $r0;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        i0 = $r0[$i2];

        i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int day2CalendarDay(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return r2;
    }
    private static void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence, org.gnucash.android.model.Recurrence)
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r0;
        org.gnucash.android.model.Recurrence $r1;
        android.text.format.Time r2;
        java.lang.String $r3;
        int $i0;
        java.sql.Timestamp $r4;
        long $l1;

        $r0 := @parameter0: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        $r1 := @parameter1: org.gnucash.android.model.Recurrence;

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        r2 = new android.text.format.Time;

        specialinvoke r2.<android.text.format.Time: void <init>()>();

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        virtualinvoke r2.<android.text.format.Time: boolean parse(java.lang.String)>($r3);

        $r4 = new java.sql.Timestamp;

        $l1 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        specialinvoke $r4.<java.sql.Timestamp: void <init>(long)>($l1);

        virtualinvoke $r1.<org.gnucash.android.model.Recurrence: void setPeriodEnd(java.sql.Timestamp)>($r4);

        return;

     label1:
        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        if $i0 <= 0 goto label2;

        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        virtualinvoke $r1.<org.gnucash.android.model.Recurrence: void setPeriodEnd(int)>($i0);

     label2:
        return;
    }
