org.gnucash.android.export.Exporter extends java.lang.Object
public static final java.lang.String BASE_FOLDER_PATH
private static final java.text.SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT
protected static java.lang.String LOG_TAG
protected final org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter
protected java.lang.String mBookUID
protected final org.gnucash.android.db.adapter.BudgetsDbAdapter mBudgetsDbAdapter
private final java.io.File mCacheDir
protected final org.gnucash.android.db.adapter.CommoditiesDbAdapter mCommoditiesDbAdapter
protected final android.content.Context mContext
protected final android.database.sqlite.SQLiteDatabase mDb
private java.lang.String mExportCacheFilePath
protected final org.gnucash.android.export.ExportParams mExportParams
protected final org.gnucash.android.db.adapter.PricesDbAdapter mPricesDbAdapter
protected final org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter
protected final org.gnucash.android.db.adapter.SplitsDbAdapter mSplitsDbAdapter
protected final org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter
    static void <clinit>()
    {
        java.util.Locale $r0;
        java.lang.StringBuilder $r1;
        java.io.File $r2;
        java.lang.String $r3;
        java.text.SimpleDateFormat $r4;

        <org.gnucash.android.export.Exporter: java.lang.String LOG_TAG> = "Exporter";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.gnucash.android");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.export.Exporter: java.lang.String BASE_FOLDER_PATH> = $r3;

        $r4 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyyMMdd_HHmmss", $r0);

        <org.gnucash.android.export.Exporter: java.text.SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT> = $r4;

        return;
    }
    public void <init>(org.gnucash.android.export.ExportParams, android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.export.Exporter r0;
        org.gnucash.android.export.ExportParams $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter r3;
        android.content.Context $r4;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r5;
        org.gnucash.android.db.adapter.TransactionsDbAdapter $r6;
        org.gnucash.android.db.adapter.SplitsDbAdapter $r7;
        org.gnucash.android.db.adapter.PricesDbAdapter $r8;
        org.gnucash.android.db.adapter.CommoditiesDbAdapter $r9;
        org.gnucash.android.db.adapter.BudgetsDbAdapter $r10;
        org.gnucash.android.db.adapter.ScheduledActionDbAdapter $r11;
        java.io.File $r12, $r14;
        java.lang.String $r13;
        org.gnucash.android.export.ExportFormat $r15;
        org.gnucash.android.db.adapter.BudgetAmountsDbAdapter $r16;

        r0 := @this: org.gnucash.android.export.Exporter;

        $r1 := @parameter0: org.gnucash.android.export.ExportParams;

        $r2 := @parameter1: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.export.ExportParams mExportParams> = $r1;

        $r4 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.content.Context getAppContext()>();

        r0.<org.gnucash.android.export.Exporter: android.content.Context mContext> = $r4;

        if $r2 != null goto label2;

        $r5 = staticinvoke <org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.db.adapter.AccountsDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter> = $r5;

        $r6 = staticinvoke <org.gnucash.android.db.adapter.TransactionsDbAdapter: org.gnucash.android.db.adapter.TransactionsDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter> = $r6;

        $r7 = staticinvoke <org.gnucash.android.db.adapter.SplitsDbAdapter: org.gnucash.android.db.adapter.SplitsDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.SplitsDbAdapter mSplitsDbAdapter> = $r7;

        $r8 = staticinvoke <org.gnucash.android.db.adapter.PricesDbAdapter: org.gnucash.android.db.adapter.PricesDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.PricesDbAdapter mPricesDbAdapter> = $r8;

        $r9 = staticinvoke <org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.db.adapter.CommoditiesDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.CommoditiesDbAdapter mCommoditiesDbAdapter> = $r9;

        $r10 = staticinvoke <org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.db.adapter.BudgetsDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.BudgetsDbAdapter mBudgetsDbAdapter> = $r10;

        $r11 = staticinvoke <org.gnucash.android.db.adapter.ScheduledActionDbAdapter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter getInstance()>();

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter> = $r11;

        $r2 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.database.sqlite.SQLiteDatabase getActiveDb()>();

        r0.<org.gnucash.android.export.Exporter: android.database.sqlite.SQLiteDatabase mDb> = $r2;

     label1:
        $r12 = new java.io.File;

        $r2 = r0.<org.gnucash.android.export.Exporter: android.database.sqlite.SQLiteDatabase mDb>;

        $r13 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getName()>();

        r0.<org.gnucash.android.export.Exporter: java.lang.String mBookUID> = $r13;

        r0.<org.gnucash.android.export.Exporter: java.lang.String mExportCacheFilePath> = null;

        $r12 = new java.io.File;

        $r4 = r0.<org.gnucash.android.export.Exporter: android.content.Context mContext>;

        $r14 = virtualinvoke $r4.<android.content.Context: java.io.File getCacheDir()>();

        $r15 = virtualinvoke $r1.<org.gnucash.android.export.ExportParams: org.gnucash.android.export.ExportFormat getExportFormat()>();

        $r13 = virtualinvoke $r15.<org.gnucash.android.export.ExportFormat: java.lang.String name()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, $r13);

        r0.<org.gnucash.android.export.Exporter: java.io.File mCacheDir> = $r12;

        $r12 = r0.<org.gnucash.android.export.Exporter: java.io.File mCacheDir>;

        virtualinvoke $r12.<java.io.File: boolean mkdir()>();

        $r12 = r0.<org.gnucash.android.export.Exporter: java.io.File mCacheDir>;

        specialinvoke r0.<org.gnucash.android.export.Exporter: void purgeDirectory(java.io.File)>($r12);

        return;

     label2:
        r0.<org.gnucash.android.export.Exporter: android.database.sqlite.SQLiteDatabase mDb> = $r2;

        $r7 = new org.gnucash.android.db.adapter.SplitsDbAdapter;

        specialinvoke $r7.<org.gnucash.android.db.adapter.SplitsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r2);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.SplitsDbAdapter mSplitsDbAdapter> = $r7;

        $r6 = new org.gnucash.android.db.adapter.TransactionsDbAdapter;

        $r7 = r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.SplitsDbAdapter mSplitsDbAdapter>;

        specialinvoke $r6.<org.gnucash.android.db.adapter.TransactionsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase,org.gnucash.android.db.adapter.SplitsDbAdapter)>($r2, $r7);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter> = $r6;

        $r5 = new org.gnucash.android.db.adapter.AccountsDbAdapter;

        $r6 = r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter>;

        specialinvoke $r5.<org.gnucash.android.db.adapter.AccountsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase,org.gnucash.android.db.adapter.TransactionsDbAdapter)>($r2, $r6);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter> = $r5;

        $r8 = new org.gnucash.android.db.adapter.PricesDbAdapter;

        specialinvoke $r8.<org.gnucash.android.db.adapter.PricesDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r2);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.PricesDbAdapter mPricesDbAdapter> = $r8;

        $r9 = new org.gnucash.android.db.adapter.CommoditiesDbAdapter;

        specialinvoke $r9.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r2);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.CommoditiesDbAdapter mCommoditiesDbAdapter> = $r9;

        r3 = new org.gnucash.android.db.adapter.RecurrenceDbAdapter;

        specialinvoke r3.<org.gnucash.android.db.adapter.RecurrenceDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r2);

        $r10 = new org.gnucash.android.db.adapter.BudgetsDbAdapter;

        $r16 = new org.gnucash.android.db.adapter.BudgetAmountsDbAdapter;

        specialinvoke $r16.<org.gnucash.android.db.adapter.BudgetAmountsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase)>($r2);

        specialinvoke $r10.<org.gnucash.android.db.adapter.BudgetsDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase,org.gnucash.android.db.adapter.BudgetAmountsDbAdapter,org.gnucash.android.db.adapter.RecurrenceDbAdapter)>($r2, $r16, r3);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.BudgetsDbAdapter mBudgetsDbAdapter> = $r10;

        $r11 = new org.gnucash.android.db.adapter.ScheduledActionDbAdapter;

        specialinvoke $r11.<org.gnucash.android.db.adapter.ScheduledActionDbAdapter: void <init>(android.database.sqlite.SQLiteDatabase,org.gnucash.android.db.adapter.RecurrenceDbAdapter)>($r2, r3);

        r0.<org.gnucash.android.export.Exporter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter> = $r11;

        goto label1;
    }
    public static java.lang.String buildExportFilename(org.gnucash.android.export.ExportFormat, java.lang.String)
    {
        org.gnucash.android.export.ExportFormat $r0;
        java.lang.String $r1, $r5;
        java.util.Date $r2;
        java.lang.StringBuilder $r3;
        java.text.SimpleDateFormat $r4;
        long $l0;

        $r0 := @parameter0: org.gnucash.android.export.ExportFormat;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <org.gnucash.android.export.Exporter: java.text.SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT>;

        $r2 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r5 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_gnucash_export_");

        $r1 = staticinvoke <org.gnucash.android.export.Exporter: java.lang.String sanitizeFilename(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<org.gnucash.android.export.ExportFormat: java.lang.String getExtension()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public static java.lang.String getBackupFolderPath(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.io.File r1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.gnucash.android.export.Exporter: java.lang.String BASE_FOLDER_PATH>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/backups/");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label1:
        return $r0;
    }
    public static java.lang.String getExportFolderPath(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.io.File r1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.gnucash.android.export.Exporter: java.lang.String BASE_FOLDER_PATH>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/exports/");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label1:
        return $r0;
    }
    public static long getExportTime(java.lang.String)
    {
        java.lang.String $r0;
        java.text.ParseException r1;
        java.lang.String[] $r2;
        long l0, $l2;
        int $i1;
        java.text.SimpleDateFormat $r3;
        java.lang.StringBuilder $r4;
        java.util.Date $r5;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        l0 = 0L;

        $i1 = lengthof $r2;

        if $i1 >= 2 goto label1;

        return 0L;

     label1:
        $r3 = <org.gnucash.android.export.Exporter: java.text.SimpleDateFormat EXPORT_FILENAME_DATE_FORMAT>;

        $r4 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label3:
        $r0 = $r2[0];

     label4:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

     label5:
        $r0 = $r2[1];

     label6:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $l2 = virtualinvoke $r5.<java.util.Date: long getTime()>();

     label7:
        l0 = $l2;

     label8:
        return l0;

     label9:
        r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing time from file name: ");

        $r0 = virtualinvoke r1.<java.text.ParseException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Exporter", $r0);

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r1);

        goto label8;

        catch java.text.ParseException from label2 to label3 with label9;
        catch java.text.ParseException from label4 to label5 with label9;
        catch java.text.ParseException from label6 to label7 with label9;
    }
    private void purgeDirectory(java.io.File)
    {
        org.gnucash.android.export.Exporter r0;
        java.io.File $r1;
        int $i0, $i1;
        java.io.File[] $r2;
        boolean $z0;

        r0 := @this: org.gnucash.android.export.Exporter;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r1 = $r2[$i1];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.gnucash.android.export.Exporter: void purgeDirectory(java.io.File)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        goto label2;

     label4:
        return;
    }
    public static java.lang.String sanitizeFilename(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^a-zA-Z0-9-_\\.]", "_");

        return $r0;
    }
public abstract java.util.List generateExport() throws org.gnucash.android.export.Exporter$ExporterException { 
// no body
} 
    protected java.lang.String getExportCacheFilePath()
    {
        org.gnucash.android.export.Exporter r0;
        java.lang.String $r1, $r3;
        java.io.File $r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        org.gnucash.android.db.adapter.BooksDbAdapter $r5;
        org.gnucash.android.export.ExportParams $r6;
        org.gnucash.android.export.ExportFormat $r7;

        r0 := @this: org.gnucash.android.export.Exporter;

        $r1 = r0.<org.gnucash.android.export.Exporter: java.lang.String mExportCacheFilePath>;

        if $r1 != null goto label2;

        $r2 = r0.<org.gnucash.android.export.Exporter: java.io.File mCacheDir>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = $r3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = staticinvoke <org.gnucash.android.db.adapter.BooksDbAdapter: org.gnucash.android.db.adapter.BooksDbAdapter getInstance()>();

        $r3 = r0.<org.gnucash.android.export.Exporter: java.lang.String mBookUID>;

        $r3 = virtualinvoke $r5.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String getAttribute(java.lang.String,java.lang.String)>($r3, "name");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = r0.<org.gnucash.android.export.Exporter: org.gnucash.android.export.ExportParams mExportParams>;

        $r7 = virtualinvoke $r6.<org.gnucash.android.export.ExportParams: org.gnucash.android.export.ExportFormat getExportFormat()>();

        $r1 = staticinvoke <org.gnucash.android.export.Exporter: java.lang.String buildExportFilename(org.gnucash.android.export.ExportFormat,java.lang.String)>($r7, $r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.gnucash.android.export.Exporter: java.lang.String mExportCacheFilePath> = $r1;

     label2:
        $r1 = r0.<org.gnucash.android.export.Exporter: java.lang.String mExportCacheFilePath>;

        return $r1;
    }
    public java.lang.String getExportMimeType()
    {
        org.gnucash.android.export.Exporter r0;

        r0 := @this: org.gnucash.android.export.Exporter;

        return "text/plain";
    }
