org.gnucash.android.export.xml.GncXmlExporter extends org.gnucash.android.export.Exporter
private org.gnucash.android.model.Account mRootTemplateAccount
private java.util.Map mTransactionToTemplateAccountMap
    public void <init>(org.gnucash.android.export.ExportParams)
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.gnucash.android.export.ExportParams $r1;
        java.util.TreeMap $r2;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.gnucash.android.export.ExportParams;

        specialinvoke r0.<org.gnucash.android.export.Exporter: void <init>(org.gnucash.android.export.ExportParams,android.database.sqlite.SQLiteDatabase)>($r1, null);

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap> = $r2;

        <org.gnucash.android.export.xml.GncXmlExporter: java.lang.String LOG_TAG> = "GncXmlExporter";

        return;
    }
    public void <init>(org.gnucash.android.export.ExportParams, android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.gnucash.android.export.ExportParams $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.util.TreeMap $r3;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.gnucash.android.export.ExportParams;

        $r2 := @parameter1: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<org.gnucash.android.export.Exporter: void <init>(org.gnucash.android.export.ExportParams,android.database.sqlite.SQLiteDatabase)>($r1, $r2);

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap> = $r3;

        <org.gnucash.android.export.xml.GncXmlExporter: java.lang.String LOG_TAG> = "GncXmlExporter";

        return;
    }
    public static boolean createBackup()
    {
        java.io.BufferedOutputStream r0;
        java.io.FileOutputStream r1;
        java.util.zip.GZIPOutputStream r2;
        org.gnucash.android.export.ExportParams r3;
        java.io.OutputStreamWriter r4;
        org.gnucash.android.db.adapter.BooksDbAdapter $r5;
        java.lang.String $r6;
        org.gnucash.android.export.ExportFormat $r7;
        org.gnucash.android.export.xml.GncXmlExporter $r8;
        java.lang.Exception r9;

     label01:
        $r5 = staticinvoke <org.gnucash.android.db.adapter.BooksDbAdapter: org.gnucash.android.db.adapter.BooksDbAdapter getInstance()>();

        $r6 = virtualinvoke $r5.<org.gnucash.android.db.adapter.BooksDbAdapter: java.lang.String getActiveBookUID()>();

     label02:
        r1 = new java.io.FileOutputStream;

     label03:
        $r6 = staticinvoke <org.gnucash.android.export.xml.GncXmlExporter: java.lang.String getBackupFilePath(java.lang.String)>($r6);

        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.lang.String)>($r6);

     label04:
        r0 = new java.io.BufferedOutputStream;

     label05:
        specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

     label06:
        r2 = new java.util.zip.GZIPOutputStream;

     label07:
        specialinvoke r2.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r0);

     label08:
        r4 = new java.io.OutputStreamWriter;

     label09:
        specialinvoke r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r2);

     label10:
        r3 = new org.gnucash.android.export.ExportParams;

        $r7 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat XML>;

     label11:
        specialinvoke r3.<org.gnucash.android.export.ExportParams: void <init>(org.gnucash.android.export.ExportFormat)>($r7);

     label12:
        $r8 = new org.gnucash.android.export.xml.GncXmlExporter;

     label13:
        specialinvoke $r8.<org.gnucash.android.export.xml.GncXmlExporter: void <init>(org.gnucash.android.export.ExportParams)>(r3);

        virtualinvoke $r8.<org.gnucash.android.export.xml.GncXmlExporter: void generateExport(java.io.Writer)>(r4);

        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();

     label14:
        return 1;

     label15:
        r9 := @caughtexception;

     label16:
        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GncXmlExporter", "Error creating XML  backup", r9);

        return 0;

     label17:
        r9 := @caughtexception;

        goto label16;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.io.IOException from label13 to label14 with label15;
        catch org.gnucash.android.export.Exporter$ExporterException from label01 to label02 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label03 to label04 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label05 to label06 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label07 to label08 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label09 to label10 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label11 to label12 with label17;
        catch org.gnucash.android.export.Exporter$ExporterException from label13 to label14 with label17;
    }
    private void exportAccounts(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.ArrayList r2, r3, r4;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r5;
        android.database.Cursor $r6;
        boolean $z0;
        int $i0;
        java.lang.String $r7, $r8;
        org.gnucash.android.db.adapter.CommoditiesDbAdapter $r9;
        org.gnucash.android.model.Commodity $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter>;

        $r6 = virtualinvoke $r5.<org.gnucash.android.db.adapter.AccountsDbAdapter: android.database.Cursor fetchAccounts(java.lang.String,java.lang.String[],java.lang.String)>(null, null, "full_name ASC");

     label01:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label11;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:account");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:name");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("name");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:name");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uid");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:type");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("type");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r7);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:type");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("ISO4217");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("currency_code");

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:commodity");

        $r9 = staticinvoke <org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.db.adapter.CommoditiesDbAdapter getInstance()>();

        $r10 = virtualinvoke $r9.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:commodity-scu");

        $i0 = virtualinvoke $r10.<org.gnucash.android.model.Commodity: int getSmallestFraction()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:commodity-scu");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("description");

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r8 == null goto label02;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label02;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:description");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:description");

     label02:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("placeholder");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("string");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("is_placeholder");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i0);

        if $i0 == 0 goto label08;

        $z0 = 1;

     label03:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("color_code");

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r8 == null goto label04;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label04;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("color");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("string");

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label04:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("default_transfer_account_uid");

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r8 == null goto label05;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label05;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("default_transfer_account");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("string");

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label05:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("favorite");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("string");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("favorite");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i0);

        if $i0 == 0 goto label09;

        $z0 = 1;

     label06:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:slots");

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportSlots(org.xmlpull.v1.XmlSerializer,java.util.List,java.util.List,java.util.List)>($r1, r2, r3, r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:slots");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("parent_account_uid");

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("ROOT");

        if $z0 != 0 goto label10;

        if $r8 == null goto label10;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:parent");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:parent");

     label07:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:account");

        goto label01;

     label08:
        $z0 = 0;

        goto label03;

     label09:
        $z0 = 0;

        goto label06;

     label10:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("root account : ");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uid");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("export", $r7);

        goto label07;

     label11:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return;
    }
    private void exportBudgets(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.ArrayList r2, r3, r4;
        org.gnucash.android.db.adapter.BudgetsDbAdapter $r5;
        android.database.Cursor $r6;
        boolean $z0;
        org.gnucash.android.model.Budget $r7;
        java.lang.String $r8;
        long $l0, $l2;
        org.gnucash.android.model.Recurrence $r9;
        java.util.List $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        org.gnucash.android.model.BudgetAmount r13;
        org.gnucash.android.model.Money $r14;
        int i1;
        byte $b3;
        java.lang.StringBuilder $r15;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.BudgetsDbAdapter mBudgetsDbAdapter>;

        $r6 = virtualinvoke $r5.<org.gnucash.android.db.adapter.BudgetsDbAdapter: android.database.Cursor fetchAllRecords()>();

     label1:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label8;

        $r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.BudgetsDbAdapter mBudgetsDbAdapter>;

        $r7 = virtualinvoke $r5.<org.gnucash.android.db.adapter.BudgetsDbAdapter: org.gnucash.android.model.Budget buildModelInstance(android.database.Cursor)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:budget");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $r8 = virtualinvoke $r7.<org.gnucash.android.model.Budget: java.lang.String getUID()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:name");

        $r8 = virtualinvoke $r7.<org.gnucash.android.model.Budget: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:name");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:description");

        $r8 = virtualinvoke $r7.<org.gnucash.android.model.Budget: java.lang.String getDescription()>();

        if $r8 != null goto label5;

        $r8 = "";

     label2:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:description");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:num-periods");

        $l0 = virtualinvoke $r7.<org.gnucash.android.model.Budget: long getNumberOfPeriods()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:num-periods");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:recurrence");

        $r9 = virtualinvoke $r7.<org.gnucash.android.model.Budget: org.gnucash.android.model.Recurrence getRecurrence()>();

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportRecurrence(org.xmlpull.v1.XmlSerializer,org.gnucash.android.model.Recurrence)>($r1, $r9);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:recurrence");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "bgt:slots");

        $r10 = virtualinvoke $r7.<org.gnucash.android.model.Budget: java.util.List getExpandedBudgetAmounts()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.gnucash.android.model.BudgetAmount) $r12;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:key");

        $r8 = virtualinvoke r13.<org.gnucash.android.model.BudgetAmount: java.lang.String getAccountUID()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r8);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:key");

        $r14 = virtualinvoke r13.<org.gnucash.android.model.BudgetAmount: org.gnucash.android.model.Money getAmount()>();

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        i1 = 0;

     label4:
        $l0 = (long) i1;

        $l2 = virtualinvoke $r7.<org.gnucash.android.model.Budget: long getNumberOfPeriods()>();

        $b3 = $l0 cmp $l2;

        if $b3 >= 0 goto label6;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("numeric");

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $l0 = virtualinvoke $r14.<org.gnucash.android.model.Money: long getNumerator()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $l0 = virtualinvoke $r14.<org.gnucash.android.model.Money: long getDenominator()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label4;

     label5:
        $r8 = virtualinvoke $r7.<org.gnucash.android.model.Budget: java.lang.String getDescription()>();

        goto label2;

     label6:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "frame");

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportSlots(org.xmlpull.v1.XmlSerializer,java.util.List,java.util.List,java.util.List)>($r1, r2, r3, r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot");

        goto label3;

     label7:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "bgt:slots");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:budget");

        goto label1;

     label8:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return;
    }
    private void exportCommodities(org.xmlpull.v1.XmlSerializer, java.util.List) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.List r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Currency r5;
        java.lang.String $r6;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.util.List;

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Currency) $r4;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("ISO4217");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        $r6 = virtualinvoke r5.<java.util.Currency: java.lang.String getCurrencyCode()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:commodity");

        goto label1;

     label2:
        return;
    }
    private void exportPrices(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        org.gnucash.android.db.adapter.PricesDbAdapter $r2;
        android.database.Cursor $r3;
        boolean $z0;
        int $i0;
        java.lang.String $r4;
        org.gnucash.android.db.adapter.CommoditiesDbAdapter $r5;
        java.sql.Timestamp $r6;
        long $l1;
        java.lang.StringBuilder $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:pricedb");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "1");

        $r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.PricesDbAdapter mPricesDbAdapter>;

        $r3 = virtualinvoke $r2.<org.gnucash.android.db.adapter.PricesDbAdapter: android.database.Cursor fetchAllRecords()>();

     label01:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

     label02:
        if $z0 == 0 goto label11;

     label03:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uid");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("ISO4217");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        $r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.CommoditiesDbAdapter mCommoditiesDbAdapter>;

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("commodity_guid");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r4 = virtualinvoke $r5.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String getCurrencyCode(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:currency");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("ISO4217");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        $r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.CommoditiesDbAdapter mCommoditiesDbAdapter>;

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("currency_guid");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r4 = virtualinvoke $r5.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: java.lang.String getCurrencyCode(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:currency");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("date");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r6 = staticinvoke <org.gnucash.android.util.TimestampHelper: java.sql.Timestamp getTimestampFromUtcString(java.lang.String)>($r4);

        $l1 = virtualinvoke $r6.<java.sql.Timestamp: long getTime()>();

        $r4 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatDate(long)>($l1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:time");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:time");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:source");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("source");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:source");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("type");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label04:
        if $r4 == null goto label08;

     label05:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label06:
        if $z0 != 0 goto label08;

     label07:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:type");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:type");

     label08:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "price:value");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("value_num");

        $l1 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("value_denom");

        $l1 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "price");

     label09:
        goto label01;

     label10:
        $r8 := @caughtexception;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw $r8;

     label11:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:pricedb");

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
    }
    private void exportRecurrence(org.xmlpull.v1.XmlSerializer, org.gnucash.android.model.Recurrence) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        org.gnucash.android.model.Recurrence $r2;
        org.gnucash.android.model.PeriodType $r3;
        int $i0;
        java.lang.String $r4;
        java.sql.Timestamp $r5;
        long $l1;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: org.gnucash.android.model.Recurrence;

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType getPeriodType()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "recurrence:mult");

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "recurrence:mult");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "recurrence:period_type");

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: java.lang.String name()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "recurrence:period_type");

        $r5 = virtualinvoke $r2.<org.gnucash.android.model.Recurrence: java.sql.Timestamp getPeriodStart()>();

        $l1 = virtualinvoke $r5.<java.sql.Timestamp: long getTime()>();

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void serializeDate(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>($r1, "recurrence:start", $l1);

        return;
    }
    private void exportScheduledTransactions(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        org.gnucash.android.db.adapter.ScheduledActionDbAdapter $r2;
        java.lang.String[] $r3;
        org.gnucash.android.model.ScheduledAction$ActionType $r4, $r12;
        java.lang.String $r5, $r11;
        android.database.Cursor $r6;
        boolean $z0;
        org.gnucash.android.model.ScheduledAction $r7;
        java.util.Map $r8;
        java.lang.Object $r9;
        org.gnucash.android.model.Account r10;
        org.gnucash.android.db.adapter.TransactionsDbAdapter $r13;
        int $i0, $i3;
        long $l1;
        java.sql.Timestamp $r14;
        byte $b2;
        org.gnucash.android.db.adapter.RecurrenceDbAdapter $r15;
        org.gnucash.android.model.BaseModel $r16;
        org.gnucash.android.model.Recurrence r17;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter>;

        $r3 = newarray (java.lang.String)[1];

        $r4 = <org.gnucash.android.model.ScheduledAction$ActionType: org.gnucash.android.model.ScheduledAction$ActionType TRANSACTION>;

        $r5 = virtualinvoke $r4.<org.gnucash.android.model.ScheduledAction$ActionType: java.lang.String name()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke $r2.<org.gnucash.android.db.adapter.ScheduledActionDbAdapter: android.database.Cursor fetchAllRecords(java.lang.String,java.lang.String[],java.lang.String)>("type=?", $r3, null);

     label01:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label14;

        $r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter>;

        $r7 = virtualinvoke $r2.<org.gnucash.android.db.adapter.ScheduledActionDbAdapter: org.gnucash.android.model.ScheduledAction buildModelInstance(android.database.Cursor)>($r6);

        $r5 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: java.lang.String getActionUID()>();

        $r8 = r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r10 = (org.gnucash.android.model.Account) $r9;

        if r10 == null goto label01;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:schedxaction");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:id");

        $r11 = virtualinvoke r10.<org.gnucash.android.model.Account: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r11);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:name");

        $r4 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: org.gnucash.android.model.ScheduledAction$ActionType getActionType()>();

        $r12 = <org.gnucash.android.model.ScheduledAction$ActionType: org.gnucash.android.model.ScheduledAction$ActionType TRANSACTION>;

        if $r4 != $r12 goto label09;

        $r13 = staticinvoke <org.gnucash.android.db.adapter.TransactionsDbAdapter: org.gnucash.android.db.adapter.TransactionsDbAdapter getInstance()>();

        $r5 = virtualinvoke $r13.<org.gnucash.android.db.adapter.TransactionsDbAdapter: java.lang.String getAttribute(java.lang.String,java.lang.String)>($r5, "name");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

     label02:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:name");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:enabled");

        $z0 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: boolean isEnabled()>();

        if $z0 == 0 goto label10;

        $r5 = "y";

     label03:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:enabled");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:autoCreate");

        $z0 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: boolean shouldAutoCreate()>();

        if $z0 == 0 goto label11;

        $r5 = "y";

     label04:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:autoCreate");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:autoCreateNotify");

        $z0 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: boolean shouldAutoNotify()>();

        if $z0 == 0 goto label12;

        $r5 = "y";

     label05:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:autoCreateNotify");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:advanceCreateDays");

        $i0 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: int getAdvanceCreateDays()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:advanceCreateDays");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:advanceRemindDays");

        $i0 = virtualinvoke $r7.<org.gnucash.android.model.ScheduledAction: int getAdvanceNotifyDays()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:advanceRemindDays");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:instanceCount");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uid");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.ScheduledActionDbAdapter mScheduledActionDbAdapter>;

        $l1 = virtualinvoke $r2.<org.gnucash.android.db.adapter.ScheduledActionDbAdapter: long getActionInstanceCount(java.lang.String)>($r5);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:instanceCount");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("created_at");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r14 = staticinvoke <org.gnucash.android.util.TimestampHelper: java.sql.Timestamp getTimestampFromUtcString(java.lang.String)>($r5);

        $l1 = virtualinvoke $r14.<java.sql.Timestamp: long getTime()>();

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void serializeDate(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>($r1, "sx:start", $l1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("last_run");

        $l1 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i0);

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label06;

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void serializeDate(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>($r1, "sx:last", $l1);

     label06:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("end_time");

        $l1 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i0);

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label13;

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void serializeDate(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>($r1, "sx:end", $l1);

     label07:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("tag");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r5 == null goto label08;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:tag");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:tag");

     label08:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:templ-acct");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $r5 = virtualinvoke r10.<org.gnucash.android.model.Account: java.lang.String getUID()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:templ-acct");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:schedule");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:recurrence");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "1.0.0");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("recurrence_uid");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r15 = staticinvoke <org.gnucash.android.db.adapter.RecurrenceDbAdapter: org.gnucash.android.db.adapter.RecurrenceDbAdapter getInstance()>();

        $r16 = virtualinvoke $r15.<org.gnucash.android.db.adapter.RecurrenceDbAdapter: org.gnucash.android.model.BaseModel getRecord(java.lang.String)>($r5);

        r17 = (org.gnucash.android.model.Recurrence) $r16;

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportRecurrence(org.xmlpull.v1.XmlSerializer,org.gnucash.android.model.Recurrence)>($r1, r17);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:recurrence");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:schedule");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:schedxaction");

        goto label01;

     label09:
        $r5 = virtualinvoke $r4.<org.gnucash.android.model.ScheduledAction$ActionType: java.lang.String name()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        goto label02;

     label10:
        $r5 = "n";

        goto label03;

     label11:
        $r5 = "n";

        goto label04;

     label12:
        $r5 = "n";

        goto label05;

     label13:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("total_frequency");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:num-occur");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:num-occur");

        $i3 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("execution_count");

        $i3 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sx:rem-occur");

        $i0 = $i0 - $i3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sx:rem-occur");

        goto label07;

     label14:
        return;
    }
    private void exportSlots(org.xmlpull.v1.XmlSerializer, java.util.List, java.util.List, java.util.List) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.List r2, r3, r4;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        if r2 == null goto label3;

        if r3 == null goto label3;

        if r4 == null goto label3;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == 0 goto label3;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label3;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:key");

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:key");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:value");

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", $r6);

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot");

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
    private void exportTemplateAccounts(org.xmlpull.v1.XmlSerializer, java.util.Collection) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.Collection r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.gnucash.android.model.Account r5;
        java.lang.String $r6;
        org.gnucash.android.model.AccountType $r7, $r8;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.util.Collection;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.gnucash.android.model.Account) $r4;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:account");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:name");

        $r6 = virtualinvoke r5.<org.gnucash.android.model.Account: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:name");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $r6 = virtualinvoke r5.<org.gnucash.android.model.Account: java.lang.String getUID()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:type");

        $r7 = virtualinvoke r5.<org.gnucash.android.model.Account: org.gnucash.android.model.AccountType getAccountType()>();

        $r6 = virtualinvoke $r7.<org.gnucash.android.model.AccountType: java.lang.String name()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:type");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("template");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("template");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:commodity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:commodity-scu");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("1");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:commodity-scu");

        $r7 = virtualinvoke r5.<org.gnucash.android.model.Account: org.gnucash.android.model.AccountType getAccountType()>();

        $r8 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ROOT>;

        if $r7 == $r8 goto label2;

        r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.model.Account mRootTemplateAccount>;

        if r5 == null goto label2;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "act:parent");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        r5 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.model.Account mRootTemplateAccount>;

        $r6 = virtualinvoke r5.<org.gnucash.android.model.Account: java.lang.String getUID()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "act:parent");

     label2:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:account");

        goto label1;

     label3:
        return;
    }
    private void exportTransactions(org.xmlpull.v1.XmlSerializer, boolean) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        boolean $z0, $z1;
        org.gnucash.android.model.Account r2;
        java.util.ArrayList r3, r4, r5;
        java.lang.String r6, $r13, $r17, $r20, r21, $r22;
        org.gnucash.android.db.adapter.TransactionsDbAdapter $r7;
        java.lang.String[] $r8;
        android.database.Cursor $r9;
        org.gnucash.android.model.Commodity r10;
        org.gnucash.android.model.AccountType $r11;
        java.util.Map $r12;
        int $i0, $i2;
        java.util.Collection $r14;
        org.gnucash.android.db.adapter.CommoditiesDbAdapter $r15;
        long $l1, $l3;
        java.sql.Timestamp $r16;
        java.math.BigDecimal $r18;
        java.lang.StringBuilder $r19;
        java.lang.Object $r23;
        org.gnucash.android.model.TransactionType $r24, $r25;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $z0 := @parameter1: boolean;

        r6 = "transactions.is_template=0";

        if $z0 == 0 goto label01;

        r6 = "transactions.is_template=1";

     label01:
        $r7 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter>;

        $r8 = newarray (java.lang.String)[16];

        $r8[0] = "transactions.uid AS trans_uid";

        $r8[1] = "transactions.name AS trans_desc";

        $r8[2] = "transactions.description AS trans_notes";

        $r8[3] = "transactions.timestamp AS trans_time";

        $r8[4] = "transactions.is_exported AS trans_exported";

        $r8[5] = "transactions.currency_code AS trans_currency";

        $r8[6] = "transactions.created_at AS trans_date_posted";

        $r8[7] = "transactions.scheduled_action_uid AS trans_from_sched_action";

        $r8[8] = "splits.uid AS split_uid";

        $r8[9] = "splits.memo AS split_memo";

        $r8[10] = "splits.type AS split_type";

        $r8[11] = "splits.value_num AS split_value_num";

        $r8[12] = "splits.value_denom AS split_value_denom";

        $r8[13] = "splits.quantity_num AS split_quantity_num";

        $r8[14] = "splits.quantity_denom AS split_quantity_denom";

        $r8[15] = "splits.account_uid AS split_acct_uid";

        $r9 = virtualinvoke $r7.<org.gnucash.android.db.adapter.TransactionsDbAdapter: android.database.Cursor fetchTransactionsWithSplits(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, r6, null, "transactions.timestamp ASC , transactions.uid ASC ");

        r6 = "";

        r10 = null;

        if $z0 == 0 goto label04;

        r2 = new org.gnucash.android.model.Account;

        specialinvoke r2.<org.gnucash.android.model.Account: void <init>(java.lang.String)>("Template Root");

        r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.model.Account mRootTemplateAccount> = r2;

        r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.model.Account mRootTemplateAccount>;

        $r11 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ROOT>;

        virtualinvoke r2.<org.gnucash.android.model.Account: void setAccountType(org.gnucash.android.model.AccountType)>($r11);

        $r12 = r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap>;

        r2 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.model.Account mRootTemplateAccount>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(" ", r2);

     label02:
        $z1 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label03;

        r2 = new org.gnucash.android.model.Account;

        $r13 = staticinvoke <org.gnucash.android.model.BaseModel: java.lang.String generateUID()>();

        specialinvoke r2.<org.gnucash.android.model.Account: void <init>(java.lang.String)>($r13);

        $r11 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType BANK>;

        virtualinvoke r2.<org.gnucash.android.model.Account: void setAccountType(org.gnucash.android.model.AccountType)>($r11);

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_uid");

        $r13 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r12 = r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r2);

        goto label02;

     label03:
        $r12 = r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap>;

        $r14 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportTemplateAccounts(org.xmlpull.v1.XmlSerializer,java.util.Collection)>($r1, $r14);

        interfaceinvoke $r9.<android.database.Cursor: boolean moveToFirst()>();

        interfaceinvoke $r9.<android.database.Cursor: boolean moveToPrevious()>();

     label04:
        $z1 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label21;

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_uid");

        $r13 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label08;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label05;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:splits");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:transaction");

     label05:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:transaction");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r13);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:id");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_currency");

        r6 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r15 = staticinvoke <org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.db.adapter.CommoditiesDbAdapter getInstance()>();

        r10 = virtualinvoke $r15.<org.gnucash.android.db.adapter.CommoditiesDbAdapter: org.gnucash.android.model.Commodity getCommodity(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:currency");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("ISO4217");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:space");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cmdty:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:currency");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_time");

        $l1 = interfaceinvoke $r9.<android.database.Cursor: long getLong(int)>($i0);

        r6 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatDate(long)>($l1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:date-posted");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:date-posted");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_date_posted");

        r6 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r16 = staticinvoke <org.gnucash.android.util.TimestampHelper: java.sql.Timestamp getTimestampFromUtcString(java.lang.String)>(r6);

        $l1 = virtualinvoke $r16.<java.sql.Timestamp: long getTime()>();

        r6 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatDate(long)>($l1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:date-entered");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "ts:date");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:date-entered");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:description");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_desc");

        r6 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r6);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:description");

        r6 = $r13;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_notes");

        $r17 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r17 == null goto label06;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("notes");

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>("string");

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label06:
        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("trans_from_sched_action");

        $r17 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r17 == null goto label07;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("from-sched-xaction");

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>("guid");

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label07:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:slots");

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportSlots(org.xmlpull.v1.XmlSerializer,java.util.List,java.util.List,java.util.List)>($r1, r3, r4, r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:slots");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:splits");

     label08:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "trn:split");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:id");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_uid");

        $r17 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r17);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:id");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_memo");

        $r17 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $r17 == null goto label09;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 <= 0 goto label09;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:memo");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r17);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:memo");

     label09:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:reconciled-state");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("n");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:reconciled-state");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_type");

        $r17 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_value_num");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getInt(int)>($i0);

        $i2 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_value_denom");

        $i2 = interfaceinvoke $r9.<android.database.Cursor: int getInt(int)>($i2);

        $l1 = (long) $i0;

        $l3 = (long) $i2;

        $r18 = staticinvoke <org.gnucash.android.model.Money: java.math.BigDecimal getBigDecimal(long,long)>($l1, $l3);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0/");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("100");

        r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        if $z0 != 0 goto label11;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("CREDIT");

        if $z1 == 0 goto label17;

        $r20 = "-";

     label10:
        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r21);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:value");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_quantity_num");

        $r20 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_quantity_denom");

        $r22 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        if $z0 != 0 goto label13;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("CREDIT");

        if $z1 == 0 goto label18;

        r21 = "-";

     label12:
        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:quantity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r21);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:quantity");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:account");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        if $z0 == 0 goto label19;

        $r12 = r0.<org.gnucash.android.export.xml.GncXmlExporter: java.util.Map mTransactionToTemplateAccountMap>;

        $r23 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r2 = (org.gnucash.android.model.Account) $r23;

        $r13 = virtualinvoke r2.<org.gnucash.android.model.Account: java.lang.String getUID()>();

     label14:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r13);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:account");

        if $z0 == 0 goto label16;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "split:slots");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:key");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("sched-xaction");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:key");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "slot:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "frame");

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("account");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("guid");

        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_acct_uid");

        $r13 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r24 = staticinvoke <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType valueOf(java.lang.String)>($r17);

        $r25 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        if $r24 != $r25 goto label20;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("credit-formula");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("string");

        $r13 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatTemplateSplitAmount(java.math.BigDecimal)>($r18);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("credit-numeric");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("numeric");

        $r13 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatSplitAmount(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r18, r10);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

     label15:
        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportSlots(org.xmlpull.v1.XmlSerializer,java.util.List,java.util.List,java.util.List)>($r1, r3, r4, r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot:value");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "slot");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "split:slots");

     label16:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:split");

        goto label04;

     label17:
        $r20 = "";

        goto label10;

     label18:
        r21 = "";

        goto label12;

     label19:
        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("split_acct_uid");

        $r13 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0);

        goto label14;

     label20:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("debit-formula");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("string");

        $r13 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatTemplateSplitAmount(java.math.BigDecimal)>($r18);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("debit-numeric");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("numeric");

        $r13 = staticinvoke <org.gnucash.android.export.xml.GncXmlHelper: java.lang.String formatSplitAmount(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r18, r10);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label15;

     label21:
        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label22;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "trn:splits");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:transaction");

     label22:
        interfaceinvoke $r9.<android.database.Cursor: void close()>();

        return;
    }
    private static java.lang.String getBackupFilePath(java.lang.String)
    {
        java.lang.String $r0;
        org.gnucash.android.db.adapter.BooksDbAdapter $r1;
        org.gnucash.android.model.BaseModel $r2;
        org.gnucash.android.model.Book r3;
        java.lang.StringBuilder $r4;
        org.gnucash.android.export.ExportFormat $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.gnucash.android.db.adapter.BooksDbAdapter: org.gnucash.android.db.adapter.BooksDbAdapter getInstance()>();

        $r2 = virtualinvoke $r1.<org.gnucash.android.db.adapter.BooksDbAdapter: org.gnucash.android.model.BaseModel getRecord(java.lang.String)>($r0);

        r3 = (org.gnucash.android.model.Book) $r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke r3.<org.gnucash.android.model.Book: java.lang.String getUID()>();

        $r0 = staticinvoke <org.gnucash.android.export.Exporter: java.lang.String getBackupFolderPath(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat XML>;

        $r0 = virtualinvoke r3.<org.gnucash.android.model.Book: java.lang.String getDisplayName()>();

        $r0 = staticinvoke <org.gnucash.android.export.xml.GncXmlExporter: java.lang.String buildExportFilename(org.gnucash.android.export.ExportFormat,java.lang.String)>($r5, $r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    private void serializeDate(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r5;
        long $l0;
        java.text.SimpleDateFormat $r3;
        java.lang.Long $r4;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, $r2);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gdate");

        $r3 = <org.gnucash.android.export.xml.GncXmlHelper: java.text.SimpleDateFormat DATE_FORMATTER>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r5);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gdate");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, $r2);

        return;
    }
    public java.util.List generateExport() throws org.gnucash.android.export.Exporter$ExporterException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        java.io.BufferedOutputStream r1;
        java.util.ArrayList r2;
        java.io.FileOutputStream r3;
        java.io.OutputStreamWriter r4, r6;
        java.lang.String $r5;
        java.io.IOException r7, r10, r11, r13;
        org.gnucash.android.export.Exporter$ExporterException $r8;
        org.gnucash.android.export.ExportParams $r9;
        java.lang.Throwable $r12;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        r6 = null;

        $r5 = virtualinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: java.lang.String getExportCacheFilePath()>();

     label01:
        r3 = new java.io.FileOutputStream;

     label02:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r5);

     label03:
        r1 = new java.io.BufferedOutputStream;

     label04:
        specialinvoke r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

     label05:
        r4 = new java.io.OutputStreamWriter;

     label06:
        specialinvoke r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

     label07:
        virtualinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void generateExport(java.io.Writer)>(r4);

     label08:
        if r4 == null goto label25;

     label09:
        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();

     label10:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        return r2;

     label11:
        r7 := @caughtexception;

        $r8 = new org.gnucash.android.export.Exporter$ExporterException;

        $r9 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.export.ExportParams mExportParams>;

        specialinvoke $r8.<org.gnucash.android.export.Exporter$ExporterException: void <init>(org.gnucash.android.export.ExportParams,java.lang.Throwable)>($r9, r7);

        throw $r8;

     label12:
        r10 := @caughtexception;

     label13:
        staticinvoke <com.crashlytics.android.Crashlytics: void log(java.lang.String)>("Error exporting XML");

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r10);

     label14:
        if r6 == null goto label10;

     label15:
        virtualinvoke r6.<java.io.OutputStreamWriter: void close()>();

     label16:
        goto label10;

     label17:
        r11 := @caughtexception;

        $r8 = new org.gnucash.android.export.Exporter$ExporterException;

        $r9 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.export.ExportParams mExportParams>;

        specialinvoke $r8.<org.gnucash.android.export.Exporter$ExporterException: void <init>(org.gnucash.android.export.ExportParams,java.lang.Throwable)>($r9, r11);

        throw $r8;

     label18:
        $r12 := @caughtexception;

     label19:
        if r6 == null goto label21;

     label20:
        virtualinvoke r6.<java.io.OutputStreamWriter: void close()>();

     label21:
        throw $r12;

     label22:
        r13 := @caughtexception;

        $r8 = new org.gnucash.android.export.Exporter$ExporterException;

        $r9 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.export.ExportParams mExportParams>;

        specialinvoke $r8.<org.gnucash.android.export.Exporter$ExporterException: void <init>(org.gnucash.android.export.ExportParams,java.lang.Throwable)>($r9, r13);

        throw $r8;

     label23:
        $r12 := @caughtexception;

        r6 = r4;

        goto label19;

     label24:
        r10 := @caughtexception;

        r6 = r4;

        goto label13;

     label25:
        goto label10;

        catch java.io.IOException from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.lang.Throwable from label01 to label07 with label18;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label20 to label21 with label22;
    }
    public void generateExport(java.io.Writer) throws org.gnucash.android.export.Exporter$ExporterException
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;
        java.io.Writer $r1;
        java.lang.Exception r2;
        java.lang.String[] r3;
        java.lang.String r4, $r9;
        org.xmlpull.v1.XmlPullParserFactory $r5;
        org.xmlpull.v1.XmlSerializer $r6;
        java.lang.Boolean $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r10;
        java.util.List $r11;
        java.lang.Object $r12;
        java.util.Currency $r13;
        boolean $z0;
        long $l2;
        org.gnucash.android.db.adapter.TransactionsDbAdapter $r14;
        org.gnucash.android.db.adapter.PricesDbAdapter $r15;
        byte $b3;
        org.gnucash.android.export.Exporter$ExporterException $r16;
        org.gnucash.android.export.ExportParams $r17;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        $r1 := @parameter0: java.io.Writer;

     label01:
        r3 = newarray (java.lang.String)[13];

        r3[0] = "gnc";

        r3[1] = "act";

        r3[2] = "book";

        r3[3] = "cd";

        r3[4] = "cmdty";

        r3[5] = "price";

        r3[6] = "slot";

        r3[7] = "split";

        r3[8] = "trn";

        r3[9] = "ts";

        r3[10] = "sx";

        r3[11] = "bgt";

        r3[12] = "recurrence";

        $r5 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r6 = virtualinvoke $r5.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>($r1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("utf-8", $r7);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc-v2");

        $i0 = lengthof r3;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label10;

     label04:
        r4 = r3[$i1];

     label05:
        $r8 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r8 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.gnucash.org/XML/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, $r9, r4);

     label09:
        $i1 = $i1 + 1;

        goto label03;

     label10:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cd:type", "book");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("1");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:book");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "2.0.0");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "book:id");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "guid");

        $r9 = staticinvoke <org.gnucash.android.model.BaseModel: java.lang.String generateUID()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "book:id");

        $r10 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter>;

        $r11 = virtualinvoke $r10.<org.gnucash.android.db.adapter.AccountsDbAdapter: java.util.List getCurrenciesInUse()>();

     label11:
        $i0 = 0;

     label12:
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

     label13:
        if $i0 >= $i1 goto label18;

     label14:
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i0);

        $r13 = (java.util.Currency) $r12;

        $r9 = virtualinvoke $r13.<java.util.Currency: java.lang.String getCurrencyCode()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("XXX");

     label15:
        if $z0 == 0 goto label17;

     label16:
        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>($i0);

     label17:
        $i0 = $i0 + 1;

        goto label12;

     label18:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cd:type", "commodity");

     label19:
        $r8 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cd:type", "account");

     label21:
        $r8 = new java.lang.StringBuilder;

     label22:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.AccountsDbAdapter mAccountsDbAdapter>;

        $l2 = virtualinvoke $r10.<org.gnucash.android.db.adapter.AccountsDbAdapter: long getRecordsCount()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cd:type", "transaction");

     label23:
        $r8 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter>;

        $l2 = virtualinvoke $r14.<org.gnucash.android.db.adapter.TransactionsDbAdapter: long getRecordsCount()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        $r15 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.PricesDbAdapter mPricesDbAdapter>;

        $l2 = virtualinvoke $r15.<org.gnucash.android.db.adapter.PricesDbAdapter: long getRecordsCount()>();

     label25:
        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label29;

     label26:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cd:type", "price");

     label27:
        $r8 = new java.lang.StringBuilder;

     label28:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:count-data");

     label29:
        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportCommodities(org.xmlpull.v1.XmlSerializer,java.util.List)>($r6, $r11);

     label30:
        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label32;

     label31:
        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportPrices(org.xmlpull.v1.XmlSerializer)>($r6);

     label32:
        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportAccounts(org.xmlpull.v1.XmlSerializer)>($r6);

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportTransactions(org.xmlpull.v1.XmlSerializer,boolean)>($r6, 0);

        $r14 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.db.adapter.TransactionsDbAdapter mTransactionsDbAdapter>;

        $l2 = virtualinvoke $r14.<org.gnucash.android.db.adapter.TransactionsDbAdapter: long getTemplateTransactionsCount()>();

     label33:
        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label35;

     label34:
        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gnc:template-transactions");

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportTransactions(org.xmlpull.v1.XmlSerializer,boolean)>($r6, 1);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:template-transactions");

     label35:
        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportScheduledTransactions(org.xmlpull.v1.XmlSerializer)>($r6);

        specialinvoke r0.<org.gnucash.android.export.xml.GncXmlExporter: void exportBudgets(org.xmlpull.v1.XmlSerializer)>($r6);

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc:book");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gnc-v2");

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke $r6.<org.xmlpull.v1.XmlSerializer: void flush()>();

     label36:
        return;

     label37:
        r2 := @caughtexception;

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r2);

        $r16 = new org.gnucash.android.export.Exporter$ExporterException;

        $r17 = r0.<org.gnucash.android.export.xml.GncXmlExporter: org.gnucash.android.export.ExportParams mExportParams>;

        specialinvoke $r16.<org.gnucash.android.export.Exporter$ExporterException: void <init>(org.gnucash.android.export.ExportParams,java.lang.Throwable)>($r17, r2);

        throw $r16;

        catch java.lang.Exception from label01 to label02 with label37;
        catch java.lang.Exception from label04 to label05 with label37;
        catch java.lang.Exception from label06 to label07 with label37;
        catch java.lang.Exception from label08 to label09 with label37;
        catch java.lang.Exception from label10 to label11 with label37;
        catch java.lang.Exception from label12 to label13 with label37;
        catch java.lang.Exception from label14 to label15 with label37;
        catch java.lang.Exception from label16 to label17 with label37;
        catch java.lang.Exception from label18 to label19 with label37;
        catch java.lang.Exception from label20 to label21 with label37;
        catch java.lang.Exception from label22 to label23 with label37;
        catch java.lang.Exception from label24 to label25 with label37;
        catch java.lang.Exception from label26 to label27 with label37;
        catch java.lang.Exception from label28 to label30 with label37;
        catch java.lang.Exception from label31 to label33 with label37;
        catch java.lang.Exception from label34 to label36 with label37;
    }
    public java.lang.String getExportMimeType()
    {
        org.gnucash.android.export.xml.GncXmlExporter r0;

        r0 := @this: org.gnucash.android.export.xml.GncXmlExporter;

        return "text/xml";
    }
