org.gnucash.android.model.Recurrence extends org.gnucash.android.model.BaseModel
private java.util.List mByDays
private java.sql.Timestamp mPeriodEnd
private java.sql.Timestamp mPeriodStart
private org.gnucash.android.model.PeriodType mPeriodType
    public void <init>(org.gnucash.android.model.PeriodType)
    {
        org.gnucash.android.model.Recurrence r0;
        org.gnucash.android.model.PeriodType $r1;
        java.util.List $r2;
        java.sql.Timestamp $r3;
        long $l0;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 := @parameter0: org.gnucash.android.model.PeriodType;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.gnucash.android.model.Recurrence: java.util.List mByDays> = $r2;

        virtualinvoke r0.<org.gnucash.android.model.Recurrence: void setPeriodType(org.gnucash.android.model.PeriodType)>($r1);

        $r3 = new java.sql.Timestamp;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r3.<java.sql.Timestamp: void <init>(long)>($l0);

        r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart> = $r3;

        return;
    }
    private java.lang.String getDaysOfWeekString()
    {
        org.gnucash.android.model.Recurrence r0;
        java.text.SimpleDateFormat r1;
        java.lang.StringBuilder r2, $r11;
        java.util.List $r3;
        boolean $z0;
        java.util.Calendar $r4;
        java.util.Locale $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        int $i0;
        java.util.Date $r9;
        java.lang.String $r10;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r3 = r0.<org.gnucash.android.model.Recurrence: java.util.List mByDays>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r1 = new java.text.SimpleDateFormat;

        $r5 = staticinvoke <org.gnucash.android.app.GnuCashApplication: java.util.Locale getDefaultLocale()>();

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEEE", $r5);

        $r3 = r0.<org.gnucash.android.model.Recurrence: java.util.List mByDays>;

        $r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(7, $i0);

        $r9 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        $r10 = virtualinvoke r1.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r9);

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label2;

     label3:
        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -2;

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i0);

        return $r10;
    }
    public java.util.List getByDays()
    {
        org.gnucash.android.model.Recurrence r0;
        java.util.List $r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 = r0.<org.gnucash.android.model.Recurrence: java.util.List mByDays>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }
    public int getCount()
    {
        org.gnucash.android.model.Recurrence r0;
        java.sql.Timestamp $r1;
        org.gnucash.android.model.PeriodType $r2;
        int $i0, $i1;
        int[] $r3;
        org.joda.time.base.BaseSingleFieldPeriod r4;
        org.joda.time.LocalDateTime r5;
        long $l2, $l3;
        org.joda.time.DateTime $r6;
        byte $b4;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i0 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $r3 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i1 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            default: goto label2;
        };

     label2:
        r4 = staticinvoke <org.joda.time.Months: org.joda.time.Months months(int)>($i0);

     label3:
        $i0 = 0;

        r5 = new org.joda.time.LocalDateTime;

        $r1 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        $l2 = virtualinvoke $r1.<java.sql.Timestamp: long getTime()>();

        specialinvoke r5.<org.joda.time.LocalDateTime: void <init>(long)>($l2);

     label4:
        $r6 = virtualinvoke r5.<org.joda.time.LocalDateTime: org.joda.time.DateTime toDateTime()>();

        $l2 = virtualinvoke $r6.<org.joda.time.DateTime: long getMillis()>();

        $r1 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd>;

        $l3 = virtualinvoke $r1.<java.sql.Timestamp: long getTime()>();

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label9;

        $i0 = $i0 + 1;

        r5 = virtualinvoke r5.<org.joda.time.LocalDateTime: org.joda.time.LocalDateTime plus(org.joda.time.ReadablePeriod)>(r4);

        goto label4;

     label5:
        r4 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i0);

        goto label3;

     label6:
        r4 = staticinvoke <org.joda.time.Weeks: org.joda.time.Weeks weeks(int)>($i0);

        goto label3;

     label7:
        r4 = staticinvoke <org.joda.time.Months: org.joda.time.Months months(int)>($i0);

        goto label3;

     label8:
        r4 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>($i0);

        goto label3;

     label9:
        return $i0;
    }
    public int getDaysLeftInCurrentPeriod()
    {
        org.gnucash.android.model.Recurrence r0;
        int i0, $i2;
        org.joda.time.LocalDate r1, r3;
        long $l1;
        org.gnucash.android.model.PeriodType $r2;
        int[] $r4;
        org.joda.time.Days $r5;
        org.joda.time.LocalDate$Property $r6;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = new org.joda.time.LocalDate;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r1.<org.joda.time.LocalDate: void <init>(long)>($l1);

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        i0 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        i0 = i0 + -1;

        r3 = null;

        $r4 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i2 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i2 = $r4[$i2];

        lookupswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r5 = staticinvoke <org.joda.time.Days: org.joda.time.Days daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)>(r1, r3);

        i0 = virtualinvoke $r5.<org.joda.time.Days: int getDays()>();

        return i0;

     label2:
        r3 = new org.joda.time.LocalDate;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r3.<org.joda.time.LocalDate: void <init>(long)>($l1);

        r3 = virtualinvoke r3.<org.joda.time.LocalDate: org.joda.time.LocalDate plusDays(int)>(i0);

        goto label1;

     label3:
        $r6 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfWeek()>();

        r3 = virtualinvoke $r6.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        r3 = virtualinvoke r3.<org.joda.time.LocalDate: org.joda.time.LocalDate plusWeeks(int)>(i0);

        goto label1;

     label4:
        $r6 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfMonth()>();

        r3 = virtualinvoke $r6.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        r3 = virtualinvoke r3.<org.joda.time.LocalDate: org.joda.time.LocalDate plusMonths(int)>(i0);

        goto label1;

     label5:
        $r6 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfYear()>();

        r3 = virtualinvoke $r6.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        r3 = virtualinvoke r3.<org.joda.time.LocalDate: org.joda.time.LocalDate plusYears(int)>(i0);

        goto label1;
    }
    public int getNumberOfPeriods(int)
    {
        org.gnucash.android.model.Recurrence r0;
        int $i0, $i2, $i3;
        org.joda.time.LocalDate r1, $r6;
        java.sql.Timestamp $r2;
        long $l1;
        org.gnucash.android.model.PeriodType $r3;
        int[] $r4;
        org.joda.time.LocalDate$Property $r5;
        org.joda.time.Weeks $r7;
        org.joda.time.Months $r8;
        org.joda.time.Years $r9;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $i0 := @parameter0: int;

        r1 = new org.joda.time.LocalDate;

        $r2 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        $l1 = virtualinvoke $r2.<java.sql.Timestamp: long getTime()>();

        specialinvoke r1.<org.joda.time.LocalDate: void <init>(long)>($l1);

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i2 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $r4 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i3 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i3 = $r4[$i3];

        lookupswitch($i3)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        $r5 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfWeek()>();

        $r6 = virtualinvoke $r5.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        $r6 = virtualinvoke $r6.<org.joda.time.LocalDate: org.joda.time.LocalDate plusWeeks(int)>($i0);

        $r7 = staticinvoke <org.joda.time.Weeks: org.joda.time.Weeks weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)>(r1, $r6);

        $i0 = virtualinvoke $r7.<org.joda.time.Weeks: int getWeeks()>();

        $i0 = $i0 / $i2;

        return $i0;

     label4:
        $r5 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfMonth()>();

        $r6 = virtualinvoke $r5.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        $r6 = virtualinvoke $r6.<org.joda.time.LocalDate: org.joda.time.LocalDate plusMonths(int)>($i0);

        $r8 = staticinvoke <org.joda.time.Months: org.joda.time.Months monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)>(r1, $r6);

        $i0 = virtualinvoke $r8.<org.joda.time.Months: int getMonths()>();

        $i0 = $i0 / $i2;

        return $i0;

     label5:
        $r5 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfYear()>();

        $r6 = virtualinvoke $r5.<org.joda.time.LocalDate$Property: org.joda.time.LocalDate withMaximumValue()>();

        $r6 = virtualinvoke $r6.<org.joda.time.LocalDate: org.joda.time.LocalDate plusYears(int)>($i0);

        $r9 = staticinvoke <org.joda.time.Years: org.joda.time.Years yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)>(r1, $r6);

        $i0 = virtualinvoke $r9.<org.joda.time.Years: int getYears()>();

        $i0 = $i0 / $i2;

        return $i0;
    }
    public long getPeriod()
    {
        org.gnucash.android.model.Recurrence r0;
        long l0, $l2;
        int[] $r1;
        org.gnucash.android.model.PeriodType $r2;
        int $i1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        l0 = 0L;

        $r1 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i1 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i1 = $r1[$i1];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i1 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $l2 = (long) $i1;

        l0 = $l2 * l0;

        return l0;

     label2:
        l0 = 86400000L;

        goto label1;

     label3:
        l0 = 604800000L;

        goto label1;

     label4:
        l0 = 2592000000L;

        goto label1;

     label5:
        l0 = 31104000000L;

        goto label1;
    }
    public java.sql.Timestamp getPeriodEnd()
    {
        org.gnucash.android.model.Recurrence r0;
        java.sql.Timestamp r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd>;

        return r1;
    }
    public java.sql.Timestamp getPeriodStart()
    {
        org.gnucash.android.model.Recurrence r0;
        java.sql.Timestamp r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        return r1;
    }
    public org.gnucash.android.model.PeriodType getPeriodType()
    {
        org.gnucash.android.model.Recurrence r0;
        org.gnucash.android.model.PeriodType r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        return r1;
    }
    public java.lang.String getRepeatString()
    {
        org.gnucash.android.model.Recurrence r0;
        java.lang.StringBuilder r1, $r6;
        org.gnucash.android.model.PeriodType $r2, $r5;
        java.lang.String $r3;
        android.content.Context $r4;
        java.lang.Object[] $r7;
        java.sql.Timestamp $r8;
        java.text.DateFormat $r9;
        java.util.Date $r10;
        long $l0;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = new java.lang.StringBuilder;

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.PeriodType: java.lang.String getFrequencyRepeatString()>();

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.content.Context getAppContext()>();

        $r2 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $r5 = <org.gnucash.android.model.PeriodType: org.gnucash.android.model.PeriodType WEEK>;

        if $r2 != $r5 goto label1;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = newarray (java.lang.Object)[1];

        $r3 = specialinvoke r0.<org.gnucash.android.model.Recurrence: java.lang.String getDaysOfWeekString()>();

        $r7[0] = $r3;

        $r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296468, $r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        $r8 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd>;

        if $r8 == null goto label2;

        $r9 = staticinvoke <java.text.SimpleDateFormat: java.text.DateFormat getDateInstance()>();

        $r10 = new java.util.Date;

        $r8 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd>;

        $l0 = virtualinvoke $r8.<java.sql.Timestamp: long getTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);

        $r3 = virtualinvoke $r9.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r10);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        $r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296469, $r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public java.lang.String getRuleString()
    {
        org.gnucash.android.model.Recurrence r0;
        java.lang.StringBuilder r1, $r2;
        org.gnucash.android.model.PeriodType $r3;
        java.lang.String $r4;
        int $i0;
        java.sql.Timestamp $r5;
        long $l1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FREQ=");

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: java.lang.String getFrequencyDescription()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERVAL=");

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $i0 = virtualinvoke r0.<org.gnucash.android.model.Recurrence: int getCount()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COUNT=");

        $i0 = virtualinvoke r0.<org.gnucash.android.model.Recurrence: int getCount()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label1:
        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $r5 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        $l1 = virtualinvoke $r5.<java.sql.Timestamp: long getTime()>();

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: java.lang.String getByParts(long)>($l1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public java.lang.String getTextOfCurrentPeriod(int)
    {
        org.gnucash.android.model.Recurrence r0;
        int $i0, $i2;
        org.joda.time.LocalDate r1;
        java.sql.Timestamp $r2;
        long $l1;
        int[] $r3;
        org.gnucash.android.model.PeriodType $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.joda.time.LocalDate$Property $r7;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $i0 := @parameter0: int;

        r1 = new org.joda.time.LocalDate;

        $r2 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        $l1 = virtualinvoke $r2.<java.sql.Timestamp: long getTime()>();

        specialinvoke r1.<org.joda.time.LocalDate: void <init>(long)>($l1);

        $r3 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r4 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i2 = virtualinvoke $r4.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i2 = $r3[$i2];

        lookupswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Period ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label2:
        $r7 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property dayOfWeek()>();

        $r6 = virtualinvoke $r7.<org.joda.time.LocalDate$Property: java.lang.String getAsText()>();

        return $r6;

     label3:
        $r7 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property weekOfWeekyear()>();

        $r6 = virtualinvoke $r7.<org.joda.time.LocalDate$Property: java.lang.String getAsText()>();

        return $r6;

     label4:
        $r7 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property monthOfYear()>();

        $r6 = virtualinvoke $r7.<org.joda.time.LocalDate$Property: java.lang.String getAsText()>();

        return $r6;

     label5:
        $r7 = virtualinvoke r1.<org.joda.time.LocalDate: org.joda.time.LocalDate$Property year()>();

        $r6 = virtualinvoke $r7.<org.joda.time.LocalDate$Property: java.lang.String getAsText()>();

        return $r6;
    }
    public void setByDays(java.util.List)
    {
        org.gnucash.android.model.Recurrence r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: org.gnucash.android.model.Recurrence;

        r1 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.gnucash.android.model.Recurrence: java.util.List mByDays> = $r2;

        return;
    }
    public void setPeriodEnd(int)
    {
        org.gnucash.android.model.Recurrence r0;
        int $i0, $i2;
        org.joda.time.LocalDateTime r1;
        java.sql.Timestamp $r2;
        long $l1;
        org.gnucash.android.model.PeriodType $r3;
        int[] $r4;
        org.joda.time.DateTime $r5;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $i0 := @parameter0: int;

        r1 = new org.joda.time.LocalDateTime;

        $r2 = r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart>;

        $l1 = virtualinvoke $r2.<java.sql.Timestamp: long getTime()>();

        specialinvoke r1.<org.joda.time.LocalDateTime: void <init>(long)>($l1);

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i2 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int getMultiplier()>();

        $i0 = $i0 * $i2;

        $r4 = <org.gnucash.android.model.Recurrence$1: int[] $SwitchMap$org$gnucash$android$model$PeriodType>;

        $r3 = r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType>;

        $i2 = virtualinvoke $r3.<org.gnucash.android.model.PeriodType: int ordinal()>();

        $i2 = $r4[$i2];

        lookupswitch($i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        r1 = virtualinvoke r1.<org.joda.time.LocalDateTime: org.joda.time.LocalDateTime plusMonths(int)>($i0);

     label2:
        $r2 = new java.sql.Timestamp;

        $r5 = virtualinvoke r1.<org.joda.time.LocalDateTime: org.joda.time.DateTime toDateTime()>();

        $l1 = virtualinvoke $r5.<org.joda.time.DateTime: long getMillis()>();

        specialinvoke $r2.<java.sql.Timestamp: void <init>(long)>($l1);

        r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd> = $r2;

        return;

     label3:
        r1 = virtualinvoke r1.<org.joda.time.LocalDateTime: org.joda.time.LocalDateTime plusDays(int)>($i0);

        goto label2;

     label4:
        r1 = virtualinvoke r1.<org.joda.time.LocalDateTime: org.joda.time.LocalDateTime plusWeeks(int)>($i0);

        goto label2;

     label5:
        r1 = virtualinvoke r1.<org.joda.time.LocalDateTime: org.joda.time.LocalDateTime plusYears(int)>($i0);

        goto label2;
    }
    public void setPeriodEnd(java.sql.Timestamp)
    {
        org.gnucash.android.model.Recurrence r0;
        java.sql.Timestamp $r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 := @parameter0: java.sql.Timestamp;

        r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodEnd> = $r1;

        return;
    }
    public void setPeriodStart(java.sql.Timestamp)
    {
        org.gnucash.android.model.Recurrence r0;
        java.sql.Timestamp $r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 := @parameter0: java.sql.Timestamp;

        r0.<org.gnucash.android.model.Recurrence: java.sql.Timestamp mPeriodStart> = $r1;

        return;
    }
    public void setPeriodType(org.gnucash.android.model.PeriodType)
    {
        org.gnucash.android.model.Recurrence r0;
        org.gnucash.android.model.PeriodType $r1;

        r0 := @this: org.gnucash.android.model.Recurrence;

        $r1 := @parameter0: org.gnucash.android.model.PeriodType;

        r0.<org.gnucash.android.model.Recurrence: org.gnucash.android.model.PeriodType mPeriodType> = $r1;

        return;
    }
