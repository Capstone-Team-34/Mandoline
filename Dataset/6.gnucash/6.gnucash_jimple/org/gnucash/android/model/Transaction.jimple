org.gnucash.android.model.Transaction extends org.gnucash.android.model.BaseModel
public static final java.lang.String EXTRA_ACCOUNT_UID
public static final java.lang.String EXTRA_AMOUNT
public static final java.lang.String EXTRA_DOUBLE_ACCOUNT_UID
public static final java.lang.String EXTRA_SPLITS
public static final java.lang.String EXTRA_TRANSACTION_TYPE
public static final java.lang.String MIME_TYPE
private org.gnucash.android.model.Commodity mCommodity
private java.lang.String mCurrencyCode
private java.lang.String mDescription
private boolean mIsExported
private boolean mIsTemplate
private java.lang.String mNotes
private java.lang.String mScheduledActionUID
private java.util.List mSplitList
private long mTimestamp
    public void <init>(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        $r2 = <org.gnucash.android.model.Money: java.lang.String DEFAULT_CURRENCY_CODE>;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList> = $r3;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes> = "";

        r0.<org.gnucash.android.model.Transaction: boolean mIsExported> = 0;

        r0.<org.gnucash.android.model.Transaction: boolean mIsTemplate> = 0;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mScheduledActionUID> = null;

        specialinvoke r0.<org.gnucash.android.model.Transaction: void initDefaults()>();

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setDescription(java.lang.String)>($r1);

        return;
    }
    public void <init>(org.gnucash.android.model.Transaction, boolean)
    {
        org.gnucash.android.model.Transaction r0, $r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        long $l0;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.gnucash.android.model.Split r7, $r8;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: org.gnucash.android.model.Transaction;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        $r2 = <org.gnucash.android.model.Money: java.lang.String DEFAULT_CURRENCY_CODE>;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList> = $r3;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes> = "";

        r0.<org.gnucash.android.model.Transaction: boolean mIsExported> = 0;

        r0.<org.gnucash.android.model.Transaction: boolean mIsTemplate> = 0;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mScheduledActionUID> = null;

        specialinvoke r0.<org.gnucash.android.model.Transaction: void initDefaults()>();

        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Transaction: java.lang.String getDescription()>();

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setDescription(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Transaction: java.lang.String getNote()>();

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setNote(java.lang.String)>($r2);

        $l0 = virtualinvoke $r1.<org.gnucash.android.model.Transaction: long getTimeMillis()>();

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setTime(long)>($l0);

        $r2 = $r1.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode> = $r2;

        $r4 = $r1.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.gnucash.android.model.Split) $r6;

        $r8 = new org.gnucash.android.model.Split;

        specialinvoke $r8.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Split,boolean)>(r7, $z0);

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void addSplit(org.gnucash.android.model.Split)>($r8);

        goto label1;

     label2:
        if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Transaction: java.lang.String getUID()>();

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setUID(java.lang.String)>($r2);

     label3:
        return;
    }
    public static org.gnucash.android.model.Money computeBalance(java.lang.String, java.util.List)
    {
        java.lang.String $r0, $r5;
        java.util.List r1;
        org.gnucash.android.model.TransactionType $r2, $r13;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r3;
        org.gnucash.android.model.AccountType $r4;
        java.util.Currency $r6, $r12;
        boolean $z0, $z1;
        org.gnucash.android.model.Money $r7, $r11;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        org.gnucash.android.model.Split r10;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r3 = staticinvoke <org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.db.adapter.AccountsDbAdapter getInstance()>();

        $r4 = virtualinvoke $r3.<org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.model.AccountType getAccountType(java.lang.String)>($r0);

        $r5 = virtualinvoke $r3.<org.gnucash.android.db.adapter.AccountsDbAdapter: java.lang.String getAccountCurrencyCode(java.lang.String)>($r0);

        $r6 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r5);

        $z0 = virtualinvoke $r4.<org.gnucash.android.model.AccountType: boolean hasDebitNormalBalance()>();

        $r7 = staticinvoke <org.gnucash.android.model.Money: org.gnucash.android.model.Money createZeroInstance(java.lang.String)>($r5);

        $r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.gnucash.android.model.Split) $r9;

        $r5 = virtualinvoke r10.<org.gnucash.android.model.Split: java.lang.String getAccountUID()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r10.<org.gnucash.android.model.Split: org.gnucash.android.model.Money getValue()>();

        $r12 = virtualinvoke $r11.<org.gnucash.android.model.Money: java.util.Currency getCurrency()>();

        if $r12 != $r6 goto label4;

        $r11 = virtualinvoke r10.<org.gnucash.android.model.Split: org.gnucash.android.model.Money getValue()>();

        $r11 = virtualinvoke $r11.<org.gnucash.android.model.Money: org.gnucash.android.model.Money abs()>();

     label2:
        $r13 = virtualinvoke r10.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType getType()>();

        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        if $r13 != $r2 goto label5;

        $z1 = 1;

     label3:
        if $z0 == 0 goto label7;

        if $z1 == 0 goto label6;

        $r7 = virtualinvoke $r7.<org.gnucash.android.model.Money: org.gnucash.android.model.Money add(org.gnucash.android.model.Money)>($r11);

        goto label1;

     label4:
        $r11 = virtualinvoke r10.<org.gnucash.android.model.Split: org.gnucash.android.model.Money getQuantity()>();

        $r11 = virtualinvoke $r11.<org.gnucash.android.model.Money: org.gnucash.android.model.Money abs()>();

        goto label2;

     label5:
        $z1 = 0;

        goto label3;

     label6:
        $r7 = virtualinvoke $r7.<org.gnucash.android.model.Money: org.gnucash.android.model.Money subtract(org.gnucash.android.model.Money)>($r11);

        goto label1;

     label7:
        if $z1 == 0 goto label8;

        $r7 = virtualinvoke $r7.<org.gnucash.android.model.Money: org.gnucash.android.model.Money subtract(org.gnucash.android.model.Money)>($r11);

        goto label1;

     label8:
        $r7 = virtualinvoke $r7.<org.gnucash.android.model.Money: org.gnucash.android.model.Money add(org.gnucash.android.model.Money)>($r11);

        goto label1;

     label9:
        return $r7;
    }
    public static android.content.Intent createIntent(org.gnucash.android.model.Transaction)
    {
        org.gnucash.android.model.Transaction $r0;
        android.content.Intent r1;
        java.lang.StringBuilder r2, $r8;
        java.lang.String $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.gnucash.android.model.Split r7;

        $r0 := @parameter0: org.gnucash.android.model.Transaction;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INSERT");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setType(java.lang.String)>("vnd.android.cursor.item/vnd.org.gnucash.android.transaction");

        $r3 = virtualinvoke $r0.<org.gnucash.android.model.Transaction: java.lang.String getDescription()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TITLE", $r3);

        $r3 = virtualinvoke $r0.<org.gnucash.android.model.Transaction: java.lang.String getNote()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", $r3);

        $r3 = virtualinvoke $r0.<org.gnucash.android.model.Transaction: java.lang.String getCurrencyCode()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.gnucash.android.extra.currency_code", $r3);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<org.gnucash.android.model.Transaction: java.util.List getSplits()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.gnucash.android.model.Split) $r6;

        $r3 = virtualinvoke r7.<org.gnucash.android.model.Split: java.lang.String toCsv()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label1;

     label2:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.gnucash.android.extra.transaction.splits", $r3);

        return r1;
    }
    public static org.gnucash.android.model.TransactionType getTypeForBalance(org.gnucash.android.model.AccountType, boolean)
    {
        org.gnucash.android.model.AccountType $r0;
        boolean $z0, $z1;
        org.gnucash.android.model.TransactionType r1;

        $r0 := @parameter0: org.gnucash.android.model.AccountType;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke $r0.<org.gnucash.android.model.AccountType: boolean hasDebitNormalBalance()>();

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label1;

        r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        return r1;

     label1:
        r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        return r1;

     label2:
        if $z0 == 0 goto label3;

        r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        return r1;

     label3:
        r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        return r1;
    }
    private void initDefaults()
    {
        org.gnucash.android.model.Transaction r0;
        long $l0;
        org.gnucash.android.model.Commodity $r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 = <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity DEFAULT_COMMODITY>;

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void setCommodity(org.gnucash.android.model.Commodity)>($r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.gnucash.android.model.Transaction: long mTimestamp> = $l0;

        return;
    }
    public static boolean shouldDecreaseBalance(org.gnucash.android.model.AccountType, org.gnucash.android.model.TransactionType)
    {
        org.gnucash.android.model.AccountType $r0;
        org.gnucash.android.model.TransactionType $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.gnucash.android.model.AccountType;

        $r1 := @parameter1: org.gnucash.android.model.TransactionType;

        $z0 = virtualinvoke $r0.<org.gnucash.android.model.AccountType: boolean hasDebitNormalBalance()>();

        if $z0 == 0 goto label2;

        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        if $r1 == $r2 goto label3;

        return 0;

     label3:
        return 1;
    }
    public void addSplit(org.gnucash.android.model.Split)
    {
        org.gnucash.android.model.Transaction r0;
        org.gnucash.android.model.Split $r1;
        java.lang.String $r2;
        java.util.List $r3;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: org.gnucash.android.model.Split;

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Transaction: java.lang.String getUID()>();

        virtualinvoke $r1.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r2);

        $r3 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public org.gnucash.android.model.Split createAutoBalanceSplit()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;
        org.gnucash.android.model.Money $r2;
        boolean $z0;
        org.gnucash.android.model.Split r3;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Transaction: org.gnucash.android.model.Money getImbalance()>();

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Money: boolean isAmountZero()>();

        if $z0 != 0 goto label1;

        r3 = new org.gnucash.android.model.Split;

        $r2 = virtualinvoke $r2.<org.gnucash.android.model.Money: org.gnucash.android.model.Money negate()>();

        $r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        specialinvoke r3.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Money,java.lang.String)>($r2, $r1);

        virtualinvoke r0.<org.gnucash.android.model.Transaction: void addSplit(org.gnucash.android.model.Split)>(r3);

        return r3;

     label1:
        return null;
    }
    public org.gnucash.android.model.Money getBalance(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;
        org.gnucash.android.model.Money $r2;
        java.util.List $r3;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r2 = staticinvoke <org.gnucash.android.model.Transaction: org.gnucash.android.model.Money computeBalance(java.lang.String,java.util.List)>($r1, $r3);

        return $r2;
    }
    public org.gnucash.android.model.Commodity getCommodity()
    {
        org.gnucash.android.model.Transaction r0;
        org.gnucash.android.model.Commodity r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: org.gnucash.android.model.Commodity mCommodity>;

        return r1;
    }
    public java.util.Currency getCurrency()
    {
        org.gnucash.android.model.Transaction r0;
        java.util.Currency $r1;
        java.lang.String $r2;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r2 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        $r1 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r2);

        return $r1;
    }
    public java.lang.String getCurrencyCode()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        return r1;
    }
    public java.lang.String getDescription()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mDescription>;

        return r1;
    }
    public org.gnucash.android.model.Money getImbalance()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1, $r9;
        org.gnucash.android.model.Money $r2, $r7;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.gnucash.android.model.Split r6;
        java.util.Currency $r8;
        org.gnucash.android.model.TransactionType $r10, $r11;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        $r2 = staticinvoke <org.gnucash.android.model.Money: org.gnucash.android.model.Money createZeroInstance(java.lang.String)>($r1);

        $r3 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.gnucash.android.model.Split) $r5;

        $r7 = virtualinvoke r6.<org.gnucash.android.model.Split: org.gnucash.android.model.Money getQuantity()>();

        $r8 = virtualinvoke $r7.<org.gnucash.android.model.Money: java.util.Currency getCurrency()>();

        $r1 = virtualinvoke $r8.<java.util.Currency: java.lang.String getCurrencyCode()>();

        $r9 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        $r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode>;

        $r2 = staticinvoke <org.gnucash.android.model.Money: org.gnucash.android.model.Money createZeroInstance(java.lang.String)>($r1);

        return $r2;

     label2:
        $r7 = virtualinvoke r6.<org.gnucash.android.model.Split: org.gnucash.android.model.Money getValue()>();

        $r7 = virtualinvoke $r7.<org.gnucash.android.model.Money: org.gnucash.android.model.Money abs()>();

        $r10 = virtualinvoke r6.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType getType()>();

        $r11 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        if $r10 != $r11 goto label3;

        $r2 = virtualinvoke $r2.<org.gnucash.android.model.Money: org.gnucash.android.model.Money subtract(org.gnucash.android.model.Money)>($r7);

        goto label1;

     label3:
        $r2 = virtualinvoke $r2.<org.gnucash.android.model.Money: org.gnucash.android.model.Money add(org.gnucash.android.model.Money)>($r7);

        goto label1;

     label4:
        return $r2;
    }
    public java.lang.String getNote()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes>;

        return r1;
    }
    public java.lang.String getScheduledActionUID()
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: java.lang.String mScheduledActionUID>;

        return r1;
    }
    public java.util.List getSplits()
    {
        org.gnucash.android.model.Transaction r0;
        java.util.List r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        return r1;
    }
    public java.util.List getSplits(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1, $r7;
        java.util.ArrayList r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.gnucash.android.model.Split r6;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.gnucash.android.model.Split) $r5;

        $r7 = virtualinvoke r6.<org.gnucash.android.model.Split: java.lang.String getAccountUID()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        return r2;
    }
    public long getTimeMillis()
    {
        org.gnucash.android.model.Transaction r0;
        long l0;

        r0 := @this: org.gnucash.android.model.Transaction;

        l0 = r0.<org.gnucash.android.model.Transaction: long mTimestamp>;

        return l0;
    }
    public boolean isExported()
    {
        org.gnucash.android.model.Transaction r0;
        boolean z0;

        r0 := @this: org.gnucash.android.model.Transaction;

        z0 = r0.<org.gnucash.android.model.Transaction: boolean mIsExported>;

        return z0;
    }
    public boolean isTemplate()
    {
        org.gnucash.android.model.Transaction r0;
        boolean z0;

        r0 := @this: org.gnucash.android.model.Transaction;

        z0 = r0.<org.gnucash.android.model.Transaction: boolean mIsTemplate>;

        return z0;
    }
    public void setCommodity(org.gnucash.android.model.Commodity)
    {
        org.gnucash.android.model.Transaction r0;
        org.gnucash.android.model.Commodity $r1;
        java.lang.String $r2;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: org.gnucash.android.model.Commodity;

        r0.<org.gnucash.android.model.Transaction: org.gnucash.android.model.Commodity mCommodity> = $r1;

        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Commodity: java.lang.String getCurrencyCode()>();

        r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode> = $r2;

        return;
    }
    public void setCurrencyCode(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mCurrencyCode> = $r1;

        return;
    }
    public void setDescription(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.gnucash.android.model.Transaction: java.lang.String mDescription> = $r1;

        return;
    }
    public void setExported(boolean)
    {
        org.gnucash.android.model.Transaction r0;
        boolean $z0;

        r0 := @this: org.gnucash.android.model.Transaction;

        $z0 := @parameter0: boolean;

        r0.<org.gnucash.android.model.Transaction: boolean mIsExported> = $z0;

        return;
    }
    public void setNote(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes> = $r1;

        return;
    }
    public void setScheduledActionUID(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Transaction: java.lang.String mScheduledActionUID> = $r1;

        return;
    }
    public void setSplits(java.util.List)
    {
        org.gnucash.android.model.Transaction r0;
        java.util.List r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.gnucash.android.model.Split r4;
        java.lang.String $r5;

        r0 := @this: org.gnucash.android.model.Transaction;

        r1 := @parameter0: java.util.List;

        r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList> = r1;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.gnucash.android.model.Split) $r3;

        $r5 = virtualinvoke r0.<org.gnucash.android.model.Transaction: java.lang.String getUID()>();

        virtualinvoke r4.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r5);

        goto label1;

     label2:
        return;
    }
    public void setTemplate(boolean)
    {
        org.gnucash.android.model.Transaction r0;
        boolean $z0;

        r0 := @this: org.gnucash.android.model.Transaction;

        $z0 := @parameter0: boolean;

        r0.<org.gnucash.android.model.Transaction: boolean mIsTemplate> = $z0;

        return;
    }
    public void setTime(long)
    {
        org.gnucash.android.model.Transaction r0;
        long $l0;

        r0 := @this: org.gnucash.android.model.Transaction;

        $l0 := @parameter0: long;

        r0.<org.gnucash.android.model.Transaction: long mTimestamp> = $l0;

        return;
    }
    public void setTime(java.util.Date)
    {
        org.gnucash.android.model.Transaction r0;
        java.util.Date $r1;
        long $l0;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        r0.<org.gnucash.android.model.Transaction: long mTimestamp> = $l0;

        return;
    }
    public void setUID(java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        java.lang.String $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.gnucash.android.model.Split r5;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void setUID(java.lang.String)>($r1);

        $r2 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.gnucash.android.model.Split) $r4;

        virtualinvoke r5.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r1);

        goto label1;

     label2:
        return;
    }
    public org.w3c.dom.Element toOFX(org.w3c.dom.Document, java.lang.String)
    {
        org.gnucash.android.model.Transaction r0;
        org.w3c.dom.Document $r1;
        java.lang.String $r2, $r7, $r13;
        org.gnucash.android.model.Money $r3;
        boolean $z0;
        org.gnucash.android.model.TransactionType r4;
        org.w3c.dom.Element $r5, $r6, $r14, $r15, $r19;
        org.w3c.dom.Text $r8;
        long $l0;
        int $i1;
        java.util.List $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.gnucash.android.model.Split r12;
        org.gnucash.android.db.adapter.AccountsDbAdapter $r16;
        org.gnucash.android.model.AccountType $r17;
        org.gnucash.android.model.Account$OfxAccountType $r18;

        r0 := @this: org.gnucash.android.model.Transaction;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.gnucash.android.model.Transaction: org.gnucash.android.model.Money getBalance(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<org.gnucash.android.model.Money: boolean isNegative()>();

        if $z0 == 0 goto label5;

        r4 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

     label1:
        $r5 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("STMTTRN");

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("TRNTYPE");

        $r7 = virtualinvoke r4.<org.gnucash.android.model.TransactionType: java.lang.String toString()>();

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("DTPOSTED");

        $l0 = r0.<org.gnucash.android.model.Transaction: long mTimestamp>;

        $r7 = staticinvoke <org.gnucash.android.export.ofx.OfxHelper: java.lang.String getOfxFormattedTime(long)>($l0);

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("DTUSER");

        $l0 = r0.<org.gnucash.android.model.Transaction: long mTimestamp>;

        $r7 = staticinvoke <org.gnucash.android.export.ofx.OfxHelper: java.lang.String getOfxFormattedTime(long)>($l0);

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("TRNAMT");

        $r7 = virtualinvoke $r3.<org.gnucash.android.model.Money: java.lang.String toPlainString()>();

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("FITID");

        $r7 = virtualinvoke r0.<org.gnucash.android.model.Transaction: java.lang.String getUID()>();

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("NAME");

        $r7 = r0.<org.gnucash.android.model.Transaction: java.lang.String mDescription>;

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        $r7 = r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes>;

        if $r7 == null goto label2;

        $r7 = r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("MEMO");

        $r7 = r0.<org.gnucash.android.model.Transaction: java.lang.String mNotes>;

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

     label2:
        $r9 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 != 2 goto label6;

        $r7 = $r2;

        $r9 = r0.<org.gnucash.android.model.Transaction: java.util.List mSplitList>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.gnucash.android.model.Split) $r11;

        $r13 = virtualinvoke r12.<org.gnucash.android.model.Split: java.lang.String getAccountUID()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        $r7 = virtualinvoke r12.<org.gnucash.android.model.Split: java.lang.String getAccountUID()>();

     label4:
        $r6 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("BANKID");

        $r2 = <org.gnucash.android.export.ofx.OfxHelper: java.lang.String APP_ID>;

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r2);

        interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        $r14 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("ACCTID");

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r7);

        interfaceinvoke $r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        $r15 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("ACCTTYPE");

        $r16 = staticinvoke <org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.db.adapter.AccountsDbAdapter getInstance()>();

        $r17 = virtualinvoke $r16.<org.gnucash.android.db.adapter.AccountsDbAdapter: org.gnucash.android.model.AccountType getAccountType(java.lang.String)>($r7);

        $r18 = staticinvoke <org.gnucash.android.model.Account: org.gnucash.android.model.Account$OfxAccountType convertToOfxAccountType(org.gnucash.android.model.AccountType)>($r17);

        $r2 = virtualinvoke $r18.<org.gnucash.android.model.Account$OfxAccountType: java.lang.String toString()>();

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r2);

        interfaceinvoke $r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r8);

        $r19 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("BANKACCTTO");

        interfaceinvoke $r19.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        interfaceinvoke $r19.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        interfaceinvoke $r19.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        return $r5;

     label5:
        r4 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        goto label1;

     label6:
        return $r5;
    }
