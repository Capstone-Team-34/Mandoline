okio.Base64 extends java.lang.Object
private static final byte[] MAP
private static final byte[] URL_MAP
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <okio.Base64: byte[] MAP> = $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 45;

        $r0[63] = 95;

        <okio.Base64: byte[] URL_MAP> = $r0;

        return;
    }
    private void <init>()
    {
        okio.Base64 r0;

        r0 := @this: okio.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static byte[] decode(java.lang.String)
    {
        java.lang.String $r0;
        int i0, $i1, i4, i5, i6, i7, $i9;
        byte[] r1, r2;
        char $c2;
        long $l3;
        byte $b8;

        $r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label01:
        if i0 <= 0 goto label02;

        $i1 = i0 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c2 == 61 goto label06;

        if $c2 == 10 goto label06;

        if $c2 == 13 goto label06;

        if $c2 == 32 goto label06;

        if $c2 == 9 goto label06;

     label02:
        $l3 = (long) i0;

        $l3 = $l3 * 6L;

        $l3 = $l3 / 8L;

        $i1 = (int) $l3;

        r2 = newarray (byte)[$i1];

        i4 = 0;

        i5 = 0;

        i6 = 0;

        $i1 = 0;

     label03:
        if i6 >= i0 goto label15;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i6);

        if $c2 < 65 goto label07;

        if $c2 > 90 goto label07;

        i7 = $c2 + -65;

     label04:
        i5 = i5 << 6;

        $b8 = (byte) i7;

        i5 = i5 | $b8;

        i4 = i4 + 1;

        i7 = i4 % 4;

        if i7 != 0 goto label20;

        i7 = $i1 + 1;

        $i9 = i5 >> 16;

        $b8 = (byte) $i9;

        r2[$i1] = $b8;

        $i1 = i7 + 1;

        $i9 = i5 >> 8;

        $b8 = (byte) $i9;

        r2[i7] = $b8;

        i7 = $i1 + 1;

        $b8 = (byte) i5;

        r2[$i1] = $b8;

     label05:
        i6 = i6 + 1;

        $i1 = i7;

        goto label03;

     label06:
        i0 = i0 + -1;

        goto label01;

     label07:
        if $c2 < 97 goto label08;

        if $c2 > 122 goto label08;

        i7 = $c2 + -71;

        goto label04;

     label08:
        if $c2 < 48 goto label09;

        if $c2 > 57 goto label09;

        i7 = $c2 + 4;

        goto label04;

     label09:
        if $c2 == 43 goto label10;

        if $c2 != 45 goto label11;

     label10:
        i7 = 62;

        goto label04;

     label11:
        if $c2 == 47 goto label12;

        if $c2 != 95 goto label13;

     label12:
        i7 = 63;

        goto label04;

     label13:
        if $c2 == 10 goto label20;

        if $c2 == 13 goto label20;

        if $c2 == 32 goto label20;

        if $c2 != 9 goto label14;

        i7 = $i1;

        goto label05;

     label14:
        return null;

     label15:
        i0 = i4 % 4;

        if i0 != 1 goto label16;

        return null;

     label16:
        if i0 != 2 goto label18;

        i4 = i5 << 12;

        i0 = $i1 + 1;

        i4 = i4 >> 16;

        $b8 = (byte) i4;

        r2[$i1] = $b8;

     label17:
        $i1 = lengthof r2;

        if i0 == $i1 goto label21;

        r1 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, i0);

        return r1;

     label18:
        if i0 != 3 goto label19;

        i4 = i5 << 6;

        i0 = $i1 + 1;

        i5 = i4 >> 16;

        $b8 = (byte) i5;

        r2[$i1] = $b8;

        $i1 = i0 + 1;

        i4 = i4 >> 8;

        $b8 = (byte) i4;

        r2[i0] = $b8;

     label19:
        i0 = $i1;

        goto label17;

     label20:
        i7 = $i1;

        goto label05;

     label21:
        return r2;
    }
    public static java.lang.String encode(byte[])
    {
        byte[] $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r2 = <okio.Base64: byte[] MAP>;

        $r1 = staticinvoke <okio.Base64: java.lang.String encode(byte[],byte[])>($r0, $r2);

        return $r1;
    }
    private static java.lang.String encode(byte[], byte[])
    {
        byte[] $r0, $r1, r3;
        java.io.UnsupportedEncodingException r2;
        int i0, $i1, i2, i3, $i5, $i6;
        byte $b4;
        java.lang.String $r4;
        java.lang.AssertionError $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        i0 = lengthof $r0;

        i0 = i0 + 2;

        i0 = i0 * 4;

        i0 = i0 / 3;

        r3 = newarray (byte)[i0];

        i0 = lengthof $r0;

        $i1 = lengthof $r0;

        $i1 = $i1 % 3;

        i0 = i0 - $i1;

        $i1 = 0;

        i2 = 0;

     label1:
        if $i1 >= i0 goto label2;

        i3 = i2 + 1;

        $b4 = $r0[$i1];

        $i5 = $b4 & 255;

        $i5 = $i5 >> 2;

        $b4 = $r1[$i5];

        r3[i2] = $b4;

        i2 = i3 + 1;

        $b4 = $r0[$i1];

        $i5 = $b4 & 3;

        $i5 = $i5 << 4;

        $i6 = $i1 + 1;

        $b4 = $r0[$i6];

        $i6 = $b4 & 255;

        $i6 = $i6 >> 4;

        $i5 = $i5 | $i6;

        $b4 = $r1[$i5];

        r3[i3] = $b4;

        i3 = i2 + 1;

        $i5 = $i1 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 15;

        $i5 = $i5 << 2;

        $i6 = $i1 + 2;

        $b4 = $r0[$i6];

        $i6 = $b4 & 255;

        $i6 = $i6 >> 6;

        $i5 = $i5 | $i6;

        $b4 = $r1[$i5];

        r3[i2] = $b4;

        i2 = i3 + 1;

        $i5 = $i1 + 2;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        $b4 = $r1[$i5];

        r3[i3] = $b4;

        $i1 = $i1 + 3;

        goto label1;

     label2:
        $i1 = lengthof $r0;

        $i1 = $i1 % 3;

        lookupswitch($i1)
        {
            case 1: goto label7;
            case 2: goto label8;
            default: goto label3;
        };

     label3:
        i0 = i2;

     label4:
        $r4 = new java.lang.String;

     label5:
        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, 0, i0, "US-ASCII");

     label6:
        return $r4;

     label7:
        $i1 = i2 + 1;

        $b4 = $r0[i0];

        i3 = $b4 & 255;

        i3 = i3 >> 2;

        $b4 = $r1[i3];

        r3[i2] = $b4;

        i2 = $i1 + 1;

        $b4 = $r0[i0];

        i0 = $b4 & 3;

        i0 = i0 << 4;

        $b4 = $r1[i0];

        r3[$i1] = $b4;

        i0 = i2 + 1;

        r3[i2] = 61;

        r3[i0] = 61;

        i0 = i0 + 1;

        goto label4;

     label8:
        i3 = i2 + 1;

        $b4 = $r0[i0];

        $i1 = $b4 & 255;

        $i1 = $i1 >> 2;

        $b4 = $r1[$i1];

        r3[i2] = $b4;

        $i1 = i3 + 1;

        $b4 = $r0[i0];

        i2 = $b4 & 3;

        i2 = i2 << 4;

        $i5 = i0 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 255;

        $i5 = $i5 >> 4;

        i2 = i2 | $i5;

        $b4 = $r1[i2];

        r3[i3] = $b4;

        i3 = $i1 + 1;

        i0 = i0 + 1;

        $b4 = $r0[i0];

        i0 = $b4 & 15;

        i0 = i0 << 2;

        $b4 = $r1[i0];

        r3[$i1] = $b4;

        i2 = i3 + 1;

        r3[i3] = 61;

        goto label3;

     label9:
        r2 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }
    public static java.lang.String encodeUrl(byte[])
    {
        byte[] $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r2 = <okio.Base64: byte[] URL_MAP>;

        $r1 = staticinvoke <okio.Base64: java.lang.String encode(byte[],byte[])>($r0, $r2);

        return $r1;
    }
