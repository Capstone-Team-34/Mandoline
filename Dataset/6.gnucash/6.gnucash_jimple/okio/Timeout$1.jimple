okio.Timeout$1 extends okio.Timeout
    void <init>()
    {
        okio.Timeout$1 r0;

        r0 := @this: okio.Timeout$1;

        specialinvoke r0.<okio.Timeout: void <init>()>();

        return;
    }
    public okio.Timeout deadlineNanoTime(long)
    {
        okio.Timeout$1 r0;
        long $l0;

        r0 := @this: okio.Timeout$1;

        $l0 := @parameter0: long;

        return r0;
    }
    public void throwIfReached() throws java.io.IOException
    {
        okio.Timeout$1 r0;

        r0 := @this: okio.Timeout$1;

        return;
    }
    public okio.Timeout timeout(long, java.util.concurrent.TimeUnit)
    {
        okio.Timeout$1 r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;

        r0 := @this: okio.Timeout$1;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        return r0;
    }
