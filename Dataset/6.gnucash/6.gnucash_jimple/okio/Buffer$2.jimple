okio.Buffer$2 extends java.io.InputStream
final okio.Buffer this$0
    void <init>(okio.Buffer)
    {
        okio.Buffer$2 r0;
        okio.Buffer $r1;

        r0 := @this: okio.Buffer$2;

        $r1 := @parameter0: okio.Buffer;

        r0.<okio.Buffer$2: okio.Buffer this$0> = $r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        return;
    }
    public int available()
    {
        okio.Buffer$2 r0;
        long $l0;
        okio.Buffer $r1;
        int $i1;

        r0 := @this: okio.Buffer$2;

        $r1 = r0.<okio.Buffer$2: okio.Buffer this$0>;

        $l0 = $r1.<okio.Buffer: long size>;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, 2147483647L);

        $i1 = (int) $l0;

        return $i1;
    }
    public void close()
    {
        okio.Buffer$2 r0;

        r0 := @this: okio.Buffer$2;

        return;
    }
    public int read()
    {
        okio.Buffer$2 r0;
        byte $b0;
        okio.Buffer $r1;
        long $l1;
        int $i2;

        r0 := @this: okio.Buffer$2;

        $r1 = r0.<okio.Buffer$2: okio.Buffer this$0>;

        $l1 = $r1.<okio.Buffer: long size>;

        $b0 = $l1 cmp 0L;

        if $b0 <= 0 goto label1;

        $r1 = r0.<okio.Buffer$2: okio.Buffer this$0>;

        $b0 = virtualinvoke $r1.<okio.Buffer: byte readByte()>();

        $i2 = $b0 & 255;

        return $i2;

     label1:
        return -1;
    }
    public int read(byte[], int, int)
    {
        okio.Buffer$2 r0;
        byte[] $r1;
        int $i0, $i1;
        okio.Buffer $r2;

        r0 := @this: okio.Buffer$2;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<okio.Buffer$2: okio.Buffer this$0>;

        $i0 = virtualinvoke $r2.<okio.Buffer: int read(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }
    public java.lang.String toString()
    {
        okio.Buffer$2 r0;
        java.lang.StringBuilder $r1;
        okio.Buffer $r2;
        java.lang.String $r3;

        r0 := @this: okio.Buffer$2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<okio.Buffer$2: okio.Buffer this$0>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".inputStream()");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
