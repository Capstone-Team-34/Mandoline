io.fabric.sdk.android.InitializationTask extends io.fabric.sdk.android.services.concurrency.PriorityAsyncTask
private static final java.lang.String TIMING_METRIC_TAG
final io.fabric.sdk.android.Kit kit
    public void <init>(io.fabric.sdk.android.Kit)
    {
        io.fabric.sdk.android.InitializationTask r0;
        io.fabric.sdk.android.Kit r1;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        r1 := @parameter0: io.fabric.sdk.android.Kit;

        specialinvoke r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: void <init>()>();

        r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit> = r1;

        return;
    }
    private io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)
    {
        io.fabric.sdk.android.InitializationTask r0;
        java.lang.String $r1, $r5;
        io.fabric.sdk.android.services.common.TimingMetric r2;
        java.lang.StringBuilder $r3;
        io.fabric.sdk.android.Kit $r4;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.String;

        r2 = new io.fabric.sdk.android.services.common.TimingMetric;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r5 = virtualinvoke $r4.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<io.fabric.sdk.android.services.common.TimingMetric: void <init>(java.lang.String,java.lang.String)>($r1, "KitInitialization");

        virtualinvoke r2.<io.fabric.sdk.android.services.common.TimingMetric: void startMeasuring()>();

        return r2;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        io.fabric.sdk.android.InitializationTask r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        java.lang.Void[] $r3;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.InitializationTask: java.lang.Object doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }
    protected transient java.lang.Object doInBackground(java.lang.Void[])
    {
        io.fabric.sdk.android.InitializationTask r0;
        java.lang.Void[] $r1;
        io.fabric.sdk.android.services.common.TimingMetric $r2;
        java.lang.Object r3;
        boolean $z0;
        io.fabric.sdk.android.Kit $r4;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.Void[];

        $r2 = specialinvoke r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)>("doInBackground");

        r3 = null;

        $z0 = virtualinvoke r0.<io.fabric.sdk.android.InitializationTask: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        r3 = virtualinvoke $r4.<io.fabric.sdk.android.Kit: java.lang.Object doInBackground()>();

     label1:
        virtualinvoke $r2.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        return r3;
    }
    public io.fabric.sdk.android.services.concurrency.Priority getPriority()
    {
        io.fabric.sdk.android.InitializationTask r0;
        io.fabric.sdk.android.services.concurrency.Priority r1;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        r1 = <io.fabric.sdk.android.services.concurrency.Priority: io.fabric.sdk.android.services.concurrency.Priority HIGH>;

        return r1;
    }
    protected void onCancelled(java.lang.Object)
    {
        io.fabric.sdk.android.InitializationTask r0;
        java.lang.Object r1;
        io.fabric.sdk.android.InitializationException r2;
        io.fabric.sdk.android.Kit $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        io.fabric.sdk.android.InitializationCallback $r6;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        virtualinvoke $r3.<io.fabric.sdk.android.Kit: void onCancelled(java.lang.Object)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r5 = virtualinvoke $r3.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Initialization was cancelled");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = new io.fabric.sdk.android.InitializationException;

        specialinvoke r2.<io.fabric.sdk.android.InitializationException: void <init>(java.lang.String)>($r5);

        $r3 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r6 = $r3.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        interfaceinvoke $r6.<io.fabric.sdk.android.InitializationCallback: void failure(java.lang.Exception)>(r2);

        return;
    }
    protected void onPostExecute(java.lang.Object)
    {
        io.fabric.sdk.android.InitializationTask r0;
        java.lang.Object r1;
        io.fabric.sdk.android.Kit $r2;
        io.fabric.sdk.android.InitializationCallback $r3;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        virtualinvoke $r2.<io.fabric.sdk.android.Kit: void onPostExecute(java.lang.Object)>(r1);

        $r2 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r3 = $r2.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        interfaceinvoke $r3.<io.fabric.sdk.android.InitializationCallback: void success(java.lang.Object)>(r1);

        return;
    }
    protected void onPreExecute()
    {
        io.fabric.sdk.android.InitializationTask r0;
        io.fabric.sdk.android.services.common.TimingMetric $r1;
        io.fabric.sdk.android.Kit $r2;
        boolean $z0;
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException r3;
        java.lang.Throwable $r4;
        java.lang.Exception r5;
        io.fabric.sdk.android.Logger $r6;

        r0 := @this: io.fabric.sdk.android.InitializationTask;

        specialinvoke r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: void onPreExecute()>();

        $r1 = specialinvoke r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)>("onPreExecute");

     label01:
        $r2 = r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

     label02:
        $z0 = virtualinvoke $r2.<io.fabric.sdk.android.Kit: boolean onPreExecute()>();

     label03:
        virtualinvoke $r1.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        if $z0 != 0 goto label10;

        virtualinvoke r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

        return;

     label04:
        r3 := @caughtexception;

     label05:
        throw r3;

     label06:
        $r4 := @caughtexception;

        virtualinvoke $r1.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        virtualinvoke r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

        throw $r4;

     label07:
        r5 := @caughtexception;

     label08:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failure onPreExecute()", r5);

     label09:
        virtualinvoke $r1.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        virtualinvoke r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

     label10:
        return;

        catch io.fabric.sdk.android.services.concurrency.UnmetDependencyException from label02 to label03 with label04;
        catch java.lang.Exception from label01 to label03 with label07;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }
