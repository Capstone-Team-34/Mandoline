io.fabric.sdk.android.services.settings.Settings extends java.lang.Object
public static final java.lang.String SETTINGS_CACHE_FILENAME
private static final java.lang.String SETTINGS_URL_FORMAT
private boolean initialized
private io.fabric.sdk.android.services.settings.SettingsController settingsController
private final java.util.concurrent.atomic.AtomicReference settingsData
private final java.util.concurrent.CountDownLatch settingsDataLatch
    private void <init>()
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.atomic.AtomicReference settingsData> = $r1;

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.CountDownLatch settingsDataLatch> = $r2;

        r0.<io.fabric.sdk.android.services.settings.Settings: boolean initialized> = 0;

        return;
    }
    void <init>(io.fabric.sdk.android.services.settings.Settings$1)
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.Settings$1 $r1;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.Settings$1;

        specialinvoke r0.<io.fabric.sdk.android.services.settings.Settings: void <init>()>();

        return;
    }
    public static io.fabric.sdk.android.services.settings.Settings getInstance()
    {
        io.fabric.sdk.android.services.settings.Settings $r0;

        $r0 = staticinvoke <io.fabric.sdk.android.services.settings.Settings$LazyHolder: io.fabric.sdk.android.services.settings.Settings access$100()>();

        return $r0;
    }
    private void setSettingsData(io.fabric.sdk.android.services.settings.SettingsData)
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.util.concurrent.CountDownLatch $r3;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsData;

        $r2 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.atomic.AtomicReference settingsData>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r1);

        $r3 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.CountDownLatch settingsDataLatch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }
    public io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        java.lang.InterruptedException r1;
        java.util.concurrent.CountDownLatch $r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        io.fabric.sdk.android.services.settings.SettingsData $r5;
        io.fabric.sdk.android.Logger $r6;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r2 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.CountDownLatch settingsDataLatch>;

     label1:
        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        $r3 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.atomic.AtomicReference settingsData>;

     label3:
        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

     label4:
        $r5 = (io.fabric.sdk.android.services.settings.SettingsData) $r4;

        return $r5;

     label5:
        r1 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String)>("Fabric", "Interrupted while waiting for settings data.");

        return null;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }
    public void clearSettings()
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r1 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.atomic.AtomicReference settingsData>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        return;
    }
    public io.fabric.sdk.android.services.settings.Settings initialize(io.fabric.sdk.android.Kit, io.fabric.sdk.android.services.common.IdManager, io.fabric.sdk.android.services.network.HttpRequestFactory, java.lang.String, java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.settings.Settings r0, r12;
        io.fabric.sdk.android.Kit $r1;
        io.fabric.sdk.android.services.common.IdManager $r2;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r3;
        java.lang.String $r4, $r5, $r6, $r15, $r17, $r18, $r19, $r22;
        io.fabric.sdk.android.services.settings.SettingsRequest r7;
        io.fabric.sdk.android.services.common.SystemCurrentTimeProvider r8;
        io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform r9;
        io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo r10;
        io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall r11;
        boolean $z0;
        io.fabric.sdk.android.services.settings.SettingsController $r13;
        android.content.Context $r14;
        io.fabric.sdk.android.services.common.ApiKey $r16;
        java.util.Locale $r20;
        java.lang.Object[] $r21;
        java.lang.String[] $r23;
        io.fabric.sdk.android.services.common.DeliveryMechanism $r24;
        int $i0;
        io.fabric.sdk.android.services.settings.DefaultSettingsController $r25;
        java.lang.Throwable $r26;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r2 := @parameter1: io.fabric.sdk.android.services.common.IdManager;

        $r3 := @parameter2: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        entermonitor r0;

     label1:
        $z0 = r0.<io.fabric.sdk.android.services.settings.Settings: boolean initialized>;

     label2:
        if $z0 == 0 goto label4;

        r12 = r0;

     label3:
        exitmonitor r0;

        return r12;

     label4:
        $r13 = r0.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsController settingsController>;

        if $r13 != null goto label5;

        $r14 = virtualinvoke $r1.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        $r15 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppIdentifier()>();

        $r16 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r16.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r17 = virtualinvoke $r16.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r14);

        $r18 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        r8 = new io.fabric.sdk.android.services.common.SystemCurrentTimeProvider;

        specialinvoke r8.<io.fabric.sdk.android.services.common.SystemCurrentTimeProvider: void <init>()>();

        r9 = new io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform;

        specialinvoke r9.<io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform: void <init>()>();

        r10 = new io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo;

        specialinvoke r10.<io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: void <init>(io.fabric.sdk.android.Kit)>($r1);

        $r19 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getAppIconHashOrNull(android.content.Context)>($r14);

        $r20 = <java.util.Locale: java.util.Locale US>;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r15;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r20, "https://settings.crashlytics.com/spi/v2/platforms/android/apps/%s/settings", $r21);

        r11 = new io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall;

        specialinvoke r11.<io.fabric.sdk.android.services.settings.DefaultSettingsSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory)>($r1, $r6, $r22, $r3);

        $r6 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>($r17, $r15);

        $r23 = newarray (java.lang.String)[1];

        $r15 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String resolveBuildId(android.content.Context)>($r14);

        $r23[0] = $r15;

        $r15 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String createInstanceIdFrom(java.lang.String[])>($r23);

        $r24 = staticinvoke <io.fabric.sdk.android.services.common.DeliveryMechanism: io.fabric.sdk.android.services.common.DeliveryMechanism determineFrom(java.lang.String)>($r18);

        $i0 = virtualinvoke $r24.<io.fabric.sdk.android.services.common.DeliveryMechanism: int getId()>();

        r7 = new io.fabric.sdk.android.services.settings.SettingsRequest;

        specialinvoke r7.<io.fabric.sdk.android.services.settings.SettingsRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r17, $r6, $r15, $r5, $r4, $i0, $r19);

        $r25 = new io.fabric.sdk.android.services.settings.DefaultSettingsController;

        specialinvoke $r25.<io.fabric.sdk.android.services.settings.DefaultSettingsController: void <init>(io.fabric.sdk.android.Kit,io.fabric.sdk.android.services.settings.SettingsRequest,io.fabric.sdk.android.services.common.CurrentTimeProvider,io.fabric.sdk.android.services.settings.SettingsJsonTransform,io.fabric.sdk.android.services.settings.CachedSettingsIo,io.fabric.sdk.android.services.settings.SettingsSpiCall)>($r1, r7, r8, r9, r10, r11);

        r0.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsController settingsController> = $r25;

     label5:
        r0.<io.fabric.sdk.android.services.settings.Settings: boolean initialized> = 1;

     label6:
        r12 = r0;

        goto label3;

     label7:
        $r26 := @caughtexception;

        exitmonitor r0;

        throw $r26;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }
    public boolean loadSettingsData()
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        io.fabric.sdk.android.services.settings.SettingsController $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        entermonitor r0;

     label1:
        $r2 = r0.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsController settingsController>;

        $r1 = interfaceinvoke $r2.<io.fabric.sdk.android.services.settings.SettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData()>();

        specialinvoke r0.<io.fabric.sdk.android.services.settings.Settings: void setSettingsData(io.fabric.sdk.android.services.settings.SettingsData)>($r1);

     label2:
        if $r1 == null goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public boolean loadSettingsSkippingCache()
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.SettingsController $r1;
        io.fabric.sdk.android.services.settings.SettingsCacheBehavior $r2;
        io.fabric.sdk.android.services.settings.SettingsData $r3;
        io.fabric.sdk.android.Logger $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        entermonitor r0;

     label1:
        $r1 = r0.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsController settingsController>;

        $r2 = <io.fabric.sdk.android.services.settings.SettingsCacheBehavior: io.fabric.sdk.android.services.settings.SettingsCacheBehavior SKIP_CACHE_LOOKUP>;

        $r3 = interfaceinvoke $r1.<io.fabric.sdk.android.services.settings.SettingsController: io.fabric.sdk.android.services.settings.SettingsData loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior)>($r2);

        specialinvoke r0.<io.fabric.sdk.android.services.settings.Settings: void setSettingsData(io.fabric.sdk.android.services.settings.SettingsData)>($r3);

        if $r3 != null goto label2;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to force reload of settings from Crashlytics.", null);

     label2:
        if $r3 == null goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    public void setSettingsController(io.fabric.sdk.android.services.settings.SettingsController)
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.SettingsController $r1;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsController;

        r0.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsController settingsController> = $r1;

        return;
    }
    public java.lang.Object withSettings(io.fabric.sdk.android.services.settings.Settings$SettingsAccess, java.lang.Object)
    {
        io.fabric.sdk.android.services.settings.Settings r0;
        io.fabric.sdk.android.services.settings.Settings$SettingsAccess r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object r3, $r4;
        io.fabric.sdk.android.services.settings.SettingsData r5;

        r0 := @this: io.fabric.sdk.android.services.settings.Settings;

        r1 := @parameter0: io.fabric.sdk.android.services.settings.Settings$SettingsAccess;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<io.fabric.sdk.android.services.settings.Settings: java.util.concurrent.atomic.AtomicReference settingsData>;

        $r4 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r5 = (io.fabric.sdk.android.services.settings.SettingsData) $r4;

        if r5 != null goto label1;

        return r3;

     label1:
        r3 = interfaceinvoke r1.<io.fabric.sdk.android.services.settings.Settings$SettingsAccess: java.lang.Object usingSettings(io.fabric.sdk.android.services.settings.SettingsData)>(r5);

        return r3;
    }
