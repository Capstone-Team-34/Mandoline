org.openhab.habdroid.util.MySmartImageView extends com.loopj.android.image.SmartImageView
public static final java.lang.String TAG
private org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener
private java.util.Timer imageRefreshTimer
private int maxHeight
private int maxWidth
private java.lang.String myImageUrl
private java.lang.String password
private boolean refreshDisabled
private java.lang.String username
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/util/MySmartImageView;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.util.MySmartImageView: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>(android.content.Context)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        android.content.Context $r1;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r2;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.loopj.android.image.SmartImageView: void <init>(android.content.Context)>($r1);

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth> = -1;

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight> = -1;

        $r2 = new org.openhab.habdroid.util.MySmartImageView$OnCompleteListener;

        specialinvoke $r2.<org.openhab.habdroid.util.MySmartImageView$OnCompleteListener: void <init>(org.openhab.habdroid.util.MySmartImageView)>(r0);

        r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener> = $r2;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r3;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.loopj.android.image.SmartImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth> = -1;

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight> = -1;

        $r3 = new org.openhab.habdroid.util.MySmartImageView$OnCompleteListener;

        specialinvoke $r3.<org.openhab.habdroid.util.MySmartImageView$OnCompleteListener: void <init>(org.openhab.habdroid.util.MySmartImageView)>(r0);

        r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener> = $r3;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r3;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.loopj.android.image.SmartImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth> = -1;

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight> = -1;

        $r3 = new org.openhab.habdroid.util.MySmartImageView$OnCompleteListener;

        specialinvoke $r3.<org.openhab.habdroid.util.MySmartImageView$OnCompleteListener: void <init>(org.openhab.habdroid.util.MySmartImageView)>(r0);

        r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener> = $r3;

        return;
    }
    static boolean access$000(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        boolean z0;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        z0 = $r0.<org.openhab.habdroid.util.MySmartImageView: boolean refreshDisabled>;

        return z0;
    }
    static boolean access$002(org.openhab.habdroid.util.MySmartImageView, boolean)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        boolean $z0;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        $z0 := @parameter1: boolean;

        $r0.<org.openhab.habdroid.util.MySmartImageView: boolean refreshDisabled> = $z0;

        return $z0;
    }
    static java.lang.String access$100(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        r1 = $r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl>;

        return r1;
    }
    static java.lang.String access$200(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        r1 = $r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String username>;

        return r1;
    }
    static java.lang.String access$300(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        r1 = $r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String password>;

        return r1;
    }
    static org.openhab.habdroid.util.MySmartImageView$OnCompleteListener access$400(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView $r0;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener r1;

        $r0 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        r1 = $r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener>;

        return r1;
    }
    private void setImageUrl(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.Integer, java.lang.Integer)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3, $r7;
        boolean $z0, $z1;
        java.lang.Integer $r4, $r5;
        org.openhab.habdroid.util.MyWebImage r6;
        android.graphics.Bitmap $r8;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r9;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: java.lang.Integer;

        $r5 := @parameter5: java.lang.Integer;

        $r7 = r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r1);

        if $z1 == 0 goto label1;

        $r7 = r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String username>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r2);

        if $z1 == 0 goto label1;

        $r7 = r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String password>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r3);

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl> = $r1;

        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String username> = $r2;

        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String password> = $r3;

        r0.<org.openhab.habdroid.util.MySmartImageView: boolean refreshDisabled> = 1;

        r6 = new org.openhab.habdroid.util.MyWebImage;

        specialinvoke r6.<org.openhab.habdroid.util.MyWebImage: void <init>(java.lang.String,boolean,java.lang.String,java.lang.String)>($r1, $z0, $r2, $r3);

        $r8 = virtualinvoke r6.<org.openhab.habdroid.util.MyWebImage: android.graphics.Bitmap getCachedBitmap()>();

        if $r8 == null goto label2;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageBitmap(android.graphics.Bitmap)>($r8);

        return;

     label2:
        $r9 = r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener>;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImage(com.loopj.android.image.SmartImage,java.lang.Integer,java.lang.Integer,com.loopj.android.image.SmartImageTask$OnCompleteListener)>(r6, $r4, $r5, $r9);

        return;
    }
    public void cancelRefresh()
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        java.util.Timer $r4;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 = <org.openhab.habdroid.util.MySmartImageView: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancel image Refresh for ");

        $r3 = r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3);

        $r4 = r0.<org.openhab.habdroid.util.MySmartImageView: java.util.Timer imageRefreshTimer>;

        if $r4 == null goto label1;

        $r4 = r0.<org.openhab.habdroid.util.MySmartImageView: java.util.Timer imageRefreshTimer>;

        virtualinvoke $r4.<java.util.Timer: void cancel()>();

        r0.<org.openhab.habdroid.util.MySmartImageView: boolean refreshDisabled> = 0;

     label1:
        return;
    }
    public void setImageBitmap(android.graphics.Bitmap)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        android.graphics.Bitmap $r1;
        float f0, $f1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth>;

        if $i0 <= 0 goto label1;

        $i0 = r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight>;

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 / $i1;

        f0 = (float) $i0;

        $i0 = r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth>;

        $f1 = (float) $i0;

        f0 = $f1 / f0;

        $i0 = (int) f0;

        $i1 = r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight>;

        if $i0 <= $i1 goto label1;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight>;

        $r2.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

     label1:
        specialinvoke r0.<com.loopj.android.image.SmartImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

        return;
    }
    public void setImageUrl(java.lang.String, java.lang.String, java.lang.String)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r2, $r3, 1);

        return;
    }
    public void setImageUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Integer $r4;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.Integer;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)>($r1, $r2, $r3, 1, $r4);

        return;
    }
    public void setImageUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.Integer;

        $r5 := @parameter4: java.lang.Integer;

        specialinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,java.lang.Integer)>($r1, $r2, $r3, 1, $r4, $r5);

        return;
    }
    public void setImageUrl(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)>($r1, $r2, $r3, $z0, null);

        return;
    }
    public void setImageUrl(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.Integer)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: java.lang.Integer;

        specialinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,java.lang.Integer)>($r1, $r2, $r3, $z0, $r4, $r4);

        return;
    }
    public void setImageWithData(com.loopj.android.image.SmartImage)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        com.loopj.android.image.SmartImage $r1;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r2;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $r1 := @parameter0: com.loopj.android.image.SmartImage;

        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl> = null;

        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String username> = null;

        r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String password> = null;

        r0.<org.openhab.habdroid.util.MySmartImageView: boolean refreshDisabled> = 1;

        $r2 = r0.<org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener imageCompletionListener>;

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void setImage(com.loopj.android.image.SmartImage,com.loopj.android.image.SmartImageTask$OnCompleteListener)>($r1, $r2);

        return;
    }
    public void setMaxSize(int, int)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        int $i0, $i1;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxWidth> = $i0;

        r0.<org.openhab.habdroid.util.MySmartImageView: int maxHeight> = $i1;

        return;
    }
    public void setRefreshRate(int)
    {
        org.openhab.habdroid.util.MySmartImageView r0;
        int $i0;
        long $l1, $l2;
        org.openhab.habdroid.util.MySmartImageView$RefreshHandler r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        java.util.Timer $r5;
        org.openhab.habdroid.util.MySmartImageView$1 $r6;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView;

        $i0 := @parameter0: int;

        $r2 = <org.openhab.habdroid.util.MySmartImageView: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting image refresh rate to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec for ");

        $r4 = r0.<org.openhab.habdroid.util.MySmartImageView: java.lang.String myImageUrl>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<org.openhab.habdroid.util.MySmartImageView: void cancelRefresh()>();

        $r5 = new java.util.Timer;

        specialinvoke $r5.<java.util.Timer: void <init>()>();

        r0.<org.openhab.habdroid.util.MySmartImageView: java.util.Timer imageRefreshTimer> = $r5;

        r1 = new org.openhab.habdroid.util.MySmartImageView$RefreshHandler;

        specialinvoke r1.<org.openhab.habdroid.util.MySmartImageView$RefreshHandler: void <init>(org.openhab.habdroid.util.MySmartImageView)>(r0);

        $r5 = r0.<org.openhab.habdroid.util.MySmartImageView: java.util.Timer imageRefreshTimer>;

        $r6 = new org.openhab.habdroid.util.MySmartImageView$1;

        specialinvoke $r6.<org.openhab.habdroid.util.MySmartImageView$1: void <init>(org.openhab.habdroid.util.MySmartImageView,android.os.Handler)>(r0, r1);

        $l2 = (long) $i0;

        $l1 = (long) $i0;

        virtualinvoke $r5.<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>($r6, $l2, $l1);

        return;
    }
