org.openhab.habdroid.util.MyWebImage$1 extends java.lang.Object implements org.openhab.habdroid.util.MyHttpClient$ResponseHandler
final org.openhab.habdroid.util.MyWebImage this$0
final java.lang.String val$iconFormat
final java.util.Map val$result
final java.lang.String val$url
    void <init>(org.openhab.habdroid.util.MyWebImage, java.lang.String, java.util.Map, java.lang.String)
    {
        org.openhab.habdroid.util.MyWebImage$1 r0;
        org.openhab.habdroid.util.MyWebImage $r1;
        java.lang.String $r2, $r4;
        java.util.Map $r3;

        r0 := @this: org.openhab.habdroid.util.MyWebImage$1;

        $r1 := @parameter0: org.openhab.habdroid.util.MyWebImage;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r4 := @parameter3: java.lang.String;

        r0.<org.openhab.habdroid.util.MyWebImage$1: org.openhab.habdroid.util.MyWebImage this$0> = $r1;

        r0.<org.openhab.habdroid.util.MyWebImage$1: java.lang.String val$url> = $r2;

        r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result> = $r3;

        r0.<org.openhab.habdroid.util.MyWebImage$1: java.lang.String val$iconFormat> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onFailure(okhttp3.Call, int, okhttp3.Headers, byte[], java.lang.Throwable)
    {
        org.openhab.habdroid.util.MyWebImage$1 r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        java.lang.Throwable $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.util.Map $r7, $r8;

        r0 := @this: org.openhab.habdroid.util.MyWebImage$1;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: java.lang.Throwable;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get ");

        $r6 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.lang.String val$url>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with code ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MyWebImage", $r6);

        $r7 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        entermonitor $r7;

     label1:
        $r8 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r4);

        $r8 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        virtualinvoke $r8.<java.lang.Object: void notify()>();

        exitmonitor $r7;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r7;

     label4:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void onSuccess(okhttp3.Call, int, okhttp3.Headers, byte[])
    {
        org.openhab.habdroid.util.MyWebImage$1 r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        java.io.ByteArrayInputStream r4;
        java.util.Map $r5, $r8;
        java.lang.String $r6;
        android.graphics.Bitmap $r7;
        org.openhab.habdroid.util.MyWebImage $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.openhab.habdroid.util.MyWebImage$1;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        r4 = new java.io.ByteArrayInputStream;

        specialinvoke r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r5 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        entermonitor $r5;

     label1:
        $r8 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        $r9 = r0.<org.openhab.habdroid.util.MyWebImage$1: org.openhab.habdroid.util.MyWebImage this$0>;

        $r6 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.lang.String val$iconFormat>;

        $r7 = staticinvoke <org.openhab.habdroid.util.MyWebImage: android.graphics.Bitmap access$000(org.openhab.habdroid.util.MyWebImage,java.lang.String,java.io.InputStream)>($r9, $r6, r4);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bitmap", $r7);

        $r8 = r0.<org.openhab.habdroid.util.MyWebImage$1: java.util.Map val$result>;

        virtualinvoke $r8.<java.lang.Object: void notify()>();

        exitmonitor $r5;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
