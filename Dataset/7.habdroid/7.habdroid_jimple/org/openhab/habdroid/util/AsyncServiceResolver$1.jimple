org.openhab.habdroid.util.AsyncServiceResolver$1 extends java.lang.Object implements java.lang.Runnable
final org.openhab.habdroid.util.AsyncServiceResolver this$0
    void <init>(org.openhab.habdroid.util.AsyncServiceResolver)
    {
        org.openhab.habdroid.util.AsyncServiceResolver$1 r0;
        org.openhab.habdroid.util.AsyncServiceResolver $r1;

        r0 := @this: org.openhab.habdroid.util.AsyncServiceResolver$1;

        $r1 := @parameter0: org.openhab.habdroid.util.AsyncServiceResolver;

        r0.<org.openhab.habdroid.util.AsyncServiceResolver$1: org.openhab.habdroid.util.AsyncServiceResolver this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        org.openhab.habdroid.util.AsyncServiceResolver$1 r0;
        org.openhab.habdroid.util.AsyncServiceResolverListener $r1;
        org.openhab.habdroid.util.AsyncServiceResolver $r2;

        r0 := @this: org.openhab.habdroid.util.AsyncServiceResolver$1;

        $r2 = r0.<org.openhab.habdroid.util.AsyncServiceResolver$1: org.openhab.habdroid.util.AsyncServiceResolver this$0>;

        $r1 = staticinvoke <org.openhab.habdroid.util.AsyncServiceResolver: org.openhab.habdroid.util.AsyncServiceResolverListener access$000(org.openhab.habdroid.util.AsyncServiceResolver)>($r2);

        interfaceinvoke $r1.<org.openhab.habdroid.util.AsyncServiceResolverListener: void onServiceResolveFailed()>();

        return;
    }
