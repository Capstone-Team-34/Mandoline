org.openhab.habdroid.util.MjpegStreamer extends java.lang.Object
private static final java.lang.String TAG
private android.content.Context mCtx
private org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask mDownloadImageTask
private android.os.Handler mHandler
private int mId
private org.openhab.habdroid.util.MjpegInputStream mInputStream
private java.lang.String mPassword
private boolean mRunning
private java.lang.String mSourceUrl
private android.widget.ImageView mTargetImageView
private java.lang.String mUsername
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/util/MjpegStreamer;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.util.MjpegStreamer: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, android.content.Context)
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        java.lang.String $r1, $r2, $r3;
        android.content.Context $r4;
        org.openhab.habdroid.util.MjpegStreamer$1 $r5;
        android.os.Handler $r6;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openhab.habdroid.util.MjpegStreamer: boolean mRunning> = 0;

        r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mSourceUrl> = $r1;

        r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mUsername> = $r2;

        r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mPassword> = $r3;

        r0.<org.openhab.habdroid.util.MjpegStreamer: android.content.Context mCtx> = $r4;

        $r6 = new android.os.Handler;

        $r5 = new org.openhab.habdroid.util.MjpegStreamer$1;

        specialinvoke $r5.<org.openhab.habdroid.util.MjpegStreamer$1: void <init>(org.openhab.habdroid.util.MjpegStreamer)>(r0);

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Handler$Callback)>($r5);

        r0.<org.openhab.habdroid.util.MjpegStreamer: android.os.Handler mHandler> = $r6;

        return;
    }
    static android.widget.ImageView access$000(org.openhab.habdroid.util.MjpegStreamer)
    {
        org.openhab.habdroid.util.MjpegStreamer $r0;
        android.widget.ImageView r1;

        $r0 := @parameter0: org.openhab.habdroid.util.MjpegStreamer;

        r1 = $r0.<org.openhab.habdroid.util.MjpegStreamer: android.widget.ImageView mTargetImageView>;

        return r1;
    }
    private org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask startTask(org.openhab.habdroid.util.MjpegStreamer, int, boolean, android.os.Handler)
    {
        org.openhab.habdroid.util.MjpegStreamer r0, $r1;
        int $i0;
        boolean $z0;
        android.os.Handler $r2;
        org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask r3;
        java.util.concurrent.Executor $r4;
        android.os.Handler[] $r5;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 := @parameter0: org.openhab.habdroid.util.MjpegStreamer;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: android.os.Handler;

        r3 = new org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask;

        specialinvoke r3.<org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask: void <init>(org.openhab.habdroid.util.MjpegStreamer,org.openhab.habdroid.util.MjpegStreamer,int)>(r0, $r1, $i0);

        if $z0 == 0 goto label1;

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r5 = newarray (android.os.Handler)[0];

        virtualinvoke r3.<org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r5);

        return r3;

     label1:
        $r5 = newarray (android.os.Handler)[1];

        $r5[0] = $r2;

        virtualinvoke r3.<org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask: android.os.AsyncTask execute(java.lang.Object[])>($r5);

        return r3;
    }
    public void getFrame()
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        java.io.IOException r1;
        int $i0;
        org.openhab.habdroid.util.MjpegInputStream $r2;
        android.graphics.Bitmap $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r2 = r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegInputStream mInputStream>;

     label1:
        $r3 = virtualinvoke $r2.<org.openhab.habdroid.util.MjpegInputStream: android.graphics.Bitmap readMjpegFrame()>();

     label2:
        $r4 = r0.<org.openhab.habdroid.util.MjpegStreamer: android.os.Handler mHandler>;

        $i0 = r0.<org.openhab.habdroid.util.MjpegStreamer: int mId>;

     label3:
        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($i0, $r3);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label4:
        return;

     label5:
        r1 := @caughtexception;

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public java.io.InputStream httpRequest(java.lang.String, java.lang.String, java.lang.String)
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        java.lang.String $r1, $r2, $r3;
        java.io.IOException r4;
        okhttp3.Request$Builder $r5;
        okhttp3.Request $r6;
        okhttp3.OkHttpClient$Builder $r7;
        org.openhab.habdroid.util.MjpegStreamer$2 $r8;
        okhttp3.OkHttpClient $r9;
        okhttp3.Call $r10;
        okhttp3.Response $r11;
        java.lang.StringBuilder $r12;
        int $i0;
        okhttp3.ResponseBody $r13;
        java.io.InputStream $r14;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = new okhttp3.Request$Builder;

        specialinvoke $r5.<okhttp3.Request$Builder: void <init>()>();

        $r5 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r7 = new okhttp3.OkHttpClient$Builder;

        specialinvoke $r7.<okhttp3.OkHttpClient$Builder: void <init>()>();

        $r8 = new org.openhab.habdroid.util.MjpegStreamer$2;

        specialinvoke $r8.<org.openhab.habdroid.util.MjpegStreamer$2: void <init>(org.openhab.habdroid.util.MjpegStreamer,java.lang.String,java.lang.String)>(r0, $r2, $r3);

        $r7 = virtualinvoke $r7.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)>($r8);

        $r9 = virtualinvoke $r7.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();

        $r1 = <org.openhab.habdroid.util.MjpegStreamer: java.lang.String TAG>;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "1. Sending http request");

        $r10 = virtualinvoke $r9.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r6);

        $r11 = interfaceinvoke $r10.<okhttp3.Call: okhttp3.Response execute()>();

     label2:
        $r1 = <org.openhab.habdroid.util.MjpegStreamer: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2. Request finished, status = ");

        $i0 = virtualinvoke $r11.<okhttp3.Response: int code()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        $i0 = virtualinvoke $r11.<okhttp3.Response: int code()>();

     label4:
        if $i0 != 401 goto label5;

        return null;

     label5:
        $r13 = virtualinvoke $r11.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r14 = virtualinvoke $r13.<okhttp3.ResponseBody: java.io.InputStream byteStream()>();

     label6:
        return $r14;

     label7:
        r4 := @caughtexception;

        virtualinvoke r4.<java.io.IOException: void printStackTrace()>();

        $r1 = <org.openhab.habdroid.util.MjpegStreamer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Request failed-IOException", r4);

        return null;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
    public void setTargetImageView(android.widget.ImageView)
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        android.widget.ImageView $r1;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 := @parameter0: android.widget.ImageView;

        r0.<org.openhab.habdroid.util.MjpegStreamer: android.widget.ImageView mTargetImageView> = $r1;

        return;
    }
    public void start()
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        android.os.Handler $r1;
        org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask $r2;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 = r0.<org.openhab.habdroid.util.MjpegStreamer: android.os.Handler mHandler>;

        $r2 = specialinvoke r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask startTask(org.openhab.habdroid.util.MjpegStreamer,int,boolean,android.os.Handler)>(r0, 1, 0, $r1);

        r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask mDownloadImageTask> = $r2;

        return;
    }
    public void startStream(android.os.Handler, int)
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        android.os.Handler $r1;
        int $i0;
        java.lang.String $r2, $r3, $r6;
        java.io.InputStream $r4;
        org.openhab.habdroid.util.MjpegInputStream $r5;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 := @parameter0: android.os.Handler;

        $i0 := @parameter1: int;

        r0.<org.openhab.habdroid.util.MjpegStreamer: android.os.Handler mHandler> = $r1;

        r0.<org.openhab.habdroid.util.MjpegStreamer: int mId> = $i0;

        $r5 = new org.openhab.habdroid.util.MjpegInputStream;

        $r6 = r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mSourceUrl>;

        $r2 = r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mUsername>;

        $r3 = r0.<org.openhab.habdroid.util.MjpegStreamer: java.lang.String mPassword>;

        $r4 = virtualinvoke r0.<org.openhab.habdroid.util.MjpegStreamer: java.io.InputStream httpRequest(java.lang.String,java.lang.String,java.lang.String)>($r6, $r2, $r3);

        specialinvoke $r5.<org.openhab.habdroid.util.MjpegInputStream: void <init>(java.io.InputStream)>($r4);

        r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegInputStream mInputStream> = $r5;

        r0.<org.openhab.habdroid.util.MjpegStreamer: boolean mRunning> = 1;

        return;
    }
    public void stop()
    {
        org.openhab.habdroid.util.MjpegStreamer r0;
        org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask $r1;

        r0 := @this: org.openhab.habdroid.util.MjpegStreamer;

        $r1 = r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask mDownloadImageTask>;

        if $r1 == null goto label1;

        $r1 = r0.<org.openhab.habdroid.util.MjpegStreamer: org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask mDownloadImageTask>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MjpegStreamer$DownloadImageTask: boolean cancel(boolean)>(1);

     label1:
        return;
    }
