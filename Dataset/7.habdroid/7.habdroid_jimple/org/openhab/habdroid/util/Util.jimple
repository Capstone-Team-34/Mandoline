org.openhab.habdroid.util.Util extends java.lang.Object
private static final java.lang.String TAG
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/util/Util;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.util.Util: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        org.openhab.habdroid.util.Util r0;

        r0 := @this: org.openhab.habdroid.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <org.openhab.habdroid.util.Util: java.lang.String TAG>;

        return r0;
    }
    public static boolean exceptionHasCause(java.lang.Throwable, java.lang.Class)
    {
        java.lang.Class r0, $r2;
        java.lang.Throwable $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: java.lang.Class;

     label1:
        if $r1 == null goto label3;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label3:
        return 0;
    }
    public static org.openhab.habdroid.model.OpenHABSitemap getSitemapByName(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String $r1, $r4;
        int i0, $i1;
        java.lang.Object $r2;
        org.openhab.habdroid.model.OpenHABSitemap $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openhab.habdroid.model.OpenHABSitemap) $r2;

        $r4 = virtualinvoke $r3.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openhab.habdroid.model.OpenHABSitemap) $r2;

        return $r3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    public static java.lang.String normalizeUrl(java.lang.String)
    {
        java.lang.String $r0, r3;
        java.net.MalformedURLException r1;
        java.net.URL r2;
        boolean $z0;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        r3 = "";

        r2 = new java.net.URL;

     label01:
        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();

     label02:
        r3 = $r0;

     label03:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label04:
        r3 = $r0;

     label05:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "");

     label06:
        r3 = $r0;

     label07:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

     label08:
        if $z0 != 0 goto label12;

        $r4 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r0;

     label11:
        r1 := @caughtexception;

        $r0 = <org.openhab.habdroid.util.Util: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, "normalizeUrl: invalid URL");

        return r3;

     label12:
        return $r0;

        catch java.net.MalformedURLException from label01 to label02 with label11;
        catch java.net.MalformedURLException from label03 to label04 with label11;
        catch java.net.MalformedURLException from label05 to label06 with label11;
        catch java.net.MalformedURLException from label07 to label08 with label11;
        catch java.net.MalformedURLException from label09 to label10 with label11;
    }
    public static void overridePendingTransition(android.app.Activity, boolean)
    {
        android.app.Activity $r0;
        boolean $z0, $z1;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_animation", "android");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label3;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_animation", "android");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ios");

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.app.Activity: void overridePendingTransition(int,int)>(2130771994, 2130771997);

        return;

     label1:
        virtualinvoke $r0.<android.app.Activity: void overridePendingTransition(int,int)>(2130771995, 2130771996);

        return;

     label2:
        virtualinvoke $r0.<android.app.Activity: void overridePendingTransition(int,int)>(0, 0);

     label3:
        return;
    }
    public static java.util.List parseSitemapList(org.json.JSONArray)
    {
        org.json.JSONArray $r0;
        org.json.JSONException r1;
        org.openhab.habdroid.model.OpenHAB2Sitemap r2;
        java.util.ArrayList r3;
        int i0, $i1;
        org.json.JSONObject $r4;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONArray;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label01:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if i0 >= $i1 goto label11;

     label02:
        $r4 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

     label03:
        r2 = new org.openhab.habdroid.model.OpenHAB2Sitemap;

     label04:
        specialinvoke r2.<org.openhab.habdroid.model.OpenHAB2Sitemap: void <init>(org.json.JSONObject)>($r4);

        $r5 = virtualinvoke r2.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("_default");

     label05:
        if $z0 == 0 goto label08;

     label06:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

     label07:
        if $i1 != 1 goto label09;

     label08:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label09:
        i0 = i0 + 1;

        goto label01;

     label10:
        r1 := @caughtexception;

        virtualinvoke r1.<org.json.JSONException: void printStackTrace()>();

        goto label09;

     label11:
        return r3;

        catch org.json.JSONException from label02 to label03 with label10;
        catch org.json.JSONException from label04 to label05 with label10;
        catch org.json.JSONException from label06 to label07 with label10;
        catch org.json.JSONException from label08 to label09 with label10;
    }
    public static java.util.List parseSitemapList(org.w3c.dom.Document)
    {
        org.w3c.dom.Document $r0;
        org.openhab.habdroid.model.OpenHAB1Sitemap r1;
        java.util.ArrayList r2;
        org.w3c.dom.NodeList $r3;
        int $i0, $i1;
        org.w3c.dom.Node $r4;
        org.openhab.habdroid.util.Util$1 $r5;

        $r0 := @parameter0: org.w3c.dom.Document;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("sitemap");

        $i0 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 <= 0 goto label2;

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 >= $i1 goto label2;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        r1 = new org.openhab.habdroid.model.OpenHAB1Sitemap;

        specialinvoke r1.<org.openhab.habdroid.model.OpenHAB1Sitemap: void <init>(org.w3c.dom.Node)>($r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = new org.openhab.habdroid.util.Util$1;

        specialinvoke $r5.<org.openhab.habdroid.util.Util$1: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r5);

        return r2;
    }
    public static java.lang.String removeProtocolFromUrl(java.lang.String)
    {
        java.lang.String $r0;
        android.net.Uri $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<android.net.Uri: java.lang.String getHost()>();

        return $r0;
    }
    public static void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient, java.lang.String, java.lang.String)
    {
        org.openhab.habdroid.util.MyAsyncHttpClient $r0;
        java.lang.String $r1, $r2;
        org.openhab.habdroid.util.Util$2 $r3;

        $r0 := @parameter0: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r1 == null goto label2;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new org.openhab.habdroid.util.Util$2;

        specialinvoke $r3.<org.openhab.habdroid.util.Util$2: void <init>()>();

        virtualinvoke $r0.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object post(java.lang.String,java.lang.String,java.lang.String,org.openhab.habdroid.util.MyHttpClient$TextResponseHandler)>($r1, $r2, "text/plain;charset=UTF-8", $r3);

     label2:
        return;
    }
    public static void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.model.OpenHABItem, java.lang.String)
    {
        org.openhab.habdroid.util.MyAsyncHttpClient $r0;
        org.openhab.habdroid.model.OpenHABItem $r1;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r1 := @parameter1: org.openhab.habdroid.model.OpenHABItem;

        $r2 := @parameter2: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getLink()>();

        staticinvoke <org.openhab.habdroid.util.Util: void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient,java.lang.String,java.lang.String)>($r0, $r3, $r2);

        return;
    }
    public static void setActivityTheme(android.app.Activity)
    {
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        staticinvoke <org.openhab.habdroid.util.Util: void setActivityTheme(android.app.Activity,java.lang.String)>($r0, null);

        return;
    }
    public static void setActivityTheme(android.app.Activity, java.lang.String)
    {
        android.app.Activity $r0;
        java.lang.String $r1, $r3;
        android.content.SharedPreferences $r2;
        boolean $z0;
        int i0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r1 = virtualinvoke $r0.<android.app.Activity: java.lang.String getString(int)>(2131626438);

        $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_theme", $r1);

     label1:
        $r3 = virtualinvoke $r0.<android.app.Activity: java.lang.String getString(int)>(2131626438);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        i0 = 2131689659;

     label2:
        virtualinvoke $r0.<android.app.Activity: void setTheme(int)>(i0);

        return;

     label3:
        $r3 = virtualinvoke $r0.<android.app.Activity: java.lang.String getString(int)>(2131626437);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        i0 = 2131689658;

        goto label2;

     label4:
        $r3 = virtualinvoke $r0.<android.app.Activity: java.lang.String getString(int)>(2131626435);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        i0 = 2131689656;

        goto label2;

     label5:
        $r3 = virtualinvoke $r0.<android.app.Activity: java.lang.String getString(int)>(2131626436);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        i0 = 2131689657;

        goto label2;

     label6:
        i0 = 2131689660;

        goto label2;
    }
    public static boolean sitemapExists(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String $r1, $r4;
        int i0, $i1;
        java.lang.Object $r2;
        org.openhab.habdroid.model.OpenHABSitemap $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openhab.habdroid.model.OpenHABSitemap) $r2;

        $r4 = virtualinvoke $r3.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }
