org.openhab.habdroid.util.MyAsyncHttpClient$1 extends java.lang.Object implements okhttp3.Callback
final org.openhab.habdroid.util.MyAsyncHttpClient this$0
final org.openhab.habdroid.util.MyHttpClient$ResponseHandler val$responseHandler
    void <init>(org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.util.MyHttpClient$ResponseHandler)
    {
        org.openhab.habdroid.util.MyAsyncHttpClient$1 r0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r1;
        org.openhab.habdroid.util.MyHttpClient$ResponseHandler $r2;

        r0 := @this: org.openhab.habdroid.util.MyAsyncHttpClient$1;

        $r1 := @parameter0: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r2 := @parameter1: org.openhab.habdroid.util.MyHttpClient$ResponseHandler;

        r0.<org.openhab.habdroid.util.MyAsyncHttpClient$1: org.openhab.habdroid.util.MyAsyncHttpClient this$0> = $r1;

        r0.<org.openhab.habdroid.util.MyAsyncHttpClient$1: org.openhab.habdroid.util.MyHttpClient$ResponseHandler val$responseHandler> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onFailure(okhttp3.Call, java.io.IOException)
    {
        org.openhab.habdroid.util.MyAsyncHttpClient$1 r0;
        okhttp3.Call $r1;
        java.io.IOException $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.util.MyAsyncHttpClient$1$1 $r4;

        r0 := @this: org.openhab.habdroid.util.MyAsyncHttpClient$1;

        $r1 := @parameter0: okhttp3.Call;

        $r2 := @parameter1: java.io.IOException;

        $r3 = r0.<org.openhab.habdroid.util.MyAsyncHttpClient$1: org.openhab.habdroid.util.MyAsyncHttpClient this$0>;

        $r4 = new org.openhab.habdroid.util.MyAsyncHttpClient$1$1;

        specialinvoke $r4.<org.openhab.habdroid.util.MyAsyncHttpClient$1$1: void <init>(org.openhab.habdroid.util.MyAsyncHttpClient$1,okhttp3.Call,java.io.IOException)>(r0, $r1, $r2);

        staticinvoke <org.openhab.habdroid.util.MyAsyncHttpClient: void access$000(org.openhab.habdroid.util.MyAsyncHttpClient,java.lang.Runnable)>($r3, $r4);

        return;
    }
    public void onResponse(okhttp3.Call, okhttp3.Response) throws java.io.IOException
    {
        org.openhab.habdroid.util.MyAsyncHttpClient$1 r0;
        okhttp3.Call $r1;
        okhttp3.Response $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        int $i0;
        okhttp3.ResponseBody $r4;
        byte[] $r5;
        boolean $z0;
        okhttp3.Headers $r6;
        java.lang.String $r7;
        org.openhab.habdroid.util.MyAsyncHttpClient$1$2 $r8;

        r0 := @this: org.openhab.habdroid.util.MyAsyncHttpClient$1;

        $r1 := @parameter0: okhttp3.Call;

        $r2 := @parameter1: okhttp3.Response;

        $i0 = virtualinvoke $r2.<okhttp3.Response: int code()>();

        $r4 = virtualinvoke $r2.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r5 = virtualinvoke $r4.<okhttp3.ResponseBody: byte[] bytes()>();

        $z0 = virtualinvoke $r2.<okhttp3.Response: boolean isSuccessful()>();

        $r6 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Headers headers()>();

        $r7 = virtualinvoke $r2.<okhttp3.Response: java.lang.String message()>();

        $r3 = r0.<org.openhab.habdroid.util.MyAsyncHttpClient$1: org.openhab.habdroid.util.MyAsyncHttpClient this$0>;

        $r8 = new org.openhab.habdroid.util.MyAsyncHttpClient$1$2;

        specialinvoke $r8.<org.openhab.habdroid.util.MyAsyncHttpClient$1$2: void <init>(org.openhab.habdroid.util.MyAsyncHttpClient$1,boolean,okhttp3.Call,int,okhttp3.Headers,byte[],java.lang.String)>(r0, $z0, $r1, $i0, $r6, $r5, $r7);

        staticinvoke <org.openhab.habdroid.util.MyAsyncHttpClient: void access$000(org.openhab.habdroid.util.MyAsyncHttpClient,java.lang.Runnable)>($r3, $r8);

        return;
    }
