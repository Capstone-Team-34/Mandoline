org.openhab.habdroid.util.MySmartImageView$RefreshHandler extends android.os.Handler
private final java.lang.ref.WeakReference viewWeakReference
    void <init>(org.openhab.habdroid.util.MySmartImageView)
    {
        org.openhab.habdroid.util.MySmartImageView$RefreshHandler r0;
        org.openhab.habdroid.util.MySmartImageView $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView$RefreshHandler;

        $r1 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<org.openhab.habdroid.util.MySmartImageView$RefreshHandler: java.lang.ref.WeakReference viewWeakReference> = $r2;

        return;
    }
    public void handleMessage(android.os.Message)
    {
        org.openhab.habdroid.util.MySmartImageView$RefreshHandler r0;
        android.os.Message $r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        org.openhab.habdroid.util.MySmartImageView r4;
        boolean $z0;
        java.lang.String $r5, $r7, $r9;
        java.lang.StringBuilder $r6;
        org.openhab.habdroid.util.MyWebImage $r8;
        org.openhab.habdroid.util.MySmartImageView$OnCompleteListener $r10;

        r0 := @this: org.openhab.habdroid.util.MySmartImageView$RefreshHandler;

        $r1 := @parameter0: android.os.Message;

        $r2 = r0.<org.openhab.habdroid.util.MySmartImageView$RefreshHandler: java.lang.ref.WeakReference viewWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (org.openhab.habdroid.util.MySmartImageView) $r3;

        if r4 == null goto label1;

        $z0 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: boolean access$000(org.openhab.habdroid.util.MySmartImageView)>(r4);

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: java.lang.String access$100(org.openhab.habdroid.util.MySmartImageView)>(r4);

        if $r5 == null goto label1;

        $r5 = <org.openhab.habdroid.util.MySmartImageView: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Refreshing image at ");

        $r7 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: java.lang.String access$100(org.openhab.habdroid.util.MySmartImageView)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r7);

        staticinvoke <org.openhab.habdroid.util.MySmartImageView: boolean access$002(org.openhab.habdroid.util.MySmartImageView,boolean)>(r4, 1);

        $r8 = new org.openhab.habdroid.util.MyWebImage;

        $r5 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: java.lang.String access$100(org.openhab.habdroid.util.MySmartImageView)>(r4);

        $r7 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: java.lang.String access$200(org.openhab.habdroid.util.MySmartImageView)>(r4);

        $r9 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: java.lang.String access$300(org.openhab.habdroid.util.MySmartImageView)>(r4);

        specialinvoke $r8.<org.openhab.habdroid.util.MyWebImage: void <init>(java.lang.String,boolean,java.lang.String,java.lang.String)>($r5, 0, $r7, $r9);

        $r10 = staticinvoke <org.openhab.habdroid.util.MySmartImageView: org.openhab.habdroid.util.MySmartImageView$OnCompleteListener access$400(org.openhab.habdroid.util.MySmartImageView)>(r4);

        virtualinvoke r4.<org.openhab.habdroid.util.MySmartImageView: void setImage(com.loopj.android.image.SmartImage,com.loopj.android.image.SmartImageTask$OnCompleteListener)>($r8, $r10);

     label1:
        return;
    }
