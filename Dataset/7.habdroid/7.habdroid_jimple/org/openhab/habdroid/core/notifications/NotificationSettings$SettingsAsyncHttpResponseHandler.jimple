org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler extends java.lang.Object implements org.openhab.habdroid.util.MyHttpClient$ResponseHandler
final org.openhab.habdroid.core.notifications.NotificationSettings this$0
    private void <init>(org.openhab.habdroid.core.notifications.NotificationSettings)
    {
        org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler r0;
        org.openhab.habdroid.core.notifications.NotificationSettings $r1;

        r0 := @this: org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler;

        $r1 := @parameter0: org.openhab.habdroid.core.notifications.NotificationSettings;

        r0.<org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler: org.openhab.habdroid.core.notifications.NotificationSettings this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.openhab.habdroid.core.notifications.NotificationSettings, org.openhab.habdroid.core.notifications.NotificationSettings$1)
    {
        org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler r0;
        org.openhab.habdroid.core.notifications.NotificationSettings $r1;
        org.openhab.habdroid.core.notifications.NotificationSettings$1 $r2;

        r0 := @this: org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler;

        $r1 := @parameter0: org.openhab.habdroid.core.notifications.NotificationSettings;

        $r2 := @parameter1: org.openhab.habdroid.core.notifications.NotificationSettings$1;

        specialinvoke r0.<org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler: void <init>(org.openhab.habdroid.core.notifications.NotificationSettings)>($r1);

        return;
    }
    public void onFailure(okhttp3.Call, int, okhttp3.Headers, byte[], java.lang.Throwable)
    {
        org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;

        r0 := @this: org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: java.lang.Throwable;

        $r5 = staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: java.lang.String access$100()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading notification settings: ");

        $r7 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7);

        return;
    }
    public void onSuccess(okhttp3.Call, int, okhttp3.Headers, byte[])
    {
        org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        org.json.JSONException r4, r5;
        org.json.JSONObject r6;
        java.lang.String $r7, $r10;
        org.openhab.habdroid.core.notifications.NotificationSettings $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r7 = staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: java.lang.String access$100()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "Successfully requested notification settings, parsing it now.");

        r6 = new org.json.JSONObject;

        $r7 = new java.lang.String;

     label1:
        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r3);

        specialinvoke r6.<org.json.JSONObject: void <init>(java.lang.String)>($r7);

     label2:
        $r8 = r0.<org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler: org.openhab.habdroid.core.notifications.NotificationSettings this$0>;

        staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: boolean access$202(org.openhab.habdroid.core.notifications.NotificationSettings,boolean)>($r8, 1);

        $r8 = r0.<org.openhab.habdroid.core.notifications.NotificationSettings$SettingsAsyncHttpResponseHandler: org.openhab.habdroid.core.notifications.NotificationSettings this$0>;

     label3:
        r6 = virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("gcm");

        staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: org.json.JSONObject access$302(org.openhab.habdroid.core.notifications.NotificationSettings,org.json.JSONObject)>($r8, r6);

     label4:
        return;

     label5:
        r4 := @caughtexception;

        $r7 = staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: java.lang.String access$100()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse returned body as JSON: ");

        $r10 = virtualinvoke r4.<org.json.JSONException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, $r10, r4);

        return;

     label6:
        r5 := @caughtexception;

        $r7 = staticinvoke <org.openhab.habdroid.core.notifications.NotificationSettings: java.lang.String access$100()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returned notification JSON settings does not contain a GCM key. Error: ");

        $r10 = virtualinvoke r5.<org.json.JSONException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r10);

        return;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label6;
    }
