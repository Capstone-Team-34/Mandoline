org.openhab.habdroid.ui.OpenHABNotificationFragment extends android.support.v4.app.Fragment implements android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
private static final java.lang.String ARG_BASEURL
private static final java.lang.String ARG_PASSWORD
private static final java.lang.String ARG_USERNAME
private static final java.lang.String TAG
private org.openhab.habdroid.ui.OpenHABMainActivity mActivity
private org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient
private org.openhab.habdroid.ui.OpenHABNotificationAdapter mNotificationAdapter
private java.util.ArrayList mNotifications
private android.support.v7.widget.RecyclerView mRecyclerView
private okhttp3.Call mRequestHandle
private android.support.v4.widget.SwipeRefreshLayout mSwipeLayout
private java.lang.String openHABBaseURL
private java.lang.String openHABPassword
private java.lang.String openHABUsername
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/ui/OpenHABNotificationFragment;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABUsername> = "";

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABPassword> = "";

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABBaseURL> = "";

        return;
    }
    static okhttp3.Call access$000(org.openhab.habdroid.ui.OpenHABNotificationFragment)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r0;
        okhttp3.Call r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: okhttp3.Call mRequestHandle>;

        return r1;
    }
    static void access$100(org.openhab.habdroid.ui.OpenHABNotificationFragment)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void stopProgressIndicator()>();

        return;
    }
    static java.lang.String access$200()
    {
        java.lang.String r0;

        r0 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        return r0;
    }
    static java.util.ArrayList access$300(org.openhab.habdroid.ui.OpenHABNotificationFragment)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.util.ArrayList mNotifications>;

        return r1;
    }
    static org.openhab.habdroid.ui.OpenHABNotificationAdapter access$400(org.openhab.habdroid.ui.OpenHABNotificationFragment)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r0;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABNotificationAdapter mNotificationAdapter>;

        return r1;
    }
    private void loadNotifications()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.openhab.habdroid.ui.OpenHABNotificationFragment$2 $r4;
        java.lang.Object $r5;
        okhttp3.Call $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void startProgressIndicator()>();

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABBaseURL>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/api/v1/notifications?limit=20");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new org.openhab.habdroid.ui.OpenHABNotificationFragment$2;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: void <init>(org.openhab.habdroid.ui.OpenHABNotificationFragment)>(r0);

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$ResponseHandler)>($r3, $r4);

        $r6 = (okhttp3.Call) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: okhttp3.Call mRequestHandle> = $r6;

     label1:
        return;
    }
    public static org.openhab.habdroid.ui.OpenHABNotificationFragment newInstance(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        android.os.Bundle r3;
        org.openhab.habdroid.ui.OpenHABNotificationFragment r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r4 = new org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke r4.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void <init>()>();

        r3 = new android.os.Bundle;

        specialinvoke r3.<android.os.Bundle: void <init>()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("openHABUsername", $r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("openHABPassword", $r2);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("openHABBaseUrl", $r0);

        virtualinvoke r4.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void setArguments(android.os.Bundle)>(r3);

        return r4;
    }
    private void startProgressIndicator()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        org.openhab.habdroid.ui.OpenHABMainActivity $r1;
        java.lang.String $r2;
        android.support.v4.widget.SwipeRefreshLayout $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        if $r1 == null goto label1;

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Start progress indicator");

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(1);

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v4.widget.SwipeRefreshLayout mSwipeLayout>;

        virtualinvoke $r3.<android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)>(0);

        return;
    }
    private void stopProgressIndicator()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        org.openhab.habdroid.ui.OpenHABMainActivity $r1;
        java.lang.String $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        if $r1 == null goto label1;

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Stop progress indicator");

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(0);

     label1:
        return;
    }
    public void onActivityCreated(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r3, $r4;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter $r5;
        org.openhab.habdroid.ui.OpenHABMainActivity $r6;
        java.util.ArrayList $r7;
        android.support.v7.widget.RecyclerView $r8;
        android.support.v7.widget.LinearLayoutManager $r9;
        org.openhab.habdroid.ui.widget.DividerItemDecoration $r10;
        java.lang.StringBuilder $r11;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>($r1);

        $r5 = new org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.util.ArrayList mNotifications>;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABBaseURL>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABUsername>;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABPassword>;

        specialinvoke $r5.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: void <init>(android.content.Context,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r2, $r3, $r4);

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABNotificationAdapter mNotificationAdapter> = $r5;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r9 = new android.support.v7.widget.LinearLayoutManager;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        specialinvoke $r9.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context)>($r6);

        virtualinvoke $r8.<android.support.v7.widget.RecyclerView: void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)>($r9);

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r10 = new org.openhab.habdroid.ui.widget.DividerItemDecoration;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

        specialinvoke $r10.<org.openhab.habdroid.ui.widget.DividerItemDecoration: void <init>(android.content.Context)>($r6);

        virtualinvoke $r8.<android.support.v7.widget.RecyclerView: void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)>($r10);

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABNotificationAdapter mNotificationAdapter>;

        virtualinvoke $r8.<android.support.v7.widget.RecyclerView: void setAdapter(android.support.v7.widget.RecyclerView$Adapter)>($r5);

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "onActivityCreated()");

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAdded = ");

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: boolean isAdded()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }
    public void onAttach(android.app.Activity)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        android.app.Activity $r1;
        java.lang.ClassCastException r2;
        java.lang.String $r3;
        org.openhab.habdroid.ui.OpenHABMainActivity $r4;
        org.openhab.habdroid.util.MyAsyncHttpClient $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<android.support.v4.app.Fragment: void onAttach(android.app.Activity)>($r1);

        $r3 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onAttach()");

     label1:
        $r4 = (org.openhab.habdroid.ui.OpenHABMainActivity) $r1;

     label2:
        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity> = $r4;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

     label3:
        $r5 = virtualinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient getAsyncHttpClient()>();

     label4:
        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient> = $r5;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity>;

     label5:
        virtualinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity: void setTitle(int)>(2131623979);

     label6:
        return;

     label7:
        r2 := @caughtexception;

        r2 = new java.lang.ClassCastException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be OpenHABMainActivity");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.ClassCastException: void <init>(java.lang.String)>($r3);

        throw r2;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label4 with label7;
        catch java.lang.ClassCastException from label5 to label6 with label7;
    }
    public void onCreate(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>($r1);

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "onCreate()");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.util.ArrayList mNotifications> = $r3;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.os.Bundle getArguments()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.os.Bundle getArguments()>();

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("openHABUsername");

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABUsername> = $r2;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.os.Bundle getArguments()>();

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("openHABPassword");

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABPassword> = $r2;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.os.Bundle getArguments()>();

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("openHABBaseUrl");

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String openHABBaseURL> = $r2;

     label1:
        return;
    }
    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        android.os.Bundle $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;
        boolean $z0;
        android.view.View $r7, $r8;
        android.support.v4.widget.SwipeRefreshLayout $r9;
        android.support.v7.widget.RecyclerView $r10;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, "onCreateView");

        $r4 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAdded = ");

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: boolean isAdded()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r6);

        $r7 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2131427408, $r2, 0);

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>(2131296509);

        $r9 = (android.support.v4.widget.SwipeRefreshLayout) $r8;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v4.widget.SwipeRefreshLayout mSwipeLayout> = $r9;

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v4.widget.SwipeRefreshLayout mSwipeLayout>;

        virtualinvoke $r9.<android.support.v4.widget.SwipeRefreshLayout: void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)>(r0);

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>(16908298);

        $r10 = (android.support.v7.widget.RecyclerView) $r8;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: android.support.v7.widget.RecyclerView mRecyclerView> = $r10;

        return $r7;
    }
    public void onDetach()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void onDetach()>();

        $r1 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onDetach()");

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABMainActivity mActivity> = null;

        return;
    }
    public void onPause()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        java.lang.Thread r1;
        java.lang.String $r2;
        okhttp3.Call $r3;
        org.openhab.habdroid.ui.OpenHABNotificationFragment$1 $r4;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void onPause()>();

        $r2 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "onPause()");

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: okhttp3.Call mRequestHandle>;

        if $r3 == null goto label1;

        r1 = new java.lang.Thread;

        $r4 = new org.openhab.habdroid.ui.OpenHABNotificationFragment$1;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABNotificationFragment$1: void <init>(org.openhab.habdroid.ui.OpenHABNotificationFragment)>(r0);

        specialinvoke r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke r1.<java.lang.Thread: void start()>();

     label1:
        return;
    }
    public void onRefresh()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onRefresh()");

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void refresh()>();

        return;
    }
    public void onResume()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void onResume()>();

        $r1 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onResume()");

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void loadNotifications()>();

        return;
    }
    public void onViewCreated(android.view.View, android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        android.view.View $r1;
        android.os.Bundle $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onViewCreated");

        $r3 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAdded = ");

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: boolean isAdded()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r5);

        specialinvoke r0.<android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r1, $r2);

        return;
    }
    public void refresh()
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        $r1 = <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "refresh()");

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment: void loadNotifications()>();

        return;
    }
