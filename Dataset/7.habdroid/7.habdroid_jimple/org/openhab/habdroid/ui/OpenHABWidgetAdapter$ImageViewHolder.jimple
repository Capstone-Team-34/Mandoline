org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder extends org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder
private final org.openhab.habdroid.util.MySmartImageView mImageView
private int mRefreshRate
private final android.graphics.Point mScreenSize
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        android.graphics.Point $r5;
        android.view.View $r6;
        org.openhab.habdroid.util.MySmartImageView $r7;
        android.content.Context $r8;
        java.lang.Object $r9;
        android.view.WindowManager r10;
        android.view.Display $r11;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r4 := @parameter3: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup,int,org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r1, $r2, 2131427417, $r3, $r4);

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.graphics.Point mScreenSize> = $r5;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.view.View itemView>;

        $r6 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>(2131296377);

        $r7 = (org.openhab.habdroid.util.MySmartImageView) $r6;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView> = $r7;

        $r8 = virtualinvoke $r2.<android.view.ViewGroup: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r10 = (android.view.WindowManager) $r9;

        $r11 = interfaceinvoke r10.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.graphics.Point mScreenSize>;

        virtualinvoke $r11.<android.view.Display: void getSize(android.graphics.Point)>($r5);

        return;
    }
    public void bind(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        android.view.View $r2;
        android.view.ViewParent $r3;
        int $i0, $i1;
        org.openhab.habdroid.util.MySmartImageView $r4;
        org.openhab.habdroid.model.OpenHABItem $r5;
        java.lang.String $r6, $r13, $r14;
        boolean $z0;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1 $r7;
        android.graphics.Point $r8;
        android.net.Uri $r9, r10;
        java.lang.StringBuilder $r11;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r12;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        $r2 = (android.view.View) $r3;

        if $r2 == null goto label06;

        $i0 = virtualinvoke $r2.<android.view.View: int getWidth()>();

     label01:
        if $r2 == null goto label07;

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

     label02:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        if $i0 <= 0 goto label08;

     label03:
        if $i1 <= 0 goto label09;

     label04:
        $i1 = $i1 * 90;

        $i1 = $i1 / 100;

        virtualinvoke $r4.<org.openhab.habdroid.util.MySmartImageView: void setMaxSize(int,int)>($i0, $i1);

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        if $r5 == null goto label10;

        $r6 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getState()>();

     label05:
        if $r6 == null goto label11;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean matches(java.lang.String)>("data:image/.*;base64,.*");

        if $z0 == 0 goto label11;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $r7 = new org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1;

        specialinvoke $r7.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1: void <init>(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder,java.lang.String)>(r0, $r6);

        virtualinvoke $r4.<org.openhab.habdroid.util.MySmartImageView: void setImageWithData(com.loopj.android.image.SmartImage)>($r7);

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: int mRefreshRate> = 0;

        return;

     label06:
        $i0 = 0;

        goto label01;

     label07:
        $i1 = 0;

        goto label02;

     label08:
        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.graphics.Point mScreenSize>;

        $i0 = $r8.<android.graphics.Point: int x>;

        goto label03;

     label09:
        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: android.graphics.Point mScreenSize>;

        $i1 = $r8.<android.graphics.Point: int y>;

        goto label04;

     label10:
        $r6 = null;

        goto label05;

     label11:
        $r6 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getUrl()>();

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r6);

        r10 = $r9;

        $r6 = virtualinvoke $r9.<android.net.Uri: java.lang.String getScheme()>();

        if $r6 != null goto label12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r6 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$100(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getUrl()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r6);

     label12:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $r6 = virtualinvoke r10.<android.net.Uri: java.lang.String toString()>();

        $r12 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r13 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$200(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r12);

        $r12 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r14 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$300(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r12);

        virtualinvoke $r4.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r13, $r14, 0);

        $i0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: int getRefresh()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: int mRefreshRate> = $i0;

        return;
    }
    public void start()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder r0;
        int $i0;
        org.openhab.habdroid.util.MySmartImageView $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: int mRefreshRate>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: int mRefreshRate>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void setRefreshRate(int)>($i0);

        return;

     label1:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void cancelRefresh()>();

        return;
    }
    public void stop()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder r0;
        org.openhab.habdroid.util.MySmartImageView $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void cancelRefresh()>();

        return;
    }
