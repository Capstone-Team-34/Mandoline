org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder extends org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder implements android.widget.SeekBar$OnSeekBarChangeListener
private org.openhab.habdroid.model.OpenHABItem mBoundItem
private final org.openhab.habdroid.util.MySmartImageView mIconView
private final android.widget.TextView mLabelView
private final android.widget.SeekBar mSeekBar
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        android.view.View $r5;
        android.widget.TextView $r6;
        org.openhab.habdroid.util.MySmartImageView $r7;
        android.widget.SeekBar $r8;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r4 := @parameter3: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup,int,org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r1, $r2, 2131427423, $r3, $r4);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296546);

        $r6 = (android.widget.TextView) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.TextView mLabelView> = $r6;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296545);

        $r7 = (org.openhab.habdroid.util.MySmartImageView) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView> = $r7;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296493);

        $r8 = (android.widget.SeekBar) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.SeekBar mSeekBar> = $r8;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r8.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0);

        return;
    }
    public void bind(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        java.lang.IllegalStateException r2;
        java.lang.String $r3, $r9;
        java.lang.String[] $r4;
        android.widget.TextView $r5;
        int $i0;
        java.lang.Integer $r6;
        org.openhab.habdroid.util.MySmartImageView $r7;
        boolean $z0;
        org.openhab.habdroid.model.OpenHABItem $r8;
        android.widget.SeekBar $r10;
        java.lang.Float $r11;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r3 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getLabel()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\[|\\]");

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.TextView mLabelView>;

        $i0 = lengthof $r4;

        if $i0 <= 0 goto label5;

        $r3 = $r4[0];

     label1:
        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.TextView mLabelView>;

        $r6 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer getLabelColor()>();

        staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: void updateTextViewColor(android.widget.TextView,java.lang.Integer)>($r5, $r6);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: void updateIcon(org.openhab.habdroid.util.MySmartImageView,org.openhab.habdroid.model.OpenHABWidget)>($r7, $r1);

        $z0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: boolean hasItem()>();

        if $z0 == 0 goto label8;

        $r8 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        $r3 = virtualinvoke $r8.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Color");

        if $z0 != 0 goto label2;

        $r3 = "Color";

        $r8 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        $r9 = virtualinvoke $r8.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getGroupType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label7;

     label2:
        $r8 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        $i0 = virtualinvoke $r8.<org.openhab.habdroid.model.OpenHABItem: int getStateAsBrightness()>();

     label3:
        $r10 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r10.<android.widget.SeekBar: void setProgress(int)>($i0);

     label4:
        $r8 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: org.openhab.habdroid.model.OpenHABItem mBoundItem> = $r8;

        return;

     label5:
        $r3 = null;

        goto label1;

     label6:
        r2 := @caughtexception;

        $i0 = 0;

        goto label3;

     label7:
        $r8 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        $r11 = virtualinvoke $r8.<org.openhab.habdroid.model.OpenHABItem: java.lang.Float getStateAsFloat()>();

        $i0 = virtualinvoke $r11.<java.lang.Float: int intValue()>();

        goto label3;

     label8:
        $r10 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r10.<android.widget.SeekBar: void setProgress(int)>(0);

        goto label4;

        catch java.lang.IllegalStateException from label2 to label3 with label6;
    }
    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder r0;
        android.widget.SeekBar $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder;

        $r1 := @parameter0: android.widget.SeekBar;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        return;
    }
    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder r0;
        android.widget.SeekBar $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder;

        $r1 := @parameter0: android.widget.SeekBar;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStartTrackingTouch position = ");

        $i0 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenHABWidgetAdapter", $r3);

        return;
    }
    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder r0;
        android.widget.SeekBar $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r3;
        org.openhab.habdroid.util.MyAsyncHttpClient $r4;
        org.openhab.habdroid.model.OpenHABItem $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder;

        $r1 := @parameter0: android.widget.SeekBar;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStopTrackingTouch position = ");

        $i0 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenHABWidgetAdapter", $r3);

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: org.openhab.habdroid.util.MyAsyncHttpClient mHttpClient>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SliderViewHolder: org.openhab.habdroid.model.OpenHABItem mBoundItem>;

        $i0 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        staticinvoke <org.openhab.habdroid.util.Util: void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.model.OpenHABItem,java.lang.String)>($r4, $r5, $r3);

        return;
    }
