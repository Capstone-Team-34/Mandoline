org.openhab.habdroid.ui.OpenHABMainActivity$6 extends org.openhab.habdroid.ui.OpenHABMainActivity$DefaultHttpResponseHandler
final org.openhab.habdroid.ui.OpenHABMainActivity this$0
    void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity$6 r0;
        org.openhab.habdroid.ui.OpenHABMainActivity $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity$6;

        $r1 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0> = $r1;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity$DefaultHttpResponseHandler: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,org.openhab.habdroid.ui.OpenHABMainActivity$1)>($r1, null);

        return;
    }
    public void onSuccess(okhttp3.Call, int, okhttp3.Headers, byte[])
    {
        org.openhab.habdroid.ui.OpenHABMainActivity$6 r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        org.json.JSONArray r4;
        java.lang.String r5, $r14;
        org.openhab.habdroid.ui.OpenHABMainActivity $r6;
        java.util.ArrayList $r7;
        javax.xml.parsers.DocumentBuilderFactory $r8;
        javax.xml.parsers.DocumentBuilder $r9;
        java.io.ByteArrayInputStream $r10;
        org.w3c.dom.Document $r11;
        java.util.List $r12;
        java.lang.Exception r13, r15;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity$6;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

        virtualinvoke $r6.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(0);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList access$1300(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

        $i0 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: int access$900(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        if $i0 != 1 goto label09;

        $r8 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label01:
        $r9 = virtualinvoke $r8.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label02:
        $r10 = new java.io.ByteArrayInputStream;

     label03:
        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r11 = virtualinvoke $r9.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r10);

     label04:
        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

     label05:
        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList access$1300(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        $r12 = staticinvoke <org.openhab.habdroid.util.Util: java.util.List parseSitemapList(org.w3c.dom.Document)>($r11);

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r12);

     label06:
        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList access$1300(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label18;

        return;

     label07:
        r13 := @caughtexception;

     label08:
        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

        goto label06;

     label09:
        r5 = new java.lang.String;

     label10:
        specialinvoke r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

     label11:
        r4 = new org.json.JSONArray;

     label12:
        specialinvoke r4.<org.json.JSONArray: void <init>(java.lang.String)>(r5);

     label13:
        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

     label14:
        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList access$1300(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        $r12 = staticinvoke <org.openhab.habdroid.util.Util: java.util.List parseSitemapList(org.json.JSONArray)>(r4);

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r12);

        r5 = staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String access$000()>();

        $r14 = virtualinvoke r4.<org.json.JSONArray: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r5, $r14);

     label15:
        goto label06;

     label16:
        r15 := @caughtexception;

     label17:
        virtualinvoke r15.<java.lang.Exception: void printStackTrace()>();

        goto label06;

     label18:
        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity$6: org.openhab.habdroid.ui.OpenHABMainActivity this$0>;

        staticinvoke <org.openhab.habdroid.ui.OpenHABMainActivity: void access$1400(org.openhab.habdroid.ui.OpenHABMainActivity)>($r6);

        return;

     label19:
        r15 := @caughtexception;

        goto label17;

     label20:
        r13 := @caughtexception;

        goto label08;

     label21:
        r13 := @caughtexception;

        goto label08;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label07;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label07;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label06 with label07;
        catch org.xml.sax.SAXException from label01 to label02 with label21;
        catch org.xml.sax.SAXException from label03 to label04 with label21;
        catch org.xml.sax.SAXException from label05 to label06 with label21;
        catch java.io.IOException from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label16;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label16;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label16;
        catch org.json.JSONException from label10 to label11 with label19;
        catch org.json.JSONException from label12 to label13 with label19;
        catch org.json.JSONException from label14 to label15 with label19;
    }
