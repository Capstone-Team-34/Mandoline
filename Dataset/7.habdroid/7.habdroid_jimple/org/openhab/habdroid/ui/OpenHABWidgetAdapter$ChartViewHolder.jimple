org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder extends org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder
private final java.lang.CharSequence mChartTheme
private final org.openhab.habdroid.util.MySmartImageView mImageView
private final android.util.DisplayMetrics mMetrics
private final java.util.Random mRandom
private int mRefreshRate
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, java.lang.CharSequence, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        java.lang.CharSequence $r3;
        org.openhab.habdroid.util.MyAsyncHttpClient $r4;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r5;
        android.util.DisplayMetrics $r6;
        java.util.Random $r7;
        android.view.View $r8;
        org.openhab.habdroid.util.MySmartImageView $r9;
        android.content.Context $r10;
        java.lang.Object $r11;
        android.view.WindowManager r12;
        android.view.Display $r13;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: java.lang.CharSequence;

        $r4 := @parameter3: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r5 := @parameter4: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup,int,org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r1, $r2, 2131427410, $r4, $r5);

        $r6 = new android.util.DisplayMetrics;

        specialinvoke $r6.<android.util.DisplayMetrics: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.util.DisplayMetrics mMetrics> = $r6;

        $r7 = new java.util.Random;

        specialinvoke $r7.<java.util.Random: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: java.util.Random mRandom> = $r7;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: int mRefreshRate> = 0;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.view.View itemView>;

        $r8 = virtualinvoke $r8.<android.view.View: android.view.View findViewById(int)>(2131296320);

        $r9 = (org.openhab.habdroid.util.MySmartImageView) $r8;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView> = $r9;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.view.View itemView>;

        $r10 = virtualinvoke $r8.<android.view.View: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r12 = (android.view.WindowManager) $r11;

        $r13 = interfaceinvoke r12.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r13.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r6);

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: java.lang.CharSequence mChartTheme> = $r3;

        return;
    }
    public void bind(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        java.lang.StringBuilder r2, $r8;
        android.view.View $r3;
        android.view.ViewParent $r4;
        org.openhab.habdroid.model.OpenHABItem $r5;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r6;
        java.lang.String $r7, $r10, $r16;
        int $i0, $i1;
        android.util.DisplayMetrics $r9;
        boolean $z0;
        java.util.Random $r11;
        java.lang.CharSequence $r12;
        java.lang.Boolean $r13;
        org.openhab.habdroid.util.MySmartImageView $r14;
        android.view.ViewGroup$LayoutParams $r15;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.view.View itemView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = (android.view.View) $r4;

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        if $r5 == null goto label9;

        r2 = new java.lang.StringBuilder;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$100(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r6);

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        if $r3 == null goto label7;

        $i0 = virtualinvoke $r3.<android.view.View: int getWidth()>();

        if $i0 <= 0 goto label7;

        $i0 = virtualinvoke $r3.<android.view.View: int getWidth()>();

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chart width = ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - screen width ");

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.util.DisplayMetrics mMetrics>;

        $i1 = $r9.<android.util.DisplayMetrics: int widthPixels>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenHABWidgetAdapter", $r7);

        $r7 = "GroupItem";

        $r10 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getType()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label2;

        $r7 = "Group";

        $r10 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getType()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label8;

     label2:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chart?groups=");

        $r7 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label3:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&period=");

        $r7 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getPeriod()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&random=");

        $r11 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: java.util.Random mRandom>;

        $i1 = virtualinvoke $r11.<java.util.Random: int nextInt()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dpi=");

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.util.DisplayMetrics mMetrics>;

        $i1 = $r9.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getService()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label4;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&service=");

        $r7 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getService()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label4:
        $r12 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: java.lang.CharSequence mChartTheme>;

        if $r12 == null goto label5;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&theme=");

        $r12 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: java.lang.CharSequence mChartTheme>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r12);

     label5:
        $r13 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Boolean getLegend()>();

        if $r13 == null goto label6;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&legend=");

        $r13 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Boolean getLegend()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chart url = ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenHABWidgetAdapter", $r7);

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $r15 = virtualinvoke $r14.<org.openhab.habdroid.util.MySmartImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = $i0 / 2;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i1;

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r14.<org.openhab.habdroid.util.MySmartImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r15);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&w=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&h=");

        $i0 = $i0 / 2;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r10 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$200(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r6);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r16 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$300(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r6);

        virtualinvoke $r14.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,boolean)>($r7, $r10, $r16, 0);

        $i0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: int getRefresh()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: int mRefreshRate> = $i0;

        return;

     label7:
        $r9 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: android.util.DisplayMetrics mMetrics>;

        $i0 = $r9.<android.util.DisplayMetrics: int widthPixels>;

        goto label1;

     label8:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chart?items=");

        $r7 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label3;

     label9:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidgetAdapter", "Chart item is null");

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r14.<org.openhab.habdroid.util.MySmartImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: int mRefreshRate> = 0;

        return;
    }
    public void start()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder r0;
        int $i0;
        org.openhab.habdroid.util.MySmartImageView $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: int mRefreshRate>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: int mRefreshRate>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void setRefreshRate(int)>($i0);

        return;

     label1:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void cancelRefresh()>();

        return;
    }
    public void stop()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder r0;
        org.openhab.habdroid.util.MySmartImageView $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ChartViewHolder: org.openhab.habdroid.util.MySmartImageView mImageView>;

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void cancelRefresh()>();

        return;
    }
