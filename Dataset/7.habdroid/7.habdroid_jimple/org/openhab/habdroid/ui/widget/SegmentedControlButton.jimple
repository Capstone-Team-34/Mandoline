org.openhab.habdroid.ui.widget.SegmentedControlButton extends android.support.v7.widget.AppCompatRadioButton
private int mLineHeight
private android.graphics.Paint mLinePaint
private int mTextDistanceFromLine
private android.graphics.Paint mTextPaint
private float mX
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.widget.AppCompatRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        specialinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: void init(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.support.v7.widget.AppCompatRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        specialinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: void init(android.util.AttributeSet)>($r2);

        return;
    }
    private void init(android.util.AttributeSet)
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;
        android.util.AttributeSet $r1;
        android.content.Context $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0, $i1;
        android.graphics.Paint $r5;
        float $f0;
        android.graphics.Paint$Align $r6;
        android.graphics.Paint$Style $r7;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        $r1 := @parameter0: android.util.AttributeSet;

        virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: void setButtonDrawable(android.graphics.drawable.Drawable)>(null);

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.content.Context getContext()>();

        $r3 = <org.openhab.habdroid.R$styleable: int[] SegmentedControlButton>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r1, $r3);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, 0);

        r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mLineHeight> = $i1;

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, 0);

        r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mTextDistanceFromLine> = $i1;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint> = $r5;

        $r5 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint>;

        $f0 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: float getTextSize()>();

        virtualinvoke $r5.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r5 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint>;

        $r6 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r5.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r6);

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mLinePaint> = $r5;

        $r5 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mLinePaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mLinePaint>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

     label1:
        return;
    }
    public void onDraw(android.graphics.Canvas)
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2;
        android.graphics.Paint $r2;
        int i0, $i1, $i2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: java.lang.CharSequence getText()>();

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        i0 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getHeight()>();

        $i1 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mLineHeight>;

        i0 = i0 - $i1;

        $i1 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mTextDistanceFromLine>;

        i0 = i0 - $i1;

        $f0 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: float mX>;

        $r5 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.drawable.Drawable getBackground()>();

        $i1 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getWidth()>();

        $i2 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getHeight()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i2);

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $r2 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint>;

        $i1 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getCurrentTextColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);

        $f1 = (float) i0;

        $r2 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mTextPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r4, $f0, $f1, $r2);

        i0 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mLineHeight>;

        if i0 <= 0 goto label1;

        i0 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getHeight()>();

        $i1 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int mLineHeight>;

        i0 = i0 - $i1;

        $f2 = (float) i0;

        i0 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getWidth()>();

        $f0 = (float) i0;

        i0 = virtualinvoke r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: int getHeight()>();

        $f1 = (float) i0;

        $r2 = r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: android.graphics.Paint mLinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f2, $f0, $f1, $r2);

     label1:
        return;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;
        int $i0, $i1, $i2, $i3;
        float $f0;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.support.v7.widget.AppCompatRadioButton: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $f0 = (float) $i0;

        $f0 = $f0 * 0.5F;

        r0.<org.openhab.habdroid.ui.widget.SegmentedControlButton: float mX> = $f0;

        return;
    }
    public void toggle()
    {
        org.openhab.habdroid.ui.widget.SegmentedControlButton r0;

        r0 := @this: org.openhab.habdroid.ui.widget.SegmentedControlButton;

        return;
    }
