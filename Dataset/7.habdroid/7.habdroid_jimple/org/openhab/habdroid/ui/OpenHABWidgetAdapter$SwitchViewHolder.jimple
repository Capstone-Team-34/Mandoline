org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder extends org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder implements android.view.View$OnTouchListener
private org.openhab.habdroid.model.OpenHABItem mBoundItem
private final org.openhab.habdroid.util.MySmartImageView mIconView
private final android.widget.TextView mLabelView
private final android.support.v7.widget.SwitchCompat mSwitch
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        android.view.View $r5;
        android.widget.TextView $r6;
        org.openhab.habdroid.util.MySmartImageView $r7;
        android.support.v7.widget.SwitchCompat $r8;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r4 := @parameter3: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup,int,org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r1, $r2, 2131427424, $r3, $r4);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296546);

        $r6 = (android.widget.TextView) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.widget.TextView mLabelView> = $r6;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296545);

        $r7 = (org.openhab.habdroid.util.MySmartImageView) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView> = $r7;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296512);

        $r8 = (android.support.v7.widget.SwitchCompat) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.support.v7.widget.SwitchCompat mSwitch> = $r8;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.support.v7.widget.SwitchCompat mSwitch>;

        virtualinvoke $r8.<android.support.v7.widget.SwitchCompat: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        return;
    }
    public void bind(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        android.widget.TextView $r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        org.openhab.habdroid.util.MySmartImageView $r5;
        android.support.v7.widget.SwitchCompat $r6;
        boolean $z0;
        org.openhab.habdroid.model.OpenHABItem $r7;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.widget.TextView mLabelView>;

        $r3 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getLabel()>();

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.widget.TextView mLabelView>;

        $r4 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer getLabelColor()>();

        staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: void updateTextViewColor(android.widget.TextView,java.lang.Integer)>($r2, $r4);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: void updateIcon(org.openhab.habdroid.util.MySmartImageView,org.openhab.habdroid.model.OpenHABWidget)>($r5, $r1);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.support.v7.widget.SwitchCompat mSwitch>;

        $z0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: boolean hasItem()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        $z0 = virtualinvoke $r7.<org.openhab.habdroid.model.OpenHABItem: boolean getStateAsBoolean()>();

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r6.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z0);

        $r7 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: org.openhab.habdroid.model.OpenHABItem mBoundItem> = $r7;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        org.openhab.habdroid.model.OpenHABItem $r3;
        int $i0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r4;
        android.support.v7.widget.SwitchCompat $r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 1 goto label2;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: org.openhab.habdroid.util.MyAsyncHttpClient mHttpClient>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: org.openhab.habdroid.model.OpenHABItem mBoundItem>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$SwitchViewHolder: android.support.v7.widget.SwitchCompat mSwitch>;

        $z0 = virtualinvoke $r5.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();

        if $z0 == 0 goto label3;

        $r6 = "OFF";

     label1:
        staticinvoke <org.openhab.habdroid.util.Util: void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.model.OpenHABItem,java.lang.String)>($r4, $r3, $r6);

     label2:
        return 0;

     label3:
        $r6 = "ON";

        goto label1;
    }
