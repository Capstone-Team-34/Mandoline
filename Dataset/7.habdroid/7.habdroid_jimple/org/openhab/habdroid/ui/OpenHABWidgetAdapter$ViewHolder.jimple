org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder extends android.support.v7.widget.RecyclerView$ViewHolder
protected final org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo
protected final org.openhab.habdroid.util.MyAsyncHttpClient mHttpClient
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, int, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        int $i0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        android.view.View $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r4 := @parameter4: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        $r5 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r2, 0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>($r5);

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: org.openhab.habdroid.util.MyAsyncHttpClient mHttpClient> = $r3;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo> = $r4;

        return;
    }
    protected static void updateTextViewColor(android.widget.TextView, java.lang.Integer)
    {
        android.widget.TextView $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2;
        android.content.res.ColorStateList r3;
        int $i0;

        $r0 := @parameter0: android.widget.TextView;

        $r1 := @parameter1: java.lang.Integer;

        $r2 = virtualinvoke $r0.<android.widget.TextView: java.lang.Object getTag(int)>(2131296440);

        r3 = (android.content.res.ColorStateList) $r2;

        if $r1 == null goto label2;

        if r3 != null goto label1;

        r3 = virtualinvoke $r0.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke $r0.<android.widget.TextView: void setTag(int,java.lang.Object)>(2131296440, r3);

     label1:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<android.widget.TextView: void setTextColor(int)>($i0);

        return;

     label2:
        if r3 == null goto label3;

        virtualinvoke $r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r3);

        virtualinvoke $r0.<android.widget.TextView: void setTag(int,java.lang.Object)>(2131296440, null);

     label3:
        return;
    }
public abstract void bind(org.openhab.habdroid.model.OpenHABWidget) { 
// no body
} 
    public void start()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder r0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder;

        return;
    }
    public void stop()
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder r0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder;

        return;
    }
    protected void updateIcon(org.openhab.habdroid.util.MySmartImageView, org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder r0;
        org.openhab.habdroid.util.MySmartImageView $r1;
        org.openhab.habdroid.model.OpenHABWidget $r2;
        java.lang.StringBuilder $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        java.lang.String $r5, $r6, $r7;
        java.lang.Integer $r8;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.util.MySmartImageView;

        $r2 := @parameter1: org.openhab.habdroid.model.OpenHABWidget;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r5 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$100(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getIconPath()>();

        $r5 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "/?=&");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r6 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$200(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r4);

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$300(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r4);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131230813);

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>($r5, $r6, $r7, $r8);

        $r8 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer getIconColor()>();

        if $r8 == null goto label1;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void setColorFilter(int)>($i0);

        return;

     label1:
        virtualinvoke $r1.<org.openhab.habdroid.util.MySmartImageView: void clearColorFilter()>();

        return;
    }
