org.openhab.habdroid.ui.OpenHABInfoFragment extends android.support.v4.app.Fragment
private static final java.lang.String TAG
private org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient
private java.lang.String mOpenHABBaseUrl
private android.widget.TextView mOpenHABNotificationText
private android.widget.LinearLayout mOpenHABSecretLayout
private android.widget.TextView mOpenHABSecretText
private android.widget.TextView mOpenHABUUIDText
private int mOpenHABVersion
private android.widget.TextView mOpenHABVersionLabel
private android.widget.TextView mOpenHABVersionText
private java.lang.String mPassword
private java.lang.String mUsername
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/ui/OpenHABInfoFragment;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void <init>()>();

        return;
    }
    static android.widget.LinearLayout access$000(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        android.widget.LinearLayout r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.LinearLayout mOpenHABSecretLayout>;

        return r1;
    }
    static java.lang.String access$100()
    {
        java.lang.String r0;

        r0 = <org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String TAG>;

        return r0;
    }
    static android.widget.TextView access$200(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABSecretText>;

        return r1;
    }
    static android.widget.TextView access$300(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABUUIDText>;

        return r1;
    }
    static android.widget.TextView access$400(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABVersionText>;

        return r1;
    }
    static int access$500(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        int i0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        i0 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: int mOpenHABVersion>;

        return i0;
    }
    static android.widget.TextView access$600(org.openhab.habdroid.ui.OpenHABInfoFragment)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABInfoFragment;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABVersionLabel>;

        return r1;
    }
    private void setGcmText()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        java.lang.String $r1;
        android.widget.TextView $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String GCM_SENDER_ID>;

        if $r1 != null goto label1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABNotificationText>;

        virtualinvoke $r2.<android.widget.TextView: void setText(int)>(2131624251);

        return;

     label1:
        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABNotificationText>;

        $r3 = newarray (java.lang.Object)[1];

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String GCM_SENDER_ID>;

        $r3[0] = $r1;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String getString(int,java.lang.Object[])>(2131624249, $r3);

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        return;
    }
    private void setSecretText()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.openhab.habdroid.ui.OpenHABInfoFragment$1 $r4;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static/secret");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new org.openhab.habdroid.ui.OpenHABInfoFragment$1;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABInfoFragment$1: void <init>(org.openhab.habdroid.ui.OpenHABInfoFragment)>(r0);

        virtualinvoke $r1.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$TextResponseHandler)>($r3, $r4);

        return;
    }
    private void setUuidText()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABInfoFragment$2 $r4;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: int mOpenHABVersion>;

        if $i0 != 1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static/uuid");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r4 = new org.openhab.habdroid.ui.OpenHABInfoFragment$2;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABInfoFragment$2: void <init>(org.openhab.habdroid.ui.OpenHABInfoFragment)>(r0);

        virtualinvoke $r3.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$TextResponseHandler)>($r2, $r4);

        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/uuid");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }
    private void setVersionText()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3, $r4;
        org.openhab.habdroid.util.MyAsyncHttpClient $r5;
        org.openhab.habdroid.ui.OpenHABInfoFragment$3 $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: int mOpenHABVersion>;

        if $i0 != 1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static/version");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r3 = <org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url = ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r4);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r6 = new org.openhab.habdroid.ui.OpenHABInfoFragment$3;

        specialinvoke $r6.<org.openhab.habdroid.ui.OpenHABInfoFragment$3: void <init>(org.openhab.habdroid.ui.OpenHABInfoFragment)>(r0);

        virtualinvoke $r5.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$TextResponseHandler)>($r2, $r6);

        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }
    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        android.os.Bundle $r3;
        android.view.View $r4, $r11;
        android.support.v4.app.FragmentActivity $r5;
        android.content.Context $r6;
        android.content.SharedPreferences $r7;
        org.openhab.habdroid.util.MyAsyncHttpClient $r8;
        boolean $z0;
        java.lang.Boolean $r9, $r10;
        android.widget.TextView $r12;
        android.widget.LinearLayout $r13;
        java.lang.String $r14, $r15;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2131427407, $r2, 0);

        $r5 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r6 = virtualinvoke $r5.<android.support.v4.app.FragmentActivity: android.content.Context getApplicationContext()>();

        $r7 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r6);

        $r8 = new org.openhab.habdroid.util.MyAsyncHttpClient;

        $r5 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r6 = virtualinvoke $r5.<android.support.v4.app.FragmentActivity: android.content.Context getApplicationContext()>();

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslhost", 0);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslcert", 0);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke $r8.<org.openhab.habdroid.util.MyAsyncHttpClient: void <init>(android.content.Context,java.lang.Boolean,java.lang.Boolean)>($r6, $r9, $r10);

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient> = $r8;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296438);

        $r12 = (android.widget.TextView) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABVersionText> = $r12;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296436);

        $r12 = (android.widget.TextView) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABUUIDText> = $r12;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296432);

        $r12 = (android.widget.TextView) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABSecretText> = $r12;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296439);

        $r12 = (android.widget.TextView) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABVersionLabel> = $r12;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296430);

        $r12 = (android.widget.TextView) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.TextView mOpenHABNotificationText> = $r12;

        $r11 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131296434);

        $r13 = (android.widget.LinearLayout) $r11;

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.widget.LinearLayout mOpenHABSecretLayout> = $r13;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: android.os.Bundle getArguments()>();

        if $r3 == null goto label1;

        $r14 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("openHABBaseUrl");

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mOpenHABBaseUrl> = $r14;

        $r14 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("username");

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mUsername> = $r14;

        $r14 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("password");

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mPassword> = $r14;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("openHABVersion");

        r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: int mOpenHABVersion> = $i0;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mUsername>;

        $r15 = r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String mPassword>;

        virtualinvoke $r8.<org.openhab.habdroid.util.MyAsyncHttpClient: void setBasicAuth(java.lang.String,java.lang.String)>($r14, $r15);

        return $r4;

     label1:
        $r14 = <org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r14, "No openHABBaseURl parameter passed, can\'t fetch openHAB info from nowhere");

        return $r4;
    }
    public void onResume()
    {
        org.openhab.habdroid.ui.OpenHABInfoFragment r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABInfoFragment;

        $r1 = <org.openhab.habdroid.ui.OpenHABInfoFragment: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onResume()");

        specialinvoke r0.<android.support.v4.app.Fragment: void onResume()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: void setVersionText()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: void setUuidText()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: void setSecretText()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABInfoFragment: void setGcmText()>();

        return;
    }
