org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder extends org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder
private final android.webkit.WebView mWebView
    void <init>(android.view.LayoutInflater, android.view.ViewGroup, org.openhab.habdroid.util.MyAsyncHttpClient, org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        org.openhab.habdroid.util.MyAsyncHttpClient $r3;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r4;
        android.view.View $r5;
        android.webkit.WebView $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: org.openhab.habdroid.util.MyAsyncHttpClient;

        $r4 := @parameter3: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup,int,org.openhab.habdroid.util.MyAsyncHttpClient,org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r1, $r2, 2131427428, $r3, $r4);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r5.<android.view.View: android.view.View findViewById(int)>(2131296544);

        $r6 = (android.webkit.WebView) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView> = $r6;

        return;
    }
    public void bind(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        int $i0;
        android.webkit.WebView $r2;
        android.view.ViewGroup$LayoutParams $r3;
        org.openhab.habdroid.ui.AnchorWebViewClient $r4;
        java.lang.String $r5, $r7, $r8;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo $r6;
        android.webkit.WebSettings $r9;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $i0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: int getHeight()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        $r3 = virtualinvoke $r2.<android.webkit.WebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: int getHeight()>();

        $i0 = $i0 * 80;

        $r3.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        virtualinvoke $r2.<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

     label1:
        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        $r4 = new org.openhab.habdroid.ui.AnchorWebViewClient;

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getUrl()>();

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r7 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$200(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r6);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo mConnectionInfo>;

        $r8 = staticinvoke <org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo: java.lang.String access$300(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ConnectionInfo)>($r6);

        specialinvoke $r4.<org.openhab.habdroid.ui.AnchorWebViewClient: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r7, $r8);

        virtualinvoke $r2.<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>($r4);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        $r9 = virtualinvoke $r2.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r9.<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>(1);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        $r9 = virtualinvoke $r2.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r9.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(1);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$WebViewHolder: android.webkit.WebView mWebView>;

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getUrl()>();

        virtualinvoke $r2.<android.webkit.WebView: void loadUrl(java.lang.String)>($r5);

        return;
    }
