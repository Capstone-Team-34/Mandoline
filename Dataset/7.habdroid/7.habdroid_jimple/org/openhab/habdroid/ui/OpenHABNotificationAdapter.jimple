org.openhab.habdroid.ui.OpenHABNotificationAdapter extends android.support.v7.widget.RecyclerView$Adapter
private final android.content.Context mContext
private final android.view.LayoutInflater mInflater
private final java.util.ArrayList mItems
private final java.lang.String mOpenHABBaseUrl
private final java.lang.String mOpenHABPassword
private final java.lang.String mOpenHABUsername
    public void <init>(android.content.Context, java.util.ArrayList, java.lang.String, java.lang.String, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        android.content.Context $r1;
        java.util.ArrayList r2;
        java.lang.String $r3, $r4, $r5;
        android.view.LayoutInflater $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$Adapter: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.util.ArrayList mItems> = r2;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABBaseUrl> = $r3;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABUsername> = $r4;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABPassword> = $r5;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: android.content.Context mContext> = $r1;

        $r6 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: android.view.LayoutInflater mInflater> = $r6;

        return;
    }
    public int getItemCount()
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }
    public volatile void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder, int)
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        int $i0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter1: int;

        $r2 = (org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder) $r1;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: void onBindViewHolder(org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder,int)>($r2, $i0);

        return;
    }
    public void onBindViewHolder(org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder, int)
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder $r1;
        int $i0;
        android.widget.TextView $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        org.openhab.habdroid.model.OpenHABNotification r5;
        android.content.Context $r6;
        java.util.Date $r7;
        long $l1;
        java.lang.CharSequence $r8;
        java.lang.String $r9, $r13, $r14;
        java.util.Locale $r10;
        java.lang.Object[] $r11;
        org.openhab.habdroid.util.MySmartImageView $r12;
        java.lang.Integer $r15;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder;

        $i0 := @parameter1: int;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.util.ArrayList mItems>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r5 = (org.openhab.habdroid.model.OpenHABNotification) $r4;

        $r2 = $r1.<org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder: android.widget.TextView mCreatedView>;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: android.content.Context mContext>;

        $r7 = virtualinvoke r5.<org.openhab.habdroid.model.OpenHABNotification: java.util.Date getCreated()>();

        $l1 = virtualinvoke $r7.<java.util.Date: long getTime()>();

        $r8 = staticinvoke <android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>($r6, $l1, 60000L, 604800000L, 0);

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r2 = $r1.<org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder: android.widget.TextView mMessageView>;

        $r9 = virtualinvoke r5.<org.openhab.habdroid.model.OpenHABNotification: java.lang.String getMessage()>();

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r9);

        $r9 = virtualinvoke r5.<org.openhab.habdroid.model.OpenHABNotification: java.lang.String getIcon()>();

        if $r9 == null goto label1;

        $r10 = <java.util.Locale: java.util.Locale US>;

        $r11 = newarray (java.lang.Object)[2];

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABBaseUrl>;

        $r11[0] = $r9;

        $r9 = virtualinvoke r5.<org.openhab.habdroid.model.OpenHABNotification: java.lang.String getIcon()>();

        $r9 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r9);

        $r11[1] = $r9;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r10, "%s/images/%s.png", $r11);

        $r12 = $r1.<org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView>;

        $r13 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABUsername>;

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: java.lang.String mOpenHABPassword>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131230842);

        virtualinvoke $r12.<org.openhab.habdroid.util.MySmartImageView: void setImageUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>($r9, $r13, $r14, $r15);

        return;

     label1:
        $r12 = $r1.<org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder: org.openhab.habdroid.util.MySmartImageView mIconView>;

        virtualinvoke $r12.<org.openhab.habdroid.util.MySmartImageView: void setImageResource(int)>(2131230842);

        return;
    }
    public volatile android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        android.view.ViewGroup $r1;
        int $i0;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder onCreateViewHolder(android.view.ViewGroup,int)>($r1, $i0);

        return $r2;
    }
    public org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        org.openhab.habdroid.ui.OpenHABNotificationAdapter r0;
        android.view.ViewGroup $r1;
        int $i0;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder $r2;
        android.view.LayoutInflater $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationAdapter;

        $r1 := @parameter0: android.view.ViewGroup;

        $i0 := @parameter1: int;

        $r2 = new org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: android.view.LayoutInflater mInflater>;

        specialinvoke $r2.<org.openhab.habdroid.ui.OpenHABNotificationAdapter$NotificationViewHolder: void <init>(android.view.LayoutInflater,android.view.ViewGroup)>($r3, $r1);

        return $r2;
    }
