org.openhab.habdroid.ui.OpenHABNotificationFragment$2 extends java.lang.Object implements org.openhab.habdroid.util.MyHttpClient$ResponseHandler
final org.openhab.habdroid.ui.OpenHABNotificationFragment this$0
    void <init>(org.openhab.habdroid.ui.OpenHABNotificationFragment)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment$2 r0;
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment$2;

        $r1 := @parameter0: org.openhab.habdroid.ui.OpenHABNotificationFragment;

        r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onFailure(okhttp3.Call, int, okhttp3.Headers, byte[], java.lang.Throwable)
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment$2 r0;
        okhttp3.Call $r1;
        int $i0;
        okhttp3.Headers $r2;
        byte[] $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment$2;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: java.lang.Throwable;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0>;

        staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: void access$100(org.openhab.habdroid.ui.OpenHABNotificationFragment)>($r6);

        $r5 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String access$200()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "Notifications request failure");

        return;
    }
    public void onSuccess(okhttp3.Call, int, okhttp3.Headers, byte[])
    {
        org.openhab.habdroid.ui.OpenHABNotificationFragment$2 r0;
        okhttp3.Call $r1;
        int $i0, $i1;
        okhttp3.Headers $r2;
        byte[] $r3;
        org.json.JSONArray r4;
        java.lang.String r5, $r8;
        org.openhab.habdroid.model.OpenHABNotification r6;
        org.openhab.habdroid.ui.OpenHABNotificationFragment $r7;
        java.util.ArrayList $r9;
        org.json.JSONObject $r10;
        org.json.JSONException r11, r14;
        java.io.UnsupportedEncodingException r12;
        org.openhab.habdroid.ui.OpenHABNotificationAdapter $r13;

        r0 := @this: org.openhab.habdroid.ui.OpenHABNotificationFragment$2;

        $r1 := @parameter0: okhttp3.Call;

        $i0 := @parameter1: int;

        $r2 := @parameter2: okhttp3.Headers;

        $r3 := @parameter3: byte[];

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0>;

        staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: void access$100(org.openhab.habdroid.ui.OpenHABNotificationFragment)>($r7);

        r5 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String access$200()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r5, "Notifications request success");

        r5 = new java.lang.String;

     label01:
        specialinvoke r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

     label02:
        r4 = new org.json.JSONArray;

     label03:
        specialinvoke r4.<org.json.JSONArray: void <init>(java.lang.String)>(r5);

        r5 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.lang.String access$200()>();

        $r8 = virtualinvoke r4.<org.json.JSONArray: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r5, $r8);

     label04:
        $r7 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0>;

     label05:
        $r9 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.util.ArrayList access$300(org.openhab.habdroid.ui.OpenHABNotificationFragment)>($r7);

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

     label06:
        $i0 = 0;

     label07:
        $i1 = virtualinvoke r4.<org.json.JSONArray: int length()>();

     label08:
        if $i0 >= $i1 goto label19;

     label09:
        $r10 = virtualinvoke r4.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

     label10:
        r6 = new org.openhab.habdroid.model.OpenHABNotification;

     label11:
        specialinvoke r6.<org.openhab.habdroid.model.OpenHABNotification: void <init>(org.json.JSONObject)>($r10);

     label12:
        $r7 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0>;

     label13:
        $r9 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: java.util.ArrayList access$300(org.openhab.habdroid.ui.OpenHABNotificationFragment)>($r7);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label14:
        $i0 = $i0 + 1;

        goto label07;

     label15:
        r11 := @caughtexception;

     label16:
        virtualinvoke r11.<org.json.JSONException: void printStackTrace()>();

     label17:
        goto label14;

     label18:
        r12 := @caughtexception;

        virtualinvoke r12.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return;

     label19:
        $r7 = r0.<org.openhab.habdroid.ui.OpenHABNotificationFragment$2: org.openhab.habdroid.ui.OpenHABNotificationFragment this$0>;

     label20:
        $r13 = staticinvoke <org.openhab.habdroid.ui.OpenHABNotificationFragment: org.openhab.habdroid.ui.OpenHABNotificationAdapter access$400(org.openhab.habdroid.ui.OpenHABNotificationFragment)>($r7);

        virtualinvoke $r13.<org.openhab.habdroid.ui.OpenHABNotificationAdapter: void notifyDataSetChanged()>();

     label21:
        return;

     label22:
        r14 := @caughtexception;

        virtualinvoke r14.<org.json.JSONException: void printStackTrace()>();

        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label18;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label18;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label18;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label18;
        catch org.json.JSONException from label01 to label02 with label22;
        catch org.json.JSONException from label03 to label04 with label22;
        catch org.json.JSONException from label05 to label06 with label22;
        catch org.json.JSONException from label07 to label08 with label22;
        catch org.json.JSONException from label09 to label10 with label15;
        catch org.json.JSONException from label11 to label12 with label15;
        catch org.json.JSONException from label13 to label14 with label15;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label18;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label18;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label18;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label18;
        catch org.json.JSONException from label16 to label17 with label22;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label18;
        catch org.json.JSONException from label20 to label21 with label22;
    }
