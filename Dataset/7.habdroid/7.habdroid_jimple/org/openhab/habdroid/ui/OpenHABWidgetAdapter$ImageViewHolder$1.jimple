org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1 extends java.lang.Object implements com.loopj.android.image.SmartImage
final org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder this$0
final java.lang.String val$state
    void <init>(org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1 r0;
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder $r1;
        java.lang.String $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1;

        $r1 := @parameter0: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder;

        $r2 := @parameter1: java.lang.String;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder this$0> = $r1;

        r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1: java.lang.String val$state> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public android.graphics.Bitmap getBitmap(android.content.Context)
    {
        org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1 r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3;
        int $i0;
        byte[] $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1: java.lang.String val$state>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABWidgetAdapter$ImageViewHolder$1: java.lang.String val$state>;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(",");

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, 0);

        $i0 = lengthof $r4;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r4, 0, $i0);

        return $r5;
    }
