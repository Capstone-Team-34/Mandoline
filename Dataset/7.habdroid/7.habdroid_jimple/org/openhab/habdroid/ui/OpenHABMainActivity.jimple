org.openhab.habdroid.ui.OpenHABMainActivity extends android.support.v7.app.AppCompatActivity implements org.openhab.habdroid.core.OpenHABTrackerReceiver de.duenndns.ssl.MemorizingResponder
private static final int DRAWER_ABOUT
private static final int DRAWER_NOTIFICATIONS
private static final int DRAWER_PREFERENCES
public static java.lang.String GCM_SENDER_ID
private static final int INFO_REQUEST_CODE
public static final long REGISTRATION_EXPIRY_TIME_MS
private static final int SETTINGS_REQUEST_CODE
private static final java.lang.String TAG
private static final int WRITE_NFC_TAG_REQUEST_CODE
private android.content.BroadcastReceiver dreamReceiver
private org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient
private org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter
private java.util.List mDrawerItemList
private android.support.v4.widget.DrawerLayout mDrawerLayout
private android.support.v7.app.ActionBarDrawerToggle mDrawerToggle
private com.google.android.gms.gcm.GoogleCloudMessaging mGcm
private java.lang.String mNfcData
private java.lang.Integer mNotificationPosition
private org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings
private org.openhab.habdroid.core.OpenHABTracker mOpenHABTracker
private int mOpenHABVersion
private java.lang.String mPendingNfcPage
private android.widget.ProgressBar mProgressBar
private android.app.ProgressDialog mProgressDialog
private android.content.SharedPreferences mSettings
private java.util.ArrayList mSitemapList
private org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo
private android.support.v7.widget.Toolbar mToolbar
private android.support.v7.widget.RecyclerView$RecycledViewPool mViewPool
private java.lang.String openHABBaseUrl
private java.lang.String openHABPassword
private java.lang.String openHABServiceType
private java.lang.String openHABUsername
private android.support.v4.view.ViewPager pager
private org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter
private android.app.Dialog selectSitemapDialog
private java.lang.String sitemapRootUrl
private org.openhab.habdroid.ui.StateRetainFragment stateFragment
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/ui/OpenHABMainActivity;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.ui.OpenHABMainActivity$1 $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl> = "http://demo.openhab.org:8080/";

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername> = "";

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword> = "";

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings> = null;

        $r1 = new org.openhab.habdroid.ui.OpenHABMainActivity$1;

        specialinvoke $r1.<org.openhab.habdroid.ui.OpenHABMainActivity$1: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.BroadcastReceiver dreamReceiver> = $r1;

        return;
    }
    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        return r0;
    }
    static java.lang.String access$100(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        return r1;
    }
    static org.openhab.habdroid.util.MyAsyncHttpClient access$1000(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        org.openhab.habdroid.util.MyAsyncHttpClient r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        return r1;
    }
    static void access$1100(org.openhab.habdroid.ui.OpenHABMainActivity, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void selectSitemap(java.lang.String)>($r1);

        return;
    }
    static java.util.ArrayList access$1300(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList>;

        return r1;
    }
    static void access$1400(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void loadDrawerItems()>();

        return;
    }
    static void access$1500(org.openhab.habdroid.ui.OpenHABMainActivity, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showAlertDialog(java.lang.String)>($r1);

        return;
    }
    static void access$1600(org.openhab.habdroid.ui.OpenHABMainActivity, java.util.List)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.util.List $r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter1: java.util.List;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showSitemapSelectionDialog(java.util.List)>($r1);

        return;
    }
    static com.google.android.gms.gcm.GoogleCloudMessaging access$1700(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        com.google.android.gms.gcm.GoogleCloudMessaging r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: com.google.android.gms.gcm.GoogleCloudMessaging mGcm>;

        return r1;
    }
    static java.lang.String access$200(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        return r1;
    }
    static java.lang.String access$300(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        return r1;
    }
    static void access$400(org.openhab.habdroid.ui.OpenHABMainActivity, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void loadSitemapList(java.lang.String)>($r1);

        return;
    }
    static java.util.List access$500(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        java.util.List r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        return r1;
    }
    static android.support.v4.widget.DrawerLayout access$600(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        android.support.v4.widget.DrawerLayout r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        return r1;
    }
    static void access$700(org.openhab.habdroid.ui.OpenHABMainActivity, org.openhab.habdroid.model.OpenHABSitemap)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        org.openhab.habdroid.model.OpenHABSitemap $r1;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter1: org.openhab.habdroid.model.OpenHABSitemap;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openSitemap(org.openhab.habdroid.model.OpenHABSitemap)>($r1);

        return;
    }
    static void access$800(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        specialinvoke $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openAbout()>();

        return;
    }
    static int access$900(org.openhab.habdroid.ui.OpenHABMainActivity)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        int i0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        i0 = $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion>;

        return i0;
    }
    static int access$902(org.openhab.habdroid.ui.OpenHABMainActivity, int)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity $r0;
        int $i0;

        $r0 := @parameter0: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter1: int;

        $r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion> = $i0;

        return $i0;
    }
    private void launchVoiceRecognition()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.Intent r1;
        android.content.ActivityNotFoundException r2;
        java.lang.String $r3;
        android.app.PendingIntent $r4;
        android.net.Uri $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lorg/openhab/habdroid/core/OpenHABVoiceService;");

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("openHABBaseUrl", $r3);

        $r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>(r0, 0, r1, 0);

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.speech.action.RECOGNIZE_SPEECH");

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131624255);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.speech.extra.PROMPT", $r3);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.speech.extra.LANGUAGE_MODEL", "free_form");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.speech.extra.MAX_RESULTS", 1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.speech.extra.RESULTS_PENDINGINTENT", $r4);

     label1:
        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void startActivity(android.content.Intent)>(r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        r1 = new android.content.Intent;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("https://market.android.com/details?id=com.google.android.voicesearch");

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r5);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void startActivity(android.content.Intent)>(r1);

        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }
    private void loadDrawerItems()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.util.List $r1;
        java.util.ArrayList $r2;
        java.lang.String $r3;
        org.openhab.habdroid.ui.drawer.OpenHABDrawerItem $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.openhab.habdroid.model.OpenHABSitemap r7;
        int $i0;
        android.content.res.Resources $r8;
        android.graphics.drawable.Drawable $r9;
        android.graphics.PorterDuff$Mode $r10;
        org.openhab.habdroid.core.notifications.NotificationSettings $r11;
        org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter $r12;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList>;

        if $r2 == null goto label2;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131626361);

        $r4 = staticinvoke <org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: org.openhab.habdroid.ui.drawer.OpenHABDrawerItem headerItem(java.lang.String)>($r3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList>;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.openhab.habdroid.model.OpenHABSitemap) $r6;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r4 = new org.openhab.habdroid.ui.drawer.OpenHABDrawerItem;

        specialinvoke $r4.<org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: void <init>(org.openhab.habdroid.model.OpenHABSitemap)>(r7);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r4 = staticinvoke <org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: org.openhab.habdroid.ui.drawer.OpenHABDrawerItem dividerItem()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, 2131099712);

        $r8 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2131230841);

        $r10 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r10);

        $r11 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings getNotificationSettings()>();

        if $r11 == null goto label3;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r4 = staticinvoke <org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: org.openhab.habdroid.ui.drawer.OpenHABDrawerItem menuItem(java.lang.String,android.graphics.drawable.Drawable,int)>("Notifications", $r9, 100);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        $r8 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2131230844);

        $r10 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r10);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131626359);

        $r4 = staticinvoke <org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: org.openhab.habdroid.ui.drawer.OpenHABDrawerItem menuItem(java.lang.String,android.graphics.drawable.Drawable,int)>($r3, $r9, 102);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r8 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2131230835);

        $r10 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r10);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131623972);

        $r4 = staticinvoke <org.openhab.habdroid.ui.drawer.OpenHABDrawerItem: org.openhab.habdroid.ui.drawer.OpenHABDrawerItem menuItem(java.lang.String,android.graphics.drawable.Drawable,int)>($r3, $r9, 101);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r12 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        virtualinvoke $r12.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void notifyDataSetChanged()>();

        return;
    }
    private void loadSitemapList(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuilder $r3;
        org.openhab.habdroid.util.MyAsyncHttpClient $r5;
        org.openhab.habdroid.ui.OpenHABMainActivity$6 $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading sitemap list from ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/sitemaps");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(1);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/sitemaps");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new org.openhab.habdroid.ui.OpenHABMainActivity$6;

        specialinvoke $r6.<org.openhab.habdroid.ui.OpenHABMainActivity$6: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        virtualinvoke $r5.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$ResponseHandler)>($r1, $r6);

        return;
    }
    private void onNotificationSelected(android.content.Intent)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.Intent $r1, r3;
        android.app.AlertDialog$Builder r2;
        java.lang.String $r4, $r8;
        boolean $z0;
        java.lang.Object[] $r5;
        android.os.Bundle $r6;
        int $i0;
        java.lang.Integer $r7;
        org.openhab.habdroid.core.notifications.NotificationSettings $r9;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r10;
        android.app.AlertDialog $r11;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.content.Intent;

        $r4 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "Notification was selected");

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("notificationId");

        if $z0 == 0 goto label1;

        $r4 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String)>("notificationId");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Notification id = %d", $r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lorg/openhab/habdroid/core/NotificationDeletedBroadcastReceiver;");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.openhab.notification.deleted");

        $r6 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String)>("notificationId");

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("notificationId", $i0);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void sendBroadcast(android.content.Intent)>(r3);

     label1:
        $r9 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings getNotificationSettings()>();

        if $r9 == null goto label2;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openNotifications()>();

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r10.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getCount()>();

        $i0 = $i0 + -1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.Integer mNotificationPosition> = $r7;

     label2:
        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("message");

        if $z0 == 0 goto label3;

        r2 = new android.app.AlertDialog$Builder;

        specialinvoke r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r4 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131624202);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r4);

        $r6 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $r4 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>("message");

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r4);

        $r4 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(17039370);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r4, null);

        $r11 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r11.<android.app.AlertDialog: void show()>();

     label3:
        return;
    }
    private void openAbout()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.Intent r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lorg/openhab/habdroid/ui/OpenHABAboutActivity;");

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("openHABBaseUrl", $r2);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("username", $r2);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("password", $r2);

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("openHABVersion", $i0);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void startActivityForResult(android.content.Intent,int)>(r1, 1004);

        staticinvoke <org.openhab.habdroid.util.Util: void overridePendingTransition(android.app.Activity,boolean)>(r0, 0);

        return;
    }
    private void openSitemap(org.openhab.habdroid.model.OpenHABSitemap)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.model.OpenHABSitemap $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r5;
        android.support.v4.view.ViewPager $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABSitemap;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening sitemap at ");

        $r4 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getHomepageLink()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        $r2 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getHomepageLink()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String sitemapRootUrl> = $r2;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        virtualinvoke $r5.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void clearFragmentList()>();

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r2 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getHomepageLink()>();

        $r4 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getLabel()>();

        virtualinvoke $r5.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void openPage(java.lang.String,java.lang.String)>($r2, $r4);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        virtualinvoke $r6.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(0);

        return;
    }
    private void processIntent(android.content.Intent)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.Intent $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.content.Intent;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Intent != null");

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getAction()>();

        if $r2 == null goto label3;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent action = ");

        $r4 = virtualinvoke $r1.<android.content.Intent: java.lang.String getAction()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r4);

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android.nfc.action.NDEF_DISCOVERED");

        if $z0 == 0 goto label1;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "This is NFC action");

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getDataString()>();

        if $r2 == null goto label3;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC data = ");

        $r4 = virtualinvoke $r1.<android.content.Intent: java.lang.String getDataString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r4);

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getDataString()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData> = $r2;

        return;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("org.openhab.notification.selected");

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void onNotificationSelected(android.content.Intent)>($r1);

        return;

     label2:
        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.VIEW");

        if $z0 == 0 goto label3;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "This is URL Action");

        $r2 = virtualinvoke $r1.<android.content.Intent: java.lang.String getDataString()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData> = $r2;

     label3:
        return;
    }
    private void resetStateFragmentAfterResume(android.support.v4.app.FragmentManager)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.support.v4.app.FragmentManager $r1;
        org.openhab.habdroid.ui.StateRetainFragment $r2;
        android.support.v4.app.FragmentTransaction $r3;
        org.openhab.habdroid.core.OpenHABTracker $r4;
        java.lang.String $r5;
        org.openhab.habdroid.core.NetworkConnectivityInfo $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.support.v4.app.FragmentManager;

        $r2 = new org.openhab.habdroid.ui.StateRetainFragment;

        specialinvoke $r2.<org.openhab.habdroid.ui.StateRetainFragment: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment> = $r2;

        $r3 = virtualinvoke $r1.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r3 = virtualinvoke $r3.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)>($r2, "stateFragment");

        virtualinvoke $r3.<android.support.v4.app.FragmentTransaction: int commit()>();

        $r4 = new org.openhab.habdroid.core.OpenHABTracker;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABServiceType>;

        specialinvoke $r4.<org.openhab.habdroid.core.OpenHABTracker: void <init>(android.content.Context,java.lang.String)>(r0, $r5);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.OpenHABTracker mOpenHABTracker> = $r4;

        $r6 = staticinvoke <org.openhab.habdroid.core.NetworkConnectivityInfo: org.openhab.habdroid.core.NetworkConnectivityInfo currentNetworkConnectivityInfo(android.content.Context)>(r0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo> = $r6;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.OpenHABTracker mOpenHABTracker>;

        virtualinvoke $r4.<org.openhab.habdroid.core.OpenHABTracker: void start()>();

        return;
    }
    private void selectSitemap(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuilder $r3;
        org.openhab.habdroid.util.MyAsyncHttpClient $r5;
        org.openhab.habdroid.ui.OpenHABMainActivity$7 $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading sitemap list from ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/sitemaps");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(1);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/sitemaps");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new org.openhab.habdroid.ui.OpenHABMainActivity$7;

        specialinvoke $r6.<org.openhab.habdroid.ui.OpenHABMainActivity$7: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        virtualinvoke $r5.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$ResponseHandler)>($r1, $r6);

        return;
    }
    private void setupDrawer()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.support.v4.widget.DrawerLayout $r1;
        android.view.View $r2;
        android.widget.ListView r3;
        org.openhab.habdroid.ui.OpenHABMainActivity$2 $r4;
        android.support.v7.app.ActionBarDrawerToggle $r5;
        java.util.ArrayList $r6;
        org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter $r7;
        java.util.List $r8;
        java.lang.String $r9;
        org.openhab.habdroid.ui.OpenHABMainActivity$3 $r10;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.View findViewById(int)>(2131296346);

        $r1 = (android.support.v4.widget.DrawerLayout) $r2;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.widget.DrawerLayout mDrawerLayout> = $r1;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.View findViewById(int)>(2131296387);

        r3 = (android.widget.ListView) $r2;

        $r4 = new org.openhab.habdroid.ui.OpenHABMainActivity$2;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity$2: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,android.app.Activity,android.support.v4.widget.DrawerLayout,int,int)>(r0, r0, $r1, 2131624204, 2131624203);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle> = $r4;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)>($r5);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void setDrawerShadow(int,int)>(2131230824, 8388611);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList> = $r6;

        $r7 = new org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.List mDrawerItemList>;

        specialinvoke $r7.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, 2131427406, $r8);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter> = $r7;

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        virtualinvoke $r7.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void setOpenHABUsername(java.lang.String)>($r9);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r7.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void setOpenHABPassword(java.lang.String)>($r9);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        virtualinvoke r3.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r7);

        $r10 = new org.openhab.habdroid.ui.OpenHABMainActivity$3;

        specialinvoke $r10.<org.openhab.habdroid.ui.OpenHABMainActivity$3: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        virtualinvoke r3.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r10);

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void loadDrawerItems()>();

        return;
    }
    private void setupPager()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r1;
        android.support.v4.app.FragmentManager $r2;
        android.content.res.Resources $r3;
        int $i0;
        java.lang.String $r4;
        android.view.View $r5;
        android.support.v4.view.ViewPager $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = new org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        specialinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>($r2);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter> = $r1;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(2131361801);

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setColumnsNumber(int)>($i0);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABUsername(java.lang.String)>($r4);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABPassword(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.View findViewById(int)>(2131296442);

        $r6 = (android.support.v4.view.ViewPager) $r5;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager> = $r6;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        virtualinvoke $r6.<android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)>($r1);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        virtualinvoke $r6.<android.support.v4.view.ViewPager: void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>($r1);

        return;
    }
    private void setupToolbar()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.view.View $r1;
        android.support.v7.widget.Toolbar $r2;
        android.support.v7.app.ActionBar $r3;
        android.widget.ProgressBar $r4;
        android.support.v7.widget.Toolbar$LayoutParams $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.View findViewById(int)>(2131296435);

        $r2 = (android.support.v7.widget.Toolbar) $r1;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.widget.Toolbar mToolbar> = $r2;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.widget.Toolbar mToolbar>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setSupportActionBar(android.support.v7.widget.Toolbar)>($r2);

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r3.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r3.<android.support.v7.app.ActionBar: void setHomeButtonEnabled(boolean)>(1);

     label1:
        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.widget.Toolbar mToolbar>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.Toolbar: android.view.View findViewById(int)>(2131296528);

        $r4 = (android.widget.ProgressBar) $r1;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.widget.ProgressBar mProgressBar> = $r4;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.widget.ProgressBar mProgressBar>;

        $r5 = new android.support.v7.widget.Toolbar$LayoutParams;

        specialinvoke $r5.<android.support.v7.widget.Toolbar$LayoutParams: void <init>(int)>(8388629);

        virtualinvoke $r4.<android.widget.ProgressBar: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setProgressIndicatorVisible(boolean)>(1);

        return;
    }
    private void showAlertDialog(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFinishing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showMessageToUser(java.lang.String,int,int)>($r1, 1, 5);

        return;
    }
    private void showCertificateDialog(int, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int $i0;
        java.lang.String $r1;
        android.app.AlertDialog$Builder r2, $r3;
        boolean $z0;
        org.openhab.habdroid.ui.OpenHABMainActivity$9 $r4;
        org.openhab.habdroid.ui.OpenHABMainActivity$10 $r5;
        org.openhab.habdroid.ui.OpenHABMainActivity$11 $r6;
        android.app.AlertDialog $r7;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFinishing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = new android.app.AlertDialog$Builder;

        specialinvoke r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r3 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r1);

        virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131626363);

        $r4 = new org.openhab.habdroid.ui.OpenHABMainActivity$9;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity$9: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,int)>(r0, $i0);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131626365, $r4);

        $r5 = new org.openhab.habdroid.ui.OpenHABMainActivity$10;

        specialinvoke $r5.<org.openhab.habdroid.ui.OpenHABMainActivity$10: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,int)>(r0, $i0);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131626366, $r5);

        $r6 = new org.openhab.habdroid.ui.OpenHABMainActivity$11;

        specialinvoke $r6.<org.openhab.habdroid.ui.OpenHABMainActivity$11: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,int)>(r0, $i0);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131626364, $r6);

        $r7 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r7.<android.app.AlertDialog: void show()>();

        return;
    }
    private void showSitemapSelectionDialog(java.util.List)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.util.List r1;
        android.app.AlertDialog$Builder r2;
        android.view.WindowManager$BadTokenException r3;
        java.util.ArrayList r4;
        java.lang.String $r5;
        int i0, $i1;
        java.lang.Object $r6;
        org.openhab.habdroid.model.OpenHABSitemap $r7;
        java.lang.CharSequence[] $r8;
        java.lang.Object[] $r9;
        org.openhab.habdroid.ui.OpenHABMainActivity$8 $r10;
        android.app.AlertDialog $r11;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 := @parameter0: java.util.List;

        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "Opening sitemap selection dialog");

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (org.openhab.habdroid.model.OpenHABSitemap) $r6;

        $r5 = virtualinvoke $r7.<org.openhab.habdroid.model.OpenHABSitemap: java.lang.String getLabel()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        r2 = new android.app.AlertDialog$Builder;

        specialinvoke r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r5 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131626360);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r5);

     label3:
        i0 = interfaceinvoke r4.<java.util.List: int size()>();

     label4:
        $r8 = newarray (java.lang.CharSequence)[i0];

     label5:
        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

     label6:
        $r8 = (java.lang.CharSequence[]) $r9;

        $r10 = new org.openhab.habdroid.ui.OpenHABMainActivity$8;

     label7:
        specialinvoke $r10.<org.openhab.habdroid.ui.OpenHABMainActivity$8: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,java.util.List)>(r0, r1);

        r2 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r8, $r10);

        $r11 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

     label8:
        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.Dialog selectSitemapDialog> = $r11;

        return;

     label9:
        r3 := @caughtexception;

        virtualinvoke r3.<android.view.WindowManager$BadTokenException: void printStackTrace()>();

        return;

        catch android.view.WindowManager$BadTokenException from label3 to label4 with label9;
        catch android.view.WindowManager$BadTokenException from label5 to label6 with label9;
        catch android.view.WindowManager$BadTokenException from label7 to label8 with label9;
    }
    protected void checkFullscreen()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        boolean $z0;
        android.view.Window $r1;
        android.view.View $r2;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFullscreenEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $i0 = virtualinvoke $r2.<android.view.View: int getSystemUiVisibility()>();

        $i0 = $i0 | 2;

        $i0 = $i0 | 4096;

        $i0 = $i0 | 4;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r2.<android.view.View: void setSystemUiVisibility(int)>($i0);

     label1:
        return;
    }
    public void gcmRegisterBackground()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.util.concurrent.Executor $r1;
        org.openhab.habdroid.core.notifications.NotificationSettings $r2;
        com.google.android.gms.gcm.GoogleCloudMessaging $r3;
        org.openhab.habdroid.ui.OpenHABMainActivity$12 $r4;
        java.lang.Void[] $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String GCM_SENDER_ID> = null;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings getNotificationSettings()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: com.google.android.gms.gcm.GoogleCloudMessaging mGcm>;

        if $r3 != null goto label2;

        $r3 = staticinvoke <com.google.android.gms.gcm.GoogleCloudMessaging: com.google.android.gms.gcm.GoogleCloudMessaging getInstance(android.content.Context)>(r0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: com.google.android.gms.gcm.GoogleCloudMessaging mGcm> = $r3;

     label2:
        $r4 = new org.openhab.habdroid.ui.OpenHABMainActivity$12;

        specialinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity$12: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        $r1 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r5 = newarray (java.lang.Void)[3];

        $r5[0] = null;

        $r5[1] = null;

        $r5[2] = null;

        virtualinvoke $r4.<org.openhab.habdroid.ui.OpenHABMainActivity$12: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r1, $r5);

        return;
    }
    public org.openhab.habdroid.util.MyAsyncHttpClient getAsyncHttpClient()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.util.MyAsyncHttpClient r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        return r1;
    }
    public org.openhab.habdroid.core.notifications.NotificationSettings getNotificationSettings()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.net.URL r1;
        java.net.MalformedURLException r2;
        org.openhab.habdroid.util.MySyncHttpClient r3;
        org.openhab.habdroid.core.notifications.NotificationSettings $r4;
        android.content.SharedPreferences $r5;
        java.lang.String $r6, $r7;
        boolean $z0;
        java.lang.Boolean $r8, $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings>;

        if $r4 != null goto label6;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        if $r5 != null goto label1;

        return null;

     label1:
        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_alturl", null);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 != 0 goto label2;

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label2;

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 == 0 goto label3;

     label2:
        $r6 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "Remote URL, username or password are empty, no GCM registration will be made");

        return null;

     label3:
        r1 = new java.net.URL;

     label4:
        specialinvoke r1.<java.net.URL: void <init>(java.lang.String)>($r6);

     label5:
        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        r3 = new org.openhab.habdroid.util.MySyncHttpClient;

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslhost", 0);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslcert", 0);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r3.<org.openhab.habdroid.util.MySyncHttpClient: void <init>(android.content.Context,java.lang.Boolean,java.lang.Boolean)>(r0, $r8, $r9);

        $r4 = new org.openhab.habdroid.core.notifications.NotificationSettings;

        specialinvoke $r4.<org.openhab.habdroid.core.notifications.NotificationSettings: void <init>(java.net.URL,org.openhab.habdroid.util.MySyncHttpClient)>(r1, r3);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings> = $r4;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_username", $r6);

        virtualinvoke $r4.<org.openhab.habdroid.core.notifications.NotificationSettings: void setOpenHABCloudUsername(java.lang.String)>($r6);

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_password", $r6);

        virtualinvoke $r4.<org.openhab.habdroid.core.notifications.NotificationSettings: void setOpenHABCloudPassword(java.lang.String)>($r6);

     label6:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings mNotifySettings>;

        return $r4;

     label7:
        r2 := @caughtexception;

        $r6 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse the baseURL to an URL: ");

        $r7 = virtualinvoke r2.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r7);

        return null;

        catch java.net.MalformedURLException from label4 to label5 with label7;
    }
    public java.lang.String getOpenHABBaseUrl()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        return r1;
    }
    public java.lang.String getOpenHABPassword()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        return r1;
    }
    public java.lang.String getOpenHABUsername()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        return r1;
    }
    public int getOpenHABVersion()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        i0 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion>;

        return i0;
    }
    public android.support.v7.widget.RecyclerView$RecycledViewPool getViewPool()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.support.v7.widget.RecyclerView$RecycledViewPool r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.widget.RecyclerView$RecycledViewPool mViewPool>;

        return r1;
    }
    protected boolean isFullscreenEnabled()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        boolean $z0, z1;
        int $i0;
        android.content.SharedPreferences $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label2;

        z1 = 1;

     label1:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_fullscreen", 0);

        if z1 == 0 goto label3;

        if $z0 == 0 goto label3;

        return 1;

     label2:
        z1 = 0;

        goto label1;

     label3:
        return 0;
    }
    public void makeDecision(int, java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int $i0;
        java.lang.String $r1, $r2, $r5;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.content.SharedPreferences $r6;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("MTM is asking for decision on id = %d", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslcert", 0);

        if $z0 == 0 goto label1;

        staticinvoke <de.duenndns.ssl.MemorizingTrustManager: void interactResult(int,int)>($i0, 2);

        return;

     label1:
        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showCertificateDialog(int,java.lang.String)>($i0, $r1);

        return;
    }
    public void onActivityResult(int, int, android.content.Intent)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int $i0, $i1;
        android.content.Intent $r1;
        java.lang.String $r2, $r5;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.content.pm.PackageManager $r6;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("onActivityResult requestCode = %d, resultCode = %d", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r5);

        lookupswitch($i0)
        {
            case 1002: goto label2;
            case 1003: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Restarting after settings");

        $r6 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getPackageName()>();

        $r1 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r2);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(32768);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void finish()>();

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void startActivity(android.content.Intent)>($r1);

        return;

     label3:
        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Got back from Write NFC tag");

        return;
    }
    public void onBackPressed()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.Object[] $r1;
        boolean $z0;
        java.lang.String $r2, $r5;
        android.support.v4.view.ViewPager $r3, $r6;
        int $i0;
        java.lang.Integer $r4;
        android.support.v7.app.ActionBarDrawerToggle $r7;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $z0 = 1;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("onBackPressed() I\'m at the %d page", $r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r5);

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        if $i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFullscreenEnabled()>();

        if $z0 != 0 goto label4;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onBackPressed()>();

        return;

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r6.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $i0 = $i0 + -1;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i0, 1);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void updateTitle()>();

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        if $i0 != 0 goto label3;

     label2:
        virtualinvoke $r7.<android.support.v7.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)>($z0);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;
    }
    public void onBonjourDiscoveryFinished()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.app.ProgressDialog $r1;
        java.lang.Exception $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

     label1:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.ProgressDialog mProgressDialog>;

        virtualinvoke $r1.<android.app.ProgressDialog: void dismiss()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.ProgressDialog mProgressDialog> = null;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void onBonjourDiscoveryStarted()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;
        android.app.ProgressDialog $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131624246);

        $r2 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", $r1, 1);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.ProgressDialog mProgressDialog> = $r2;

        return;
    }
    public void onConfigurationChanged(android.content.res.Configuration)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.res.Configuration $r1;
        android.support.v7.app.ActionBarDrawerToggle $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r2.<android.support.v7.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.os.Bundle $r1;
        android.content.Intent r2;
        java.lang.String $r3, $r10;
        android.content.SharedPreferences $r4, $r5;
        org.openhab.habdroid.util.MyAsyncHttpClient $r6;
        boolean $z0;
        java.lang.Boolean $r7, $r8;
        android.view.Window $r9;
        android.support.v7.widget.RecyclerView$RecycledViewPool $r11;
        android.os.Parcelable $r12;
        org.openhab.habdroid.core.NetworkConnectivityInfo $r13;
        int $i0;
        java.util.ArrayList $r14;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r15;
        android.content.BroadcastReceiver $r16;
        android.content.IntentFilter $r17;
        android.content.SharedPreferences$Editor $r18, $r19;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onCreate()");

        staticinvoke <android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>(r0, 2131820547, 0);

        $r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings> = $r5;

        $r6 = new org.openhab.habdroid.util.MyAsyncHttpClient;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslhost", 0);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_sslcert", 0);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke $r6.<org.openhab.habdroid.util.MyAsyncHttpClient: void <init>(android.content.Context,java.lang.Boolean,java.lang.Boolean)>(r0, $r7, $r8);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient> = $r6;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_screentimeroff", 0);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.Window getWindow()>();

        virtualinvoke $r9.<android.view.Window: void addFlags(int)>(128);

     label1:
        $r3 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getString(int)>(2131626378);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABServiceType> = $r3;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_username", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername> = $r3;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_password", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword> = $r3;

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r6.<org.openhab.habdroid.util.MyAsyncHttpClient: void setBasicAuth(java.lang.String,java.lang.String,boolean)>($r3, $r10, 1);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        virtualinvoke $r6.<org.openhab.habdroid.util.MyAsyncHttpClient: void setTimeout(int)>(30000);

        staticinvoke <org.openhab.habdroid.util.Util: void setActivityTheme(android.app.Activity)>(r0);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setContentView(int)>(2131427356);

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setupToolbar()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setupDrawer()>();

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void gcmRegisterBackground()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setupPager()>();

        $r11 = new android.support.v7.widget.RecyclerView$RecycledViewPool;

        specialinvoke $r11.<android.support.v7.widget.RecyclerView$RecycledViewPool: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.widget.RecyclerView$RecycledViewPool mViewPool> = $r11;

        staticinvoke <de.duenndns.ssl.MemorizingTrustManager: void setResponder(de.duenndns.ssl.MemorizingResponder)>(r0);

        if $r1 == null goto label2;

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("openHABBaseUrl");

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl> = $r3;

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sitemapRootUrl");

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String sitemapRootUrl> = $r3;

        $r12 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("startedWithNetworkConnectivityInfo");

        $r13 = (org.openhab.habdroid.core.NetworkConnectivityInfo) $r12;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo> = $r13;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("openHABVersion");

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion> = $i0;

        $r14 = virtualinvoke $r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("sitemapList");

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList> = $r14;

        $r15 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke $r15.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABBaseUrl(java.lang.String)>($r3);

     label2:
        $r14 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList>;

        if $r14 != null goto label3;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList> = $r14;

     label3:
        r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.Intent getIntent()>();

        if r2 == null goto label4;

        r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.Intent getIntent()>();

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void processIntent(android.content.Intent)>(r2);

     label4:
        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFullscreenEnabled()>();

        if $z0 == 0 goto label5;

        $r16 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.BroadcastReceiver dreamReceiver>;

        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.DREAMING_STARTED");

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r16, $r17);

        $r16 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.BroadcastReceiver dreamReceiver>;

        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.DREAMING_STOPPED");

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r16, $r17);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void checkFullscreen()>();

     label5:
        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("firstStart", 1);

        $r18 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        if $z0 == 0 goto label6;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lorg/openhab/habdroid/ui/IntroActivity;");

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void startActivity(android.content.Intent)>(r2);

        $r19 = interfaceinvoke $r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("firstStart", 0);

        interfaceinvoke $r19.<android.content.SharedPreferences$Editor: void apply()>();

     label6:
        staticinvoke <org.openhab.habdroid.core.OnUpdateBroadcastReceiver: void updateComparableVersion(android.content.SharedPreferences$Editor)>($r18);

        interfaceinvoke $r18.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }
    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.view.Menu $r1;
        android.view.MenuInflater $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.view.Menu;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131492864, $r1);

        return 1;
    }
    public void onError(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showMessageToUser(java.lang.String,int,int)>($r1, 1, 5);

        return;
    }
    protected void onNewIntent(android.content.Intent)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.content.Intent $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void processIntent(android.content.Intent)>($r1);

        return;
    }
    public void onNfcTag(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r2, $r5, $r6;
        android.net.Uri $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r7;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "onNfcTag()");

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC Scheme = ");

        $r2 = virtualinvoke $r3.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC Host = ");

        $r2 = virtualinvoke $r3.<android.net.Uri: java.lang.String getHost()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC Path = ");

        $r2 = virtualinvoke $r3.<android.net.Uri: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        $r2 = virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("item");

        $r1 = virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("command");

        virtualinvoke $r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("itemType");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "This is a sitemap tag without parameters");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/sitemaps");

        $r1 = virtualinvoke $r3.<android.net.Uri: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mPendingNfcPage> = $r1;

     label1:
        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData> = "";

        return;

     label2:
        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target item = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r6);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/items/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        staticinvoke <org.openhab.habdroid.util.Util: void sendItemCommand(org.openhab.habdroid.util.MyAsyncHttpClient,java.lang.String,java.lang.String)>($r7, $r2, $r1);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void finish()>();

        goto label1;
    }
    public void onOpenHABTracked(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r3, $r5;
        android.content.SharedPreferences $r2;
        boolean $z0;
        org.openhab.habdroid.util.MyAsyncHttpClient $r4;
        org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter $r6;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r7;
        java.lang.StringBuilder $r8;
        org.openhab.habdroid.ui.OpenHABMainActivity$4 $r9;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl> = $r1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_url", null);

        $r3 = staticinvoke <org.openhab.habdroid.util.Util: java.lang.String normalizeUrl(java.lang.String)>($r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_username", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername> = $r3;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_password", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword> = $r3;

     label1:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        $r5 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r4.<org.openhab.habdroid.util.MyAsyncHttpClient: void setBasicAuth(java.lang.String,java.lang.String,boolean)>($r3, $r5, 1);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke $r6.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void setOpenHABBaseUrl(java.lang.String)>($r3);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        virtualinvoke $r6.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void setOpenHABUsername(java.lang.String)>($r3);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter mDrawerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r6.<org.openhab.habdroid.ui.drawer.OpenHABDrawerAdapter: void setOpenHABPassword(java.lang.String)>($r3);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke $r7.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABBaseUrl(java.lang.String)>($r3);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername>;

        virtualinvoke $r7.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABUsername(java.lang.String)>($r3);

        $r7 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword>;

        virtualinvoke $r7.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setOpenHABPassword(java.lang.String)>($r3);

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label3;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void onNfcTag(java.lang.String)>($r1);

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mPendingNfcPage>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openPageIfPending(java.lang.String)>($r1);

        return;

     label2:
        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_username", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername> = $r3;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_remote_password", null);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword> = $r3;

        goto label1;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rest/bindings");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.util.MyAsyncHttpClient mAsyncHttpClient>;

        $r9 = new org.openhab.habdroid.ui.OpenHABMainActivity$4;

        specialinvoke $r9.<org.openhab.habdroid.ui.OpenHABMainActivity$4: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity,java.lang.String)>(r0, $r1);

        virtualinvoke $r4.<org.openhab.habdroid.util.MyAsyncHttpClient: java.lang.Object get(java.lang.String,org.openhab.habdroid.util.MyHttpClient$TextResponseHandler)>($r1, $r9);

        return;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.view.MenuItem $r1;
        android.support.v4.view.ViewPager $r2;
        int $i0;
        android.support.v7.app.ActionBarDrawerToggle $r3;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        if $i0 <= 0 goto label1;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        if $i0 != 16908332 goto label1;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void onBackPressed()>();

        return 0;

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        $z0 = virtualinvoke $r3.<android.support.v7.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        if $z0 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 2131296407: goto label3;
            default: goto label2;
        };

     label2:
        $z0 = specialinvoke r0.<android.support.v7.app.AppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label3:
        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void launchVoiceRecognition()>();

     label4:
        return 1;
    }
    protected void onPostCreate(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.os.Bundle $r1;
        android.support.v7.app.ActionBarDrawerToggle $r2;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>($r1);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r2.<android.support.v7.app.ActionBarDrawerToggle: void syncState()>();

        return;
    }
    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.view.Menu $r1;
        android.graphics.PorterDuff$Mode $r2;
        android.view.MenuItem $r3;
        boolean $z0;
        android.graphics.drawable.Drawable $r4;
        int $i0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.view.Menu;

        $r3 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131296407);

        $z0 = staticinvoke <android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>(r0);

        interfaceinvoke $r3.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>($z0);

        $r4 = interfaceinvoke $r3.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, 2131099782);

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r2);

        return 1;
    }
    public void onRestoreInstanceState(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.os.Bundle $r1;
        int $i0;
        android.support.v4.view.ViewPager $r2;
        java.lang.String $r3, $r6;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("currentFragment", 0);

        if $i0 == 0 goto label1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        $r3 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Loaded current page = %d", $r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r6);

     label1:
        return;
    }
    public void onResume()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r17;
        android.content.Intent $r2;
        java.lang.Class $r3;
        android.app.PendingIntent $r4;
        android.nfc.NfcAdapter $r5;
        boolean $z0;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r6;
        android.content.res.Resources $r7;
        int $i0;
        android.support.v4.app.FragmentManager $r8;
        android.support.v4.app.Fragment $r9;
        org.openhab.habdroid.ui.StateRetainFragment $r10;
        java.util.List $r11;
        java.lang.Boolean $r12;
        org.openhab.habdroid.core.NetworkConnectivityInfo $r13, $r14;
        java.lang.Integer $r15;
        java.lang.Object[] $r16;
        android.support.v4.view.ViewPager $r18;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onResume()");

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onResume()>();

        $r2 = new android.content.Intent;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, $r3);

        $r2 = virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, $r2, 0);

        $r5 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>(r0);

        if $r5 == null goto label01;

        $r5 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>(r0);

        virtualinvoke $r5.<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>(r0, $r4, null, null);

     label01:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mNfcData>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label02;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "We have NFC data from launch");

     label02:
        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r7 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(2131361801);

        virtualinvoke $r6.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setColumnsNumber(int)>($i0);

        $r8 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r9 = virtualinvoke $r8.<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>("stateFragment");

        $r10 = (org.openhab.habdroid.ui.StateRetainFragment) $r9;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment> = $r10;

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        if $r10 == null goto label03;

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r11 = virtualinvoke $r10.<org.openhab.habdroid.ui.StateRetainFragment: java.util.List getFragmentList()>();

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i0 != 0 goto label09;

     label03:
        $z0 = 1;

     label04:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label05;

        $r13 = staticinvoke <org.openhab.habdroid.core.NetworkConnectivityInfo: org.openhab.habdroid.core.NetworkConnectivityInfo currentNetworkConnectivityInfo(android.content.Context)>(r0);

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo>;

        $z0 = virtualinvoke $r13.<org.openhab.habdroid.core.NetworkConnectivityInfo: boolean equals(org.openhab.habdroid.core.NetworkConnectivityInfo)>($r14);

        if $z0 != 0 goto label10;

     label05:
        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void resetStateFragmentAfterResume(android.support.v4.app.FragmentManager)>($r8);

     label06:
        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mPendingNfcPage>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label07;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mPendingNfcPage>;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openPageIfPending(java.lang.String)>($r1);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String mPendingNfcPage> = null;

     label07:
        $r15 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.Integer mNotificationPosition>;

        if $r15 == null goto label08;

        $r15 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.Integer mNotificationPosition>;

        $i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openPageIfPending(int)>($i0);

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.Integer mNotificationPosition> = null;

     label08:
        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void checkFullscreen()>();

        return;

     label09:
        $z0 = 0;

        goto label04;

     label10:
        $r13 = staticinvoke <org.openhab.habdroid.core.NetworkConnectivityInfo: org.openhab.habdroid.core.NetworkConnectivityInfo currentNetworkConnectivityInfo(android.content.Context)>(r0);

        $r14 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo>;

        $z0 = virtualinvoke $r13.<org.openhab.habdroid.core.NetworkConnectivityInfo: boolean equals(org.openhab.habdroid.core.NetworkConnectivityInfo)>($r14);

        if $z0 != 0 goto label11;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "Connectivity type changed while I was out, or zero fragments found, need to restart");

        specialinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void resetStateFragmentAfterResume(android.support.v4.app.FragmentManager)>($r8);

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        virtualinvoke $r6.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void clearFragmentList()>();

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setTitle(int)>(2131623978);

        return;

     label11:
        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "State fragment found");

        $r6 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r11 = virtualinvoke $r10.<org.openhab.habdroid.ui.StateRetainFragment: java.util.List getFragmentList()>();

        virtualinvoke $r6.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void setFragmentList(java.util.List)>($r11);

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r16 = newarray (java.lang.Object)[1];

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r11 = virtualinvoke $r10.<org.openhab.habdroid.ui.StateRetainFragment: java.util.List getFragmentList()>();

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r16[0] = $r15;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Loaded %d fragments", $r16);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r17);

        $r18 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $i0 = virtualinvoke $r10.<org.openhab.habdroid.ui.StateRetainFragment: int getCurrentPage()>();

        virtualinvoke $r18.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        goto label06;
    }
    public void onSaveInstanceState(android.os.Bundle)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r7;
        java.lang.Object[] $r3;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r4;
        java.util.List $r5;
        int $i0;
        java.lang.Integer $r6;
        android.support.v4.view.ViewPager $r8;
        org.openhab.habdroid.ui.StateRetainFragment $r9;
        org.openhab.habdroid.core.NetworkConnectivityInfo $r10;
        java.util.ArrayList $r11;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "onSaveInstanceState");

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r5 = virtualinvoke $r4.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: java.util.List getFragmentList()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Saving %d fragments", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r7);

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r8.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Saving current page = %d", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r7);

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r5 = virtualinvoke $r4.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: java.util.List getFragmentList()>();

        virtualinvoke $r9.<org.openhab.habdroid.ui.StateRetainFragment: void setFragmentList(java.util.List)>($r5);

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.StateRetainFragment stateFragment>;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r8.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        virtualinvoke $r9.<org.openhab.habdroid.ui.StateRetainFragment: void setCurrentPage(int)>($i0);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("openHABBaseUrl", $r2);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String sitemapRootUrl>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sitemapRootUrl", $r2);

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r8.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("currentFragment", $i0);

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.NetworkConnectivityInfo mStartedWithNetworkConnectivityInfo>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("startedWithNetworkConnectivityInfo", $r10);

        $i0 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: int mOpenHABVersion>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("openHABVersion", $i0);

        $r11 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.util.ArrayList mSitemapList>;

        virtualinvoke $r1.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("sitemapList", $r11);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>($r1);

        return;
    }
    public void onStop()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        boolean $z0;
        java.lang.String $r1;
        org.openhab.habdroid.core.OpenHABTracker $r2;
        android.app.Dialog $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "onStop()");

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onStop()>();

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.OpenHABTracker mOpenHABTracker>;

        if $r2 == null goto label1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.OpenHABTracker mOpenHABTracker>;

        virtualinvoke $r2.<org.openhab.habdroid.core.OpenHABTracker: void stop()>();

     label1:
        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.Dialog selectSitemapDialog>;

        if $r3 == null goto label2;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.Dialog selectSitemapDialog>;

        $z0 = virtualinvoke $r3.<android.app.Dialog: boolean isShowing()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.app.Dialog selectSitemapDialog>;

        virtualinvoke $r3.<android.app.Dialog: void dismiss()>();

     label2:
        return;
    }
    public void onWidgetSelected(org.openhab.habdroid.model.OpenHABLinkedPage, org.openhab.habdroid.ui.OpenHABWidgetListFragment)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.model.OpenHABLinkedPage $r1;
        org.openhab.habdroid.ui.OpenHABWidgetListFragment $r2;
        boolean $z0;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;
        java.lang.Object[] $r6;
        int $i0;
        java.lang.Integer $r7;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r8;
        android.support.v4.view.ViewPager $r9;
        android.support.v7.app.ActionBarDrawerToggle $r10;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABLinkedPage;

        $r2 := @parameter1: org.openhab.habdroid.ui.OpenHABWidgetListFragment;

        $z0 = 1;

        $r3 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got widget link = ");

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABLinkedPage: java.lang.String getLink()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

        $r3 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $i0 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABWidgetListFragment: int getPosition()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Link came from fragment on position %d", $r6);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r5);

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABWidgetListFragment: int getPosition()>();

        $i0 = $i0 + 1;

        virtualinvoke $r8.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void openPage(org.openhab.habdroid.model.OpenHABLinkedPage,int)>($r1, $i0);

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r8 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r8.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getCount()>();

        $i0 = $i0 + -1;

        virtualinvoke $r9.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void updateTitle()>();

        $r10 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        $r9 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r9.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke $r10.<android.support.v7.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)>($z0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void openNotifications()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r1;
        org.openhab.habdroid.core.notifications.NotificationSettings $r2;
        android.support.v4.view.ViewPager $r3;
        int $i0;
        android.support.v7.app.ActionBarDrawerToggle $r4;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        if $r1 == null goto label1;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.core.notifications.NotificationSettings getNotificationSettings()>();

        virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void openNotifications(org.openhab.habdroid.core.notifications.NotificationSettings)>($r2);

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r1.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getCount()>();

        $i0 = $i0 + -1;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

     label1:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r4.<android.support.v7.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)>(0);

        return;
    }
    public void openPageIfPending(int)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int $i0;
        android.support.v4.view.ViewPager $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter0: int;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        return;
    }
    public void openPageIfPending(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r2;
        int $i0;
        android.support.v4.view.ViewPager $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getPositionByUrl(java.lang.String)>($r1);

        if $i0 < 0 goto label1;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void openPageIfPending(int)>($i0);

        return;

     label1:
        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: void openPage(java.lang.String,java.lang.String)>($r1, null);

        $r3 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i0 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getCount()>();

        $i0 = $i0 + -1;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        return;
    }
    void sendMTMDecision(int, int)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        int $i0, $i1;
        android.content.Intent r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Sending decision to MTM");

        r1 = new android.content.Intent;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("de.duenndns.ssl.DECISION/");

        $r2 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>($r2);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("de.duenndns.ssl.DECISION.decisionId", $i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("de.duenndns.ssl.DECISION.decisionChoice", $i1);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }
    public void setOpenHABBaseUrl(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABBaseUrl> = $r1;

        return;
    }
    public void setOpenHABPassword(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABPassword> = $r1;

        return;
    }
    public void setOpenHABUsername(java.lang.String)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String openHABUsername> = $r1;

        return;
    }
    protected void setProgressIndicatorVisible(boolean)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        boolean $z0;
        android.widget.ProgressBar $r1;
        byte $b0;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.widget.ProgressBar mProgressBar>;

        if $r1 == null goto label3;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.widget.ProgressBar mProgressBar>;

        if $z0 == 0 goto label2;

        $b0 = 0;

     label1:
        virtualinvoke $r1.<android.widget.ProgressBar: void setVisibility(int)>($b0);

        return;

     label2:
        $b0 = 4;

        goto label1;

     label3:
        return;
    }
    public void showMessageToUser(java.lang.String, int, int)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void showMessageToUser(java.lang.String,int,int,int,android.view.View$OnClickListener)>($r1, $i0, $i1, 0, null);

        return;
    }
    public void showMessageToUser(java.lang.String, int, int, int, android.view.View$OnClickListener)
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        java.lang.String $r1, $r5, $r6;
        int $i0, $i1, $i2;
        android.view.View$OnClickListener $r2;
        android.app.AlertDialog$Builder r3, $r9;
        boolean $z0;
        android.content.SharedPreferences $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.CharSequence $r10;
        org.openhab.habdroid.ui.OpenHABMainActivity$5 $r11;
        android.app.AlertDialog $r12;
        android.view.View $r13;
        android.support.design.widget.Snackbar $r14;
        android.widget.Toast $r15;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 := @parameter4: android.view.View$OnClickListener;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: boolean isFinishing()>();

        if $z0 != 0 goto label14;

        if $r1 != null goto label01;

        return;

     label01:
        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $z0 = interfaceinvoke $r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("default_openhab_debug_messages", 0);

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_alturl", "");

        $r4 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.content.SharedPreferences mSettings>;

        $r6 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("default_openhab_url", "");

        if $z0 == 0 goto label02;

        if $i1 == 4 goto label14;

     label02:
        if $z0 != 0 goto label03;

        if $i1 == 0 goto label14;

     label03:
        lookupswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label08;
            default: goto label04;
        };

     label04:
        lookupswitch($i0)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label13;
            default: goto label05;
        };

     label05:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message type not implemented");

        throw $r7;

     label06:
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 1 goto label07;

        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote URL set, show message: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r6);

        goto label04;

     label07:
        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No remote URL set, don\'t show message: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r1);

        return;

     label08:
        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 <= 1 goto label09;

        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Local URL set, show message: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r6);

        goto label04;

     label09:
        $r5 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No local URL set, don\'t show message: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r1);

        return;

     label10:
        r3 = new android.app.AlertDialog$Builder;

        specialinvoke r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r9 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r1);

        $r10 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.CharSequence getText(int)>(17039370);

        $r11 = new org.openhab.habdroid.ui.OpenHABMainActivity$5;

        specialinvoke $r11.<org.openhab.habdroid.ui.OpenHABMainActivity$5: void <init>(org.openhab.habdroid.ui.OpenHABMainActivity)>(r0);

        virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r10, $r11);

        $r12 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r12.<android.app.AlertDialog: void show()>();

        return;

     label11:
        $r13 = virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.view.View findViewById(int)>(16908290);

        $r14 = staticinvoke <android.support.design.widget.Snackbar: android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int)>($r13, $r1, 0);

        if $r2 == null goto label12;

        if $i2 == 0 goto label12;

        virtualinvoke $r14.<android.support.design.widget.Snackbar: android.support.design.widget.Snackbar setAction(int,android.view.View$OnClickListener)>($i2, $r2);

        virtualinvoke $r14.<android.support.design.widget.Snackbar: android.support.design.widget.BaseTransientBottomBar setDuration(int)>(-2);

     label12:
        virtualinvoke $r14.<android.support.design.widget.Snackbar: void show()>();

        return;

     label13:
        $r15 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r1, 1);

        virtualinvoke $r15.<android.widget.Toast: void show()>();

     label14:
        return;
    }
    public void updateTitle()
    {
        org.openhab.habdroid.ui.OpenHABMainActivity r0;
        android.support.v4.view.ViewPager $r1;
        int $i0, $i1;
        org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;

        r0 := @this: org.openhab.habdroid.ui.OpenHABMainActivity;

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $i0 = $i0 + 1;

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i1 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getActualColumnsNumber()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: java.lang.CharSequence getPageTitle(int)>($i0);

        $r4 = <org.openhab.habdroid.ui.OpenHABMainActivity: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateTitle: current ");

        $r1 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: android.support.v4.view.ViewPager pager>;

        $i1 = virtualinvoke $r1.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shown ");

        $r2 = r0.<org.openhab.habdroid.ui.OpenHABMainActivity: org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter pagerAdapter>;

        $i1 = virtualinvoke $r2.<org.openhab.habdroid.ui.OpenHABFragmentPagerAdapter: int getActualColumnsNumber()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> title ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r6);

        virtualinvoke r0.<org.openhab.habdroid.ui.OpenHABMainActivity: void setTitle(java.lang.CharSequence)>($r3);

        return;
    }
