org.openhab.habdroid.model.OpenHABWidget extends java.lang.Object
java.util.ArrayList children
private java.lang.String encoding
private int height
private java.lang.String icon
private java.lang.Integer iconcolor
private java.lang.String id
private org.openhab.habdroid.model.OpenHABItem item
private java.lang.String label
private java.lang.Integer labelcolor
private java.lang.Boolean legend
private org.openhab.habdroid.model.OpenHABLinkedPage linkedPage
private boolean mChildrenHasLinkedPages
java.util.ArrayList mappings
private float maxValue
private float minValue
org.openhab.habdroid.model.OpenHABWidget parent
private java.lang.String period
private int refresh
private java.lang.String service
private java.lang.String state
private float step
private java.lang.String type
private java.lang.String url
private java.lang.Integer valuecolor
    public void <init>()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.util.ArrayList $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String period> = "";

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String service> = "";

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Boolean legend> = null;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float minValue> = 0.0F;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float maxValue> = 100.0F;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float step> = 1.0F;

        r0.<org.openhab.habdroid.model.OpenHABWidget: int refresh> = 0;

        r0.<org.openhab.habdroid.model.OpenHABWidget: int height> = 0;

        r0.<org.openhab.habdroid.model.OpenHABWidget: boolean mChildrenHasLinkedPages> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList children> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList mappings> = $r1;

        return;
    }
    private java.lang.String fixColorName(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("orange");

        if $z0 == 0 goto label1;

        return "#FFA500";

     label1:
        return $r1;
    }
    public void addChildWidget(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.model.OpenHABWidget r0, $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        if $r1 == null goto label1;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList children>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }
    public boolean childrenHasLinkedPages()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        boolean $z0;
        java.util.ArrayList $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r0 = (org.openhab.habdroid.model.OpenHABWidget) $r3;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public boolean childrenHasNonlinkedPages()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        boolean $z0;
        java.util.ArrayList $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r0 = (org.openhab.habdroid.model.OpenHABWidget) $r3;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 != 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public java.util.ArrayList getChildren()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.util.ArrayList r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList children>;

        return r1;
    }
    public java.lang.String getEncoding()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String encoding>;

        return r1;
    }
    public int getHeight()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        i0 = r0.<org.openhab.habdroid.model.OpenHABWidget: int height>;

        return i0;
    }
    public java.lang.String getIcon()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String icon>;

        return r1;
    }
    public java.lang.Integer getIconColor()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.Integer r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer iconcolor>;

        return r1;
    }
public abstract java.lang.String getIconPath() { 
// no body
} 
    public java.lang.String getId()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String id>;

        return r1;
    }
    public org.openhab.habdroid.model.OpenHABItem getItem()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABItem r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem item>;

        return r1;
    }
    public java.lang.String getLabel()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String label>;

        return r1;
    }
    public java.lang.Integer getLabelColor()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.Integer r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer labelcolor>;

        return r1;
    }
    public java.lang.Boolean getLegend()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.Boolean r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Boolean legend>;

        return r1;
    }
    public org.openhab.habdroid.model.OpenHABLinkedPage getLinkedPage()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABLinkedPage r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABLinkedPage linkedPage>;

        return r1;
    }
    public org.openhab.habdroid.model.OpenHABWidgetMapping getMapping(int)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        org.openhab.habdroid.model.OpenHABWidgetMapping $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $i0 := @parameter0: int;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList mappings>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (org.openhab.habdroid.model.OpenHABWidgetMapping) $r1;

        return $r3;
    }
    public java.util.ArrayList getMappings()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.util.ArrayList r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList mappings>;

        return r1;
    }
    public float getMaxValue()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        f0 = r0.<org.openhab.habdroid.model.OpenHABWidget: float maxValue>;

        return f0;
    }
    public float getMinValue()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        f0 = r0.<org.openhab.habdroid.model.OpenHABWidget: float minValue>;

        return f0;
    }
    public java.lang.String getPeriod()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String period>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return "D";

     label1:
        $r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String period>;

        return $r1;
    }
    public int getRefresh()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        i0 = r0.<org.openhab.habdroid.model.OpenHABWidget: int refresh>;

        return i0;
    }
    public java.lang.String getService()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String service>;

        return r1;
    }
    public java.lang.String getState()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String state>;

        return r1;
    }
    public float getStep()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        f0 = r0.<org.openhab.habdroid.model.OpenHABWidget: float step>;

        return f0;
    }
    public java.lang.String getType()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String type>;

        return r1;
    }
    public java.lang.String getUrl()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String url>;

        return r1;
    }
    public java.lang.Integer getValueColor()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.Integer r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer valuecolor>;

        return r1;
    }
    public boolean hasChildren()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList children>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasItem()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABItem $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasLinkedPage()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABLinkedPage $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABLinkedPage linkedPage>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasMappings()
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 = r0.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList mappings>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void setEncoding(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String encoding> = $r1;

        return;
    }
    public void setHeight(int)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $i0 := @parameter0: int;

        r0.<org.openhab.habdroid.model.OpenHABWidget: int height> = $i0;

        return;
    }
    public void setIcon(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String icon> = $r1;

        return;
    }
    public void setIconColor(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1, $r4;
        java.lang.IllegalArgumentException r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.Integer;

     label1:
        $r4 = specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String fixColorName(java.lang.String)>($r1);

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r4);

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i0);

     label2:
        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer iconcolor> = $r3;

        return;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color was ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        $r1 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer iconcolor> = null;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
    public void setId(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String id> = $r1;

        return;
    }
    public void setItem(org.openhab.habdroid.model.OpenHABItem)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABItem $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABItem;

        r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABItem item> = $r1;

        return;
    }
    public void setLabel(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String label> = $r1;

        return;
    }
    public void setLabelColor(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1, $r4;
        java.lang.IllegalArgumentException r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.Integer;

     label1:
        $r4 = specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String fixColorName(java.lang.String)>($r1);

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r4);

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i0);

     label2:
        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer labelcolor> = $r3;

        return;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color was ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        $r1 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer labelcolor> = null;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
    public void setLegend(java.lang.Boolean)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.Boolean $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.Boolean;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Boolean legend> = $r1;

        return;
    }
    public void setLinkedPage(org.openhab.habdroid.model.OpenHABLinkedPage)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        org.openhab.habdroid.model.OpenHABLinkedPage $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABLinkedPage;

        r0.<org.openhab.habdroid.model.OpenHABWidget: org.openhab.habdroid.model.OpenHABLinkedPage linkedPage> = $r1;

        return;
    }
    public void setMaxValue(float)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float $f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $f0 := @parameter0: float;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float maxValue> = $f0;

        return;
    }
    public void setMinValue(float)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float $f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $f0 := @parameter0: float;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float minValue> = $f0;

        return;
    }
    public void setPeriod(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String period> = $r1;

        return;
    }
    public void setRefresh(int)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        int $i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(100, $i0);

        r0.<org.openhab.habdroid.model.OpenHABWidget: int refresh> = $i0;

        return;
    }
    public void setService(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String service> = $r1;

        return;
    }
    public void setState(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String state> = $r1;

        return;
    }
    public void setStep(float)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        float $f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $f0 := @parameter0: float;

        r0.<org.openhab.habdroid.model.OpenHABWidget: float step> = $f0;

        return;
    }
    public void setType(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String type> = $r1;

        return;
    }
    public void setUrl(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String url> = $r1;

        return;
    }
    public void setValueColor(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget r0;
        java.lang.String $r1, $r4;
        java.lang.IllegalArgumentException r2;
        java.lang.Integer $r3;
        int $i0;
        java.lang.StringBuilder $r5;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.Integer;

     label1:
        $r4 = specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String fixColorName(java.lang.String)>($r1);

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r4);

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i0);

     label2:
        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer valuecolor> = $r3;

        return;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color was ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        $r1 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenHABWidget", $r1);

        r0.<org.openhab.habdroid.model.OpenHABWidget: java.lang.Integer valuecolor> = null;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
