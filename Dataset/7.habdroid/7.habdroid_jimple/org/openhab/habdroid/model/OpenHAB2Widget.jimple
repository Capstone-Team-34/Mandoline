org.openhab.habdroid.model.OpenHAB2Widget extends org.openhab.habdroid.model.OpenHABWidget
private static final java.lang.String TAG
private java.lang.String iconFormat
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/model/OpenHAB2Widget;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        org.openhab.habdroid.model.OpenHAB2Widget r0;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Widget;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String iconFormat> = "null";

        return;
    }
    private void <init>(org.openhab.habdroid.model.OpenHABWidget, org.json.JSONObject, java.lang.String)
    {
        org.openhab.habdroid.model.OpenHAB2Widget r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        org.json.JSONObject $r2, $r7;
        java.lang.String $r3, $r10, $r11;
        org.openhab.habdroid.model.OpenHABWidgetMapping r4;
        java.util.ArrayList $r5;
        boolean $z0;
        org.openhab.habdroid.model.OpenHABItem $r6;
        org.openhab.habdroid.model.OpenHABLinkedPage $r8;
        org.json.JSONArray $r9;
        int i0, $i1;
        double $d0;
        float $f0;
        java.lang.Boolean $r12;
        org.json.JSONException r13, r14;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Widget;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String iconFormat> = $r3;

        r0.<org.openhab.habdroid.model.OpenHAB2Widget: org.openhab.habdroid.model.OpenHABWidget parent> = $r1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.util.ArrayList children> = $r5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.util.ArrayList mappings> = $r5;

     label01:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("item");

     label02:
        if $z0 == 0 goto label04;

        $r6 = new org.openhab.habdroid.model.OpenHABItem;

     label03:
        $r7 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("item");

        specialinvoke $r6.<org.openhab.habdroid.model.OpenHABItem: void <init>(org.json.JSONObject)>($r7);

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setItem(org.openhab.habdroid.model.OpenHABItem)>($r6);

     label04:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("linkedPage");

     label05:
        if $z0 == 0 goto label07;

        $r8 = new org.openhab.habdroid.model.OpenHABLinkedPage;

     label06:
        $r7 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("linkedPage");

        specialinvoke $r8.<org.openhab.habdroid.model.OpenHABLinkedPage: void <init>(org.json.JSONObject)>($r7);

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setLinkedPage(org.openhab.habdroid.model.OpenHABLinkedPage)>($r8);

     label07:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("mappings");

     label08:
        if $z0 == 0 goto label19;

     label09:
        $r9 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("mappings");

     label10:
        i0 = 0;

     label11:
        $i1 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label12:
        if i0 >= $i1 goto label19;

     label13:
        $r7 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

     label14:
        r4 = new org.openhab.habdroid.model.OpenHABWidgetMapping;

     label15:
        $r10 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("command");

        $r11 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("label");

        specialinvoke r4.<org.openhab.habdroid.model.OpenHABWidgetMapping: void <init>(java.lang.String,java.lang.String)>($r10, $r11);

     label16:
        $r5 = r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.util.ArrayList mappings>;

     label17:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label18:
        i0 = i0 + 1;

        goto label11;

     label19:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("type");

     label20:
        if $z0 == 0 goto label22;

     label21:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setType(java.lang.String)>($r10);

     label22:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("widgetId");

     label23:
        if $z0 == 0 goto label25;

     label24:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("widgetId");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setId(java.lang.String)>($r10);

     label25:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("label");

     label26:
        if $z0 == 0 goto label28;

     label27:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("label");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setLabel(java.lang.String)>($r10);

     label28:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("icon");

     label29:
        if $z0 == 0 goto label31;

     label30:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("icon");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setIcon(java.lang.String)>($r10);

     label31:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("url");

     label32:
        if $z0 == 0 goto label34;

     label33:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("url");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setUrl(java.lang.String)>($r10);

     label34:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("minValue");

     label35:
        if $z0 == 0 goto label39;

     label36:
        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("minValue");

     label37:
        $f0 = (float) $d0;

     label38:
        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setMinValue(float)>($f0);

     label39:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("maxValue");

     label40:
        if $z0 == 0 goto label44;

     label41:
        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("maxValue");

     label42:
        $f0 = (float) $d0;

     label43:
        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setMaxValue(float)>($f0);

     label44:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("step");

     label45:
        if $z0 == 0 goto label49;

     label46:
        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("step");

     label47:
        $f0 = (float) $d0;

     label48:
        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setStep(float)>($f0);

     label49:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("refresh");

     label50:
        if $z0 == 0 goto label52;

     label51:
        i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("refresh");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setRefresh(int)>(i0);

     label52:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("period");

     label53:
        if $z0 == 0 goto label55;

     label54:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("period");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setPeriod(java.lang.String)>($r10);

     label55:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("service");

     label56:
        if $z0 == 0 goto label58;

     label57:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("service");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setService(java.lang.String)>($r10);

     label58:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("legend");

     label59:
        if $z0 == 0 goto label61;

     label60:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("legend");

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setLegend(java.lang.Boolean)>($r12);

     label61:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("height");

     label62:
        if $z0 == 0 goto label64;

     label63:
        i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("height");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setHeight(int)>(i0);

     label64:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("iconcolor");

     label65:
        if $z0 == 0 goto label67;

     label66:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("iconcolor");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setIconColor(java.lang.String)>($r10);

     label67:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("labelcolor");

     label68:
        if $z0 == 0 goto label70;

     label69:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("labelcolor");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setLabelColor(java.lang.String)>($r10);

     label70:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("valuecolor");

     label71:
        if $z0 == 0 goto label73;

     label72:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("valuecolor");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setValueColor(java.lang.String)>($r10);

     label73:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("encoding");

     label74:
        if $z0 == 0 goto label76;

     label75:
        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("encoding");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: void setEncoding(java.lang.String)>($r10);

     label76:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("widgets");

        if $z0 == 0 goto label85;

     label77:
        $r9 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("widgets");

     label78:
        i0 = 0;

     label79:
        $i1 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label80:
        if i0 >= $i1 goto label85;

     label81:
        $r2 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        staticinvoke <org.openhab.habdroid.model.OpenHAB2Widget: org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromJson(org.openhab.habdroid.model.OpenHABWidget,org.json.JSONObject,java.lang.String)>(r0, $r2, $r3);

     label82:
        i0 = i0 + 1;

        goto label79;

     label83:
        r13 := @caughtexception;

        virtualinvoke r13.<org.json.JSONException: void printStackTrace()>();

        goto label76;

     label84:
        r14 := @caughtexception;

        virtualinvoke r14.<org.json.JSONException: void printStackTrace()>();

     label85:
        $r1 = r0.<org.openhab.habdroid.model.OpenHAB2Widget: org.openhab.habdroid.model.OpenHABWidget parent>;

        virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: void addChildWidget(org.openhab.habdroid.model.OpenHABWidget)>(r0);

        return;

        catch org.json.JSONException from label01 to label02 with label83;
        catch org.json.JSONException from label03 to label05 with label83;
        catch org.json.JSONException from label06 to label08 with label83;
        catch org.json.JSONException from label09 to label10 with label83;
        catch org.json.JSONException from label11 to label12 with label83;
        catch org.json.JSONException from label13 to label14 with label83;
        catch org.json.JSONException from label15 to label16 with label83;
        catch org.json.JSONException from label17 to label18 with label83;
        catch org.json.JSONException from label19 to label20 with label83;
        catch org.json.JSONException from label21 to label23 with label83;
        catch org.json.JSONException from label24 to label26 with label83;
        catch org.json.JSONException from label27 to label29 with label83;
        catch org.json.JSONException from label30 to label32 with label83;
        catch org.json.JSONException from label33 to label35 with label83;
        catch org.json.JSONException from label36 to label37 with label83;
        catch org.json.JSONException from label38 to label40 with label83;
        catch org.json.JSONException from label41 to label42 with label83;
        catch org.json.JSONException from label43 to label45 with label83;
        catch org.json.JSONException from label46 to label47 with label83;
        catch org.json.JSONException from label48 to label50 with label83;
        catch org.json.JSONException from label51 to label53 with label83;
        catch org.json.JSONException from label54 to label56 with label83;
        catch org.json.JSONException from label57 to label59 with label83;
        catch org.json.JSONException from label60 to label62 with label83;
        catch org.json.JSONException from label63 to label65 with label83;
        catch org.json.JSONException from label66 to label68 with label83;
        catch org.json.JSONException from label69 to label71 with label83;
        catch org.json.JSONException from label72 to label74 with label83;
        catch org.json.JSONException from label75 to label76 with label83;
        catch org.json.JSONException from label77 to label78 with label84;
        catch org.json.JSONException from label79 to label80 with label84;
        catch org.json.JSONException from label81 to label82 with label84;
    }
    public static org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromJson(org.openhab.habdroid.model.OpenHABWidget, org.json.JSONObject, java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidget $r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;
        org.openhab.habdroid.model.OpenHAB2Widget $r3;

        $r0 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 := @parameter2: java.lang.String;

        $r3 = new org.openhab.habdroid.model.OpenHAB2Widget;

        specialinvoke $r3.<org.openhab.habdroid.model.OpenHAB2Widget: void <init>(org.openhab.habdroid.model.OpenHABWidget,org.json.JSONObject,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }
    public java.lang.String getIconPath()
    {
        org.openhab.habdroid.model.OpenHAB2Widget r0;
        java.lang.Exception r1;
        org.openhab.habdroid.model.OpenHABItem $r2;
        java.lang.String $r3, r4, $r6;
        java.lang.Object[] $r5;
        boolean $z0;
        int $i0;
        java.lang.Integer $r7;
        java.lang.NumberFormatException $r8;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Widget;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: org.openhab.habdroid.model.OpenHABItem getItem()>();

        if $r2 == null goto label16;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getState()>();

        r4 = $r3;

        if $r3 != null goto label02;

        $r3 = <org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "itemState is null");

     label01:
        $r5 = newarray (java.lang.Object)[3];

        $r3 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String getIcon()>();

        $r5[0] = $r3;

        $r5[1] = r4;

        r4 = r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String iconFormat>;

        $r5[2] = r4;

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("icon/%s?state=%s&format=%s", $r5);

        return r4;

     label02:
        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Color");

        if $z0 != 0 goto label03;

        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getGroupType()>();

        if $r6 == null goto label12;

        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getGroupType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Color");

        if $z0 == 0 goto label12;

     label03:
        $r3 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String getType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Slider");

        if $z0 != 0 goto label04;

        $r3 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String getType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Switch");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: boolean hasMappings()>();

        if $z0 != 0 goto label01;

     label04:
        $i0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: int getStateAsBrightness()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label05:
        r4 = $r3;

     label06:
        $r6 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String getType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Switch");

     label07:
        if $z0 == 0 goto label01;

     label08:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("0");

     label09:
        if $z0 == 0 goto label10;

        r4 = "OFF";

        goto label01;

     label10:
        r4 = "ON";

        goto label01;

     label11:
        r1 := @caughtexception;

        r4 = "OFF";

        goto label01;

     label12:
        $r6 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: java.lang.String getType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Switch");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Widget: boolean hasMappings()>();

        if $z0 != 0 goto label01;

        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Rollershutter");

        if $z0 != 0 goto label01;

        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getGroupType()>();

        if $r6 == null goto label13;

        $r6 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABItem: java.lang.String getGroupType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Rollershutter");

        if $z0 != 0 goto label01;

     label13:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label14:
        if $i0 != 0 goto label15;

        r4 = "OFF";

        goto label01;

     label15:
        r4 = "ON";

        goto label01;

     label16:
        r4 = null;

        goto label01;

     label17:
        $r8 := @caughtexception;

        goto label01;

        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.NumberFormatException from label13 to label14 with label17;
    }
