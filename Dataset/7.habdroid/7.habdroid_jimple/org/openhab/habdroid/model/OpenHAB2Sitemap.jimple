org.openhab.habdroid.model.OpenHAB2Sitemap extends org.openhab.habdroid.model.OpenHABSitemap
public static final android.os.Parcelable$Creator CREATOR
    static void <clinit>()
    {
        org.openhab.habdroid.model.OpenHAB2Sitemap$1 $r0;

        $r0 = new org.openhab.habdroid.model.OpenHAB2Sitemap$1;

        specialinvoke $r0.<org.openhab.habdroid.model.OpenHAB2Sitemap$1: void <init>()>();

        <org.openhab.habdroid.model.OpenHAB2Sitemap: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
    public void <init>(android.os.Parcel)
    {
        org.openhab.habdroid.model.OpenHAB2Sitemap r0;
        android.os.Parcel $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Sitemap;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABSitemap: void <init>(android.os.Parcel)>($r1);

        return;
    }
    public void <init>(org.json.JSONObject)
    {
        org.openhab.habdroid.model.OpenHAB2Sitemap r0;
        org.json.JSONObject $r1;
        org.json.JSONException r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Sitemap;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABSitemap: void <init>()>();

     label01:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("name");

     label02:
        if $z0 == 0 goto label04;

     label03:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: void setName(java.lang.String)>($r3);

     label04:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("label");

     label05:
        if $z0 == 0 goto label07;

     label06:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("label");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: void setLabel(java.lang.String)>($r3);

     label07:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("link");

     label08:
        if $z0 == 0 goto label10;

     label09:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: void setLink(java.lang.String)>($r3);

     label10:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("icon");

     label11:
        if $z0 == 0 goto label13;

     label12:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("icon");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: void setIcon(java.lang.String)>($r3);

     label13:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("homepage");

     label14:
        if $z0 == 0 goto label18;

     label15:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("homepage");

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: void setHomepageLink(java.lang.String)>($r3);

     label16:
        return;

     label17:
        r2 := @caughtexception;

        virtualinvoke r2.<org.json.JSONException: void printStackTrace()>();

     label18:
        return;

        catch org.json.JSONException from label01 to label02 with label17;
        catch org.json.JSONException from label03 to label05 with label17;
        catch org.json.JSONException from label06 to label08 with label17;
        catch org.json.JSONException from label09 to label11 with label17;
        catch org.json.JSONException from label12 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
    }
    public java.lang.String getIconPath()
    {
        org.openhab.habdroid.model.OpenHAB2Sitemap r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: org.openhab.habdroid.model.OpenHAB2Sitemap;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB2Sitemap: java.lang.String getIcon()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("icon/%s", $r1);

        return $r2;
    }
