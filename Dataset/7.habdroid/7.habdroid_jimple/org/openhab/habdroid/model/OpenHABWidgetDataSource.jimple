org.openhab.habdroid.model.OpenHABWidgetDataSource extends java.lang.Object
private static final java.lang.String TAG
private java.lang.String icon
private final java.lang.String iconFormat
private java.lang.String id
private java.lang.String link
private org.openhab.habdroid.model.OpenHABWidget rootWidget
private java.lang.String title
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/openhab/habdroid/model/OpenHABWidgetDataSource;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String iconFormat> = $r1;

        return;
    }
    public java.lang.String getIcon()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String icon>;

        return r1;
    }
    public java.lang.String getId()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String id>;

        return r1;
    }
    public java.lang.String getLink()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String link>;

        return r1;
    }
    public java.util.ArrayList getLinkWidgets()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.util.ArrayList r1, $r3;
        org.openhab.habdroid.model.OpenHABWidget $r2, $r5;
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        if $r2 == null goto label7;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label7;

        i0 = 0;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label7;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r2 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean childrenHasLinkedPages()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label6;

        $i1 = 0;

     label4:
        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label6;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        $z0 = virtualinvoke $r5.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label5:
        $i1 = $i1 + 1;

        goto label4;

     label6:
        i0 = i0 + 1;

        goto label1;

     label7:
        return r1;
    }
    public java.util.ArrayList getNonlinkWidgets()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.util.ArrayList r1, $r3;
        org.openhab.habdroid.model.OpenHABWidget $r2, $r6;
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        if $r2 == null goto label8;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label8;

        i0 = 0;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label8;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r2 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        $r5 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getType()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("Frame");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean childrenHasNonlinkedPages()>();

        if $z0 != 0 goto label3;

     label2:
        $r5 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getType()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("Frame");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 != 0 goto label4;

     label3:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label4:
        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label7;

        $i1 = 0;

     label5:
        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label7;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        $z0 = virtualinvoke $r6.<org.openhab.habdroid.model.OpenHABWidget: boolean hasLinkedPage()>();

        if $z0 != 0 goto label6;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label6:
        $i1 = $i1 + 1;

        goto label5;

     label7:
        i0 = i0 + 1;

        goto label1;

     label8:
        return r1;
    }
    public org.openhab.habdroid.model.OpenHABWidget getRootWidget()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        org.openhab.habdroid.model.OpenHABWidget r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        return r1;
    }
    public java.lang.String getTitle()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String title>;

        if $r2 == null goto label2;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String title>;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\[|\\]");

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String title>;

        return $r2;

     label2:
        return "";
    }
    public org.openhab.habdroid.model.OpenHABWidget getWidgetById(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1, $r5;
        java.util.ArrayList $r2;
        int i0, $i1;
        java.lang.Object $r3;
        org.openhab.habdroid.model.OpenHABWidget $r4;
        boolean $z0;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.util.ArrayList getWidgets()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.openhab.habdroid.model.OpenHABWidget) $r3;

        $r5 = virtualinvoke $r4.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getId()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.openhab.habdroid.model.OpenHABWidget) $r3;

        return $r4;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    public java.util.ArrayList getWidgets()
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.util.ArrayList r1, $r3;
        org.openhab.habdroid.model.OpenHABWidget $r2;
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        if $r2 == null goto label4;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label4;

        i0 = 0;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label4;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r2 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label3;

        $i1 = 0;

     label2:
        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label3;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return r1;
    }
    public void logWidget(org.openhab.habdroid.model.OpenHABWidget)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        org.openhab.habdroid.model.OpenHABWidget $r1, $r7;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        boolean $z0;
        int i0, $i1;
        java.util.ArrayList $r5;
        java.lang.Object $r6;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r2 = <org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Widget <");

        $r4 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getLabel()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> (");

        $r4 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.lang.String getType()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        $z0 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label2;

        i0 = 0;

     label1:
        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label2;

        $r5 = virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (org.openhab.habdroid.model.OpenHABWidget) $r6;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void logWidget(org.openhab.habdroid.model.OpenHABWidget)>($r7);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void setIcon(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String icon> = $r1;

        return;
    }
    public void setId(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String id> = $r1;

        return;
    }
    public void setLink(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String link> = $r1;

        return;
    }
    public void setSourceJson(org.json.JSONObject)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        org.json.JSONObject $r1, $r8;
        org.json.JSONException r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        org.openhab.habdroid.model.OpenHAB2Widget $r5;
        org.openhab.habdroid.model.OpenHABWidget $r6;
        org.json.JSONArray $r7;
        int i0, $i1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: org.json.JSONObject;

        $r3 = <org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String TAG>;

        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r4);

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("widgets");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = new org.openhab.habdroid.model.OpenHAB2Widget;

        specialinvoke $r5.<org.openhab.habdroid.model.OpenHAB2Widget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget> = $r5;

        $r6 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        virtualinvoke $r6.<org.openhab.habdroid.model.OpenHABWidget: void setType(java.lang.String)>("root");

     label02:
        $r7 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("widgets");

     label03:
        i0 = 0;

     label04:
        $i1 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

     label05:
        if i0 >= $i1 goto label10;

     label06:
        $r8 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

     label07:
        $r6 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        $r3 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String iconFormat>;

     label08:
        staticinvoke <org.openhab.habdroid.model.OpenHAB2Widget: org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromJson(org.openhab.habdroid.model.OpenHABWidget,org.json.JSONObject,java.lang.String)>($r6, $r8, $r3);

     label09:
        i0 = i0 + 1;

        goto label04;

     label10:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("title");

     label11:
        if $z0 == 0 goto label13;

     label12:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setTitle(java.lang.String)>($r3);

     label13:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("id");

     label14:
        if $z0 == 0 goto label16;

     label15:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setId(java.lang.String)>($r3);

     label16:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("icon");

     label17:
        if $z0 == 0 goto label19;

     label18:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("icon");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setIcon(java.lang.String)>($r3);

     label19:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("link");

     label20:
        if $z0 == 0 goto label24;

     label21:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setLink(java.lang.String)>($r3);

     label22:
        return;

     label23:
        r2 := @caughtexception;

        virtualinvoke r2.<org.json.JSONException: void printStackTrace()>();

     label24:
        return;

        catch org.json.JSONException from label02 to label03 with label23;
        catch org.json.JSONException from label04 to label05 with label23;
        catch org.json.JSONException from label06 to label07 with label23;
        catch org.json.JSONException from label08 to label09 with label23;
        catch org.json.JSONException from label10 to label11 with label23;
        catch org.json.JSONException from label12 to label14 with label23;
        catch org.json.JSONException from label15 to label17 with label23;
        catch org.json.JSONException from label18 to label20 with label23;
        catch org.json.JSONException from label21 to label22 with label23;
    }
    public void setSourceNode(org.w3c.dom.Node)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        org.w3c.dom.Node $r1;
        java.lang.String $r2;
        org.openhab.habdroid.model.OpenHAB1Widget $r3;
        org.openhab.habdroid.model.OpenHABWidget $r4;
        boolean $z0;
        org.w3c.dom.NodeList $r5;
        int i0, $i1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = <org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Loading new data");

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = new org.openhab.habdroid.model.OpenHAB1Widget;

        specialinvoke $r3.<org.openhab.habdroid.model.OpenHAB1Widget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget> = $r3;

        $r4 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        virtualinvoke $r4.<org.openhab.habdroid.model.OpenHABWidget: void setType(java.lang.String)>("root");

        $z0 = interfaceinvoke $r1.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r5.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i1 goto label8;

        $r1 = interfaceinvoke $r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("widget");

        if $z0 == 0 goto label4;

        $r4 = r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: org.openhab.habdroid.model.OpenHABWidget rootWidget>;

        staticinvoke <org.openhab.habdroid.model.OpenHAB1Widget: org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromNode(org.openhab.habdroid.model.OpenHABWidget,org.w3c.dom.Node)>($r4, $r1);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("title");

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setTitle(java.lang.String)>($r2);

        goto label3;

     label5:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setId(java.lang.String)>($r2);

        goto label3;

     label6:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("icon");

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setIcon(java.lang.String)>($r2);

        goto label3;

     label7:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("link");

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: void setLink(java.lang.String)>($r2);

        goto label3;

     label8:
        return;
    }
    public void setTitle(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABWidgetDataSource r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABWidgetDataSource;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABWidgetDataSource: java.lang.String title> = $r1;

        return;
    }
