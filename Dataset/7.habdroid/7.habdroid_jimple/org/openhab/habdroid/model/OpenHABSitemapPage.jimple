org.openhab.habdroid.model.OpenHABSitemapPage extends java.lang.Object
private java.lang.String mIcon
private java.lang.String mLink
private java.lang.String mPageId
org.openhab.habdroid.model.OpenHABWidget mRootWidget
private java.lang.String mTitle
private java.util.ArrayList mWidgets
    public void <init>(org.json.JSONObject)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        org.json.JSONObject $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void <init>(org.w3c.dom.Document)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.Node $r2;
        org.openhab.habdroid.model.OpenHAB1Widget $r3;
        org.openhab.habdroid.model.OpenHABWidget $r4;
        boolean $z0;
        org.w3c.dom.NodeList $r5;
        int i0, $i1;
        java.lang.String $r6;
        java.util.ArrayList $r7;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Node getFirstChild()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new org.openhab.habdroid.model.OpenHAB1Widget;

        specialinvoke $r3.<org.openhab.habdroid.model.OpenHAB1Widget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget> = $r3;

        $r4 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        virtualinvoke $r4.<org.openhab.habdroid.model.OpenHABWidget: void setType(java.lang.String)>("root");

        $z0 = interfaceinvoke $r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r5.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i1 goto label8;

        $r2 = interfaceinvoke $r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("widget");

        if $z0 == 0 goto label4;

        $r4 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        $r4 = staticinvoke <org.openhab.habdroid.model.OpenHAB1Widget: org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromNode(org.openhab.habdroid.model.OpenHABWidget,org.w3c.dom.Node)>($r4, $r2);

        $r7 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.util.ArrayList mWidgets>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("title");

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABSitemapPage: void setTitle(java.lang.String)>($r6);

        goto label3;

     label5:
        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABSitemapPage: void setPageId(java.lang.String)>($r6);

        goto label3;

     label6:
        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("icon");

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABSitemapPage: void setIcon(java.lang.String)>($r6);

        goto label3;

     label7:
        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("link");

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABSitemapPage: void setLink(java.lang.String)>($r6);

        goto label3;

     label8:
        return;
    }
    public java.lang.String getIcon()
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mIcon>;

        return r1;
    }
    public java.lang.String getLink()
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mLink>;

        return r1;
    }
    public java.lang.String getPageId()
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mPageId>;

        return r1;
    }
    public java.lang.String getTitle()
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mTitle>;

        return r1;
    }
    public java.util.ArrayList getWidgets()
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.util.ArrayList r1, $r3;
        org.openhab.habdroid.model.OpenHABWidget $r2;
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        if $r2 == null goto label4;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label4;

        i0 = 0;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label4;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABSitemapPage: org.openhab.habdroid.model.OpenHABWidget mRootWidget>;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r2 = (org.openhab.habdroid.model.OpenHABWidget) $r4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z0 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: boolean hasChildren()>();

        if $z0 == 0 goto label3;

        $i1 = 0;

     label2:
        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label3;

        $r3 = virtualinvoke $r2.<org.openhab.habdroid.model.OpenHABWidget: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return r1;
    }
    public void setIcon(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mIcon> = $r1;

        return;
    }
    public void setLink(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mLink> = $r1;

        return;
    }
    public void setPageId(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mPageId> = $r1;

        return;
    }
    public void setTitle(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.lang.String mTitle> = $r1;

        return;
    }
    public void setWidgets(java.util.ArrayList)
    {
        org.openhab.habdroid.model.OpenHABSitemapPage r0;
        java.util.ArrayList r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABSitemapPage;

        r1 := @parameter0: java.util.ArrayList;

        r0.<org.openhab.habdroid.model.OpenHABSitemapPage: java.util.ArrayList mWidgets> = r1;

        return;
    }
