org.openhab.habdroid.model.OpenHAB1Widget extends org.openhab.habdroid.model.OpenHABWidget
    public void <init>()
    {
        org.openhab.habdroid.model.OpenHAB1Widget r0;

        r0 := @this: org.openhab.habdroid.model.OpenHAB1Widget;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: void <init>()>();

        return;
    }
    private void <init>(org.openhab.habdroid.model.OpenHABWidget, org.w3c.dom.Node)
    {
        org.openhab.habdroid.model.OpenHAB1Widget r0;
        org.openhab.habdroid.model.OpenHABWidget $r1;
        org.w3c.dom.Node $r2;
        org.openhab.habdroid.model.OpenHABWidgetMapping r3;
        java.util.ArrayList $r4;
        boolean $z0;
        org.w3c.dom.NodeList $r5, $r12;
        int i0, $i1, $i2;
        java.lang.String $r6, $r7, $r13;
        org.openhab.habdroid.model.OpenHABItem $r8;
        org.openhab.habdroid.model.OpenHABLinkedPage $r9;
        java.lang.Float $r10;
        float $f0;
        java.lang.Integer $r11;

        r0 := @this: org.openhab.habdroid.model.OpenHAB1Widget;

        $r1 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<org.openhab.habdroid.model.OpenHABWidget: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB1Widget: org.openhab.habdroid.model.OpenHABWidget parent> = $r1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB1Widget: java.util.ArrayList children> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHAB1Widget: java.util.ArrayList mappings> = $r4;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 == 0 goto label26;

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r5.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i1 goto label26;

        $r2 = interfaceinvoke $r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r7 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 == 0 goto label03;

        $r8 = new org.openhab.habdroid.model.OpenHABItem;

        specialinvoke $r8.<org.openhab.habdroid.model.OpenHABItem: void <init>(org.w3c.dom.Node)>($r2);

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setItem(org.openhab.habdroid.model.OpenHABItem)>($r8);

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("linkedPage");

        if $z0 == 0 goto label04;

        $r9 = new org.openhab.habdroid.model.OpenHABLinkedPage;

        specialinvoke $r9.<org.openhab.habdroid.model.OpenHABLinkedPage: void <init>(org.w3c.dom.Node)>($r2);

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setLinkedPage(org.openhab.habdroid.model.OpenHABLinkedPage)>($r9);

        goto label02;

     label04:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("widget");

        if $z0 == 0 goto label05;

        staticinvoke <org.openhab.habdroid.model.OpenHAB1Widget: org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromNode(org.openhab.habdroid.model.OpenHABWidget,org.w3c.dom.Node)>(r0, $r2);

        goto label02;

     label05:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("type");

        if $z0 == 0 goto label06;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setType(java.lang.String)>($r7);

        goto label02;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("widgetId");

        if $z0 == 0 goto label07;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setId(java.lang.String)>($r7);

        goto label02;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("label");

        if $z0 == 0 goto label08;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setLabel(java.lang.String)>($r7);

        goto label02;

     label08:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("icon");

        if $z0 == 0 goto label09;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setIcon(java.lang.String)>($r7);

        goto label02;

     label09:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("url");

        if $z0 == 0 goto label10;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setUrl(java.lang.String)>($r7);

        goto label02;

     label10:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("minValue");

        if $z0 == 0 goto label11;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setMinValue(float)>($f0);

        goto label02;

     label11:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("maxValue");

        if $z0 == 0 goto label12;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setMaxValue(float)>($f0);

        goto label02;

     label12:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("step");

        if $z0 == 0 goto label13;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r7);

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setStep(float)>($f0);

        goto label02;

     label13:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("refresh");

        if $z0 == 0 goto label14;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7);

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setRefresh(int)>($i1);

        goto label02;

     label14:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("period");

        if $z0 == 0 goto label15;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setPeriod(java.lang.String)>($r7);

        goto label02;

     label15:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z0 == 0 goto label16;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setService(java.lang.String)>($r7);

        goto label02;

     label16:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("height");

        if $z0 == 0 goto label17;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7);

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setHeight(int)>($i1);

        goto label02;

     label17:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("mapping");

        if $z0 == 0 goto label22;

        $r12 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $r6 = "";

        $r7 = "";

        $i1 = 0;

     label18:
        $i2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 >= $i2 goto label21;

        $r2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r13 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("command");

        if $z0 == 0 goto label19;

        $r2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r6 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

     label19:
        $r2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r13 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("label");

        if $z0 == 0 goto label20;

        $r2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r7 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

     label20:
        $i1 = $i1 + 1;

        goto label18;

     label21:
        r3 = new org.openhab.habdroid.model.OpenHABWidgetMapping;

        specialinvoke r3.<org.openhab.habdroid.model.OpenHABWidgetMapping: void <init>(java.lang.String,java.lang.String)>($r6, $r7);

        $r4 = r0.<org.openhab.habdroid.model.OpenHAB1Widget: java.util.ArrayList mappings>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        goto label02;

     label22:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("iconcolor");

        if $z0 == 0 goto label23;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setIconColor(java.lang.String)>($r7);

        goto label02;

     label23:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("labelcolor");

        if $z0 == 0 goto label24;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setLabelColor(java.lang.String)>($r7);

        goto label02;

     label24:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("valuecolor");

        if $z0 == 0 goto label25;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setValueColor(java.lang.String)>($r7);

        goto label02;

     label25:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("encoding");

        if $z0 == 0 goto label02;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: void setEncoding(java.lang.String)>($r7);

        goto label02;

     label26:
        $r1 = r0.<org.openhab.habdroid.model.OpenHAB1Widget: org.openhab.habdroid.model.OpenHABWidget parent>;

        virtualinvoke $r1.<org.openhab.habdroid.model.OpenHABWidget: void addChildWidget(org.openhab.habdroid.model.OpenHABWidget)>(r0);

        return;
    }
    public static org.openhab.habdroid.model.OpenHABWidget createOpenHABWidgetFromNode(org.openhab.habdroid.model.OpenHABWidget, org.w3c.dom.Node)
    {
        org.openhab.habdroid.model.OpenHABWidget $r0;
        org.w3c.dom.Node $r1;
        org.openhab.habdroid.model.OpenHAB1Widget $r2;

        $r0 := @parameter0: org.openhab.habdroid.model.OpenHABWidget;

        $r1 := @parameter1: org.w3c.dom.Node;

        $r2 = new org.openhab.habdroid.model.OpenHAB1Widget;

        specialinvoke $r2.<org.openhab.habdroid.model.OpenHAB1Widget: void <init>(org.openhab.habdroid.model.OpenHABWidget,org.w3c.dom.Node)>($r0, $r1);

        return $r2;
    }
    public java.lang.String getIconPath()
    {
        org.openhab.habdroid.model.OpenHAB1Widget r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: org.openhab.habdroid.model.OpenHAB1Widget;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHAB1Widget: java.lang.String getIcon()>();

        $r1[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("images/%s.png", $r1);

        return $r2;
    }
