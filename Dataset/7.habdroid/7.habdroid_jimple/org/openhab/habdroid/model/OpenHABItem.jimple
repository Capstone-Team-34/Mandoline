org.openhab.habdroid.model.OpenHABItem extends java.lang.Object
private static final java.util.regex.Pattern HSB_PATTERN
private static final java.lang.String TAG
private java.lang.String groupType
private java.lang.String link
private java.lang.String name
private java.lang.String state
private java.lang.String type
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;

        $r0 = class "Lorg/openhab/habdroid/model/OpenHABItem;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.openhab.habdroid.model.OpenHABItem: java.lang.String TAG> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([0-9]*\\.?[0-9]+),([0-9]*\\.?[0-9]+),([0-9]*\\.?[0-9]+)$");

        <org.openhab.habdroid.model.OpenHABItem: java.util.regex.Pattern HSB_PATTERN> = $r2;

        return;
    }
    public void <init>(org.json.JSONObject)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        org.json.JSONObject $r1;
        org.json.JSONException r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state> = "";

     label01:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("type");

     label02:
        if $z0 == 0 goto label04;

     label03:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setType(java.lang.String)>($r3);

     label04:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("groupType");

     label05:
        if $z0 == 0 goto label07;

     label06:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("groupType");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setGroupType(java.lang.String)>($r3);

     label07:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("name");

     label08:
        if $z0 == 0 goto label10;

     label09:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setName(java.lang.String)>($r3);

     label10:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("state");

     label11:
        if $z0 == 0 goto label19;

     label12:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("state");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("NULL");

     label13:
        if $z0 != 0 goto label18;

     label14:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("state");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("UNDEF");

     label15:
        if $z0 != 0 goto label18;

     label16:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("state");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("undefined");

     label17:
        if $z0 == 0 goto label23;

     label18:
        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setState(java.lang.String)>(null);

     label19:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("link");

     label20:
        if $z0 == 0 goto label26;

     label21:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setLink(java.lang.String)>($r3);

     label22:
        return;

     label23:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("state");

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setState(java.lang.String)>($r3);

     label24:
        goto label19;

     label25:
        r2 := @caughtexception;

        virtualinvoke r2.<org.json.JSONException: void printStackTrace()>();

     label26:
        return;

        catch org.json.JSONException from label01 to label02 with label25;
        catch org.json.JSONException from label03 to label05 with label25;
        catch org.json.JSONException from label06 to label08 with label25;
        catch org.json.JSONException from label09 to label11 with label25;
        catch org.json.JSONException from label12 to label13 with label25;
        catch org.json.JSONException from label14 to label15 with label25;
        catch org.json.JSONException from label16 to label17 with label25;
        catch org.json.JSONException from label18 to label20 with label25;
        catch org.json.JSONException from label21 to label22 with label25;
        catch org.json.JSONException from label23 to label24 with label25;
    }
    public void <init>(org.w3c.dom.Node)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        org.w3c.dom.Node $r1;
        boolean $z0;
        org.w3c.dom.NodeList $r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state> = "";

        $z0 = interfaceinvoke $r1.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i1 goto label8;

        $r1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("type");

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setType(java.lang.String)>($r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("groupType");

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setGroupType(java.lang.String)>($r3);

        goto label2;

     label4:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setName(java.lang.String)>($r3);

        goto label2;

     label5:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("state");

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Uninitialized");

        if $z0 == 0 goto label6;

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setState(java.lang.String)>(null);

        goto label2;

     label6:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setState(java.lang.String)>($r3);

        goto label2;

     label7:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("link");

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: void setLink(java.lang.String)>($r3);

        goto label2;

     label8:
        return;
    }
    private java.lang.Boolean isValueDecimalIntegerAndGreaterThanZero(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        java.lang.Integer $r3;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label2:
        if $i0 <= 0 goto label5;

        $z0 = 1;

     label3:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label4:
        return $r4;

     label5:
        $z0 = 0;

        goto label3;

     label6:
        r2 := @caughtexception;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }
    public java.lang.String getGroupType()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String groupType>;

        return r1;
    }
    public java.lang.String getLink()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String link>;

        return r1;
    }
    public java.lang.String getName()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String name>;

        return r1;
    }
    public java.lang.String getState()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        return r1;
    }
    public boolean getStateAsBoolean()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.Exception r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        java.lang.Boolean $r3;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ON");

        if $z0 != 0 goto label5;

     label2:
        $i0 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: int getStateAsBrightness()>();

     label3:
        if $i0 != 0 goto label5;

        return 0;

     label4:
        r1 := @caughtexception;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $r3 = specialinvoke r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.Boolean isValueDecimalIntegerAndGreaterThanZero(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label5:
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public int getStateAsBrightness()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.Exception r1;
        java.util.regex.Pattern $r2;
        java.lang.String $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.lang.Float $r5;
        int $i0;
        java.lang.IllegalStateException $r6;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r2 = <org.openhab.habdroid.model.OpenHABItem: java.util.regex.Pattern HSB_PATTERN>;

        $r3 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

     label1:
        $r3 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r3);

        $i0 = virtualinvoke $r5.<java.lang.Float: int intValue()>();

     label2:
        return $i0;

     label3:
        r1 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No brightness");

        throw $r6;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No brightness");

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public int getStateAsColor()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        float[] $r1;
        int $i0;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 = virtualinvoke r0.<org.openhab.habdroid.model.OpenHABItem: float[] getStateAsHSV()>();

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r1);

        return $i0;
    }
    public java.lang.Float getStateAsFloat()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.NumberFormatException r1;
        java.lang.String $r2, $r4;
        java.lang.Float $r3;
        boolean $z0;
        float $f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r2 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r3;

     label1:
        $r2 = "ON";

        $r4 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(100.0F);

        return $r3;

     label2:
        $r2 = "OFF";

        $r4 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r3;

     label3:
        $r2 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

     label4:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r2);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label5:
        return $r3;

     label6:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.NumberFormatException: void printStackTrace()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r3;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }
    public float[] getStateAsHSV()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;
        float[] r2;
        java.lang.String[] $r3;
        int $i0;
        float $f0;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        if $r1 != null goto label1;

        r2 = newarray (float)[3];

        r2[0] = 0.0F;

        r2[1] = 0.0F;

        r2[2] = 0.0F;

        return r2;

     label1:
        $r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r3;

        if $i0 != 3 goto label2;

        r2 = newarray (float)[3];

        $r1 = $r3[0];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        r2[0] = $f0;

        $r1 = $r3[1];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $f0 = $f0 / 100.0F;

        r2[1] = $f0;

        $r1 = $r3[2];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $f0 = $f0 / 100.0F;

        r2[2] = $f0;

        return r2;

     label2:
        r2 = newarray (float)[3];

        r2[0] = 0.0F;

        r2[1] = 0.0F;

        r2[2] = 0.0F;

        return r2;
    }
    public java.lang.String getType()
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        r1 = r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String type>;

        return r1;
    }
    public void setGroupType(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String groupType> = $r1;

        return;
    }
    public void setLink(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String link> = $r1;

        return;
    }
    public void setName(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String name> = $r1;

        return;
    }
    public void setState(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String state> = $r1;

        return;
    }
    public void setType(java.lang.String)
    {
        org.openhab.habdroid.model.OpenHABItem r0;
        java.lang.String $r1;

        r0 := @this: org.openhab.habdroid.model.OpenHABItem;

        $r1 := @parameter0: java.lang.String;

        r0.<org.openhab.habdroid.model.OpenHABItem: java.lang.String type> = $r1;

        return;
    }
