okio.RealBufferedSink extends java.lang.Object implements okio.BufferedSink
public final okio.Buffer buffer
boolean closed
public final okio.Sink sink
    void <init>(okio.Sink)
    {
        okio.RealBufferedSink r0;
        okio.Sink $r1;
        okio.Buffer $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: okio.Sink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        r0.<okio.RealBufferedSink: okio.Buffer buffer> = $r2;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("sink == null");

        throw $r3;

     label1:
        r0.<okio.RealBufferedSink: okio.Sink sink> = $r1;

        return;
    }
    public okio.Buffer buffer()
    {
        okio.RealBufferedSink r0;
        okio.Buffer r1;

        r0 := @this: okio.RealBufferedSink;

        r1 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        return r1;
    }
    public void close() throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        okio.Buffer $r1, $r4;
        boolean $z0;
        java.lang.Throwable r2, r5;
        long $l0;
        byte $b1;
        okio.Sink $r3;

        r0 := @this: okio.RealBufferedSink;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = null;

     label2:
        $r1 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = $r1.<okio.Buffer: long size>;

     label3:
        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label5;

     label4:
        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r1 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = $r4.<okio.Buffer: long size>;

        interfaceinvoke $r3.<okio.Sink: void write(okio.Buffer,long)>($r1, $l0);

     label5:
        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        interfaceinvoke $r3.<okio.Sink: void close()>();

     label6:
        r0.<okio.RealBufferedSink: boolean closed> = 1;

        if r2 == null goto label9;

        staticinvoke <okio.Util: void sneakyRethrow(java.lang.Throwable)>(r2);

        return;

     label7:
        r2 := @caughtexception;

        goto label5;

     label8:
        r5 := @caughtexception;

        if r2 != null goto label6;

        r2 = r5;

        goto label6;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
    public okio.BufferedSink emit() throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        okio.Buffer $r2;
        byte $b1;
        okio.Sink $r3;

        r0 := @this: okio.RealBufferedSink;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label1:
        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = virtualinvoke $r2.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        interfaceinvoke $r3.<okio.Sink: void write(okio.Buffer,long)>($r2, $l0);

     label2:
        return r0;
    }
    public okio.BufferedSink emitCompleteSegments() throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        okio.Buffer $r2;
        byte $b1;
        okio.Sink $r3;

        r0 := @this: okio.RealBufferedSink;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label1:
        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = virtualinvoke $r2.<okio.Buffer: long completeSegmentByteCount()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        interfaceinvoke $r3.<okio.Sink: void write(okio.Buffer,long)>($r2, $l0);

     label2:
        return r0;
    }
    public void flush() throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        okio.Buffer $r2, $r4;
        long $l0;
        byte $b1;
        okio.Sink $r3;

        r0 := @this: okio.RealBufferedSink;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r1;

     label1:
        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = $r2.<okio.Buffer: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = $r4.<okio.Buffer: long size>;

        interfaceinvoke $r3.<okio.Sink: void write(okio.Buffer,long)>($r2, $l0);

     label2:
        $r3 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        interfaceinvoke $r3.<okio.Sink: void flush()>();

        return;
    }
    public java.io.OutputStream outputStream()
    {
        okio.RealBufferedSink r0;
        okio.RealBufferedSink$1 $r1;

        r0 := @this: okio.RealBufferedSink;

        $r1 = new okio.RealBufferedSink$1;

        specialinvoke $r1.<okio.RealBufferedSink$1: void <init>(okio.RealBufferedSink)>(r0);

        return $r1;
    }
    public okio.Timeout timeout()
    {
        okio.RealBufferedSink r0;
        okio.Timeout $r1;
        okio.Sink $r2;

        r0 := @this: okio.RealBufferedSink;

        $r2 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r1 = interfaceinvoke $r2.<okio.Sink: okio.Timeout timeout()>();

        return $r1;
    }
    public java.lang.String toString()
    {
        okio.RealBufferedSink r0;
        java.lang.StringBuilder $r1;
        okio.Sink $r2;
        java.lang.String $r3;

        r0 := @this: okio.RealBufferedSink;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buffer(");

        $r2 = r0.<okio.RealBufferedSink: okio.Sink sink>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public okio.BufferedSink write(okio.ByteString) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        okio.ByteString $r1;
        okio.BufferedSink $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okio.Buffer $r4;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: okio.ByteString;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label1:
        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: okio.Buffer write(okio.ByteString)>($r1);

        $r2 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r2;
    }
    public okio.BufferedSink write(okio.Source, long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        okio.Source $r1;
        long $l0, $l1;
        byte $b2;
        okio.Buffer $r2;
        java.io.EOFException $r3;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: okio.Source;

        $l1 := @parameter1: long;

     label1:
        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label3;

        $r2 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = interfaceinvoke $r1.<okio.Source: long read(okio.Buffer,long)>($r2, $l1);

        $b2 = $l0 cmp -1L;

        if $b2 != 0 goto label2;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label2:
        $l1 = $l1 - $l0;

        virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        goto label1;

     label3:
        return r0;
    }
    public okio.BufferedSink write(byte[]) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        byte[] $r1;
        okio.BufferedSink $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okio.Buffer $r4;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: byte[];

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label1:
        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: okio.Buffer write(byte[])>($r1);

        $r2 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r2;
    }
    public okio.BufferedSink write(byte[], int, int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        byte[] $r1;
        int $i0, $i1;
        okio.BufferedSink $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okio.Buffer $r4;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label1:
        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: okio.Buffer write(byte[],int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r2;
    }
    public void write(okio.Buffer, long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        okio.Buffer $r1, $r3;
        long $l0;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: void write(okio.Buffer,long)>($r1, $l0);

        virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return;
    }
    public long writeAll(okio.Source) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        okio.Source $r1;
        long $l0, l1;
        java.lang.IllegalArgumentException $r2;
        okio.Buffer $r3;
        byte $b2;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: okio.Source;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source == null");

        throw $r2;

     label1:
        l1 = 0L;

     label2:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        $l0 = interfaceinvoke $r1.<okio.Source: long read(okio.Buffer,long)>($r3, 8192L);

        $b2 = $l0 cmp -1L;

        if $b2 == 0 goto label3;

        l1 = l1 + $l0;

        virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        goto label2;

     label3:
        return l1;
    }
    public okio.BufferedSink writeByte(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeByte(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeDecimalLong(long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $l0 := @parameter0: long;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeDecimalLong(long)>($l0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeHexadecimalUnsignedLong(long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $l0 := @parameter0: long;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)>($l0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeInt(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeInt(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeIntLe(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeIntLe(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeLong(long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $l0 := @parameter0: long;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeLong(long)>($l0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeLongLe(long) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        long $l0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $l0 := @parameter0: long;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeLongLe(long)>($l0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeShort(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeShort(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeShortLe(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeShortLe(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
    public okio.BufferedSink writeString(java.lang.String, int, int, java.nio.charset.Charset) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.nio.charset.Charset $r2;
        okio.BufferedSink $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        okio.Buffer $r5;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.nio.charset.Charset;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r4;

     label1:
        $r5 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r5.<okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)>($r1, $i0, $i1, $r2);

        $r3 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r3;
    }
    public okio.BufferedSink writeString(java.lang.String, java.nio.charset.Charset) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        okio.BufferedSink $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        okio.Buffer $r5;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r4;

     label1:
        $r5 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r5.<okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        $r3 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r3;
    }
    public okio.BufferedSink writeUtf8(java.lang.String) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        java.lang.String $r1;
        okio.BufferedSink $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okio.Buffer $r4;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label1:
        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: okio.Buffer writeUtf8(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r2;
    }
    public okio.BufferedSink writeUtf8(java.lang.String, int, int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        java.lang.String $r1;
        int $i0, $i1;
        okio.BufferedSink $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okio.Buffer $r4;

        r0 := @this: okio.RealBufferedSink;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label1:
        $r4 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r2;
    }
    public okio.BufferedSink writeUtf8CodePoint(int) throws java.io.IOException
    {
        okio.RealBufferedSink r0;
        int $i0;
        okio.BufferedSink $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        okio.Buffer $r3;

        r0 := @this: okio.RealBufferedSink;

        $i0 := @parameter0: int;

        $z0 = r0.<okio.RealBufferedSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okio.RealBufferedSink: okio.Buffer buffer>;

        virtualinvoke $r3.<okio.Buffer: okio.Buffer writeUtf8CodePoint(int)>($i0);

        $r1 = virtualinvoke r0.<okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()>();

        return $r1;
    }
