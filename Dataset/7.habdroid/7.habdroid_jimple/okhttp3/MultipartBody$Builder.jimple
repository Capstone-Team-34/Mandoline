okhttp3.MultipartBody$Builder extends java.lang.Object
private final okio.ByteString boundary
private final java.util.List parts
private okhttp3.MediaType type
    public void <init>()
    {
        okhttp3.MultipartBody$Builder r0;
        java.util.UUID $r1;
        java.lang.String $r2;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r1.<java.util.UUID: java.lang.String toString()>();

        specialinvoke r0.<okhttp3.MultipartBody$Builder: void <init>(java.lang.String)>($r2);

        return;
    }
    public void <init>(java.lang.String)
    {
        okhttp3.MultipartBody$Builder r0;
        java.lang.String $r1;
        okio.ByteString $r2;
        okhttp3.MediaType $r3;
        java.util.ArrayList $r4;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <okhttp3.MultipartBody: okhttp3.MediaType MIXED>;

        r0.<okhttp3.MultipartBody$Builder: okhttp3.MediaType type> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<okhttp3.MultipartBody$Builder: java.util.List parts> = $r4;

        $r2 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>($r1);

        r0.<okhttp3.MultipartBody$Builder: okio.ByteString boundary> = $r2;

        return;
    }
    public okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String, java.lang.String)
    {
        okhttp3.MultipartBody$Builder r0;
        java.lang.String $r1, $r2;
        okhttp3.MultipartBody$Part $r3;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)>($r1, $r2);

        r0 = virtualinvoke r0.<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)>($r3);

        return r0;
    }
    public okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String, java.lang.String, okhttp3.RequestBody)
    {
        okhttp3.MultipartBody$Builder r0;
        java.lang.String $r1, $r2;
        okhttp3.RequestBody $r3;
        okhttp3.MultipartBody$Part $r4;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: okhttp3.RequestBody;

        $r4 = staticinvoke <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)>($r1, $r2, $r3);

        r0 = virtualinvoke r0.<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)>($r4);

        return r0;
    }
    public okhttp3.MultipartBody$Builder addPart(okhttp3.Headers, okhttp3.RequestBody)
    {
        okhttp3.MultipartBody$Builder r0;
        okhttp3.Headers $r1;
        okhttp3.RequestBody $r2;
        okhttp3.MultipartBody$Part $r3;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: okhttp3.Headers;

        $r2 := @parameter1: okhttp3.RequestBody;

        $r3 = staticinvoke <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)>($r1, $r2);

        r0 = virtualinvoke r0.<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)>($r3);

        return r0;
    }
    public okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
    {
        okhttp3.MultipartBody$Builder r0;
        okhttp3.MultipartBody$Part $r1;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: okhttp3.MultipartBody$Part;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("part == null");

        throw $r2;

     label1:
        $r3 = r0.<okhttp3.MultipartBody$Builder: java.util.List parts>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
    {
        okhttp3.MultipartBody$Builder r0;
        okhttp3.RequestBody $r1;
        okhttp3.MultipartBody$Part $r2;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: okhttp3.RequestBody;

        $r2 = staticinvoke <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)>($r1);

        r0 = virtualinvoke r0.<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)>($r2);

        return r0;
    }
    public okhttp3.MultipartBody build()
    {
        okhttp3.MultipartBody$Builder r0;
        okhttp3.MediaType $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        okhttp3.MultipartBody $r4;
        okio.ByteString $r5;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r2 = r0.<okhttp3.MultipartBody$Builder: java.util.List parts>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Multipart body must have at least one part.");

        throw $r3;

     label1:
        $r4 = new okhttp3.MultipartBody;

        $r5 = r0.<okhttp3.MultipartBody$Builder: okio.ByteString boundary>;

        $r1 = r0.<okhttp3.MultipartBody$Builder: okhttp3.MediaType type>;

        $r2 = r0.<okhttp3.MultipartBody$Builder: java.util.List parts>;

        specialinvoke $r4.<okhttp3.MultipartBody: void <init>(okio.ByteString,okhttp3.MediaType,java.util.List)>($r5, $r1, $r2);

        return $r4;
    }
    public okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
    {
        okhttp3.MultipartBody$Builder r0;
        okhttp3.MediaType $r1;
        java.lang.NullPointerException $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: okhttp3.MultipartBody$Builder;

        $r1 := @parameter0: okhttp3.MediaType;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("type == null");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<okhttp3.MediaType: java.lang.String type()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("multipart");

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart != ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label2:
        r0.<okhttp3.MultipartBody$Builder: okhttp3.MediaType type> = $r1;

        return r0;
    }
