okhttp3.internal.cache2.Relay$RelaySource extends java.lang.Object implements okio.Source
private okhttp3.internal.cache2.FileOperator fileOperator
private long sourcePos
final okhttp3.internal.cache2.Relay this$0
private final okio.Timeout timeout
    void <init>(okhttp3.internal.cache2.Relay)
    {
        okhttp3.internal.cache2.Relay$RelaySource r0;
        okhttp3.internal.cache2.Relay $r1;
        java.nio.channels.FileChannel $r2;
        okio.Timeout $r3;
        okhttp3.internal.cache2.FileOperator $r4;
        java.io.RandomAccessFile $r5;

        r0 := @this: okhttp3.internal.cache2.Relay$RelaySource;

        $r1 := @parameter0: okhttp3.internal.cache2.Relay;

        r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new okio.Timeout;

        specialinvoke $r3.<okio.Timeout: void <init>()>();

        r0.<okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout> = $r3;

        $r4 = new okhttp3.internal.cache2.FileOperator;

        $r1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r5 = $r1.<okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file>;

        $r2 = virtualinvoke $r5.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        specialinvoke $r4.<okhttp3.internal.cache2.FileOperator: void <init>(java.nio.channels.FileChannel)>($r2);

        r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator> = $r4;

        return;
    }
    public void close() throws java.io.IOException
    {
        okhttp3.internal.cache2.Relay$RelaySource r0;
        okhttp3.internal.cache2.FileOperator $r1;
        java.io.RandomAccessFile r2;
        okhttp3.internal.cache2.Relay $r3, $r4;
        int $i0;
        java.lang.Throwable $r5;

        r0 := @this: okhttp3.internal.cache2.Relay$RelaySource;

        $r1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator>;

        if $r1 != null goto label1;

        return;

     label1:
        r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator> = null;

        r2 = null;

        $r3 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r3;

     label2:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $i0 = $r4.<okhttp3.internal.cache2.Relay: int sourceCount>;

        $i0 = $i0 + -1;

        $r4.<okhttp3.internal.cache2.Relay: int sourceCount> = $i0;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $i0 = $r4.<okhttp3.internal.cache2.Relay: int sourceCount>;

        if $i0 != 0 goto label3;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        r2 = $r4.<okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file>;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r4.<okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file> = null;

     label3:
        exitmonitor $r3;

     label4:
        if r2 == null goto label8;

        staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>(r2);

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor $r3;

     label7:
        throw $r5;

     label8:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
    public long read(okio.Buffer, long) throws java.io.IOException
    {
        okhttp3.internal.cache2.Relay$RelaySource r0;
        okio.Buffer $r1, $r9;
        long $l0, $l1, l2, $l4;
        okhttp3.internal.cache2.FileOperator $r2;
        java.lang.IllegalStateException $r3;
        okhttp3.internal.cache2.Relay $r4, $r5;
        byte $b3;
        boolean $z0;
        java.lang.Thread $r6;
        okio.Timeout $r7;
        java.lang.Throwable $r8, $r11, $r12, $r13, $r14, $r15;
        okio.Source $r10;

        r0 := @this: okhttp3.internal.cache2.Relay$RelaySource;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $r2 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator>;

        if $r2 != null goto label01;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r3;

     label01:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r4;

     label02:
        l2 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $l1 = $r5.<okhttp3.internal.cache2.Relay: long upstreamPos>;

        $b3 = l2 cmp $l1;

        if $b3 != 0 goto label09;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $z0 = $r5.<okhttp3.internal.cache2.Relay: boolean complete>;

        if $z0 == 0 goto label04;

        exitmonitor $r4;

     label03:
        return -1L;

     label04:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r6 = $r5.<okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader>;

        if $r6 == null goto label07;

        $r7 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout>;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        virtualinvoke $r7.<okio.Timeout: void waitUntilNotified(java.lang.Object)>($r5);

        goto label02;

     label05:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label06:
        throw $r8;

     label07:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5.<okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader> = $r6;

        $b3 = 1;

        exitmonitor $r4;

     label08:
        if $b3 != 2 goto label13;

        l2 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = $l1 - l2;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

        $r2 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator>;

        $l1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = 32L + $l1;

        virtualinvoke $r2.<okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)>($l1, $r1, $l0);

        $l1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = $l1 + $l0;

        r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos> = $l1;

        return $l0;

     label09:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        l2 = virtualinvoke $r9.<okio.Buffer: long size()>();

        l2 = $l1 - l2;

        $l4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $b3 = $l4 cmp l2;

        if $b3 >= 0 goto label11;

        $b3 = 2;

        exitmonitor $r4;

     label10:
        goto label08;

     label11:
        $l4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = $l1 - $l4;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l1);

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        $l1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = $l1 - l2;

        virtualinvoke $r9.<okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)>($r1, $l1, $l0);

        $l1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

        $l1 = $l1 + $l0;

        r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos> = $l1;

        exitmonitor $r4;

     label12:
        return $l0;

     label13:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r10 = $r4.<okhttp3.internal.cache2.Relay: okio.Source upstream>;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r4.<okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer>;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        l2 = $r4.<okhttp3.internal.cache2.Relay: long bufferMaxSize>;

        l2 = interfaceinvoke $r10.<okio.Source: long read(okio.Buffer,long)>($r9, l2);

     label14:
        $b3 = l2 cmp -1L;

        if $b3 != 0 goto label21;

     label15:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        virtualinvoke $r4.<okhttp3.internal.cache2.Relay: void commit(long)>($l1);

     label16:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r4;

     label17:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r5.<okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader> = null;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor $r4;

     label18:
        return -1L;

     label19:
        $r11 := @caughtexception;

        exitmonitor $r4;

     label20:
        throw $r11;

     label21:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>(l2, $l0);

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r4.<okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer>;

        virtualinvoke $r9.<okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)>($r1, 0L, $l0);

        $l4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos>;

     label22:
        $l4 = $l4 + $l0;

     label23:
        r0.<okhttp3.internal.cache2.Relay$RelaySource: long sourcePos> = $l4;

        $r2 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator>;

     label24:
        $l1 = 32L + $l1;

     label25:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r1 = $r4.<okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer>;

        $r1 = virtualinvoke $r1.<okio.Buffer: okio.Buffer clone()>();

        virtualinvoke $r2.<okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)>($l1, $r1, l2);

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r4;

     label26:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r1 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer>;

        virtualinvoke $r1.<okio.Buffer: void write(okio.Buffer,long)>($r9, l2);

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r1 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        $l1 = virtualinvoke $r1.<okio.Buffer: long size()>();

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $l4 = $r5.<okhttp3.internal.cache2.Relay: long bufferMaxSize>;

        $b3 = $l1 cmp $l4;

        if $b3 <= 0 goto label27;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r1 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r9 = $r5.<okhttp3.internal.cache2.Relay: okio.Buffer buffer>;

        $l1 = virtualinvoke $r9.<okio.Buffer: long size()>();

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $l4 = $r5.<okhttp3.internal.cache2.Relay: long bufferMaxSize>;

        $l1 = $l1 - $l4;

        virtualinvoke $r1.<okio.Buffer: void skip(long)>($l1);

     label27:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $l1 = $r5.<okhttp3.internal.cache2.Relay: long upstreamPos>;

        $l1 = $l1 + l2;

        $r5.<okhttp3.internal.cache2.Relay: long upstreamPos> = $l1;

        exitmonitor $r4;

     label28:
        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r4;

     label29:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r5.<okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader> = null;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor $r4;

     label30:
        return $l0;

     label31:
        $r12 := @caughtexception;

     label32:
        exitmonitor $r4;

     label33:
        throw $r12;

     label34:
        $r13 := @caughtexception;

        $r4 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        entermonitor $r4;

     label35:
        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        $r5.<okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader> = null;

        $r5 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor $r4;

     label36:
        throw $r13;

     label37:
        $r14 := @caughtexception;

     label38:
        exitmonitor $r4;

     label39:
        throw $r14;

     label40:
        $r15 := @caughtexception;

     label41:
        exitmonitor $r4;

     label42:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label06 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label23 to label24 with label34;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label26 to label28 with label31;
        catch java.lang.Throwable from label29 to label30 with label37;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label33 to label34 with label34;
        catch java.lang.Throwable from label35 to label36 with label40;
        catch java.lang.Throwable from label38 to label39 with label37;
        catch java.lang.Throwable from label41 to label42 with label40;
    }
    public okio.Timeout timeout()
    {
        okhttp3.internal.cache2.Relay$RelaySource r0;
        okio.Timeout r1;

        r0 := @this: okhttp3.internal.cache2.Relay$RelaySource;

        r1 = r0.<okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout>;

        return r1;
    }
