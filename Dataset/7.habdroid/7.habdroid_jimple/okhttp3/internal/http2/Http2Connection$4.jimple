okhttp3.internal.http2.Http2Connection$4 extends okhttp3.internal.NamedRunnable
final okhttp3.internal.http2.Http2Connection this$0
final java.util.List val$requestHeaders
final int val$streamId
    transient void <init>(okhttp3.internal.http2.Http2Connection, java.lang.String, java.lang.Object[], int, java.util.List)
    {
        okhttp3.internal.http2.Http2Connection$4 r0;
        okhttp3.internal.http2.Http2Connection $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        int $i0;
        java.util.List $r4;

        r0 := @this: okhttp3.internal.http2.Http2Connection$4;

        $r1 := @parameter0: okhttp3.internal.http2.Http2Connection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.util.List;

        r0.<okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0> = $r1;

        r0.<okhttp3.internal.http2.Http2Connection$4: int val$streamId> = $i0;

        r0.<okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders> = $r4;

        specialinvoke r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>($r2, $r3);

        return;
    }
    public void execute()
    {
        okhttp3.internal.http2.Http2Connection$4 r0;
        okhttp3.internal.http2.Http2Connection $r1, $r6;
        okhttp3.internal.http2.PushObserver $r2;
        int $i0;
        java.util.List $r3;
        boolean $z0;
        okhttp3.internal.http2.Http2Writer $r4;
        okhttp3.internal.http2.ErrorCode $r5;
        java.util.Set $r7;
        java.lang.Integer $r8;
        java.lang.Throwable $r9;
        java.io.IOException $r10;

        r0 := @this: okhttp3.internal.http2.Http2Connection$4;

        $r1 = r0.<okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0>;

        $r2 = $r1.<okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver>;

        $i0 = r0.<okhttp3.internal.http2.Http2Connection$4: int val$streamId>;

        $r3 = r0.<okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders>;

        $z0 = interfaceinvoke $r2.<okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)>($i0, $r3);

        if $z0 == 0 goto label8;

        $r1 = r0.<okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0>;

        $r4 = $r1.<okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer>;

        $i0 = r0.<okhttp3.internal.http2.Http2Connection$4: int val$streamId>;

        $r5 = <okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL>;

     label1:
        virtualinvoke $r4.<okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)>($i0, $r5);

     label2:
        $r1 = r0.<okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0>;

        entermonitor $r1;

     label3:
        $r6 = r0.<okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0>;

        $r7 = $r6.<okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests>;

        $i0 = r0.<okhttp3.internal.http2.Http2Connection$4: int val$streamId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r7.<java.util.Set: boolean remove(java.lang.Object)>($r8);

        exitmonitor $r1;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r9;

     label7:
        $r10 := @caughtexception;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.IOException from label6 to label7 with label7;
    }
