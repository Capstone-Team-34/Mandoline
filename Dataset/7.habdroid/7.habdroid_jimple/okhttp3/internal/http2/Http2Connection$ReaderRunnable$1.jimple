okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 extends okhttp3.internal.NamedRunnable
final okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
final okhttp3.internal.http2.Http2Stream val$newStream
    transient void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable, java.lang.String, java.lang.Object[], okhttp3.internal.http2.Http2Stream)
    {
        okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 r0;
        okhttp3.internal.http2.Http2Connection$ReaderRunnable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        okhttp3.internal.http2.Http2Stream $r4;

        r0 := @this: okhttp3.internal.http2.Http2Connection$ReaderRunnable$1;

        $r1 := @parameter0: okhttp3.internal.http2.Http2Connection$ReaderRunnable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $r4 := @parameter3: okhttp3.internal.http2.Http2Stream;

        r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1> = $r1;

        r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream> = $r4;

        specialinvoke r0.<okhttp3.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>($r2, $r3);

        return;
    }
    public void execute()
    {
        okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 r0;
        java.io.IOException r1, $r10;
        okhttp3.internal.http2.Http2Connection$ReaderRunnable $r2;
        okhttp3.internal.http2.Http2Connection $r3;
        okhttp3.internal.http2.Http2Connection$Listener $r4;
        okhttp3.internal.http2.Http2Stream $r5;
        okhttp3.internal.platform.Platform $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        okhttp3.internal.http2.ErrorCode $r9;

        r0 := @this: okhttp3.internal.http2.Http2Connection$ReaderRunnable$1;

        $r2 = r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1>;

        $r3 = $r2.<okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0>;

        $r4 = $r3.<okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener>;

        $r5 = r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream>;

     label1:
        virtualinvoke $r4.<okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)>($r5);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r6 = staticinvoke <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Http2Connection.Listener failure for ");

        $r2 = r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1>;

        $r3 = $r2.<okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0>;

        $r8 = $r3.<okhttp3.internal.http2.Http2Connection: java.lang.String hostname>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)>(4, $r8, r1);

        $r5 = r0.<okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream>;

        $r9 = <okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR>;

     label4:
        virtualinvoke $r5.<okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)>($r9);

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }
