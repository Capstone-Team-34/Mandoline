okhttp3.internal.http.HttpMethod extends java.lang.Object
    private void <init>()
    {
        okhttp3.internal.http.HttpMethod r0;

        r0 := @this: okhttp3.internal.http.HttpMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean invalidatesCache(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PATCH");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PUT");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("DELETE");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("MOVE");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static boolean permitsRequestBody(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("DELETE");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PROPFIND");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("MKCOL");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("LOCK");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static boolean redirectsToGet(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PROPFIND");

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static boolean redirectsWithBody(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PROPFIND");

        return $z0;
    }
    public static boolean requiresRequestBody(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PUT");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PATCH");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("PROPPATCH");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("REPORT");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
