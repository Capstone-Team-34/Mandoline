okhttp3.internal.cache.DiskLruCache$Editor extends java.lang.Object
private boolean done
final okhttp3.internal.cache.DiskLruCache$Entry entry
final okhttp3.internal.cache.DiskLruCache this$0
final boolean[] written
    void <init>(okhttp3.internal.cache.DiskLruCache, okhttp3.internal.cache.DiskLruCache$Entry)
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0;
        okhttp3.internal.cache.DiskLruCache $r1;
        okhttp3.internal.cache.DiskLruCache$Entry $r2;
        boolean $z0;
        boolean[] $r3;
        int $i0;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $r1 := @parameter0: okhttp3.internal.cache.DiskLruCache;

        $r2 := @parameter1: okhttp3.internal.cache.DiskLruCache$Entry;

        r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry> = $r2;

        $z0 = $r2.<okhttp3.internal.cache.DiskLruCache$Entry: boolean readable>;

        if $z0 == 0 goto label2;

        $r3 = null;

     label1:
        r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written> = $r3;

        return;

     label2:
        $i0 = $r1.<okhttp3.internal.cache.DiskLruCache: int valueCount>;

        $r3 = newarray (boolean)[$i0];

        goto label1;
    }
    public void abort() throws java.io.IOException
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r5;
        okhttp3.internal.cache.DiskLruCache $r1, $r6;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        okhttp3.internal.cache.DiskLruCache$Entry $r4;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r1;

     label1:
        $z0 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done>;

        if $z0 == 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label3:
        throw $r3;

     label4:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r5 = $r4.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

        if $r5 != r0 goto label5;

        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        virtualinvoke $r6.<okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)>(r0, 0);

     label5:
        r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done> = 1;

        exitmonitor $r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label6 with label2;
    }
    public void abortUnlessCommitted()
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r3;
        okhttp3.internal.cache.DiskLruCache $r1, $r4;
        boolean $z0;
        okhttp3.internal.cache.DiskLruCache$Entry $r2;
        java.lang.Throwable $r5;
        java.io.IOException $r6;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r1;

     label1:
        $z0 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done>;

        if $z0 != 0 goto label5;

        $r2 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r3 = $r2.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

     label2:
        if $r3 != r0 goto label5;

     label3:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

     label4:
        virtualinvoke $r4.<okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)>(r0, 0);

     label5:
        exitmonitor $r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r5;

     label9:
        $r6 := @caughtexception;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.io.IOException from label4 to label5 with label9;
        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
    public void commit() throws java.io.IOException
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r5;
        okhttp3.internal.cache.DiskLruCache $r1, $r6;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        okhttp3.internal.cache.DiskLruCache$Entry $r4;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r1;

     label1:
        $z0 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done>;

        if $z0 == 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label3:
        throw $r3;

     label4:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r5 = $r4.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

        if $r5 != r0 goto label5;

        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        virtualinvoke $r6.<okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)>(r0, 1);

     label5:
        r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done> = 1;

        exitmonitor $r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label6 with label2;
    }
    void detach()
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r2;
        okhttp3.internal.cache.DiskLruCache$Entry $r1;
        int i0, $i1;
        okhttp3.internal.cache.DiskLruCache $r3;
        okhttp3.internal.io.FileSystem $r4;
        java.io.File[] $r5;
        java.io.File $r6;
        java.io.IOException $r7;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r2 = $r1.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

        if $r2 != r0 goto label6;

        i0 = 0;

     label1:
        $r3 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        $i1 = $r3.<okhttp3.internal.cache.DiskLruCache: int valueCount>;

        if i0 >= $i1 goto label4;

        $r3 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        $r4 = $r3.<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem>;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r5 = $r1.<okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        $r6 = $r5[i0];

     label2:
        interfaceinvoke $r4.<okhttp3.internal.io.FileSystem: void delete(java.io.File)>($r6);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r1.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor> = null;

        return;

     label5:
        $r7 := @caughtexception;

        goto label3;

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label5;
    }
    public okio.Sink newSink(int)
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r7;
        int $i0;
        java.io.File r1;
        java.io.FileNotFoundException r2;
        okhttp3.internal.cache.DiskLruCache $r3, $r11;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;
        okhttp3.internal.cache.DiskLruCache$Entry $r6;
        okio.Sink $r8;
        boolean[] $r9;
        java.io.File[] $r10;
        okhttp3.internal.io.FileSystem $r12;
        okhttp3.internal.cache.DiskLruCache$Editor$1 $r13;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r3 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r3;

     label01:
        $z0 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done>;

        if $z0 == 0 goto label04;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label02:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label03:
        throw $r5;

     label04:
        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r7 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

        if $r7 == r0 goto label06;

        $r8 = staticinvoke <okio.Okio: okio.Sink blackhole()>();

        exitmonitor $r3;

     label05:
        return $r8;

     label06:
        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $z0 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: boolean readable>;

        if $z0 != 0 goto label07;

        $r9 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written>;

        $r9[$i0] = 1;

     label07:
        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r10 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles>;

        r1 = $r10[$i0];

     label08:
        $r11 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        $r12 = $r11.<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem>;

     label09:
        $r8 = interfaceinvoke $r12.<okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)>(r1);

     label10:
        $r13 = new okhttp3.internal.cache.DiskLruCache$Editor$1;

        specialinvoke $r13.<okhttp3.internal.cache.DiskLruCache$Editor$1: void <init>(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink)>(r0, $r8);

        exitmonitor $r3;

     label11:
        return $r13;

     label12:
        r2 := @caughtexception;

        $r8 = staticinvoke <okio.Okio: okio.Sink blackhole()>();

        exitmonitor $r3;

     label13:
        return $r8;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label06 to label08 with label02;
        catch java.io.FileNotFoundException from label09 to label10 with label12;
        catch java.lang.Throwable from label08 to label10 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
    }
    public okio.Source newSource(int)
    {
        okhttp3.internal.cache.DiskLruCache$Editor r0, $r7;
        int $i0;
        java.io.FileNotFoundException r1;
        okhttp3.internal.cache.DiskLruCache $r2, $r8;
        okio.Source $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;
        okhttp3.internal.cache.DiskLruCache$Entry $r6;
        okhttp3.internal.io.FileSystem $r9;
        java.io.File[] $r10;
        java.io.File $r11;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r2 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r2;

     label01:
        $z0 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: boolean done>;

        if $z0 == 0 goto label04;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label02:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label03:
        throw $r5;

     label04:
        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $z0 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: boolean readable>;

        if $z0 == 0 goto label05;

        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r7 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor>;

        if $r7 == r0 goto label07;

     label05:
        exitmonitor $r2;

     label06:
        return null;

     label07:
        $r8 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0>;

        $r9 = $r8.<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem>;

        $r6 = r0.<okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry>;

        $r10 = $r6.<okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] cleanFiles>;

        $r11 = $r10[$i0];

     label08:
        $r3 = interfaceinvoke $r9.<okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)>($r11);

     label09:
        exitmonitor $r2;

     label10:
        return $r3;

     label11:
        r1 := @caughtexception;

        exitmonitor $r2;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label04 to label06 with label02;
        catch java.io.FileNotFoundException from label08 to label09 with label11;
        catch java.lang.Throwable from label07 to label09 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
    }
