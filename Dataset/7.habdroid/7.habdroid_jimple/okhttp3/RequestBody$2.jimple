okhttp3.RequestBody$2 extends okhttp3.RequestBody
final int val$byteCount
final byte[] val$content
final okhttp3.MediaType val$contentType
final int val$offset
    void <init>(okhttp3.MediaType, int, byte[], int)
    {
        okhttp3.RequestBody$2 r0;
        okhttp3.MediaType $r1;
        int $i0, $i1;
        byte[] $r2;

        r0 := @this: okhttp3.RequestBody$2;

        $r1 := @parameter0: okhttp3.MediaType;

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        r0.<okhttp3.RequestBody$2: okhttp3.MediaType val$contentType> = $r1;

        r0.<okhttp3.RequestBody$2: int val$byteCount> = $i0;

        r0.<okhttp3.RequestBody$2: byte[] val$content> = $r2;

        r0.<okhttp3.RequestBody$2: int val$offset> = $i1;

        specialinvoke r0.<okhttp3.RequestBody: void <init>()>();

        return;
    }
    public long contentLength()
    {
        okhttp3.RequestBody$2 r0;
        int $i0;
        long $l1;

        r0 := @this: okhttp3.RequestBody$2;

        $i0 = r0.<okhttp3.RequestBody$2: int val$byteCount>;

        $l1 = (long) $i0;

        return $l1;
    }
    public okhttp3.MediaType contentType()
    {
        okhttp3.RequestBody$2 r0;
        okhttp3.MediaType r1;

        r0 := @this: okhttp3.RequestBody$2;

        r1 = r0.<okhttp3.RequestBody$2: okhttp3.MediaType val$contentType>;

        return r1;
    }
    public void writeTo(okio.BufferedSink) throws java.io.IOException
    {
        okhttp3.RequestBody$2 r0;
        okio.BufferedSink $r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: okhttp3.RequestBody$2;

        $r1 := @parameter0: okio.BufferedSink;

        $r2 = r0.<okhttp3.RequestBody$2: byte[] val$content>;

        $i0 = r0.<okhttp3.RequestBody$2: int val$offset>;

        $i1 = r0.<okhttp3.RequestBody$2: int val$byteCount>;

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink write(byte[],int,int)>($r2, $i0, $i1);

        return;
    }
