javax.jmdns.impl.constants.DNSResultCode extends java.lang.Enum
private static final javax.jmdns.impl.constants.DNSResultCode[] $VALUES
static final int ExtendedRCode_MASK
public static final enum javax.jmdns.impl.constants.DNSResultCode FormErr
public static final enum javax.jmdns.impl.constants.DNSResultCode NXDomain
public static final enum javax.jmdns.impl.constants.DNSResultCode NXRRSet
public static final enum javax.jmdns.impl.constants.DNSResultCode NoError
public static final enum javax.jmdns.impl.constants.DNSResultCode NotAuth
public static final enum javax.jmdns.impl.constants.DNSResultCode NotImp
public static final enum javax.jmdns.impl.constants.DNSResultCode NotZone
static final int RCode_MASK
public static final enum javax.jmdns.impl.constants.DNSResultCode Refused
public static final enum javax.jmdns.impl.constants.DNSResultCode ServFail
public static final enum javax.jmdns.impl.constants.DNSResultCode Unknown
public static final enum javax.jmdns.impl.constants.DNSResultCode YXDomain
public static final enum javax.jmdns.impl.constants.DNSResultCode YXRRSet
private final java.lang.String _externalName
private final int _index
    static void <clinit>()
    {
        javax.jmdns.impl.constants.DNSResultCode $r0;
        javax.jmdns.impl.constants.DNSResultCode[] $r1;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("Unknown", 0, "Unknown", 65535);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Unknown> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NoError", 1, "No Error", 0);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NoError> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("FormErr", 2, "Format Error", 1);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode FormErr> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("ServFail", 3, "Server Failure", 2);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode ServFail> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NXDomain", 4, "Non-Existent Domain", 3);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NXDomain> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NotImp", 5, "Not Implemented", 4);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotImp> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("Refused", 6, "Query Refused", 5);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Refused> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("YXDomain", 7, "Name Exists when it should not", 6);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode YXDomain> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("YXRRSet", 8, "RR Set Exists when it should not", 7);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode YXRRSet> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NXRRSet", 9, "RR Set that should exist does not", 8);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NXRRSet> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NotAuth", 10, "Server Not Authoritative for zone", 9);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotAuth> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSResultCode;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSResultCode: void <init>(java.lang.String,int,java.lang.String,int)>("NotZone", 11, "NotZone Name not contained in zone", 10);

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotZone> = $r0;

        $r1 = newarray (javax.jmdns.impl.constants.DNSResultCode)[12];

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Unknown>;

        $r1[0] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NoError>;

        $r1[1] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode FormErr>;

        $r1[2] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode ServFail>;

        $r1[3] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NXDomain>;

        $r1[4] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotImp>;

        $r1[5] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Refused>;

        $r1[6] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode YXDomain>;

        $r1[7] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode YXRRSet>;

        $r1[8] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NXRRSet>;

        $r1[9] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotAuth>;

        $r1[10] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode NotZone>;

        $r1[11] = $r0;

        <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String, int)
    {
        javax.jmdns.impl.constants.DNSResultCode r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;

        r0 := @this: javax.jmdns.impl.constants.DNSResultCode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<javax.jmdns.impl.constants.DNSResultCode: java.lang.String _externalName> = $r2;

        r0.<javax.jmdns.impl.constants.DNSResultCode: int _index> = $i1;

        return;
    }
    public static javax.jmdns.impl.constants.DNSResultCode resultCodeForFlags(int)
    {
        int $i0, i1, $i2, i3;
        javax.jmdns.impl.constants.DNSResultCode[] $r0;
        javax.jmdns.impl.constants.DNSResultCode r1;

        $i0 := @parameter0: int;

        i1 = $i0 & 15;

        $r0 = staticinvoke <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode[] values()>();

        $i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        r1 = $r0[i3];

        $i2 = r1.<javax.jmdns.impl.constants.DNSResultCode: int _index>;

        if $i2 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r1 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Unknown>;

        return r1;
    }
    public static javax.jmdns.impl.constants.DNSResultCode resultCodeForFlags(int, int)
    {
        int $i0, $i1, i2, $i3;
        javax.jmdns.impl.constants.DNSResultCode[] $r0;
        javax.jmdns.impl.constants.DNSResultCode r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = $i1 >> 28;

        $i1 = $i1 & 255;

        $i0 = $i0 & 15;

        $i1 = $i1 | $i0;

        $r0 = staticinvoke <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode[] values()>();

        $i0 = lengthof $r0;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        r1 = $r0[i2];

        $i3 = r1.<javax.jmdns.impl.constants.DNSResultCode: int _index>;

        if $i3 != $i1 goto label2;

        return r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r1 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode Unknown>;

        return r1;
    }
    public static javax.jmdns.impl.constants.DNSResultCode valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        javax.jmdns.impl.constants.DNSResultCode $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljavax/jmdns/impl/constants/DNSResultCode;", $r0);

        $r2 = (javax.jmdns.impl.constants.DNSResultCode) $r1;

        return $r2;
    }
    public static javax.jmdns.impl.constants.DNSResultCode[] values()
    {
        java.lang.Object $r0;
        javax.jmdns.impl.constants.DNSResultCode[] $r1;

        $r1 = <javax.jmdns.impl.constants.DNSResultCode: javax.jmdns.impl.constants.DNSResultCode[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (javax.jmdns.impl.constants.DNSResultCode[]) $r0;

        return $r1;
    }
    public java.lang.String externalName()
    {
        javax.jmdns.impl.constants.DNSResultCode r0;
        java.lang.String r1;

        r0 := @this: javax.jmdns.impl.constants.DNSResultCode;

        r1 = r0.<javax.jmdns.impl.constants.DNSResultCode: java.lang.String _externalName>;

        return r1;
    }
    public int indexValue()
    {
        javax.jmdns.impl.constants.DNSResultCode r0;
        int i0;

        r0 := @this: javax.jmdns.impl.constants.DNSResultCode;

        i0 = r0.<javax.jmdns.impl.constants.DNSResultCode: int _index>;

        return i0;
    }
    public java.lang.String toString()
    {
        javax.jmdns.impl.constants.DNSResultCode r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: javax.jmdns.impl.constants.DNSResultCode;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<javax.jmdns.impl.constants.DNSResultCode: java.lang.String name()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" index ");

        $i0 = virtualinvoke r0.<javax.jmdns.impl.constants.DNSResultCode: int indexValue()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
