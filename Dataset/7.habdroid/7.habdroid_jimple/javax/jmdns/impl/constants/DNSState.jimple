javax.jmdns.impl.constants.DNSState extends java.lang.Enum
private static final javax.jmdns.impl.constants.DNSState[] $VALUES
public static final enum javax.jmdns.impl.constants.DNSState ANNOUNCED
public static final enum javax.jmdns.impl.constants.DNSState ANNOUNCING_1
public static final enum javax.jmdns.impl.constants.DNSState ANNOUNCING_2
public static final enum javax.jmdns.impl.constants.DNSState CANCELED
public static final enum javax.jmdns.impl.constants.DNSState CANCELING_1
public static final enum javax.jmdns.impl.constants.DNSState CANCELING_2
public static final enum javax.jmdns.impl.constants.DNSState CANCELING_3
public static final enum javax.jmdns.impl.constants.DNSState CLOSED
public static final enum javax.jmdns.impl.constants.DNSState CLOSING
public static final enum javax.jmdns.impl.constants.DNSState PROBING_1
public static final enum javax.jmdns.impl.constants.DNSState PROBING_2
public static final enum javax.jmdns.impl.constants.DNSState PROBING_3
private final java.lang.String _name
private final javax.jmdns.impl.constants.DNSState$StateClass _state
    static void <clinit>()
    {
        javax.jmdns.impl.constants.DNSState $r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1;
        javax.jmdns.impl.constants.DNSState[] $r2;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass probing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("PROBING_1", 0, "probing 1", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_1> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass probing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("PROBING_2", 1, "probing 2", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_2> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass probing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("PROBING_3", 2, "probing 3", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_3> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass announcing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("ANNOUNCING_1", 3, "announcing 1", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_1> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass announcing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("ANNOUNCING_2", 4, "announcing 2", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_2> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass announced>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("ANNOUNCED", 5, "announced", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCED> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceling>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CANCELING_1", 6, "canceling 1", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_1> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceling>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CANCELING_2", 7, "canceling 2", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_2> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceling>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CANCELING_3", 8, "canceling 3", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_3> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceled>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CANCELED", 9, "canceled", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELED> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass closing>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CLOSING", 10, "closing", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSING> = $r0;

        $r0 = new javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass closed>;

        specialinvoke $r0.<javax.jmdns.impl.constants.DNSState: void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass)>("CLOSED", 11, "closed", $r1);

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSED> = $r0;

        $r2 = newarray (javax.jmdns.impl.constants.DNSState)[12];

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_1>;

        $r2[0] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_2>;

        $r2[1] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_3>;

        $r2[2] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_1>;

        $r2[3] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_2>;

        $r2[4] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCED>;

        $r2[5] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_1>;

        $r2[6] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_2>;

        $r2[7] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_3>;

        $r2[8] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELED>;

        $r2[9] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSING>;

        $r2[10] = $r0;

        $r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSED>;

        $r2[11] = $r0;

        <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState[] $VALUES> = $r2;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String, javax.jmdns.impl.constants.DNSState$StateClass)
    {
        javax.jmdns.impl.constants.DNSState r0;
        java.lang.String $r1, $r2;
        int $i0;
        javax.jmdns.impl.constants.DNSState$StateClass $r3;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: javax.jmdns.impl.constants.DNSState$StateClass;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<javax.jmdns.impl.constants.DNSState: java.lang.String _name> = $r2;

        r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state> = $r3;

        return;
    }
    public static javax.jmdns.impl.constants.DNSState valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        javax.jmdns.impl.constants.DNSState $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljavax/jmdns/impl/constants/DNSState;", $r0);

        $r2 = (javax.jmdns.impl.constants.DNSState) $r1;

        return $r2;
    }
    public static javax.jmdns.impl.constants.DNSState[] values()
    {
        java.lang.Object $r0;
        javax.jmdns.impl.constants.DNSState[] $r1;

        $r1 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (javax.jmdns.impl.constants.DNSState[]) $r0;

        return $r1;
    }
    public final javax.jmdns.impl.constants.DNSState advance()
    {
        int $i0;
        javax.jmdns.impl.constants.DNSState r0;
        int[] $r1;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$1: int[] $SwitchMap$javax$jmdns$impl$constants$DNSState>;

        $i0 = virtualinvoke r0.<javax.jmdns.impl.constants.DNSState: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            default: goto label01;
        };

     label01:
        return r0;

     label02:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_2>;

        return r0;

     label03:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_3>;

        return r0;

     label04:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_1>;

        return r0;

     label05:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_2>;

        return r0;

     label06:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCED>;

        return r0;

     label07:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCED>;

        return r0;

     label08:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_2>;

        return r0;

     label09:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_3>;

        return r0;

     label10:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELED>;

        return r0;

     label11:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELED>;

        return r0;

     label12:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSED>;

        return r0;

     label13:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSED>;

        return r0;
    }
    public final boolean isAnnounced()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass announced>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isAnnouncing()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass announcing>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isCanceled()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceled>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isCanceling()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass canceling>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isClosed()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass closed>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isClosing()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass closing>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isProbing()
    {
        javax.jmdns.impl.constants.DNSState r0;
        javax.jmdns.impl.constants.DNSState$StateClass $r1, $r2;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r2 = r0.<javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState$StateClass _state>;

        $r1 = <javax.jmdns.impl.constants.DNSState$StateClass: javax.jmdns.impl.constants.DNSState$StateClass probing>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final javax.jmdns.impl.constants.DNSState revert()
    {
        int $i0;
        javax.jmdns.impl.constants.DNSState r0;
        int[] $r1;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        $r1 = <javax.jmdns.impl.constants.DNSState$1: int[] $SwitchMap$javax$jmdns$impl$constants$DNSState>;

        $i0 = virtualinvoke r0.<javax.jmdns.impl.constants.DNSState: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label4;
            case 11: goto label5;
            case 12: goto label6;
            default: goto label1;
        };

     label1:
        return r0;

     label2:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState PROBING_1>;

        return r0;

     label3:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELING_1>;

        return r0;

     label4:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CANCELED>;

        return r0;

     label5:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSING>;

        return r0;

     label6:
        r0 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState CLOSED>;

        return r0;
    }
    public final java.lang.String toString()
    {
        javax.jmdns.impl.constants.DNSState r0;
        java.lang.String r1;

        r0 := @this: javax.jmdns.impl.constants.DNSState;

        r1 = r0.<javax.jmdns.impl.constants.DNSState: java.lang.String _name>;

        return r1;
    }
