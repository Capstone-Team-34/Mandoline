javax.jmdns.impl.util.NamedThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory
private final java.util.concurrent.ThreadFactory _delegate
private final java.lang.String _namePrefix
    public void <init>(java.lang.String)
    {
        javax.jmdns.impl.util.NamedThreadFactory r0;
        java.lang.String $r1;
        java.util.concurrent.ThreadFactory $r2;

        r0 := @this: javax.jmdns.impl.util.NamedThreadFactory;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.jmdns.impl.util.NamedThreadFactory: java.lang.String _namePrefix> = $r1;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        r0.<javax.jmdns.impl.util.NamedThreadFactory: java.util.concurrent.ThreadFactory _delegate> = $r2;

        return;
    }
    public java.lang.Thread newThread(java.lang.Runnable)
    {
        javax.jmdns.impl.util.NamedThreadFactory r0;
        java.lang.Runnable $r1;
        java.util.concurrent.ThreadFactory $r2;
        java.lang.Thread $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: javax.jmdns.impl.util.NamedThreadFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<javax.jmdns.impl.util.NamedThreadFactory: java.util.concurrent.ThreadFactory _delegate>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<javax.jmdns.impl.util.NamedThreadFactory: java.lang.String _namePrefix>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r5 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.Thread: void setName(java.lang.String)>($r5);

        return $r3;
    }
