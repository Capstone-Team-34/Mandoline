javax.jmdns.impl.JmmDNSImpl$4 extends java.lang.Object implements java.util.concurrent.Callable
final javax.jmdns.impl.JmmDNSImpl this$0
final javax.jmdns.JmDNS val$mDNS
final long val$timeout
final java.lang.String val$type
    void <init>(javax.jmdns.impl.JmmDNSImpl, javax.jmdns.JmDNS, java.lang.String, long)
    {
        javax.jmdns.impl.JmmDNSImpl$4 r0;
        javax.jmdns.impl.JmmDNSImpl $r1;
        javax.jmdns.JmDNS $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @this: javax.jmdns.impl.JmmDNSImpl$4;

        $r1 := @parameter0: javax.jmdns.impl.JmmDNSImpl;

        $r2 := @parameter1: javax.jmdns.JmDNS;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        r0.<javax.jmdns.impl.JmmDNSImpl$4: javax.jmdns.impl.JmmDNSImpl this$0> = $r1;

        r0.<javax.jmdns.impl.JmmDNSImpl$4: javax.jmdns.JmDNS val$mDNS> = $r2;

        r0.<javax.jmdns.impl.JmmDNSImpl$4: java.lang.String val$type> = $r3;

        r0.<javax.jmdns.impl.JmmDNSImpl$4: long val$timeout> = $l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        javax.jmdns.impl.JmmDNSImpl$4 r0;
        java.util.List $r1;

        r0 := @this: javax.jmdns.impl.JmmDNSImpl$4;

        $r1 = virtualinvoke r0.<javax.jmdns.impl.JmmDNSImpl$4: java.util.List call()>();

        return $r1;
    }
    public java.util.List call() throws java.lang.Exception
    {
        javax.jmdns.impl.JmmDNSImpl$4 r0;
        java.lang.String $r1;
        long $l0;
        javax.jmdns.JmDNS $r2;
        javax.jmdns.ServiceInfo[] $r3;
        java.util.List $r4;

        r0 := @this: javax.jmdns.impl.JmmDNSImpl$4;

        $r2 = r0.<javax.jmdns.impl.JmmDNSImpl$4: javax.jmdns.JmDNS val$mDNS>;

        $r1 = r0.<javax.jmdns.impl.JmmDNSImpl$4: java.lang.String val$type>;

        $l0 = r0.<javax.jmdns.impl.JmmDNSImpl$4: long val$timeout>;

        $r3 = virtualinvoke $r2.<javax.jmdns.JmDNS: javax.jmdns.ServiceInfo[] list(java.lang.String,long)>($r1, $l0);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }
