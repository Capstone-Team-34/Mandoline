javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState extends javax.jmdns.impl.DNSStatefulObject$DefaultImplementation
private static final long serialVersionUID
private final javax.jmdns.impl.ServiceInfoImpl _info
    public void <init>(javax.jmdns.impl.ServiceInfoImpl)
    {
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState r0;
        javax.jmdns.impl.ServiceInfoImpl $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState;

        $r1 := @parameter0: javax.jmdns.impl.ServiceInfoImpl;

        specialinvoke r0.<javax.jmdns.impl.DNSStatefulObject$DefaultImplementation: void <init>()>();

        r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.ServiceInfoImpl _info> = $r1;

        return;
    }
    public void setDns(javax.jmdns.impl.JmDNSImpl)
    {
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState r0;
        javax.jmdns.impl.JmDNSImpl $r1;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState;

        $r1 := @parameter0: javax.jmdns.impl.JmDNSImpl;

        specialinvoke r0.<javax.jmdns.impl.DNSStatefulObject$DefaultImplementation: void setDns(javax.jmdns.impl.JmDNSImpl)>($r1);

        return;
    }
    protected void setTask(javax.jmdns.impl.tasks.DNSTask)
    {
        javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState r0;
        javax.jmdns.impl.tasks.DNSTask $r1;
        javax.jmdns.impl.ServiceInfoImpl $r2;
        boolean $z0;
        javax.jmdns.impl.constants.DNSState $r3;
        javax.jmdns.impl.JmDNSImpl $r4;
        java.lang.Throwable $r5;

        r0 := @this: javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState;

        $r1 := @parameter0: javax.jmdns.impl.tasks.DNSTask;

        specialinvoke r0.<javax.jmdns.impl.DNSStatefulObject$DefaultImplementation: void setTask(javax.jmdns.impl.tasks.DNSTask)>($r1);

        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.tasks.DNSTask _task>;

        if $r1 != null goto label13;

        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.ServiceInfoImpl _info>;

        $z0 = virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl: boolean needTextAnnouncing()>();

        if $z0 == 0 goto label13;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void lock()>();

     label01:
        $r1 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.tasks.DNSTask _task>;

     label02:
        if $r1 != null goto label11;

     label03:
        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.ServiceInfoImpl _info>;

        $z0 = virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl: boolean needTextAnnouncing()>();

     label04:
        if $z0 == 0 goto label11;

     label05:
        $r3 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.constants.DNSState _state>;

        $z0 = virtualinvoke $r3.<javax.jmdns.impl.constants.DNSState: boolean isAnnounced()>();

     label06:
        if $z0 == 0 goto label10;

     label07:
        $r3 = <javax.jmdns.impl.constants.DNSState: javax.jmdns.impl.constants.DNSState ANNOUNCING_1>;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void setState(javax.jmdns.impl.constants.DNSState)>($r3);

        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.JmDNSImpl getDns()>();

     label08:
        if $r4 == null goto label10;

     label09:
        $r4 = virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.JmDNSImpl getDns()>();

        virtualinvoke $r4.<javax.jmdns.impl.JmDNSImpl: void startAnnouncer()>();

     label10:
        $r2 = r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: javax.jmdns.impl.ServiceInfoImpl _info>;

        virtualinvoke $r2.<javax.jmdns.impl.ServiceInfoImpl: void setNeedTextAnnouncing(boolean)>(0);

     label11:
        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void unlock()>();

        return;

     label12:
        $r5 := @caughtexception;

        virtualinvoke r0.<javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState: void unlock()>();

        throw $r5;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
    }
