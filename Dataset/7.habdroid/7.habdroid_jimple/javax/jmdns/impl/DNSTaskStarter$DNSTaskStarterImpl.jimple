javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl extends java.lang.Object implements javax.jmdns.impl.DNSTaskStarter
private final javax.jmdns.impl.JmDNSImpl _jmDNSImpl
private final java.util.Timer _stateTimer
private final java.util.Timer _timer
    public void <init>(javax.jmdns.impl.JmDNSImpl)
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.JmDNSImpl $r1;
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 := @parameter0: javax.jmdns.impl.JmDNSImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl> = $r1;

        $r2 = new javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JmDNS(");

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        $r4 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").Timer");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer: void <init>(java.lang.String,boolean)>($r4, 1);

        r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer> = $r2;

        $r2 = new javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JmDNS(");

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        $r4 = virtualinvoke $r1.<javax.jmdns.impl.JmDNSImpl: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").State.Timer");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer: void <init>(java.lang.String,boolean)>($r4, 1);

        r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer> = $r2;

        return;
    }
    public void cancelStateTimer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        java.util.Timer $r1;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        return;
    }
    public void cancelTimer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        java.util.Timer $r1;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        return;
    }
    public void purgeStateTimer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        java.util.Timer $r1;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<java.util.Timer: int purge()>();

        return;
    }
    public void purgeTimer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        java.util.Timer $r1;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r1.<java.util.Timer: int purge()>();

        return;
    }
    public void startAnnouncer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.state.Announcer $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.state.Announcer;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.state.Announcer: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.state.Announcer: void start(java.util.Timer)>($r3);

        return;
    }
    public void startCanceler()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.state.Canceler $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.state.Canceler;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.state.Canceler: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.state.Canceler: void start(java.util.Timer)>($r3);

        return;
    }
    public void startProber()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.state.Prober $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.state.Prober;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.state.Prober: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.state.Prober: void start(java.util.Timer)>($r3);

        return;
    }
    public void startReaper()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.RecordReaper $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.RecordReaper;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.RecordReaper: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.RecordReaper: void start(java.util.Timer)>($r3);

        return;
    }
    public void startRenewer()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.state.Renewer $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.state.Renewer;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.state.Renewer: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _stateTimer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.state.Renewer: void start(java.util.Timer)>($r3);

        return;
    }
    public void startResponder(javax.jmdns.impl.DNSIncoming, java.net.InetAddress, int)
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.DNSIncoming $r1;
        java.net.InetAddress $r2;
        int $i0;
        javax.jmdns.impl.tasks.Responder $r3;
        javax.jmdns.impl.JmDNSImpl $r4;
        java.util.Timer $r5;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 := @parameter0: javax.jmdns.impl.DNSIncoming;

        $r2 := @parameter1: java.net.InetAddress;

        $i0 := @parameter2: int;

        $r3 = new javax.jmdns.impl.tasks.Responder;

        $r4 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r3.<javax.jmdns.impl.tasks.Responder: void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int)>($r4, $r1, $r2, $i0);

        $r5 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r3.<javax.jmdns.impl.tasks.Responder: void start(java.util.Timer)>($r5);

        return;
    }
    public void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl)
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.ServiceInfoImpl $r1;
        javax.jmdns.impl.tasks.resolver.ServiceInfoResolver $r2;
        javax.jmdns.impl.JmDNSImpl $r3;
        java.util.Timer $r4;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 := @parameter0: javax.jmdns.impl.ServiceInfoImpl;

        $r2 = new javax.jmdns.impl.tasks.resolver.ServiceInfoResolver;

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r2.<javax.jmdns.impl.tasks.resolver.ServiceInfoResolver: void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ServiceInfoImpl)>($r3, $r1);

        $r4 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r2.<javax.jmdns.impl.tasks.resolver.ServiceInfoResolver: void start(java.util.Timer)>($r4);

        return;
    }
    public void startServiceResolver(java.lang.String)
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        java.lang.String $r1;
        javax.jmdns.impl.tasks.resolver.ServiceResolver $r2;
        javax.jmdns.impl.JmDNSImpl $r3;
        java.util.Timer $r4;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new javax.jmdns.impl.tasks.resolver.ServiceResolver;

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r2.<javax.jmdns.impl.tasks.resolver.ServiceResolver: void <init>(javax.jmdns.impl.JmDNSImpl,java.lang.String)>($r3, $r1);

        $r4 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r2.<javax.jmdns.impl.tasks.resolver.ServiceResolver: void start(java.util.Timer)>($r4);

        return;
    }
    public void startTypeResolver()
    {
        javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl r0;
        javax.jmdns.impl.tasks.resolver.TypeResolver $r1;
        javax.jmdns.impl.JmDNSImpl $r2;
        java.util.Timer $r3;

        r0 := @this: javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl;

        $r1 = new javax.jmdns.impl.tasks.resolver.TypeResolver;

        $r2 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: javax.jmdns.impl.JmDNSImpl _jmDNSImpl>;

        specialinvoke $r1.<javax.jmdns.impl.tasks.resolver.TypeResolver: void <init>(javax.jmdns.impl.JmDNSImpl)>($r2);

        $r3 = r0.<javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl: java.util.Timer _timer>;

        virtualinvoke $r1.<javax.jmdns.impl.tasks.resolver.TypeResolver: void start(java.util.Timer)>($r3);

        return;
    }
