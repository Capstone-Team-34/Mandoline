javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface extends javax.jmdns.impl.NameRegister$BaseRegister
    public void <init>()
    {
        javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface r0;

        r0 := @this: javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface;

        specialinvoke r0.<javax.jmdns.impl.NameRegister$BaseRegister: void <init>()>();

        return;
    }
    public boolean checkName(java.net.InetAddress, java.lang.String, javax.jmdns.impl.NameRegister$NameType)
    {
        javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;
        javax.jmdns.impl.NameRegister$NameType $r3;
        int $i0;
        int[] $r4;

        r0 := @this: javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface;

        $r1 := @parameter0: java.net.InetAddress;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: javax.jmdns.impl.NameRegister$NameType;

        $r4 = <javax.jmdns.impl.NameRegister$1: int[] $SwitchMap$javax$jmdns$impl$NameRegister$NameType>;

        $i0 = virtualinvoke $r3.<javax.jmdns.impl.NameRegister$NameType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            default: goto label1;
        };

     label1:
        return 0;
    }
    public java.lang.String incrementName(java.net.InetAddress, java.lang.String, javax.jmdns.impl.NameRegister$NameType)
    {
        javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface r0;
        java.net.InetAddress $r1;
        javax.jmdns.impl.NameRegister$NameType $r2;
        java.lang.String r3;
        int[] $r4;
        int $i0;

        r0 := @this: javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface;

        $r1 := @parameter0: java.net.InetAddress;

        r3 := @parameter1: java.lang.String;

        $r2 := @parameter2: javax.jmdns.impl.NameRegister$NameType;

        $r4 = <javax.jmdns.impl.NameRegister$1: int[] $SwitchMap$javax$jmdns$impl$NameRegister$NameType>;

        $i0 = virtualinvoke $r2.<javax.jmdns.impl.NameRegister$NameType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return r3;

     label2:
        r3 = virtualinvoke r0.<javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface: java.lang.String incrementNameWithDash(java.lang.String)>(r3);

        return r3;

     label3:
        r3 = virtualinvoke r0.<javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface: java.lang.String incrementNameWithParentesis(java.lang.String)>(r3);

        return r3;
    }
    public void register(java.net.InetAddress, java.lang.String, javax.jmdns.impl.NameRegister$NameType)
    {
        javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;
        javax.jmdns.impl.NameRegister$NameType $r3;
        int $i0;
        int[] $r4;

        r0 := @this: javax.jmdns.impl.NameRegister$UniqueNameAcrossInterface;

        $r1 := @parameter0: java.net.InetAddress;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: javax.jmdns.impl.NameRegister$NameType;

        $r4 = <javax.jmdns.impl.NameRegister$1: int[] $SwitchMap$javax$jmdns$impl$NameRegister$NameType>;

        $i0 = virtualinvoke $r3.<javax.jmdns.impl.NameRegister$NameType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            default: goto label1;
        };

     label1:
        return;
    }
