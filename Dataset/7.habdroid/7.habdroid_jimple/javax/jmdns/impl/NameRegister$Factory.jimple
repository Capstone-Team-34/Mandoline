javax.jmdns.impl.NameRegister$Factory extends java.lang.Object
private static volatile javax.jmdns.impl.NameRegister _register
    public void <init>()
    {
        javax.jmdns.impl.NameRegister$Factory r0;

        r0 := @this: javax.jmdns.impl.NameRegister$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static javax.jmdns.impl.NameRegister getRegistry()
    {
        javax.jmdns.impl.NameRegister $r0;
        javax.jmdns.impl.NameRegister$UniqueNamePerInterface $r1;

        $r0 = <javax.jmdns.impl.NameRegister$Factory: javax.jmdns.impl.NameRegister _register>;

        if $r0 != null goto label1;

        $r1 = new javax.jmdns.impl.NameRegister$UniqueNamePerInterface;

        specialinvoke $r1.<javax.jmdns.impl.NameRegister$UniqueNamePerInterface: void <init>()>();

        <javax.jmdns.impl.NameRegister$Factory: javax.jmdns.impl.NameRegister _register> = $r1;

     label1:
        $r0 = <javax.jmdns.impl.NameRegister$Factory: javax.jmdns.impl.NameRegister _register>;

        return $r0;
    }
    public static void setRegistry(javax.jmdns.impl.NameRegister) throws java.lang.IllegalStateException
    {
        javax.jmdns.impl.NameRegister $r0, $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @parameter0: javax.jmdns.impl.NameRegister;

        $r1 = <javax.jmdns.impl.NameRegister$Factory: javax.jmdns.impl.NameRegister _register>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The register can only be set once.");

        throw $r2;

     label1:
        if $r0 == null goto label2;

        <javax.jmdns.impl.NameRegister$Factory: javax.jmdns.impl.NameRegister _register> = $r0;

     label2:
        return;
    }
