com.caverock.androidsvg.SVG extends java.lang.Object
private static final int DEFAULT_PICTURE_HEIGHT
private static final int DEFAULT_PICTURE_WIDTH
private static final long SPECIFIED_ALL
static final long SPECIFIED_CLIP
static final long SPECIFIED_CLIP_PATH
static final long SPECIFIED_CLIP_RULE
static final long SPECIFIED_COLOR
static final long SPECIFIED_DIRECTION
static final long SPECIFIED_DISPLAY
static final long SPECIFIED_FILL
static final long SPECIFIED_FILL_OPACITY
static final long SPECIFIED_FILL_RULE
static final long SPECIFIED_FONT_FAMILY
static final long SPECIFIED_FONT_SIZE
static final long SPECIFIED_FONT_STYLE
static final long SPECIFIED_FONT_WEIGHT
static final long SPECIFIED_IMAGE_RENDERING
static final long SPECIFIED_MARKER_END
static final long SPECIFIED_MARKER_MID
static final long SPECIFIED_MARKER_START
static final long SPECIFIED_MASK
static final long SPECIFIED_OPACITY
static final long SPECIFIED_OVERFLOW
static final long SPECIFIED_SOLID_COLOR
static final long SPECIFIED_SOLID_OPACITY
static final long SPECIFIED_STOP_COLOR
static final long SPECIFIED_STOP_OPACITY
static final long SPECIFIED_STROKE
static final long SPECIFIED_STROKE_DASHARRAY
static final long SPECIFIED_STROKE_DASHOFFSET
static final long SPECIFIED_STROKE_LINECAP
static final long SPECIFIED_STROKE_LINEJOIN
static final long SPECIFIED_STROKE_MITERLIMIT
static final long SPECIFIED_STROKE_OPACITY
static final long SPECIFIED_STROKE_WIDTH
static final long SPECIFIED_TEXT_ANCHOR
static final long SPECIFIED_TEXT_DECORATION
static final long SPECIFIED_VECTOR_EFFECT
static final long SPECIFIED_VIEWPORT_FILL
static final long SPECIFIED_VIEWPORT_FILL_OPACITY
static final long SPECIFIED_VISIBILITY
private static final double SQRT2
private static final java.lang.String TAG
private static final java.lang.String VERSION
private com.caverock.androidsvg.CSSParser$Ruleset cssRules
private java.lang.String desc
private com.caverock.androidsvg.SVGExternalFileResolver fileResolver
private java.util.Map idToElementMap
private float renderDPI
private com.caverock.androidsvg.SVG$Svg rootElement
private java.lang.String title
    void <init>()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.CSSParser$Ruleset $r1;
        java.util.HashMap $r2;

        r0 := @this: com.caverock.androidsvg.SVG;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement> = null;

        r0.<com.caverock.androidsvg.SVG: java.lang.String title> = "";

        r0.<com.caverock.androidsvg.SVG: java.lang.String desc> = "";

        r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver fileResolver> = null;

        r0.<com.caverock.androidsvg.SVG: float renderDPI> = 96.0F;

        $r1 = new com.caverock.androidsvg.CSSParser$Ruleset;

        specialinvoke $r1.<com.caverock.androidsvg.CSSParser$Ruleset: void <init>()>();

        r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.CSSParser$Ruleset cssRules> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.caverock.androidsvg.SVG: java.util.Map idToElementMap> = $r2;

        return;
    }
    private java.lang.String cssQuotedString(java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\"", "\"");

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\n", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\A", "\n");

        return $r1;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\'", "\'");

        goto label1;
    }
    private com.caverock.androidsvg.SVG$Box getDocumentDimensions(float)
    {
        com.caverock.androidsvg.SVG r0;
        float $f0, $f1, $f2;
        com.caverock.androidsvg.SVG$Length r1, r2;
        com.caverock.androidsvg.SVG$Svg $r3;
        boolean $z0;
        com.caverock.androidsvg.SVG$Unit $r4, $r5;
        com.caverock.androidsvg.SVG$Box $r6;

        r0 := @this: com.caverock.androidsvg.SVG;

        $f0 := @parameter0: float;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r2 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width>;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r1 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label1;

        $r4 = r2.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        if $r4 == $r5 goto label1;

        $r4 = r2.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit em>;

        if $r4 == $r5 goto label1;

        $r4 = r2.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit ex>;

        if $r4 != $r5 goto label2;

     label1:
        $r6 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r6.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(-1.0F, -1.0F, -1.0F, -1.0F);

        return $r6;

     label2:
        $f1 = virtualinvoke r2.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f0);

        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label3;

        $r4 = r1.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        if $r4 == $r5 goto label3;

        $r4 = r1.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit em>;

        if $r4 == $r5 goto label3;

        $r4 = r1.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r5 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit ex>;

        if $r4 != $r5 goto label4;

     label3:
        $r6 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r6.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(-1.0F, -1.0F, -1.0F, -1.0F);

        return $r6;

     label4:
        $f0 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f0);

     label5:
        $r6 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r6.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        return $r6;

     label6:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r6 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r6 == null goto label7;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r6 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float height>;

        $f0 = $f0 * $f1;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r6 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f2 = $r6.<com.caverock.androidsvg.SVG$Box: float width>;

        $f0 = $f0 / $f2;

        goto label5;

     label7:
        $f0 = $f1;

        goto label5;
    }
    private com.caverock.androidsvg.SVG$SvgElementBase getElementById(com.caverock.androidsvg.SVG$SvgContainer, java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$SvgContainer $r1;
        java.lang.String $r2, $r4;
        com.caverock.androidsvg.SVG$SvgElementBase r3;
        boolean $z0;
        java.util.List $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.caverock.androidsvg.SVG$SvgObject r8;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgContainer;

        $r2 := @parameter1: java.lang.String;

        r3 = (com.caverock.androidsvg.SVG$SvgElementBase) $r1;

        $r4 = r3.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.String id>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return r3;

     label1:
        $r5 = interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgContainer: java.util.List getChildren()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.caverock.androidsvg.SVG$SvgObject) $r7;

        $z0 = r8 instanceof com.caverock.androidsvg.SVG$SvgElementBase;

        if $z0 == 0 goto label2;

        r3 = (com.caverock.androidsvg.SVG$SvgElementBase) r8;

        $r4 = r3.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.String id>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return r3;

     label3:
        $z0 = r8 instanceof com.caverock.androidsvg.SVG$SvgContainer;

        if $z0 == 0 goto label2;

        $r1 = (com.caverock.androidsvg.SVG$SvgContainer) r8;

        r3 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgElementBase getElementById(com.caverock.androidsvg.SVG$SvgContainer,java.lang.String)>($r1, $r2);

        if r3 == null goto label2;

        return r3;

     label4:
        return null;
    }
    private com.caverock.androidsvg.SVG$SvgObject getElementById(java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1, $r3;
        int $i0;
        com.caverock.androidsvg.SVG$Svg $r2;
        boolean $z0;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.caverock.androidsvg.SVG$SvgObject $r6;
        com.caverock.androidsvg.SVG$SvgElementBase $r7;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Svg: java.lang.String id>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        return $r2;

     label3:
        $r4 = r0.<com.caverock.androidsvg.SVG: java.util.Map idToElementMap>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r4 = r0.<com.caverock.androidsvg.SVG: java.util.Map idToElementMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.caverock.androidsvg.SVG$SvgObject) $r5;

        return $r6;

     label4:
        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgElementBase getElementById(com.caverock.androidsvg.SVG$SvgContainer,java.lang.String)>($r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVG: java.util.Map idToElementMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

        return $r7;
    }
    private java.util.List getElementsByTagName(com.caverock.androidsvg.SVG$SvgContainer, java.lang.Class)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$SvgContainer $r1;
        java.lang.Class $r2, $r4;
        java.util.ArrayList r3;
        com.caverock.androidsvg.SVG$SvgObject $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgContainer;

        $r2 := @parameter1: java.lang.Class;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != $r2 goto label1;

        $r5 = (com.caverock.androidsvg.SVG$SvgObject) $r1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $r6 = interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgContainer: java.util.List getChildren()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.caverock.androidsvg.SVG$SvgObject) $r8;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != $r2 goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$SvgContainer;

        if $z0 == 0 goto label2;

        $r1 = (com.caverock.androidsvg.SVG$SvgContainer) $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVG: java.util.List getElementsByTagName(com.caverock.androidsvg.SVG$SvgContainer,java.lang.Class)>($r1, $r2);

        goto label2;

     label4:
        return r3;
    }
    private java.util.List getElementsByTagName(java.lang.Class)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.Class $r1;
        java.util.List $r2;
        com.caverock.androidsvg.SVG$Svg $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.Class;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r2 = specialinvoke r0.<com.caverock.androidsvg.SVG: java.util.List getElementsByTagName(com.caverock.androidsvg.SVG$SvgContainer,java.lang.Class)>($r3, $r1);

        return $r2;
    }
    public static com.caverock.androidsvg.SVG getFromAsset(android.content.res.AssetManager, java.lang.String) throws com.caverock.androidsvg.SVGParseException, java.io.IOException
    {
        android.content.res.AssetManager $r0;
        java.lang.String $r1;
        com.caverock.androidsvg.SVGParser r2;
        java.io.InputStream $r3;
        com.caverock.androidsvg.SVG $r4;
        java.lang.Throwable $r5;
        java.io.IOException $r6, $r7;

        $r0 := @parameter0: android.content.res.AssetManager;

        $r1 := @parameter1: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label1:
        $r4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG parse(java.io.InputStream)>($r3);

     label2:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label6:
        throw $r5;

     label7:
        $r6 := @caughtexception;

        return $r4;

     label8:
        $r7 := @caughtexception;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label8;
    }
    public static com.caverock.androidsvg.SVG getFromInputStream(java.io.InputStream) throws com.caverock.androidsvg.SVGParseException
    {
        java.io.InputStream $r0;
        com.caverock.androidsvg.SVGParser r1;
        com.caverock.androidsvg.SVG $r2;

        $r0 := @parameter0: java.io.InputStream;

        r1 = new com.caverock.androidsvg.SVGParser;

        specialinvoke r1.<com.caverock.androidsvg.SVGParser: void <init>()>();

        $r2 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG parse(java.io.InputStream)>($r0);

        return $r2;
    }
    public static com.caverock.androidsvg.SVG getFromResource(android.content.Context, int) throws com.caverock.androidsvg.SVGParseException
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;
        com.caverock.androidsvg.SVG $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = staticinvoke <com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG getFromResource(android.content.res.Resources,int)>($r1, $i0);

        return $r2;
    }
    public static com.caverock.androidsvg.SVG getFromResource(android.content.res.Resources, int) throws com.caverock.androidsvg.SVGParseException
    {
        android.content.res.Resources $r0;
        int $i0;
        com.caverock.androidsvg.SVGParser r1;
        java.io.InputStream $r2;
        com.caverock.androidsvg.SVG $r3;
        java.lang.Throwable $r4;
        java.io.IOException $r5, $r6;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        r1 = new com.caverock.androidsvg.SVGParser;

        specialinvoke r1.<com.caverock.androidsvg.SVGParser: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label1:
        $r3 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG parse(java.io.InputStream)>($r2);

     label2:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

     label5:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label6:
        throw $r4;

     label7:
        $r5 := @caughtexception;

        return $r3;

     label8:
        $r6 := @caughtexception;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label8;
    }
    public static com.caverock.androidsvg.SVG getFromString(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        java.lang.String $r0;
        com.caverock.androidsvg.SVGParser r1;
        java.io.ByteArrayInputStream $r2;
        byte[] $r3;
        com.caverock.androidsvg.SVG $r4;

        $r0 := @parameter0: java.lang.String;

        r1 = new com.caverock.androidsvg.SVGParser;

        specialinvoke r1.<com.caverock.androidsvg.SVGParser: void <init>()>();

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG parse(java.io.InputStream)>($r2);

        return $r4;
    }
    public static java.lang.String getVersion()
    {
        return "1.2.3-beta-1";
    }
    void addCSSRules(com.caverock.androidsvg.CSSParser$Ruleset)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.CSSParser$Ruleset $r1, $r2;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.CSSParser$Ruleset;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.CSSParser$Ruleset cssRules>;

        virtualinvoke $r2.<com.caverock.androidsvg.CSSParser$Ruleset: void addAll(com.caverock.androidsvg.CSSParser$Ruleset)>($r1);

        return;
    }
    java.util.List getCSSRules()
    {
        com.caverock.androidsvg.SVG r0;
        java.util.List $r1;
        com.caverock.androidsvg.CSSParser$Ruleset $r2;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.CSSParser$Ruleset cssRules>;

        $r1 = virtualinvoke $r2.<com.caverock.androidsvg.CSSParser$Ruleset: java.util.List getRules()>();

        return $r1;
    }
    public float getDocumentAspectRatio()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Length r1, r2;
        com.caverock.androidsvg.SVG$Svg $r3;
        java.lang.IllegalArgumentException $r4;
        com.caverock.androidsvg.SVG$Unit $r5, $r6;
        boolean $z0;
        float $f0, $f1;
        com.caverock.androidsvg.SVG$Box $r7;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r4;

     label1:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r2 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width>;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r1 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height>;

        if r2 == null goto label3;

        if r1 == null goto label3;

        $r5 = r2.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r6 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        if $r5 == $r6 goto label3;

        $r5 = r1.<com.caverock.androidsvg.SVG$Length: com.caverock.androidsvg.SVG$Unit unit>;

        $r6 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        if $r5 == $r6 goto label3;

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label2;

        return -1.0F;

     label2:
        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $f0 = virtualinvoke r2.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f0);

        $f1 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $f1 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f1);

        $f0 = $f0 / $f1;

        return $f0;

     label3:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r7 == null goto label4;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f0 = $r7.<com.caverock.androidsvg.SVG$Box: float width>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label4;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f0 = $r7.<com.caverock.androidsvg.SVG$Box: float height>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label4;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f0 = $r7.<com.caverock.androidsvg.SVG$Box: float width>;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $f1 = $r7.<com.caverock.androidsvg.SVG$Box: float height>;

        $f0 = $f0 / $f1;

        return $f0;

     label4:
        return -1.0F;
    }
    public java.lang.String getDocumentDescription()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        r3 = r0.<com.caverock.androidsvg.SVG: java.lang.String desc>;

        return r3;
    }
    public float getDocumentHeight()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Box $r1;
        com.caverock.androidsvg.SVG$Svg $r2;
        java.lang.IllegalArgumentException $r3;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r3;

     label1:
        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $r1 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Box getDocumentDimensions(float)>($f0);

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        return $f0;
    }
    public com.caverock.androidsvg.PreserveAspectRatio getDocumentPreserveAspectRatio()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        com.caverock.androidsvg.PreserveAspectRatio $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r3 != null goto label2;

        return null;

     label2:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        return $r3;
    }
    public java.lang.String getDocumentSVGVersion()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r3 = $r1.<com.caverock.androidsvg.SVG$Svg: java.lang.String version>;

        return r3;
    }
    public java.lang.String getDocumentTitle()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        r3 = r0.<com.caverock.androidsvg.SVG: java.lang.String title>;

        return r3;
    }
    public android.graphics.RectF getDocumentViewBox()
    {
        com.caverock.androidsvg.SVG r0;
        android.graphics.RectF $r1;
        com.caverock.androidsvg.SVG$Svg $r2;
        java.lang.IllegalArgumentException $r3;
        com.caverock.androidsvg.SVG$Box $r4;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r3;

     label1:
        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r4 = $r2.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r4 != null goto label2;

        return null;

     label2:
        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r4 = $r2.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $r1 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Box: android.graphics.RectF toRectF()>();

        return $r1;
    }
    public float getDocumentWidth()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Box $r1;
        com.caverock.androidsvg.SVG$Svg $r2;
        java.lang.IllegalArgumentException $r3;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r3;

     label1:
        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $r1 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Box getDocumentDimensions(float)>($f0);

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        return $f0;
    }
    com.caverock.androidsvg.SVGExternalFileResolver getFileResolver()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVGExternalFileResolver r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver fileResolver>;

        return r1;
    }
    public float getRenderDPI()
    {
        com.caverock.androidsvg.SVG r0;
        float f0;

        r0 := @this: com.caverock.androidsvg.SVG;

        f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        return f0;
    }
    com.caverock.androidsvg.SVG$Svg getRootElement()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        return r1;
    }
    public java.util.Set getViewList()
    {
        com.caverock.androidsvg.SVG r0;
        java.util.HashSet r1;
        com.caverock.androidsvg.SVG$Svg $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r4;
        int $i0;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.caverock.androidsvg.SVG$SvgObject r7;
        com.caverock.androidsvg.SVG$View r8;
        java.lang.String $r9;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r3;

     label1:
        $r4 = specialinvoke r0.<com.caverock.androidsvg.SVG: java.util.List getElementsByTagName(java.lang.Class)>(class "Lcom/caverock/androidsvg/SVG$View;");

        r1 = new java.util.HashSet;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke r1.<java.util.HashSet: void <init>(int)>($i0);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.caverock.androidsvg.SVG$SvgObject) $r6;

        r8 = (com.caverock.androidsvg.SVG$View) r7;

        $r9 = r8.<com.caverock.androidsvg.SVG$View: java.lang.String id>;

        if $r9 == null goto label3;

        $r9 = r8.<com.caverock.androidsvg.SVG$View: java.lang.String id>;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidSVG", "getViewList(): found a <view> without an id attribute");

        goto label2;

     label4:
        return r1;
    }
    boolean hasCSSRules()
    {
        com.caverock.androidsvg.SVG r0;
        boolean $z0;
        com.caverock.androidsvg.CSSParser$Ruleset $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.CSSParser$Ruleset cssRules>;

        $z0 = virtualinvoke $r1.<com.caverock.androidsvg.CSSParser$Ruleset: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void registerExternalFileResolver(com.caverock.androidsvg.SVGExternalFileResolver)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVGExternalFileResolver $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.SVGExternalFileResolver;

        r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver fileResolver> = $r1;

        return;
    }
    public void renderToCanvas(android.graphics.Canvas)
    {
        com.caverock.androidsvg.SVG r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.caverock.androidsvg.SVG: void renderToCanvas(android.graphics.Canvas,android.graphics.RectF)>($r1, null);

        return;
    }
    public void renderToCanvas(android.graphics.Canvas, android.graphics.RectF)
    {
        com.caverock.androidsvg.SVG r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF $r2;
        com.caverock.androidsvg.SVGAndroidRenderer r3;
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.SVG$Box $r4;
        int $i0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.RectF;

        if $r2 == null goto label2;

        $f1 = $r2.<android.graphics.RectF: float left>;

        $f2 = $r2.<android.graphics.RectF: float top>;

        $f3 = $r2.<android.graphics.RectF: float right>;

        $f0 = $r2.<android.graphics.RectF: float bottom>;

        $r4 = staticinvoke <com.caverock.androidsvg.SVG$Box: com.caverock.androidsvg.SVG$Box fromLimits(float,float,float,float)>($f1, $f2, $f3, $f0);

     label1:
        r3 = new com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        specialinvoke r3.<com.caverock.androidsvg.SVGAndroidRenderer: void <init>(android.graphics.Canvas,float)>($r1, $f0);

        virtualinvoke r3.<com.caverock.androidsvg.SVGAndroidRenderer: void renderDocument(com.caverock.androidsvg.SVG,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio,boolean)>(r0, $r4, null, null, 1);

        return;

     label2:
        $r4 = new com.caverock.androidsvg.SVG$Box;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getHeight()>();

        $f1 = (float) $i0;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        goto label1;
    }
    public android.graphics.Picture renderToPicture()
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Length r1;
        com.caverock.androidsvg.SVG$Box r2;
        com.caverock.androidsvg.SVG$Svg $r3;
        float $f0, $f1, $f2;
        double $d0;
        int $i0, $i1;
        android.graphics.Picture $r4;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r1 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width>;

        if r1 == null goto label4;

        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $f0 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f0);

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r2 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        if r2 == null goto label2;

        $f1 = r2.<com.caverock.androidsvg.SVG$Box: float height>;

        $f1 = $f1 * $f0;

        $f2 = r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $f1 = $f1 / $f2;

     label1:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $r4 = virtualinvoke r0.<com.caverock.androidsvg.SVG: android.graphics.Picture renderToPicture(int,int)>($i0, $i1);

        return $r4;

     label2:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        r1 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height>;

        if r1 == null goto label3;

        $f1 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        $f1 = virtualinvoke r1.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f1);

        goto label1;

     label3:
        $f1 = $f0;

        goto label1;

     label4:
        $r4 = virtualinvoke r0.<com.caverock.androidsvg.SVG: android.graphics.Picture renderToPicture(int,int)>(512, 512);

        return $r4;
    }
    public android.graphics.Picture renderToPicture(int, int)
    {
        com.caverock.androidsvg.SVG r0;
        int $i0, $i1;
        com.caverock.androidsvg.SVGAndroidRenderer r1;
        com.caverock.androidsvg.SVG$Box r2;
        android.graphics.Picture r3;
        android.graphics.Canvas $r4;
        float $f0, $f1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r3 = new android.graphics.Picture;

        specialinvoke r3.<android.graphics.Picture: void <init>()>();

        $r4 = virtualinvoke r3.<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>($i0, $i1);

        r2 = new com.caverock.androidsvg.SVG$Box;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r1 = new com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        specialinvoke r1.<com.caverock.androidsvg.SVGAndroidRenderer: void <init>(android.graphics.Canvas,float)>($r4, $f0);

        virtualinvoke r1.<com.caverock.androidsvg.SVGAndroidRenderer: void renderDocument(com.caverock.androidsvg.SVG,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio,boolean)>(r0, r2, null, null, 0);

        virtualinvoke r3.<android.graphics.Picture: void endRecording()>();

        return r3;
    }
    public void renderViewToCanvas(java.lang.String, android.graphics.Canvas)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        android.graphics.Canvas $r2;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Canvas;

        virtualinvoke r0.<com.caverock.androidsvg.SVG: void renderViewToCanvas(java.lang.String,android.graphics.Canvas,android.graphics.RectF)>($r1, $r2, null);

        return;
    }
    public void renderViewToCanvas(java.lang.String, android.graphics.Canvas, android.graphics.RectF)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        android.graphics.Canvas $r2;
        android.graphics.RectF $r3;
        com.caverock.androidsvg.SVGAndroidRenderer r4;
        com.caverock.androidsvg.SVG$SvgObject $r5;
        boolean $z0;
        com.caverock.androidsvg.SVG$View r6;
        com.caverock.androidsvg.SVG$Box $r7, $r8;
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.PreserveAspectRatio $r9;
        int $i0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Canvas;

        $r3 := @parameter2: android.graphics.RectF;

        $r5 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject getElementById(java.lang.String)>($r1);

        if $r5 != null goto label1;

        return;

     label1:
        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$View;

        if $z0 == 0 goto label5;

        r6 = (com.caverock.androidsvg.SVG$View) $r5;

        $r7 = r6.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r7 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidSVG", "View element is missing a viewBox attribute.");

        return;

     label2:
        if $r3 == null goto label4;

        $f0 = $r3.<android.graphics.RectF: float left>;

        $f1 = $r3.<android.graphics.RectF: float top>;

        $f2 = $r3.<android.graphics.RectF: float right>;

        $f3 = $r3.<android.graphics.RectF: float bottom>;

        $r7 = staticinvoke <com.caverock.androidsvg.SVG$Box: com.caverock.androidsvg.SVG$Box fromLimits(float,float,float,float)>($f0, $f1, $f2, $f3);

     label3:
        r4 = new com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        specialinvoke r4.<com.caverock.androidsvg.SVGAndroidRenderer: void <init>(android.graphics.Canvas,float)>($r2, $f0);

        $r8 = r6.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG$Box viewBox>;

        $r9 = r6.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        virtualinvoke r4.<com.caverock.androidsvg.SVGAndroidRenderer: void renderDocument(com.caverock.androidsvg.SVG,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio,boolean)>(r0, $r7, $r8, $r9, 1);

        return;

     label4:
        $r7 = new com.caverock.androidsvg.SVG$Box;

        $i0 = virtualinvoke $r2.<android.graphics.Canvas: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r2.<android.graphics.Canvas: int getHeight()>();

        $f1 = (float) $i0;

        specialinvoke $r7.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        goto label3;

     label5:
        return;
    }
    public android.graphics.Picture renderViewToPicture(java.lang.String, int, int)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        int $i0, $i1;
        com.caverock.androidsvg.SVGAndroidRenderer r2;
        com.caverock.androidsvg.SVG$Box r3, $r8;
        com.caverock.androidsvg.SVG$SvgObject $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG$View r5;
        android.graphics.Picture r6;
        android.graphics.Canvas $r7;
        float $f0, $f1;
        com.caverock.androidsvg.PreserveAspectRatio $r9;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r4 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject getElementById(java.lang.String)>($r1);

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$View;

        if $z0 == 0 goto label3;

        r5 = (com.caverock.androidsvg.SVG$View) $r4;

        r3 = r5.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG$Box viewBox>;

        if r3 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidSVG", "View element is missing a viewBox attribute.");

        return null;

     label2:
        r6 = new android.graphics.Picture;

        specialinvoke r6.<android.graphics.Picture: void <init>()>();

        $r7 = virtualinvoke r6.<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>($i0, $i1);

        r3 = new com.caverock.androidsvg.SVG$Box;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        specialinvoke r3.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r2 = new com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 = r0.<com.caverock.androidsvg.SVG: float renderDPI>;

        specialinvoke r2.<com.caverock.androidsvg.SVGAndroidRenderer: void <init>(android.graphics.Canvas,float)>($r7, $f0);

        $r8 = r5.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG$Box viewBox>;

        $r9 = r5.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        virtualinvoke r2.<com.caverock.androidsvg.SVGAndroidRenderer: void renderDocument(com.caverock.androidsvg.SVG,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio,boolean)>(r0, r3, $r8, $r9, 0);

        virtualinvoke r6.<android.graphics.Picture: void endRecording()>();

        return r6;

     label3:
        return null;
    }
    com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;
        com.caverock.androidsvg.SVG$SvgObject $r2;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = specialinvoke r0.<com.caverock.androidsvg.SVG: java.lang.String cssQuotedString(java.lang.String)>($r1);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r2 = specialinvoke r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject getElementById(java.lang.String)>($r1);

        return $r2;

     label2:
        return null;
    }
    void setDesc(java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        r0.<com.caverock.androidsvg.SVG: java.lang.String desc> = $r1;

        return;
    }
    public void setDocumentHeight(float)
    {
        com.caverock.androidsvg.SVG r0;
        float $f0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        com.caverock.androidsvg.SVG$Length $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $f0 := @parameter0: float;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Length: void <init>(float)>($f0);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height> = $r3;

        return;
    }
    public void setDocumentHeight(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        org.xml.sax.SAXException r2;
        com.caverock.androidsvg.SVG$Svg $r3;
        java.lang.IllegalArgumentException $r4;
        com.caverock.androidsvg.SVG$Length $r5;
        com.caverock.androidsvg.SVGParseException $r6;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r4;

     label1:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

     label2:
        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r1);

     label3:
        $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height> = $r5;

        return;

     label4:
        r2 := @caughtexception;

        $r6 = new com.caverock.androidsvg.SVGParseException;

        $r1 = virtualinvoke r2.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r6.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
    }
    public void setDocumentPreserveAspectRatio(com.caverock.androidsvg.PreserveAspectRatio)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.PreserveAspectRatio $r1;
        com.caverock.androidsvg.SVG$Svg $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.PreserveAspectRatio;

        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r3;

     label1:
        $r2 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r2.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio> = $r1;

        return;
    }
    public void setDocumentViewBox(float, float, float, float)
    {
        com.caverock.androidsvg.SVG r0;
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        com.caverock.androidsvg.SVG$Box $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox> = $r3;

        return;
    }
    public void setDocumentWidth(float)
    {
        com.caverock.androidsvg.SVG r0;
        float $f0;
        com.caverock.androidsvg.SVG$Svg $r1;
        java.lang.IllegalArgumentException $r2;
        com.caverock.androidsvg.SVG$Length $r3;

        r0 := @this: com.caverock.androidsvg.SVG;

        $f0 := @parameter0: float;

        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        $r3 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Length: void <init>(float)>($f0);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width> = $r3;

        return;
    }
    public void setDocumentWidth(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;
        org.xml.sax.SAXException r2;
        com.caverock.androidsvg.SVG$Svg $r3;
        java.lang.IllegalArgumentException $r4;
        com.caverock.androidsvg.SVG$Length $r5;
        com.caverock.androidsvg.SVGParseException $r6;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SVG document is empty");

        throw $r4;

     label1:
        $r3 = r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement>;

     label2:
        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r1);

     label3:
        $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width> = $r5;

        return;

     label4:
        r2 := @caughtexception;

        $r6 = new com.caverock.androidsvg.SVGParseException;

        $r1 = virtualinvoke r2.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r6.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r1);

        throw $r6;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
    }
    public void setRenderDPI(float)
    {
        com.caverock.androidsvg.SVG r0;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVG;

        $f0 := @parameter0: float;

        r0.<com.caverock.androidsvg.SVG: float renderDPI> = $f0;

        return;
    }
    void setRootElement(com.caverock.androidsvg.SVG$Svg)
    {
        com.caverock.androidsvg.SVG r0;
        com.caverock.androidsvg.SVG$Svg $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Svg;

        r0.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg rootElement> = $r1;

        return;
    }
    void setTitle(java.lang.String)
    {
        com.caverock.androidsvg.SVG r0;
        java.lang.String $r1;

        r0 := @this: com.caverock.androidsvg.SVG;

        $r1 := @parameter0: java.lang.String;

        r0.<com.caverock.androidsvg.SVG: java.lang.String title> = $r1;

        return;
    }
