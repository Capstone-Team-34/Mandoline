com.caverock.androidsvg.SVG$Box extends java.lang.Object implements java.lang.Cloneable
float height
float minX
float minY
float width
    void <init>(float, float, float, float)
    {
        com.caverock.androidsvg.SVG$Box r0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.SVG$Box: float minX> = $f0;

        r0.<com.caverock.androidsvg.SVG$Box: float minY> = $f1;

        r0.<com.caverock.androidsvg.SVG$Box: float width> = $f2;

        r0.<com.caverock.androidsvg.SVG$Box: float height> = $f3;

        return;
    }
    void <init>(com.caverock.androidsvg.SVG$Box)
    {
        com.caverock.androidsvg.SVG$Box r0, $r1;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Box;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        r0.<com.caverock.androidsvg.SVG$Box: float minX> = $f0;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        r0.<com.caverock.androidsvg.SVG$Box: float minY> = $f0;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        r0.<com.caverock.androidsvg.SVG$Box: float width> = $f0;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        r0.<com.caverock.androidsvg.SVG$Box: float height> = $f0;

        return;
    }
    static com.caverock.androidsvg.SVG$Box fromLimits(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.SVG$Box $r0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r0 = new com.caverock.androidsvg.SVG$Box;

        $f2 = $f2 - $f0;

        $f3 = $f3 - $f1;

        specialinvoke $r0.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r0;
    }
    float maxX()
    {
        com.caverock.androidsvg.SVG$Box r0;
        float $f0, $f1;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float width>;

        $f0 = $f1 + $f0;

        return $f0;
    }
    float maxY()
    {
        com.caverock.androidsvg.SVG$Box r0;
        float $f0, $f1;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float height>;

        $f0 = $f1 + $f0;

        return $f0;
    }
    android.graphics.RectF toRectF()
    {
        com.caverock.androidsvg.SVG$Box r0;
        android.graphics.RectF $r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $r1 = new android.graphics.RectF;

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f2 = virtualinvoke r0.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $f3 = virtualinvoke r0.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r1;
    }
    public java.lang.String toString()
    {
        com.caverock.androidsvg.SVG$Box r0;
        java.lang.StringBuilder $r1;
        float $f0;
        java.lang.String $r2;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float width>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = r0.<com.caverock.androidsvg.SVG$Box: float height>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    void union(com.caverock.androidsvg.SVG$Box)
    {
        com.caverock.androidsvg.SVG$Box r0, $r1;
        float $f0, $f1;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVG$Box;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Box;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minX>;

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        r0.<com.caverock.androidsvg.SVG$Box: float minX> = $f0;

     label1:
        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minY>;

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label2;

        $f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        r0.<com.caverock.androidsvg.SVG$Box: float minY> = $f0;

     label2:
        $f0 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $f1 = virtualinvoke r0.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label3;

        $f0 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f0 = $f0 - $f1;

        r0.<com.caverock.androidsvg.SVG$Box: float width> = $f0;

     label3:
        $f0 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        $f1 = virtualinvoke r0.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label4;

        $f0 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        $f1 = r0.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f0 = $f0 - $f1;

        r0.<com.caverock.androidsvg.SVG$Box: float height> = $f0;

     label4:
        return;
    }
