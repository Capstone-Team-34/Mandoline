com.caverock.androidsvg.CSSParser$Selector extends java.lang.Object
java.util.List selector
int specificity
    private void <init>()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector> = null;

        r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity> = 0;

        return;
    }
    void <init>(com.caverock.androidsvg.CSSParser$1)
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        com.caverock.androidsvg.CSSParser$1 $r1;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $r1 := @parameter0: com.caverock.androidsvg.CSSParser$1;

        specialinvoke r0.<com.caverock.androidsvg.CSSParser$Selector: void <init>()>();

        return;
    }
    void add(com.caverock.androidsvg.CSSParser$SimpleSelector)
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        com.caverock.androidsvg.CSSParser$SimpleSelector $r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $r1 := @parameter0: com.caverock.androidsvg.CSSParser$SimpleSelector;

        $r2 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector> = $r3;

     label1:
        $r2 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    void addedAttributeOrPseudo()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        int $i0;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $i0 = r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity>;

        $i0 = $i0 + 100;

        r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity> = $i0;

        return;
    }
    void addedElement()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        int $i0;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $i0 = r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity>;

        $i0 = $i0 + 1;

        r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity> = $i0;

        return;
    }
    void addedIdAttribute()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        int $i0;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $i0 = r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity>;

        $i0 = $i0 + 10000;

        r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity> = $i0;

        return;
    }
    com.caverock.androidsvg.CSSParser$SimpleSelector get(int)
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        int $i0;
        java.lang.Object $r1;
        java.util.List $r2;
        com.caverock.androidsvg.CSSParser$SimpleSelector $r3;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $i0 := @parameter0: int;

        $r2 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.caverock.androidsvg.CSSParser$SimpleSelector) $r1;

        return $r3;
    }
    boolean isEmpty()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        boolean $z0;
        java.util.List $r1;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $r1 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        if $r1 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    int size()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        $r1 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
    public java.lang.String toString()
    {
        com.caverock.androidsvg.CSSParser$Selector r0;
        java.lang.StringBuilder r1, $r6;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.caverock.androidsvg.CSSParser$SimpleSelector r5;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.caverock.androidsvg.CSSParser$Selector;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.caverock.androidsvg.CSSParser$Selector: java.util.List selector>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.caverock.androidsvg.CSSParser$SimpleSelector) $r4;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label1;

     label2:
        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $i0 = r0.<com.caverock.androidsvg.CSSParser$Selector: int specificity>;

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
