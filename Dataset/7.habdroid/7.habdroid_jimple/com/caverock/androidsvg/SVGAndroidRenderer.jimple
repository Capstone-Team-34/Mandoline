com.caverock.androidsvg.SVGAndroidRenderer extends java.lang.Object
private static final float BEZIER_ARC_FACTOR
private static final java.lang.String DEFAULT_FONT_FAMILY
private static final int LUMINANCE_FACTOR_SHIFT
private static final int LUMINANCE_TO_ALPHA_BLUE
private static final int LUMINANCE_TO_ALPHA_GREEN
private static final int LUMINANCE_TO_ALPHA_RED
private static final java.lang.String TAG
private static java.util.HashSet supportedFeatures
private java.util.Stack bitmapStack
private android.graphics.Canvas canvas
private java.util.Stack canvasStack
private boolean directRenderingMode
private com.caverock.androidsvg.SVG document
private float dpi
private java.util.Stack matrixStack
private java.util.Stack parentStack
private com.caverock.androidsvg.SVGAndroidRenderer$RendererState state
private java.util.Stack stateStack
    static void <clinit>()
    {
        <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures> = null;

        return;
    }
    void <init>(android.graphics.Canvas, float)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        android.graphics.Canvas $r1;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas> = $r1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: float dpi> = $f0;

        return;
    }
    static void access$100(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>($r0, $r1);

        return;
    }
    static boolean access$200(com.caverock.androidsvg.SVGAndroidRenderer)
    {
        com.caverock.androidsvg.SVGAndroidRenderer $r0;
        boolean $z0;

        $r0 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 = specialinvoke $r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        return $z0;
    }
    static com.caverock.androidsvg.SVGAndroidRenderer$RendererState access$300(com.caverock.androidsvg.SVGAndroidRenderer)
    {
        com.caverock.androidsvg.SVGAndroidRenderer $r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState r1;

        $r0 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer;

        r1 = $r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        return r1;
    }
    static android.graphics.Canvas access$400(com.caverock.androidsvg.SVGAndroidRenderer)
    {
        com.caverock.androidsvg.SVGAndroidRenderer $r0;
        android.graphics.Canvas r1;

        $r0 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer;

        r1 = $r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        return r1;
    }
    static void access$600(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>($r0, $r1);

        return;
    }
    static void access$700(float, float, float, float, float, boolean, boolean, float, float, com.caverock.androidsvg.SVG$PathInterface)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$PathInterface $r0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 := @parameter4: float;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $f5 := @parameter7: float;

        $f6 := @parameter8: float;

        $r0 := @parameter9: com.caverock.androidsvg.SVG$PathInterface;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void arcTo(float,float,float,float,float,boolean,boolean,float,float,com.caverock.androidsvg.SVG$PathInterface)>($f0, $f1, $f2, $f3, $f4, $z0, $z1, $f5, $f6, $r0);

        return;
    }
    static void access$800(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>($r0, $r1);

        return;
    }
    private void addObjectToClip(com.caverock.androidsvg.SVG$GraphicsElement, android.graphics.Path, android.graphics.Matrix)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$GraphicsElement $r1;
        android.graphics.Path $r2, $r7;
        android.graphics.Matrix $r3, $r5;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG$Rect $r6;
        android.graphics.Path$FillType $r8;
        com.caverock.androidsvg.SVG$Circle $r9;
        com.caverock.androidsvg.SVG$Ellipse $r10;
        com.caverock.androidsvg.SVG$PolyLine $r11;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$GraphicsElement;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: android.graphics.Matrix;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label7;

        $r5 = $r1.<com.caverock.androidsvg.SVG$GraphicsElement: android.graphics.Matrix transform>;

        if $r5 == null goto label2;

        $r5 = $r1.<com.caverock.androidsvg.SVG$GraphicsElement: android.graphics.Matrix transform>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r5);

     label2:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$Rect;

        if $z0 == 0 goto label4;

        $r6 = (com.caverock.androidsvg.SVG$Rect) $r1;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Rect)>($r6);

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $r8 = virtualinvoke $r7.<android.graphics.Path: android.graphics.Path$FillType getFillType()>();

        virtualinvoke $r2.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r8);

        virtualinvoke $r2.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r7, $r3);

        return;

     label4:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$Circle;

        if $z0 == 0 goto label5;

        $r9 = (com.caverock.androidsvg.SVG$Circle) $r1;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Circle)>($r9);

        goto label3;

     label5:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$Ellipse;

        if $z0 == 0 goto label6;

        $r10 = (com.caverock.androidsvg.SVG$Ellipse) $r1;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Ellipse)>($r10);

        goto label3;

     label6:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$PolyLine;

        if $z0 == 0 goto label7;

        $r11 = (com.caverock.androidsvg.SVG$PolyLine) $r1;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$PolyLine)>($r11);

        goto label3;

     label7:
        return;
    }
    private void addObjectToClip(com.caverock.androidsvg.SVG$Path, android.graphics.Path, android.graphics.Matrix)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Path $r1;
        android.graphics.Path $r2, $r8;
        android.graphics.Matrix $r3, $r6;
        com.caverock.androidsvg.SVG$PathDefinition $r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        boolean $z0;
        com.caverock.androidsvg.SVGAndroidRenderer$PathConverter $r7;
        com.caverock.androidsvg.SVG$Box $r9;
        android.graphics.Path$FillType $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Path;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: android.graphics.Matrix;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r5, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label4;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        if $r6 == null goto label2;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r6);

     label2:
        $r7 = new com.caverock.androidsvg.SVGAndroidRenderer$PathConverter;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d>;

        specialinvoke $r7.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVG$PathDefinition)>(r0, $r4);

        $r8 = virtualinvoke $r7.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: android.graphics.Path getPath()>();

        $r9 = $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r9 != null goto label3;

        $r9 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box calculatePathBounds(android.graphics.Path)>($r8);

        $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$Box boundingBox> = $r9;

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path$FillType getClipRuleFromState()>();

        virtualinvoke $r2.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r10);

        virtualinvoke $r2.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r8, $r3);

     label4:
        return;
    }
    private void addObjectToClip(com.caverock.androidsvg.SVG$SvgObject, boolean, android.graphics.Path, android.graphics.Matrix)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1;
        android.graphics.Path $r1;
        android.graphics.Matrix $r2;
        com.caverock.androidsvg.SVG$SvgObject r3;
        com.caverock.androidsvg.SVG$Use r4;
        java.lang.Object[] $r5;
        com.caverock.androidsvg.SVG$Path r6;
        com.caverock.androidsvg.SVG$Text r7;
        com.caverock.androidsvg.SVG$GraphicsElement r8;
        java.lang.Class $r9;
        java.lang.String $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r3 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: android.graphics.Path;

        $r2 := @parameter3: android.graphics.Matrix;

        $z1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void clipStatePush()>();

        $z1 = r3 instanceof com.caverock.androidsvg.SVG$Use;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        r4 = (com.caverock.androidsvg.SVG$Use) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$Use,android.graphics.Path,android.graphics.Matrix)>(r4, $r1, $r2);

     label2:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void clipStatePop()>();

        return;

     label3:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("<use> elements inside a <clipPath> cannot reference another <use>", $r5);

        goto label2;

     label4:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$Path;

        if $z0 == 0 goto label5;

        r6 = (com.caverock.androidsvg.SVG$Path) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$Path,android.graphics.Path,android.graphics.Matrix)>(r6, $r1, $r2);

        goto label2;

     label5:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$Text;

        if $z0 == 0 goto label6;

        r7 = (com.caverock.androidsvg.SVG$Text) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$Text,android.graphics.Path,android.graphics.Matrix)>(r7, $r1, $r2);

        goto label2;

     label6:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$GraphicsElement;

        if $z0 == 0 goto label7;

        r8 = (com.caverock.androidsvg.SVG$GraphicsElement) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$GraphicsElement,android.graphics.Path,android.graphics.Matrix)>(r8, $r1, $r2);

        goto label2;

     label7:
        $r5 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5[0] = $r10;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Invalid %s element found in clipPath definition", $r5);

        goto label2;
    }
    private void addObjectToClip(com.caverock.androidsvg.SVG$Text, android.graphics.Path, android.graphics.Matrix)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Text $r1;
        android.graphics.Path $r2, r5;
        android.graphics.Matrix $r3, $r7;
        com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r6;
        boolean $z0;
        java.util.List $r8;
        int $i0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        com.caverock.androidsvg.SVG$Style $r9;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r10, $r11;
        com.caverock.androidsvg.SVG$Box $r12;
        android.graphics.RectF $r13;
        com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath $r14;
        android.graphics.Path$FillType $r15;
        java.lang.Object $r16;
        com.caverock.androidsvg.SVG$Length $r17;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Text;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: android.graphics.Matrix;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r6, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: android.graphics.Matrix transform>;

        if $r7 == null goto label02;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: android.graphics.Matrix transform>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r7);

     label02:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        if $r8 == null goto label03;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 != 0 goto label13;

     label03:
        f0 = 0.0F;

     label04:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        if $r8 == null goto label05;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 != 0 goto label14;

     label05:
        f1 = 0.0F;

     label06:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        if $r8 == null goto label07;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 != 0 goto label15;

     label07:
        f2 = 0.0F;

     label08:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        if $r8 == null goto label09;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 != 0 goto label16;

     label09:
        f3 = 0.0F;

     label10:
        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r9.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        $r11 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        if $r10 == $r11 goto label11;

        $f4 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: float calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer)>($r1);

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r9.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        $r11 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Middle>;

        if $r10 != $r11 goto label17;

        $f4 = $f4 / 2.0F;

        f0 = f0 - $f4;

     label11:
        $r12 = $r1.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r12 != null goto label12;

        r4 = new com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator;

        specialinvoke r4.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float)>(r0, f0, f1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, r4);

        $r12 = new com.caverock.androidsvg.SVG$Box;

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f4 = $r13.<android.graphics.RectF: float left>;

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f5 = $r13.<android.graphics.RectF: float top>;

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f6 = virtualinvoke $r13.<android.graphics.RectF: float width()>();

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f7 = virtualinvoke $r13.<android.graphics.RectF: float height()>();

        specialinvoke $r12.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);

        $r1.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG$Box boundingBox> = $r12;

     label12:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        r5 = new android.graphics.Path;

        specialinvoke r5.<android.graphics.Path: void <init>()>();

        $r14 = new com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath;

        f0 = f0 + f2;

        f1 = f1 + f3;

        specialinvoke $r14.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,android.graphics.Path)>(r0, f0, f1, r5);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, $r14);

        $r15 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path$FillType getClipRuleFromState()>();

        virtualinvoke $r2.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r15);

        virtualinvoke $r2.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(r5, $r3);

        return;

     label13:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        $r16 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.caverock.androidsvg.SVG$Length) $r16;

        f0 = virtualinvoke $r17.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label04;

     label14:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        $r16 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.caverock.androidsvg.SVG$Length) $r16;

        f1 = virtualinvoke $r17.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label06;

     label15:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        $r16 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.caverock.androidsvg.SVG$Length) $r16;

        f2 = virtualinvoke $r17.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label08;

     label16:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        $r16 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.caverock.androidsvg.SVG$Length) $r16;

        f3 = virtualinvoke $r17.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label10;

     label17:
        f0 = f0 - $f4;

        goto label11;
    }
    private void addObjectToClip(com.caverock.androidsvg.SVG$Use, android.graphics.Path, android.graphics.Matrix)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Use $r1;
        android.graphics.Path $r2;
        android.graphics.Matrix $r3, $r6;
        java.lang.String $r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        boolean $z0;
        com.caverock.androidsvg.SVG $r7;
        com.caverock.androidsvg.SVG$SvgObject $r8;
        java.lang.Object[] $r9;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Use;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: android.graphics.Matrix;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r5, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label4;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Use: android.graphics.Matrix transform>;

        if $r6 == null goto label2;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Use: android.graphics.Matrix transform>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r6);

     label2:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG document>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Use: java.lang.String href>;

        $r8 = virtualinvoke $r7.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        if $r8 != null goto label3;

        $r9 = newarray (java.lang.Object)[1];

        $r4 = $r1.<com.caverock.androidsvg.SVG$Use: java.lang.String href>;

        $r9[0] = $r4;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Use reference \'%s\' not found", $r9);

        return;

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$SvgObject,boolean,android.graphics.Path,android.graphics.Matrix)>($r8, 0, $r2, $r3);

     label4:
        return;
    }
    private static void arcTo(float, float, float, float, float, boolean, boolean, float, float, com.caverock.androidsvg.SVG$PathInterface)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, $f18;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$PathInterface $r0;
        android.graphics.Matrix r1;
        byte $b0;
        double $d0, $d1;
        float[] $r2;
        int $i1, $i2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f5 := @parameter2: float;

        $f6 := @parameter3: float;

        $f2 := @parameter4: float;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $f3 := @parameter7: float;

        $f4 := @parameter8: float;

        $r0 := @parameter9: com.caverock.androidsvg.SVG$PathInterface;

        $b0 = $f0 cmpl $f3;

        if $b0 != 0 goto label01;

        $b0 = $f1 cmpl $f4;

        if $b0 != 0 goto label01;

        return;

     label01:
        $b0 = $f5 cmpl 0.0F;

        if $b0 == 0 goto label02;

        $b0 = $f6 cmpl 0.0F;

        if $b0 != 0 goto label03;

     label02:
        interfaceinvoke $r0.<com.caverock.androidsvg.SVG$PathInterface: void lineTo(float,float)>($f3, $f4);

        return;

     label03:
        f8 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f5 = f8;

        f9 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f6 = f9;

        $d0 = (double) $f2;

        $d0 = $d0 % 360.0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        f7 = (float) $d0;

        $d0 = (double) f7;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f13 = (float) $d0;

        $d0 = (double) f7;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        f14 = (float) $d0;

        f7 = $f0 - $f3;

        f10 = f7 / 2.0F;

        f7 = $f1 - $f4;

        f11 = f7 / 2.0F;

        f7 = f13 * f10;

        f15 = f14 * f11;

        f7 = f7 + f15;

        f15 = neg f14;

        f10 = f15 * f10;

        f11 = f13 * f11;

        f10 = f10 + f11;

        f16 = f8 * f8;

        f17 = f9 * f9;

        f11 = f7 * f7;

        f15 = f10 * f10;

        f12 = f11 / f16;

        $f18 = f15 / f17;

        f12 = f12 + $f18;

        $b0 = f12 cmpl 1.0F;

        if $b0 <= 0 goto label04;

        $d0 = (double) f12;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f5 = (float) $d0;

        $f5 = f8 * $f5;

        $d0 = (double) f12;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f6 = (float) $d0;

        $f6 = f9 * $f6;

        f16 = $f5 * $f5;

        f17 = $f6 * $f6;

     label04:
        if $z0 != $z1 goto label11;

        f8 = -1.0F;

     label05:
        f9 = f16 * f17;

        f12 = f16 * f15;

        f9 = f9 - f12;

        f12 = f17 * f11;

        f9 = f9 - f12;

        f15 = f16 * f15;

        f11 = f17 * f11;

        f11 = f15 + f11;

        f9 = f9 / f11;

        $b0 = f9 cmpg 0.0F;

        if $b0 >= 0 goto label06;

        f9 = 0.0F;

     label06:
        $d0 = (double) f8;

        $d1 = (double) f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        $d0 = $d0 * $d1;

        f9 = (float) $d0;

        f8 = $f5 * f10;

        f8 = f8 / $f6;

        f8 = f9 * f8;

        f11 = $f6 * f7;

        f11 = f11 / $f5;

        f11 = neg f11;

        f9 = f9 * f11;

        $f0 = $f0 + $f3;

        $f0 = $f0 / 2.0F;

        $f1 = $f1 + $f4;

        $f1 = $f1 / 2.0F;

        f11 = f13 * f8;

        f15 = f14 * f9;

        f11 = f11 - f15;

        $f0 = $f0 + f11;

        f14 = f14 * f8;

        f13 = f13 * f9;

        f13 = f14 + f13;

        $f1 = $f1 + f13;

        f13 = f7 - f8;

        f13 = f13 / $f5;

        f14 = f10 - f9;

        f14 = f14 / $f6;

        f7 = neg f7;

        f7 = f7 - f8;

        f7 = f7 / $f5;

        f10 = neg f10;

        f10 = f10 - f9;

        f10 = f10 / $f6;

        f8 = f13 * f13;

        f9 = f14 * f14;

        f8 = f8 + f9;

        $d0 = (double) f8;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f8 = (float) $d0;

        $b0 = f14 cmpg 0.0F;

        if $b0 >= 0 goto label12;

        f9 = -1.0F;

     label07:
        $d0 = (double) f9;

        f8 = f13 / f8;

        $d1 = (double) f8;

        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d1);

        $d0 = $d0 * $d1;

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        f8 = (float) $d0;

        f9 = f13 * f13;

        f11 = f14 * f14;

        f9 = f9 + f11;

        f11 = f7 * f7;

        f15 = f10 * f10;

        f11 = f11 + f15;

        f9 = f9 * f11;

        $d0 = (double) f9;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f9 = (float) $d0;

        f11 = f13 * f7;

        f15 = f14 * f10;

        f11 = f11 + f15;

        f10 = f13 * f10;

        f7 = f14 * f7;

        f7 = f10 - f7;

        $b0 = f7 cmpg 0.0F;

        if $b0 >= 0 goto label13;

        f7 = -1.0F;

     label08:
        $d0 = (double) f7;

        f7 = f11 / f9;

        $d1 = (double) f7;

        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d1);

        $d0 = $d0 * $d1;

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $d1 = $d0;

        if $z1 != 0 goto label14;

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label14;

        $d1 = $d0 - 360.0;

     label09:
        $d0 = $d1 % 360.0;

        f7 = f8 % 360.0F;

        $d1 = (double) f7;

        $r2 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: float[] arcToBeziers(double,double)>($d1, $d0);

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>($f5, $f6);

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float)>($f2);

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>($r2);

        $i1 = lengthof $r2;

        $i1 = $i1 + -2;

        $r2[$i1] = $f3;

        $i1 = lengthof $r2;

        $i1 = $i1 + -1;

        $r2[$i1] = $f4;

        $i1 = 0;

     label10:
        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label15;

        $f2 = $r2[$i1];

        $i2 = $i1 + 1;

        $f3 = $r2[$i2];

        $i2 = $i1 + 2;

        $f0 = $r2[$i2];

        $i2 = $i1 + 3;

        $f1 = $r2[$i2];

        $i2 = $i1 + 4;

        $f5 = $r2[$i2];

        $i2 = $i1 + 5;

        $f6 = $r2[$i2];

        interfaceinvoke $r0.<com.caverock.androidsvg.SVG$PathInterface: void cubicTo(float,float,float,float,float,float)>($f2, $f3, $f0, $f1, $f5, $f6);

        $i1 = $i1 + 6;

        goto label10;

     label11:
        f8 = 1.0F;

        goto label05;

     label12:
        f9 = 1.0F;

        goto label07;

     label13:
        f7 = 1.0F;

        goto label08;

     label14:
        if $z1 == 0 goto label09;

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label09;

        $d1 = $d0 + 360.0;

        goto label09;

     label15:
        return;
    }
    private static float[] arcToBeziers(double, double)
    {
        float f0, $f1;
        float[] r0;
        double d0, $d1, $d2, $d3, $d4, $d5;
        int i0, $i1, i2, i3;

        $d1 := @parameter0: double;

        d0 := @parameter1: double;

        $d2 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d2 = $d2 / 90.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i0 = (int) $d2;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        d0 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        $d2 = (double) i0;

        d0 = d0 / $d2;

        f0 = (float) d0;

        d0 = (double) f0;

        d0 = d0 / 2.0;

        d0 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        d0 = 1.3333333333333333 * d0;

        $d2 = (double) f0;

        $d2 = $d2 / 2.0;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d2 = 1.0 + $d2;

        d0 = d0 / $d2;

        $i1 = i0 * 6;

        r0 = newarray (float)[$i1];

        $i1 = 0;

        i2 = 0;

     label1:
        if $i1 >= i0 goto label2;

        $f1 = (float) $i1;

        $f1 = $f1 * f0;

        $d2 = (double) $f1;

        $d2 = $d1 + $d2;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        i3 = i2 + 1;

        $d5 = d0 * $d4;

        $d5 = $d3 - $d5;

        $f1 = (float) $d5;

        r0[i2] = $f1;

        i2 = i3 + 1;

        $d3 = d0 * $d3;

        $d4 = $d3 + $d4;

        $f1 = (float) $d4;

        r0[i3] = $f1;

        $d4 = (double) f0;

        $d4 = $d2 + $d4;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        i3 = i2 + 1;

        $d3 = d0 * $d4;

        $d3 = $d3 + $d2;

        $f1 = (float) $d3;

        r0[i2] = $f1;

        i2 = i3 + 1;

        $d3 = d0 * $d2;

        $d3 = $d4 - $d3;

        $f1 = (float) $d3;

        r0[i3] = $f1;

        i3 = i2 + 1;

        $f1 = (float) $d2;

        r0[i2] = $f1;

        i2 = i3 + 1;

        $f1 = (float) $d4;

        r0[i3] = $f1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r0;
    }
    private java.util.List calculateMarkerPositions(com.caverock.androidsvg.SVG$Line)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Line $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.util.ArrayList r2;
        com.caverock.androidsvg.SVG$Length $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Line;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x1>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x1>;

        $f0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y1>;

        if $r3 == null goto label6;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y1>;

        $f1 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x2>;

        if $r3 == null goto label7;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x2>;

        $f2 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label3:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y2>;

        if $r3 == null goto label8;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y2>;

        $f3 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label4:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>(2);

        $r4 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f4 = $f2 - $f0;

        $f5 = $f3 - $f1;

        specialinvoke $r4.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,float,float)>(r0, $f0, $f1, $f4, $f5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r4 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f0 = $f2 - $f0;

        $f1 = $f3 - $f1;

        specialinvoke $r4.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,float,float)>(r0, $f2, $f3, $f0, $f1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r2;

     label5:
        $f0 = 0.0F;

        goto label1;

     label6:
        $f1 = 0.0F;

        goto label2;

     label7:
        $f2 = 0.0F;

        goto label3;

     label8:
        $f3 = 0.0F;

        goto label4;
    }
    private java.util.List calculateMarkerPositions(com.caverock.androidsvg.SVG$PolyLine)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$PolyLine $r1;
        float $f0, $f1, f2, f3;
        int i0, i1, $i2;
        java.lang.Object $r2;
        float[] $r3;
        java.util.ArrayList r4;
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector r5, r6;
        boolean $z0;
        byte $b3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$PolyLine;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        i0 = lengthof $r3;

        if i0 >= 2 goto label1;

        return null;

     label1:
        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r5 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f2 = $r3[0];

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f3 = $r3[1];

        specialinvoke r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,float,float)>(r0, f2, f3, 0.0F, 0.0F);

        f3 = 0.0F;

        f2 = 0.0F;

        i1 = 2;

     label2:
        if i1 >= i0 goto label3;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f3 = $r3[i1];

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $i2 = i1 + 1;

        f2 = $r3[$i2];

        virtualinvoke r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void add(float,float)>(f3, f2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        r6 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f0 = r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x>;

        $f0 = f3 - $f0;

        $f1 = r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y>;

        $f1 = f2 - $f1;

        specialinvoke r6.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,float,float)>(r0, f3, f2, $f0, $f1);

        i1 = i1 + 2;

        r5 = r6;

        goto label2;

     label3:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$Polygon;

        if $z0 == 0 goto label4;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $f0 = $r3[0];

        $b3 = f3 cmpl $f0;

        if $b3 == 0 goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f3 = $r3[1];

        $b3 = f2 cmpl f3;

        if $b3 == 0 goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f2 = $r3[0];

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        f3 = $r3[1];

        virtualinvoke r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void add(float,float)>(f2, f3);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        r6 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        $f0 = r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x>;

        $f0 = f2 - $f0;

        $f1 = r5.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y>;

        $f1 = f3 - $f1;

        specialinvoke r6.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float,float,float)>(r0, f2, f3, $f0, $f1);

        $r2 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector) $r2;

        virtualinvoke r6.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: void add(com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)>(r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, r6);

        return r4;

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label5:
        return r4;
    }
    private com.caverock.androidsvg.SVG$Box calculatePathBounds(android.graphics.Path)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        android.graphics.Path $r1;
        android.graphics.RectF r2;
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.SVG$Box $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: android.graphics.Path;

        r2 = new android.graphics.RectF;

        specialinvoke r2.<android.graphics.RectF: void <init>()>();

        virtualinvoke $r1.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>(r2, 1);

        $r3 = new com.caverock.androidsvg.SVG$Box;

        $f0 = r2.<android.graphics.RectF: float left>;

        $f1 = r2.<android.graphics.RectF: float top>;

        $f2 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $f3 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r3;
    }
    private float calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$TextContainer $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$TextWidthCalculator r2;
        float f0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextContainer;

        r2 = new com.caverock.androidsvg.SVGAndroidRenderer$TextWidthCalculator;

        specialinvoke r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextWidthCalculator: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVGAndroidRenderer$1)>(r0, null);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, r2);

        f0 = r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextWidthCalculator: float x>;

        return f0;
    }
    private android.graphics.Matrix calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.PreserveAspectRatio)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Box $r1, $r2;
        com.caverock.androidsvg.PreserveAspectRatio $r3, $r6;
        float f0, f1, f2, $f3, $f4, $f5;
        android.graphics.Matrix r4;
        com.caverock.androidsvg.PreserveAspectRatio$Alignment $r5;
        boolean $z0;
        com.caverock.androidsvg.PreserveAspectRatio$Scale $r7, $r8;
        int[] $r9;
        int $i0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Box;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r3 := @parameter2: com.caverock.androidsvg.PreserveAspectRatio;

        r4 = new android.graphics.Matrix;

        specialinvoke r4.<android.graphics.Matrix: void <init>()>();

        if $r3 == null goto label11;

        $r5 = virtualinvoke $r3.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Alignment getAlignment()>();

        if $r5 != null goto label01;

        return r4;

     label01:
        $f3 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        $f4 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        f2 = $f3 / $f4;

        $f3 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        $f4 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        f0 = $f3 / $f4;

        $f3 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f3 = neg $f3;

        $f4 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f4 = neg $f4;

        $r6 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio STRETCH>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.PreserveAspectRatio: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        f1 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f5 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke r4.<android.graphics.Matrix: boolean preTranslate(float,float)>(f1, $f5);

        virtualinvoke r4.<android.graphics.Matrix: boolean preScale(float,float)>(f2, f0);

        virtualinvoke r4.<android.graphics.Matrix: boolean preTranslate(float,float)>($f3, $f4);

        return r4;

     label02:
        $r7 = virtualinvoke $r3.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Scale getScale()>();

        $r8 = <com.caverock.androidsvg.PreserveAspectRatio$Scale: com.caverock.androidsvg.PreserveAspectRatio$Scale Slice>;

        if $r7 != $r8 goto label06;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f2, f0);

     label03:
        f0 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        f1 = f0 / f2;

        f0 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        f0 = f0 / f2;

        $r9 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment>;

        $r5 = virtualinvoke $r3.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Alignment getAlignment()>();

        $i0 = virtualinvoke $r5.<com.caverock.androidsvg.PreserveAspectRatio$Alignment: int ordinal()>();

        $i0 = $r9[$i0];

        lookupswitch($i0)
        {
            case 1: goto label07;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label08;
            default: goto label04;
        };

     label04:
        $r9 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment>;

        $r5 = virtualinvoke $r3.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Alignment getAlignment()>();

        $i0 = virtualinvoke $r5.<com.caverock.androidsvg.PreserveAspectRatio$Alignment: int ordinal()>();

        $i0 = $r9[$i0];

        lookupswitch($i0)
        {
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label05;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label10;
            default: goto label05;
        };

     label05:
        f0 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        f1 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke r4.<android.graphics.Matrix: boolean preTranslate(float,float)>(f0, f1);

        virtualinvoke r4.<android.graphics.Matrix: boolean preScale(float,float)>(f2, f2);

        virtualinvoke r4.<android.graphics.Matrix: boolean preTranslate(float,float)>($f3, $f4);

        return r4;

     label06:
        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f2, f0);

        goto label03;

     label07:
        $f5 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        f1 = $f5 - f1;

        f1 = f1 / 2.0F;

        $f3 = $f3 - f1;

        goto label04;

     label08:
        $f5 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        f1 = $f5 - f1;

        $f3 = $f3 - f1;

        goto label04;

     label09:
        f1 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        f0 = f1 - f0;

        f0 = f0 / 2.0F;

        $f4 = $f4 - f0;

        goto label05;

     label10:
        f1 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        f0 = f1 - f0;

        $f4 = $f4 - f0;

        goto label05;

     label11:
        return r4;
    }
    private void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        com.caverock.androidsvg.SVG$Box $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement,com.caverock.androidsvg.SVG$Box)>($r1, $r2);

        return;
    }
    private void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement, com.caverock.androidsvg.SVG$Box)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        com.caverock.androidsvg.SVG$Box $r2;
        android.graphics.Path r3;
        android.graphics.Matrix r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        com.caverock.androidsvg.SVG$Style $r6;
        java.lang.String $r7;
        com.caverock.androidsvg.SVG $r8;
        com.caverock.androidsvg.SVG$SvgObject $r9;
        java.lang.Object[] $r10;
        com.caverock.androidsvg.SVG$ClipPath r11;
        java.util.List $r12;
        boolean $z0, $z1;
        android.graphics.Canvas $r13;
        java.lang.Boolean $r14;
        java.lang.Class $r15;
        float $f0, $f1;
        java.util.Iterator $r16;
        java.lang.Object $r17;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r6.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath>;

        if $r7 != null goto label01;

        return;

     label01:
        $r8 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG document>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r6.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath>;

        $r9 = virtualinvoke $r8.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r7);

        if $r9 != null goto label02;

        $r10 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r6.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath>;

        $r10[0] = $r7;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("ClipPath reference \'%s\' not found", $r10);

        return;

     label02:
        r11 = (com.caverock.androidsvg.SVG$ClipPath) $r9;

        $r12 = r11.<com.caverock.androidsvg.SVG$ClipPath: java.util.List children>;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r13.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, 0, 0);

        return;

     label03:
        $r14 = r11.<com.caverock.androidsvg.SVG$ClipPath: java.lang.Boolean clipPathUnitsAreUser>;

        if $r14 == null goto label04;

        $r14 = r11.<com.caverock.androidsvg.SVG$ClipPath: java.lang.Boolean clipPathUnitsAreUser>;

        $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label06;

     label04:
        $z0 = 1;

     label05:
        $z1 = $r1 instanceof com.caverock.androidsvg.SVG$Group;

        if $z1 == 0 goto label07;

        if $z0 != 0 goto label07;

        $r10 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r7;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>("<clipPath clipPathUnits=\"objectBoundingBox\"> is not supported when referenced from container elements (like %s)", $r10);

        return;

     label06:
        $z0 = 0;

        goto label05;

     label07:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void clipStatePush()>();

        if $z0 != 0 goto label08;

        r4 = new android.graphics.Matrix;

        specialinvoke r4.<android.graphics.Matrix: void <init>()>();

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke r4.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        virtualinvoke r4.<android.graphics.Matrix: boolean preScale(float,float)>($f0, $f1);

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r13.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r4);

     label08:
        r4 = r11.<com.caverock.androidsvg.SVG$ClipPath: android.graphics.Matrix transform>;

        if r4 == null goto label09;

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        r4 = r11.<com.caverock.androidsvg.SVG$ClipPath: android.graphics.Matrix transform>;

        virtualinvoke $r13.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r4);

     label09:
        $r5 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)>(r11);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>(r11);

        r3 = new android.graphics.Path;

        specialinvoke r3.<android.graphics.Path: void <init>()>();

        $r12 = r11.<com.caverock.androidsvg.SVG$ClipPath: java.util.List children>;

        $r16 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.caverock.androidsvg.SVG$SvgObject) $r17;

        r4 = new android.graphics.Matrix;

        specialinvoke r4.<android.graphics.Matrix: void <init>()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void addObjectToClip(com.caverock.androidsvg.SVG$SvgObject,boolean,android.graphics.Path,android.graphics.Matrix)>($r9, 1, r3, r4);

        goto label10;

     label11:
        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r13.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>(r3);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void clipStatePop()>();

        return;
    }
    private void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r2;
        com.caverock.androidsvg.SVG$Style $r3;
        com.caverock.androidsvg.SVG$SvgPaint $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG$Box $r5;
        com.caverock.androidsvg.SVG$PaintReference $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$PaintReference;

        if $z0 == 0 goto label1;

        $r5 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        $r6 = (com.caverock.androidsvg.SVG$PaintReference) $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void decodePaintReference(boolean,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$PaintReference)>(1, $r5, $r6);

     label1:
        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$PaintReference;

        if $z0 == 0 goto label2;

        $r5 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        $r6 = (com.caverock.androidsvg.SVG$PaintReference) $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void decodePaintReference(boolean,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$PaintReference)>(0, $r5, $r6);

     label2:
        return;
    }
    private android.graphics.Bitmap checkForImageDataURL(java.lang.String)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        byte[] $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("data:");

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < 14 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(44);

        if $i0 == -1 goto label2;

        if $i0 < 12 goto label2;

        $r2 = ";base64";

        $i1 = $i0 + -7;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 0);

        $i0 = lengthof $r4;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r4, 0, $i0);

        return $r5;

     label2:
        return null;
    }
    private android.graphics.Typeface checkGenericFont(java.lang.String, java.lang.Integer, com.caverock.androidsvg.SVG$Style$FontStyle)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.lang.String $r1;
        java.lang.Integer $r2;
        com.caverock.androidsvg.SVG$Style$FontStyle $r3, $r4;
        byte $b0, b2;
        boolean z0;
        int $i1;
        android.graphics.Typeface $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Integer;

        $r3 := @parameter2: com.caverock.androidsvg.SVG$Style$FontStyle;

        $b0 = 0;

        $r4 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Italic>;

        if $r3 != $r4 goto label06;

        z0 = 1;

     label01:
        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i1 <= 500 goto label08;

        if z0 == 0 goto label07;

        b2 = 3;

     label02:
        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1536685117: goto label11;
            case -1431958525: goto label12;
            case -1081737434: goto label14;
            case 109326717: goto label10;
            case 1126973893: goto label13;
            default: goto label03;
        };

     label03:
        $b0 = -1;

     label04:
        lookupswitch($b0)
        {
            case 0: goto label15;
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label18;
            case 4: goto label19;
            default: goto label05;
        };

     label05:
        return null;

     label06:
        z0 = 0;

        goto label01;

     label07:
        b2 = 1;

        goto label02;

     label08:
        if z0 == 0 goto label09;

        b2 = 2;

        goto label02;

     label09:
        b2 = 0;

        goto label02;

     label10:
        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("serif");

        if z0 == 0 goto label03;

        goto label04;

     label11:
        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("sans-serif");

        if z0 == 0 goto label03;

        $b0 = 1;

        goto label04;

     label12:
        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("monospace");

        if z0 == 0 goto label03;

        $b0 = 2;

        goto label04;

     label13:
        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("cursive");

        if z0 == 0 goto label03;

        $b0 = 3;

        goto label04;

     label14:
        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("fantasy");

        if z0 == 0 goto label03;

        $b0 = 4;

        goto label04;

     label15:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, b2);

        return $r5;

     label16:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, b2);

        return $r5;

     label17:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, b2);

        return $r5;

     label18:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, b2);

        return $r5;

     label19:
        $r5 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r5, b2);

        return $r5;
    }
    private void checkXMLSpaceAttribute(com.caverock.androidsvg.SVG$SvgObject)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgObject $r1;
        boolean $z0;
        com.caverock.androidsvg.SVG$SvgElementBase r2;
        java.lang.Boolean $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$SvgElementBase;

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = (com.caverock.androidsvg.SVG$SvgElementBase) $r1;

        $r3 = r2.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.Boolean spacePreserve>;

        if $r3 == null goto label2;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = r2.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.Boolean spacePreserve>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean spacePreserve> = $z0;

     label2:
        return;
    }
    private static int clamp255(float)
    {
        float $f0;
        int i0;

        $f0 := @parameter0: float;

        $f0 = 256.0F * $f0;

        i0 = (int) $f0;

        if i0 >= 0 goto label1;

        return 0;

     label1:
        if i0 <= 255 goto label2;

        return 255;

     label2:
        return i0;
    }
    private void clipStatePop()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.lang.Object $r1;
        android.graphics.Canvas $r2;
        java.util.Stack $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r2.<android.graphics.Canvas: void restore()>();

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r1 = virtualinvoke $r3.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) $r1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r4;

        return;
    }
    private void clipStatePush()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        android.graphics.Canvas $r1;
        java.util.Stack $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3, $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r1.<android.graphics.Canvas: int save(int)>(1);

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

        $r3 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>(r0, $r4);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r3;

        return;
    }
    static int colourWithOpacity(int, float)
    {
        int $i0, $i1, i2;
        float $f0, $f1;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = $i0 >> 24;

        $i1 = $i1 & 255;

        $f1 = (float) $i1;

        $f0 = $f1 * $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i2 = $i1;

        if $i1 >= 0 goto label2;

        i2 = 0;

     label1:
        $i1 = i2 << 24;

        $i0 = 16777215 & $i0;

        $i0 = $i1 | $i0;

        return $i0;

     label2:
        if $i1 <= 255 goto label1;

        i2 = 255;

        goto label1;
    }
    private static transient void debug(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        return;
    }
    private void decodePaintReference(boolean, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$PaintReference)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$Box $r1;
        com.caverock.androidsvg.SVG$PaintReference $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        com.caverock.androidsvg.SVG$SvgObject $r5;
        com.caverock.androidsvg.SVG $r6;
        com.caverock.androidsvg.SVG$SvgPaint $r7;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r8;
        com.caverock.androidsvg.SVG$SvgLinearGradient $r9;
        com.caverock.androidsvg.SVG$SvgRadialGradient $r10;
        com.caverock.androidsvg.SVG$SolidColor r11;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r2 := @parameter2: com.caverock.androidsvg.SVG$PaintReference;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r4 = $r2.<com.caverock.androidsvg.SVG$PaintReference: java.lang.String href>;

        $r5 = virtualinvoke $r6.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        if $r5 != null goto label5;

        $r3 = newarray (java.lang.Object)[2];

        if $z0 == 0 goto label2;

        $r4 = "Fill";

     label1:
        $r3[0] = $r4;

        $r4 = $r2.<com.caverock.androidsvg.SVG$PaintReference: java.lang.String href>;

        $r3[1] = $r4;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("%s reference \'%s\' not found", $r3);

        $r7 = $r2.<com.caverock.androidsvg.SVG$PaintReference: com.caverock.androidsvg.SVG$SvgPaint fallback>;

        if $r7 == null goto label3;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r7 = $r2.<com.caverock.androidsvg.SVG$PaintReference: com.caverock.androidsvg.SVG$SvgPaint fallback>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,boolean,com.caverock.androidsvg.SVG$SvgPaint)>($r8, $z0, $r7);

        return;

     label2:
        $r4 = "Stroke";

        goto label1;

     label3:
        if $z0 == 0 goto label4;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r8.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill> = 0;

        return;

     label4:
        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r8.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke> = 0;

        return;

     label5:
        $z1 = $r5 instanceof com.caverock.androidsvg.SVG$SvgLinearGradient;

        if $z1 == 0 goto label6;

        $r9 = (com.caverock.androidsvg.SVG$SvgLinearGradient) $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void makeLinearGradient(boolean,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$SvgLinearGradient)>($z0, $r1, $r9);

     label6:
        $z1 = $r5 instanceof com.caverock.androidsvg.SVG$SvgRadialGradient;

        if $z1 == 0 goto label7;

        $r10 = (com.caverock.androidsvg.SVG$SvgRadialGradient) $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void makeRadialGradient(boolean,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$SvgRadialGradient)>($z0, $r1, $r10);

     label7:
        $z1 = $r5 instanceof com.caverock.androidsvg.SVG$SolidColor;

        if $z1 == 0 goto label8;

        r11 = (com.caverock.androidsvg.SVG$SolidColor) $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setSolidColor(boolean,com.caverock.androidsvg.SVG$SolidColor)>($z0, r11);

     label8:
        return;
    }
    private boolean display()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display>;

        if $r3 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 1;
    }
    private void doFilledPath(com.caverock.androidsvg.SVG$SvgElement, android.graphics.Path)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        android.graphics.Path $r2;
        com.caverock.androidsvg.SVG$SvgObject $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        com.caverock.androidsvg.SVG$Style $r5;
        com.caverock.androidsvg.SVG$SvgPaint $r6;
        boolean $z0;
        com.caverock.androidsvg.SVG $r7;
        com.caverock.androidsvg.SVG$PaintReference $r8;
        java.lang.String $r9;
        com.caverock.androidsvg.SVG$Pattern r10;
        android.graphics.Canvas $r11;
        android.graphics.Paint $r12;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 := @parameter1: android.graphics.Path;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r5 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r5.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        $z0 = $r6 instanceof com.caverock.androidsvg.SVG$PaintReference;

        if $z0 == 0 goto label1;

        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r5 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r5.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        $r8 = (com.caverock.androidsvg.SVG$PaintReference) $r6;

        $r9 = $r8.<com.caverock.androidsvg.SVG$PaintReference: java.lang.String href>;

        $r3 = virtualinvoke $r7.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r9);

        $z0 = $r3 instanceof com.caverock.androidsvg.SVG$Pattern;

        if $z0 == 0 goto label1;

        r10 = (com.caverock.androidsvg.SVG$Pattern) $r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillWithPattern(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path,com.caverock.androidsvg.SVG$Pattern)>($r1, $r2, r10);

        return;

     label1:
        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r12 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        virtualinvoke $r11.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r2, $r12);

        return;
    }
    private void doStroke(android.graphics.Path)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        android.graphics.Path $r1, r4;
        android.graphics.Matrix r2, r3, $r10;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        com.caverock.androidsvg.SVG$Style $r6;
        com.caverock.androidsvg.SVG$Style$VectorEffect $r7, $r8;
        android.graphics.Canvas $r9;
        android.graphics.Paint $r11;
        android.graphics.Shader $r12;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: android.graphics.Path;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r6.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect>;

        $r8 = <com.caverock.androidsvg.SVG$Style$VectorEffect: com.caverock.androidsvg.SVG$Style$VectorEffect NonScalingStroke>;

        if $r7 != $r8 goto label2;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r10 = virtualinvoke $r9.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        r4 = new android.graphics.Path;

        specialinvoke r4.<android.graphics.Path: void <init>()>();

        virtualinvoke $r1.<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>($r10, r4);

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r9.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>(r2);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r11 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r12 = virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader getShader()>();

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        if $r12 == null goto label1;

        virtualinvoke $r12.<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>(r2);

        r3 = new android.graphics.Matrix;

        specialinvoke r3.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r2);

        virtualinvoke r3.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r10);

        virtualinvoke $r12.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r3);

     label1:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r11 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r9.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r4, $r11);

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r9.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>($r10);

        if $r12 == null goto label3;

        virtualinvoke $r12.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r2);

        return;

     label2:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r11 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r9.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r1, $r11);

     label3:
        return;
    }
    private void duplicateCanvas()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.lang.OutOfMemoryError r1;
        android.graphics.Canvas r2, $r6;
        android.graphics.Bitmap$Config $r3;
        int $i0, $i1;
        android.graphics.Bitmap $r4;
        java.util.Stack $r5;
        android.graphics.Matrix $r7;
        java.lang.Object[] $r8;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

     label1:
        $i0 = virtualinvoke r2.<android.graphics.Canvas: int getWidth()>();

     label2:
        r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

     label3:
        $i1 = virtualinvoke r2.<android.graphics.Canvas: int getHeight()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

     label4:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack bitmapStack>;

     label5:
        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

        r2 = new android.graphics.Canvas;

        specialinvoke r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4);

     label6:
        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

     label7:
        $r7 = virtualinvoke $r6.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        virtualinvoke r2.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>($r7);

     label8:
        r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas> = r2;

        return;

     label9:
        r1 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Not enough memory to create temporary bitmaps for mask processing", $r8);

        throw r1;

        catch java.lang.OutOfMemoryError from label1 to label2 with label9;
        catch java.lang.OutOfMemoryError from label3 to label4 with label9;
        catch java.lang.OutOfMemoryError from label5 to label6 with label9;
        catch java.lang.OutOfMemoryError from label7 to label8 with label9;
    }
    private void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$TextContainer $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor $r2;
        java.lang.String $r3;
        boolean $z0, $z1;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        com.caverock.androidsvg.SVG$SvgObject r7;
        com.caverock.androidsvg.SVG$TextSequence r8;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextContainer;

        $r2 := @parameter1: com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = $r1.<com.caverock.androidsvg.SVG$TextContainer: java.util.List children>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 1;

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.caverock.androidsvg.SVG$SvgObject) $r6;

        $z1 = r7 instanceof com.caverock.androidsvg.SVG$TextSequence;

        if $z1 == 0 goto label6;

        r8 = (com.caverock.androidsvg.SVG$TextSequence) r7;

        $r3 = r8.<com.caverock.androidsvg.SVG$TextSequence: java.lang.String text>;

        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        $z1 = 1;

     label3:
        $r3 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.lang.String textXMLSpaceTransform(java.lang.String,boolean,boolean)>($r3, $z0, $z1);

        virtualinvoke $r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor: void processText(java.lang.String)>($r3);

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $z1 = 0;

        goto label3;

     label6:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void processTextChild(com.caverock.androidsvg.SVG$SvgObject,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>(r7, $r2);

        goto label4;

     label7:
        return;
    }
    private static transient void error(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r0, $r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGAndroidRenderer", $r0);

        return;
    }
    private void extractRawText(com.caverock.androidsvg.SVG$TextContainer, java.lang.StringBuilder)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$TextContainer $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean z0, $z1;
        java.lang.Object $r6;
        com.caverock.androidsvg.SVG$SvgObject r7;
        com.caverock.androidsvg.SVG$TextSequence r8;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextContainer;

        $r2 := @parameter1: java.lang.StringBuilder;

        $r4 = $r1.<com.caverock.androidsvg.SVG$TextContainer: java.util.List children>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        z0 = 1;

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.caverock.androidsvg.SVG$SvgObject) $r6;

        $z1 = r7 instanceof com.caverock.androidsvg.SVG$TextContainer;

        if $z1 == 0 goto label3;

        $r1 = (com.caverock.androidsvg.SVG$TextContainer) r7;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void extractRawText(com.caverock.androidsvg.SVG$TextContainer,java.lang.StringBuilder)>($r1, $r2);

     label2:
        z0 = 0;

        goto label1;

     label3:
        $z1 = r7 instanceof com.caverock.androidsvg.SVG$TextSequence;

        if $z1 == 0 goto label2;

        r8 = (com.caverock.androidsvg.SVG$TextSequence) r7;

        $r3 = r8.<com.caverock.androidsvg.SVG$TextSequence: java.lang.String text>;

        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        $z1 = 1;

     label4:
        $r3 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.lang.String textXMLSpaceTransform(java.lang.String,boolean,boolean)>($r3, z0, $z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label5:
        $z1 = 0;

        goto label4;

     label6:
        return;
    }
    private void fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement, java.lang.String)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$GradientElement $r1, r6;
        java.lang.String $r2;
        com.caverock.androidsvg.SVG $r3;
        com.caverock.androidsvg.SVG$SvgObject $r4;
        java.lang.Object[] $r5;
        boolean $z0;
        java.lang.Boolean $r7;
        android.graphics.Matrix $r8;
        com.caverock.androidsvg.SVG$GradientSpread $r9;
        java.util.List $r10;
        com.caverock.androidsvg.SVG$SvgLinearGradient $r11, r12;
        com.caverock.androidsvg.SVG$SvgRadialGradient $r13, r14;
        java.lang.ClassCastException $r15;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$GradientElement;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r1.<com.caverock.androidsvg.SVG$GradientElement: com.caverock.androidsvg.SVG document>;

        $r4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r2);

        if $r4 != null goto label01;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>("Gradient reference \'%s\' not found", $r5);

        return;

     label01:
        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$GradientElement;

        if $z0 != 0 goto label02;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Gradient href attributes must point to other gradient elements", $r5);

        return;

     label02:
        if $r4 != $r1 goto label03;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Circular reference in gradient href attribute \'%s\'", $r5);

        return;

     label03:
        r6 = (com.caverock.androidsvg.SVG$GradientElement) $r4;

        $r7 = $r1.<com.caverock.androidsvg.SVG$GradientElement: java.lang.Boolean gradientUnitsAreUser>;

        if $r7 != null goto label04;

        $r7 = r6.<com.caverock.androidsvg.SVG$GradientElement: java.lang.Boolean gradientUnitsAreUser>;

        $r1.<com.caverock.androidsvg.SVG$GradientElement: java.lang.Boolean gradientUnitsAreUser> = $r7;

     label04:
        $r8 = $r1.<com.caverock.androidsvg.SVG$GradientElement: android.graphics.Matrix gradientTransform>;

        if $r8 != null goto label05;

        $r8 = r6.<com.caverock.androidsvg.SVG$GradientElement: android.graphics.Matrix gradientTransform>;

        $r1.<com.caverock.androidsvg.SVG$GradientElement: android.graphics.Matrix gradientTransform> = $r8;

     label05:
        $r9 = $r1.<com.caverock.androidsvg.SVG$GradientElement: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        if $r9 != null goto label06;

        $r9 = r6.<com.caverock.androidsvg.SVG$GradientElement: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        $r1.<com.caverock.androidsvg.SVG$GradientElement: com.caverock.androidsvg.SVG$GradientSpread spreadMethod> = $r9;

     label06:
        $r10 = $r1.<com.caverock.androidsvg.SVG$GradientElement: java.util.List children>;

        $z0 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $r10 = r6.<com.caverock.androidsvg.SVG$GradientElement: java.util.List children>;

        $r1.<com.caverock.androidsvg.SVG$GradientElement: java.util.List children> = $r10;

     label07:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$SvgLinearGradient;

        if $z0 == 0 goto label10;

     label08:
        $r11 = (com.caverock.androidsvg.SVG$SvgLinearGradient) $r1;

        r12 = (com.caverock.androidsvg.SVG$SvgLinearGradient) $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgLinearGradient,com.caverock.androidsvg.SVG$SvgLinearGradient)>($r11, r12);

     label09:
        $r2 = r6.<com.caverock.androidsvg.SVG$GradientElement: java.lang.String href>;

        if $r2 == null goto label13;

        $r2 = r6.<com.caverock.androidsvg.SVG$GradientElement: java.lang.String href>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement,java.lang.String)>($r1, $r2);

        return;

     label10:
        $r13 = (com.caverock.androidsvg.SVG$SvgRadialGradient) $r1;

        r14 = (com.caverock.androidsvg.SVG$SvgRadialGradient) $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgRadialGradient,com.caverock.androidsvg.SVG$SvgRadialGradient)>($r13, r14);

     label11:
        goto label09;

     label12:
        $r15 := @caughtexception;

        goto label09;

     label13:
        return;

        catch java.lang.ClassCastException from label08 to label09 with label12;
        catch java.lang.ClassCastException from label10 to label11 with label12;
    }
    private void fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgLinearGradient, com.caverock.androidsvg.SVG$SvgLinearGradient)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgLinearGradient $r1, $r2;
        com.caverock.androidsvg.SVG$Length $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgLinearGradient;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$SvgLinearGradient;

        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        if $r3 != null goto label1;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1> = $r3;

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        if $r3 != null goto label2;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1> = $r3;

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        if $r3 != null goto label3;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2> = $r3;

     label3:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        if $r3 != null goto label4;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2> = $r3;

     label4:
        return;
    }
    private void fillInChainedGradientFields(com.caverock.androidsvg.SVG$SvgRadialGradient, com.caverock.androidsvg.SVG$SvgRadialGradient)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgRadialGradient $r1, $r2;
        com.caverock.androidsvg.SVG$Length $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgRadialGradient;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$SvgRadialGradient;

        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        if $r3 != null goto label1;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx> = $r3;

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        if $r3 != null goto label2;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy> = $r3;

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        if $r3 != null goto label3;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r> = $r3;

     label3:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fx>;

        if $r3 != null goto label4;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fx>;

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fx> = $r3;

     label4:
        $r3 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fy>;

        if $r3 != null goto label5;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fy>;

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fy> = $r3;

     label5:
        return;
    }
    private void fillInChainedPatternFields(com.caverock.androidsvg.SVG$Pattern, java.lang.String)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Pattern $r1, r6;
        java.lang.String $r2;
        com.caverock.androidsvg.SVG $r3;
        com.caverock.androidsvg.SVG$SvgObject $r4;
        java.lang.Object[] $r5;
        boolean $z0;
        java.lang.Boolean $r7;
        android.graphics.Matrix $r8;
        com.caverock.androidsvg.SVG$Length $r9;
        java.util.List $r10;
        com.caverock.androidsvg.SVG$Box $r11;
        com.caverock.androidsvg.PreserveAspectRatio $r12;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Pattern;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG document>;

        $r4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r2);

        if $r4 != null goto label01;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>("Pattern reference \'%s\' not found", $r5);

        return;

     label01:
        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$Pattern;

        if $z0 != 0 goto label02;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Pattern href attributes must point to other pattern elements", $r5);

        return;

     label02:
        if $r4 != $r1 goto label03;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Circular reference in pattern href attribute \'%s\'", $r5);

        return;

     label03:
        r6 = (com.caverock.androidsvg.SVG$Pattern) $r4;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser>;

        if $r7 != null goto label04;

        $r7 = r6.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser> = $r7;

     label04:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser>;

        if $r7 != null goto label05;

        $r7 = r6.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser> = $r7;

     label05:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform>;

        if $r8 != null goto label06;

        $r8 = r6.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform> = $r8;

     label06:
        $r9 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        if $r9 != null goto label07;

        $r9 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x> = $r9;

     label07:
        $r9 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        if $r9 != null goto label08;

        $r9 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y> = $r9;

     label08:
        $r9 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        if $r9 != null goto label09;

        $r9 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width> = $r9;

     label09:
        $r9 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        if $r9 != null goto label10;

        $r9 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height> = $r9;

     label10:
        $r10 = $r1.<com.caverock.androidsvg.SVG$Pattern: java.util.List children>;

        $z0 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        $r10 = r6.<com.caverock.androidsvg.SVG$Pattern: java.util.List children>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.util.List children> = $r10;

     label11:
        $r11 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r11 != null goto label12;

        $r11 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Box viewBox>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Box viewBox> = $r11;

     label12:
        $r12 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r12 != null goto label13;

        $r12 = r6.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio> = $r12;

     label13:
        $r2 = r6.<com.caverock.androidsvg.SVG$Pattern: java.lang.String href>;

        if $r2 == null goto label14;

        $r2 = r6.<com.caverock.androidsvg.SVG$Pattern: java.lang.String href>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedPatternFields(com.caverock.androidsvg.SVG$Pattern,java.lang.String)>($r1, $r2);

     label14:
        return;
    }
    private void fillWithPattern(com.caverock.androidsvg.SVG$SvgElement, android.graphics.Path, com.caverock.androidsvg.SVG$Pattern)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        android.graphics.Path $r2;
        com.caverock.androidsvg.SVG$Pattern $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState r4;
        android.graphics.Matrix r5, $r14;
        float f0, f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.RectF r6;
        com.caverock.androidsvg.SVG$Box r7, $r16;
        java.lang.Boolean $r8;
        boolean $z0, $z1;
        java.lang.String $r9;
        com.caverock.androidsvg.SVG$Length $r10;
        byte $b0;
        com.caverock.androidsvg.PreserveAspectRatio $r11;
        android.graphics.Canvas $r12;
        com.caverock.androidsvg.SVG$Style $r13;
        float[] $r15;
        int i1, $i2;
        double $d0;
        java.util.List $r17;
        java.util.Iterator $r18;
        java.lang.Object $r19;
        com.caverock.androidsvg.SVG$SvgObject r20;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: com.caverock.androidsvg.SVG$Pattern;

        $r8 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser>;

        if $r8 == null goto label07;

        $r8 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label07;

        $z0 = 1;

     label01:
        $r9 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.String href>;

        if $r9 == null goto label02;

        $r9 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.String href>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedPatternFields(com.caverock.androidsvg.SVG$Pattern,java.lang.String)>($r3, $r9);

     label02:
        if $z0 == 0 goto label12;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        if $r10 == null goto label08;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        f0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label03:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        if $r10 == null goto label09;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        f3 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label04:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        if $r10 == null goto label10;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        $f2 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label05:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        if $r10 == null goto label11;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        $f4 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label06:
        $b0 = $f2 cmpl 0.0F;

        if $b0 == 0 goto label44;

        $b0 = $f4 cmpl 0.0F;

        if $b0 != 0 goto label21;

        return;

     label07:
        $z0 = 0;

        goto label01;

     label08:
        f0 = 0.0F;

        goto label03;

     label09:
        f3 = 0.0F;

        goto label04;

     label10:
        $f2 = 0.0F;

        goto label05;

     label11:
        $f4 = 0.0F;

        goto label06;

     label12:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        if $r10 == null goto label17;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x>;

        f0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label13:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        if $r10 == null goto label18;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y>;

        f3 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label14:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        if $r10 == null goto label19;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        $f2 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label15:
        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        if $r10 == null goto label20;

        $r10 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        $f4 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label16:
        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minX>;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        f1 = r7.<com.caverock.androidsvg.SVG$Box: float width>;

        f0 = f1 * f0;

        f0 = $f5 + f0;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minY>;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        f1 = r7.<com.caverock.androidsvg.SVG$Box: float height>;

        f3 = f1 * f3;

        f3 = $f5 + f3;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float width>;

        $f2 = $f2 * $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float height>;

        $f4 = $f4 * $f5;

        goto label06;

     label17:
        f0 = 0.0F;

        goto label13;

     label18:
        f3 = 0.0F;

        goto label14;

     label19:
        $f2 = 0.0F;

        goto label15;

     label20:
        $f4 = 0.0F;

        goto label16;

     label21:
        $r11 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r11 == null goto label28;

        $r11 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

     label22:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r12.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r2);

        r4 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        specialinvoke r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r13 = staticinvoke <com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style getDefaultStyle()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>(r4, $r13);

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r13.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow> = $r8;

        r4 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>($r3, r4);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = r4;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        r5 = $r3.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform>;

        if r5 == null goto label30;

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        r5 = $r3.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform>;

        virtualinvoke $r12.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r5);

        r5 = new android.graphics.Matrix;

        specialinvoke r5.<android.graphics.Matrix: void <init>()>();

        $r14 = $r3.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform>;

        $z0 = virtualinvoke $r14.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r5);

        if $z0 == 0 goto label30;

        $r15 = newarray (float)[8];

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r15[0] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r15[1] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $r15[2] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r15[3] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $r15[4] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        $r15[5] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r15[6] = $f5;

        r7 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f5 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        $r15[7] = $f5;

        virtualinvoke r5.<android.graphics.Matrix: void mapPoints(float[])>($r15);

        r6 = new android.graphics.RectF;

        $f5 = $r15[0];

        f1 = $r15[1];

        $f6 = $r15[0];

        $f7 = $r15[1];

        specialinvoke r6.<android.graphics.RectF: void <init>(float,float,float,float)>($f5, f1, $f6, $f7);

        i1 = 2;

     label23:
        if i1 > 6 goto label29;

        $f5 = $r15[i1];

        f1 = r6.<android.graphics.RectF: float left>;

        $b0 = $f5 cmpg f1;

        if $b0 >= 0 goto label24;

        $f5 = $r15[i1];

        r6.<android.graphics.RectF: float left> = $f5;

     label24:
        $f5 = $r15[i1];

        f1 = r6.<android.graphics.RectF: float right>;

        $b0 = $f5 cmpl f1;

        if $b0 <= 0 goto label25;

        $f5 = $r15[i1];

        r6.<android.graphics.RectF: float right> = $f5;

     label25:
        $i2 = i1 + 1;

        $f5 = $r15[$i2];

        f1 = r6.<android.graphics.RectF: float top>;

        $b0 = $f5 cmpg f1;

        if $b0 >= 0 goto label26;

        $i2 = i1 + 1;

        $f5 = $r15[$i2];

        r6.<android.graphics.RectF: float top> = $f5;

     label26:
        $i2 = i1 + 1;

        $f5 = $r15[$i2];

        f1 = r6.<android.graphics.RectF: float bottom>;

        $b0 = $f5 cmpl f1;

        if $b0 <= 0 goto label27;

        $i2 = i1 + 1;

        $f5 = $r15[$i2];

        r6.<android.graphics.RectF: float bottom> = $f5;

     label27:
        i1 = i1 + 2;

        goto label23;

     label28:
        $r11 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio LETTERBOX>;

        goto label22;

     label29:
        r7 = new com.caverock.androidsvg.SVG$Box;

        $f5 = r6.<android.graphics.RectF: float left>;

        f1 = r6.<android.graphics.RectF: float top>;

        $f6 = r6.<android.graphics.RectF: float right>;

        $f7 = r6.<android.graphics.RectF: float left>;

        $f6 = $f6 - $f7;

        $f7 = r6.<android.graphics.RectF: float bottom>;

        $f8 = r6.<android.graphics.RectF: float top>;

        $f7 = $f7 - $f8;

        specialinvoke r7.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f5, f1, $f6, $f7);

     label30:
        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f5 = $f5 - f0;

        $f5 = $f5 / $f2;

        $d0 = (double) $f5;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f5 = (float) $d0;

        $f5 = $f5 * $f2;

        f0 = f0 + $f5;

        $f5 = r7.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f5 = $f5 - f3;

        $f5 = $f5 / $f4;

        $d0 = (double) $f5;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f5 = (float) $d0;

        $f5 = $f5 * $f4;

        f1 = f3 + $f5;

        f3 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        $f5 = virtualinvoke r7.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        r7 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke r7.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f2, $f4);

     label31:
        $b0 = f1 cmpg $f5;

        if $b0 >= 0 goto label43;

        $f6 = f0;

     label32:
        $b0 = $f6 cmpg f3;

        if $b0 >= 0 goto label42;

        r7.<com.caverock.androidsvg.SVG$Box: float minX> = $f6;

        r7.<com.caverock.androidsvg.SVG$Box: float minY> = f1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r13 = r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r8 = $r13.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label33;

        $f7 = r7.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f8 = r7.<com.caverock.androidsvg.SVG$Box: float minY>;

        $f9 = r7.<com.caverock.androidsvg.SVG$Box: float width>;

        $f10 = r7.<com.caverock.androidsvg.SVG$Box: float height>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>($f7, $f8, $f9, $f10);

     label33:
        $r16 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r16 == null goto label36;

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r16 = $r3.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Box viewBox>;

        r5 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Matrix calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>(r7, $r16, $r11);

        virtualinvoke $r12.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r5);

     label34:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r17 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.util.List children>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label35:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label40;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.caverock.androidsvg.SVG$SvgObject) $r19;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$SvgObject)>(r20);

        goto label35;

     label36:
        $r8 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser>;

        if $r8 == null goto label37;

        $r8 = $r3.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label39;

     label37:
        $z0 = 1;

     label38:
        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r12.<android.graphics.Canvas: void translate(float,float)>($f6, f1);

        if $z0 != 0 goto label34;

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r16 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f7 = $r16.<com.caverock.androidsvg.SVG$Box: float width>;

        $r16 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f8 = $r16.<com.caverock.androidsvg.SVG$Box: float height>;

        virtualinvoke $r12.<android.graphics.Canvas: void scale(float,float)>($f7, $f8);

        goto label34;

     label39:
        $z0 = 0;

        goto label38;

     label40:
        if $z0 == 0 goto label41;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r3);

     label41:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        $f6 = $f6 + $f2;

        goto label32;

     label42:
        f1 = f1 + $f4;

        goto label31;

     label43:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

     label44:
        return;
    }
    private com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgObject $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState r2;
        com.caverock.androidsvg.SVG$Style $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        r2 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        specialinvoke r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r3 = staticinvoke <com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style getDefaultStyle()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>(r2, $r3);

        r2 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>($r1, r2);

        return r2;
    }
    private com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject, com.caverock.androidsvg.SVGAndroidRenderer$RendererState)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1, $r8;
        java.util.ArrayList r2;
        com.caverock.androidsvg.SVG$SvgObject r3;
        boolean $z0;
        com.caverock.androidsvg.SVG$SvgElementBase $r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        com.caverock.androidsvg.SVG$Box $r9;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r3 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $r1 := @parameter1: com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$SvgElementBase;

        if $z0 == 0 goto label2;

        $r4 = (com.caverock.androidsvg.SVG$SvgElementBase) r3;

        interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(0, $r4);

     label2:
        $r5 = r3.<com.caverock.androidsvg.SVG$SvgObject: com.caverock.androidsvg.SVG$SvgContainer parent>;

        if $r5 != null goto label4;

        $r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.caverock.androidsvg.SVG$SvgElementBase) $r7;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r1, $r4);

        goto label3;

     label4:
        $r5 = r3.<com.caverock.androidsvg.SVG$SvgObject: com.caverock.androidsvg.SVG$SvgContainer parent>;

        r3 = (com.caverock.androidsvg.SVG$SvgObject) $r5;

        goto label1;

     label5:
        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9 = $r8.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox> = $r9;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9 = $r8.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort> = $r9;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r8.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering> = $z0;

        return $r1;
    }
    private com.caverock.androidsvg.SVG$Style$TextAnchor getAnchorPosition()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        com.caverock.androidsvg.SVG$Style$TextDirection $r3, $r4;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r5, $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDirection direction>;

        $r4 = <com.caverock.androidsvg.SVG$Style$TextDirection: com.caverock.androidsvg.SVG$Style$TextDirection LTR>;

        if $r3 == $r4 goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        $r6 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Middle>;

        if $r5 != $r6 goto label2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        return $r5;

     label2:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        $r6 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        if $r5 != $r6 goto label3;

        $r5 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor End>;

        return $r5;

     label3:
        $r5 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        return $r5;
    }
    private android.graphics.Path$FillType getClipRuleFromState()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        int $i0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        com.caverock.androidsvg.SVG$Style$FillRule $r3;
        int[] $r4;
        android.graphics.Path$FillType r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule>;

        if $r3 != null goto label1;

        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        return r5;

     label1:
        $r4 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$SVG$Style$FillRule>;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule>;

        $i0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Style$FillRule: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            default: goto label2;
        };

     label2:
        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        return r5;

     label3:
        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        return r5;
    }
    private android.graphics.Path$FillType getFillTypeFromState()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        int $i0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        com.caverock.androidsvg.SVG$Style$FillRule $r3;
        int[] $r4;
        android.graphics.Path$FillType r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule>;

        if $r3 != null goto label1;

        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        return r5;

     label1:
        $r4 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$SVG$Style$FillRule>;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule>;

        $i0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Style$FillRule: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            default: goto label2;
        };

     label2:
        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        return r5;

     label3:
        r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        return r5;
    }
    private static void initialiseSupportedFeaturesMap()
    {
        java.util.HashSet $r0;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/caverock/androidsvg/SVGAndroidRenderer;";

     label1:
        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures> = $r0;

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Structure");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("BasicStructure");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("ConditionalProcessing");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Image");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Style");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("ViewportAttribute");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Shape");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("BasicText");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("PaintAttribute");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("BasicPaintAttribute");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("OpacityAttribute");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("BasicGraphicsAttribute");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Marker");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Gradient");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Pattern");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Clip");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("BasicClip");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("Mask");

        $r0 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>("View");

     label2:
        exitmonitor class "Lcom/caverock/androidsvg/SVGAndroidRenderer;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/caverock/androidsvg/SVGAndroidRenderer;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private boolean isSpecified(com.caverock.androidsvg.SVG$Style, long)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Style $r1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Style;

        $l0 := @parameter1: long;

        $l1 = $r1.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l0 = $l1 & $l0;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void makeLinearGradient(boolean, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$SvgLinearGradient)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$Box $r1, $r11;
        com.caverock.androidsvg.SVG$SvgLinearGradient $r2;
        android.graphics.LinearGradient r3;
        int[] r4;
        float[] r5;
        android.graphics.Matrix r6, $r13;
        java.lang.String $r7;
        java.lang.Boolean $r8;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r9;
        android.graphics.Paint $r10;
        com.caverock.androidsvg.SVG$Length $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.util.List $r14;
        int $i0, i1, $i3;
        java.util.Iterator $r15;
        java.lang.Object $r16;
        com.caverock.androidsvg.SVG$SvgObject r17;
        com.caverock.androidsvg.SVG$Stop r18;
        java.lang.Float $r19;
        byte $b2;
        com.caverock.androidsvg.SVG$Style $r20;
        com.caverock.androidsvg.SVG$SvgPaint r21;
        com.caverock.androidsvg.SVG$Colour r22;
        android.graphics.Shader$TileMode r23;
        com.caverock.androidsvg.SVG$GradientSpread $r24, $r25;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r2 := @parameter2: com.caverock.androidsvg.SVG$SvgLinearGradient;

        $r7 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.lang.String href>;

        if $r7 == null goto label01;

        $r7 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.lang.String href>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement,java.lang.String)>($r2, $r7);

     label01:
        $r8 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.lang.Boolean gradientUnitsAreUser>;

        if $r8 == null goto label10;

        $r8 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.lang.Boolean gradientUnitsAreUser>;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label10;

        $z1 = 1;

     label02:
        if $z0 == 0 goto label11;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r10 = $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

     label03:
        if $z1 == 0 goto label16;

        $r11 = virtualinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box getCurrentViewPortInUserUnits()>();

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        if $r12 == null goto label12;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        $f0 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label04:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        if $r12 == null goto label13;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        $f1 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label05:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        if $r12 == null goto label14;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        $f2 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label06:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        if $r12 == null goto label15;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        $f3 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label07:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r9 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)>($r2);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r9;

        r6 = new android.graphics.Matrix;

        specialinvoke r6.<android.graphics.Matrix: void <init>()>();

        if $z1 != 0 goto label08;

        $f4 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f5 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke r6.<android.graphics.Matrix: boolean preTranslate(float,float)>($f4, $f5);

        $f4 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        $f5 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        virtualinvoke r6.<android.graphics.Matrix: boolean preScale(float,float)>($f4, $f5);

     label08:
        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: android.graphics.Matrix gradientTransform>;

        if $r13 == null goto label09;

        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: android.graphics.Matrix gradientTransform>;

        virtualinvoke r6.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r13);

     label09:
        $r14 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.util.List children>;

        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i0 != 0 goto label25;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        if $z0 == 0 goto label24;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill> = 0;

        return;

     label10:
        $z1 = 0;

        goto label02;

     label11:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r10 = $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        goto label03;

     label12:
        $f0 = 0.0F;

        goto label04;

     label13:
        $f1 = 0.0F;

        goto label05;

     label14:
        $f2 = $r11.<com.caverock.androidsvg.SVG$Box: float width>;

        goto label06;

     label15:
        $f3 = 0.0F;

        goto label07;

     label16:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        if $r12 == null goto label20;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1>;

        $f0 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label17:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        if $r12 == null goto label21;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1>;

        $f1 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label18:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        if $r12 == null goto label22;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2>;

        $f2 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label19:
        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        if $r12 == null goto label23;

        $r12 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2>;

        $f3 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

        goto label07;

     label20:
        $f0 = 0.0F;

        goto label17;

     label21:
        $f1 = 0.0F;

        goto label18;

     label22:
        $f2 = 1.0F;

        goto label19;

     label23:
        $f3 = 0.0F;

        goto label07;

     label24:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke> = 0;

        return;

     label25:
        r4 = newarray (int)[$i0];

        r5 = newarray (float)[$i0];

        i1 = 0;

        $f4 = -1.0F;

        $r14 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: java.util.List children>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label33;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.caverock.androidsvg.SVG$SvgObject) $r16;

        r18 = (com.caverock.androidsvg.SVG$Stop) r17;

        $r19 = r18.<com.caverock.androidsvg.SVG$Stop: java.lang.Float offset>;

        if $r19 == null goto label31;

        $r19 = r18.<com.caverock.androidsvg.SVG$Stop: java.lang.Float offset>;

        $f5 = virtualinvoke $r19.<java.lang.Float: float floatValue()>();

     label27:
        if i1 == 0 goto label28;

        $b2 = $f5 cmpl $f4;

        if $b2 < 0 goto label32;

     label28:
        r5[i1] = $f5;

        $f4 = $f5;

     label29:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r9, r18);

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r20 = $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r21 = $r20.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor>;

        r22 = (com.caverock.androidsvg.SVG$Colour) r21;

        if r22 != null goto label30;

        r22 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

     label30:
        $i3 = r22.<com.caverock.androidsvg.SVG$Colour: int colour>;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r20 = $r9.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r19 = $r20.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity>;

        $f5 = virtualinvoke $r19.<java.lang.Float: float floatValue()>();

        $i3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: int colourWithOpacity(int,float)>($i3, $f5);

        r4[i1] = $i3;

        i1 = i1 + 1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        goto label26;

     label31:
        $f5 = 0.0F;

        goto label27;

     label32:
        r5[i1] = $f4;

        goto label29;

     label33:
        $b2 = $f0 cmpl $f2;

        if $b2 != 0 goto label34;

        $b2 = $f1 cmpl $f3;

        if $b2 == 0 goto label35;

     label34:
        if $i0 != 1 goto label36;

     label35:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        $i0 = $i0 + -1;

        $i0 = r4[$i0];

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i0);

        return;

     label36:
        r23 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r24 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        if $r24 == null goto label37;

        $r24 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        $r25 = <com.caverock.androidsvg.SVG$GradientSpread: com.caverock.androidsvg.SVG$GradientSpread reflect>;

        if $r24 != $r25 goto label38;

        r23 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

     label37:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        r3 = new android.graphics.LinearGradient;

        specialinvoke r3.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, $f3, r4, r5, r23);

        virtualinvoke r3.<android.graphics.LinearGradient: void setLocalMatrix(android.graphics.Matrix)>(r6);

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r3);

        return;

     label38:
        $r24 = $r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        $r25 = <com.caverock.androidsvg.SVG$GradientSpread: com.caverock.androidsvg.SVG$GradientSpread repeat>;

        if $r24 != $r25 goto label37;

        r23 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        goto label37;
    }
    private android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Circle)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Circle $r1;
        android.graphics.Path r2;
        float f0, f1, $f2, $f3, f4, f5, f6, $f7, f8;
        com.caverock.androidsvg.SVG$Length $r3;
        com.caverock.androidsvg.SVG$Box $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Circle;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cx>;

        if $r3 == null goto label4;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cx>;

        $f7 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cy>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cy>;

        f8 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length r>;

        f6 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f5 = $f7 - f6;

        f0 = f8 - f6;

        f1 = $f7 + f6;

        f4 = f8 + f6;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r4 != null goto label3;

        $r4 = new com.caverock.androidsvg.SVG$Box;

        $f2 = 2.0F * f6;

        $f3 = 2.0F * f6;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(f5, f0, $f2, $f3);

        $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Box boundingBox> = $r4;

     label3:
        f6 = f6 * 0.5522848F;

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f7, f0);

        $f2 = $f7 + f6;

        $f3 = f8 - f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f2, f0, f1, $f3, f1, f8);

        $f2 = f8 + f6;

        $f3 = $f7 + f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f1, $f2, $f3, f4, $f7, f4);

        f1 = $f7 - f6;

        $f2 = f8 + f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f1, f4, f5, $f2, f5, f8);

        f4 = f8 - f6;

        f8 = $f7 - f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f5, f4, f8, f0, $f7, f0);

        virtualinvoke r2.<android.graphics.Path: void close()>();

        return r2;

     label4:
        $f7 = 0.0F;

        goto label1;

     label5:
        f8 = 0.0F;

        goto label2;
    }
    private android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Ellipse)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Ellipse $r1;
        android.graphics.Path r2;
        float f0, f1, $f2, $f3, f4, f5, f6, f7, $f8, f9;
        com.caverock.androidsvg.SVG$Length $r3;
        com.caverock.androidsvg.SVG$Box $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Ellipse;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cx>;

        if $r3 == null goto label4;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cx>;

        $f8 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cy>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cy>;

        f9 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length rx>;

        f6 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length ry>;

        f7 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f5 = $f8 - f6;

        f0 = f9 - f7;

        f1 = $f8 + f6;

        f4 = f9 + f7;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r4 != null goto label3;

        $r4 = new com.caverock.androidsvg.SVG$Box;

        $f2 = 2.0F * f6;

        $f3 = 2.0F * f7;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(f5, f0, $f2, $f3);

        $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Box boundingBox> = $r4;

     label3:
        f6 = f6 * 0.5522848F;

        f7 = f7 * 0.5522848F;

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f8, f0);

        $f2 = $f8 + f6;

        $f3 = f9 - f7;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f2, f0, f1, $f3, f1, f9);

        $f2 = f9 + f7;

        $f3 = $f8 + f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f1, $f2, $f3, f4, $f8, f4);

        f1 = $f8 - f6;

        $f2 = f9 + f7;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f1, f4, f5, $f2, f5, f9);

        f4 = f9 - f7;

        f9 = $f8 - f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f5, f4, f9, f0, $f8, f0);

        virtualinvoke r2.<android.graphics.Path: void close()>();

        return r2;

     label4:
        $f8 = 0.0F;

        goto label1;

     label5:
        f9 = 0.0F;

        goto label2;
    }
    private android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Line)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Line $r1;
        android.graphics.Path r2;
        com.caverock.androidsvg.SVG$Length $r3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        com.caverock.androidsvg.SVG$Box $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Line;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x1>;

        if $r3 != null goto label6;

        f0 = 0.0F;

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y1>;

        if $r3 != null goto label7;

        f1 = 0.0F;

     label2:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x2>;

        if $r3 != null goto label8;

        f2 = 0.0F;

     label3:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y2>;

        if $r3 != null goto label9;

        f3 = 0.0F;

     label4:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r4 != null goto label5;

        $r4 = new com.caverock.androidsvg.SVG$Box;

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f2);

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f3);

        $f6 = f2 - f0;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f7 = f3 - f1;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);

        $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Box boundingBox> = $r4;

     label5:
        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f0, f1);

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f2, f3);

        return r2;

     label6:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x1>;

        f0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label1;

     label7:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y1>;

        f1 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label2;

     label8:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x2>;

        f2 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label3;

     label9:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y2>;

        f3 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label4;
    }
    private android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$PolyLine)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$PolyLine $r1;
        android.graphics.Path r2;
        float[] $r3;
        float $f0, $f1;
        int i0, $i1;
        boolean $z0;
        com.caverock.androidsvg.SVG$Box $r4;
        android.graphics.Path$FillType $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$PolyLine;

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $f0 = $r3[0];

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $f1 = $r3[1];

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        i0 = 2;

     label1:
        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label2;

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $f0 = $r3[i0];

        $r3 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $i1 = i0 + 1;

        $f1 = $r3[$i1];

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        i0 = i0 + 2;

        goto label1;

     label2:
        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$Polygon;

        if $z0 == 0 goto label3;

        virtualinvoke r2.<android.graphics.Path: void close()>();

     label3:
        $r4 = $r1.<com.caverock.androidsvg.SVG$PolyLine: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r4 != null goto label4;

        $r4 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box calculatePathBounds(android.graphics.Path)>(r2);

        $r1.<com.caverock.androidsvg.SVG$PolyLine: com.caverock.androidsvg.SVG$Box boundingBox> = $r4;

     label4:
        $r5 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path$FillType getClipRuleFromState()>();

        virtualinvoke r2.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r5);

        return r2;
    }
    private android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Rect)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Rect $r1;
        android.graphics.Path r2;
        float f0, $f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10;
        com.caverock.androidsvg.SVG$Length $r3;
        com.caverock.androidsvg.SVG$Box $r4;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Rect;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx>;

        if $r3 != null goto label07;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry>;

        if $r3 != null goto label07;

        f4 = 0.0F;

        f5 = 0.0F;

     label01:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width>;

        $f6 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $f6 = $f6 / 2.0F;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>(f4, $f6);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height>;

        f4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f4 = f4 / 2.0F;

        f5 = staticinvoke <java.lang.Math: float min(float,float)>(f5, f4);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length x>;

        if $r3 == null goto label10;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length x>;

        f4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label02:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length y>;

        if $r3 == null goto label11;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length y>;

        $f7 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label03:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width>;

        $f1 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height>;

        f0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r4 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r4 != null goto label04;

        $r4 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(f4, $f7, $f1, f0);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Box boundingBox> = $r4;

     label04:
        f3 = f4 + $f1;

        f0 = $f7 + f0;

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $b0 = $f6 cmpl 0.0F;

        if $b0 == 0 goto label05;

        $b0 = f5 cmpl 0.0F;

        if $b0 != 0 goto label12;

     label05:
        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f4, $f7);

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f3, $f7);

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f3, f0);

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f4, f0);

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f4, $f7);

     label06:
        virtualinvoke r2.<android.graphics.Path: void close()>();

        return r2;

     label07:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx>;

        if $r3 != null goto label08;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry>;

        f4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f5 = f4;

        goto label01;

     label08:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry>;

        if $r3 != null goto label09;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx>;

        f4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f5 = f4;

        goto label01;

     label09:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx>;

        f4 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry>;

        f5 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label01;

     label10:
        f4 = 0.0F;

        goto label02;

     label11:
        $f7 = 0.0F;

        goto label03;

     label12:
        f2 = $f6 * 0.5522848F;

        $f1 = f5 * 0.5522848F;

        $f8 = $f7 + f5;

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f4, $f8);

        $f8 = $f7 + f5;

        $f8 = $f8 - $f1;

        $f9 = f4 + $f6;

        $f9 = $f9 - f2;

        $f10 = f4 + $f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f4, $f8, $f9, $f7, $f10, $f7);

        $f8 = f3 - $f6;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f8, $f7);

        $f8 = f3 - $f6;

        $f8 = $f8 + f2;

        $f9 = $f7 + f5;

        $f9 = $f9 - $f1;

        $f10 = $f7 + f5;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f8, $f7, f3, $f9, f3, $f10);

        $f8 = f0 - f5;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f3, $f8);

        $f8 = f0 - f5;

        $f8 = $f8 + $f1;

        $f9 = f3 - $f6;

        $f9 = $f9 + f2;

        $f10 = f3 - $f6;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f3, $f8, $f9, f0, $f10, f0);

        f3 = f4 + $f6;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f3, f0);

        $f6 = f4 + $f6;

        $f6 = $f6 - f2;

        f2 = f0 - f5;

        f2 = f2 + $f1;

        $f1 = f0 - f5;

        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f6, f0, f4, f2, f4, $f1);

        f5 = $f7 + f5;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f4, f5);

        goto label06;
    }
    private void makeRadialGradient(boolean, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$SvgRadialGradient)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$Box $r1;
        com.caverock.androidsvg.SVG$SvgRadialGradient $r2;
        android.graphics.RadialGradient r3;
        int[] r4;
        float[] r5;
        com.caverock.androidsvg.SVG$Length r6, $r13;
        android.graphics.Matrix r7, $r14;
        java.lang.String $r8;
        java.lang.Boolean $r9;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r10;
        android.graphics.Paint $r11;
        com.caverock.androidsvg.SVG$Unit $r12;
        float $f0, $f1, $f2, $f3, $f4;
        java.util.List $r15;
        int $i0, i1, $i3;
        java.util.Iterator $r16;
        java.lang.Object $r17;
        com.caverock.androidsvg.SVG$SvgObject r18;
        com.caverock.androidsvg.SVG$Stop r19;
        java.lang.Float $r20;
        byte $b2;
        com.caverock.androidsvg.SVG$Style $r21;
        com.caverock.androidsvg.SVG$SvgPaint r22;
        com.caverock.androidsvg.SVG$Colour r23;
        android.graphics.Shader$TileMode r24;
        com.caverock.androidsvg.SVG$GradientSpread $r25, $r26;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r2 := @parameter2: com.caverock.androidsvg.SVG$SvgRadialGradient;

        $r8 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.lang.String href>;

        if $r8 == null goto label01;

        $r8 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.lang.String href>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void fillInChainedGradientFields(com.caverock.androidsvg.SVG$GradientElement,java.lang.String)>($r2, $r8);

     label01:
        $r9 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.lang.Boolean gradientUnitsAreUser>;

        if $r9 == null goto label09;

        $r9 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.lang.Boolean gradientUnitsAreUser>;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label09;

        $z1 = 1;

     label02:
        if $z0 == 0 goto label10;

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r11 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

     label03:
        if $z1 == 0 goto label14;

        r6 = new com.caverock.androidsvg.SVG$Length;

        $r12 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        specialinvoke r6.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>(50.0F, $r12);

        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        if $r13 == null goto label11;

        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        $f0 = virtualinvoke $r13.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label04:
        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        if $r13 == null goto label12;

        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        $f1 = virtualinvoke $r13.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label05:
        $r13 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        if $r13 == null goto label13;

        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        $f2 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label06:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)>($r2);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r10;

        r7 = new android.graphics.Matrix;

        specialinvoke r7.<android.graphics.Matrix: void <init>()>();

        if $z1 != 0 goto label07;

        $f3 = $r1.<com.caverock.androidsvg.SVG$Box: float minX>;

        $f4 = $r1.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke r7.<android.graphics.Matrix: boolean preTranslate(float,float)>($f3, $f4);

        $f3 = $r1.<com.caverock.androidsvg.SVG$Box: float width>;

        $f4 = $r1.<com.caverock.androidsvg.SVG$Box: float height>;

        virtualinvoke r7.<android.graphics.Matrix: boolean preScale(float,float)>($f3, $f4);

     label07:
        $r14 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: android.graphics.Matrix gradientTransform>;

        if $r14 == null goto label08;

        $r14 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: android.graphics.Matrix gradientTransform>;

        virtualinvoke r7.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r14);

     label08:
        $r15 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.util.List children>;

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i0 != 0 goto label21;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        if $z0 == 0 goto label20;

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill> = 0;

        return;

     label09:
        $z1 = 0;

        goto label02;

     label10:
        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r11 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        goto label03;

     label11:
        $f0 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label04;

     label12:
        $f1 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label05;

     label13:
        $f2 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label06;

     label14:
        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        if r6 == null goto label17;

        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx>;

        $f0 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label15:
        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        if r6 == null goto label18;

        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy>;

        $f1 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label16:
        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        if r6 == null goto label19;

        r6 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        $f2 = virtualinvoke r6.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

        goto label06;

     label17:
        $f0 = 0.5F;

        goto label15;

     label18:
        $f1 = 0.5F;

        goto label16;

     label19:
        $f2 = 0.5F;

        goto label06;

     label20:
        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke> = 0;

        return;

     label21:
        r4 = newarray (int)[$i0];

        r5 = newarray (float)[$i0];

        i1 = 0;

        $f3 = -1.0F;

        $r15 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: java.util.List children>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label29;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.caverock.androidsvg.SVG$SvgObject) $r17;

        r19 = (com.caverock.androidsvg.SVG$Stop) r18;

        $r20 = r19.<com.caverock.androidsvg.SVG$Stop: java.lang.Float offset>;

        if $r20 == null goto label27;

        $r20 = r19.<com.caverock.androidsvg.SVG$Stop: java.lang.Float offset>;

        $f4 = virtualinvoke $r20.<java.lang.Float: float floatValue()>();

     label23:
        if i1 == 0 goto label24;

        $b2 = $f4 cmpl $f3;

        if $b2 < 0 goto label28;

     label24:
        r5[i1] = $f4;

        $f3 = $f4;

     label25:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r10, r19);

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r21 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r22 = $r21.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor>;

        r23 = (com.caverock.androidsvg.SVG$Colour) r22;

        if r23 != null goto label26;

        r23 = <com.caverock.androidsvg.SVG$Colour: com.caverock.androidsvg.SVG$Colour BLACK>;

     label26:
        $i3 = r23.<com.caverock.androidsvg.SVG$Colour: int colour>;

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r21 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r20 = $r21.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity>;

        $f4 = virtualinvoke $r20.<java.lang.Float: float floatValue()>();

        $i3 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: int colourWithOpacity(int,float)>($i3, $f4);

        r4[i1] = $i3;

        i1 = i1 + 1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        goto label22;

     label27:
        $f4 = 0.0F;

        goto label23;

     label28:
        r5[i1] = $f3;

        goto label25;

     label29:
        $b2 = $f2 cmpl 0.0F;

        if $b2 == 0 goto label30;

        if $i0 != 1 goto label31;

     label30:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        $i0 = $i0 + -1;

        $i0 = r4[$i0];

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i0);

        return;

     label31:
        r24 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r25 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        if $r25 == null goto label32;

        $r25 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        $r26 = <com.caverock.androidsvg.SVG$GradientSpread: com.caverock.androidsvg.SVG$GradientSpread reflect>;

        if $r25 != $r26 goto label33;

        r24 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

     label32:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        r3 = new android.graphics.RadialGradient;

        specialinvoke r3.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, r4, r5, r24);

        virtualinvoke r3.<android.graphics.RadialGradient: void setLocalMatrix(android.graphics.Matrix)>(r7);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r3);

        return;

     label33:
        $r25 = $r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$GradientSpread spreadMethod>;

        $r26 = <com.caverock.androidsvg.SVG$GradientSpread: com.caverock.androidsvg.SVG$GradientSpread repeat>;

        if $r25 != $r26 goto label32;

        r24 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        goto label32;
    }
    private com.caverock.androidsvg.SVG$Box makeViewPort(com.caverock.androidsvg.SVG$Length, com.caverock.androidsvg.SVG$Length, com.caverock.androidsvg.SVG$Length, com.caverock.androidsvg.SVG$Length)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Length $r1, $r2, $r3, $r4;
        com.caverock.androidsvg.SVG$Box $r5;
        float f0, $f1, $f2, $f3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Length;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Length;

        $r3 := @parameter2: com.caverock.androidsvg.SVG$Length;

        $r4 := @parameter3: com.caverock.androidsvg.SVG$Length;

        f0 = 0.0F;

        if $r1 == null goto label5;

        $f1 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label1:
        if $r2 == null goto label2;

        f0 = virtualinvoke $r2.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label2:
        $r5 = virtualinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box getCurrentViewPortInUserUnits()>();

        if $r3 == null goto label6;

        $f2 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label3:
        if $r4 == null goto label7;

        $f3 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label4:
        $r5 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r5.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f1, f0, $f2, $f3);

        return $r5;

     label5:
        $f1 = 0.0F;

        goto label1;

     label6:
        $f2 = $r5.<com.caverock.androidsvg.SVG$Box: float width>;

        goto label3;

     label7:
        $f3 = $r5.<com.caverock.androidsvg.SVG$Box: float height>;

        goto label4;
    }
    private void parentPop()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.util.Stack $r1;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack parentStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack matrixStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }
    private void parentPush(com.caverock.androidsvg.SVG$SvgContainer)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgContainer $r1;
        android.graphics.Matrix $r2;
        java.util.Stack $r3;
        android.graphics.Canvas $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgContainer;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack parentStack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack matrixStack>;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r2 = virtualinvoke $r4.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;
    }
    private void popLayer(com.caverock.androidsvg.SVG$SvgElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r2;
        com.caverock.androidsvg.SVG$Style $r3;
        java.lang.String $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG $r5;
        com.caverock.androidsvg.SVG$SvgObject $r6;
        com.caverock.androidsvg.SVG$Mask r7;
        android.graphics.Bitmap $r8;
        java.util.Stack $r9;
        java.lang.Object $r10;
        android.graphics.Canvas $r11;
        android.graphics.Matrix $r12;
        android.graphics.Paint $r13;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        if $r4 == null goto label1;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        $r6 = virtualinvoke $r5.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void duplicateCanvas()>();

        r7 = (com.caverock.androidsvg.SVG$Mask) $r6;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMask(com.caverock.androidsvg.SVG$Mask,com.caverock.androidsvg.SVG$SvgElement)>(r7, $r1);

        $r8 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Bitmap processMaskBitmaps()>();

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack canvasStack>;

        $r10 = virtualinvoke $r9.<java.util.Stack: java.lang.Object pop()>();

        $r11 = (android.graphics.Canvas) $r10;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas> = $r11;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r11.<android.graphics.Canvas: int save()>();

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r12 = new android.graphics.Matrix;

        specialinvoke $r12.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r11.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>($r12);

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r13 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        virtualinvoke $r11.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r8, 0.0F, 0.0F, $r13);

        virtualinvoke $r8.<android.graphics.Bitmap: void recycle()>();

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r11.<android.graphics.Canvas: void restore()>();

     label1:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;
    }
    private android.graphics.Bitmap processMaskBitmaps()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        int[] r1, $r6;
        int i0, i1, $i2, $i3, i4, i5, $i6, $i7;
        java.util.Stack $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap r4, r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack bitmapStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r4 = (android.graphics.Bitmap) $r3;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack bitmapStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r5 = (android.graphics.Bitmap) $r3;

        $i2 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        r1 = newarray (int)[$i2];

        $r6 = newarray (int)[$i2];

        i4 = 0;

     label1:
        if i4 >= $i3 goto label6;

        virtualinvoke r4.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r1, 0, $i2, 0, i4, $i2, 1);

        virtualinvoke r5.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r6, 0, $i2, 0, i4, $i2, 1);

        i5 = 0;

     label2:
        if i5 >= $i2 goto label5;

        i0 = r1[i5];

        i1 = i0 & 255;

        $i6 = i0 >> 8;

        $i6 = $i6 & 255;

        $i7 = i0 >> 16;

        $i7 = $i7 & 255;

        i0 = i0 >> 24;

        i0 = i0 & 255;

        if i0 != 0 goto label4;

        $r6[i5] = 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $i7 = $i7 * 6963;

        $i6 = $i6 * 23442;

        $i6 = $i7 + $i6;

        i1 = i1 * 2362;

        i1 = $i6 + i1;

        i1 = i1 * i0;

        i0 = i1 / 8355840;

        i1 = $r6[i5];

        $i6 = i1 >> 24;

        $i6 = $i6 & 255;

        i0 = $i6 * i0;

        i0 = i0 / 255;

        i1 = 16777215 & i1;

        i0 = i0 << 24;

        i1 = i1 | i0;

        $r6[i5] = i1;

        goto label3;

     label5:
        virtualinvoke r5.<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>($r6, 0, $i2, 0, i4, $i2, 1);

        i4 = i4 + 1;

        goto label1;

     label6:
        virtualinvoke r4.<android.graphics.Bitmap: void recycle()>();

        return r5;
    }
    private void processTextChild(com.caverock.androidsvg.SVG$SvgObject, com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor $r1;
        java.lang.StringBuilder r2;
        com.caverock.androidsvg.SVG$SvgObject r3;
        com.caverock.androidsvg.SVG$TextContainer $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG$TextPath r5;
        java.lang.Object[] $r6;
        com.caverock.androidsvg.SVG$TSpan r7;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r8;
        float f0, f1, f2, f3;
        java.util.List $r9;
        int $i0;
        com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer $r10;
        com.caverock.androidsvg.SVG$TextRoot $r11;
        com.caverock.androidsvg.SVG$SvgElement $r12;
        java.lang.Object $r13;
        com.caverock.androidsvg.SVG$Length $r14;
        com.caverock.androidsvg.SVG$TRef r15;
        com.caverock.androidsvg.SVG $r16;
        java.lang.String $r17;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r3 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $r1 := @parameter1: com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor;

        $r4 = (com.caverock.androidsvg.SVG$TextContainer) r3;

        $z0 = virtualinvoke $r1.<com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor: boolean doTextContainer(com.caverock.androidsvg.SVG$TextContainer)>($r4);

        if $z0 != 0 goto label01;

        return;

     label01:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$TextPath;

        if $z0 == 0 goto label02;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        r5 = (com.caverock.androidsvg.SVG$TextPath) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderTextPath(com.caverock.androidsvg.SVG$TextPath)>(r5);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label02:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$TSpan;

        if $z0 == 0 goto label17;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("TSpan render", $r6);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        r7 = (com.caverock.androidsvg.SVG$TSpan) r3;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r8, r7);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label12;

        f0 = 0.0F;

        f1 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        $z0 = $r1 instanceof com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer;

        if $z0 == 0 goto label10;

        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List x>;

        if $r9 == null goto label03;

        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List x>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 != 0 goto label13;

     label03:
        $r10 = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) $r1;

        f0 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: float x>;

     label04:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List y>;

        if $r9 == null goto label05;

        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List y>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 != 0 goto label14;

     label05:
        $r10 = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) $r1;

        f1 = $r10.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: float y>;

     label06:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dx>;

        if $r9 == null goto label07;

        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dx>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 != 0 goto label15;

     label07:
        f2 = 0.0F;

     label08:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dy>;

        if $r9 == null goto label09;

        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dy>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 != 0 goto label16;

     label09:
        f3 = 0.0F;

     label10:
        $r11 = virtualinvoke r7.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        $r12 = (com.caverock.androidsvg.SVG$SvgElement) $r11;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r12);

        $z0 = $r1 instanceof com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer;

        if $z0 == 0 goto label11;

        $r10 = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) $r1;

        f0 = f0 + f2;

        $r10.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: float x> = f0;

        $r10 = (com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer) $r1;

        f0 = f1 + f3;

        $r10.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: float y> = f0;

     label11:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>(r7, $r1);

        if $z0 == 0 goto label12;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>(r7);

     label12:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label13:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List x>;

        $r13 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f0 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label04;

     label14:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List y>;

        $r13 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f1 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label06;

     label15:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dx>;

        $r13 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f2 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label08;

     label16:
        $r9 = r7.<com.caverock.androidsvg.SVG$TSpan: java.util.List dy>;

        $r13 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f3 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label10;

     label17:
        $z0 = r3 instanceof com.caverock.androidsvg.SVG$TRef;

        if $z0 == 0 goto label20;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        r15 = (com.caverock.androidsvg.SVG$TRef) r3;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r8, r15);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label18;

        $r11 = virtualinvoke r15.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        $r12 = (com.caverock.androidsvg.SVG$SvgElement) $r11;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r12);

        $r16 = r3.<com.caverock.androidsvg.SVG$SvgObject: com.caverock.androidsvg.SVG document>;

        $r17 = r15.<com.caverock.androidsvg.SVG$TRef: java.lang.String href>;

        r3 = virtualinvoke $r16.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r17);

        if r3 == null goto label19;

        $z0 = r3 instanceof com.caverock.androidsvg.SVG$TextContainer;

        if $z0 == 0 goto label19;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = (com.caverock.androidsvg.SVG$TextContainer) r3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void extractRawText(com.caverock.androidsvg.SVG$TextContainer,java.lang.StringBuilder)>($r4, r2);

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label18;

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor: void processText(java.lang.String)>($r17);

     label18:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label19:
        $r6 = newarray (java.lang.Object)[1];

        $r17 = r15.<com.caverock.androidsvg.SVG$TRef: java.lang.String href>;

        $r6[0] = $r17;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Tref reference \'%s\' not found", $r6);

        goto label18;

     label20:
        return;
    }
    private boolean pushLayer()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0;
        android.graphics.Canvas $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r2, $r6;
        com.caverock.androidsvg.SVG$Style $r3;
        java.lang.Float $r4;
        float $f0;
        int $i0;
        java.util.Stack $r5;
        java.lang.String $r7;
        com.caverock.androidsvg.SVG $r8;
        com.caverock.androidsvg.SVG$SvgObject $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean requiresCompositing()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity>;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $i0 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: int clamp255(float)>($f0);

        virtualinvoke $r1.<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>(null, $i0, 4);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $r2 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>(r0, $r6);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r2;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        if $r7 == null goto label4;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering>;

        if $z0 == 0 goto label4;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        $r9 = virtualinvoke $r8.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r7);

        if $r9 == null goto label2;

        $z0 = $r9 instanceof com.caverock.androidsvg.SVG$Mask;

        if $z0 != 0 goto label3;

     label2:
        $r10 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        $r10[0] = $r7;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Mask reference \'%s\' not found", $r10);

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String mask> = null;

        return 1;

     label3:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack canvasStack>;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void duplicateCanvas()>();

     label4:
        return 1;
    }
    private void render(com.caverock.androidsvg.SVG$Circle)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Circle $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$Length $r3;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        android.graphics.Matrix $r5;
        android.graphics.Canvas $r6;
        android.graphics.Path $r7;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Circle;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Circle render", $r2);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length r>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length r>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label5;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label5;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Circle: android.graphics.Matrix transform>;

        if $r5 == null goto label2;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Circle: android.graphics.Matrix transform>;

        virtualinvoke $r6.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r5);

     label2:
        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Circle)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r7);

     label3:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r7);

     label4:
        if $z0 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label5:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Ellipse)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Ellipse $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$Length $r3;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        android.graphics.Matrix $r5;
        android.graphics.Canvas $r6;
        android.graphics.Path $r7;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Ellipse;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Ellipse render", $r2);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length rx>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length ry>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length rx>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length ry>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label5;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label5;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Ellipse: android.graphics.Matrix transform>;

        if $r5 == null goto label2;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Ellipse: android.graphics.Matrix transform>;

        virtualinvoke $r6.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r5);

     label2:
        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Ellipse)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r7);

     label3:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r7);

     label4:
        if $z0 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label5:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Group)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Group $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        boolean $z0;
        android.graphics.Matrix $r4;
        android.graphics.Canvas $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Group;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Group render", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r3, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Group: android.graphics.Matrix transform>;

        if $r4 == null goto label2;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Group: android.graphics.Matrix transform>;

        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r4);

     label2:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderChildren(com.caverock.androidsvg.SVG$SvgContainer,boolean)>($r1, 1);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;
    }
    private void render(com.caverock.androidsvg.SVG$Image)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Image $r1;
        android.graphics.Paint r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$Length $r4;
        boolean $z0;
        java.lang.String $r5;
        com.caverock.androidsvg.PreserveAspectRatio $r6;
        android.graphics.Bitmap $r7, r8;
        com.caverock.androidsvg.SVG $r9;
        com.caverock.androidsvg.SVGExternalFileResolver $r10;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r11;
        android.graphics.Matrix $r12;
        android.graphics.Canvas $r13;
        float $f0, $f1, $f2, $f3;
        com.caverock.androidsvg.SVG$Box $r14, $r17;
        com.caverock.androidsvg.SVG$Style $r15;
        java.lang.Boolean $r16;
        int $i0;
        com.caverock.androidsvg.SVG$Style$RenderQuality $r18, $r19;
        byte $b1;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Image;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Image render", $r3);

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length width>;

        if $r4 == null goto label14;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label14;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length height>;

        if $r4 == null goto label14;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Image: java.lang.String href>;

        if $r5 == null goto label14;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r6 == null goto label04;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

     label02:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Image: java.lang.String href>;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Bitmap checkForImageDataURL(java.lang.String)>($r5);

        r8 = $r7;

        if $r7 != null goto label03;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r10 = virtualinvoke $r9.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver getFileResolver()>();

        if $r10 == null goto label14;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Image: java.lang.String href>;

        r8 = virtualinvoke $r10.<com.caverock.androidsvg.SVGExternalFileResolver: android.graphics.Bitmap resolveImage(java.lang.String)>($r5);

     label03:
        if r8 != null goto label05;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = $r1.<com.caverock.androidsvg.SVG$Image: java.lang.String href>;

        $r3[0] = $r5;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Could not locate image \'%s\'", $r3);

        return;

     label04:
        $r6 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio LETTERBOX>;

        goto label02;

     label05:
        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r11, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label14;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label14;

        $r12 = $r1.<com.caverock.androidsvg.SVG$Image: android.graphics.Matrix transform>;

        if $r12 == null goto label06;

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r12 = $r1.<com.caverock.androidsvg.SVG$Image: android.graphics.Matrix transform>;

        virtualinvoke $r13.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r12);

     label06:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length x>;

        if $r4 == null goto label11;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length x>;

        $f0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label07:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length y>;

        if $r4 == null goto label12;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length y>;

        $f1 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label08:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length width>;

        $f2 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r4 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length height>;

        $f3 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r14.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort> = $r14;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r15.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label09;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f0 = $r14.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f1 = $r14.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f2 = $r14.<com.caverock.androidsvg.SVG$Box: float width>;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f3 = $r14.<com.caverock.androidsvg.SVG$Box: float height>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>($f0, $f1, $f2, $f3);

     label09:
        $r14 = new com.caverock.androidsvg.SVG$Box;

        $i0 = virtualinvoke r8.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke r8.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i0;

        specialinvoke $r14.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Box boundingBox> = $r14;

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $r17 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Box boundingBox>;

        $r12 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Matrix calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r14, $r17, $r6);

        virtualinvoke $r13.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r12);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void viewportFill()>();

        r2 = new android.graphics.Paint;

        $r11 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r11.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r15.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$RenderQuality imageRendering>;

        $r19 = <com.caverock.androidsvg.SVG$Style$RenderQuality: com.caverock.androidsvg.SVG$Style$RenderQuality optimizeSpeed>;

        if $r18 != $r19 goto label13;

        $b1 = 0;

     label10:
        specialinvoke r2.<android.graphics.Paint: void <init>(int)>($b1);

        $r13 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r13.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r8, 0.0F, 0.0F, r2);

        if $z0 == 0 goto label14;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label11:
        $f0 = 0.0F;

        goto label07;

     label12:
        $f1 = 0.0F;

        goto label08;

     label13:
        $b1 = 2;

        goto label10;

     label14:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Line)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Line $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        boolean $z0;
        android.graphics.Matrix $r4;
        android.graphics.Canvas $r5;
        android.graphics.Path $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Line;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Line render", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r3, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z0 == 0 goto label3;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Line: android.graphics.Matrix transform>;

        if $r4 == null goto label2;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Line: android.graphics.Matrix transform>;

        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r4);

     label2:
        $r6 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Line)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r6);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement)>($r1);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label3:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Path)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Path $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$PathDefinition $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        boolean $z0, $z1;
        android.graphics.Matrix $r5;
        android.graphics.Canvas $r6;
        com.caverock.androidsvg.SVGAndroidRenderer$PathConverter $r7;
        android.graphics.Path $r8;
        com.caverock.androidsvg.SVG$Box $r9;
        android.graphics.Path$FillType $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Path;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Path render", $r2);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label7;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label7;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z0 != 0 goto label2;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z0 == 0 goto label7;

     label2:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        if $r5 == null goto label3;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        virtualinvoke $r6.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r5);

     label3:
        $r7 = new com.caverock.androidsvg.SVGAndroidRenderer$PathConverter;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d>;

        specialinvoke $r7.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVG$PathDefinition)>(r0, $r3);

        $r8 = virtualinvoke $r7.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: android.graphics.Path getPath()>();

        $r9 = $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r9 != null goto label4;

        $r9 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box calculatePathBounds(android.graphics.Path)>($r8);

        $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$Box boundingBox> = $r9;

     label4:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label5;

        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path$FillType getFillTypeFromState()>();

        virtualinvoke $r8.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r10);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r8);

     label5:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r8);

     label6:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement)>($r1);

        if $z0 == 0 goto label7;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label7:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$PolyLine)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$PolyLine $r1;
        int i0;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        boolean $z0, $z1;
        android.graphics.Matrix $r4;
        android.graphics.Canvas $r5;
        float[] $r6;
        android.graphics.Path $r7;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$PolyLine;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("PolyLine render", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r3, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z0 == 0 goto label6;

     label2:
        $r4 = $r1.<com.caverock.androidsvg.SVG$PolyLine: android.graphics.Matrix transform>;

        if $r4 == null goto label3;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$PolyLine: android.graphics.Matrix transform>;

        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r4);

     label3:
        $r6 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        i0 = lengthof $r6;

        if i0 < 2 goto label6;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$PolyLine)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r7);

     label4:
        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r7);

     label5:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement)>($r1);

        if $z0 == 0 goto label6;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label6:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Polygon)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Polygon $r1;
        int i0;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        boolean $z0, $z1;
        android.graphics.Matrix $r4;
        android.graphics.Canvas $r5;
        float[] $r6;
        android.graphics.Path $r7;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Polygon;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Polygon render", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r3, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z0 == 0 goto label6;

     label2:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Polygon: android.graphics.Matrix transform>;

        if $r4 == null goto label3;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Polygon: android.graphics.Matrix transform>;

        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r4);

     label3:
        $r6 = $r1.<com.caverock.androidsvg.SVG$Polygon: float[] points>;

        i0 = lengthof $r6;

        if i0 < 2 goto label6;

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$PolyLine)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r7);

     label4:
        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r7);

     label5:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement)>($r1);

        if $z0 == 0 goto label6;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label6:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Rect)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Rect $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$Length $r3;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        android.graphics.Matrix $r5;
        android.graphics.Canvas $r6;
        android.graphics.Path $r7;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Rect;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Rect render", $r2);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height>;

        if $r3 == null goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label5;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label5;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label5;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Rect: android.graphics.Matrix transform>;

        if $r5 == null goto label2;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Rect: android.graphics.Matrix transform>;

        virtualinvoke $r6.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r5);

     label2:
        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Path makePathAndBoundingBox(com.caverock.androidsvg.SVG$Rect)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doFilledPath(com.caverock.androidsvg.SVG$SvgElement,android.graphics.Path)>($r1, $r7);

     label3:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z1 = $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke>;

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void doStroke(android.graphics.Path)>($r7);

     label4:
        if $z0 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label5:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Svg)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        com.caverock.androidsvg.SVG$Length $r2, $r3, $r5, $r6;
        com.caverock.androidsvg.SVG$Box $r4, $r7;
        com.caverock.androidsvg.PreserveAspectRatio $r8;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Svg;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length x>;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length y>;

        $r2 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width>;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height>;

        $r4 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box makeViewPort(com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length)>($r5, $r6, $r2, $r3);

        $r7 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Svg,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r1, $r4, $r7, $r8);

        return;
    }
    private void render(com.caverock.androidsvg.SVG$Svg, com.caverock.androidsvg.SVG$Box)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        com.caverock.androidsvg.SVG$Box $r2, $r3;
        com.caverock.androidsvg.PreserveAspectRatio $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Svg;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Svg,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r1, $r2, $r3, $r4);

        return;
    }
    private void render(com.caverock.androidsvg.SVG$Svg, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.PreserveAspectRatio)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        com.caverock.androidsvg.SVG$Box $r2, $r3;
        com.caverock.androidsvg.PreserveAspectRatio $r4;
        java.lang.Object[] $r5;
        float $f0, $f1, $f2, $f3;
        byte $b0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r6;
        boolean $z0;
        com.caverock.androidsvg.SVG$Style $r7;
        java.lang.Boolean $r8;
        android.graphics.Canvas $r9;
        android.graphics.Matrix $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Svg;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r3 := @parameter2: com.caverock.androidsvg.SVG$Box;

        $r4 := @parameter3: com.caverock.androidsvg.PreserveAspectRatio;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Svg render", $r5);

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label8;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        return;

     label1:
        if $r4 != null goto label2;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r4 == null goto label6;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

     label2:
        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r6, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label8;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort> = $r2;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r7 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r8 = $r7.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f2 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f3 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>($f0, $f1, $f2, $f3);

     label3:
        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement,com.caverock.androidsvg.SVG$Box)>($r1, $r2);

        if $r3 == null goto label7;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Matrix calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r2, $r3, $r4);

        virtualinvoke $r9.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r10);

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox> = $r2;

     label4:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void viewportFill()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderChildren(com.caverock.androidsvg.SVG$SvgContainer,boolean)>($r1, 1);

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label5:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label6:
        $r4 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio LETTERBOX>;

        goto label2;

     label7:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r6.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke $r9.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label4;

     label8:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$SvgObject)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgObject r1;
        boolean $z0;
        com.caverock.androidsvg.SVG$Svg r2;
        com.caverock.androidsvg.SVG$Use r3;
        com.caverock.androidsvg.SVG$Switch r4;
        com.caverock.androidsvg.SVG$Group r5;
        com.caverock.androidsvg.SVG$Image r6;
        com.caverock.androidsvg.SVG$Path r7;
        com.caverock.androidsvg.SVG$Rect r8;
        com.caverock.androidsvg.SVG$Circle r9;
        com.caverock.androidsvg.SVG$Ellipse r10;
        com.caverock.androidsvg.SVG$Line r11;
        com.caverock.androidsvg.SVG$Polygon r12;
        com.caverock.androidsvg.SVG$PolyLine r13;
        com.caverock.androidsvg.SVG$Text r14;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r1 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $z0 = r1 instanceof com.caverock.androidsvg.SVG$NotDirectlyRendered;

        if $z0 == 0 goto label01;

        return;

     label01:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkXMLSpaceAttribute(com.caverock.androidsvg.SVG$SvgObject)>(r1);

        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Svg;

        if $z0 == 0 goto label03;

        r2 = (com.caverock.androidsvg.SVG$Svg) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Svg)>(r2);

     label02:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label03:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Use;

        if $z0 == 0 goto label04;

        r3 = (com.caverock.androidsvg.SVG$Use) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Use)>(r3);

        goto label02;

     label04:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Switch;

        if $z0 == 0 goto label05;

        r4 = (com.caverock.androidsvg.SVG$Switch) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Switch)>(r4);

        goto label02;

     label05:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Group;

        if $z0 == 0 goto label06;

        r5 = (com.caverock.androidsvg.SVG$Group) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Group)>(r5);

        goto label02;

     label06:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Image;

        if $z0 == 0 goto label07;

        r6 = (com.caverock.androidsvg.SVG$Image) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Image)>(r6);

        goto label02;

     label07:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Path;

        if $z0 == 0 goto label08;

        r7 = (com.caverock.androidsvg.SVG$Path) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Path)>(r7);

        goto label02;

     label08:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Rect;

        if $z0 == 0 goto label09;

        r8 = (com.caverock.androidsvg.SVG$Rect) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Rect)>(r8);

        goto label02;

     label09:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Circle;

        if $z0 == 0 goto label10;

        r9 = (com.caverock.androidsvg.SVG$Circle) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Circle)>(r9);

        goto label02;

     label10:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Ellipse;

        if $z0 == 0 goto label11;

        r10 = (com.caverock.androidsvg.SVG$Ellipse) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Ellipse)>(r10);

        goto label02;

     label11:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Line;

        if $z0 == 0 goto label12;

        r11 = (com.caverock.androidsvg.SVG$Line) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Line)>(r11);

        goto label02;

     label12:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Polygon;

        if $z0 == 0 goto label13;

        r12 = (com.caverock.androidsvg.SVG$Polygon) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Polygon)>(r12);

        goto label02;

     label13:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$PolyLine;

        if $z0 == 0 goto label14;

        r13 = (com.caverock.androidsvg.SVG$PolyLine) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$PolyLine)>(r13);

        goto label02;

     label14:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Text;

        if $z0 == 0 goto label02;

        r14 = (com.caverock.androidsvg.SVG$Text) r1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Text)>(r14);

        goto label02;
    }
    private void render(com.caverock.androidsvg.SVG$Switch)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Switch $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3;
        boolean $z0;
        android.graphics.Matrix $r4;
        android.graphics.Canvas $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Switch;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Switch render", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r3, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Switch: android.graphics.Matrix transform>;

        if $r4 == null goto label2;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Switch: android.graphics.Matrix transform>;

        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r4);

     label2:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderSwitchChild(com.caverock.androidsvg.SVG$Switch)>($r1);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;
    }
    private void render(com.caverock.androidsvg.SVG$Symbol, com.caverock.androidsvg.SVG$Box)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Symbol $r1;
        com.caverock.androidsvg.SVG$Box $r2, $r9;
        java.lang.Object[] $r3;
        float $f0, $f1, $f2, $f3;
        byte $b0;
        com.caverock.androidsvg.PreserveAspectRatio $r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        com.caverock.androidsvg.SVG$Style $r6;
        java.lang.Boolean $r7;
        boolean $z0;
        android.graphics.Canvas $r8;
        android.graphics.Matrix $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Symbol;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Symbol render", $r3);

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label8;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r4 == null goto label6;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

     label2:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r5, $r1);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort> = $r2;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r6 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r6.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label3;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f2 = $r2.<com.caverock.androidsvg.SVG$Box: float width>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f3 = $r2.<com.caverock.androidsvg.SVG$Box: float height>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>($f0, $f1, $f2, $f3);

     label3:
        $r2 = $r1.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r2 == null goto label7;

        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $r9 = $r1.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.SVG$Box viewBox>;

        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Matrix calculateViewBoxTransform(com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r2, $r9, $r4);

        virtualinvoke $r8.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r10);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.SVG$Box viewBox>;

        $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox> = $r2;

     label4:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderChildren(com.caverock.androidsvg.SVG$SvgContainer,boolean)>($r1, 1);

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label5:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label6:
        $r4 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio LETTERBOX>;

        goto label2;

     label7:
        $r8 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f0 = $r2.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        $f1 = $r2.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke $r8.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label4;

     label8:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Text)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Text $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        boolean $z0;
        android.graphics.Matrix $r5;
        android.graphics.Canvas $r6;
        java.util.List $r7;
        int $i0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r8, $r9;
        com.caverock.androidsvg.SVG$Box $r10;
        android.graphics.RectF $r11;
        com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer $r12;
        java.lang.Object $r13;
        com.caverock.androidsvg.SVG$Length $r14;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Text;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Text render", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Text: android.graphics.Matrix transform>;

        if $r5 == null goto label02;

        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Text: android.graphics.Matrix transform>;

        virtualinvoke $r6.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r5);

     label02:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        if $r7 == null goto label03;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label13;

     label03:
        f0 = 0.0F;

     label04:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        if $r7 == null goto label05;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label14;

     label05:
        f1 = 0.0F;

     label06:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        if $r7 == null goto label07;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label15;

     label07:
        f2 = 0.0F;

     label08:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        if $r7 == null goto label09;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 != 0 goto label16;

     label09:
        f3 = 0.0F;

     label10:
        $r8 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Style$TextAnchor getAnchorPosition()>();

        $r9 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        if $r8 == $r9 goto label11;

        $f4 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: float calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer)>($r1);

        $r9 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Middle>;

        if $r8 != $r9 goto label17;

        $f4 = $f4 / 2.0F;

        f0 = f0 - $f4;

     label11:
        $r10 = $r1.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r10 != null goto label12;

        r2 = new com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator;

        specialinvoke r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float)>(r0, f0, f1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, r2);

        $r10 = new com.caverock.androidsvg.SVG$Box;

        $r11 = r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f4 = $r11.<android.graphics.RectF: float left>;

        $r11 = r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f5 = $r11.<android.graphics.RectF: float top>;

        $r11 = r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f6 = virtualinvoke $r11.<android.graphics.RectF: float width()>();

        $r11 = r2.<com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator: android.graphics.RectF bbox>;

        $f7 = virtualinvoke $r11.<android.graphics.RectF: float height()>();

        specialinvoke $r10.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);

        $r1.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG$Box boundingBox> = $r10;

     label12:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r12 = new com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer;

        f0 = f0 + f2;

        f1 = f1 + f3;

        specialinvoke $r12.<com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,float,float)>(r0, f0, f1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, $r12);

        if $z0 == 0 goto label18;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label13:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List x>;

        $r13 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f0 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label04;

     label14:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List y>;

        $r13 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f1 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label06;

     label15:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dx>;

        $r13 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f2 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label08;

     label16:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Text: java.util.List dy>;

        $r13 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (com.caverock.androidsvg.SVG$Length) $r13;

        f3 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        goto label10;

     label17:
        f0 = f0 - $f4;

        goto label11;

     label18:
        return;
    }
    private void render(com.caverock.androidsvg.SVG$Use)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Use $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$Length $r3, $r11;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        com.caverock.androidsvg.SVG $r5;
        java.lang.String $r6;
        com.caverock.androidsvg.SVG$SvgObject $r7;
        android.graphics.Matrix $r8;
        android.graphics.Canvas $r9;
        float $f0, $f1;
        com.caverock.androidsvg.SVG$Svg r10;
        com.caverock.androidsvg.SVG$Box $r12;
        com.caverock.androidsvg.SVG$Symbol r13;
        com.caverock.androidsvg.SVG$Unit $r14;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Use;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Use render", $r2);

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

        if $r3 == null goto label01;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 != 0 goto label17;

     label01:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

        if $r3 == null goto label02;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isZero()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 == 0 goto label17;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG document>;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Use: java.lang.String href>;

        $r7 = virtualinvoke $r5.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r6);

        if $r7 != null goto label03;

        $r2 = newarray (java.lang.Object)[1];

        $r6 = $r1.<com.caverock.androidsvg.SVG$Use: java.lang.String href>;

        $r2[0] = $r6;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Use reference \'%s\' not found", $r2);

        return;

     label03:
        $r8 = $r1.<com.caverock.androidsvg.SVG$Use: android.graphics.Matrix transform>;

        if $r8 == null goto label04;

        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Use: android.graphics.Matrix transform>;

        virtualinvoke $r9.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r8);

     label04:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length x>;

        if $r3 == null goto label09;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length x>;

        $f0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label05:
        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length y>;

        if $r3 == null goto label10;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length y>;

        $f1 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label06:
        $r9 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r9.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForClipPath(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void parentPush(com.caverock.androidsvg.SVG$SvgContainer)>($r1);

        $z1 = $r7 instanceof com.caverock.androidsvg.SVG$Svg;

        if $z1 == 0 goto label11;

        r10 = (com.caverock.androidsvg.SVG$Svg) $r7;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

        $r11 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

        $r12 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box makeViewPort(com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length)>(null, null, $r3, $r11);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Svg,com.caverock.androidsvg.SVG$Box)>(r10, $r12);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

     label07:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void parentPop()>();

        if $z0 == 0 goto label08;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label08:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label09:
        $f0 = 0.0F;

        goto label05;

     label10:
        $f1 = 0.0F;

        goto label06;

     label11:
        $z1 = $r7 instanceof com.caverock.androidsvg.SVG$Symbol;

        if $z1 == 0 goto label16;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

        if $r3 == null goto label14;

        $r3 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

     label12:
        $r11 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

        if $r11 == null goto label15;

        $r11 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

     label13:
        $r12 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Box makeViewPort(com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length)>(null, null, $r3, $r11);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        r13 = (com.caverock.androidsvg.SVG$Symbol) $r7;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Symbol,com.caverock.androidsvg.SVG$Box)>(r13, $r12);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        goto label07;

     label14:
        $r3 = new com.caverock.androidsvg.SVG$Length;

        $r14 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>(100.0F, $r14);

        goto label12;

     label15:
        $r11 = new com.caverock.androidsvg.SVG$Length;

        $r14 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

        specialinvoke $r11.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>(100.0F, $r14);

        goto label13;

     label16:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$SvgObject)>($r7);

        goto label07;

     label17:
        return;
    }
    private void renderChildren(com.caverock.androidsvg.SVG$SvgContainer, boolean)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgContainer $r1;
        boolean $z0, $z1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        com.caverock.androidsvg.SVG$SvgObject r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgContainer;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void parentPush(com.caverock.androidsvg.SVG$SvgContainer)>($r1);

     label1:
        $r2 = interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgContainer: java.util.List getChildren()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.caverock.androidsvg.SVG$SvgObject) $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$SvgObject)>(r5);

        goto label2;

     label3:
        if $z0 == 0 goto label4;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void parentPop()>();

     label4:
        return;
    }
    private void renderMarker(com.caverock.androidsvg.SVG$Marker, com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Marker $r1;
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector $r2;
        float f0, f1, f2, $f3, $f4, $f5, f6, f7;
        android.graphics.Matrix r3;
        java.lang.Float $r4;
        boolean $z0;
        byte $b0;
        double $d0, $d1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r5;
        com.caverock.androidsvg.SVG$Length $r6;
        com.caverock.androidsvg.SVG$Box $r7;
        com.caverock.androidsvg.PreserveAspectRatio $r8, $r9;
        com.caverock.androidsvg.PreserveAspectRatio$Scale $r10, $r11;
        android.graphics.Canvas $r12;
        int[] $r13;
        com.caverock.androidsvg.PreserveAspectRatio$Alignment $r14;
        int $i1;
        com.caverock.androidsvg.SVG$Style $r15;
        java.lang.Boolean $r16;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Marker;

        $r2 := @parameter1: com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector;

        f2 = 0.0F;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r4 = $r1.<com.caverock.androidsvg.SVG$Marker: java.lang.Float orient>;

        if $r4 == null goto label02;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Marker: java.lang.Float orient>;

        $f3 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z0 == 0 goto label16;

        $f3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $b0 = $f3 cmpl 0.0F;

        if $b0 != 0 goto label01;

        $f3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $b0 = $f3 cmpl 0.0F;

        if $b0 == 0 goto label02;

     label01:
        f2 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dy>;

        $d0 = (double) f2;

        f2 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float dx>;

        $d1 = (double) f2;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        $d0 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        f2 = (float) $d0;

     label02:
        $z0 = $r1.<com.caverock.androidsvg.SVG$Marker: boolean markerUnitsAreUser>;

        if $z0 == 0 goto label17;

        $f3 = 1.0F;

     label03:
        $r5 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)>($r1);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r5;

        r3 = new android.graphics.Matrix;

        specialinvoke r3.<android.graphics.Matrix: void <init>()>();

        $f4 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float x>;

        $f5 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector: float y>;

        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>($f4, $f5);

        virtualinvoke r3.<android.graphics.Matrix: boolean preRotate(float)>(f2);

        virtualinvoke r3.<android.graphics.Matrix: boolean preScale(float,float)>($f3, $f3);

        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refX>;

        if $r6 == null goto label18;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refX>;

        f6 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label04:
        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refY>;

        if $r6 == null goto label19;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refY>;

        f0 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label05:
        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerWidth>;

        if $r6 == null goto label20;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerWidth>;

        f2 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label06:
        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerHeight>;

        if $r6 == null goto label21;

        $r6 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerHeight>;

        $f3 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label07:
        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r7 == null goto label28;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Box viewBox>;

        $f4 = $r7.<com.caverock.androidsvg.SVG$Box: float width>;

        $f4 = f2 / $f4;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Box viewBox>;

        $f5 = $r7.<com.caverock.androidsvg.SVG$Box: float height>;

        $f5 = $f3 / $f5;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        if $r8 == null goto label22;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

     label08:
        $r9 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio STRETCH>;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.PreserveAspectRatio: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label10;

        $r10 = virtualinvoke $r8.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Scale getScale()>();

        $r11 = <com.caverock.androidsvg.PreserveAspectRatio$Scale: com.caverock.androidsvg.PreserveAspectRatio$Scale Slice>;

        if $r10 != $r11 goto label23;

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f5);

     label09:
        $f5 = $f4;

     label10:
        f6 = neg f6;

        f6 = f6 * $f4;

        f0 = neg f0;

        f0 = f0 * $f5;

        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>(f6, f0);

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r12.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r3);

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Box viewBox>;

        f0 = $r7.<com.caverock.androidsvg.SVG$Box: float width>;

        f1 = f0 * $f4;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Box viewBox>;

        f0 = $r7.<com.caverock.androidsvg.SVG$Box: float height>;

        f0 = f0 * $f5;

        f6 = 0.0F;

        f7 = 0.0F;

        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment>;

        $r14 = virtualinvoke $r8.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Alignment getAlignment()>();

        $i1 = virtualinvoke $r14.<com.caverock.androidsvg.PreserveAspectRatio$Alignment: int ordinal()>();

        $i1 = $r13[$i1];

        lookupswitch($i1)
        {
            case 1: goto label24;
            case 2: goto label24;
            case 3: goto label24;
            case 4: goto label25;
            case 5: goto label25;
            case 6: goto label25;
            default: goto label11;
        };

     label11:
        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$PreserveAspectRatio$Alignment>;

        $r14 = virtualinvoke $r8.<com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio$Alignment getAlignment()>();

        $i1 = virtualinvoke $r14.<com.caverock.androidsvg.PreserveAspectRatio$Alignment: int ordinal()>();

        $i1 = $r13[$i1];

        lookupswitch($i1)
        {
            case 2: goto label26;
            case 3: goto label27;
            case 4: goto label12;
            case 5: goto label26;
            case 6: goto label27;
            case 7: goto label26;
            case 8: goto label27;
            default: goto label12;
        };

     label12:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r15.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label13;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>(f6, f7, f2, $f3);

     label13:
        virtualinvoke r3.<android.graphics.Matrix: void reset()>();

        virtualinvoke r3.<android.graphics.Matrix: boolean preScale(float,float)>($f4, $f5);

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r12.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r3);

     label14:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderChildren(com.caverock.androidsvg.SVG$SvgContainer,boolean)>($r1, 0);

        if $z0 == 0 goto label15;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

     label15:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label16:
        $r4 = $r1.<com.caverock.androidsvg.SVG$Marker: java.lang.Float orient>;

        f2 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        goto label02;

     label17:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r15.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth>;

        $f3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: float dpi>;

        $f3 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Length: float floatValue(float)>($f3);

        goto label03;

     label18:
        f6 = 0.0F;

        goto label04;

     label19:
        f0 = 0.0F;

        goto label05;

     label20:
        f2 = 3.0F;

        goto label06;

     label21:
        $f3 = 3.0F;

        goto label07;

     label22:
        $r8 = <com.caverock.androidsvg.PreserveAspectRatio: com.caverock.androidsvg.PreserveAspectRatio LETTERBOX>;

        goto label08;

     label23:
        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        goto label09;

     label24:
        f6 = f2 - f1;

        f6 = f6 / 2.0F;

        f6 = 0.0F - f6;

        goto label11;

     label25:
        f6 = f2 - f1;

        f6 = 0.0F - f6;

        goto label11;

     label26:
        f0 = $f3 - f0;

        f0 = f0 / 2.0F;

        f7 = 0.0F - f0;

        goto label12;

     label27:
        f0 = $f3 - f0;

        f7 = 0.0F - f0;

        goto label12;

     label28:
        $f4 = neg f6;

        $f5 = neg f0;

        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>($f4, $f5);

        $r12 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r12.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r3);

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r5.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r15.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label14;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setClipRect(float,float,float,float)>(0.0F, 0.0F, f2, $f3);

        goto label14;
    }
    private void renderMarkers(com.caverock.androidsvg.SVG$GraphicsElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$GraphicsElement r1;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r2;
        com.caverock.androidsvg.SVG$Style $r3, $r14, $r15;
        java.lang.String $r4;
        com.caverock.androidsvg.SVG$Marker r5, r6, r7;
        com.caverock.androidsvg.SVG $r8;
        com.caverock.androidsvg.SVG$SvgObject $r9;
        boolean $z0;
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator $r10;
        com.caverock.androidsvg.SVG$Path r11;
        com.caverock.androidsvg.SVG$PathDefinition $r12;
        java.util.List $r13;
        int $i0, i1, $i2;
        java.lang.Object $r16;
        com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector $r17;
        java.lang.Object[] $r18;
        com.caverock.androidsvg.SVG$Line r19;
        com.caverock.androidsvg.SVG$PolyLine r20;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        r1 := @parameter0: com.caverock.androidsvg.SVG$GraphicsElement;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        if $r4 != null goto label01;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid>;

        if $r4 != null goto label01;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd>;

        if $r4 != null goto label01;

        return;

     label01:
        r5 = null;

        r6 = null;

        r7 = null;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        if $r4 == null goto label02;

        $r8 = r1.<com.caverock.androidsvg.SVG$GraphicsElement: com.caverock.androidsvg.SVG document>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        $r9 = virtualinvoke $r8.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        if $r9 == null goto label08;

        r5 = (com.caverock.androidsvg.SVG$Marker) $r9;

     label02:
        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid>;

        if $r4 == null goto label03;

        $r8 = r1.<com.caverock.androidsvg.SVG$GraphicsElement: com.caverock.androidsvg.SVG document>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid>;

        $r9 = virtualinvoke $r8.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        if $r9 == null goto label09;

        r6 = (com.caverock.androidsvg.SVG$Marker) $r9;

     label03:
        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd>;

        if $r4 == null goto label04;

        $r8 = r1.<com.caverock.androidsvg.SVG$GraphicsElement: com.caverock.androidsvg.SVG document>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd>;

        $r9 = virtualinvoke $r8.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r4);

        if $r9 == null goto label10;

        r7 = (com.caverock.androidsvg.SVG$Marker) $r9;

     label04:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Path;

        if $z0 == 0 goto label11;

        $r10 = new com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator;

        r11 = (com.caverock.androidsvg.SVG$Path) r1;

        $r12 = r11.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d>;

        specialinvoke $r10.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVG$PathDefinition)>(r0, $r12);

        $r13 = virtualinvoke $r10.<com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator: java.util.List getMarkers()>();

     label05:
        if $r13 == null goto label14;

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i0 == 0 goto label14;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r14 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r15 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r15.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd> = null;

        $r14.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid> = null;

        $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart> = null;

        if r5 == null goto label06;

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector) $r16;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarker(com.caverock.androidsvg.SVG$Marker,com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)>(r5, $r17);

     label06:
        if r6 == null goto label13;

        i1 = 1;

     label07:
        $i2 = $i0 + -1;

        if i1 >= $i2 goto label13;

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1);

        $r17 = (com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector) $r16;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarker(com.caverock.androidsvg.SVG$Marker,com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)>(r6, $r17);

        i1 = i1 + 1;

        goto label07;

     label08:
        $r18 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        $r18[0] = $r4;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Marker reference \'%s\' not found", $r18);

        goto label02;

     label09:
        $r18 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid>;

        $r18[0] = $r4;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Marker reference \'%s\' not found", $r18);

        goto label03;

     label10:
        $r18 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r3 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd>;

        $r18[0] = $r4;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("Marker reference \'%s\' not found", $r18);

        goto label04;

     label11:
        $z0 = r1 instanceof com.caverock.androidsvg.SVG$Line;

        if $z0 == 0 goto label12;

        r19 = (com.caverock.androidsvg.SVG$Line) r1;

        $r13 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.List calculateMarkerPositions(com.caverock.androidsvg.SVG$Line)>(r19);

        goto label05;

     label12:
        r20 = (com.caverock.androidsvg.SVG$PolyLine) r1;

        $r13 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.List calculateMarkerPositions(com.caverock.androidsvg.SVG$PolyLine)>(r20);

        goto label05;

     label13:
        if r7 == null goto label14;

        $i0 = $i0 + -1;

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i0);

        $r17 = (com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector) $r16;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderMarker(com.caverock.androidsvg.SVG$Marker,com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector)>(r7, $r17);

     label14:
        return;
    }
    private void renderMask(com.caverock.androidsvg.SVG$Mask, com.caverock.androidsvg.SVG$SvgElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Mask $r1;
        com.caverock.androidsvg.SVG$SvgElement $r2;
        boolean z0, $z1;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        com.caverock.androidsvg.SVG$Length $r5;
        float $f0, $f1, $f2;
        byte $b0;
        com.caverock.androidsvg.SVG$Box $r6;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r7;
        com.caverock.androidsvg.SVG$Style $r8;
        java.lang.Float $r9;
        android.graphics.Canvas $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Mask;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$SvgElement;

        z0 = 1;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("Mask render", $r3);

        $r4 = $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskUnitsAreUser>;

        if $r4 == null goto label04;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskUnitsAreUser>;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label04;

        $z1 = 1;

     label01:
        if $z1 == 0 goto label07;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width>;

        if $r5 == null goto label05;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width>;

        $f0 = virtualinvoke $r5.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label02:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height>;

        if $r5 == null goto label06;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height>;

        $f1 = virtualinvoke $r5.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

     label03:
        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label16;

        $b0 = $f1 cmpl 0.0F;

        if $b0 != 0 goto label12;

        return;

     label04:
        $z1 = 0;

        goto label01;

     label05:
        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float width>;

        goto label02;

     label06:
        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f1 = $r6.<com.caverock.androidsvg.SVG$Box: float height>;

        goto label03;

     label07:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width>;

        if $r5 == null goto label10;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width>;

        $f0 = virtualinvoke $r5.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label08:
        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height>;

        if $r5 == null goto label11;

        $r5 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height>;

        $f1 = virtualinvoke $r5.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, 1.0F);

     label09:
        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f2 = $r6.<com.caverock.androidsvg.SVG$Box: float width>;

        $f0 = $f0 * $f2;

        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f2 = $r6.<com.caverock.androidsvg.SVG$Box: float height>;

        $f1 = $f1 * $f2;

        goto label03;

     label10:
        $f0 = 1.2F;

        goto label08;

     label11:
        $f1 = 1.2F;

        goto label09;

     label12:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState findInheritFromAncestorState(com.caverock.androidsvg.SVG$SvgObject)>($r1);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r7;

        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r8 = $r7.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        $r8.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity> = $r9;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskContentUnitsAreUser>;

        if $r4 == null goto label13;

        $r4 = $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskContentUnitsAreUser>;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label15;

     label13:
        if z0 != 0 goto label14;

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float minX>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f1 = $r6.<com.caverock.androidsvg.SVG$Box: float minY>;

        virtualinvoke $r10.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float width>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f1 = $r6.<com.caverock.androidsvg.SVG$Box: float height>;

        virtualinvoke $r10.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

     label14:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void renderChildren(com.caverock.androidsvg.SVG$SvgContainer,boolean)>($r1, 0);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label15:
        z0 = 0;

        goto label13;

     label16:
        return;
    }
    private void renderSwitchChild(com.caverock.androidsvg.SVG$Switch)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$Switch $r1;
        java.util.Locale $r2;
        java.lang.String $r3, $r11, $r19;
        com.caverock.androidsvg.SVG $r4;
        com.caverock.androidsvg.SVGExternalFileResolver $r5;
        java.util.List $r6;
        java.util.Iterator $r7, $r14;
        boolean $z0;
        java.lang.Object $r8;
        com.caverock.androidsvg.SVG$SvgObject r9;
        com.caverock.androidsvg.SVG$SvgConditional r10;
        java.util.Set $r12;
        java.util.HashSet $r13;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r15;
        com.caverock.androidsvg.SVG$Style $r16;
        java.lang.Integer $r17;
        int $i0;
        com.caverock.androidsvg.SVG$Style$FontStyle $r18;
        android.graphics.Typeface $r20;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Switch;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getLanguage()>();

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r5 = virtualinvoke $r4.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver getFileResolver()>();

        $r6 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$Switch: java.util.List getChildren()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.caverock.androidsvg.SVG$SvgObject) $r8;

        $z0 = r9 instanceof com.caverock.androidsvg.SVG$SvgConditional;

        if $z0 == 0 goto label1;

        r10 = (com.caverock.androidsvg.SVG$SvgConditional) r9;

        $r11 = interfaceinvoke r10.<com.caverock.androidsvg.SVG$SvgConditional: java.lang.String getRequiredExtensions()>();

        if $r11 != null goto label1;

        $r12 = interfaceinvoke r10.<com.caverock.androidsvg.SVG$SvgConditional: java.util.Set getSystemLanguage()>();

        if $r12 == null goto label2;

        $z0 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

     label2:
        $r12 = interfaceinvoke r10.<com.caverock.androidsvg.SVG$SvgConditional: java.util.Set getRequiredFeatures()>();

        if $r12 == null goto label4;

        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        if $r13 != null goto label3;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void initialiseSupportedFeaturesMap()>();

     label3:
        $z0 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer: java.util.HashSet supportedFeatures>;

        $z0 = virtualinvoke $r13.<java.util.HashSet: boolean containsAll(java.util.Collection)>($r12);

        if $z0 == 0 goto label1;

     label4:
        $r12 = interfaceinvoke r10.<com.caverock.androidsvg.SVG$SvgConditional: java.util.Set getRequiredFormats()>();

        if $r12 == null goto label6;

        $z0 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        if $r5 == null goto label1;

        $r14 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r5.<com.caverock.androidsvg.SVGExternalFileResolver: boolean isFormatSupported(java.lang.String)>($r11);

        if $z0 != 0 goto label5;

        goto label1;

     label6:
        $r12 = interfaceinvoke r10.<com.caverock.androidsvg.SVG$SvgConditional: java.util.Set getRequiredFonts()>();

        if $r12 == null goto label8;

        $z0 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        if $r5 == null goto label1;

        $r14 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r8;

        $r15 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r16 = $r15.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r16.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        $i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r15 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r16 = $r15.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r16.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle>;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r5.<com.caverock.androidsvg.SVGExternalFileResolver: android.graphics.Typeface resolveFont(java.lang.String,int,java.lang.String)>($r11, $i0, $r19);

        if $r20 != null goto label7;

        goto label1;

     label8:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$SvgObject)>(r9);

     label9:
        return;
    }
    private void renderTextPath(com.caverock.androidsvg.SVG$TextPath)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$TextPath $r1;
        android.graphics.PathMeasure r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;
        boolean $z0;
        com.caverock.androidsvg.SVG $r5;
        java.lang.String $r6;
        com.caverock.androidsvg.SVG$SvgObject $r7;
        com.caverock.androidsvg.SVG$Path r8;
        com.caverock.androidsvg.SVGAndroidRenderer$PathConverter $r9;
        com.caverock.androidsvg.SVG$PathDefinition $r10;
        android.graphics.Path $r11;
        android.graphics.Matrix $r12;
        com.caverock.androidsvg.SVG$Length $r13;
        float $f0, $f1;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r14, $r15;
        com.caverock.androidsvg.SVG$TextRoot $r16;
        com.caverock.androidsvg.SVG$SvgElement $r17;
        com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer $r18;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextPath;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void debug(java.lang.String,java.lang.Object[])>("TextPath render", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$SvgElementBase)>($r4, $r1);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean display()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean visible()>();

        if $z0 == 0 goto label8;

        $r5 = $r1.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG document>;

        $r6 = $r1.<com.caverock.androidsvg.SVG$TextPath: java.lang.String href>;

        $r7 = virtualinvoke $r5.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$SvgObject resolveIRI(java.lang.String)>($r6);

        if $r7 != null goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $r6 = $r1.<com.caverock.androidsvg.SVG$TextPath: java.lang.String href>;

        $r3[0] = $r6;

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void error(java.lang.String,java.lang.Object[])>("TextPath reference \'%s\' not found", $r3);

        return;

     label2:
        r8 = (com.caverock.androidsvg.SVG$Path) $r7;

        $r9 = new com.caverock.androidsvg.SVGAndroidRenderer$PathConverter;

        $r10 = r8.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d>;

        specialinvoke $r9.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVG$PathDefinition)>(r0, $r10);

        $r11 = virtualinvoke $r9.<com.caverock.androidsvg.SVGAndroidRenderer$PathConverter: android.graphics.Path getPath()>();

        $r12 = r8.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        if $r12 == null goto label3;

        $r12 = r8.<com.caverock.androidsvg.SVG$Path: android.graphics.Matrix transform>;

        virtualinvoke $r11.<android.graphics.Path: void transform(android.graphics.Matrix)>($r12);

     label3:
        r2 = new android.graphics.PathMeasure;

        specialinvoke r2.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r11, 0);

        $r13 = $r1.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$Length startOffset>;

        if $r13 == null goto label6;

        $r13 = $r1.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$Length startOffset>;

        $f0 = virtualinvoke r2.<android.graphics.PathMeasure: float getLength()>();

        $f0 = virtualinvoke $r13.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, $f0);

     label4:
        $r14 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG$Style$TextAnchor getAnchorPosition()>();

        $r15 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        if $r14 == $r15 goto label5;

        $f1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: float calculateTextWidth(com.caverock.androidsvg.SVG$TextContainer)>($r1);

        $r15 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Middle>;

        if $r14 != $r15 goto label7;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 - $f1;

     label5:
        $r16 = virtualinvoke $r1.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        $r17 = (com.caverock.androidsvg.SVG$SvgElement) $r16;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkForGradientsAndPatterns(com.caverock.androidsvg.SVG$SvgElement)>($r17);

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean pushLayer()>();

        $r18 = new com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer;

        specialinvoke $r18.<com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,android.graphics.Path,float,float)>(r0, $r11, $f0, 0.0F);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void enumerateTextSpans(com.caverock.androidsvg.SVG$TextContainer,com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor)>($r1, $r18);

        if $z0 == 0 goto label8;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void popLayer(com.caverock.androidsvg.SVG$SvgElement)>($r1);

        return;

     label6:
        $f0 = 0.0F;

        goto label4;

     label7:
        $f0 = $f0 - $f1;

        goto label5;

     label8:
        return;
    }
    private boolean requiresCompositing()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        float $f0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Float $r5;
        byte $b0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        if $r3 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering>;

        if $z0 != 0 goto label1;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>("Masks are not supported when using getPicture()", $r4);

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity>;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        $b0 = $f0 cmpg 1.0F;

        if $b0 < 0 goto label2;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        if $r3 == null goto label3;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering>;

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
    private void resetState()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1, $r4;
        com.caverock.androidsvg.SVG$Style $r2;
        java.util.Stack $r3;
        boolean $z0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        specialinvoke $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r1;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack> = $r3;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = staticinvoke <com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style getDefaultStyle()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>($r1, $r2);

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort> = null;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean spacePreserve> = 0;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean directRenderingMode>;

        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean directRendering> = $z0;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r4 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke $r4.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>(r0, $r1);

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack canvasStack> = $r3;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack bitmapStack> = $r3;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack matrixStack> = $r3;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack parentStack> = $r3;

        return;
    }
    private void setClipRect(float, float, float, float)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        float $f0, $f1, $f2, $f3, f4, f5;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        com.caverock.androidsvg.SVG$CSSClipRect $r3;
        com.caverock.androidsvg.SVG$Length $r4;
        android.graphics.Canvas $r5;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        f4 = $f0;

        f5 = $f1;

        $f2 = $f0 + $f2;

        $f3 = $f1 + $f3;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        if $r3 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$CSSClipRect: com.caverock.androidsvg.SVG$Length left>;

        f4 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f4 = $f0 + f4;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$CSSClipRect: com.caverock.androidsvg.SVG$Length top>;

        $f0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f5 = $f1 + $f0;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$CSSClipRect: com.caverock.androidsvg.SVG$Length right>;

        $f0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueX(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $f2 = $f2 - $f0;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$CSSClipRect: com.caverock.androidsvg.SVG$Length bottom>;

        $f0 = virtualinvoke $r4.<com.caverock.androidsvg.SVG$Length: float floatValueY(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        $f3 = $f3 - $f0;

     label1:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r5.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(f4, f5, $f2, $f3);

        return;
    }
    private void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, boolean, com.caverock.androidsvg.SVG$SvgPaint)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVG$SvgPaint r2;
        com.caverock.androidsvg.SVG$Style $r3;
        java.lang.Float $r4;
        float $f0;
        com.caverock.androidsvg.SVG$Colour r5;
        int i0;
        android.graphics.Paint $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: com.caverock.androidsvg.SVG$SvgPaint;

        if $z0 == 0 goto label3;

        $r3 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity>;

     label1:
        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        $z1 = r2 instanceof com.caverock.androidsvg.SVG$Colour;

        if $z1 == 0 goto label4;

        r5 = (com.caverock.androidsvg.SVG$Colour) r2;

        i0 = r5.<com.caverock.androidsvg.SVG$Colour: int colour>;

     label2:
        i0 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: int colourWithOpacity(int,float)>(i0, $f0);

        if $z0 == 0 goto label5;

        $r6 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(i0);

        return;

     label3:
        $r3 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r3.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity>;

        goto label1;

     label4:
        $z1 = r2 instanceof com.caverock.androidsvg.SVG$CurrentColor;

        if $z1 == 0 goto label6;

        $r3 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r5 = $r3.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color>;

        i0 = r5.<com.caverock.androidsvg.SVG$Colour: int colour>;

        goto label2;

     label5:
        $r6 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(i0);

     label6:
        return;
    }
    private void setSolidColor(boolean, com.caverock.androidsvg.SVG$SolidColor)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1, $z2;
        com.caverock.androidsvg.SVG$SolidColor $r1;
        com.caverock.androidsvg.SVG$Style $r2, $r4;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3, $r7;
        com.caverock.androidsvg.SVG$SvgPaint $r5;
        java.lang.Float $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.caverock.androidsvg.SVG$SolidColor;

        $z1 = 1;

        if $z0 == 0 goto label05;

        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z2 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 2147483648L);

        if $z2 == 0 goto label02;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r5 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor>;

        $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill> = $r5;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor>;

        if $r5 == null goto label04;

     label01:
        $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill> = $z1;

     label02:
        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 4294967296L);

        if $z1 == 0 goto label03;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r6 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float solidOpacity>;

        $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity> = $r6;

     label03:
        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 6442450944L);

        if $z1 == 0 goto label10;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r7.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,boolean,com.caverock.androidsvg.SVG$SvgPaint)>($r3, $z0, $r5);

        return;

     label04:
        $z1 = 0;

        goto label01;

     label05:
        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z2 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 2147483648L);

        if $z2 == 0 goto label07;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r5 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor>;

        $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke> = $r5;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor>;

        if $r5 == null goto label09;

     label06:
        $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke> = $z1;

     label07:
        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 4294967296L);

        if $z1 == 0 goto label08;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r6 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float solidOpacity>;

        $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity> = $r6;

     label08:
        $r2 = $r1.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$Style baseStyle>;

        $z1 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 6442450944L);

        if $z1 == 0 goto label10;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r7.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,boolean,com.caverock.androidsvg.SVG$SvgPaint)>($r3, $z0, $r5);

        return;

     label09:
        $z1 = 0;

        goto label06;

     label10:
        return;
    }
    private void statePop()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        java.lang.Object $r1;
        android.graphics.Canvas $r2;
        java.util.Stack $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r2.<android.graphics.Canvas: void restore()>();

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r1 = virtualinvoke $r3.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (com.caverock.androidsvg.SVGAndroidRenderer$RendererState) $r1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r4;

        return;
    }
    private void statePush()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        android.graphics.Canvas $r1;
        java.util.Stack $r2;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r3, $r4;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack stateStack>;

        $r3 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

        $r3 = new com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r4 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        specialinvoke $r3.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: void <init>(com.caverock.androidsvg.SVGAndroidRenderer,com.caverock.androidsvg.SVGAndroidRenderer$RendererState)>(r0, $r4);

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state> = $r3;

        return;
    }
    private java.lang.String textXMLSpaceTransform(java.lang.String, boolean, boolean)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r3;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $z2 = $r2.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean spacePreserve>;

        if $z2 == 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\n\\t]", " ");

        return $r1;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\n", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\t", " ");

        $r3 = $r1;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^\\s+", "");

     label2:
        if $z1 == 0 goto label3;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s+$", "");

     label3:
        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s{2,}", " ");

        return $r1;
    }
    private void updateParentBoundingBox(com.caverock.androidsvg.SVG$SvgElement)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG$SvgElement $r1;
        android.graphics.Matrix r2, $r9;
        float[] r3;
        android.graphics.RectF r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;
        com.caverock.androidsvg.SVG$Box $r6, $r11;
        java.util.Stack $r7;
        java.lang.Object $r8;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Canvas $r10;
        int i0, $i2;
        byte $b1;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElement;

        $r5 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$SvgContainer parent>;

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r6 == null goto label9;

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack matrixStack>;

        $r8 = virtualinvoke $r7.<java.util.Stack: java.lang.Object peek()>();

        $r9 = (android.graphics.Matrix) $r8;

        $z0 = virtualinvoke $r9.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r2);

        if $z0 == 0 goto label9;

        r3 = newarray (float)[8];

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float minX>;

        r3[0] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float minY>;

        r3[1] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        r3[2] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float minY>;

        r3[3] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Box: float maxX()>();

        r3[4] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        r3[5] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = $r6.<com.caverock.androidsvg.SVG$Box: float minX>;

        r3[6] = $f0;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = virtualinvoke $r6.<com.caverock.androidsvg.SVG$Box: float maxY()>();

        r3[7] = $f0;

        $r10 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        $r9 = virtualinvoke $r10.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        virtualinvoke r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r9);

        virtualinvoke r2.<android.graphics.Matrix: void mapPoints(float[])>(r3);

        r4 = new android.graphics.RectF;

        $f0 = r3[0];

        $f1 = r3[1];

        $f2 = r3[0];

        $f3 = r3[1];

        specialinvoke r4.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        i0 = 2;

     label2:
        if i0 > 6 goto label7;

        $f0 = r3[i0];

        $f1 = r4.<android.graphics.RectF: float left>;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label3;

        $f0 = r3[i0];

        r4.<android.graphics.RectF: float left> = $f0;

     label3:
        $f0 = r3[i0];

        $f1 = r4.<android.graphics.RectF: float right>;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label4;

        $f0 = r3[i0];

        r4.<android.graphics.RectF: float right> = $f0;

     label4:
        $i2 = i0 + 1;

        $f0 = r3[$i2];

        $f1 = r4.<android.graphics.RectF: float top>;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label5;

        $i2 = i0 + 1;

        $f0 = r3[$i2];

        r4.<android.graphics.RectF: float top> = $f0;

     label5:
        $i2 = i0 + 1;

        $f0 = r3[$i2];

        $f1 = r4.<android.graphics.RectF: float bottom>;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label6;

        $i2 = i0 + 1;

        $f0 = r3[$i2];

        r4.<android.graphics.RectF: float bottom> = $f0;

     label6:
        i0 = i0 + 2;

        goto label2;

     label7:
        $r7 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: java.util.Stack parentStack>;

        $r8 = virtualinvoke $r7.<java.util.Stack: java.lang.Object peek()>();

        $r1 = (com.caverock.androidsvg.SVG$SvgElement) $r8;

        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        if $r6 != null goto label8;

        $f0 = r4.<android.graphics.RectF: float left>;

        $f1 = r4.<android.graphics.RectF: float top>;

        $f2 = r4.<android.graphics.RectF: float right>;

        $f3 = r4.<android.graphics.RectF: float bottom>;

        $r6 = staticinvoke <com.caverock.androidsvg.SVG$Box: com.caverock.androidsvg.SVG$Box fromLimits(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox> = $r6;

        return;

     label8:
        $r6 = $r1.<com.caverock.androidsvg.SVG$SvgElement: com.caverock.androidsvg.SVG$Box boundingBox>;

        $f0 = r4.<android.graphics.RectF: float left>;

        $f1 = r4.<android.graphics.RectF: float top>;

        $f2 = r4.<android.graphics.RectF: float right>;

        $f3 = r4.<android.graphics.RectF: float bottom>;

        $r11 = staticinvoke <com.caverock.androidsvg.SVG$Box: com.caverock.androidsvg.SVG$Box fromLimits(float,float,float,float)>($f0, $f1, $f2, $f3);

        virtualinvoke $r6.<com.caverock.androidsvg.SVG$Box: void union(com.caverock.androidsvg.SVG$Box)>($r11);

     label9:
        return;
    }
    private void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$Style)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2, $r4;
        float[] r3;
        int i0, $i1, i2, $i3;
        boolean $z0;
        com.caverock.androidsvg.SVG$Colour $r5;
        java.lang.Float $r6;
        com.caverock.androidsvg.SVG$SvgPaint $r7;
        com.caverock.androidsvg.SVG$Style$FillRule $r8;
        com.caverock.androidsvg.SVG$Style$VectorEffect $r9;
        com.caverock.androidsvg.SVG$Length $r10;
        android.graphics.Paint $r11;
        float $f0, $f1, f2;
        com.caverock.androidsvg.SVG$Style$LineCaps $r12;
        int[] $r13;
        com.caverock.androidsvg.SVG$Style$LineJoin $r14;
        com.caverock.androidsvg.SVG$Length[] $r15;
        java.util.List $r16;
        java.lang.Integer $r17;
        com.caverock.androidsvg.SVG$Style$FontStyle $r18;
        android.graphics.Typeface r19, $r25;
        com.caverock.androidsvg.SVG $r20;
        com.caverock.androidsvg.SVGExternalFileResolver $r21;
        java.util.Iterator $r22;
        java.lang.Object $r23;
        java.lang.String r24, $r26;
        com.caverock.androidsvg.SVG$Style$TextDecoration $r27, $r28;
        com.caverock.androidsvg.SVG$Style$TextDirection $r29;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r30;
        java.lang.Boolean $r31;
        com.caverock.androidsvg.SVG$CSSClipRect $r32;
        com.caverock.androidsvg.SVG$Style$RenderQuality $r33;
        android.graphics.Paint$Cap $r34;
        android.graphics.Paint$Join $r35;
        byte $b4;
        android.graphics.DashPathEffect $r36;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Style;

        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 4096L);

        if $z0 == 0 goto label01;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color> = $r5;

     label01:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 2048L);

        if $z0 == 0 goto label02;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity> = $r6;

     label02:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 1L);

        if $z0 == 0 goto label04;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill> = $r7;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        if $r7 == null goto label50;

        $z0 = 1;

     label03:
        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasFill> = $z0;

     label04:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 4L);

        if $z0 == 0 goto label05;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity> = $r6;

     label05:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 6149L);

        if $z0 == 0 goto label06;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,boolean,com.caverock.androidsvg.SVG$SvgPaint)>($r1, 1, $r7);

     label06:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 2L);

        if $z0 == 0 goto label07;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r8 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule> = $r8;

     label07:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 8L);

        if $z0 == 0 goto label09;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke> = $r7;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        if $r7 == null goto label51;

        $z0 = 1;

     label08:
        $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: boolean hasStroke> = $z0;

     label09:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 16L);

        if $z0 == 0 goto label10;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity> = $r6;

     label10:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 6168L);

        if $z0 == 0 goto label11;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void setPaintColour(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,boolean,com.caverock.androidsvg.SVG$SvgPaint)>($r1, 0, $r7);

     label11:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 34359738368L);

        if $z0 == 0 goto label12;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r9 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect> = $r9;

     label12:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 32L);

        if $z0 == 0 goto label13;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth> = $r10;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth>;

        $f0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

     label13:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 64L);

        if $z0 == 0 goto label14;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r12 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap> = $r12;

        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$SVG$Style$LineCaps>;

        $r12 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap>;

        i0 = virtualinvoke $r12.<com.caverock.androidsvg.SVG$Style$LineCaps: int ordinal()>();

        i0 = $r13[i0];

        lookupswitch(i0)
        {
            case 1: goto label52;
            case 2: goto label53;
            case 3: goto label54;
            default: goto label14;
        };

     label14:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 128L);

        if $z0 == 0 goto label15;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r14 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin> = $r14;

        $r13 = <com.caverock.androidsvg.SVGAndroidRenderer$1: int[] $SwitchMap$com$caverock$androidsvg$SVG$Style$LineJoin>;

        $r14 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin>;

        i0 = virtualinvoke $r14.<com.caverock.androidsvg.SVG$Style$LineJoin: int ordinal()>();

        i0 = $r13[i0];

        lookupswitch(i0)
        {
            case 1: goto label55;
            case 2: goto label56;
            case 3: goto label57;
            default: goto label15;
        };

     label15:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 256L);

        if $z0 == 0 goto label16;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeMiterLimit>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeMiterLimit> = $r6;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeMiterLimit>;

        $f0 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeMiter(float)>($f0);

     label16:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 512L);

        if $z0 == 0 goto label17;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r15 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray> = $r15;

     label17:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 1024L);

        if $z0 == 0 goto label18;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeDashOffset>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeDashOffset> = $r10;

     label18:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 1536L);

        if $z0 == 0 goto label19;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r15 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

        if $r15 != null goto label58;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

     label19:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 16384L);

        if $z0 == 0 goto label20;

        $f0 = virtualinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: float getCurrentFontSize()>();

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize> = $r10;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $r10 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize>;

        $f1 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, $f0);

        virtualinvoke $r11.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r10 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize>;

        $f0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer,float)>(r0, $f0);

        virtualinvoke $r11.<android.graphics.Paint: void setTextSize(float)>($f0);

     label20:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 8192L);

        if $z0 == 0 goto label21;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r2.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily> = $r16;

     label21:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 32768L);

        if $z0 == 0 goto label22;

        $r17 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if i0 != -1 goto label65;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if i0 <= 100 goto label65;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        i0 = i0 + -100;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = $r17;

     label22:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 65536L);

        if $z0 == 0 goto label23;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle> = $r18;

     label23:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 106496L);

        if $z0 == 0 goto label28;

        r19 = null;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r4.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily>;

        if $r16 == null goto label26;

        $r20 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        if $r20 == null goto label26;

        $r20 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r21 = virtualinvoke $r20.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVGExternalFileResolver getFileResolver()>();

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r16 = $r4.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily>;

        $r22 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z0 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r23;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle>;

        $r25 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Typeface checkGenericFont(java.lang.String,java.lang.Integer,com.caverock.androidsvg.SVG$Style$FontStyle)>(r24, $r17, $r18);

        r19 = $r25;

        if $r25 != null goto label25;

        if $r21 == null goto label25;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle>;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);

        r19 = virtualinvoke $r21.<com.caverock.androidsvg.SVGExternalFileResolver: android.graphics.Typeface resolveFont(java.lang.String,int,java.lang.String)>(r24, i0, $r26);

     label25:
        if r19 == null goto label24;

     label26:
        if r19 != null goto label27;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r18 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle>;

        r19 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Typeface checkGenericFont(java.lang.String,java.lang.Integer,com.caverock.androidsvg.SVG$Style$FontStyle)>("serif", $r17, $r18);

     label27:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r19);

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r19);

     label28:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 131072L);

        if $z0 == 0 goto label33;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r27 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration> = $r27;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $r27 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration>;

        $r28 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration LineThrough>;

        if $r27 != $r28 goto label67;

        $z0 = 1;

     label29:
        virtualinvoke $r11.<android.graphics.Paint: void setStrikeThruText(boolean)>($z0);

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $r27 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration>;

        $r28 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration Underline>;

        if $r27 != $r28 goto label68;

        $z0 = 1;

     label30:
        virtualinvoke $r11.<android.graphics.Paint: void setUnderlineText(boolean)>($z0);

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 17 goto label33;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r27 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration>;

        $r28 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration LineThrough>;

        if $r27 != $r28 goto label69;

        $z0 = 1;

     label31:
        virtualinvoke $r11.<android.graphics.Paint: void setStrikeThruText(boolean)>($z0);

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r27 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration>;

        $r28 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration Underline>;

        if $r27 != $r28 goto label70;

        $z0 = 1;

     label32:
        virtualinvoke $r11.<android.graphics.Paint: void setUnderlineText(boolean)>($z0);

     label33:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 68719476736L);

        if $z0 == 0 goto label34;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r29 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDirection direction>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDirection direction> = $r29;

     label34:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 262144L);

        if $z0 == 0 goto label35;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r30 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor> = $r30;

     label35:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 524288L);

        if $z0 == 0 goto label36;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r31 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow> = $r31;

     label36:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 2097152L);

        if $z0 == 0 goto label37;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r24 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart> = r24;

     label37:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 4194304L);

        if $z0 == 0 goto label38;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r24 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid> = r24;

     label38:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 8388608L);

        if $z0 == 0 goto label39;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r24 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd> = r24;

     label39:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 16777216L);

        if $z0 == 0 goto label40;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r31 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display> = $r31;

     label40:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 33554432L);

        if $z0 == 0 goto label41;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r31 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility> = $r31;

     label41:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 1048576L);

        if $z0 == 0 goto label42;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r32 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip> = $r32;

     label42:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 268435456L);

        if $z0 == 0 goto label43;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r24 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath> = r24;

     label43:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 536870912L);

        if $z0 == 0 goto label44;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r8 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule> = $r8;

     label44:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 1073741824L);

        if $z0 == 0 goto label45;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        r24 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.String mask>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.String mask> = r24;

     label45:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 67108864L);

        if $z0 == 0 goto label46;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor> = $r7;

     label46:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 134217728L);

        if $z0 == 0 goto label47;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity> = $r6;

     label47:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 8589934592L);

        if $z0 == 0 goto label48;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r7 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill> = $r7;

     label48:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 17179869184L);

        if $z0 == 0 goto label49;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r6 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity> = $r6;

     label49:
        $z0 = specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean isSpecified(com.caverock.androidsvg.SVG$Style,long)>($r2, 137438953472L);

        if $z0 == 0 goto label71;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r33 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$RenderQuality imageRendering>;

        $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$RenderQuality imageRendering> = $r33;

        return;

     label50:
        $z0 = 0;

        goto label03;

     label51:
        $z0 = 0;

        goto label08;

     label52:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r34 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r34);

        goto label14;

     label53:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r34 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r34);

        goto label14;

     label54:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r34 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r34);

        goto label14;

     label55:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r35 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r35);

        goto label15;

     label56:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r35 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r35);

        goto label15;

     label57:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r35 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r35);

        goto label15;

     label58:
        $f0 = 0.0F;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r15 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

        i0 = lengthof $r15;

        $i1 = i0 % 2;

        if $i1 != 0 goto label61;

        $i1 = i0;

     label59:
        r3 = newarray (float)[$i1];

        i2 = 0;

     label60:
        if i2 >= $i1 goto label62;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r15 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray>;

        $i3 = i2 % i0;

        $r10 = $r15[$i3];

        $f1 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        r3[i2] = $f1;

        $f1 = r3[i2];

        $f0 = $f0 + $f1;

        i2 = i2 + 1;

        goto label60;

     label61:
        $i1 = i0 * 2;

        goto label59;

     label62:
        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label63;

        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        goto label19;

     label63:
        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r10 = $r4.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeDashOffset>;

        $f1 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: float floatValue(com.caverock.androidsvg.SVGAndroidRenderer)>(r0);

        f2 = $f1;

        $b4 = $f1 cmpg 0.0F;

        if $b4 >= 0 goto label64;

        $f1 = $f1 % $f0;

        f2 = $f0 + $f1;

     label64:
        $r11 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint strokePaint>;

        $r36 = new android.graphics.DashPathEffect;

        specialinvoke $r36.<android.graphics.DashPathEffect: void <init>(float[],float)>(r3, f2);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r36);

        goto label19;

     label65:
        $r17 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if i0 != 1 goto label66;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        if i0 >= 900 goto label66;

        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        i0 = i0 + 100;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = $r17;

        goto label22;

     label66:
        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r17 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight>;

        $r4.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = $r17;

        goto label22;

     label67:
        $z0 = 0;

        goto label29;

     label68:
        $z0 = 0;

        goto label30;

     label69:
        $z0 = 0;

        goto label31;

     label70:
        $z0 = 0;

        goto label32;

     label71:
        return;
    }
    private void updateStyleForElement(com.caverock.androidsvg.SVGAndroidRenderer$RendererState, com.caverock.androidsvg.SVG$SvgElementBase)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$SvgElementBase $r2;
        com.caverock.androidsvg.SVG$SvgContainer $r3;
        boolean z0;
        com.caverock.androidsvg.SVG$Style $r4;
        com.caverock.androidsvg.SVG $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        com.caverock.androidsvg.CSSParser$Rule r9;
        com.caverock.androidsvg.CSSParser$Selector $r10;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVGAndroidRenderer$RendererState;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$SvgElementBase;

        $r3 = $r2.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$SvgContainer parent>;

        if $r3 != null goto label4;

        z0 = 1;

     label1:
        $r4 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        virtualinvoke $r4.<com.caverock.androidsvg.SVG$Style: void resetNonInheritingProperties(boolean)>(z0);

        $r4 = $r2.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style baseStyle>;

        if $r4 == null goto label2;

        $r4 = $r2.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style baseStyle>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>($r1, $r4);

     label2:
        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        z0 = virtualinvoke $r5.<com.caverock.androidsvg.SVG: boolean hasCSSRules()>();

        if z0 == 0 goto label5;

        $r5 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document>;

        $r6 = virtualinvoke $r5.<com.caverock.androidsvg.SVG: java.util.List getCSSRules()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.caverock.androidsvg.CSSParser$Rule) $r8;

        $r10 = r9.<com.caverock.androidsvg.CSSParser$Rule: com.caverock.androidsvg.CSSParser$Selector selector>;

        z0 = staticinvoke <com.caverock.androidsvg.CSSParser: boolean ruleMatch(com.caverock.androidsvg.CSSParser$Selector,com.caverock.androidsvg.SVG$SvgElementBase)>($r10, $r2);

        if z0 == 0 goto label3;

        $r4 = r9.<com.caverock.androidsvg.CSSParser$Rule: com.caverock.androidsvg.SVG$Style style>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>($r1, $r4);

        goto label3;

     label4:
        z0 = 0;

        goto label1;

     label5:
        $r4 = $r2.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style style>;

        if $r4 == null goto label6;

        $r4 = $r2.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style style>;

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void updateStyle(com.caverock.androidsvg.SVGAndroidRenderer$RendererState,com.caverock.androidsvg.SVG$Style)>($r1, $r4);

     label6:
        return;
    }
    private void viewportFill()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        com.caverock.androidsvg.SVG$SvgPaint $r3;
        boolean $z0;
        com.caverock.androidsvg.SVG$Colour $r4;
        int i0;
        java.lang.Float $r5;
        float $f0;
        android.graphics.Canvas $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill>;

        $z0 = $r3 instanceof com.caverock.androidsvg.SVG$Colour;

        if $z0 == 0 goto label3;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill>;

        $r4 = (com.caverock.androidsvg.SVG$Colour) $r3;

        i0 = $r4.<com.caverock.androidsvg.SVG$Colour: int colour>;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity>;

        if $r5 == null goto label2;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r5 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity>;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        i0 = staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: int colourWithOpacity(int,float)>(i0, $f0);

     label2:
        $r6 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: android.graphics.Canvas canvas>;

        virtualinvoke $r6.<android.graphics.Canvas: void drawColor(int)>(i0);

        return;

     label3:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill>;

        $z0 = $r3 instanceof com.caverock.androidsvg.SVG$CurrentColor;

        if $z0 == 0 goto label4;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r4 = $r2.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color>;

        i0 = $r4.<com.caverock.androidsvg.SVG$Colour: int colour>;

        goto label1;

     label4:
        return;
    }
    private boolean visible()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        boolean $z0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Style $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility>;

        if $r3 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Style style>;

        $r3 = $r2.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 1;
    }
    private static transient void warn(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r0, $r1);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGAndroidRenderer", $r0);

        return;
    }
    float getCurrentFontSize()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        float $f0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getTextSize()>();

        return $f0;
    }
    float getCurrentFontXHeight()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        float $f0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: android.graphics.Paint fillPaint>;

        $f0 = virtualinvoke $r2.<android.graphics.Paint: float getTextSize()>();

        $f0 = $f0 / 2.0F;

        return $f0;
    }
    com.caverock.androidsvg.SVG$Box getCurrentViewPortInUserUnits()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVGAndroidRenderer$RendererState $r1;
        com.caverock.androidsvg.SVG$Box $r2;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox>;

        if $r2 == null goto label1;

        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewBox>;

        return $r2;

     label1:
        $r1 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVGAndroidRenderer$RendererState state>;

        $r2 = $r1.<com.caverock.androidsvg.SVGAndroidRenderer$RendererState: com.caverock.androidsvg.SVG$Box viewPort>;

        return $r2;
    }
    float getDPI()
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        float f0;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        f0 = r0.<com.caverock.androidsvg.SVGAndroidRenderer: float dpi>;

        return f0;
    }
    void renderDocument(com.caverock.androidsvg.SVG, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.SVG$Box, com.caverock.androidsvg.PreserveAspectRatio, boolean)
    {
        com.caverock.androidsvg.SVGAndroidRenderer r0;
        com.caverock.androidsvg.SVG $r1;
        com.caverock.androidsvg.SVG$Box $r2, r4;
        boolean $z0;
        com.caverock.androidsvg.SVG$Svg $r3;
        com.caverock.androidsvg.PreserveAspectRatio r5;
        java.lang.Object[] $r6;

        r0 := @this: com.caverock.androidsvg.SVGAndroidRenderer;

        $r1 := @parameter0: com.caverock.androidsvg.SVG;

        $r2 := @parameter1: com.caverock.androidsvg.SVG$Box;

        r4 := @parameter2: com.caverock.androidsvg.SVG$Box;

        r5 := @parameter3: com.caverock.androidsvg.PreserveAspectRatio;

        $z0 := @parameter4: boolean;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: com.caverock.androidsvg.SVG document> = $r1;

        r0.<com.caverock.androidsvg.SVGAndroidRenderer: boolean directRenderingMode> = $z0;

        $r3 = virtualinvoke $r1.<com.caverock.androidsvg.SVG: com.caverock.androidsvg.SVG$Svg getRootElement()>();

        if $r3 != null goto label1;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.caverock.androidsvg.SVGAndroidRenderer: void warn(java.lang.String,java.lang.Object[])>("Nothing to render. Document is empty.", $r6);

        return;

     label1:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void resetState()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void checkXMLSpaceAttribute(com.caverock.androidsvg.SVG$SvgObject)>($r3);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePush()>();

        if r4 == null goto label4;

     label2:
        if r5 == null goto label5;

     label3:
        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void render(com.caverock.androidsvg.SVG$Svg,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.SVG$Box,com.caverock.androidsvg.PreserveAspectRatio)>($r3, $r2, r4, r5);

        specialinvoke r0.<com.caverock.androidsvg.SVGAndroidRenderer: void statePop()>();

        return;

     label4:
        r4 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Box viewBox>;

        goto label2;

     label5:
        r5 = $r3.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio>;

        goto label3;
    }
