com.caverock.androidsvg.SVGParser extends org.xml.sax.ext.DefaultHandler2
private static final java.lang.String CURRENTCOLOR
private static final java.lang.String FEATURE_STRING_PREFIX
private static final java.lang.String NONE
private static final java.lang.String SVG_NAMESPACE
private static final java.lang.String TAG
private static final java.lang.String VALID_DISPLAY_VALUES
private static final java.lang.String VALID_VISIBILITY_VALUES
private static final java.lang.String XLINK_NAMESPACE
private com.caverock.androidsvg.SVG$SvgContainer currentElement
private int ignoreDepth
private boolean ignoring
private boolean inMetadataElement
private boolean inStyleElement
private java.lang.StringBuilder metadataElementContents
private com.caverock.androidsvg.SVGParser$SVGElem metadataTag
private java.lang.StringBuilder styleElementContents
private com.caverock.androidsvg.SVG svgDocument
    void <init>()
    {
        com.caverock.androidsvg.SVGParser r0;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        specialinvoke r0.<org.xml.sax.ext.DefaultHandler2: void <init>()>();

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument> = null;

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = null;

        r0.<com.caverock.androidsvg.SVGParser: boolean ignoring> = 0;

        r0.<com.caverock.androidsvg.SVGParser: boolean inMetadataElement> = 0;

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVGParser$SVGElem metadataTag> = null;

        r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents> = null;

        r0.<com.caverock.androidsvg.SVGParser: boolean inStyleElement> = 0;

        r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents> = null;

        return;
    }
    private void circle(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Circle r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<circle>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Circle;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Circle: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCircle(com.caverock.androidsvg.SVG$Circle,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private static int clamp255(float)
    {
        float $f0;
        int $i0;
        byte $b1;

        $f0 := @parameter0: float;

        $b1 = $f0 cmpg 0.0F;

        if $b1 >= 0 goto label1;

        return 0;

     label1:
        $b1 = $f0 cmpl 255.0F;

        if $b1 <= 0 goto label2;

        return 255;

     label2:
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }
    private void clipPath(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$ClipPath r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<clipPath>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$ClipPath;

        specialinvoke r2.<com.caverock.androidsvg.SVG$ClipPath: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$ClipPath: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$ClipPath: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesClipPath(com.caverock.androidsvg.SVG$ClipPath,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private transient void debug(java.lang.String, java.lang.Object[])
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    private void defs(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Defs r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<defs>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Defs;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Defs: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Defs: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Defs: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void dumpNode(com.caverock.androidsvg.SVG$SvgObject, java.lang.String)
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgObject $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        boolean $z0;
        com.caverock.androidsvg.SVG$SvgConditionalContainer $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgObject;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SVGParser", $r4);

        $z0 = $r1 instanceof com.caverock.androidsvg.SVG$SvgConditionalContainer;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = (com.caverock.androidsvg.SVG$SvgConditionalContainer) $r1;

        $r6 = $r5.<com.caverock.androidsvg.SVG$SvgConditionalContainer: java.util.List children>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (com.caverock.androidsvg.SVG$SvgObject) $r8;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void dumpNode(com.caverock.androidsvg.SVG$SvgObject,java.lang.String)>($r1, $r2);

        goto label1;

     label2:
        return;
    }
    private void ellipse(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Ellipse r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<ellipse>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Ellipse;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Ellipse: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesEllipse(com.caverock.androidsvg.SVG$Ellipse,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private static com.caverock.androidsvg.SVG$Style$FontStyle fontStyleKeyword(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        com.caverock.androidsvg.SVG$Style$FontStyle r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = "italic";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r2 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Italic>;

        return r2;

     label1:
        $r1 = "normal";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r2 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Normal>;

        return r2;

     label2:
        $r1 = "oblique";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r2 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Oblique>;

        return r2;

     label3:
        return null;
    }
    private void g(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Group r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<g>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Group;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Group: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Group: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Group: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private static int hslToRgb(float, float, float)
    {
        float f0, $f1, $f2, $f3, $f4;
        byte $b0;
        int $i1, $i2;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f3 := @parameter2: float;

        $b0 = $f1 cmpl 0.0F;

        if $b0 < 0 goto label5;

        $f1 = $f1 % 360.0F;

     label1:
        $f1 = $f1 / 60.0F;

        $f2 = $f2 / 100.0F;

        $f3 = $f3 / 100.0F;

        $b0 = $f2 cmpg 0.0F;

        if $b0 >= 0 goto label6;

        $f2 = 0.0F;

     label2:
        $b0 = $f3 cmpg 0.0F;

        if $b0 >= 0 goto label7;

        $f3 = 0.0F;

     label3:
        $b0 = $f3 cmpg 0.5F;

        if $b0 > 0 goto label8;

        $f2 = $f2 + 1.0F;

        $f2 = $f3 * $f2;

     label4:
        $f3 = $f3 * 2.0F;

        f0 = $f3 - $f2;

        $f3 = $f1 + 2.0F;

        $f4 = staticinvoke <com.caverock.androidsvg.SVGParser: float hueToRgb(float,float,float)>(f0, $f2, $f3);

        $f3 = staticinvoke <com.caverock.androidsvg.SVGParser: float hueToRgb(float,float,float)>(f0, $f2, $f1);

        $f1 = $f1 - 2.0F;

        $f1 = staticinvoke <com.caverock.androidsvg.SVGParser: float hueToRgb(float,float,float)>(f0, $f2, $f1);

        $f2 = $f4 * 256.0F;

        $i1 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f2);

        $i1 = $i1 << 16;

        $f2 = $f3 * 256.0F;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f2);

        $i2 = $i2 << 8;

        $i1 = $i1 | $i2;

        $f1 = $f1 * 256.0F;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f1);

        $i1 = $i1 | $i2;

        return $i1;

     label5:
        $f1 = $f1 % 360.0F;

        $f1 = $f1 + 360.0F;

        goto label1;

     label6:
        $b0 = $f2 cmpl 1.0F;

        if $b0 <= 0 goto label2;

        $f2 = 1.0F;

        goto label2;

     label7:
        $b0 = $f3 cmpl 1.0F;

        if $b0 <= 0 goto label3;

        $f3 = 1.0F;

        goto label3;

     label8:
        f0 = $f3 + $f2;

        $f2 = $f3 * $f2;

        $f2 = f0 - $f2;

        goto label4;
    }
    private static float hueToRgb(float, float, float)
    {
        float $f0, f1, $f2;
        byte $b0;

        $f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $b0 = $f2 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f2 = $f2 + 6.0F;

     label1:
        $b0 = $f2 cmpl 6.0F;

        if $b0 < 0 goto label2;

        $f2 = $f2 - 6.0F;

     label2:
        $b0 = $f2 cmpg 1.0F;

        if $b0 >= 0 goto label3;

        f1 = f1 - $f0;

        f1 = f1 * $f2;

        $f0 = f1 + $f0;

        return $f0;

     label3:
        $b0 = $f2 cmpg 3.0F;

        if $b0 < 0 goto label5;

        $b0 = $f2 cmpg 4.0F;

        if $b0 >= 0 goto label4;

        f1 = f1 - $f0;

        $f2 = 4.0F - $f2;

        f1 = f1 * $f2;

        $f0 = f1 + $f0;

     label4:
        return $f0;

     label5:
        return f1;
    }
    private void image(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Image r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<image>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Image;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Image: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesImage(com.caverock.androidsvg.SVG$Image,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void line(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Line r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<line>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Line;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Line: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesLine(com.caverock.androidsvg.SVG$Line,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private void linearGradient(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$SvgLinearGradient r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<linearGradient>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$SvgLinearGradient;

        specialinvoke r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesGradient(com.caverock.androidsvg.SVG$GradientElement,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesLinearGradient(com.caverock.androidsvg.SVG$SvgLinearGradient,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void marker(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Marker r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<marker>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Marker;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Marker: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesMarker(com.caverock.androidsvg.SVG$Marker,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void mask(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Mask r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<mask>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Mask;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Mask: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesMask(com.caverock.androidsvg.SVG$Mask,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void parseAttributesCircle(com.caverock.androidsvg.SVG$Circle, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Circle $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Circle;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label6;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label5;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cx> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length cy> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length r> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Circle: com.caverock.androidsvg.SVG$Length r>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <circle> element. r cannot be negative");

        throw $r8;

     label6:
        return;
    }
    private void parseAttributesClipPath(com.caverock.androidsvg.SVG$ClipPath, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$ClipPath $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$ClipPath;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label6;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 38: goto label3;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r5 = "objectBoundingBox";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$ClipPath: java.lang.Boolean clipPathUnitsAreUser> = $r7;

        goto label2;

     label4:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$ClipPath: java.lang.Boolean clipPathUnitsAreUser> = $r7;

        goto label2;

     label5:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute clipPathUnits");

        throw $r8;

     label6:
        return;
    }
    private void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgConditional $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        java.util.Set $r7;
        java.util.List $r8;
        java.util.HashSet r9;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgConditional;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label10;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 21: goto label03;
            case 22: goto label04;
            case 23: goto label05;
            case 24: goto label06;
            case 25: goto label07;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.Set parseRequiredFeatures(java.lang.String)>($r3);

        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgConditional: void setRequiredFeatures(java.util.Set)>($r7);

        goto label02;

     label04:
        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgConditional: void setRequiredExtensions(java.lang.String)>($r3);

        goto label02;

     label05:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.Set parseSystemLanguage(java.lang.String)>($r3);

        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgConditional: void setSystemLanguage(java.util.Set)>($r7);

        goto label02;

     label06:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.Set parseRequiredFormats(java.lang.String)>($r3);

        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgConditional: void setRequiredFormats(java.util.Set)>($r7);

        goto label02;

     label07:
        $r8 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseFontFamily(java.lang.String)>($r3);

        if $r8 == null goto label09;

        r9 = new java.util.HashSet;

        specialinvoke r9.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

     label08:
        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$SvgConditional: void setRequiredFonts(java.util.Set)>(r9);

        goto label02;

     label09:
        r9 = new java.util.HashSet;

        specialinvoke r9.<java.util.HashSet: void <init>(int)>(0);

        goto label08;

     label10:
        return;
    }
    private void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgElementBase $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.Boolean $r5;
        org.xml.sax.SAXException $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElementBase;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label7;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("xml:id");

        if $z0 == 0 goto label3;

     label2:
        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r1.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.String id> = $r3;

        return;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("xml:space");

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = "default";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r1.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.Boolean spacePreserve> = $r5;

        return;

     label4:
        $r4 = "preserve";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1.<com.caverock.androidsvg.SVG$SvgElementBase: java.lang.Boolean spacePreserve> = $r5;

        return;

     label5:
        $r6 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for \"xml:space\" attribute: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label6:
        i0 = i0 + 1;

        goto label1;

     label7:
        return;
    }
    private void parseAttributesEllipse(com.caverock.androidsvg.SVG$Ellipse, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Ellipse $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Ellipse;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label7;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 10: goto label5;
            case 11: goto label6;
            case 12: goto label3;
            case 13: goto label4;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cx> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length cy> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length rx> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length rx>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <ellipse> element. rx cannot be negative");

        throw $r8;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length ry> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Ellipse: com.caverock.androidsvg.SVG$Length ry>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <ellipse> element. ry cannot be negative");

        throw $r8;

     label7:
        return;
    }
    private void parseAttributesGradient(com.caverock.androidsvg.SVG$GradientElement, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$GradientElement $r1;
        org.xml.sax.Attributes $r2;
        java.lang.IllegalArgumentException r3;
        int i0, $i1;
        java.lang.String $r4, $r6, $r13;
        int[] $r5;
        com.caverock.androidsvg.SVGParser$SVGAttr $r7;
        boolean $z0;
        java.lang.Boolean $r8;
        org.xml.sax.SAXException $r9;
        android.graphics.Matrix $r10;
        com.caverock.androidsvg.SVG$GradientSpread $r11;
        java.lang.StringBuilder $r12;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$GradientElement;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label12;

        $r4 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r5 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r6 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r6);

        $i1 = virtualinvoke $r7.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r5[$i1];

        lookupswitch($i1)
        {
            case 6: goto label10;
            case 32: goto label03;
            case 33: goto label06;
            case 34: goto label07;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r6 = "objectBoundingBox";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label04;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$GradientElement: java.lang.Boolean gradientUnitsAreUser> = $r8;

        goto label02;

     label04:
        $r6 = "userSpaceOnUse";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label05;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$GradientElement: java.lang.Boolean gradientUnitsAreUser> = $r8;

        goto label02;

     label05:
        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute gradientUnits");

        throw $r9;

     label06:
        $r10 = specialinvoke r0.<com.caverock.androidsvg.SVGParser: android.graphics.Matrix parseTransformList(java.lang.String)>($r4);

        $r1.<com.caverock.androidsvg.SVG$GradientElement: android.graphics.Matrix gradientTransform> = $r10;

        goto label02;

     label07:
        $r11 = staticinvoke <com.caverock.androidsvg.SVG$GradientSpread: com.caverock.androidsvg.SVG$GradientSpread valueOf(java.lang.String)>($r4);

     label08:
        $r1.<com.caverock.androidsvg.SVG$GradientElement: com.caverock.androidsvg.SVG$GradientSpread spreadMethod> = $r11;

        goto label02;

     label09:
        r3 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid spreadMethod attribute. \"");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a valid value.");

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r4);

        throw $r9;

     label10:
        $r6 = "";

        $r13 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label11;

        $r6 = "http://www.w3.org/1999/xlink";

        $r13 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label02;

     label11:
        $r1.<com.caverock.androidsvg.SVG$GradientElement: java.lang.String href> = $r4;

        goto label02;

     label12:
        return;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }
    private void parseAttributesImage(com.caverock.androidsvg.SVG$Image, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Image $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r9;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Image;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label10;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label02;
            case 6: goto label07;
            case 7: goto label09;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length x> = $r7;

        goto label02;

     label04:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length y> = $r7;

        goto label02;

     label05:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length width> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <use> element. width cannot be negative");

        throw $r8;

     label06:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length height> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Image: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <use> element. height cannot be negative");

        throw $r8;

     label07:
        $r5 = "";

        $r9 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label08;

        $r5 = "http://www.w3.org/1999/xlink";

        $r9 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label02;

     label08:
        $r1.<com.caverock.androidsvg.SVG$Image: java.lang.String href> = $r3;

        goto label02;

     label09:
        staticinvoke <com.caverock.androidsvg.SVGParser: void parsePreserveAspectRatio(com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer,java.lang.String)>($r1, $r3);

        goto label02;

     label10:
        return;
    }
    private void parseAttributesLine(com.caverock.androidsvg.SVG$Line, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Line $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Line;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label7;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 15: goto label3;
            case 16: goto label4;
            case 17: goto label5;
            case 18: goto label6;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x1> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y1> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length x2> = $r7;

        goto label2;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Line: com.caverock.androidsvg.SVG$Length y2> = $r7;

        goto label2;

     label7:
        return;
    }
    private void parseAttributesLinearGradient(com.caverock.androidsvg.SVG$SvgLinearGradient, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgLinearGradient $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgLinearGradient;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label7;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 15: goto label3;
            case 16: goto label4;
            case 17: goto label5;
            case 18: goto label6;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x1> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y1> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length x2> = $r7;

        goto label2;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgLinearGradient: com.caverock.androidsvg.SVG$Length y2> = $r7;

        goto label2;

     label7:
        return;
    }
    private void parseAttributesMarker(com.caverock.androidsvg.SVG$Marker, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Marker $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;
        java.lang.Float $r9;
        float $f0;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Marker;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label12;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 26: goto label03;
            case 27: goto label04;
            case 28: goto label05;
            case 29: goto label06;
            case 30: goto label07;
            case 31: goto label10;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refX> = $r7;

        goto label02;

     label04:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length refY> = $r7;

        goto label02;

     label05:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerWidth> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerWidth>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <marker> element. markerWidth cannot be negative");

        throw $r8;

     label06:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerHeight> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Marker: com.caverock.androidsvg.SVG$Length markerHeight>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <marker> element. markerHeight cannot be negative");

        throw $r8;

     label07:
        $r5 = "strokeWidth";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label08;

        $r1.<com.caverock.androidsvg.SVG$Marker: boolean markerUnitsAreUser> = 0;

        goto label02;

     label08:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label09;

        $r1.<com.caverock.androidsvg.SVG$Marker: boolean markerUnitsAreUser> = 1;

        goto label02;

     label09:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute markerUnits");

        throw $r8;

     label10:
        $r5 = "auto";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label11;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(#NaNF);

        $r1.<com.caverock.androidsvg.SVG$Marker: java.lang.Float orient> = $r9;

        goto label02;

     label11:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String)>($r3);

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1.<com.caverock.androidsvg.SVG$Marker: java.lang.Float orient> = $r9;

        goto label02;

     label12:
        return;
    }
    private void parseAttributesMask(com.caverock.androidsvg.SVG$Mask, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Mask $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        org.xml.sax.SAXException $r8;
        com.caverock.androidsvg.SVG$Length $r9;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Mask;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label13;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            case 43: goto label03;
            case 44: goto label06;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r5 = "objectBoundingBox";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskUnitsAreUser> = $r7;

        goto label02;

     label04:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskUnitsAreUser> = $r7;

        goto label02;

     label05:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute maskUnits");

        throw $r8;

     label06:
        $r5 = "objectBoundingBox";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskContentUnitsAreUser> = $r7;

        goto label02;

     label07:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label08;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$Mask: java.lang.Boolean maskContentUnitsAreUser> = $r7;

        goto label02;

     label08:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute maskContentUnits");

        throw $r8;

     label09:
        $r9 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length x> = $r9;

        goto label02;

     label10:
        $r9 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length y> = $r9;

        goto label02;

     label11:
        $r9 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width> = $r9;

        $r9 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r9.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <mask> element. width cannot be negative");

        throw $r8;

     label12:
        $r9 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height> = $r9;

        $r9 = $r1.<com.caverock.androidsvg.SVG$Mask: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r9.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <mask> element. height cannot be negative");

        throw $r8;

     label13:
        return;
    }
    private void parseAttributesPath(com.caverock.androidsvg.SVG$Path, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Path $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$PathDefinition $r7;
        float $f0;
        java.lang.Float $r8;
        byte $b2;
        org.xml.sax.SAXException $r9;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Path;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label5;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 8: goto label3;
            case 9: goto label4;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$PathDefinition parsePath(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$PathDefinition d> = $r7;

        goto label2;

     label4:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String)>($r3);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1.<com.caverock.androidsvg.SVG$Path: java.lang.Float pathLength> = $r8;

        $r8 = $r1.<com.caverock.androidsvg.SVG$Path: java.lang.Float pathLength>;

        $f0 = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

        $b2 = $f0 cmpg 0.0F;

        if $b2 >= 0 goto label2;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <path> element. pathLength cannot be negative");

        throw $r9;

     label5:
        return;
    }
    private void parseAttributesPattern(com.caverock.androidsvg.SVG$Pattern, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Pattern $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r11;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        org.xml.sax.SAXException $r8;
        android.graphics.Matrix $r9;
        com.caverock.androidsvg.SVG$Length $r10;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Pattern;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label16;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label13;
            case 6: goto label14;
            case 40: goto label03;
            case 41: goto label06;
            case 42: goto label09;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r5 = "objectBoundingBox";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser> = $r7;

        goto label02;

     label04:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternUnitsAreUser> = $r7;

        goto label02;

     label05:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute patternUnits");

        throw $r8;

     label06:
        $r5 = "objectBoundingBox";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser> = $r7;

        goto label02;

     label07:
        $r5 = "userSpaceOnUse";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label08;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.Boolean patternContentUnitsAreUser> = $r7;

        goto label02;

     label08:
        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid value for attribute patternContentUnits");

        throw $r8;

     label09:
        $r9 = specialinvoke r0.<com.caverock.androidsvg.SVGParser: android.graphics.Matrix parseTransformList(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Pattern: android.graphics.Matrix patternTransform> = $r9;

        goto label02;

     label10:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length x> = $r10;

        goto label02;

     label11:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length y> = $r10;

        goto label02;

     label12:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width> = $r10;

        $r10 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <pattern> element. width cannot be negative");

        throw $r8;

     label13:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height> = $r10;

        $r10 = $r1.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r10.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label02;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <pattern> element. height cannot be negative");

        throw $r8;

     label14:
        $r5 = "";

        $r11 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label15;

        $r5 = "http://www.w3.org/1999/xlink";

        $r11 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label02;

     label15:
        $r1.<com.caverock.androidsvg.SVG$Pattern: java.lang.String href> = $r3;

        goto label02;

     label16:
        return;
    }
    private void parseAttributesPolyLine(com.caverock.androidsvg.SVG$PolyLine, org.xml.sax.Attributes, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$PolyLine $r1;
        org.xml.sax.Attributes $r2;
        java.lang.String $r3, $r6;
        int i0, i1, i2;
        java.util.ArrayList r4;
        com.caverock.androidsvg.SVGParser$TextScanner r5;
        com.caverock.androidsvg.SVGParser$SVGAttr $r7, $r8;
        boolean $z0;
        float $f0, $f1;
        org.xml.sax.SAXException $r9;
        java.lang.StringBuilder $r10;
        java.lang.Float $r11;
        float[] $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$PolyLine;

        $r2 := @parameter1: org.xml.sax.Attributes;

        $r3 := @parameter2: java.lang.String;

        i1 = 0;

     label1:
        i0 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i1 >= i0 goto label8;

        $r6 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);

        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r6);

        $r8 = <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr points>;

        if $r7 != $r8 goto label7;

        r5 = new com.caverock.androidsvg.SVGParser$TextScanner;

        $r6 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        specialinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r6);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

     label2:
        $z0 = virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label5;

        $f0 = virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label3;

        $r9 = new org.xml.sax.SAXException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid <");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> points attribute. Non-coordinate content found in list.");

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label3:
        virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f1 = virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z0 == 0 goto label4;

        $r9 = new org.xml.sax.SAXException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid <");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> points attribute. There should be an even number of coordinates.");

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label4:
        virtualinvoke r5.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label2;

     label5:
        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r12 = newarray (float)[i0];

        $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points> = $r12;

        i2 = 0;

        $r13 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.Float) $r14;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $r12 = $r1.<com.caverock.androidsvg.SVG$PolyLine: float[] points>;

        $r12[i2] = $f0;

        i2 = i2 + 1;

        goto label6;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return;
    }
    private void parseAttributesRadialGradient(com.caverock.androidsvg.SVG$SvgRadialGradient, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgRadialGradient $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgRadialGradient;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label8;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label5;
            case 35: goto label6;
            case 36: goto label7;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cx> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length cy> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length r>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <radialGradient> element. r cannot be negative");

        throw $r8;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fx> = $r7;

        goto label2;

     label7:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$Length fy> = $r7;

        goto label2;

     label8:
        return;
    }
    private void parseAttributesRect(com.caverock.androidsvg.SVG$Rect, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Rect $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Rect;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label9;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label7;
            case 11: goto label8;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length x> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length y> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <rect> element. width cannot be negative");

        throw $r8;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <rect> element. height cannot be negative");

        throw $r8;

     label7:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length rx>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <rect> element. rx cannot be negative");

        throw $r8;

     label8:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$Length ry>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <rect> element. ry cannot be negative");

        throw $r8;

     label9:
        return;
    }
    private void parseAttributesSVG(com.caverock.androidsvg.SVG$Svg, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Svg $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Svg;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label8;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length x> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length y> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <svg> element. width cannot be negative");

        throw $r8;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <svg> element. height cannot be negative");

        throw $r8;

     label7:
        $r1.<com.caverock.androidsvg.SVG$Svg: java.lang.String version> = $r3;

        goto label2;

     label8:
        return;
    }
    private void parseAttributesStop(com.caverock.androidsvg.SVG$Stop, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Stop $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        java.lang.Float $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Stop;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label4;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 37: goto label3;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = specialinvoke r0.<com.caverock.androidsvg.SVGParser: java.lang.Float parseGradientOffset(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Stop: java.lang.Float offset> = $r7;

        goto label2;

     label4:
        return;
    }
    private void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgElementBase $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Style $r7;
        java.util.List $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgElementBase;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label8;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 45: goto label6;
            case 46: goto label7;
            default: goto label4;
        };

     label4:
        $r7 = $r1.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style baseStyle>;

        if $r7 != null goto label5;

        $r7 = new com.caverock.androidsvg.SVG$Style;

        specialinvoke $r7.<com.caverock.androidsvg.SVG$Style: void <init>()>();

        $r1.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style baseStyle> = $r7;

     label5:
        $r7 = $r1.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style baseStyle>;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        staticinvoke <com.caverock.androidsvg.SVGParser: void processStyleProperty(com.caverock.androidsvg.SVG$Style,java.lang.String,java.lang.String)>($r7, $r3, $r5);

        goto label2;

     label6:
        staticinvoke <com.caverock.androidsvg.SVGParser: void parseStyle(com.caverock.androidsvg.SVG$SvgElementBase,java.lang.String)>($r1, $r3);

        goto label2;

     label7:
        $r8 = staticinvoke <com.caverock.androidsvg.CSSParser: java.util.List parseClassAttribute(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgElementBase: java.util.List classNames> = $r8;

        goto label2;

     label8:
        return;
    }
    private void parseAttributesTRef(com.caverock.androidsvg.SVG$TRef, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$TRef $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r7;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        boolean $z0;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TRef;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label5;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 6: goto label3;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r5 = "";

        $r7 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label4;

        $r5 = "http://www.w3.org/1999/xlink";

        $r7 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

     label4:
        $r1.<com.caverock.androidsvg.SVG$TRef: java.lang.String href> = $r3;

        goto label2;

     label5:
        return;
    }
    private void parseAttributesTextPath(com.caverock.androidsvg.SVG$TextPath, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$TextPath $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r7;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        boolean $z0;
        com.caverock.androidsvg.SVG$Length $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextPath;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label6;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 6: goto label3;
            case 39: goto label5;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r5 = "";

        $r7 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label4;

        $r5 = "http://www.w3.org/1999/xlink";

        $r7 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

     label4:
        $r1.<com.caverock.androidsvg.SVG$TextPath: java.lang.String href> = $r3;

        goto label2;

     label5:
        $r8 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$Length startOffset> = $r8;

        goto label2;

     label6:
        return;
    }
    private void parseAttributesTextPosition(com.caverock.androidsvg.SVG$TextPositionedContainer, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$TextPositionedContainer $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        java.util.List $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$TextPositionedContainer;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label7;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 19: goto label5;
            case 20: goto label6;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseLengthList(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$TextPositionedContainer: java.util.List x> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseLengthList(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$TextPositionedContainer: java.util.List y> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseLengthList(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$TextPositionedContainer: java.util.List dx> = $r7;

        goto label2;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseLengthList(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$TextPositionedContainer: java.util.List dy> = $r7;

        goto label2;

     label7:
        return;
    }
    private void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$HasTransform $r1;
        org.xml.sax.Attributes $r2;
        com.caverock.androidsvg.SVGParser$SVGAttr $r3, $r5;
        int i0, $i1;
        java.lang.String $r4;
        android.graphics.Matrix $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$HasTransform;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label3;

        $r4 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r4);

        $r3 = <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr transform>;

        if $r5 != $r3 goto label2;

        $r4 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r6 = specialinvoke r0.<com.caverock.androidsvg.SVGParser: android.graphics.Matrix parseTransformList(java.lang.String)>($r4);

        interfaceinvoke $r1.<com.caverock.androidsvg.SVG$HasTransform: void setTransform(android.graphics.Matrix)>($r6);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    private void parseAttributesUse(com.caverock.androidsvg.SVG$Use, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$Use $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r9;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Length $r7;
        boolean $z0;
        org.xml.sax.SAXException $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$Use;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label9;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label2;
            case 6: goto label7;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length x> = $r7;

        goto label2;

     label4:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length y> = $r7;

        goto label2;

     label5:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length width>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <use> element. width cannot be negative");

        throw $r8;

     label6:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height> = $r7;

        $r7 = $r1.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$Length height>;

        $z0 = virtualinvoke $r7.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid <use> element. height cannot be negative");

        throw $r8;

     label7:
        $r5 = "";

        $r9 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label8;

        $r5 = "http://www.w3.org/1999/xlink";

        $r9 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

     label8:
        $r1.<com.caverock.androidsvg.SVG$Use: java.lang.String href> = $r3;

        goto label2;

     label9:
        return;
    }
    private void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG$SvgViewBoxContainer $r1;
        org.xml.sax.Attributes $r2;
        int i0, $i1;
        java.lang.String $r3, $r5;
        int[] $r4;
        com.caverock.androidsvg.SVGParser$SVGAttr $r6;
        com.caverock.androidsvg.SVG$Box $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: com.caverock.androidsvg.SVG$SvgViewBoxContainer;

        $r2 := @parameter1: org.xml.sax.Attributes;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label5;

        $r3 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r4 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r5 = interfaceinvoke $r2.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r5);

        $i1 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r4[$i1];

        lookupswitch($i1)
        {
            case 7: goto label4;
            case 87: goto label3;
            default: goto label2;
        };

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Box parseViewBox(java.lang.String)>($r3);

        $r1.<com.caverock.androidsvg.SVG$SvgViewBoxContainer: com.caverock.androidsvg.SVG$Box viewBox> = $r7;

        goto label2;

     label4:
        staticinvoke <com.caverock.androidsvg.SVGParser: void parsePreserveAspectRatio(com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer,java.lang.String)>($r1, $r3);

        goto label2;

     label5:
        return;
    }
    private void parseCSSStyleSheet(java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1;
        com.caverock.androidsvg.CSSParser r2;
        com.caverock.androidsvg.CSSParser$Ruleset $r3;
        com.caverock.androidsvg.CSSParser$MediaType $r4;
        com.caverock.androidsvg.SVG $r5;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.CSSParser;

        $r4 = <com.caverock.androidsvg.CSSParser$MediaType: com.caverock.androidsvg.CSSParser$MediaType screen>;

        specialinvoke r2.<com.caverock.androidsvg.CSSParser: void <init>(com.caverock.androidsvg.CSSParser$MediaType)>($r4);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.CSSParser: com.caverock.androidsvg.CSSParser$Ruleset parse(java.lang.String)>($r1);

        virtualinvoke $r5.<com.caverock.androidsvg.SVG: void addCSSRules(com.caverock.androidsvg.CSSParser$Ruleset)>($r3);

        return;
    }
    private static com.caverock.androidsvg.SVG$CSSClipRect parseClip(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r2;
        com.caverock.androidsvg.SVGParser$TextScanner r1;
        boolean $z0;
        java.util.Locale $r3;
        org.xml.sax.SAXException $r4;
        com.caverock.androidsvg.SVG$Length $r5, $r6, $r7, $r8;
        java.lang.StringBuilder $r9;
        com.caverock.androidsvg.SVG$CSSClipRect $r10;

        $r0 := @parameter0: java.lang.String;

        $r2 = "auto";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("rect(");

        if $z0 != 0 goto label2;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid clip attribute shape. Only rect() is supported.");

        throw $r4;

     label2:
        r1 = new com.caverock.androidsvg.SVGParser$TextScanner;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(5);

        specialinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r2);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLengthOrAuto(com.caverock.androidsvg.SVGParser$TextScanner)>(r1);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLengthOrAuto(com.caverock.androidsvg.SVGParser$TextScanner)>(r1);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLengthOrAuto(com.caverock.androidsvg.SVGParser$TextScanner)>(r1);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $r8 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLengthOrAuto(com.caverock.androidsvg.SVGParser$TextScanner)>(r1);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label3;

        $r4 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rect() clip definition: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label3:
        $r10 = new com.caverock.androidsvg.SVG$CSSClipRect;

        specialinvoke $r10.<com.caverock.androidsvg.SVG$CSSClipRect: void <init>(com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length,com.caverock.androidsvg.SVG$Length)>($r5, $r6, $r7, $r8);

        return $r10;
    }
    private static com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        java.lang.String $r0, $r6;
        int i0, $i2, i3, i4, $i5;
        char $c1;
        com.caverock.androidsvg.IntegerParser $r1;
        com.caverock.androidsvg.SVGParseException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Colour $r4;
        java.util.Locale $r5;
        boolean $z0, $z1;
        com.caverock.androidsvg.SVGParser$TextScanner r7;
        byte $b6;
        float $f0, f1, $f2, $f3;

        $r0 := @parameter0: java.lang.String;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label07;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = staticinvoke <com.caverock.androidsvg.IntegerParser: com.caverock.androidsvg.IntegerParser parseHex(java.lang.String,int,int)>($r0, 1, $i2);

        if $r1 != null goto label01;

        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad hex colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label01:
        $i2 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int getEndPos()>();

        lookupswitch($i2)
        {
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label02;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label06;
            default: goto label02;
        };

     label02:
        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad hex colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label03:
        $i2 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int value()>();

        i3 = $i2 & 3840;

        i4 = $i2 & 240;

        $i2 = $i2 & 15;

        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i5 = i3 << 12;

        $i5 = -16777216 | $i5;

        i3 = i3 << 8;

        i3 = $i5 | i3;

        $i5 = i4 << 8;

        i3 = i3 | $i5;

        i4 = i4 << 4;

        i4 = i3 | i4;

        i3 = $i2 << 4;

        i4 = i4 | i3;

        $i2 = i4 | $i2;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label04:
        $i5 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int value()>();

        i3 = $i5 & 61440;

        i4 = $i5 & 3840;

        $i2 = $i5 & 240;

        i0 = $i5 & 15;

        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i5 = i0 << 28;

        i0 = i0 << 24;

        $i5 = $i5 | i0;

        i0 = i3 << 8;

        $i5 = $i5 | i0;

        i3 = i3 << 4;

        i3 = $i5 | i3;

        $i5 = i4 << 4;

        i3 = i3 | $i5;

        i4 = i3 | i4;

        i4 = i4 | $i2;

        $i2 = $i2 >> 4;

        $i2 = i4 | $i2;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label05:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i2 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int value()>();

        $i2 = -16777216 | $i2;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label06:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i2 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int value()>();

        $i2 = $i2 << 24;

        i4 = virtualinvoke $r1.<com.caverock.androidsvg.IntegerParser: int value()>();

        i4 = i4 >>> 8;

        $i2 = $i2 | i4;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label07:
        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("rgba(");

        if $z0 != 0 goto label08;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("rgb(");

        if $z1 == 0 goto label19;

     label08:
        r7 = new com.caverock.androidsvg.SVGParser$TextScanner;

        if $z0 == 0 goto label14;

        $b6 = 5;

     label09:
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($b6);

        specialinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r6);

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f1 = $f0;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z1 != 0 goto label10;

        $z1 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(37);

        if $z1 == 0 goto label10;

        f1 = 256.0F * $f0;

        f1 = f1 / 100.0F;

     label10:
        $f2 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f1);

        $f0 = $f2;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z1 != 0 goto label11;

        $z1 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(37);

        if $z1 == 0 goto label11;

        $f0 = 256.0F * $f2;

        $f0 = $f0 / 100.0F;

     label11:
        $f3 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f0);

        $f2 = $f3;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z1 != 0 goto label12;

        $z1 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(37);

        if $z1 == 0 goto label12;

        $f2 = 256.0F * $f3;

        $f2 = $f2 / 100.0F;

     label12:
        if $z0 == 0 goto label16;

        $f3 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f2);

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label15;

     label13:
        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rgba() colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label14:
        $b6 = 4;

        goto label09;

     label15:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $f3 = 256.0F * $f3;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f3);

        $i2 = $i2 << 24;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>(f1);

        i4 = i4 << 16;

        $i2 = $i2 | i4;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f0);

        i4 = i4 << 8;

        $i2 = $i2 | i4;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f2);

        $i2 = $i2 | i4;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label16:
        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z0 != 0 goto label17;

        $z0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label18;

     label17:
        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rgb() colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label18:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>(f1);

        $i2 = $i2 << 16;

        $i2 = -16777216 | $i2;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f0);

        i4 = i4 << 8;

        $i2 = $i2 | i4;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f2);

        $i2 = $i2 | i4;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label19:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("hsla(");

        if $z0 != 0 goto label20;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("hsl(");

        if $z1 == 0 goto label30;

     label20:
        r7 = new com.caverock.androidsvg.SVGParser$TextScanner;

        if $z0 == 0 goto label25;

        $b6 = 5;

     label21:
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($b6);

        specialinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r6);

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        f1 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f1);

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z1 != 0 goto label22;

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(37);

     label22:
        $f2 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f0);

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z1 != 0 goto label23;

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(37);

     label23:
        if $z0 == 0 goto label27;

        $f3 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f2);

        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z0 != 0 goto label24;

        $z0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label26;

     label24:
        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad hsla() colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label25:
        $b6 = 4;

        goto label21;

     label26:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $f3 = 256.0F * $f3;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int clamp255(float)>($f3);

        $i2 = $i2 << 24;

        i4 = staticinvoke <com.caverock.androidsvg.SVGParser: int hslToRgb(float,float,float)>(f1, $f0, $f2);

        $i2 = $i2 | i4;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label27:
        virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z0 != 0 goto label28;

        $z0 = virtualinvoke r7.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label29;

     label28:
        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad hsl() colour value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label29:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i2 = staticinvoke <com.caverock.androidsvg.SVGParser: int hslToRgb(float,float,float)>(f1, $f0, $f2);

        $i2 = -16777216 | $i2;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i2);

        return $r4;

     label30:
        $r4 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColourKeyword(java.lang.String)>($r6);

        return $r4;
    }
    private static com.caverock.androidsvg.SVG$Colour parseColourKeyword(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        java.lang.String $r0;
        java.lang.Integer $r1;
        com.caverock.androidsvg.SVGParseException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Colour $r4;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser$ColourKeywords: java.lang.Integer get(java.lang.String)>($r0);

        if $r1 != null goto label1;

        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid colour keyword: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label1:
        $r4 = new com.caverock.androidsvg.SVG$Colour;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Colour: void <init>(int)>($i0);

        return $r4;
    }
    private static com.caverock.androidsvg.SVG$SvgPaint parseColourSpecifer(java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        java.lang.String $r0;
        byte $b0;
        int $i1;
        com.caverock.androidsvg.SVG$Colour $r1;
        boolean $z0;
        com.caverock.androidsvg.SVG$CurrentColor $r2;

        $r0 := @parameter0: java.lang.String;

        $b0 = -1;

        $i1 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 3387192: goto label3;
            case 1442907498: goto label4;
            default: goto label1;
        };

     label1:
        lookupswitch($b0)
        {
            case 0: goto label5;
            case 1: goto label6;
            default: goto label2;
        };

     label2:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String)>($r0);

        return $r1;

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label1;

     label4:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("currentColor");

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label1;

     label5:
        return null;

     label6:
        $r2 = staticinvoke <com.caverock.androidsvg.SVG$CurrentColor: com.caverock.androidsvg.SVG$CurrentColor getInstance()>();

        return $r2;
    }
    private static com.caverock.androidsvg.SVG$Style$FillRule parseFillRule(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$FillRule r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "nonzero";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$FillRule: com.caverock.androidsvg.SVG$Style$FillRule NonZero>;

        return r4;

     label1:
        $r1 = "evenodd";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$FillRule: com.caverock.androidsvg.SVG$Style$FillRule EvenOdd>;

        return r4;

     label2:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid fill-rule property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static float parseFloat(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        int $i0;
        org.xml.sax.SAXException $r1;
        float $f0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r1 = new org.xml.sax.SAXException;

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid float value (empty string)");

        throw $r1;

     label1:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String,int,int)>($r0, 0, $i0);

        return $f0;
    }
    private static float parseFloat(java.lang.String, int, int) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        int $i0, $i1;
        com.caverock.androidsvg.NumberParser r1;
        float $f0;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r1 = new com.caverock.androidsvg.NumberParser;

        specialinvoke r1.<com.caverock.androidsvg.NumberParser: void <init>()>();

        $f0 = virtualinvoke r1.<com.caverock.androidsvg.NumberParser: float parseNumber(java.lang.String,int,int)>($r0, $i0, $i1);

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label1;

        return $f0;

     label1:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid float value: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static void parseFont(com.caverock.androidsvg.SVG$Style, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVG$Style $r0;
        java.lang.String $r1, r5, $r6, $r8;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        java.lang.Integer r3, $r11;
        com.caverock.androidsvg.SVG$Style$FontStyle r4, $r12;
        java.lang.StringBuilder $r7;
        boolean $z0;
        org.xml.sax.SAXException $r9;
        com.caverock.androidsvg.SVG$Length $r10;
        java.util.List $r13;
        int $i0;
        long $l1;

        $r0 := @parameter0: com.caverock.androidsvg.SVG$Style;

        $r1 := @parameter1: java.lang.String;

        r3 = null;

        r4 = null;

        r5 = null;

        $r6 = "|caption|icon|menu|message-box|small-caption|status-bar|";

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>($r8);

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r1);

     label02:
        $r1 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken(char)>(47);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        if $r1 != null goto label03;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid font style attribute: missing font size and family");

        throw $r9;

     label03:
        if r3 == null goto label05;

        if r4 == null goto label05;

     label04:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseFontSize(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(47);

        if $z0 == 0 goto label09;

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $r1 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        if $r1 != null goto label08;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid font style attribute: missing line-height");

        throw $r9;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("normal");

        if $z0 != 0 goto label02;

        if r3 != null goto label06;

        $r11 = staticinvoke <com.caverock.androidsvg.SVGParser$FontWeightKeywords: java.lang.Integer get(java.lang.String)>($r1);

        r3 = $r11;

        if $r11 != null goto label02;

     label06:
        if r4 != null goto label07;

        $r12 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$FontStyle fontStyleKeyword(java.lang.String)>($r1);

        r4 = $r12;

        if $r12 != null goto label02;

     label07:
        if r5 != null goto label04;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("small-caps");

        if $z0 == 0 goto label04;

        r5 = $r1;

        goto label02;

     label08:
        staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r1);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

     label09:
        $r1 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String restOfText()>();

        $r13 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseFontFamily(java.lang.String)>($r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily> = $r13;

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize> = $r10;

        if r3 != null goto label12;

        $i0 = 400;

     label10:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = r3;

        if r4 != null goto label13;

        r4 = <com.caverock.androidsvg.SVG$Style$FontStyle: com.caverock.androidsvg.SVG$Style$FontStyle Normal>;

     label11:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle> = r4;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 122880L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label12:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        goto label10;

     label13:
        goto label11;
    }
    private static java.util.List parseFontFamily(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, r3;
        com.caverock.androidsvg.SVGParser$TextScanner r1;
        java.util.ArrayList r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r2 = null;

        r1 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

     label1:
        $r0 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextQuotedString()>();

        r3 = $r0;

        if $r0 != null goto label2;

        r3 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextTokenWithWhitespace(char)>(44);

     label2:
        if r3 != null goto label3;

        return r2;

     label3:
        if r2 != null goto label4;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label4:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $z0 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 == 0 goto label1;

        return r2;
    }
    private static com.caverock.androidsvg.SVG$Length parseFontSize(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        com.caverock.androidsvg.SVG$Length $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser$FontSizeKeywords: com.caverock.androidsvg.SVG$Length get(java.lang.String)>($r0);

        if $r1 != null goto label1;

        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r0);

     label1:
        return $r1;
    }
    private static com.caverock.androidsvg.SVG$Style$FontStyle parseFontStyle(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        org.xml.sax.SAXException $r1;
        com.caverock.androidsvg.SVG$Style$FontStyle $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$FontStyle fontStyleKeyword(java.lang.String)>($r0);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font-style property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }
    private static java.lang.Integer parseFontWeight(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        org.xml.sax.SAXException $r1;
        java.lang.Integer $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.caverock.androidsvg.SVGParser$FontWeightKeywords: java.lang.Integer get(java.lang.String)>($r0);

        if $r2 != null goto label1;

        $r1 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font-weight property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r1;

     label1:
        return $r2;
    }
    private static java.lang.String parseFunctionalIRI(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("url(");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z0 != 0 goto label3;

     label2:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute. Expected \"none\" or \"url()\" format");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(4, $i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;
    }
    private java.lang.Float parseGradientOffset(java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        int $i0, i1, $i2;
        org.xml.sax.SAXException $r3;
        boolean z0;
        char $c3;
        float $f0, f1;
        byte $b4;
        java.lang.Float $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid offset value in <stop> (empty string)");

        throw $r3;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = $i0;

        z0 = 0;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 37 goto label2;

        i1 = $i0 + -1;

        z0 = 1;

     label2:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String,int,int)>($r1, 0, i1);

     label3:
        f1 = $f0;

        if z0 == 0 goto label4;

        f1 = $f0 / 100.0F;

     label4:
        $b4 = f1 cmpg 0.0F;

        if $b4 >= 0 goto label7;

        f1 = 0.0F;

     label5:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

     label6:
        return $r4;

     label7:
        $b4 = f1 cmpl 100.0F;

        if $b4 <= 0 goto label5;

        f1 = 100.0F;

        goto label5;

     label8:
        r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid offset value in <stop>: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r1, r2);

        throw $r3;

        catch java.lang.NumberFormatException from label2 to label3 with label8;
        catch java.lang.NumberFormatException from label5 to label6 with label8;
    }
    static com.caverock.androidsvg.SVG$Length parseLength(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r4;
        int $i0, i1, $i2;
        org.xml.sax.SAXException $r1;
        com.caverock.androidsvg.SVG$Unit r2;
        char $c3;
        float $f0;
        com.caverock.androidsvg.SVG$Length $r3;
        boolean $z0;
        java.util.Locale $r5;
        java.lang.IllegalArgumentException r6;
        java.lang.StringBuilder $r7;
        java.lang.NumberFormatException r8;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r1 = new org.xml.sax.SAXException;

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid length value (empty string)");

        throw $r1;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = $i0;

        r2 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit px>;

        $i2 = $i0 + -1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 37 goto label06;

        i1 = $i0 + -1;

        r2 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit percent>;

     label02:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String,int,int)>($r0, 0, i1);

     label03:
        $r3 = new com.caverock.androidsvg.SVG$Length;

     label04:
        specialinvoke $r3.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>($f0, r2);

     label05:
        return $r3;

     label06:
        if $i0 <= 2 goto label02;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);

        if $z0 == 0 goto label02;

        $i2 = $i0 + -2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);

        if $z0 == 0 goto label02;

        i1 = $i0 + -2;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i1);

        $r5 = <java.util.Locale: java.util.Locale US>;

     label07:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        r2 = staticinvoke <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit valueOf(java.lang.String)>($r4);

     label08:
        goto label02;

     label09:
        r6 := @caughtexception;

        $r1 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid length unit specifier: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r1;

     label10:
        r8 := @caughtexception;

        $r1 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid length value: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r0, r8);

        throw $r1;

        catch java.lang.NumberFormatException from label02 to label03 with label10;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }
    private static java.util.List parseLengthList(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        java.util.ArrayList r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        int $i0;
        org.xml.sax.SAXException $r3;
        boolean $z0;
        float $f0;
        java.lang.StringBuilder $r4;
        com.caverock.androidsvg.SVG$Unit $r5, r6;
        com.caverock.androidsvg.SVG$Length $r7;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid length list (empty string)");

        throw $r3;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>(1);

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

     label2:
        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label5;

        $f0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label3;

        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid length list value: ");

        $r0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String ahead()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r3;

     label3:
        $r5 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: com.caverock.androidsvg.SVG$Unit nextUnit()>();

        r6 = $r5;

        if $r5 != null goto label4;

        r6 = <com.caverock.androidsvg.SVG$Unit: com.caverock.androidsvg.SVG$Unit px>;

     label4:
        $r7 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r7.<com.caverock.androidsvg.SVG$Length: void <init>(float,com.caverock.androidsvg.SVG$Unit)>($f0, r6);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        goto label2;

     label5:
        return r1;
    }
    private static com.caverock.androidsvg.SVG$Length parseLengthOrAuto(com.caverock.androidsvg.SVGParser$TextScanner)
    {
        com.caverock.androidsvg.SVGParser$TextScanner $r0;
        boolean $z0;
        com.caverock.androidsvg.SVG$Length $r1;

        $r0 := @parameter0: com.caverock.androidsvg.SVGParser$TextScanner;

        $z0 = virtualinvoke $r0.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(java.lang.String)>("auto");

        if $z0 == 0 goto label1;

        $r1 = new com.caverock.androidsvg.SVG$Length;

        specialinvoke $r1.<com.caverock.androidsvg.SVG$Length: void <init>(float)>(0.0F);

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<com.caverock.androidsvg.SVGParser$TextScanner: com.caverock.androidsvg.SVG$Length nextLength()>();

        return $r1;
    }
    private static float parseOpacity(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        byte $b0;
        float $f0;

        $r0 := @parameter0: java.lang.String;

        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String)>($r0);

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        return 0.0F;

     label1:
        $b0 = $f0 cmpl 1.0F;

        if $b0 <= 0 goto label2;

        return 1.0F;

     label2:
        return $f0;
    }
    private static java.lang.Boolean parseOverflow(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Boolean r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "visible";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "auto";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return r4;

     label2:
        $r1 = "hidden";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label3;

        $r1 = "scroll";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

     label3:
        r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return r4;

     label4:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid toverflow property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static com.caverock.androidsvg.SVG$SvgPaint parsePaintSpecifier(java.lang.String, java.lang.String) throws com.caverock.androidsvg.SVGParseException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;
        com.caverock.androidsvg.SVGParseException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$SvgPaint r4;
        com.caverock.androidsvg.SVG$PaintReference $r5;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("url(");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(")");

        if $i0 != -1 goto label1;

        $r2 = new com.caverock.androidsvg.SVGParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute. Unterminated url() reference");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(4, $i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        r4 = null;

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        r4 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgPaint parseColourSpecifer(java.lang.String)>($r1);

     label2:
        $r5 = new com.caverock.androidsvg.SVG$PaintReference;

        specialinvoke $r5.<com.caverock.androidsvg.SVG$PaintReference: void <init>(java.lang.String,com.caverock.androidsvg.SVG$SvgPaint)>($r0, r4);

        return $r5;

     label3:
        r4 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgPaint parseColourSpecifer(java.lang.String)>($r1);

        return r4;
    }
    private static com.caverock.androidsvg.SVG$PathDefinition parsePath(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        com.caverock.androidsvg.SVG$PathDefinition r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, f10, $f11, f12, $f13, $f14, $f15;
        boolean $z0, $z1;
        java.lang.Integer $r3;
        int $i0, i1;
        java.lang.Float $r4;
        java.lang.Boolean $r5, $r6;
        byte $b2;
        java.lang.StringBuilder $r7;
        char $c3;

        $r0 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        f0 = 0.0F;

        f1 = 0.0F;

        f2 = 0.0F;

        f3 = 0.0F;

        f4 = 0.0F;

        f5 = 0.0F;

        r1 = new com.caverock.androidsvg.SVG$PathDefinition;

        specialinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void <init>()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 == 0 goto label01;

        return r1;

     label01:
        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.Integer nextChar()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        i1 = $i0;

        if $i0 == 77 goto label02;

        if $i0 != 109 goto label35;

     label02:
        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        lookupswitch(i1)
        {
            case 65: goto label04;
            case 67: goto label14;
            case 72: goto label21;
            case 76: goto label11;
            case 77: goto label06;
            case 81: goto label27;
            case 83: goto label17;
            case 84: goto label30;
            case 86: goto label24;
            case 90: goto label20;
            case 97: goto label04;
            case 99: goto label14;
            case 104: goto label21;
            case 108: goto label11;
            case 109: goto label06;
            case 113: goto label27;
            case 115: goto label17;
            case 116: goto label30;
            case 118: goto label24;
            case 122: goto label20;
            default: goto label03;
        };

     label03:
        return r1;

     label04:
        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f6 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f4);

        $f7 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f6);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r5 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.Boolean checkedNextFlag(java.lang.Object)>($r4);

        $r6 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.Boolean checkedNextFlag(java.lang.Object)>($r5);

        $f8 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(java.lang.Boolean)>($r6);

        f5 = $f8;

        $f9 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f8);

        f10 = $f9;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f9);

        if $z0 != 0 goto label05;

        $b2 = f4 cmpg 0.0F;

        if $b2 < 0 goto label05;

        $b2 = $f6 cmpg 0.0F;

        if $b2 >= 0 goto label33;

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label06:
        f2 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f3 = f2;

        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f2);

        f10 = f4;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f4);

        if $z0 == 0 goto label07;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label07:
        if i1 != 109 goto label08;

        $z0 = virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        f3 = f2 + f0;

        f10 = f4 + f1;

     label08:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void moveTo(float,float)>(f3, f10);

        f4 = f3;

        f2 = f3;

        f0 = f3;

        f5 = f10;

        f3 = f10;

        f1 = f10;

        if i1 != 109 goto label10;

        i1 = 108;

     label09:
        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label35;

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean hasLetter()>();

        if $z0 == 0 goto label02;

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.Integer nextChar()>();

        i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        goto label02;

     label10:
        i1 = 76;

        goto label09;

     label11:
        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f5 = f4;

        $f6 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f4);

        f10 = $f6;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f6);

        if $z0 == 0 goto label12;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label12:
        if i1 != 108 goto label13;

        f5 = f4 + f0;

        f10 = $f6 + f1;

     label13:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void lineTo(float,float)>(f5, f10);

        f4 = f5;

        f0 = f5;

        f5 = f10;

        f1 = f10;

        goto label09;

     label14:
        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f7 = f4;

        $f8 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f4);

        $f9 = $f8;

        $f11 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f8);

        f12 = $f11;

        $f13 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f11);

        f5 = $f13;

        $f14 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f13);

        f10 = $f14;

        $f15 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f14);

        $f6 = $f15;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f15);

        if $z0 == 0 goto label15;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label15:
        if i1 != 99 goto label16;

        f10 = $f14 + f0;

        $f6 = $f15 + f1;

        $f7 = f4 + f0;

        $f9 = $f8 + f1;

        f12 = $f11 + f0;

        f5 = $f13 + f1;

     label16:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void cubicTo(float,float,float,float,float,float)>($f7, $f9, f12, f5, f10, $f6);

        f4 = f12;

        f0 = f10;

        f1 = $f6;

        goto label09;

     label17:
        f10 = 2.0F * f0;

        f4 = f10 - f4;

        f10 = 2.0F * f1;

        $f7 = f10 - f5;

        $f8 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f9 = $f8;

        $f11 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f8);

        f5 = $f11;

        f12 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f11);

        f10 = f12;

        $f13 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f12);

        $f6 = $f13;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f13);

        if $z0 == 0 goto label18;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label18:
        if i1 != 115 goto label19;

        f10 = f12 + f0;

        $f6 = $f13 + f1;

        $f9 = $f8 + f0;

        f5 = $f11 + f1;

     label19:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void cubicTo(float,float,float,float,float,float)>(f4, $f7, $f9, f5, f10, $f6);

        f4 = $f9;

        f0 = f10;

        f1 = $f6;

        goto label09;

     label20:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void close()>();

        f4 = f2;

        f0 = f2;

        f5 = f3;

        f1 = f3;

        goto label09;

     label21:
        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f10 = f4;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f4);

        if $z0 == 0 goto label22;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label22:
        if i1 != 104 goto label23;

        f10 = f4 + f0;

     label23:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void lineTo(float,float)>(f10, f1);

        f4 = f10;

        f0 = f10;

        goto label09;

     label24:
        f5 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f10 = f5;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f5);

        if $z0 == 0 goto label25;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label25:
        if i1 != 118 goto label26;

        f10 = f5 + f1;

     label26:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void lineTo(float,float)>(f0, f10);

        f5 = f10;

        f1 = f10;

        goto label09;

     label27:
        f4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f7 = f4;

        $f8 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>(f4);

        f5 = $f8;

        $f9 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f8);

        f10 = $f9;

        $f11 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f9);

        $f6 = $f11;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f11);

        if $z0 == 0 goto label28;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label28:
        if i1 != 113 goto label29;

        f10 = $f9 + f0;

        $f6 = $f11 + f1;

        $f7 = f4 + f0;

        f5 = $f8 + f1;

     label29:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void quadTo(float,float,float,float)>($f7, f5, f10, $f6);

        f4 = $f7;

        f0 = f10;

        f1 = $f6;

        goto label09;

     label30:
        f10 = 2.0F * f0;

        f4 = f10 - f4;

        f10 = 2.0F * f1;

        f5 = f10 - f5;

        $f7 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        f10 = $f7;

        $f8 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: float checkedNextFloat(float)>($f7);

        $f6 = $f8;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f8);

        if $z0 == 0 goto label31;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad path coords for ");

        $c3 = (char) i1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path segment");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", $r0);

        return r1;

     label31:
        if i1 != 116 goto label32;

        f10 = $f7 + f0;

        $f6 = $f8 + f1;

     label32:
        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void quadTo(float,float,float,float)>(f4, f5, f10, $f6);

        f0 = f10;

        f1 = $f6;

        goto label09;

     label33:
        if i1 != 97 goto label34;

        f5 = $f8 + f0;

        f10 = $f9 + f1;

     label34:
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r1.<com.caverock.androidsvg.SVG$PathDefinition: void arcTo(float,float,float,boolean,boolean,float,float)>(f4, $f6, $f7, $z0, $z1, f5, f10);

        f4 = f5;

        f0 = f5;

        f5 = f10;

        f1 = f10;

        goto label09;

     label35:
        return r1;
    }
    private static void parsePreserveAspectRatio(com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer $r0;
        java.lang.String $r1, $r3, r4, $r5;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;
        com.caverock.androidsvg.PreserveAspectRatio$Alignment $r6;
        com.caverock.androidsvg.PreserveAspectRatio$Scale r7;
        byte $b0;
        int $i1;
        org.xml.sax.SAXException $r8;
        java.lang.StringBuilder $r9;
        com.caverock.androidsvg.PreserveAspectRatio $r10;

        $r0 := @parameter0: com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer;

        $r1 := @parameter1: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r1);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        r4 = $r3;

        $r5 = "defer";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        r4 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

     label1:
        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$AspectRatioKeywords: com.caverock.androidsvg.PreserveAspectRatio$Alignment get(java.lang.String)>(r4);

        r7 = null;

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label7;

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        $b0 = -1;

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 3347527: goto label4;
            case 109526418: goto label5;
            default: goto label2;
        };

     label2:
        lookupswitch($b0)
        {
            case 0: goto label6;
            case 1: goto label8;
            default: goto label3;
        };

     label3:
        $r8 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid preserveAspectRatio definition: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label4:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("meet");

        if $z0 == 0 goto label2;

        $b0 = 0;

        goto label2;

     label5:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("slice");

        if $z0 == 0 goto label2;

        $b0 = 1;

        goto label2;

     label6:
        r7 = <com.caverock.androidsvg.PreserveAspectRatio$Scale: com.caverock.androidsvg.PreserveAspectRatio$Scale Meet>;

     label7:
        $r10 = new com.caverock.androidsvg.PreserveAspectRatio;

        specialinvoke $r10.<com.caverock.androidsvg.PreserveAspectRatio: void <init>(com.caverock.androidsvg.PreserveAspectRatio$Alignment,com.caverock.androidsvg.PreserveAspectRatio$Scale)>($r6, r7);

        $r0.<com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer: com.caverock.androidsvg.PreserveAspectRatio preserveAspectRatio> = $r10;

        return;

     label8:
        r7 = <com.caverock.androidsvg.PreserveAspectRatio$Scale: com.caverock.androidsvg.PreserveAspectRatio$Scale Slice>;

        goto label7;
    }
    private static com.caverock.androidsvg.SVG$Style$RenderQuality parseRenderQuality(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0;
        org.xml.sax.SAXException $r3;
        java.lang.StringBuilder $r4;
        com.caverock.androidsvg.SVG$Style$RenderQuality r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = "auto";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r5 = <com.caverock.androidsvg.SVG$Style$RenderQuality: com.caverock.androidsvg.SVG$Style$RenderQuality auto>;

        return r5;

     label1:
        $r2 = "optimizeQuality";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r5 = <com.caverock.androidsvg.SVG$Style$RenderQuality: com.caverock.androidsvg.SVG$Style$RenderQuality optimizeQuality>;

        return r5;

     label2:
        $r2 = "optimizeSpeed";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r5 = <com.caverock.androidsvg.SVG$Style$RenderQuality: com.caverock.androidsvg.SVG$Style$RenderQuality optimizeSpeed>;

        return r5;

     label3:
        $r3 = new org.xml.sax.SAXException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" property: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r3;
    }
    private static java.util.Set parseRequiredFeatures(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r3;
        java.util.HashSet r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label4;

        $r0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://www.w3.org/TR/SVG11/feature#");

        if $z0 == 0 goto label3;

        $r3 = "http://www.w3.org/TR/SVG11/feature#";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

     label2:
        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        goto label1;

     label3:
        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>("UNSUPPORTED");

        goto label2;

     label4:
        return r1;
    }
    private static java.util.Set parseRequiredFormats(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        java.util.HashSet r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label2;

        $r0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        goto label1;

     label2:
        return r1;
    }
    private static com.caverock.androidsvg.SVG$Length[] parseStrokeDashArray(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        java.util.ArrayList r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;
        com.caverock.androidsvg.SVG$Length $r3;
        org.xml.sax.SAXException $r4;
        java.lang.StringBuilder $r5;
        float $f0, $f1;
        byte $b0;
        int $i1;
        com.caverock.androidsvg.SVG$Length[] $r6;
        java.lang.Object[] $r7;

        $r0 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: com.caverock.androidsvg.SVG$Length nextLength()>();

        if $r3 == null goto label7;

        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stroke-dasharray. Dash segemnts cannot be negative: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label2:
        $f0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValue()>();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label3:
        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label6;

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: com.caverock.androidsvg.SVG$Length nextLength()>();

        if $r3 != null goto label4;

        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stroke-dasharray. Non-Length content found: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label4:
        $z0 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: boolean isNegative()>();

        if $z0 == 0 goto label5;

        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stroke-dasharray. Dash segemnts cannot be negative: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label5:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $f1 = virtualinvoke $r3.<com.caverock.androidsvg.SVG$Length: float floatValue()>();

        $f0 = $f0 + $f1;

        goto label3;

     label6:
        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label7;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r6 = newarray (com.caverock.androidsvg.SVG$Length)[$i1];

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (com.caverock.androidsvg.SVG$Length[]) $r7;

        return $r6;

     label7:
        return null;
    }
    private static com.caverock.androidsvg.SVG$Style$LineCaps parseStrokeLineCap(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$LineCaps r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "butt";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$LineCaps: com.caverock.androidsvg.SVG$Style$LineCaps Butt>;

        return r4;

     label1:
        $r1 = "round";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$LineCaps: com.caverock.androidsvg.SVG$Style$LineCaps Round>;

        return r4;

     label2:
        $r1 = "square";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r4 = <com.caverock.androidsvg.SVG$Style$LineCaps: com.caverock.androidsvg.SVG$Style$LineCaps Square>;

        return r4;

     label3:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stroke-linecap property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static com.caverock.androidsvg.SVG$Style$LineJoin parseStrokeLineJoin(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$LineJoin r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "miter";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$LineJoin: com.caverock.androidsvg.SVG$Style$LineJoin Miter>;

        return r4;

     label1:
        $r1 = "round";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$LineJoin: com.caverock.androidsvg.SVG$Style$LineJoin Round>;

        return r4;

     label2:
        $r1 = "bevel";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r4 = <com.caverock.androidsvg.SVG$Style$LineJoin: com.caverock.androidsvg.SVG$Style$LineJoin Bevel>;

        return r4;

     label3:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stroke-linejoin property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static void parseStyle(com.caverock.androidsvg.SVG$SvgElementBase, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVG$SvgElementBase $r0;
        java.lang.String $r1, $r3;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;
        com.caverock.androidsvg.SVG$Style $r4;

        $r0 := @parameter0: com.caverock.androidsvg.SVG$SvgElementBase;

        $r1 := @parameter1: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/\\*.*?\\*/", "");

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r1);

     label1:
        $r1 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken(char)>(58);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(58);

        if $z0 != 0 goto label2;

        return;

     label2:
        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $r3 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextTokenWithWhitespace(char)>(59);

        if $r3 == null goto label5;

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(59);

        if $z0 == 0 goto label1;

     label3:
        $r4 = $r0.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style style>;

        if $r4 != null goto label4;

        $r4 = new com.caverock.androidsvg.SVG$Style;

        specialinvoke $r4.<com.caverock.androidsvg.SVG$Style: void <init>()>();

        $r0.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style style> = $r4;

     label4:
        $r4 = $r0.<com.caverock.androidsvg.SVG$SvgElementBase: com.caverock.androidsvg.SVG$Style style>;

        staticinvoke <com.caverock.androidsvg.SVGParser: void processStyleProperty(com.caverock.androidsvg.SVG$Style,java.lang.String,java.lang.String)>($r4, $r1, $r3);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        goto label1;

     label5:
        return;
    }
    private static java.util.Set parseSystemLanguage(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, r3;
        java.util.HashSet r1;
        com.caverock.androidsvg.SVGParser$TextScanner r2;
        boolean $z0;
        int $i0;
        java.util.Locale $r4;

        $r0 := @parameter0: java.lang.String;

        r2 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label3;

        $r0 = virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextToken()>();

        r3 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(45);

        if $i0 == -1 goto label2;

        r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r4 = new java.util.Locale;

        specialinvoke $r4.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, "", "");

        $r0 = virtualinvoke $r4.<java.util.Locale: java.lang.String getLanguage()>();

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

        virtualinvoke r2.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        goto label1;

     label3:
        return r1;
    }
    private static com.caverock.androidsvg.SVG$Style$TextAnchor parseTextAnchor(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$TextAnchor r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "start";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Start>;

        return r4;

     label1:
        $r1 = "middle";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor Middle>;

        return r4;

     label2:
        $r1 = "end";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r4 = <com.caverock.androidsvg.SVG$Style$TextAnchor: com.caverock.androidsvg.SVG$Style$TextAnchor End>;

        return r4;

     label3:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid text-anchor property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static com.caverock.androidsvg.SVG$Style$TextDecoration parseTextDecoration(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$TextDecoration r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "none";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration None>;

        return r4;

     label1:
        $r1 = "underline";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration Underline>;

        return r4;

     label2:
        $r1 = "overline";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration Overline>;

        return r4;

     label3:
        $r1 = "line-through";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration LineThrough>;

        return r4;

     label4:
        $r1 = "blink";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDecoration: com.caverock.androidsvg.SVG$Style$TextDecoration Blink>;

        return r4;

     label5:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid text-decoration property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static com.caverock.androidsvg.SVG$Style$TextDirection parseTextDirection(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$TextDirection r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "ltr";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDirection: com.caverock.androidsvg.SVG$Style$TextDirection LTR>;

        return r4;

     label1:
        $r1 = "rtl";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$TextDirection: com.caverock.androidsvg.SVG$Style$TextDirection RTL>;

        return r4;

     label2:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid direction property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private android.graphics.Matrix parseTransformList(java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1, $r5;
        android.graphics.Matrix r2, r3, $r11;
        boolean $z0;
        java.lang.StringBuilder $r6, $r9;
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        float[] $r7;
        double $d0;
        com.caverock.androidsvg.SVGParser$TextScanner $r8;
        org.xml.sax.SAXException $r10;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.graphics.Matrix;

        r3 = r2;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        $r8 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r1);

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

     label01:
        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 != 0 goto label35;

        $r5 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: java.lang.String nextFunction()>();

        if $r5 != null goto label02;

        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad transform function encountered in transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label02:
        $b0 = -1;

        $i1 = virtualinvoke $r5.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1081239615: goto label05;
            case -925180581: goto label08;
            case 109250890: goto label07;
            case 109493390: goto label09;
            case 109493391: goto label10;
            case 1052832078: goto label06;
            default: goto label03;
        };

     label03:
        lookupswitch($b0)
        {
            case 0: goto label11;
            case 1: goto label15;
            case 2: goto label19;
            case 3: goto label23;
            case 4: goto label28;
            case 5: goto label31;
            default: goto label04;
        };

     label04:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list fn: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label05:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("matrix");

        if $z0 == 0 goto label03;

        $b0 = 0;

        goto label03;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("translate");

        if $z0 == 0 goto label03;

        $b0 = 1;

        goto label03;

     label07:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("scale");

        if $z0 == 0 goto label03;

        $b0 = 2;

        goto label03;

     label08:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("rotate");

        if $z0 == 0 goto label03;

        $b0 = 3;

        goto label03;

     label09:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("skewX");

        if $z0 == 0 goto label03;

        $b0 = 4;

        goto label03;

     label10:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("skewY");

        if $z0 == 0 goto label03;

        $b0 = 5;

        goto label03;

     label11:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f1 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f2 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f3 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f4 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f5 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f5);

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label13;

     label12:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label13:
        $r11 = new android.graphics.Matrix;

        specialinvoke $r11.<android.graphics.Matrix: void <init>()>();

        $r7 = newarray (float)[9];

        $r7[0] = $f0;

        $r7[1] = $f2;

        $r7[2] = $f4;

        $r7[3] = $f1;

        $r7[4] = $f3;

        $r7[5] = $f5;

        $r7[6] = 0.0F;

        $r7[7] = 0.0F;

        $r7[8] = 1.06535322E9F;

        virtualinvoke $r11.<android.graphics.Matrix: void setValues(float[])>($r7);

        virtualinvoke r3.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r11);

     label14:
        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean empty()>();

        if $z0 == 0 goto label34;

        return r3;

     label15:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f1 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float possibleNextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label16;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label17;

     label16:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label17:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z0 == 0 goto label18;

        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, 0.0F);

        goto label14;

     label18:
        virtualinvoke r3.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        goto label14;

     label19:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f1 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float possibleNextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label20;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label21;

     label20:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label21:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z0 == 0 goto label22;

        virtualinvoke r3.<android.graphics.Matrix: boolean preScale(float,float)>($f0, $f0);

        goto label14;

     label22:
        virtualinvoke r3.<android.graphics.Matrix: boolean preScale(float,float)>($f0, $f1);

        goto label14;

     label23:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $f1 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float possibleNextFloat()>();

        $f2 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float possibleNextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label24;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label25;

     label24:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label25:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z0 == 0 goto label26;

        virtualinvoke r3.<android.graphics.Matrix: boolean preRotate(float)>($f0);

        goto label14;

     label26:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z0 != 0 goto label27;

        virtualinvoke r3.<android.graphics.Matrix: boolean preRotate(float,float,float)>($f0, $f1, $f2);

        goto label14;

     label27:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label28:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label29;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label30;

     label29:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label30:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        $f0 = (float) $d0;

        virtualinvoke r3.<android.graphics.Matrix: boolean preSkew(float,float)>($f0, 0.0F);

        goto label14;

     label31:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label32;

        $z0 = virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean consume(char)>(41);

        if $z0 != 0 goto label33;

     label32:
        $r10 = new org.xml.sax.SAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transform list: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label33:
        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        $f0 = (float) $d0;

        virtualinvoke r3.<android.graphics.Matrix: boolean preSkew(float,float)>(0.0F, $f0);

        goto label14;

     label34:
        virtualinvoke $r8.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        goto label01;

     label35:
        return r3;
    }
    private static com.caverock.androidsvg.SVG$Style$VectorEffect parseVectorEffect(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$Style$VectorEffect r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "none";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r4 = <com.caverock.androidsvg.SVG$Style$VectorEffect: com.caverock.androidsvg.SVG$Style$VectorEffect None>;

        return r4;

     label1:
        $r1 = "non-scaling-stroke";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        r4 = <com.caverock.androidsvg.SVG$Style$VectorEffect: com.caverock.androidsvg.SVG$Style$VectorEffect NonScalingStroke>;

        return r4;

     label2:
        $r2 = new org.xml.sax.SAXException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid vector-effect property: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }
    private static com.caverock.androidsvg.SVG$Box parseViewBox(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        com.caverock.androidsvg.SVGParser$TextScanner r1;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        org.xml.sax.SAXException $r2;
        byte $b0;
        com.caverock.androidsvg.SVG$Box $r3;

        $r0 := @parameter0: java.lang.String;

        r1 = new com.caverock.androidsvg.SVGParser$TextScanner;

        specialinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void <init>(java.lang.String)>($r0);

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: void skipWhitespace()>();

        $f0 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f1 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f2 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: boolean skipCommaWhitespace()>();

        $f3 = virtualinvoke r1.<com.caverock.androidsvg.SVGParser$TextScanner: float nextFloat()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f3);

        if $z0 == 0 goto label2;

     label1:
        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid viewBox definition - should have four numbers");

        throw $r2;

     label2:
        $b0 = $f2 cmpg 0.0F;

        if $b0 >= 0 goto label3;

        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid viewBox. width cannot be negative");

        throw $r2;

     label3:
        $b0 = $f3 cmpg 0.0F;

        if $b0 >= 0 goto label4;

        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid viewBox. height cannot be negative");

        throw $r2;

     label4:
        $r3 = new com.caverock.androidsvg.SVG$Box;

        specialinvoke $r3.<com.caverock.androidsvg.SVG$Box: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        return $r3;
    }
    private void path(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Path r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<path>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Path;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Path: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Path: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesPath(com.caverock.androidsvg.SVG$Path,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private void pattern(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Pattern r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<pattern>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Pattern;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Pattern: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Pattern: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesPattern(com.caverock.androidsvg.SVG$Pattern,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void polygon(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Polygon r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<polygon>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Polygon;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Polygon: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Polygon: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Polygon: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesPolyLine(com.caverock.androidsvg.SVG$PolyLine,org.xml.sax.Attributes,java.lang.String)>(r2, $r1, "polygon");

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private void polyline(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$PolyLine r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<polyline>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$PolyLine;

        specialinvoke r2.<com.caverock.androidsvg.SVG$PolyLine: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$PolyLine: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$PolyLine: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesPolyLine(com.caverock.androidsvg.SVG$PolyLine,org.xml.sax.Attributes,java.lang.String)>(r2, $r1, "polyline");

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    static void processStyleProperty(com.caverock.androidsvg.SVG$Style, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVG$Style $r0;
        java.lang.String $r1, $r2, $r24;
        int $i0;
        boolean $z0;
        int[] $r3;
        com.caverock.androidsvg.SVGParser$SVGAttr $r4;
        com.caverock.androidsvg.SVG$SvgPaint $r5;
        long $l1;
        com.caverock.androidsvg.SVGParseException r6, r9, r15, r27, r29, r30;
        com.caverock.androidsvg.SVG$Style$FillRule $r7;
        float $f0;
        java.lang.Float $r8;
        com.caverock.androidsvg.SVG$Length $r10;
        com.caverock.androidsvg.SVG$Style$LineCaps $r11;
        com.caverock.androidsvg.SVG$Style$LineJoin $r12;
        com.caverock.androidsvg.SVG$Length[] $r13;
        com.caverock.androidsvg.SVG$Colour $r14;
        java.util.List $r16;
        java.lang.Integer $r17;
        com.caverock.androidsvg.SVG$Style$FontStyle $r18;
        com.caverock.androidsvg.SVG$Style$TextDecoration $r19;
        com.caverock.androidsvg.SVG$Style$TextDirection $r20;
        com.caverock.androidsvg.SVG$Style$TextAnchor $r21;
        java.lang.Boolean $r22;
        java.lang.StringBuilder $r23;
        org.xml.sax.SAXException $r25;
        com.caverock.androidsvg.SVG$CurrentColor $r26;
        com.caverock.androidsvg.SVG$CSSClipRect $r28;
        com.caverock.androidsvg.SVG$Style$VectorEffect $r31;
        com.caverock.androidsvg.SVG$Style$RenderQuality $r32;

        $r0 := @parameter0: com.caverock.androidsvg.SVG$Style;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("inherit");

        if $z0 != 0 goto label69;

        $r3 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r4 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r1);

        $i0 = virtualinvoke $r4.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 47: goto label03;
            case 48: goto label06;
            case 49: goto label07;
            case 50: goto label08;
            case 51: goto label11;
            case 52: goto label12;
            case 53: goto label13;
            case 54: goto label14;
            case 55: goto label15;
            case 56: goto label16;
            case 57: goto label19;
            case 58: goto label20;
            case 59: goto label21;
            case 60: goto label24;
            case 61: goto label25;
            case 62: goto label26;
            case 63: goto label27;
            case 64: goto label28;
            case 65: goto label29;
            case 66: goto label30;
            case 67: goto label31;
            case 68: goto label32;
            case 69: goto label33;
            case 70: goto label34;
            case 71: goto label35;
            case 72: goto label36;
            case 73: goto label37;
            case 74: goto label42;
            case 75: goto label45;
            case 76: goto label50;
            case 77: goto label51;
            case 78: goto label52;
            case 79: goto label53;
            case 80: goto label54;
            case 81: goto label55;
            case 82: goto label60;
            case 83: goto label61;
            case 84: goto label66;
            case 85: goto label67;
            case 86: goto label68;
            default: goto label02;
        };

     label02:
        return;

     label03:
        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgPaint parsePaintSpecifier(java.lang.String,java.lang.String)>($r2, "fill");

     label04:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint fill> = $r5;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 1L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label05:
        r6 := @caughtexception;

        $r1 = virtualinvoke r6.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label06:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$FillRule parseFillRule(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule fillRule> = $r7;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 2L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label07:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float fillOpacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 4L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label08:
        $r5 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgPaint parsePaintSpecifier(java.lang.String,java.lang.String)>($r2, "stroke");

     label09:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stroke> = $r5;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 8L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label10:
        r9 := @caughtexception;

        $r1 = virtualinvoke r9.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label11:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeOpacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 16L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label12:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeWidth> = $r10;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 32L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label13:
        $r11 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$LineCaps parseStrokeLineCap(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineCaps strokeLineCap> = $r11;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 64L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label14:
        $r12 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$LineJoin parseStrokeLineJoin(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$LineJoin strokeLineJoin> = $r12;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 128L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label15:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseFloat(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float strokeMiterLimit> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 256L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label16:
        $r1 = "none";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label18;

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray> = null;

     label17:
        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 512L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label18:
        $r13 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length[] parseStrokeDashArray(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length[] strokeDashArray> = $r13;

        goto label17;

     label19:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseLength(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length strokeDashOffset> = $r10;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 1024L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label20:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float opacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 2048L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label21:
        $r14 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String)>($r2);

     label22:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Colour color> = $r14;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 4096L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label23:
        r15 := @caughtexception;

        $r1 = virtualinvoke r15.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label24:
        staticinvoke <com.caverock.androidsvg.SVGParser: void parseFont(com.caverock.androidsvg.SVG$Style,java.lang.String)>($r0, $r2);

        return;

     label25:
        $r16 = staticinvoke <com.caverock.androidsvg.SVGParser: java.util.List parseFontFamily(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: java.util.List fontFamily> = $r16;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 8192L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label26:
        $r10 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Length parseFontSize(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Length fontSize> = $r10;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 16384L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label27:
        $r17 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.Integer parseFontWeight(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Integer fontWeight> = $r17;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 32768L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label28:
        $r18 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$FontStyle parseFontStyle(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FontStyle fontStyle> = $r18;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 65536L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label29:
        $r19 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$TextDecoration parseTextDecoration(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDecoration textDecoration> = $r19;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 131072L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label30:
        $r20 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$TextDirection parseTextDirection(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextDirection direction> = $r20;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 68719476736L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label31:
        $r21 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$TextAnchor parseTextAnchor(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$TextAnchor textAnchor> = $r21;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 262144L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label32:
        $r22 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.Boolean parseOverflow(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean overflow> = $r22;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 524288L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label33:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart> = $r1;

        $r1 = $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid> = $r1;

        $r1 = $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart>;

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 14680064L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label34:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerStart> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 2097152L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label35:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerMid> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 4194304L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label36:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String markerEnd> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 8388608L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label37:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(124);

        if $i0 >= 0 goto label38;

        $r1 = "|inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|";

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r24);

        if $z0 != 0 goto label39;

     label38:
        $r25 = new org.xml.sax.SAXException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for \"display\" attribute: ");

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r25;

     label39:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z0 != 0 goto label41;

        $z0 = 1;

     label40:
        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean display> = $r22;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 16777216L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label41:
        $z0 = 0;

        goto label40;

     label42:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(124);

        if $i0 >= 0 goto label43;

        $r1 = "|visible|hidden|collapse|";

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r24);

        if $z0 != 0 goto label44;

     label43:
        $r25 = new org.xml.sax.SAXException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for \"visibility\" attribute: ");

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r25;

     label44:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("visible");

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Boolean visibility> = $r22;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 33554432L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label45:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("currentColor");

        if $z0 == 0 goto label47;

        $r26 = staticinvoke <com.caverock.androidsvg.SVG$CurrentColor: com.caverock.androidsvg.SVG$CurrentColor getInstance()>();

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor> = $r26;

     label46:
        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 67108864L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label47:
        $r14 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String)>($r2);

     label48:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint stopColor> = $r14;

        goto label46;

     label49:
        r27 := @caughtexception;

        $r1 = virtualinvoke r27.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label50:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float stopOpacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 134217728L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label51:
        $r28 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$CSSClipRect parseClip(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$CSSClipRect clip> = $r28;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 1048576L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label52:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String clipPath> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 268435456L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label53:
        $r7 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$FillRule parseFillRule(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$FillRule clipRule> = $r7;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 536870912L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label54:
        $r1 = staticinvoke <com.caverock.androidsvg.SVGParser: java.lang.String parseFunctionalIRI(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.String mask> = $r1;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 1073741824L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label55:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("currentColor");

        if $z0 == 0 goto label57;

        $r26 = staticinvoke <com.caverock.androidsvg.SVG$CurrentColor: com.caverock.androidsvg.SVG$CurrentColor getInstance()>();

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor> = $r26;

     label56:
        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 2147483648L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label57:
        $r14 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String)>($r2);

     label58:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint solidColor> = $r14;

        goto label56;

     label59:
        r29 := @caughtexception;

        $r1 = virtualinvoke r29.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label60:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float solidOpacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 4294967296L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label61:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("currentColor");

        if $z0 == 0 goto label63;

        $r26 = staticinvoke <com.caverock.androidsvg.SVG$CurrentColor: com.caverock.androidsvg.SVG$CurrentColor getInstance()>();

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill> = $r26;

     label62:
        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 8589934592L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label63:
        $r14 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Colour parseColour(java.lang.String)>($r2);

     label64:
        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$SvgPaint viewportFill> = $r14;

        goto label62;

     label65:
        r30 := @caughtexception;

        $r1 = virtualinvoke r30.<com.caverock.androidsvg.SVGParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SVGParser", $r1);

        return;

     label66:
        $f0 = staticinvoke <com.caverock.androidsvg.SVGParser: float parseOpacity(java.lang.String)>($r2);

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r0.<com.caverock.androidsvg.SVG$Style: java.lang.Float viewportFillOpacity> = $r8;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 17179869184L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label67:
        $r31 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$VectorEffect parseVectorEffect(java.lang.String)>($r2);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$VectorEffect vectorEffect> = $r31;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 34359738368L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

        return;

     label68:
        $r32 = staticinvoke <com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$Style$RenderQuality parseRenderQuality(java.lang.String,java.lang.String)>($r2, $r1);

        $r0.<com.caverock.androidsvg.SVG$Style: com.caverock.androidsvg.SVG$Style$RenderQuality imageRendering> = $r32;

        $l1 = $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags>;

        $l1 = $l1 | 137438953472L;

        $r0.<com.caverock.androidsvg.SVG$Style: long specifiedFlags> = $l1;

     label69:
        return;

        catch com.caverock.androidsvg.SVGParseException from label03 to label04 with label05;
        catch com.caverock.androidsvg.SVGParseException from label08 to label09 with label10;
        catch com.caverock.androidsvg.SVGParseException from label21 to label22 with label23;
        catch com.caverock.androidsvg.SVGParseException from label47 to label48 with label49;
        catch com.caverock.androidsvg.SVGParseException from label57 to label58 with label59;
        catch com.caverock.androidsvg.SVGParseException from label63 to label64 with label65;
    }
    private void radialGradient(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$SvgRadialGradient r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<radialGradient>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$SvgRadialGradient;

        specialinvoke r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$SvgRadialGradient: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesGradient(com.caverock.androidsvg.SVG$GradientElement,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesRadialGradient(com.caverock.androidsvg.SVG$SvgRadialGradient,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void rect(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Rect r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<rect>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Rect;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Rect: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Rect: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesRect(com.caverock.androidsvg.SVG$Rect,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        return;
    }
    private void solidColor(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$SolidColor r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<solidColor>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$SolidColor;

        specialinvoke r2.<com.caverock.androidsvg.SVG$SolidColor: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$SolidColor: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void stop(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Stop r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        boolean $z0;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<stop>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$GradientElement;

        if $z0 != 0 goto label2;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. <stop> elements are only valid inside <linearGradient> or <radialGradient> elements.");

        throw $r5;

     label2:
        r2 = new com.caverock.androidsvg.SVG$Stop;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Stop: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Stop: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Stop: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStop(com.caverock.androidsvg.SVG$Stop,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void style(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        java.lang.Object[] $r2;
        com.caverock.androidsvg.SVG$SvgContainer $r3;
        org.xml.sax.SAXException $r4;
        boolean z0;
        java.lang.String r5, $r6, $r8;
        int i0, $i1;
        int[] $r7;
        com.caverock.androidsvg.SVGParser$SVGAttr $r9;
        com.caverock.androidsvg.CSSParser$MediaType $r10;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<style>", $r2);

        $r3 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r3 != null goto label1;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r4;

     label1:
        z0 = 1;

        r5 = "all";

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r1.<org.xml.sax.Attributes: int getLength()>();

        if i0 >= $i1 goto label6;

        $r6 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r7 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGAttr>;

        $r8 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        $r9 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGAttr: com.caverock.androidsvg.SVGParser$SVGAttr fromString(java.lang.String)>($r8);

        $i1 = virtualinvoke $r9.<com.caverock.androidsvg.SVGParser$SVGAttr: int ordinal()>();

        $i1 = $r7[$i1];

        lookupswitch($i1)
        {
            case 88: goto label4;
            case 89: goto label5;
            default: goto label3;
        };

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("text/css");

        goto label3;

     label5:
        r5 = $r6;

        goto label3;

     label6:
        if z0 == 0 goto label7;

        $r10 = <com.caverock.androidsvg.CSSParser$MediaType: com.caverock.androidsvg.CSSParser$MediaType screen>;

        z0 = staticinvoke <com.caverock.androidsvg.CSSParser: boolean mediaMatches(java.lang.String,com.caverock.androidsvg.CSSParser$MediaType)>(r5, $r10);

        if z0 == 0 goto label7;

        r0.<com.caverock.androidsvg.SVGParser: boolean inStyleElement> = 1;

        return;

     label7:
        r0.<com.caverock.androidsvg.SVGParser: boolean ignoring> = 1;

        r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth> = 1;

        return;
    }
    private void svg(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Svg r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG $r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<svg>", $r3);

        r2 = new com.caverock.androidsvg.SVG$Svg;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Svg: void <init>()>();

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG document> = $r4;

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Svg: com.caverock.androidsvg.SVG$SvgContainer parent> = $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesSVG(com.caverock.androidsvg.SVG$Svg,org.xml.sax.Attributes)>(r2, $r1);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r5 != null goto label2;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        virtualinvoke $r4.<com.caverock.androidsvg.SVG: void setRootElement(com.caverock.androidsvg.SVG$Svg)>(r2);

     label1:
        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;

     label2:
        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r5.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        goto label1;
    }
    private void symbol(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Symbol r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<symbol>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Symbol;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Symbol: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Symbol: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void text(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Text r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<text>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Text;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Text: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Text: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTextPosition(com.caverock.androidsvg.SVG$TextPositionedContainer,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void textPath(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$TextPath r2;
        com.caverock.androidsvg.SVG$TextRoot $r3;
        java.lang.Object[] $r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;
        org.xml.sax.SAXException $r6;
        com.caverock.androidsvg.SVG $r7;
        boolean $z0;
        com.caverock.androidsvg.SVG$TextChild $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<textPath>", $r4);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r5 != null goto label1;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r6;

     label1:
        r2 = new com.caverock.androidsvg.SVG$TextPath;

        specialinvoke r2.<com.caverock.androidsvg.SVG$TextPath: void <init>()>();

        $r7 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG document> = $r7;

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$SvgContainer parent> = $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTextPath(com.caverock.androidsvg.SVG$TextPath,org.xml.sax.Attributes)>(r2, $r1);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r5.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        $r5 = r2.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$TextRoot;

        if $z0 == 0 goto label2;

        $r5 = r2.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r3 = (com.caverock.androidsvg.SVG$TextRoot) $r5;

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TextPath: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;

     label2:
        $r5 = r2.<com.caverock.androidsvg.SVG$TextPath: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r8 = (com.caverock.androidsvg.SVG$TextChild) $r5;

        $r3 = interfaceinvoke $r8.<com.caverock.androidsvg.SVG$TextChild: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TextPath: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;
    }
    private void tref(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$TRef r2;
        com.caverock.androidsvg.SVG$TextRoot $r3;
        java.lang.Object[] $r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;
        org.xml.sax.SAXException $r6;
        boolean $z0;
        com.caverock.androidsvg.SVG $r7;
        com.caverock.androidsvg.SVG$TextChild $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<tref>", $r4);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r5 != null goto label1;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r6;

     label1:
        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$TextContainer;

        if $z0 != 0 goto label2;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. <tref> elements are only valid inside <text> or <tspan> elements.");

        throw $r6;

     label2:
        r2 = new com.caverock.androidsvg.SVG$TRef;

        specialinvoke r2.<com.caverock.androidsvg.SVG$TRef: void <init>()>();

        $r7 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG document> = $r7;

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG$SvgContainer parent> = $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTRef(com.caverock.androidsvg.SVG$TRef,org.xml.sax.Attributes)>(r2, $r1);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r5.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        $r5 = r2.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$TextRoot;

        if $z0 == 0 goto label3;

        $r5 = r2.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r3 = (com.caverock.androidsvg.SVG$TextRoot) $r5;

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TRef: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;

     label3:
        $r5 = r2.<com.caverock.androidsvg.SVG$TRef: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r8 = (com.caverock.androidsvg.SVG$TextChild) $r5;

        $r3 = interfaceinvoke $r8.<com.caverock.androidsvg.SVG$TextChild: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TRef: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;
    }
    private void tspan(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$TSpan r2;
        com.caverock.androidsvg.SVG$TextRoot $r3;
        java.lang.Object[] $r4;
        com.caverock.androidsvg.SVG$SvgContainer $r5;
        org.xml.sax.SAXException $r6;
        boolean $z0;
        com.caverock.androidsvg.SVG $r7;
        com.caverock.androidsvg.SVG$TextChild $r8;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<tspan>", $r4);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r5 != null goto label1;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r6;

     label1:
        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$TextContainer;

        if $z0 != 0 goto label2;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. <tspan> elements are only valid inside <text> or other <tspan> elements.");

        throw $r6;

     label2:
        r2 = new com.caverock.androidsvg.SVG$TSpan;

        specialinvoke r2.<com.caverock.androidsvg.SVG$TSpan: void <init>()>();

        $r7 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG document> = $r7;

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG$SvgContainer parent> = $r5;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTextPosition(com.caverock.androidsvg.SVG$TextPositionedContainer,org.xml.sax.Attributes)>(r2, $r1);

        $r5 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r5.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        $r5 = r2.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $z0 = $r5 instanceof com.caverock.androidsvg.SVG$TextRoot;

        if $z0 == 0 goto label3;

        $r5 = r2.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r3 = (com.caverock.androidsvg.SVG$TextRoot) $r5;

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TSpan: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;

     label3:
        $r5 = r2.<com.caverock.androidsvg.SVG$TSpan: com.caverock.androidsvg.SVG$SvgContainer parent>;

        $r8 = (com.caverock.androidsvg.SVG$TextChild) $r5;

        $r3 = interfaceinvoke $r8.<com.caverock.androidsvg.SVG$TextChild: com.caverock.androidsvg.SVG$TextRoot getTextRoot()>();

        virtualinvoke r2.<com.caverock.androidsvg.SVG$TSpan: void setTextRoot(com.caverock.androidsvg.SVG$TextRoot)>($r3);

        return;
    }
    private void use(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Use r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<use>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Use;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Use: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Use: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesUse(com.caverock.androidsvg.SVG$Use,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void view(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$View r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<view>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$View;

        specialinvoke r2.<com.caverock.androidsvg.SVG$View: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$View: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesViewBox(com.caverock.androidsvg.SVG$SvgViewBoxContainer,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    private void zwitch(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        org.xml.sax.Attributes $r1;
        com.caverock.androidsvg.SVG$Switch r2;
        java.lang.Object[] $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        org.xml.sax.SAXException $r5;
        com.caverock.androidsvg.SVG $r6;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void debug(java.lang.String,java.lang.Object[])>("<switch>", $r3);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        if $r4 != null goto label1;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Invalid document. Root element must be <svg>");

        throw $r5;

     label1:
        r2 = new com.caverock.androidsvg.SVG$Switch;

        specialinvoke r2.<com.caverock.androidsvg.SVG$Switch: void <init>()>();

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        r2.<com.caverock.androidsvg.SVG$Switch: com.caverock.androidsvg.SVG document> = $r6;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r2.<com.caverock.androidsvg.SVG$Switch: com.caverock.androidsvg.SVG$SvgContainer parent> = $r4;

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesCore(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesStyle(com.caverock.androidsvg.SVG$SvgElementBase,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesTransform(com.caverock.androidsvg.SVG$HasTransform,org.xml.sax.Attributes)>(r2, $r1);

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseAttributesConditional(com.caverock.androidsvg.SVG$SvgConditional,org.xml.sax.Attributes)>(r2, $r1);

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r2);

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = r2;

        return;
    }
    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        char[] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        com.caverock.androidsvg.SVG$SvgContainer $r4;
        com.caverock.androidsvg.SVG$SvgConditionalContainer r5;
        java.util.List $r6;
        com.caverock.androidsvg.SVG$SvgObject r7;
        com.caverock.androidsvg.SVG$TextSequence r8;
        java.lang.Object $r9;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean ignoring>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean inMetadataElement>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        if $r3 != null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents> = $r3;

     label2:
        $r3 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i0, $i1);

        return;

     label3:
        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean inStyleElement>;

        if $z0 == 0 goto label5;

        $r3 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        if $r3 != null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents> = $r3;

     label4:
        $r3 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i0, $i1);

        return;

     label5:
        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        $z0 = $r4 instanceof com.caverock.androidsvg.SVG$TextContainer;

        if $z0 == 0 goto label9;

        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r5 = (com.caverock.androidsvg.SVG$SvgConditionalContainer) $r4;

        $r6 = r5.<com.caverock.androidsvg.SVG$SvgConditionalContainer: java.util.List children>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 != 0 goto label7;

        r7 = null;

     label6:
        $z0 = r7 instanceof com.caverock.androidsvg.SVG$TextSequence;

        if $z0 == 0 goto label8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r8 = (com.caverock.androidsvg.SVG$TextSequence) r7;

        $r2 = r8.<com.caverock.androidsvg.SVG$TextSequence: java.lang.String text>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r8.<com.caverock.androidsvg.SVG$TextSequence: java.lang.String text> = $r2;

        return;

     label7:
        $r6 = r5.<com.caverock.androidsvg.SVG$SvgConditionalContainer: java.util.List children>;

        $i2 = $i2 + -1;

        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);

        r7 = (com.caverock.androidsvg.SVG$SvgObject) $r9;

        goto label6;

     label8:
        $r4 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        r8 = new com.caverock.androidsvg.SVG$TextSequence;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        specialinvoke r8.<com.caverock.androidsvg.SVG$TextSequence: void <init>(java.lang.String)>($r2);

        interfaceinvoke $r4.<com.caverock.androidsvg.SVG$SvgContainer: void addChild(com.caverock.androidsvg.SVG$SvgObject)>(r8);

     label9:
        return;
    }
    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r2;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean ignoring>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean inStyleElement>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        if $r2 != null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents> = $r2;

     label2:
        $r2 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i0, $i1);

     label3:
        return;
    }
    public void endDocument() throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        return;
    }
    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0;
        int[] $r5;
        com.caverock.androidsvg.SVGParser$SVGElem $r6, $r10;
        com.caverock.androidsvg.SVG$SvgContainer $r7;
        com.caverock.androidsvg.SVG$SvgObject $r8;
        java.lang.StringBuilder $r9;
        com.caverock.androidsvg.SVG $r11;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean ignoring>;

        if $z0 == 0 goto label01;

        $i0 = r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth>;

        $i0 = $i0 + -1;

        r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth> = $i0;

        if $i0 != 0 goto label01;

        r0.<com.caverock.androidsvg.SVGParser: boolean ignoring> = 0;

        return;

     label01:
        $r4 = "http://www.w3.org/2000/svg";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label02;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label11;

     label02:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        $r1 = $r2;

     label03:
        $r5 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGElem>;

        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGElem: com.caverock.androidsvg.SVGParser$SVGElem fromString(java.lang.String)>($r1);

        $i0 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGElem: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label05;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label05;
            case 6: goto label04;
            case 7: goto label04;
            case 8: goto label04;
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label04;
            case 12: goto label04;
            case 13: goto label05;
            case 14: goto label05;
            case 15: goto label04;
            case 16: goto label05;
            case 17: goto label05;
            case 18: goto label05;
            case 19: goto label05;
            case 20: goto label05;
            case 21: goto label05;
            case 22: goto label07;
            case 23: goto label07;
            case 24: goto label05;
            case 25: goto label05;
            case 26: goto label05;
            case 27: goto label05;
            case 28: goto label05;
            case 29: goto label05;
            case 30: goto label10;
            case 31: goto label05;
            default: goto label04;
        };

     label04:
        return;

     label05:
        $r7 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement>;

        $r8 = (com.caverock.androidsvg.SVG$SvgObject) $r7;

        $r7 = $r8.<com.caverock.androidsvg.SVG$SvgObject: com.caverock.androidsvg.SVG$SvgContainer parent>;

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG$SvgContainer currentElement> = $r7;

        return;

     label06:
        $r1 = $r3;

        goto label03;

     label07:
        r0.<com.caverock.androidsvg.SVGParser: boolean inMetadataElement> = 0;

        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        if $r9 == null goto label11;

        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVGParser$SVGElem metadataTag>;

        $r10 = <com.caverock.androidsvg.SVGParser$SVGElem: com.caverock.androidsvg.SVGParser$SVGElem title>;

        if $r6 != $r10 goto label09;

        $r11 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.caverock.androidsvg.SVG: void setTitle(java.lang.String)>($r1);

     label08:
        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        virtualinvoke $r9.<java.lang.StringBuilder: void setLength(int)>(0);

        return;

     label09:
        $r6 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVGParser$SVGElem metadataTag>;

        $r10 = <com.caverock.androidsvg.SVGParser$SVGElem: com.caverock.androidsvg.SVGParser$SVGElem desc>;

        if $r6 != $r10 goto label08;

        $r11 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder metadataElementContents>;

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.caverock.androidsvg.SVG: void setDesc(java.lang.String)>($r1);

        goto label08;

     label10:
        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        if $r9 == null goto label11;

        r0.<com.caverock.androidsvg.SVGParser: boolean inStyleElement> = 0;

        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void parseCSSStyleSheet(java.lang.String)>($r1);

        $r9 = r0.<com.caverock.androidsvg.SVGParser: java.lang.StringBuilder styleElementContents>;

        virtualinvoke $r9.<java.lang.StringBuilder: void setLength(int)>(0);

     label11:
        return;
    }
    com.caverock.androidsvg.SVG parse(java.io.InputStream) throws com.caverock.androidsvg.SVGParseException
    {
        com.caverock.androidsvg.SVGParser r0;
        int i0, $i1;
        java.io.InputStream r1, r2;
        boolean $z0;
        javax.xml.parsers.SAXParserFactory $r3;
        javax.xml.parsers.SAXParser $r4;
        org.xml.sax.XMLReader $r5;
        java.io.IOException $r7, r8, r9, r16;
        java.lang.Throwable $r11;
        javax.xml.parsers.ParserConfigurationException r12;
        org.xml.sax.SAXException r13;
        java.lang.StringBuilder $r14, $r22;
        java.lang.String $r15;
        com.caverock.androidsvg.SVG r17;
        java.io.BufferedInputStream $r18;
        java.util.zip.GZIPInputStream $r19;
        org.xml.sax.InputSource $r20;
        com.caverock.androidsvg.SVGParseException $r21;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        r1 := @parameter0: java.io.InputStream;

        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label29;

        $r18 = new java.io.BufferedInputStream;

        r2 = $r18;

        specialinvoke $r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

     label01:
        virtualinvoke r2.<java.io.InputStream: void mark(int)>(3);

        i0 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r2.<java.io.InputStream: int read()>();

     label02:
        $i1 = $i1 << 8;

        i0 = i0 + $i1;

     label03:
        virtualinvoke r2.<java.io.InputStream: void reset()>();

     label04:
        if i0 != 35615 goto label28;

        $r19 = new java.util.zip.GZIPInputStream;

        r1 = $r19;

     label05:
        specialinvoke $r19.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r2);

     label06:
        $r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

     label07:
        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r0);

     label08:
        $r20 = new org.xml.sax.InputSource;

     label09:
        specialinvoke $r20.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r20);

     label10:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label11:
        r17 = r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument>;

        return r17;

     label12:
        $r7 := @caughtexception;

        r1 = r2;

        goto label06;

     label13:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", "Exception thrown closing input stream");

        goto label11;

     label14:
        r9 := @caughtexception;

     label15:
        $r21 = new com.caverock.androidsvg.SVGParseException;

     label16:
        specialinvoke $r21.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String,java.lang.Throwable)>("File error", r9);

        throw $r21;

     label17:
        $r11 := @caughtexception;

     label18:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label19:
        throw $r11;

     label20:
        r12 := @caughtexception;

     label21:
        $r21 = new com.caverock.androidsvg.SVGParseException;

     label22:
        specialinvoke $r21.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String,java.lang.Throwable)>("XML Parser problem", r12);

        throw $r21;

     label23:
        r13 := @caughtexception;

     label24:
        $r21 = new com.caverock.androidsvg.SVGParseException;

     label25:
        $r22 = new java.lang.StringBuilder;

     label26:
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SVG parse error: ");

        $r15 = virtualinvoke r13.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<com.caverock.androidsvg.SVGParseException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r13);

        throw $r21;

     label27:
        r16 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SVGParser", "Exception thrown closing input stream");

        goto label19;

     label28:
        r1 = r2;

        goto label06;

     label29:
        r2 = r1;

        goto label01;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch javax.xml.parsers.ParserConfigurationException from label07 to label08 with label20;
        catch javax.xml.parsers.ParserConfigurationException from label09 to label10 with label20;
        catch org.xml.sax.SAXException from label07 to label08 with label23;
        catch org.xml.sax.SAXException from label09 to label10 with label23;
        catch java.lang.Throwable from label07 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.io.IOException from label18 to label19 with label27;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
        catch java.lang.Throwable from label24 to label25 with label17;
        catch java.lang.Throwable from label25 to label26 with label17;
        catch java.lang.Throwable from label26 to label27 with label17;
    }
    public void startDocument() throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        com.caverock.androidsvg.SVG $r1;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 = new com.caverock.androidsvg.SVG;

        specialinvoke $r1.<com.caverock.androidsvg.SVG: void <init>()>();

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVG svgDocument> = $r1;

        return;
    }
    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.caverock.androidsvg.SVGParser r0;
        java.lang.String $r1, $r2, $r3, $r5;
        org.xml.sax.Attributes $r4;
        boolean $z0;
        int $i0;
        com.caverock.androidsvg.SVGParser$SVGElem $r6;
        int[] $r7;

        r0 := @this: com.caverock.androidsvg.SVGParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = r0.<com.caverock.androidsvg.SVGParser: boolean ignoring>;

        if $z0 == 0 goto label01;

        $i0 = r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth>;

        $i0 = $i0 + 1;

        r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth> = $i0;

        return;

     label01:
        $r5 = "http://www.w3.org/2000/svg";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label02;

        $r5 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label35;

     label02:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label05;

        $r1 = $r2;

     label03:
        $r6 = staticinvoke <com.caverock.androidsvg.SVGParser$SVGElem: com.caverock.androidsvg.SVGParser$SVGElem fromString(java.lang.String)>($r1);

        $r7 = <com.caverock.androidsvg.SVGParser$1: int[] $SwitchMap$com$caverock$androidsvg$SVGParser$SVGElem>;

        $i0 = virtualinvoke $r6.<com.caverock.androidsvg.SVGParser$SVGElem: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label20;
            case 17: goto label21;
            case 18: goto label22;
            case 19: goto label23;
            case 20: goto label24;
            case 21: goto label25;
            case 22: goto label26;
            case 23: goto label26;
            case 24: goto label27;
            case 25: goto label28;
            case 26: goto label29;
            case 27: goto label30;
            case 28: goto label31;
            case 29: goto label32;
            case 30: goto label33;
            case 31: goto label34;
            default: goto label04;
        };

     label04:
        r0.<com.caverock.androidsvg.SVGParser: boolean ignoring> = 1;

        r0.<com.caverock.androidsvg.SVGParser: int ignoreDepth> = 1;

        return;

     label05:
        $r1 = $r3;

        goto label03;

     label06:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void svg(org.xml.sax.Attributes)>($r4);

        return;

     label07:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void g(org.xml.sax.Attributes)>($r4);

        return;

     label08:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void defs(org.xml.sax.Attributes)>($r4);

        return;

     label09:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void use(org.xml.sax.Attributes)>($r4);

        return;

     label10:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void path(org.xml.sax.Attributes)>($r4);

        return;

     label11:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void rect(org.xml.sax.Attributes)>($r4);

        return;

     label12:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void circle(org.xml.sax.Attributes)>($r4);

        return;

     label13:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void ellipse(org.xml.sax.Attributes)>($r4);

        return;

     label14:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void line(org.xml.sax.Attributes)>($r4);

        return;

     label15:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void polyline(org.xml.sax.Attributes)>($r4);

        return;

     label16:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void polygon(org.xml.sax.Attributes)>($r4);

        return;

     label17:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void text(org.xml.sax.Attributes)>($r4);

        return;

     label18:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void tspan(org.xml.sax.Attributes)>($r4);

        return;

     label19:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void tref(org.xml.sax.Attributes)>($r4);

        return;

     label20:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void zwitch(org.xml.sax.Attributes)>($r4);

        return;

     label21:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void symbol(org.xml.sax.Attributes)>($r4);

        return;

     label22:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void marker(org.xml.sax.Attributes)>($r4);

        return;

     label23:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void linearGradient(org.xml.sax.Attributes)>($r4);

        return;

     label24:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void radialGradient(org.xml.sax.Attributes)>($r4);

        return;

     label25:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void stop(org.xml.sax.Attributes)>($r4);

        return;

     label26:
        r0.<com.caverock.androidsvg.SVGParser: boolean inMetadataElement> = 1;

        r0.<com.caverock.androidsvg.SVGParser: com.caverock.androidsvg.SVGParser$SVGElem metadataTag> = $r6;

        return;

     label27:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void clipPath(org.xml.sax.Attributes)>($r4);

        return;

     label28:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void textPath(org.xml.sax.Attributes)>($r4);

        return;

     label29:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void pattern(org.xml.sax.Attributes)>($r4);

        return;

     label30:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void image(org.xml.sax.Attributes)>($r4);

        return;

     label31:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void view(org.xml.sax.Attributes)>($r4);

        return;

     label32:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void mask(org.xml.sax.Attributes)>($r4);

        return;

     label33:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void style(org.xml.sax.Attributes)>($r4);

        return;

     label34:
        specialinvoke r0.<com.caverock.androidsvg.SVGParser: void solidColor(org.xml.sax.Attributes)>($r4);

     label35:
        return;
    }
