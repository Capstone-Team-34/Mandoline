com.google.android.gms.internal.zzcbb extends android.database.sqlite.SQLiteOpenHelper
private com.google.android.gms.internal.zzcay zzind
    void <init>(com.google.android.gms.internal.zzcay, android.content.Context, java.lang.String)
    {
        com.google.android.gms.internal.zzcbb r0;
        com.google.android.gms.internal.zzcay $r1;
        android.content.Context $r2;
        java.lang.String $r3;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 := @parameter0: com.google.android.gms.internal.zzcay;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.lang.String;

        r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind> = $r1;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, $r3, null, 1);

        return;
    }
    public final android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        com.google.android.gms.internal.zzcbb r0;
        com.google.android.gms.internal.zzcay $r1;
        com.google.android.gms.internal.zzcfq $r2;
        long $l0;
        boolean $z0;
        android.database.sqlite.SQLiteException $r3, $r10;
        android.database.sqlite.SQLiteDatabase $r4;
        com.google.android.gms.internal.zzcbw $r5;
        com.google.android.gms.internal.zzcby $r6;
        java.lang.String $r7;
        android.content.Context $r8;
        java.io.File $r9;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r2 = staticinvoke <com.google.android.gms.internal.zzcay: com.google.android.gms.internal.zzcfq zza(com.google.android.gms.internal.zzcay)>($r1);

        $l0 = staticinvoke <com.google.android.gms.internal.zzcax: long zzawe()>();

        $z0 = virtualinvoke $r2.<com.google.android.gms.internal.zzcfq: boolean zzu(long)>($l0);

        if $z0 != 0 goto label1;

        $r3 = new android.database.sqlite.SQLiteException;

        specialinvoke $r3.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>("Database open failed");

        throw $r3;

     label1:
        $r4 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        return $r4;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r2 = staticinvoke <com.google.android.gms.internal.zzcay: com.google.android.gms.internal.zzcfq zza(com.google.android.gms.internal.zzcay)>($r1);

        virtualinvoke $r2.<com.google.android.gms.internal.zzcfq: void start()>();

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r5 = virtualinvoke $r1.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzcbw: com.google.android.gms.internal.zzcby zzayd()>();

        virtualinvoke $r6.<com.google.android.gms.internal.zzcby: void log(java.lang.String)>("Opening the database failed, dropping and recreating it");

        $r7 = staticinvoke <com.google.android.gms.internal.zzcax: java.lang.String zzawi()>();

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r8 = virtualinvoke $r1.<com.google.android.gms.internal.zzcdt: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r7);

        $z0 = virtualinvoke $r9.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r5 = virtualinvoke $r1.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzcbw: com.google.android.gms.internal.zzcby zzayd()>();

        virtualinvoke $r6.<com.google.android.gms.internal.zzcby: void zzj(java.lang.String,java.lang.Object)>("Failed to delete corrupted db file", $r7);

     label4:
        $r4 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label5:
        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

     label6:
        $r2 = staticinvoke <com.google.android.gms.internal.zzcay: com.google.android.gms.internal.zzcfq zza(com.google.android.gms.internal.zzcay)>($r1);

        virtualinvoke $r2.<com.google.android.gms.internal.zzcfq: void clear()>();

     label7:
        return $r4;

     label8:
        $r10 := @caughtexception;

        $r1 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r5 = virtualinvoke $r1.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzcbw: com.google.android.gms.internal.zzcby zzayd()>();

        virtualinvoke $r6.<com.google.android.gms.internal.zzcby: void zzj(java.lang.String,java.lang.Object)>("Failed to open freshly created database", $r10);

        throw $r10;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
        catch android.database.sqlite.SQLiteException from label4 to label5 with label8;
        catch android.database.sqlite.SQLiteException from label6 to label7 with label8;
    }
    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.internal.zzcbb r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.internal.zzcbw $r2;
        com.google.android.gms.internal.zzcay $r3;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r2 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase)>($r2, $r1);

        return;
    }
    public final void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.google.android.gms.internal.zzcbb r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
    public final void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.internal.zzcbb r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        android.database.Cursor $r2;
        com.google.android.gms.internal.zzcay $r3;
        com.google.android.gms.internal.zzcbw $r4;
        java.util.Map $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 15 goto label3;

        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("PRAGMA journal_mode=memory", null);

     label1:
        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label3:
        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "events", "CREATE TABLE IF NOT EXISTS events ( app_id TEXT NOT NULL, name TEXT NOT NULL, lifetime_count INTEGER NOT NULL, current_bundle_count INTEGER NOT NULL, last_fire_timestamp INTEGER NOT NULL, PRIMARY KEY (app_id, name)) ;", "app_id,name,lifetime_count,current_bundle_count,last_fire_timestamp", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "conditional_properties", "CREATE TABLE IF NOT EXISTS conditional_properties ( app_id TEXT NOT NULL, origin TEXT NOT NULL, name TEXT NOT NULL, value BLOB NOT NULL, creation_timestamp INTEGER NOT NULL, active INTEGER NOT NULL, trigger_event_name TEXT, trigger_timeout INTEGER NOT NULL, timed_out_event BLOB,triggered_event BLOB, triggered_timestamp INTEGER NOT NULL, time_to_live INTEGER NOT NULL, expired_event BLOB, PRIMARY KEY (app_id, name)) ;", "app_id,origin,name,value,active,trigger_event_name,trigger_timeout,creation_timestamp,timed_out_event,triggered_event,triggered_timestamp,time_to_live,expired_event", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r5 = staticinvoke <com.google.android.gms.internal.zzcay: java.util.Map zzaxr()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "user_attributes", "CREATE TABLE IF NOT EXISTS user_attributes ( app_id TEXT NOT NULL, name TEXT NOT NULL, set_timestamp INTEGER NOT NULL, value BLOB NOT NULL, PRIMARY KEY (app_id, name)) ;", "app_id,name,set_timestamp,value", $r5);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r5 = staticinvoke <com.google.android.gms.internal.zzcay: java.util.Map zzaxs()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "apps", "CREATE TABLE IF NOT EXISTS apps ( app_id TEXT NOT NULL, app_instance_id TEXT, gmp_app_id TEXT, resettable_device_id_hash TEXT, last_bundle_index INTEGER NOT NULL, last_bundle_end_timestamp INTEGER NOT NULL, PRIMARY KEY (app_id)) ;", "app_id,app_instance_id,gmp_app_id,resettable_device_id_hash,last_bundle_index,last_bundle_end_timestamp", $r5);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r5 = staticinvoke <com.google.android.gms.internal.zzcay: java.util.Map zzaxt()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "queue", "CREATE TABLE IF NOT EXISTS queue ( app_id TEXT NOT NULL, bundle_end_timestamp INTEGER NOT NULL, data BLOB NOT NULL);", "app_id,bundle_end_timestamp,data", $r5);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "raw_events_metadata", "CREATE TABLE IF NOT EXISTS raw_events_metadata ( app_id TEXT NOT NULL, metadata_fingerprint INTEGER NOT NULL, metadata BLOB NOT NULL, PRIMARY KEY (app_id, metadata_fingerprint));", "app_id,metadata_fingerprint,metadata", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r5 = staticinvoke <com.google.android.gms.internal.zzcay: java.util.Map zzaxu()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "raw_events", "CREATE TABLE IF NOT EXISTS raw_events ( app_id TEXT NOT NULL, name TEXT NOT NULL, timestamp INTEGER NOT NULL, metadata_fingerprint INTEGER NOT NULL, data BLOB NOT NULL);", "app_id,name,timestamp,metadata_fingerprint,data", $r5);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "event_filters", "CREATE TABLE IF NOT EXISTS event_filters ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, filter_id INTEGER NOT NULL, event_name TEXT NOT NULL, data BLOB NOT NULL, PRIMARY KEY (app_id, event_name, audience_id, filter_id));", "app_id,audience_id,filter_id,event_name,data", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "property_filters", "CREATE TABLE IF NOT EXISTS property_filters ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, filter_id INTEGER NOT NULL, property_name TEXT NOT NULL, data BLOB NOT NULL, PRIMARY KEY (app_id, property_name, audience_id, filter_id));", "app_id,audience_id,filter_id,property_name,data", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "audience_filter_values", "CREATE TABLE IF NOT EXISTS audience_filter_values ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, current_results BLOB, PRIMARY KEY (app_id, audience_id));", "app_id,audience_id,current_results", null);

        $r3 = r0.<com.google.android.gms.internal.zzcbb: com.google.android.gms.internal.zzcay zzind>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.internal.zzcdt: com.google.android.gms.internal.zzcbw zzaul()>();

        $r5 = staticinvoke <com.google.android.gms.internal.zzcay: java.util.Map zzaxv()>();

        staticinvoke <com.google.android.gms.internal.zzcay: void zza(com.google.android.gms.internal.zzcbw,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r4, $r1, "app2", "CREATE TABLE IF NOT EXISTS app2 ( app_id TEXT NOT NULL, first_open_count INTEGER NOT NULL, PRIMARY KEY (app_id));", "app_id,first_open_count", $r5);

        return;

     label4:
        $r6 := @caughtexception;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.google.android.gms.internal.zzcbb r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.internal.zzcbb;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
