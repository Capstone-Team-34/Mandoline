com.google.android.gms.common.AccountPicker extends java.lang.Object
    private void <init>()
    {
        com.google.android.gms.common.AccountPicker r0;

        r0 := @this: com.google.android.gms.common.AccountPicker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)
    {
        android.accounts.Account $r0;
        java.util.ArrayList $r1;
        java.lang.String[] $r2, $r5;
        boolean $z0;
        java.lang.String $r3, $r4;
        android.os.Bundle $r6;
        android.content.Intent $r7;

        $r0 := @parameter0: android.accounts.Account;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String[];

        $r6 := @parameter7: android.os.Bundle;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        staticinvoke <com.google.android.gms.common.internal.zzbp: void zzb(boolean,java.lang.Object)>(1, "We only support hostedDomain filter for account chip styled account picker");

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.google.android.gms");

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("allowableAccounts", $r1);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r2);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r6);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("selectedAccount", $r0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("alwaysPromptForAccount", $z0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("descriptionTextOverride", $r3);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("authTokenType", $r4);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("addAccountRequiredFeatures", $r5);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("setGmsCoreAccount", 0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideTheme", 0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("overrideCustomTheme", 0);

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("hostedDomainFilter", null);

        return $r7;
    }
