com.software.shell.fab.ViewInvalidator extends java.lang.Object
private static final org.slf4j.Logger LOGGER
private long invalidationDelay
private boolean invalidationDelayedRequired
private boolean invalidationRequired
private final android.view.View view
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/fab/ViewInvalidator;");

        <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    void <init>(android.view.View)
    {
        com.software.shell.fab.ViewInvalidator r0;
        android.view.View $r1;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.software.shell.fab.ViewInvalidator: android.view.View view> = $r1;

        return;
    }
    private void reset()
    {
        com.software.shell.fab.ViewInvalidator r0;
        org.slf4j.Logger $r1;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationRequired> = 0;

        r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationDelayedRequired> = 0;

        virtualinvoke r0.<com.software.shell.fab.ViewInvalidator: void setInvalidationDelay(long)>(0L);

        $r1 = <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String)>("Reset the view invalidator configuration");

        return;
    }
    long getInvalidationDelay()
    {
        com.software.shell.fab.ViewInvalidator r0;
        long l0;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        l0 = r0.<com.software.shell.fab.ViewInvalidator: long invalidationDelay>;

        return l0;
    }
    void invalidate()
    {
        com.software.shell.fab.ViewInvalidator r0;
        boolean $z0;
        android.view.View $r1;
        org.slf4j.Logger $r2;
        long $l0;
        java.lang.Long $r3;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        $z0 = virtualinvoke r0.<com.software.shell.fab.ViewInvalidator: boolean isInvalidationRequired()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.software.shell.fab.ViewInvalidator: android.view.View view>;

        virtualinvoke $r1.<android.view.View: void postInvalidate()>();

        $r2 = <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>("Called view invalidation");

     label1:
        $z0 = virtualinvoke r0.<com.software.shell.fab.ViewInvalidator: boolean isInvalidationDelayedRequired()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.software.shell.fab.ViewInvalidator: android.view.View view>;

        $l0 = virtualinvoke r0.<com.software.shell.fab.ViewInvalidator: long getInvalidationDelay()>();

        virtualinvoke $r1.<android.view.View: void postInvalidateDelayed(long)>($l0);

        $r2 = <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER>;

        $l0 = virtualinvoke r0.<com.software.shell.fab.ViewInvalidator: long getInvalidationDelay()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Called view delayed invalidation. Delay time is: {}", $r3);

     label2:
        specialinvoke r0.<com.software.shell.fab.ViewInvalidator: void reset()>();

        return;
    }
    boolean isInvalidationDelayedRequired()
    {
        com.software.shell.fab.ViewInvalidator r0;
        boolean z0;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        z0 = r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationDelayedRequired>;

        return z0;
    }
    boolean isInvalidationRequired()
    {
        com.software.shell.fab.ViewInvalidator r0;
        boolean z0;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        z0 = r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationRequired>;

        return z0;
    }
    void requireDelayedInvalidation()
    {
        com.software.shell.fab.ViewInvalidator r0;
        org.slf4j.Logger $r1;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationDelayedRequired> = 1;

        $r1 = <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String)>("Set delayed invalidation required");

        return;
    }
    void requireInvalidation()
    {
        com.software.shell.fab.ViewInvalidator r0;
        org.slf4j.Logger $r1;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        r0.<com.software.shell.fab.ViewInvalidator: boolean invalidationRequired> = 1;

        $r1 = <com.software.shell.fab.ViewInvalidator: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String)>("Set invalidation required");

        return;
    }
    void setInvalidationDelay(long)
    {
        com.software.shell.fab.ViewInvalidator r0;
        long $l0;

        r0 := @this: com.software.shell.fab.ViewInvalidator;

        $l0 := @parameter0: long;

        r0.<com.software.shell.fab.ViewInvalidator: long invalidationDelay> = $l0;

        return;
    }
