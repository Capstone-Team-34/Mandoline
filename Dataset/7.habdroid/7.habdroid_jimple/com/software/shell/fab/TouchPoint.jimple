com.software.shell.fab.TouchPoint extends java.lang.Object
private static final org.slf4j.Logger LOGGER
private float lastX
private float lastY
private float x
private float y
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/fab/TouchPoint;");

        <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    void <init>(float, float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0, $f1;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setX(float)>($f0);

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setY(float)>($f1);

        return;
    }
    public float getLastX()
    {
        com.software.shell.fab.TouchPoint r0;
        float f0;

        r0 := @this: com.software.shell.fab.TouchPoint;

        f0 = r0.<com.software.shell.fab.TouchPoint: float lastX>;

        return f0;
    }
    public float getLastY()
    {
        com.software.shell.fab.TouchPoint r0;
        float f0;

        r0 := @this: com.software.shell.fab.TouchPoint;

        f0 = r0.<com.software.shell.fab.TouchPoint: float lastY>;

        return f0;
    }
    public float getX()
    {
        com.software.shell.fab.TouchPoint r0;
        float f0;

        r0 := @this: com.software.shell.fab.TouchPoint;

        f0 = r0.<com.software.shell.fab.TouchPoint: float x>;

        return f0;
    }
    public float getY()
    {
        com.software.shell.fab.TouchPoint r0;
        float f0;

        r0 := @this: com.software.shell.fab.TouchPoint;

        f0 = r0.<com.software.shell.fab.TouchPoint: float y>;

        return f0;
    }
    boolean isInsideCircle(float, float, float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2;
        byte $b0;
        boolean $z0;
        org.slf4j.Logger $r1;
        java.lang.String $r2;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getX()>();

        $f0 = $f3 - $f0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $f0 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getY()>();

        $f0 = $f0 - $f1;

        $d1 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $d2 = (double) $f2;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $d0 = $d0 + $d1;

        $b0 = $d0 cmpg $d2;

        if $b0 > 0 goto label3;

        $z0 = 1;

     label1:
        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        if $z0 == 0 goto label4;

        $r2 = "IS";

     label2:
        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Detected touch point {} inside the main circle", $r2);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r2 = "IS NOT";

        goto label2;
    }
    void reset()
    {
        com.software.shell.fab.TouchPoint r0;
        org.slf4j.Logger $r1;

        r0 := @this: com.software.shell.fab.TouchPoint;

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setX(float)>(0.0F);

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setY(float)>(0.0F);

        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String)>("Reset touch point");

        return;
    }
    final void setLastX(float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0;
        byte $b0;
        org.slf4j.Logger $r1;
        java.lang.Float $r2;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        r0.<com.software.shell.fab.TouchPoint: float lastX> = $f0;

        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        $f0 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getLastX()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Set touch point last X-axis coordinate to: {}", $r2);

     label1:
        return;
    }
    final void setLastY(float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0;
        byte $b0;
        org.slf4j.Logger $r1;
        java.lang.Float $r2;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        r0.<com.software.shell.fab.TouchPoint: float lastY> = $f0;

        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        $f0 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getLastY()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Set touch point last Y-axis coordinate to: {}", $r2);

     label1:
        return;
    }
    final void setX(float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0, $f1;
        org.slf4j.Logger $r1;
        java.lang.Float $r2;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        r0.<com.software.shell.fab.TouchPoint: float x> = $f0;

        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        $f1 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getX()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Set touch point X-axis coordinate to: {}", $r2);

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setLastX(float)>($f0);

        return;
    }
    final void setY(float)
    {
        com.software.shell.fab.TouchPoint r0;
        float $f0, $f1;
        org.slf4j.Logger $r1;
        java.lang.Float $r2;

        r0 := @this: com.software.shell.fab.TouchPoint;

        $f0 := @parameter0: float;

        r0.<com.software.shell.fab.TouchPoint: float y> = $f0;

        $r1 = <com.software.shell.fab.TouchPoint: org.slf4j.Logger LOGGER>;

        $f1 = virtualinvoke r0.<com.software.shell.fab.TouchPoint: float getY()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Set touch point Y-axis coordinate to: {}", $r2);

        virtualinvoke r0.<com.software.shell.fab.TouchPoint: void setLastY(float)>($f0);

        return;
    }
