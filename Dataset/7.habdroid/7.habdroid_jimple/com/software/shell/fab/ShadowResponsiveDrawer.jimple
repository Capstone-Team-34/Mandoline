com.software.shell.fab.ShadowResponsiveDrawer extends com.software.shell.fab.EffectDrawer
private static final org.slf4j.Logger LOGGER
private static final float SHADOW_DRAWING_STEP
private static final float SHADOW_RESPONSE_FACTOR
private float currentShadowRadius
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/fab/ShadowResponsiveDrawer;");

        <com.software.shell.fab.ShadowResponsiveDrawer: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    void <init>(com.software.shell.fab.ActionButton)
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        com.software.shell.fab.ActionButton $r1;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $r1 := @parameter0: com.software.shell.fab.ActionButton;

        specialinvoke r0.<com.software.shell.fab.EffectDrawer: void <init>(com.software.shell.fab.ActionButton)>($r1);

        specialinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: void init()>();

        return;
    }
    private void init()
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        com.software.shell.fab.ActionButton $r1;
        float $f0;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $r1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $f0 = virtualinvoke $r1.<com.software.shell.fab.ActionButton: float getShadowRadius()>();

        r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius> = $f0;

        return;
    }
    void draw(android.graphics.Canvas)
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        android.graphics.Canvas $r1;
        com.software.shell.fab.ActionButton $r2;
        android.graphics.Paint $r3;
        float $f0, $f1, $f2;
        int $i0;
        org.slf4j.Logger $r4;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: void updateRadius()>();

        $r2 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $r3 = virtualinvoke $r2.<com.software.shell.fab.ActionButton: android.graphics.Paint getPaint()>();

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $r2 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $f1 = virtualinvoke $r2.<com.software.shell.fab.ActionButton: float getShadowXOffset()>();

        $r2 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $f2 = virtualinvoke $r2.<com.software.shell.fab.ActionButton: float getShadowYOffset()>();

        $r2 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $i0 = virtualinvoke $r2.<com.software.shell.fab.ActionButton: int getShadowColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f0, $f1, $f2, $i0);

        $r4 = <com.software.shell.fab.ShadowResponsiveDrawer: org.slf4j.Logger LOGGER>;

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>("Drawn the next Shadow Responsive Effect step");

        return;
    }
    float getMaxShadowRadius()
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        float $f0;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $f0 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: float getMinShadowRadius()>();

        $f0 = $f0 * 1.75F;

        return $f0;
    }
    float getMinShadowRadius()
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        com.software.shell.fab.ActionButton $r1;
        float $f0;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $r1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $f0 = virtualinvoke $r1.<com.software.shell.fab.ActionButton: float getShadowRadius()>();

        return $f0;
    }
    void setCurrentShadowRadius(float)
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        float $f0;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $f0 := @parameter0: float;

        r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius> = $f0;

        return;
    }
    void updateRadius()
    {
        com.software.shell.fab.ShadowResponsiveDrawer r0;
        boolean $z0;
        float $f0, $f1;
        byte $b0;
        com.software.shell.fab.ActionButton $r1;
        com.software.shell.fab.ViewInvalidator $r2;
        org.slf4j.Logger $r3;
        java.lang.Float $r4;

        r0 := @this: com.software.shell.fab.ShadowResponsiveDrawer;

        $z0 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: boolean isPressed()>();

        if $z0 == 0 goto label2;

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $f1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: float getMaxShadowRadius()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label2;

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $f0 = $f0 + 0.5F;

        r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius> = $f0;

        $r1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $r2 = virtualinvoke $r1.<com.software.shell.fab.ActionButton: com.software.shell.fab.ViewInvalidator getInvalidator()>();

        virtualinvoke $r2.<com.software.shell.fab.ViewInvalidator: void requireInvalidation()>();

     label1:
        $r3 = <com.software.shell.fab.ShadowResponsiveDrawer: org.slf4j.Logger LOGGER>;

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Updated Shadow Responsive Effect current radius to: {}", $r4);

        return;

     label2:
        $z0 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: boolean isPressed()>();

        if $z0 != 0 goto label3;

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $f1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: float getMinShadowRadius()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label3;

        $f0 = r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius>;

        $f0 = $f0 - 0.5F;

        r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius> = $f0;

        $r1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $r2 = virtualinvoke $r1.<com.software.shell.fab.ActionButton: com.software.shell.fab.ViewInvalidator getInvalidator()>();

        virtualinvoke $r2.<com.software.shell.fab.ViewInvalidator: void requireInvalidation()>();

        goto label1;

     label3:
        $z0 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: boolean isPressed()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.software.shell.fab.ShadowResponsiveDrawer: com.software.shell.fab.ActionButton getActionButton()>();

        $f0 = virtualinvoke $r1.<com.software.shell.fab.ActionButton: float getShadowRadius()>();

        r0.<com.software.shell.fab.ShadowResponsiveDrawer: float currentShadowRadius> = $f0;

        goto label1;
    }
