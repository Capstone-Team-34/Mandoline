com.software.shell.uitools.convert.DensityConverter extends java.lang.Object
private static final org.slf4j.Logger LOGGER
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/uitools/convert/DensityConverter;");

        <com.software.shell.uitools.convert.DensityConverter: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    private void <init>()
    {
        com.software.shell.uitools.convert.DensityConverter r0;

        r0 := @this: com.software.shell.uitools.convert.DensityConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static float calculateDensityScaleFactor(android.content.Context)
    {
        android.content.Context $r0;
        org.slf4j.Logger $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0;
        java.lang.Float $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r3.<android.util.DisplayMetrics: float density>;

        $r1 = <com.software.shell.uitools.convert.DensityConverter: org.slf4j.Logger LOGGER>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Density scale factor is: {}", $r4);

        return $f0;
    }
    public static float dpToPx(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        org.slf4j.Logger $r1;
        java.lang.Float $r2, $r3;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $f1 = staticinvoke <com.software.shell.uitools.convert.DensityConverter: float calculateDensityScaleFactor(android.content.Context)>($r0);

        $f1 = $f1 * $f0;

        $r1 = <com.software.shell.uitools.convert.DensityConverter: org.slf4j.Logger LOGGER>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Density-independent value: {} converted to real pixel value: {}", $r2, $r3);

        return $f1;
    }
    public static float pxToDp(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        org.slf4j.Logger $r1;
        java.lang.Float $r2, $r3;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $f1 = staticinvoke <com.software.shell.uitools.convert.DensityConverter: float calculateDensityScaleFactor(android.content.Context)>($r0);

        $f1 = $f0 / $f1;

        $r1 = <com.software.shell.uitools.convert.DensityConverter: org.slf4j.Logger LOGGER>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Real pixel value: {} converted to density-independent value: {}", $r2, $r3);

        return $f1;
    }
