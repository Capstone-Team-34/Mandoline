com.software.shell.uitools.resutils.id.IdGenerator extends java.lang.Object
private static final org.slf4j.Logger LOGGER
private static final java.util.concurrent.atomic.AtomicInteger NEXT_ID
    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/uitools/resutils/id/IdGenerator;");

        <com.software.shell.uitools.resutils.id.IdGenerator: org.slf4j.Logger LOGGER> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        <com.software.shell.uitools.resutils.id.IdGenerator: java.util.concurrent.atomic.AtomicInteger NEXT_ID> = $r1;

        return;
    }
    private void <init>()
    {
        com.software.shell.uitools.resutils.id.IdGenerator r0;

        r0 := @this: com.software.shell.uitools.resutils.id.IdGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int next()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0, $i1;
        boolean $z0;
        org.slf4j.Logger $r1;
        java.lang.Integer $r2;

     label1:
        $r0 = <com.software.shell.uitools.resutils.id.IdGenerator: java.util.concurrent.atomic.AtomicInteger NEXT_ID>;

        $i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i1 = $i0 + 1;

        if $i1 <= 16777215 goto label2;

        $i1 = 1;

     label2:
        $r0 = <com.software.shell.uitools.resutils.id.IdGenerator: java.util.concurrent.atomic.AtomicInteger NEXT_ID>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $r1 = <com.software.shell.uitools.resutils.id.IdGenerator: org.slf4j.Logger LOGGER>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Next generated ID is: {}", $r2);

        return $i0;
    }
