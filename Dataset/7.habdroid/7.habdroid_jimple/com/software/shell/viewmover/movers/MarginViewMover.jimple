com.software.shell.viewmover.movers.MarginViewMover extends com.software.shell.viewmover.movers.ViewMover
private static final org.slf4j.Logger LOGGER
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/viewmover/movers/MarginViewMover;");

        <com.software.shell.viewmover.movers.MarginViewMover: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    void <init>(android.view.View)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.software.shell.viewmover.movers.ViewMover: void <init>(android.view.View)>($r1);

        return;
    }
    private boolean isViewLeftAligned(android.view.ViewGroup$MarginLayoutParams)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        android.view.ViewGroup$MarginLayoutParams $r1;
        org.slf4j.Logger $r2;
        android.view.View $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i0 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i0 == 0 goto label1;

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if $i0 != $i1 goto label4;

     label1:
        $z0 = 1;

     label2:
        $r2 = <com.software.shell.viewmover.movers.MarginViewMover: org.slf4j.Logger LOGGER>;

        if $z0 == 0 goto label5;

        $r4 = "LEFT";

     label3:
        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("View is {} aligned", $r4);

        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r4 = "RIGHT";

        goto label3;
    }
    private boolean isViewTopAligned(android.view.ViewGroup$MarginLayoutParams)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        android.view.ViewGroup$MarginLayoutParams $r1;
        org.slf4j.Logger $r2;
        android.view.View $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i0 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if $i0 == 0 goto label1;

        $i1 = $r1.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i0 != $i1 goto label4;

     label1:
        $z0 = 1;

     label2:
        $r2 = <com.software.shell.viewmover.movers.MarginViewMover: org.slf4j.Logger LOGGER>;

        if $z0 == 0 goto label5;

        $r4 = "TOP";

     label3:
        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("View is {} aligned", $r4);

        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r4 = "BOTTOM";

        goto label3;
    }
    int calculateEndBottomBound(float)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i0 = (int) $f0;

        $i0 = $i1 + $i0;

        return $i0;
    }
    int calculateEndLeftBound(float)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i0 = (int) $f0;

        $i0 = $i1 + $i0;

        return $i0;
    }
    int calculateEndRightBound(float)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i0 = (int) $f0;

        $i0 = $i1 + $i0;

        return $i0;
    }
    int calculateEndTopBound(float)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = (int) $f0;

        $i0 = $i1 + $i0;

        return $i0;
    }
    void changeViewPosition(float, float)
    {
        com.software.shell.viewmover.movers.MarginViewMover r0;
        float $f0, $f1, $f2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        boolean $z0;
        int $i0;
        org.slf4j.Logger $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;

        r0 := @this: com.software.shell.viewmover.movers.MarginViewMover;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $z0 = specialinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: boolean isViewLeftAligned(android.view.ViewGroup$MarginLayoutParams)>($r3);

        if $z0 == 0 goto label3;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $f2 = (float) $i0;

        $f0 = $f2 + $f0;

        $i0 = (int) $f0;

        $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = $i0;

     label1:
        $z0 = specialinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: boolean isViewTopAligned(android.view.ViewGroup$MarginLayoutParams)>($r3);

        if $z0 == 0 goto label4;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $f0 = (float) $i0;

        $f0 = $f0 + $f1;

        $i0 = (int) $f0;

        $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = $i0;

     label2:
        $r4 = <com.software.shell.viewmover.movers.MarginViewMover: org.slf4j.Logger LOGGER>;

        $r5 = newarray (java.lang.Object)[4];

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[3] = $r6;

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Updated view margins: left = {}, top = {}, right = {}, bottom = {}", $r5);

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.MarginViewMover: android.view.View getView()>();

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        return;

     label3:
        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $f2 = (float) $i0;

        $f0 = $f2 - $f0;

        $i0 = (int) $f0;

        $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = $i0;

        goto label1;

     label4:
        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $f0 = (float) $i0;

        $f0 = $f0 - $f1;

        $i0 = (int) $f0;

        $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = $i0;

        goto label2;
    }
