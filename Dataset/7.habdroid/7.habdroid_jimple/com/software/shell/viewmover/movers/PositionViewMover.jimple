com.software.shell.viewmover.movers.PositionViewMover extends com.software.shell.viewmover.movers.ViewMover
private static final org.slf4j.Logger LOGGER
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/software/shell/viewmover/movers/PositionViewMover;");

        <com.software.shell.viewmover.movers.PositionViewMover: org.slf4j.Logger LOGGER> = $r0;

        return;
    }
    void <init>(android.view.View)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.software.shell.viewmover.movers.ViewMover: void <init>(android.view.View)>($r1);

        return;
    }
    int calculateEndBottomBound(float)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: int calculateEndTopBound(float)>($f0);

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    int calculateEndLeftBound(float)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        float $f0, $f1;
        android.view.View $r1;
        int $i0;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        $f1 = virtualinvoke $r1.<android.view.View: float getX()>();

        $f0 = $f1 + $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    int calculateEndRightBound(float)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        float $f0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: int calculateEndLeftBound(float)>($f0);

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    int calculateEndTopBound(float)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        float $f0, $f1;
        android.view.View $r1;
        int $i0;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        $f1 = virtualinvoke $r1.<android.view.View: float getY()>();

        $f0 = $f1 + $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    void changeViewPosition(float, float)
    {
        com.software.shell.viewmover.movers.PositionViewMover r0;
        float $f0, $f1;
        int $i0;
        android.view.View $r1;
        org.slf4j.Logger $r2;
        java.lang.Float $r3, $r4;

        r0 := @this: com.software.shell.viewmover.movers.PositionViewMover;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: int calculateEndLeftBound(float)>($f0);

        $f0 = (float) $i0;

        $i0 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: int calculateEndTopBound(float)>($f1);

        $f1 = (float) $i0;

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        virtualinvoke $r1.<android.view.View: void setX(float)>($f0);

        $r1 = virtualinvoke r0.<com.software.shell.viewmover.movers.PositionViewMover: android.view.View getView()>();

        virtualinvoke $r1.<android.view.View: void setY(float)>($f1);

        $r2 = <com.software.shell.viewmover.movers.PositionViewMover: org.slf4j.Logger LOGGER>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Updated view position: leftX = {}, topY = {}", $r3, $r4);

        return;
    }
