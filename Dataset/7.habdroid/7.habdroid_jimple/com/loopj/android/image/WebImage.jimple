com.loopj.android.image.WebImage extends java.lang.Object implements com.loopj.android.image.SmartImage
private static final int CONNECT_TIMEOUT
private static final int READ_TIMEOUT
private static com.loopj.android.image.WebImageCache webImageCache
private java.lang.String url
    public void <init>(java.lang.String)
    {
        com.loopj.android.image.WebImage r0;
        java.lang.String $r1;

        r0 := @this: com.loopj.android.image.WebImage;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.loopj.android.image.WebImage: java.lang.String url> = $r1;

        return;
    }
    private android.graphics.Bitmap getBitmapFromUrl(java.lang.String)
    {
        com.loopj.android.image.WebImage r0;
        java.lang.String $r1;
        java.net.URL $r2;
        java.net.URLConnection $r3;
        java.lang.Object $r4;
        java.io.InputStream $r5;
        android.graphics.Bitmap $r6;
        java.lang.Exception $r7;

        r0 := @this: com.loopj.android.image.WebImage;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r3.<java.net.URLConnection: void setConnectTimeout(int)>(5000);

        virtualinvoke $r3.<java.net.URLConnection: void setReadTimeout(int)>(10000);

        $r4 = virtualinvoke $r3.<java.net.URLConnection: java.lang.Object getContent()>();

        $r5 = (java.io.InputStream) $r4;

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static void removeFromCache(java.lang.String)
    {
        java.lang.String $r0;
        com.loopj.android.image.WebImageCache $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache>;

        if $r1 == null goto label1;

        $r1 = <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache>;

        virtualinvoke $r1.<com.loopj.android.image.WebImageCache: void remove(java.lang.String)>($r0);

     label1:
        return;
    }
    public android.graphics.Bitmap getBitmap(android.content.Context)
    {
        com.loopj.android.image.WebImage r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.loopj.android.image.WebImageCache $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: com.loopj.android.image.WebImage;

        $r1 := @parameter0: android.content.Context;

        $r3 = <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache>;

        if $r3 != null goto label1;

        $r3 = new com.loopj.android.image.WebImageCache;

        specialinvoke $r3.<com.loopj.android.image.WebImageCache: void <init>(android.content.Context)>($r1);

        <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache> = $r3;

     label1:
        $r2 = r0.<com.loopj.android.image.WebImage: java.lang.String url>;

        if $r2 == null goto label2;

        $r3 = <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache>;

        $r2 = r0.<com.loopj.android.image.WebImage: java.lang.String url>;

        $r4 = virtualinvoke $r3.<com.loopj.android.image.WebImageCache: android.graphics.Bitmap get(java.lang.String)>($r2);

        if $r4 != null goto label3;

        $r2 = r0.<com.loopj.android.image.WebImage: java.lang.String url>;

        $r4 = specialinvoke r0.<com.loopj.android.image.WebImage: android.graphics.Bitmap getBitmapFromUrl(java.lang.String)>($r2);

        if $r4 == null goto label3;

        $r3 = <com.loopj.android.image.WebImage: com.loopj.android.image.WebImageCache webImageCache>;

        $r2 = r0.<com.loopj.android.image.WebImage: java.lang.String url>;

        virtualinvoke $r3.<com.loopj.android.image.WebImageCache: void put(java.lang.String,android.graphics.Bitmap)>($r2, $r4);

        return $r4;

     label2:
        return null;

     label3:
        return $r4;
    }
