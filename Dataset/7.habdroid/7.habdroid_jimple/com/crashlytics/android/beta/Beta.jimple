com.crashlytics.android.beta.Beta extends io.fabric.sdk.android.Kit implements io.fabric.sdk.android.services.common.DeviceIdentifierProvider
private static final java.lang.String CRASHLYTICS_API_ENDPOINT
private static final java.lang.String CRASHLYTICS_BUILD_PROPERTIES
static final java.lang.String NO_DEVICE_TOKEN
public static final java.lang.String TAG
private final io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache
private final com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader
private com.crashlytics.android.beta.UpdatesController updatesController
    public void <init>()
    {
        com.crashlytics.android.beta.Beta r0;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r1;
        com.crashlytics.android.beta.DeviceTokenLoader $r2;

        r0 := @this: com.crashlytics.android.beta.Beta;

        specialinvoke r0.<io.fabric.sdk.android.Kit: void <init>()>();

        $r1 = new io.fabric.sdk.android.services.cache.MemoryValueCache;

        specialinvoke $r1.<io.fabric.sdk.android.services.cache.MemoryValueCache: void <init>()>();

        r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache> = $r1;

        $r2 = new com.crashlytics.android.beta.DeviceTokenLoader;

        specialinvoke $r2.<com.crashlytics.android.beta.DeviceTokenLoader: void <init>()>();

        r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader> = $r2;

        return;
    }
    private java.lang.String getBetaDeviceToken(android.content.Context, java.lang.String)
    {
        com.crashlytics.android.beta.Beta r0;
        android.content.Context $r1;
        java.lang.String $r2, r7, $r8;
        java.lang.Exception r3;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r4;
        com.crashlytics.android.beta.DeviceTokenLoader $r5;
        java.lang.Object $r6;
        boolean $z0;
        io.fabric.sdk.android.Logger $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r2 = null;

     label1:
        $r4 = r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache>;

        $r5 = r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader>;

        $r6 = virtualinvoke $r4.<io.fabric.sdk.android.services.cache.MemoryValueCache: java.lang.Object get(android.content.Context,io.fabric.sdk.android.services.cache.ValueLoader)>($r1, $r5);

        r7 = (java.lang.String) $r6;

     label2:
        $r8 = "";

     label3:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r7);

     label4:
        if $z0 == 0 goto label7;

        $r2 = null;

     label5:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beta device token present: ");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label9;

        $z0 = 1;

     label6:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", r7);

        return $r2;

     label7:
        $r2 = r7;

        goto label5;

     label8:
        r3 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to load the Beta device token", r3);

        goto label5;

     label9:
        $z0 = 0;

        goto label6;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
    }
    private io.fabric.sdk.android.services.settings.BetaSettingsData getBetaSettingsData()
    {
        com.crashlytics.android.beta.Beta r0;
        io.fabric.sdk.android.services.settings.Settings $r1;
        io.fabric.sdk.android.services.settings.SettingsData $r2;
        io.fabric.sdk.android.services.settings.BetaSettingsData r3;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

        if $r2 == null goto label1;

        r3 = $r2.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.BetaSettingsData betaSettingsData>;

        return r3;

     label1:
        return null;
    }
    public static com.crashlytics.android.beta.Beta getInstance()
    {
        io.fabric.sdk.android.Kit $r0;
        com.crashlytics.android.beta.Beta $r1;

        $r0 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/beta/Beta;");

        $r1 = (com.crashlytics.android.beta.Beta) $r0;

        return $r1;
    }
    private com.crashlytics.android.beta.BuildProperties loadBuildProperties(android.content.Context)
    {
        com.crashlytics.android.beta.Beta r0;
        android.content.Context $r1;
        java.io.InputStream r2, $r5;
        com.crashlytics.android.beta.BuildProperties r3, $r6;
        android.content.res.AssetManager $r4;
        io.fabric.sdk.android.Logger $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.io.IOException r10, r12, r14;
        java.lang.Exception r11;
        java.lang.Throwable $r13;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: android.content.Context;

        r2 = null;

        r3 = null;

     label01:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("crashlytics-build.properties");

     label02:
        r2 = $r5;

        if $r5 == null goto label08;

     label03:
        $r6 = staticinvoke <com.crashlytics.android.beta.BuildProperties: com.crashlytics.android.beta.BuildProperties fromPropertiesStream(java.io.InputStream)>($r5);

     label04:
        r3 = $r6;

     label05:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label06:
        $r8 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = $r6.<com.crashlytics.android.beta.BuildProperties: java.lang.String packageName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" build properties: ");

        $r9 = $r6.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r9 = $r6.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionCode>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r9 = $r6.<com.crashlytics.android.beta.BuildProperties: java.lang.String buildId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r9);

     label08:
        if $r5 == null goto label22;

     label09:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label10:
        return r3;

     label11:
        r10 := @caughtexception;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", r10);

        return r3;

     label12:
        r11 := @caughtexception;

     label13:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error reading Beta build properties", r11);

     label14:
        if r2 == null goto label22;

     label15:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label16:
        return r3;

     label17:
        r12 := @caughtexception;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", r12);

        return r3;

     label18:
        $r13 := @caughtexception;

        if r2 == null goto label20;

     label19:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label20:
        throw $r13;

     label21:
        r14 := @caughtexception;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", r14);

        goto label20;

     label22:
        return r3;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label08 with label18;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
    }
    boolean canCheckForUpdates(io.fabric.sdk.android.services.settings.BetaSettingsData, com.crashlytics.android.beta.BuildProperties)
    {
        com.crashlytics.android.beta.Beta r0;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r1;
        com.crashlytics.android.beta.BuildProperties $r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.BetaSettingsData;

        $r2 := @parameter1: com.crashlytics.android.beta.BuildProperties;

        if $r1 == null goto label1;

        $r3 = $r1.<io.fabric.sdk.android.services.settings.BetaSettingsData: java.lang.String updateUrl>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    com.crashlytics.android.beta.UpdatesController createUpdatesController(int, android.app.Application)
    {
        com.crashlytics.android.beta.Beta r0;
        int $i0;
        android.app.Application $r1;
        io.fabric.sdk.android.Fabric $r2;
        io.fabric.sdk.android.ActivityLifecycleManager $r3;
        java.util.concurrent.ExecutorService $r4;
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController $r5;
        com.crashlytics.android.beta.ImmediateCheckForUpdatesController $r6;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.app.Application;

        if $i0 < 14 goto label1;

        $r2 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.Fabric getFabric()>();

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.ActivityLifecycleManager getActivityLifecycleManager()>();

        $r2 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.Fabric getFabric()>();

        $r4 = virtualinvoke $r2.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService getExecutorService()>();

        $r5 = new com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController;

        specialinvoke $r5.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: void <init>(io.fabric.sdk.android.ActivityLifecycleManager,java.util.concurrent.ExecutorService)>($r3, $r4);

        return $r5;

     label1:
        $r6 = new com.crashlytics.android.beta.ImmediateCheckForUpdatesController;

        specialinvoke $r6.<com.crashlytics.android.beta.ImmediateCheckForUpdatesController: void <init>()>();

        return $r6;
    }
    protected java.lang.Boolean doInBackground()
    {
        com.crashlytics.android.beta.Beta r0;
        io.fabric.sdk.android.services.common.SystemCurrentTimeProvider $r1;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r2;
        io.fabric.sdk.android.Logger $r3;
        android.content.Context $r4;
        io.fabric.sdk.android.services.common.IdManager $r5;
        java.lang.String $r6;
        boolean $z0;
        java.lang.Boolean $r7;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r8;
        com.crashlytics.android.beta.BuildProperties $r9;
        com.crashlytics.android.beta.UpdatesController $r10;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl $r11;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Beta kit initializing...");

        $r4 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r5 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r6 = virtualinvoke $r5.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        $r6 = specialinvoke r0.<com.crashlytics.android.beta.Beta: java.lang.String getBetaDeviceToken(android.content.Context,java.lang.String)>($r4, $r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "A Beta device token was not found for this app");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r7;

     label1:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Beta device token is present, checking for app updates.");

        $r8 = specialinvoke r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.settings.BetaSettingsData getBetaSettingsData()>();

        $r9 = specialinvoke r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.BuildProperties loadBuildProperties(android.content.Context)>($r4);

        $z0 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: boolean canCheckForUpdates(io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties)>($r8, $r9);

        if $z0 == 0 goto label2;

        $r10 = r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController updatesController>;

        $r11 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

        specialinvoke $r11.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

        $r1 = new io.fabric.sdk.android.services.common.SystemCurrentTimeProvider;

        specialinvoke $r1.<io.fabric.sdk.android.services.common.SystemCurrentTimeProvider: void <init>()>();

        $r2 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        specialinvoke $r2.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>(io.fabric.sdk.android.Logger)>($r3);

        interfaceinvoke $r10.<com.crashlytics.android.beta.UpdatesController: void initialize(android.content.Context,com.crashlytics.android.beta.Beta,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties,io.fabric.sdk.android.services.persistence.PreferenceStore,io.fabric.sdk.android.services.common.CurrentTimeProvider,io.fabric.sdk.android.services.network.HttpRequestFactory)>($r4, r0, $r5, $r8, $r9, $r11, $r1, $r2);

     label2:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r7;
    }
    protected volatile java.lang.Object doInBackground()
    {
        com.crashlytics.android.beta.Beta r0;
        java.lang.Boolean $r1;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: java.lang.Boolean doInBackground()>();

        return $r1;
    }
    public java.util.Map getDeviceIdentifiers()
    {
        com.crashlytics.android.beta.Beta r0;
        java.util.HashMap r1;
        io.fabric.sdk.android.services.common.IdManager $r2;
        java.lang.String $r3;
        android.content.Context $r4;
        boolean $z0;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r5;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r2 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        $r4 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r3 = specialinvoke r0.<com.crashlytics.android.beta.Beta: java.lang.String getBetaDeviceToken(android.content.Context,java.lang.String)>($r4, $r3);

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $r5 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType FONT_TOKEN>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label1:
        return r1;
    }
    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.beta.Beta r0;

        r0 := @this: com.crashlytics.android.beta.Beta;

        return "com.crashlytics.sdk.android:beta";
    }
    java.lang.String getOverridenSpiEndpoint()
    {
        com.crashlytics.android.beta.Beta r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r1, "com.crashlytics.ApiEndpoint");

        return $r2;
    }
    public java.lang.String getVersion()
    {
        com.crashlytics.android.beta.Beta r0;

        r0 := @this: com.crashlytics.android.beta.Beta;

        return "1.2.7.19";
    }
    protected boolean onPreExecute()
    {
        com.crashlytics.android.beta.Beta r0;
        android.content.Context $r1;
        android.app.Application r2;
        int $i0;
        com.crashlytics.android.beta.UpdatesController $r3;

        r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r2 = (android.app.Application) $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r3 = virtualinvoke r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController createUpdatesController(int,android.app.Application)>($i0, r2);

        r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController updatesController> = $r3;

        return 1;
    }
