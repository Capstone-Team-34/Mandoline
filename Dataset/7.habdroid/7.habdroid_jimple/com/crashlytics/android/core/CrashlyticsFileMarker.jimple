com.crashlytics.android.core.CrashlyticsFileMarker extends java.lang.Object
private final io.fabric.sdk.android.services.persistence.FileStore fileStore
private final java.lang.String markerName
    public void <init>(java.lang.String, io.fabric.sdk.android.services.persistence.FileStore)
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r0;
        java.lang.String $r1;
        io.fabric.sdk.android.services.persistence.FileStore $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsFileMarker;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.fabric.sdk.android.services.persistence.FileStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.lang.String markerName> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsFileMarker: io.fabric.sdk.android.services.persistence.FileStore fileStore> = $r2;

        return;
    }
    private java.io.File getMarkerFile()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r0;
        java.io.File $r1, $r3;
        java.lang.String $r2;
        io.fabric.sdk.android.services.persistence.FileStore $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsFileMarker;

        $r1 = new java.io.File;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsFileMarker: io.fabric.sdk.android.services.persistence.FileStore fileStore>;

        $r3 = interfaceinvoke $r4.<io.fabric.sdk.android.services.persistence.FileStore: java.io.File getFilesDir()>();

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.lang.String markerName>;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r2);

        return $r1;
    }
    public boolean create()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r0;
        java.io.IOException r1;
        java.io.File $r2;
        boolean $z0;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsFileMarker;

     label1:
        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.io.File getMarkerFile()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label2:
        return $z0;

     label3:
        r1 := @caughtexception;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating marker: ");

        $r5 = r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.lang.String markerName>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r5, r1);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public boolean isPresent()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsFileMarker;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.io.File getMarkerFile()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }
    public boolean remove()
    {
        com.crashlytics.android.core.CrashlyticsFileMarker r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsFileMarker;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsFileMarker: java.io.File getMarkerFile()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        return $z0;
    }
