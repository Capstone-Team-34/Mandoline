com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider extends java.lang.Object implements com.crashlytics.android.core.LogFileManager$DirectoryProvider
private static final java.lang.String LOG_FILES_DIR
private final io.fabric.sdk.android.services.persistence.FileStore rootFileStore
    public void <init>(io.fabric.sdk.android.services.persistence.FileStore)
    {
        com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider r0;
        io.fabric.sdk.android.services.persistence.FileStore $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider;

        $r1 := @parameter0: io.fabric.sdk.android.services.persistence.FileStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider: io.fabric.sdk.android.services.persistence.FileStore rootFileStore> = $r1;

        return;
    }
    public java.io.File getLogFileDir()
    {
        com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider r0;
        java.io.File r1, $r3;
        io.fabric.sdk.android.services.persistence.FileStore $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider;

        r1 = new java.io.File;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider: io.fabric.sdk.android.services.persistence.FileStore rootFileStore>;

        $r3 = interfaceinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStore: java.io.File getFilesDir()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "log-files");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label1:
        return r1;
    }
