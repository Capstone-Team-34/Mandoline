com.crashlytics.android.core.CrashlyticsCore extends io.fabric.sdk.android.Kit
static final float CLS_DEFAULT_PROCESS_DELAY
static final java.lang.String CRASHLYTICS_REQUIRE_BUILD_ID
static final boolean CRASHLYTICS_REQUIRE_BUILD_ID_DEFAULT
static final java.lang.String CRASH_MARKER_FILE_NAME
static final int DEFAULT_MAIN_HANDLER_TIMEOUT_SEC
private static final java.lang.String INITIALIZATION_MARKER_FILE_NAME
static final int MAX_ATTRIBUTES
static final int MAX_ATTRIBUTE_SIZE
private static final java.lang.String MISSING_BUILD_ID_MSG
private static final java.lang.String PREFERENCE_STORE_NAME
public static final java.lang.String TAG
private final java.util.concurrent.ConcurrentHashMap attributes
private com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker
private com.crashlytics.android.core.CrashlyticsController controller
private com.crashlytics.android.core.CrashlyticsFileMarker crashMarker
private float delay
private boolean disabled
private com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider
private io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory
private com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker
private com.crashlytics.android.core.CrashlyticsListener listener
private final com.crashlytics.android.core.PinningInfoProvider pinningInfo
private final long startTime
private java.lang.String userEmail
private java.lang.String userId
private java.lang.String userName
    public void <init>()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean)>(1.0F, null, null, 0);

        return;
    }
    void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        com.crashlytics.android.core.PinningInfoProvider $r2;
        boolean $z0;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r2 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.ExecutorUtils: java.util.concurrent.ExecutorService buildSingleThreadExecutorService(java.lang.String)>("Crashlytics Exception Handler");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void <init>(float,com.crashlytics.android.core.CrashlyticsListener,com.crashlytics.android.core.PinningInfoProvider,boolean,java.util.concurrent.ExecutorService)>($f0, $r1, $r2, $z0, $r3);

        return;
    }
    void <init>(float, com.crashlytics.android.core.CrashlyticsListener, com.crashlytics.android.core.PinningInfoProvider, boolean, java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        float $f0;
        com.crashlytics.android.core.PinningInfoProvider $r1;
        boolean $z0;
        java.util.concurrent.ExecutorService $r2;
        long $l0;
        com.crashlytics.android.core.CrashlyticsListener r3;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        com.crashlytics.android.core.CrashlyticsCore$NoOpListener $r6;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $f0 := @parameter0: float;

        r3 := @parameter1: com.crashlytics.android.core.CrashlyticsListener;

        $r1 := @parameter2: com.crashlytics.android.core.PinningInfoProvider;

        $z0 := @parameter3: boolean;

        $r2 := @parameter4: java.util.concurrent.ExecutorService;

        specialinvoke r0.<io.fabric.sdk.android.Kit: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = null;

        r0.<com.crashlytics.android.core.CrashlyticsCore: float delay> = $f0;

        if r3 == null goto label2;

     label1:
        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = r3;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled> = $z0;

        $r4 = new com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: void <init>(java.util.concurrent.ExecutorService)>($r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes> = $r5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime> = $l0;

        return;

     label2:
        $r6 = new com.crashlytics.android.core.CrashlyticsCore$NoOpListener;

        r3 = $r6;

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsCore$NoOpListener: void <init>(com.crashlytics.android.core.CrashlyticsCore$1)>(null);

        goto label1;
    }
    static com.crashlytics.android.core.CrashlyticsFileMarker access$100(com.crashlytics.android.core.CrashlyticsCore)
    {
        com.crashlytics.android.core.CrashlyticsCore $r0;
        com.crashlytics.android.core.CrashlyticsFileMarker r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker>;

        return r1;
    }
    private void checkForPreviousCrash()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Exception r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck $r3;
        com.crashlytics.android.core.CrashlyticsFileMarker $r4;
        java.lang.Object $r5;
        java.lang.Boolean r6, $r7;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsListener $r8;
        io.fabric.sdk.android.Logger $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker>;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore$CrashMarkerCheck: void <init>(com.crashlytics.android.core.CrashlyticsFileMarker)>($r4);

        $r5 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r3);

        r6 = (java.lang.Boolean) $r5;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r8 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener>;

        interfaceinvoke $r8.<com.crashlytics.android.core.CrashlyticsListener: void crashlyticsDidDetectCrashDuringPreviousExecution()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Exception thrown by CrashlyticsListener while notifying of previous crash.", r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void doLog(int, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.String $r1, $r2;
        long l1, $l2;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging messages.");

        if $z0 == 0 goto label2;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = r0.<com.crashlytics.android.core.CrashlyticsCore: long startTime>;

        l1 = $l2 - l1;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String formatLogMessage(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void writeToLog(long,java.lang.String)>(l1, $r1);

     label2:
        return;
    }
    private static boolean ensureFabricWithCalled(java.lang.String)
    {
        java.lang.String $r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;
        com.crashlytics.android.core.CrashlyticsController $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsCore getInstance()>();

        if $r1 == null goto label1;

        $r2 = $r1.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        if $r2 != null goto label2;

     label1:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics must be initialized by calling Fabric.with(Context) ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r0, null);

        return 0;

     label2:
        return 1;
    }
    private void finishInitSynchronously()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$1 r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        io.fabric.sdk.android.services.concurrency.Task r5;
        io.fabric.sdk.android.Fabric $r6;
        java.util.concurrent.ExecutorService $r7;
        java.util.concurrent.Future $r8;
        io.fabric.sdk.android.Logger $r9;
        java.util.concurrent.TimeUnit $r10;
        java.lang.InterruptedException r11;
        java.util.concurrent.ExecutionException r12;
        java.util.concurrent.TimeoutException r13;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = new com.crashlytics.android.core.CrashlyticsCore$1;

        specialinvoke r1.<com.crashlytics.android.core.CrashlyticsCore$1: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.Collection getDependencies()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (io.fabric.sdk.android.services.concurrency.Task) $r4;

        virtualinvoke r1.<io.fabric.sdk.android.services.concurrency.PriorityCallable: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>(r5);

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.Fabric getFabric()>();

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService getExecutorService()>();

        $r8 = interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r1);

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics detected incomplete initialization on previous app launch. Will initialize synchronously.");

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label3:
        interfaceinvoke $r8.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r10);

     label4:
        return;

     label5:
        r11 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was interrupted during initialization.", r11);

        return;

     label6:
        r12 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Problem encountered during Crashlytics initialization.", r12);

        return;

     label7:
        r13 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics timed out during initialization.", r13);

        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label6;
        catch java.util.concurrent.TimeoutException from label3 to label4 with label7;
    }
    private static java.lang.String formatLogMessage(int, java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r1, $r3;
        java.lang.StringBuilder $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String logPriorityToString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static com.crashlytics.android.core.CrashlyticsCore getInstance()
    {
        io.fabric.sdk.android.Kit $r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;

        $r0 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/core/CrashlyticsCore;");

        $r1 = (com.crashlytics.android.core.CrashlyticsCore) $r0;

        return $r1;
    }
    static boolean isBuildIdValid(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        io.fabric.sdk.android.Logger $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r1.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Configured not to require a build ID.");

        return 1;

     label1:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isNullOrEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  | ");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".   \\ |  | /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".    \\    /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     \\  /");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".      \\/");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", "This app relies on Crashlytics. Please sign up for access at https://fabric.io/sign_up,\ninstall an Android build tool and ask a team member to invite you to this app\'s organization.");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".      /\\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     /  \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".    /    \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".   / |  | \\");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".     |  |");

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CrashlyticsCore", ".");

        return 0;

     label2:
        return 1;
    }
    private static java.lang.String sanitizeAttribute(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1024 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1024);

     label1:
        return $r0;
    }
    public void crash()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashTest $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = new com.crashlytics.android.core.CrashTest;

        specialinvoke $r1.<com.crashlytics.android.core.CrashTest: void <init>()>();

        virtualinvoke $r1.<com.crashlytics.android.core.CrashTest: void indexOutOfBounds()>();

        return;
    }
    void createCrashMarker()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsFileMarker $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker>;

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsFileMarker: boolean create()>();

        return;
    }
    boolean didPreviousInitializationFail()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsCore$4 $r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r1 = new com.crashlytics.android.core.CrashlyticsCore$4;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore$4: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        $r3 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    protected volatile java.lang.Object doInBackground()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Void $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.Void doInBackground()>();

        return $r1;
    }
    protected java.lang.Void doInBackground()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Exception r1;
        com.crashlytics.android.core.internal.models.SessionEventData $r2;
        com.crashlytics.android.core.CrashlyticsController $r3;
        io.fabric.sdk.android.services.settings.Settings $r4;
        io.fabric.sdk.android.services.settings.SettingsData $r5;
        io.fabric.sdk.android.Logger $r6;
        io.fabric.sdk.android.services.settings.FeaturesSettingsData $r7;
        boolean $z0;
        io.fabric.sdk.android.services.settings.SessionSettingsData $r8;
        float $f0;
        java.lang.Throwable $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationStarted()>();

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.models.SessionEventData getExternalCrashEventData()>();

        if $r2 == null goto label01;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void writeExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData)>($r2);

     label01:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void cleanInvalidTempFiles()>();

     label02:
        $r4 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r5 = virtualinvoke $r4.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

     label03:
        if $r5 != null goto label06;

     label04:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Received null settings, skipping report submission!");

     label05:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label06:
        $r7 = $r5.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.FeaturesSettingsData featuresData>;

        $z0 = $r7.<io.fabric.sdk.android.services.settings.FeaturesSettingsData: boolean collectReports>;

     label07:
        if $z0 != 0 goto label10;

     label08:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Collection of crash reports disabled in Crashlytics settings.");

     label09:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label10:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r8 = $r5.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.SessionSettingsData sessionData>;

        $z0 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: boolean finalizeSessions(io.fabric.sdk.android.services.settings.SessionSettingsData)>($r8);

     label11:
        if $z0 != 0 goto label13;

     label12:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Could not finalize previous sessions.");

     label13:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $f0 = r0.<com.crashlytics.android.core.CrashlyticsCore: float delay>;

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void submitAllReports(float,io.fabric.sdk.android.services.settings.SettingsData)>($f0, $r5);

     label14:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label15:
        r1 := @caughtexception;

     label16:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics encountered a problem during asynchronous initialization.", r1);

     label17:
        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        return null;

     label18:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void markInitializationComplete()>();

        throw $r9;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label12 to label14 with label15;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }
    java.util.Map getAttributes()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.util.Map $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        return $r1;
    }
    com.crashlytics.android.core.CrashlyticsController getController()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsController r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        return r1;
    }
    com.crashlytics.android.core.internal.models.SessionEventData getExternalCrashEventData()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;
        com.crashlytics.android.core.internal.CrashEventDataProvider $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider>;

        $r1 = interfaceinvoke $r2.<com.crashlytics.android.core.internal.CrashEventDataProvider: com.crashlytics.android.core.internal.models.SessionEventData getCrashEventData()>();

        return $r1;

     label1:
        return null;
    }
    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "com.crashlytics.sdk.android.crashlytics-core";
    }
    public com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        boolean $z0;
        com.crashlytics.android.core.PinningInfoProvider r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        return r1;

     label1:
        return null;
    }
    java.lang.String getUserEmail()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        return r2;

     label1:
        return null;
    }
    java.lang.String getUserIdentifier()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        return r2;

     label1:
        return null;
    }
    java.lang.String getUserName()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        io.fabric.sdk.android.services.common.IdManager $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.IdManager: boolean canCollectUserIds()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        return r2;

     label1:
        return null;
    }
    public java.lang.String getVersion()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        return "2.4.1.19";
    }
    boolean internalVerifyPinning(java.net.URL)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.net.URL $r1;
        io.fabric.sdk.android.services.network.HttpMethod $r2;
        com.crashlytics.android.core.PinningInfoProvider $r3;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r4;
        java.lang.String $r5;
        io.fabric.sdk.android.services.network.HttpRequest $r6;
        java.net.HttpURLConnection $r7;
        javax.net.ssl.HttpsURLConnection r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.net.URL;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider getPinningInfoProvider()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        $r2 = <io.fabric.sdk.android.services.network.HttpMethod: io.fabric.sdk.android.services.network.HttpMethod GET>;

        $r5 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        $r6 = interfaceinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequestFactory: io.fabric.sdk.android.services.network.HttpRequest buildHttpRequest(io.fabric.sdk.android.services.network.HttpMethod,java.lang.String)>($r2, $r5);

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        r8 = (javax.net.ssl.HttpsURLConnection) $r7;

        virtualinvoke r8.<javax.net.ssl.HttpsURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        return 1;

     label1:
        return 0;
    }
    public void log(int, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        int $i0;
        java.lang.String $r1, $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>($i0, $r1, $r2);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void log(int,java.lang.String,java.lang.String,boolean)>($i0, $r1, $r2, 1);

        return;
    }
    public void log(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void doLog(int,java.lang.String,java.lang.String)>(3, "CrashlyticsCore", $r1);

        return;
    }
    public void logException(java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.Throwable $r1;
        boolean $z0;
        io.fabric.sdk.android.Logger $r2;
        com.crashlytics.android.core.CrashlyticsController $r3;
        java.lang.Thread $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to logging exceptions.");

        if $z0 == 0 goto label3;

        if $r1 != null goto label2;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void log(int,java.lang.String,java.lang.String)>(5, "CrashlyticsCore", "Crashlytics is ignoring a request to log a null exception.");

        return;

     label2:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsController: void writeNonFatalException(java.lang.Thread,java.lang.Throwable)>($r4, $r1);

     label3:
        return;
    }
    void markInitializationComplete()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsCore$3 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$3;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$3: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2);

        return;
    }
    void markInitializationStarted()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsCore$2 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsCore$2;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore$2: void <init>(com.crashlytics.android.core.CrashlyticsCore)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r2);

        return;
    }
    protected boolean onPreExecute()
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean onPreExecute(android.content.Context)>($r1);

        return $z0;
    }
    boolean onPreExecute(android.content.Context)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        android.content.Context $r1, $r14;
        io.fabric.sdk.android.services.persistence.FileStoreImpl r2;
        com.crashlytics.android.core.ManifestUnityVersionProvider r3;
        java.lang.Exception r4;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl r5;
        boolean $z0;
        io.fabric.sdk.android.services.common.ApiKey $r6;
        java.lang.String $r7, $r8, $r12;
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException $r9;
        io.fabric.sdk.android.Logger $r10;
        java.lang.StringBuilder $r11;
        com.crashlytics.android.core.CrashlyticsFileMarker $r13;
        com.crashlytics.android.core.PreferenceManager $r15;
        com.crashlytics.android.core.PinningInfoProvider $r16;
        com.crashlytics.android.core.CrashlyticsPinningInfoProvider r17;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r18;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r19;
        io.fabric.sdk.android.services.common.IdManager $r20;
        com.crashlytics.android.core.AppData $r21;
        io.fabric.sdk.android.services.common.FirebaseInfo $r22;
        com.crashlytics.android.core.CrashlyticsController $r23;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r24;
        java.lang.Thread$UncaughtExceptionHandler $r25;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: android.content.Context;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r6 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r6.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r1);

        if $r7 != null goto label02;

        return 0;

     label02:
        $r8 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String resolveBuildId(android.content.Context)>($r1);

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.RequireBuildId", 1);

        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean isBuildIdValid(java.lang.String,boolean)>($r8, $z0);

        if $z0 != 0 goto label03;

        $r9 = new io.fabric.sdk.android.services.concurrency.UnmetDependencyException;

        specialinvoke $r9.<io.fabric.sdk.android.services.concurrency.UnmetDependencyException: void <init>(java.lang.String)>("This app relies on Crashlytics. Please sign up for access at https://fabric.io/sign_up,\ninstall an Android build tool and ask a team member to invite you to this app\'s organization.");

        throw $r9;

     label03:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label04:
        $r11 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing Crashlytics ");

        $r12 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersion()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void i(java.lang.String,java.lang.String)>("CrashlyticsCore", $r12);

     label06:
        r2 = new io.fabric.sdk.android.services.persistence.FileStoreImpl;

     label07:
        specialinvoke r2.<io.fabric.sdk.android.services.persistence.FileStoreImpl: void <init>(io.fabric.sdk.android.Kit)>(r0);

     label08:
        $r13 = new com.crashlytics.android.core.CrashlyticsFileMarker;

     label09:
        specialinvoke $r13.<com.crashlytics.android.core.CrashlyticsFileMarker: void <init>(java.lang.String,io.fabric.sdk.android.services.persistence.FileStore)>("crash_marker", r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker crashMarker> = $r13;

     label10:
        $r13 = new com.crashlytics.android.core.CrashlyticsFileMarker;

     label11:
        specialinvoke $r13.<com.crashlytics.android.core.CrashlyticsFileMarker: void <init>(java.lang.String,io.fabric.sdk.android.services.persistence.FileStore)>("initialization_marker", r2);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsFileMarker initializationMarker> = $r13;

     label12:
        r5 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

     label13:
        $r14 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        specialinvoke r5.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(android.content.Context,java.lang.String)>($r14, "com.crashlytics.android.core.CrashlyticsCore");

        $r15 = staticinvoke <com.crashlytics.android.core.PreferenceManager: com.crashlytics.android.core.PreferenceManager create(io.fabric.sdk.android.services.persistence.PreferenceStore,com.crashlytics.android.core.CrashlyticsCore)>(r5, r0);

        $r16 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

     label14:
        if $r16 == null goto label31;

        r17 = new com.crashlytics.android.core.CrashlyticsPinningInfoProvider;

     label15:
        $r16 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.PinningInfoProvider pinningInfo>;

        specialinvoke r17.<com.crashlytics.android.core.CrashlyticsPinningInfoProvider: void <init>(com.crashlytics.android.core.PinningInfoProvider)>($r16);

     label16:
        $r18 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

     label17:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        specialinvoke $r18.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>(io.fabric.sdk.android.Logger)>($r10);

        r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r18;

        $r19 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        interfaceinvoke $r19.<io.fabric.sdk.android.services.network.HttpRequestFactory: void setPinningInfoProvider(io.fabric.sdk.android.services.network.PinningInfoProvider)>(r17);

        $r20 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r21 = staticinvoke <com.crashlytics.android.core.AppData: com.crashlytics.android.core.AppData create(android.content.Context,io.fabric.sdk.android.services.common.IdManager,java.lang.String,java.lang.String)>($r1, $r20, $r7, $r8);

     label18:
        r3 = new com.crashlytics.android.core.ManifestUnityVersionProvider;

     label19:
        $r7 = $r21.<com.crashlytics.android.core.AppData: java.lang.String packageName>;

        specialinvoke r3.<com.crashlytics.android.core.ManifestUnityVersionProvider: void <init>(android.content.Context,java.lang.String)>($r1, $r7);

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label20:
        $r11 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installer package name is: ");

        $r7 = $r21.<com.crashlytics.android.core.AppData: java.lang.String installerPackageName>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

     label22:
        $r22 = new io.fabric.sdk.android.services.common.FirebaseInfo;

     label23:
        specialinvoke $r22.<io.fabric.sdk.android.services.common.FirebaseInfo: void <init>()>();

        $z0 = virtualinvoke $r22.<io.fabric.sdk.android.services.common.FirebaseInfo: boolean isFirebaseCrashlyticsEnabled(android.content.Context)>($r1);

     label24:
        $r23 = new com.crashlytics.android.core.CrashlyticsController;

     label25:
        $r24 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r19 = r0.<com.crashlytics.android.core.CrashlyticsCore: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        specialinvoke $r23.<com.crashlytics.android.core.CrashlyticsController: void <init>(com.crashlytics.android.core.CrashlyticsCore,com.crashlytics.android.core.CrashlyticsBackgroundWorker,io.fabric.sdk.android.services.network.HttpRequestFactory,io.fabric.sdk.android.services.common.IdManager,com.crashlytics.android.core.PreferenceManager,io.fabric.sdk.android.services.persistence.FileStore,com.crashlytics.android.core.AppData,com.crashlytics.android.core.UnityVersionProvider,boolean)>(r0, $r24, $r19, $r20, $r15, r2, $r21, r3, $z0);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller> = $r23;

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean didPreviousInitializationFail()>();

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void checkForPreviousCrash()>();

        $r23 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r25 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        virtualinvoke $r23.<com.crashlytics.android.core.CrashlyticsController: void enableExceptionHandling(java.lang.Thread$UncaughtExceptionHandler)>($r25);

     label26:
        if $z0 == 0 goto label33;

     label27:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>($r1);

     label28:
        if $z0 == 0 goto label33;

     label29:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics did not finish previous background initialization. Initializing synchronously.");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void finishInitSynchronously()>();

     label30:
        return 0;

     label31:
        r17 = null;

        goto label16;

     label32:
        r4 := @caughtexception;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Crashlytics was not started due to an exception during initialization", r4);

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller> = null;

        return 0;

     label33:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Exception handling initialization successful");

        return 1;

        catch java.lang.Exception from label03 to label04 with label32;
        catch java.lang.Exception from label05 to label06 with label32;
        catch java.lang.Exception from label07 to label08 with label32;
        catch java.lang.Exception from label09 to label10 with label32;
        catch java.lang.Exception from label11 to label12 with label32;
        catch java.lang.Exception from label13 to label14 with label32;
        catch java.lang.Exception from label15 to label16 with label32;
        catch java.lang.Exception from label17 to label18 with label32;
        catch java.lang.Exception from label19 to label20 with label32;
        catch java.lang.Exception from label21 to label22 with label32;
        catch java.lang.Exception from label23 to label24 with label32;
        catch java.lang.Exception from label25 to label26 with label32;
        catch java.lang.Exception from label27 to label28 with label32;
        catch java.lang.Exception from label29 to label30 with label32;
    }
    public void setBool(java.lang.String, boolean)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setDouble(java.lang.String, double)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        double $d0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    void setExternalCrashEventDataProvider(com.crashlytics.android.core.internal.CrashEventDataProvider)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.internal.CrashEventDataProvider $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: com.crashlytics.android.core.internal.CrashEventDataProvider;

        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.internal.CrashEventDataProvider externalCrashEventDataProvider> = $r1;

        return;
    }
    public void setFloat(java.lang.String, float)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        float $f0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setInt(java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setListener(com.crashlytics.android.core.CrashlyticsListener)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        com.crashlytics.android.core.CrashlyticsListener $r1;
        io.fabric.sdk.android.Logger $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsListener;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Use of setListener is deprecated.");

        if $r1 != null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener must not be null.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsListener listener> = $r1;

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void setLong(java.lang.String, long)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        long $l0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: void setString(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    public void setString(java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r4;
        io.fabric.sdk.android.Logger $r5;
        java.util.concurrent.ConcurrentHashMap $r6;
        int $i0;
        com.crashlytics.android.core.CrashlyticsController $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting keys.");

        if $z0 == 0 goto label7;

        if $r1 != null goto label3;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        if $r3 == null goto label2;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isAppDebuggable(android.content.Context)>($r3);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Custom attribute key must not be null.");

        throw $r4;

     label2:
        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Attempting to set custom attribute with null key, ignoring.", null);

        return;

     label3:
        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: int size()>();

        if $i0 < 64 goto label4;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Exceeded maximum number of custom attributes (64)");

        return;

     label4:
        if $r2 != null goto label6;

        $r2 = "";

     label5:
        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.util.concurrent.ConcurrentHashMap attributes>;

        virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsController: void cacheKeyData(java.util.Map)>($r6);

        return;

     label6:
        $r2 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r2);

        goto label5;

     label7:
        return;
    }
    public void setUserEmail(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        return;
    }
    public void setUserIdentifier(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        return;
    }
    public void setUserName(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController $r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.crashlytics.android.core.CrashlyticsCore: boolean disabled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: boolean ensureFabricWithCalled(java.lang.String)>("prior to setting user data.");

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.crashlytics.android.core.CrashlyticsCore: java.lang.String sanitizeAttribute(java.lang.String)>($r1);

        r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName> = $r1;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsCore: com.crashlytics.android.core.CrashlyticsController controller>;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userId>;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userName>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String userEmail>;

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsController: void cacheUserData(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        return;
    }
    public boolean verifyPinning(java.net.URL)
    {
        com.crashlytics.android.core.CrashlyticsCore r0;
        java.net.URL $r1;
        java.lang.Exception r2;
        boolean $z0;
        io.fabric.sdk.android.Logger $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsCore;

        $r1 := @parameter0: java.net.URL;

     label1:
        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsCore: boolean internalVerifyPinning(java.net.URL)>($r1);

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Could not verify SSL pinning", r2);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
