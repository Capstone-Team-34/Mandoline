com.crashlytics.android.core.CrashlyticsBackgroundWorker$1 extends java.lang.Object implements java.lang.Runnable
final com.crashlytics.android.core.CrashlyticsBackgroundWorker this$0
final java.lang.Runnable val$runnable
    void <init>(com.crashlytics.android.core.CrashlyticsBackgroundWorker, java.lang.Runnable)
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker$1 r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        java.lang.Runnable $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker$1;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r2 := @parameter1: java.lang.Runnable;

        r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker$1: com.crashlytics.android.core.CrashlyticsBackgroundWorker this$0> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker$1: java.lang.Runnable val$runnable> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        com.crashlytics.android.core.CrashlyticsBackgroundWorker$1 r0;
        java.lang.Exception r1;
        io.fabric.sdk.android.Logger $r2;
        java.lang.Runnable $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsBackgroundWorker$1;

     label1:
        $r3 = r0.<com.crashlytics.android.core.CrashlyticsBackgroundWorker$1: java.lang.Runnable val$runnable>;

        interfaceinvoke $r3.<java.lang.Runnable: void run()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to execute task.", r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
