com.crashlytics.android.core.CrashlyticsController extends java.lang.Object
private static final int ANALYZER_VERSION
private static final java.lang.String COLLECT_CUSTOM_KEYS
private static final java.lang.String CRASHLYTICS_API_ENDPOINT
private static final java.lang.String EVENT_TYPE_CRASH
private static final java.lang.String EVENT_TYPE_LOGGED
static final java.lang.String FATAL_SESSION_DIR
static final java.lang.String FIREBASE_ANALYTICS_ORIGIN_CRASHLYTICS
static final java.lang.String FIREBASE_APPLICATION_EXCEPTION
static final java.lang.String FIREBASE_CRASH_TYPE
private static final int FIREBASE_CRASH_TYPE_FATAL
static final java.lang.String FIREBASE_REALTIME
static final java.lang.String FIREBASE_TIMESTAMP
private static final java.lang.String GENERATOR_FORMAT
private static final java.lang.String[] INITIAL_SESSION_PART_TAGS
static final java.lang.String INVALID_CLS_CACHE_DIR
static final java.util.Comparator LARGEST_FILE_NAME_FIRST
static final int MAX_INVALID_SESSIONS
private static final int MAX_LOCAL_LOGGED_EXCEPTIONS
static final int MAX_OPEN_SESSIONS
static final int MAX_STACK_SIZE
static final java.lang.String NONFATAL_SESSION_DIR
static final int NUM_STACK_REPETITIONS_ALLOWED
private static final java.util.Map SEND_AT_CRASHTIME_HEADER
static final java.lang.String SESSION_APP_TAG
static final java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER
static final java.lang.String SESSION_BEGIN_TAG
static final java.lang.String SESSION_DEVICE_TAG
static final java.io.FileFilter SESSION_DIRECTORY_FILTER
static final java.lang.String SESSION_EVENT_MISSING_BINARY_IMGS_TAG
static final java.lang.String SESSION_FATAL_TAG
static final java.io.FilenameFilter SESSION_FILE_FILTER
private static final java.util.regex.Pattern SESSION_FILE_PATTERN
private static final int SESSION_ID_LENGTH
static final java.lang.String SESSION_JSON_SUFFIX
static final java.lang.String SESSION_NON_FATAL_TAG
static final java.lang.String SESSION_OS_TAG
static final java.lang.String SESSION_USER_TAG
private static final boolean SHOULD_PROMPT_BEFORE_SENDING_REPORTS_DEFAULT
static final java.util.Comparator SMALLEST_FILE_NAME_FIRST
private final com.crashlytics.android.core.AppData appData
private final com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker
private com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler crashHandler
private final com.crashlytics.android.core.CrashlyticsCore crashlyticsCore
private final com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener
private final java.util.concurrent.atomic.AtomicInteger eventCounter
private final io.fabric.sdk.android.services.persistence.FileStore fileStore
private final com.crashlytics.android.answers.EventLogger firebaseAnalytics
private final boolean firebaseCrashlyticsEnabled
private final com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck handlingExceptionCheck
private final io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory
private final io.fabric.sdk.android.services.common.IdManager idManager
private final com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider
private final com.crashlytics.android.core.LogFileManager logFileManager
private final com.crashlytics.android.core.PreferenceManager preferenceManager
private final com.crashlytics.android.core.ReportUploader$ReportFilesProvider reportFilesProvider
private final com.crashlytics.android.core.StackTraceTrimmingStrategy stackTraceTrimmingStrategy
private final java.lang.String unityVersion
    static void <clinit>()
    {
        com.crashlytics.android.core.CrashlyticsController$1 $r0;
        com.crashlytics.android.core.CrashlyticsController$2 $r1;
        com.crashlytics.android.core.CrashlyticsController$3 $r2;
        com.crashlytics.android.core.CrashlyticsController$4 $r3;
        com.crashlytics.android.core.CrashlyticsController$5 $r4;
        java.util.regex.Pattern $r5;
        java.util.Map $r6;
        java.lang.String[] $r7;

        $r0 = new com.crashlytics.android.core.CrashlyticsController$1;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController$1: void <init>(java.lang.String)>("BeginSession");

        <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER> = $r0;

        $r1 = new com.crashlytics.android.core.CrashlyticsController$2;

        specialinvoke $r1.<com.crashlytics.android.core.CrashlyticsController$2: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER> = $r1;

        $r2 = new com.crashlytics.android.core.CrashlyticsController$3;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$3: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsController: java.io.FileFilter SESSION_DIRECTORY_FILTER> = $r2;

        $r3 = new com.crashlytics.android.core.CrashlyticsController$4;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$4: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator LARGEST_FILE_NAME_FIRST> = $r3;

        $r4 = new com.crashlytics.android.core.CrashlyticsController$5;

        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsController$5: void <init>()>();

        <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST> = $r4;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\d|A-Z|a-z]{12}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{12}).+");

        <com.crashlytics.android.core.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("X-CRASHLYTICS-SEND-FLAGS", "1");

        <com.crashlytics.android.core.CrashlyticsController: java.util.Map SEND_AT_CRASHTIME_HEADER> = $r6;

        $r7 = newarray (java.lang.String)[4];

        $r7[0] = "SessionUser";

        $r7[1] = "SessionApp";

        $r7[2] = "SessionOS";

        $r7[3] = "SessionDevice";

        <com.crashlytics.android.core.CrashlyticsController: java.lang.String[] INITIAL_SESSION_PART_TAGS> = $r7;

        return;
    }
    void <init>(com.crashlytics.android.core.CrashlyticsCore, com.crashlytics.android.core.CrashlyticsBackgroundWorker, io.fabric.sdk.android.services.network.HttpRequestFactory, io.fabric.sdk.android.services.common.IdManager, com.crashlytics.android.core.PreferenceManager, io.fabric.sdk.android.services.persistence.FileStore, com.crashlytics.android.core.AppData, com.crashlytics.android.core.UnityVersionProvider, boolean)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.CrashlyticsCore $r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r3;
        io.fabric.sdk.android.services.common.IdManager $r4;
        com.crashlytics.android.core.PreferenceManager $r5;
        io.fabric.sdk.android.services.persistence.FileStore $r6;
        com.crashlytics.android.core.AppData $r7;
        com.crashlytics.android.core.UnityVersionProvider $r8;
        boolean $z0;
        com.crashlytics.android.core.RemoveRepeatsStrategy $r9;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.lang.String $r11;
        android.content.Context $r12;
        com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider $r13;
        com.crashlytics.android.core.LogFileManager $r14;
        com.crashlytics.android.core.CrashlyticsController$ReportUploaderFilesProvider $r15;
        com.crashlytics.android.core.CrashlyticsController$ReportUploaderHandlingExceptionCheck $r16;
        com.crashlytics.android.core.DevicePowerStateListener $r17;
        com.crashlytics.android.core.MiddleOutFallbackStrategy $r18;
        com.crashlytics.android.core.StackTraceTrimmingStrategy[] $r19;
        com.crashlytics.android.answers.EventLogger $r20;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsCore;

        $r2 := @parameter1: com.crashlytics.android.core.CrashlyticsBackgroundWorker;

        $r3 := @parameter2: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r4 := @parameter3: io.fabric.sdk.android.services.common.IdManager;

        $r5 := @parameter4: com.crashlytics.android.core.PreferenceManager;

        $r6 := @parameter5: io.fabric.sdk.android.services.persistence.FileStore;

        $r7 := @parameter6: com.crashlytics.android.core.AppData;

        $r8 := @parameter7: com.crashlytics.android.core.UnityVersionProvider;

        $z0 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.crashlytics.android.core.CrashlyticsController: java.util.concurrent.atomic.AtomicInteger eventCounter> = $r10;

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker> = $r2;

        r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r3;

        r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager> = $r4;

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.PreferenceManager preferenceManager> = $r5;

        r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.persistence.FileStore fileStore> = $r6;

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData> = $r7;

        $r11 = interfaceinvoke $r8.<com.crashlytics.android.core.UnityVersionProvider: java.lang.String getUnityVersion()>();

        r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String unityVersion> = $r11;

        r0.<com.crashlytics.android.core.CrashlyticsController: boolean firebaseCrashlyticsEnabled> = $z0;

        $r12 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r13 = new com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider;

        specialinvoke $r13.<com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider: void <init>(io.fabric.sdk.android.services.persistence.FileStore)>($r6);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider> = $r13;

        $r14 = new com.crashlytics.android.core.LogFileManager;

        $r13 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider>;

        specialinvoke $r14.<com.crashlytics.android.core.LogFileManager: void <init>(android.content.Context,com.crashlytics.android.core.LogFileManager$DirectoryProvider)>($r12, $r13);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.LogFileManager logFileManager> = $r14;

        $r15 = new com.crashlytics.android.core.CrashlyticsController$ReportUploaderFilesProvider;

        specialinvoke $r15.<com.crashlytics.android.core.CrashlyticsController$ReportUploaderFilesProvider: void <init>(com.crashlytics.android.core.CrashlyticsController,com.crashlytics.android.core.CrashlyticsController$1)>(r0, null);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$ReportFilesProvider reportFilesProvider> = $r15;

        $r16 = new com.crashlytics.android.core.CrashlyticsController$ReportUploaderHandlingExceptionCheck;

        specialinvoke $r16.<com.crashlytics.android.core.CrashlyticsController$ReportUploaderHandlingExceptionCheck: void <init>(com.crashlytics.android.core.CrashlyticsController,com.crashlytics.android.core.CrashlyticsController$1)>(r0, null);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck handlingExceptionCheck> = $r16;

        $r17 = new com.crashlytics.android.core.DevicePowerStateListener;

        specialinvoke $r17.<com.crashlytics.android.core.DevicePowerStateListener: void <init>(android.content.Context)>($r12);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener> = $r17;

        $r18 = new com.crashlytics.android.core.MiddleOutFallbackStrategy;

        $r19 = newarray (com.crashlytics.android.core.StackTraceTrimmingStrategy)[1];

        $r9 = new com.crashlytics.android.core.RemoveRepeatsStrategy;

        specialinvoke $r9.<com.crashlytics.android.core.RemoveRepeatsStrategy: void <init>(int)>(10);

        $r19[0] = $r9;

        specialinvoke $r18.<com.crashlytics.android.core.MiddleOutFallbackStrategy: void <init>(int,com.crashlytics.android.core.StackTraceTrimmingStrategy[])>(1024, $r19);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.StackTraceTrimmingStrategy stackTraceTrimmingStrategy> = $r18;

        $r20 = staticinvoke <com.crashlytics.android.answers.AppMeasurementEventLogger: com.crashlytics.android.answers.EventLogger getEventLogger(android.content.Context)>($r12);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.answers.EventLogger firebaseAnalytics> = $r20;

        return;
    }
    static java.util.regex.Pattern access$000()
    {
        java.util.regex.Pattern r0;

        r0 = <com.crashlytics.android.core.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        return r0;
    }
    static java.lang.String access$1000(com.crashlytics.android.core.CrashlyticsController)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String getCurrentSessionId()>();

        return $r1;
    }
    static void access$1100(com.crashlytics.android.core.CrashlyticsController, io.fabric.sdk.android.services.settings.SessionSettingsData, boolean) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        io.fabric.sdk.android.services.settings.SessionSettingsData $r1;
        boolean $z0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: io.fabric.sdk.android.services.settings.SessionSettingsData;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void doCloseSessions(io.fabric.sdk.android.services.settings.SessionSettingsData,boolean)>($r1, $z0);

        return;
    }
    static java.io.File[] access$1300(com.crashlytics.android.core.CrashlyticsController, java.io.FilenameFilter)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        java.io.FilenameFilter $r1;
        java.io.File[] $r2;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: java.io.FilenameFilter;

        $r2 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r1);

        return $r2;
    }
    static void access$1400(com.crashlytics.android.core.CrashlyticsController, com.crashlytics.android.core.internal.models.SessionEventData) throws java.io.IOException
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: com.crashlytics.android.core.internal.models.SessionEventData;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void doWriteExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData)>($r1);

        return;
    }
    static com.crashlytics.android.core.AppData access$1500(com.crashlytics.android.core.CrashlyticsController)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        com.crashlytics.android.core.AppData r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        return r1;
    }
    static java.lang.String access$1600(com.crashlytics.android.core.CrashlyticsController)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String unityVersion>;

        return r1;
    }
    static com.crashlytics.android.core.CrashlyticsCore access$300(com.crashlytics.android.core.CrashlyticsController)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        com.crashlytics.android.core.CrashlyticsCore r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        return r1;
    }
    static void access$400(com.crashlytics.android.core.CrashlyticsController, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void writeFatal(java.util.Date,java.lang.Thread,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }
    static void access$500(com.crashlytics.android.core.CrashlyticsController) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController $r0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void doOpenSession()>();

        return;
    }
    static boolean access$600(com.crashlytics.android.core.CrashlyticsController, io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        boolean $z0;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: io.fabric.sdk.android.services.settings.SettingsData;

        $z0 = specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: boolean shouldPromptUserBeforeSendingCrashReports(io.fabric.sdk.android.services.settings.SettingsData)>($r1);

        return $z0;
    }
    static void access$700(com.crashlytics.android.core.CrashlyticsController, io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: io.fabric.sdk.android.services.settings.SettingsData;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void sendSessionReports(io.fabric.sdk.android.services.settings.SettingsData)>($r1);

        return;
    }
    static com.crashlytics.android.core.LogFileManager access$800(com.crashlytics.android.core.CrashlyticsController)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        com.crashlytics.android.core.LogFileManager r1;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        r1 = $r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.LogFileManager logFileManager>;

        return r1;
    }
    static void access$900(com.crashlytics.android.core.CrashlyticsController, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController $r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        specialinvoke $r0.<com.crashlytics.android.core.CrashlyticsController: void doWriteNonFatal(java.util.Date,java.lang.Thread,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }
    private void closeOpenSessions(java.io.File[], int, int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        int $i0, $i1, $i2;
        java.io.File r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.String $r4, $r6;
        java.lang.StringBuilder $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Closing open sessions.");

     label1:
        $i2 = lengthof $r1;

        if $i0 >= $i2 goto label2;

        r2 = $r1[$i0];

        $r4 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>(r2);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing session: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r6);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartsToSessionFile(java.io.File,java.lang.String,int)>(r2, $r4, $i1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.ClsFileOutputStream $r1;
        java.io.IOException r2;
        io.fabric.sdk.android.Logger $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.ClsFileOutputStream;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke $r1.<com.crashlytics.android.core.ClsFileOutputStream: void closeInProgressStream()>();

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error closing session file stream in the presence of an exception", r2);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private static void copyToCodedOutputStream(java.io.InputStream, com.crashlytics.android.core.CodedOutputStream, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        int $i0, $i1;
        byte[] r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: com.crashlytics.android.core.CodedOutputStream;

        $i0 := @parameter2: int;

        r2 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r2;

        if $i0 >= $i1 goto label2;

        $i1 = lengthof r2;

        $i1 = $i1 - $i0;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, $i0, $i1);

        if $i1 < 0 goto label2;

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        virtualinvoke $r1.<com.crashlytics.android.core.CodedOutputStream: void writeRawBytes(byte[])>(r2);

        return;
    }
    private void deleteSessionPartFilesFor(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1;
        java.io.File r2;
        int $i0, $i1;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSessionPartFilesFor(java.lang.String)>($r1);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        virtualinvoke r2.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void doCloseSessions(io.fabric.sdk.android.services.settings.SessionSettingsData, boolean) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        io.fabric.sdk.android.services.settings.SessionSettingsData $r1;
        boolean $z0;
        byte b0;
        int $i1;
        java.io.File[] $r2;
        io.fabric.sdk.android.Logger $r3;
        java.io.File $r4;
        java.lang.String $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SessionSettingsData;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        b0 = 1;

     label1:
        $i1 = b0 + 8;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void trimOpenSessions(int)>($i1);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i1 = lengthof $r2;

        if $i1 > b0 goto label3;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "No open sessions to be closed.");

        return;

     label2:
        b0 = 0;

        goto label1;

     label3:
        $r4 = $r2[b0];

        $r5 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionUser(java.lang.String)>($r5);

        if $r1 != null goto label4;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Unable to close session. Settings are not loaded.");

        return;

     label4:
        $i1 = $r1.<io.fabric.sdk.android.services.settings.SessionSettingsData: int maxCustomExceptionEvents>;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void closeOpenSessions(java.io.File[],int,int)>($r2, b0, $i1);

        return;
    }
    private void doOpenSession() throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Date r1;
        com.crashlytics.android.core.CLSUUID $r2;
        io.fabric.sdk.android.services.common.IdManager $r3;
        java.lang.String $r4, $r7;
        io.fabric.sdk.android.Logger $r5;
        java.lang.StringBuilder $r6;
        com.crashlytics.android.core.LogFileManager $r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        r1 = new java.util.Date;

        specialinvoke r1.<java.util.Date: void <init>()>();

        $r2 = new com.crashlytics.android.core.CLSUUID;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager>;

        specialinvoke $r2.<com.crashlytics.android.core.CLSUUID: void <init>(io.fabric.sdk.android.services.common.IdManager)>($r3);

        $r4 = virtualinvoke $r2.<com.crashlytics.android.core.CLSUUID: java.lang.String toString()>();

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening a new session with ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeBeginSession(java.lang.String,java.util.Date)>($r4, r1);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionApp(java.lang.String)>($r4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionOS(java.lang.String)>($r4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionDevice(java.lang.String)>($r4);

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.LogFileManager logFileManager>;

        virtualinvoke $r8.<com.crashlytics.android.core.LogFileManager: void setCurrentSession(java.lang.String)>($r4);

        return;
    }
    private void doWriteExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData) throws java.io.IOException
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;
        com.crashlytics.android.core.ClsFileOutputStream r2, r4;
        com.crashlytics.android.core.LogFileManager r3;
        com.crashlytics.android.core.CodedOutputStream r5, $r15;
        java.lang.String $r6, $r11;
        io.fabric.sdk.android.Logger $r7;
        java.util.Locale $r8;
        java.lang.Object[] $r9;
        com.crashlytics.android.core.internal.models.SignalData $r10;
        com.crashlytics.android.core.internal.models.BinaryImageData[] $r12;
        int $i0;
        boolean z0;
        java.io.File $r13;
        java.lang.StringBuilder $r14;
        com.crashlytics.android.core.MetaDataStore $r16;
        java.util.Map $r17;
        com.crashlytics.android.core.CrashlyticsCore $r18;
        android.content.Context $r19;
        com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider $r20;
        java.lang.Exception r21;
        java.lang.Throwable $r22;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.internal.models.SessionEventData;

        r4 = null;

        r5 = null;

     label01:
        $r6 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String getPreviousSessionId()>();

     label02:
        if $r6 != null goto label05;

     label03:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a native crash while no session was open.", null);

     label04:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(null, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(null, "Failed to close fatal exception file output stream.");

        return;

     label05:
        $r8 = <java.util.Locale: java.util.Locale US>;

     label06:
        $r9 = newarray (java.lang.Object)[2];

        $r10 = $r1.<com.crashlytics.android.core.internal.models.SessionEventData: com.crashlytics.android.core.internal.models.SignalData signal>;

        $r11 = $r10.<com.crashlytics.android.core.internal.models.SignalData: java.lang.String code>;

     label07:
        $r9[0] = $r11;

     label08:
        $r10 = $r1.<com.crashlytics.android.core.internal.models.SessionEventData: com.crashlytics.android.core.internal.models.SignalData signal>;

        $r11 = $r10.<com.crashlytics.android.core.internal.models.SignalData: java.lang.String name>;

     label09:
        $r9[1] = $r11;

     label10:
        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "<native-crash [%s (%s)]>", $r9);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void recordFatalExceptionAnswersEvent(java.lang.String,java.lang.String)>($r6, $r11);

        $r12 = $r1.<com.crashlytics.android.core.internal.models.SessionEventData: com.crashlytics.android.core.internal.models.BinaryImageData[] binaryImages>;

     label11:
        if $r12 == null goto label27;

     label12:
        $r12 = $r1.<com.crashlytics.android.core.internal.models.SessionEventData: com.crashlytics.android.core.internal.models.BinaryImageData[] binaryImages>;

     label13:
        $i0 = lengthof $r12;

     label14:
        if $i0 <= 0 goto label27;

        z0 = 1;

     label15:
        if z0 == 0 goto label28;

        $r11 = "SessionCrash";

     label16:
        r2 = new com.crashlytics.android.core.ClsFileOutputStream;

     label17:
        $r13 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

     label18:
        $r14 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r13, $r11);

     label20:
        $r15 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r2);

     label21:
        r5 = $r15;

     label22:
        $r16 = new com.crashlytics.android.core.MetaDataStore;

     label23:
        $r13 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r16.<com.crashlytics.android.core.MetaDataStore: void <init>(java.io.File)>($r13);

        $r17 = virtualinvoke $r16.<com.crashlytics.android.core.MetaDataStore: java.util.Map readKeyData(java.lang.String)>($r6);

     label24:
        r3 = new com.crashlytics.android.core.LogFileManager;

     label25:
        $r18 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r19 = virtualinvoke $r18.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r20 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsController$LogFileDirectoryProvider logFileDirectoryProvider>;

        specialinvoke r3.<com.crashlytics.android.core.LogFileManager: void <init>(android.content.Context,com.crashlytics.android.core.LogFileManager$DirectoryProvider,java.lang.String)>($r19, $r20, $r6);

        staticinvoke <com.crashlytics.android.core.NativeCrashWriter: void writeNativeCrash(com.crashlytics.android.core.internal.models.SessionEventData,com.crashlytics.android.core.LogFileManager,java.util.Map,com.crashlytics.android.core.CodedOutputStream)>($r1, r3, $r17, $r15);

     label26:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r15, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r2, "Failed to close fatal exception file output stream.");

        return;

     label27:
        z0 = 0;

        goto label15;

     label28:
        $r11 = "SessionMissingBinaryImages";

        goto label16;

     label29:
        r21 := @caughtexception;

     label30:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the native crash logger", r21);

     label31:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r5, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close fatal exception file output stream.");

        return;

     label32:
        $r22 := @caughtexception;

     label33:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r5, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close fatal exception file output stream.");

        throw $r22;

     label34:
        $r22 := @caughtexception;

        r4 = r2;

        goto label33;

     label35:
        r21 := @caughtexception;

        r4 = r2;

        goto label30;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Exception from label06 to label11 with label29;
        catch java.lang.Exception from label12 to label14 with label29;
        catch java.lang.Exception from label17 to label18 with label29;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Throwable from label05 to label07 with label32;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label16 to label20 with label32;
        catch java.lang.Exception from label20 to label21 with label35;
        catch java.lang.Exception from label23 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label22 to label26 with label34;
        catch java.lang.Throwable from label30 to label31 with label32;
    }
    private void doWriteNonFatal(java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3, $r17;
        com.crashlytics.android.core.ClsFileOutputStream r4, r9;
        java.lang.String $r5, $r8;
        io.fabric.sdk.android.Logger $r6;
        java.lang.Class $r7;
        com.crashlytics.android.core.CodedOutputStream r10, $r14;
        java.lang.StringBuilder $r11;
        java.util.concurrent.atomic.AtomicInteger $r12;
        int $i0;
        java.io.File $r13;
        java.lang.Exception r15, r16;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        $r5 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String getCurrentSessionId()>();

        if $r5 != null goto label01;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a non-fatal exception while no session was open.", null);

        return;

     label01:
        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void recordLoggedExceptionAnswersEvent(java.lang.String,java.lang.String)>($r5, $r8);

        r9 = null;

        r10 = null;

     label02:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label03:
        $r11 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is logging non-fatal exception \"");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r8 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r8);

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsController: java.util.concurrent.atomic.AtomicInteger eventCounter>;

        $i0 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r8 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String padWithZerosToMaxIntWidth(int)>($i0);

     label05:
        $r11 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label08:
        $r13 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r13, $r8);

     label09:
        $r14 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r4);

     label10:
        r10 = $r14;

     label11:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,java.util.Date,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r14, $r1, $r2, $r3, "error", 0);

     label12:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r14, "Failed to flush to non-fatal file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close non-fatal file output stream.");

     label13:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void trimSessionEventFiles(java.lang.String,int)>($r5, 64);

     label14:
        return;

     label15:
        r15 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred when trimming non-fatal files.", r15);

        return;

     label16:
        r16 := @caughtexception;

     label17:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the non-fatal exception logger", r16);

     label18:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r10, "Failed to flush to non-fatal file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r9, "Failed to close non-fatal file output stream.");

        goto label13;

     label19:
        $r17 := @caughtexception;

     label20:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r10, "Failed to flush to non-fatal file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r9, "Failed to close non-fatal file output stream.");

        throw $r17;

     label21:
        $r17 := @caughtexception;

        r9 = r4;

        goto label20;

     label22:
        r16 := @caughtexception;

        r9 = r4;

        goto label17;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Throwable from label02 to label09 with label19;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
    }
    private java.io.File[] ensureFileArrayNotNull(java.io.File[])
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        if $r1 != null goto label1;

        $r1 = newarray (java.io.File)[0];

     label1:
        return $r1;
    }
    private boolean firebaseCrashExists()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.ClassNotFoundException r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.firebase.crash.FirebaseCrash");

     label2:
        return 1;

     label3:
        r1 := @caughtexception;

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
    private com.crashlytics.android.core.CreateReportSpiCall getCreateReportSpiCall(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r5;
        com.crashlytics.android.core.CrashlyticsCore $r2;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r3;
        android.content.Context $r4;
        com.crashlytics.android.core.DefaultCreateReportSpiCall $r6;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r5 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r4, "com.crashlytics.ApiEndpoint");

        $r6 = new com.crashlytics.android.core.DefaultCreateReportSpiCall;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        specialinvoke $r6.<com.crashlytics.android.core.DefaultCreateReportSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory)>($r2, $r5, $r1, $r3);

        return $r6;
    }
    private java.lang.String getCurrentSessionId()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        int $i0;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        $r3 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        return $r3;

     label1:
        return null;
    }
    private java.lang.String getPreviousSessionId()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        int $i0;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $r2 = $r1[1];

        $r3 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r2);

        return $r3;

     label1:
        return null;
    }
    static java.lang.String getSessionIdFromSessionFile(java.io.File)
    {
        java.io.File $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 35);

        return $r1;
    }
    private java.io.File[] getTrimmedNonFatalFiles(java.lang.String, java.io.File[], int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r7;
        int $i0, $i1;
        java.io.File[] $r2;
        io.fabric.sdk.android.Logger $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r2;

        if $i1 <= $i0 goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "Trimming down to %d logged exceptions.", $r5);

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void trimSessionEventFiles(java.lang.String,int)>($r1, $i0);

        $r8 = new com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r8);

     label1:
        return $r2;
    }
    private com.crashlytics.android.core.UserMetaData getUserMetaData(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r4, $r5;
        boolean $z0;
        com.crashlytics.android.core.UserMetaData $r2;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        com.crashlytics.android.core.MetaDataStore $r6;
        java.io.File $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        $r2 = new com.crashlytics.android.core.UserMetaData;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r1 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserIdentifier()>();

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserName()>();

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r5 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getUserEmail()>();

        specialinvoke $r2.<com.crashlytics.android.core.UserMetaData: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r4, $r5);

        return $r2;

     label1:
        $r6 = new com.crashlytics.android.core.MetaDataStore;

        $r7 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r6.<com.crashlytics.android.core.MetaDataStore: void <init>(java.io.File)>($r7);

        $r2 = virtualinvoke $r6.<com.crashlytics.android.core.MetaDataStore: com.crashlytics.android.core.UserMetaData readUserData(java.lang.String)>($r1);

        return $r2;
    }
    private java.io.File[] listFiles(java.io.File)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1;
        java.io.File[] $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] ensureFileArrayNotNull(java.io.File[])>($r2);

        return $r2;
    }
    private java.io.File[] listFilesMatching(java.io.File, java.io.FilenameFilter)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1;
        java.io.FilenameFilter $r2;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.FilenameFilter;

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r2);

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] ensureFileArrayNotNull(java.io.File[])>($r3);

        return $r3;
    }
    private java.io.File[] listFilesMatching(java.io.FilenameFilter)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.FilenameFilter $r1;
        java.io.File $r2;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.FilenameFilter;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r1);

        return $r3;
    }
    private java.io.File[] listSessionPartFilesFor(java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1;
        java.io.File[] $r2;
        com.crashlytics.android.core.CrashlyticsController$SessionPartFileFilter $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = new com.crashlytics.android.core.CrashlyticsController$SessionPartFileFilter;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$SessionPartFileFilter: void <init>(java.lang.String)>($r1);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r3);

        return $r2;
    }
    private java.io.File[] listSortedSessionBeginFiles()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Comparator $r1;
        java.io.File[] $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSessionBeginFiles()>();

        $r1 = <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator LARGEST_FILE_NAME_FIRST>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r1);

        return $r2;
    }
    private static void recordFatalExceptionAnswersEvent(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        io.fabric.sdk.android.Kit $r2;
        com.crashlytics.android.answers.Answers r3;
        io.fabric.sdk.android.Logger $r4;
        io.fabric.sdk.android.services.common.Crash$FatalException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/answers/Answers;");

        r3 = (com.crashlytics.android.answers.Answers) $r2;

        if r3 != null goto label1;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Answers is not available");

        return;

     label1:
        $r5 = new io.fabric.sdk.android.services.common.Crash$FatalException;

        specialinvoke $r5.<io.fabric.sdk.android.services.common.Crash$FatalException: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        virtualinvoke r3.<com.crashlytics.android.answers.Answers: void onException(io.fabric.sdk.android.services.common.Crash$FatalException)>($r5);

        return;
    }
    private void recordFatalFirebaseEvent(long)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        long $l0;
        android.os.Bundle r1;
        boolean $z0;
        io.fabric.sdk.android.Logger $r2;
        com.crashlytics.android.answers.EventLogger $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $l0 := @parameter0: long;

        $z0 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: boolean firebaseCrashExists()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Skipping logging Crashlytics event to Firebase, FirebaseCrash exists");

        return;

     label1:
        $z0 = r0.<com.crashlytics.android.core.CrashlyticsController: boolean firebaseCrashlyticsEnabled>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.answers.EventLogger firebaseAnalytics>;

        if $r3 == null goto label2;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Logging Crashlytics event to Firebase");

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("_r", 1);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("fatal", 1);

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("timestamp", $l0);

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.answers.EventLogger firebaseAnalytics>;

        interfaceinvoke $r3.<com.crashlytics.android.answers.EventLogger: void logEvent(java.lang.String,java.lang.String,android.os.Bundle)>("clx", "_ae", r1);

        return;

     label2:
        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Skipping logging Crashlytics event to Firebase, no Firebase Analytics");

     label3:
        return;
    }
    private static void recordLoggedExceptionAnswersEvent(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        io.fabric.sdk.android.Kit $r2;
        com.crashlytics.android.answers.Answers r3;
        io.fabric.sdk.android.Logger $r4;
        io.fabric.sdk.android.services.common.Crash$LoggedException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "Lcom/crashlytics/android/answers/Answers;");

        r3 = (com.crashlytics.android.answers.Answers) $r2;

        if r3 != null goto label1;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Answers is not available");

        return;

     label1:
        $r5 = new io.fabric.sdk.android.services.common.Crash$LoggedException;

        specialinvoke $r5.<io.fabric.sdk.android.services.common.Crash$LoggedException: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        virtualinvoke r3.<com.crashlytics.android.answers.Answers: void onException(io.fabric.sdk.android.services.common.Crash$LoggedException)>($r5);

        return;
    }
    private void recursiveDelete(java.io.File)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, r2;
        int $i0, $i1;
        boolean $z0;
        java.io.File[] $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r3[$i1];

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void recursiveDelete(java.io.File)>(r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }
    private void recursiveDelete(java.util.Set)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Set r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.io.File r4;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        r1 := @parameter0: java.util.Set;

        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.io.File) $r3;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void recursiveDelete(java.io.File)>(r4);

        goto label1;

     label2:
        return;
    }
    private void retainSessions(java.io.File[], java.util.Set)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        java.util.Set r2;
        java.io.File r3;
        int $i0, $i1;
        java.lang.String $r4, $r9;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6;
        boolean $z0;
        io.fabric.sdk.android.Logger $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        r2 := @parameter1: java.util.Set;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r3 = $r1[$i1];

        $r4 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r5 = <com.crashlytics.android.core.CrashlyticsController: java.util.regex.Pattern SESSION_FILE_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting unknown file: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r4);

        virtualinvoke r3.<java.io.File: boolean delete()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r9 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trimming session file: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r4);

        virtualinvoke r3.<java.io.File: boolean delete()>();

        goto label2;

     label4:
        return;
    }
    private void sendSessionReports(io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        java.io.File r2;
        com.crashlytics.android.core.SessionReport r3;
        com.crashlytics.android.core.ReportUploader r4;
        com.crashlytics.android.core.CrashlyticsController$SendReportRunnable $r5;
        io.fabric.sdk.android.Logger $r6;
        com.crashlytics.android.core.CrashlyticsCore $r7;
        android.content.Context $r8;
        io.fabric.sdk.android.services.settings.AppSettingsData $r9;
        java.lang.String $r10;
        com.crashlytics.android.core.CreateReportSpiCall $r11;
        com.crashlytics.android.core.AppData $r12;
        com.crashlytics.android.core.ReportUploader$ReportFilesProvider $r13;
        com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck $r14;
        java.io.File[] $r15;
        int $i0, $i1;
        java.util.Map $r16;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r17;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsData;

        if $r1 != null goto label1;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Cannot send reports. Settings are unavailable.");

        return;

     label1:
        $r7 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r8 = virtualinvoke $r7.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $r9 = $r1.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.AppSettingsData appData>;

        $r10 = $r9.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String reportsUrl>;

        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CreateReportSpiCall getCreateReportSpiCall(java.lang.String)>($r10);

        r4 = new com.crashlytics.android.core.ReportUploader;

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        $r10 = $r12.<com.crashlytics.android.core.AppData: java.lang.String apiKey>;

        $r13 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$ReportFilesProvider reportFilesProvider>;

        $r14 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck handlingExceptionCheck>;

        specialinvoke r4.<com.crashlytics.android.core.ReportUploader: void <init>(java.lang.String,com.crashlytics.android.core.CreateReportSpiCall,com.crashlytics.android.core.ReportUploader$ReportFilesProvider,com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck)>($r10, $r11, $r13, $r14);

        $r15 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listCompleteSessionFiles()>();

        $i0 = lengthof $r15;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r2 = $r15[$i1];

        r3 = new com.crashlytics.android.core.SessionReport;

        $r16 = <com.crashlytics.android.core.CrashlyticsController: java.util.Map SEND_AT_CRASHTIME_HEADER>;

        specialinvoke r3.<com.crashlytics.android.core.SessionReport: void <init>(java.io.File,java.util.Map)>(r2, $r16);

        $r17 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r5 = new com.crashlytics.android.core.CrashlyticsController$SendReportRunnable;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsController$SendReportRunnable: void <init>(android.content.Context,com.crashlytics.android.core.Report,com.crashlytics.android.core.ReportUploader)>($r8, r3, r4);

        virtualinvoke $r17.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }
    private boolean shouldPromptUserBeforeSendingCrashReports(io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        boolean $z0;
        io.fabric.sdk.android.services.settings.FeaturesSettingsData $r2;
        com.crashlytics.android.core.PreferenceManager $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SettingsData;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r1.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.FeaturesSettingsData featuresData>;

        $z0 = $r2.<io.fabric.sdk.android.services.settings.FeaturesSettingsData: boolean promptEnabled>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.PreferenceManager preferenceManager>;

        $z0 = virtualinvoke $r3.<com.crashlytics.android.core.PreferenceManager: boolean shouldAlwaysSendReports()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    private void synthesizeSessionFile(java.io.File, java.lang.String, java.io.File[], java.io.File)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, $r4, $r6;
        java.lang.String $r2, $r12;
        java.io.File[] $r3;
        com.crashlytics.android.core.ClsFileOutputStream r5, r7;
        boolean z0, $z1;
        com.crashlytics.android.core.CodedOutputStream r8, $r9;
        io.fabric.sdk.android.Logger $r10;
        java.lang.StringBuilder $r11;
        java.util.Date $r13;
        long $l0;
        java.lang.Exception r14;
        java.lang.Throwable $r15;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File[];

        $r4 := @parameter3: java.io.File;

        if $r4 == null goto label18;

        z0 = 1;

     label01:
        if z0 == 0 goto label19;

        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

     label02:
        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label03;

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

     label03:
        r7 = null;

        r8 = null;

     label04:
        r5 = new com.crashlytics.android.core.ClsFileOutputStream;

     label05:
        specialinvoke r5.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r6, $r2);

     label06:
        $r9 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r5);

     label07:
        r8 = $r9;

     label08:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label09:
        $r11 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting SessionStart data for session ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r12);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r9, $r1);

     label11:
        $r13 = new java.util.Date;

     label12:
        specialinvoke $r13.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r13.<java.util.Date: long getTime()>();

     label13:
        $l0 = $l0 / 1000L;

     label14:
        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeUInt64(int,long)>(4, $l0);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeBool(int,boolean)>(5, z0);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeUInt32(int,int)>(11, 1);

        virtualinvoke $r9.<com.crashlytics.android.core.CodedOutputStream: void writeEnum(int,int)>(12, 3);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream,java.lang.String)>($r9, $r2);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream,java.io.File[],java.lang.String)>($r9, $r3, $r2);

     label15:
        if z0 == 0 goto label17;

     label16:
        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r9, $r4);

     label17:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r9, "Error flushing session file stream");

        goto label20;

     label18:
        z0 = 0;

        goto label01;

     label19:
        $r6 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        goto label02;

     label20:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close CLS file");

        return;

     label21:
        r14 := @caughtexception;

     label22:
        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write session file for session ID: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r2, r14);

     label23:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r8, "Error flushing session file stream");

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void closeWithoutRenamingOrLog(com.crashlytics.android.core.ClsFileOutputStream)>(r7);

        return;

     label24:
        $r15 := @caughtexception;

     label25:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r8, "Error flushing session file stream");

        goto label27;

     label26:
        throw $r15;

     label27:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r7, "Failed to close CLS file");

        goto label26;

     label28:
        $r15 := @caughtexception;

        r7 = r5;

        goto label25;

     label29:
        r14 := @caughtexception;

        r7 = r5;

        goto label22;

        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Throwable from label04 to label06 with label24;
        catch java.lang.Exception from label06 to label07 with label29;
        catch java.lang.Exception from label08 to label09 with label29;
        catch java.lang.Exception from label10 to label11 with label29;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Exception from label14 to label15 with label29;
        catch java.lang.Exception from label16 to label17 with label29;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label22 to label23 with label24;
    }
    private void trimInvalidSessionFiles()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.HashSet r1;
        java.io.File $r2, $r6;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController$InvalidPartFileFilter $r3;
        java.io.File[] $r4;
        java.util.Comparator $r5;
        int i0, $i1;
        java.lang.String $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getInvalidFilesDir()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = new com.crashlytics.android.core.CrashlyticsController$InvalidPartFileFilter;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$InvalidPartFileFilter: void <init>()>();

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        $r5 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r4, $r5);

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if i0 >= $i1 goto label3;

        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i1 >= 4 goto label3;

        $r6 = $r4[i0];

        $r7 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r6);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFiles(java.io.File)>($r2);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void retainSessions(java.io.File[],java.util.Set)>($r4, r1);

        return;
    }
    private void trimOpenSessions(int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        int $i0, $i1;
        java.util.HashSet r1;
        java.io.File[] $r2;
        java.io.File $r3;
        java.lang.String $r4;
        com.crashlytics.android.core.LogFileManager $r5;
        com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter $r6;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $i0 := @parameter0: int;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSortedSessionBeginFiles()>();

        $i1 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>($r3);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.LogFileManager logFileManager>;

        virtualinvoke $r5.<com.crashlytics.android.core.LogFileManager: void discardOldLogFiles(java.util.Set)>(r1);

        $r6 = new com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter;

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$AnySessionPartFileFilter: void <init>(com.crashlytics.android.core.CrashlyticsController$1)>(null);

        $r2 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void retainSessions(java.io.File[],java.util.Set)>($r2, r1);

        return;
    }
    private void trimSessionEventFiles(java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1;
        int $i0;
        com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter $r2;
        java.io.File $r3;
        java.lang.StringBuilder $r4;
        java.util.Comparator $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r2 = new com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r1);

        $r5 = <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.crashlytics.android.core.Utils: int capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r3, $r2, $i0, $r5);

        return;
    }
    private void writeBeginSession(java.lang.String, java.util.Date) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r6;
        java.util.Date $r2;
        long l0;
        java.util.Locale $r3;
        java.lang.Object[] $r4;
        com.crashlytics.android.core.CrashlyticsCore $r5;
        com.crashlytics.android.core.CrashlyticsController$17 $r7;
        com.crashlytics.android.core.CrashlyticsController$18 $r8;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Date;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r6 = virtualinvoke $r5.<com.crashlytics.android.core.CrashlyticsCore: java.lang.String getVersion()>();

        $r4[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "Crashlytics Android SDK/%s", $r4);

        l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        l0 = l0 / 1000L;

        $r7 = new com.crashlytics.android.core.CrashlyticsController$17;

        specialinvoke $r7.<com.crashlytics.android.core.CrashlyticsController$17: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,long)>(r0, $r1, $r6, l0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "BeginSession", $r7);

        $r8 = new com.crashlytics.android.core.CrashlyticsController$18;

        specialinvoke $r8.<com.crashlytics.android.core.CrashlyticsController$18: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,long)>(r0, $r1, $r6, l0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "BeginSession.json", $r8);

        return;
    }
    private void writeFatal(java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Date $r1;
        java.lang.Thread $r2;
        java.lang.Throwable $r3, $r15;
        com.crashlytics.android.core.ClsFileOutputStream r4, r5;
        com.crashlytics.android.core.CodedOutputStream r6, $r13;
        java.lang.String $r7, $r10;
        io.fabric.sdk.android.Logger $r8;
        java.lang.Class $r9;
        long $l0;
        java.io.File $r11;
        java.lang.StringBuilder $r12;
        java.lang.Exception r14;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.lang.Thread;

        $r3 := @parameter2: java.lang.Throwable;

        r5 = null;

        r6 = null;

     label01:
        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.lang.String getCurrentSessionId()>();

     label02:
        if $r7 != null goto label05;

     label03:
        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Tried to write a fatal exception while no session was open.", null);

     label04:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(null, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(null, "Failed to close fatal exception file output stream.");

        return;

     label05:
        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void recordFatalExceptionAnswersEvent(java.lang.String,java.lang.String)>($r7, $r10);

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void recordFatalFirebaseEvent(long)>($l0);

     label06:
        r4 = new com.crashlytics.android.core.ClsFileOutputStream;

     label07:
        $r11 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

     label08:
        $r12 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r11, $r7);

     label10:
        $r13 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r4);

     label11:
        r6 = $r13;

     label12:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,java.util.Date,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r13, $r1, $r2, $r3, "crash", 1);

     label13:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r13, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close fatal exception file output stream.");

        return;

     label14:
        r14 := @caughtexception;

     label15:
        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the fatal exception logger", r14);

     label16:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r6, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close fatal exception file output stream.");

        return;

     label17:
        $r15 := @caughtexception;

     label18:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r6, "Failed to flush to session begin file.");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close fatal exception file output stream.");

        throw $r15;

     label19:
        $r15 := @caughtexception;

        r5 = r4;

        goto label18;

     label20:
        r14 := @caughtexception;

        r5 = r4;

        goto label15;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Throwable from label05 to label10 with label17;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
    private void writeFile(java.lang.String, java.lang.String, com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r2;
        com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction $r3;
        java.io.FileOutputStream r4, r5;
        java.io.File $r6, $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction;

        r5 = null;

     label1:
        r4 = new java.io.FileOutputStream;

        $r6 = new java.io.File;

        $r7 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r1);

        specialinvoke r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

     label2:
        interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction: void writeTo(java.io.FileOutputStream)>(r4);

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, $r1);

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, $r1);

        throw $r9;

     label6:
        $r9 := @caughtexception;

        r5 = r4;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }
    private void writeInitialPartsTo(com.crashlytics.android.core.CodedOutputStream, java.lang.String) throws java.io.IOException
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        java.lang.String $r2, r3, $r7;
        java.lang.String[] $r4;
        int $i0, $i1, $i2;
        com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter $r5;
        java.lang.StringBuilder $r6;
        java.io.File[] $r8;
        io.fabric.sdk.android.Logger $r9;
        java.io.File $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter1: java.lang.String;

        $r4 = <com.crashlytics.android.core.CrashlyticsController: java.lang.String[] INITIAL_SESSION_PART_TAGS>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        r3 = $r4[$i1];

        $r5 = new com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cls");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r5);

        $i2 = lengthof $r8;

        if $i2 != 0 goto label3;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", r3, null);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", r3);

        $r10 = $r8[0];

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r1, $r10);

        goto label2;

     label4:
        return;
    }
    private static void writeNonFatalEventsTo(com.crashlytics.android.core.CodedOutputStream, java.io.File[], java.lang.String)
    {
        com.crashlytics.android.core.CodedOutputStream $r0;
        java.io.File[] $r1;
        java.lang.String $r2, $r9;
        java.lang.Exception r3;
        java.io.File r4;
        int $i0, $i1;
        java.util.Comparator $r5;
        io.fabric.sdk.android.Logger $r6;
        java.util.Locale $r7;
        java.lang.Object[] $r8;

        $r0 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter1: java.io.File[];

        $r2 := @parameter2: java.lang.String;

        $i0 = 0;

        $r5 = <io.fabric.sdk.android.services.common.CommonUtils: java.util.Comparator FILE_MODIFIED_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r1, $r5);

        $i1 = lengthof $r1;

     label1:
        if $i0 >= $i1 goto label7;

        r4 = $r1[$i0];

     label2:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label3:
        $r7 = <java.util.Locale: java.util.Locale US>;

     label4:
        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = $r2;

        $r9 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r8[1] = $r9;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "Found Non Fatal for session ID %s in %s ", $r8);

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r9);

        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream,java.io.File)>($r0, r4);

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        r3 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Error writting non-fatal to session.", r3);

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    private void writeSessionApp(java.lang.String) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, r2, r3, $r5, $r7, $r8;
        io.fabric.sdk.android.services.common.IdManager $r4;
        com.crashlytics.android.core.AppData $r6;
        io.fabric.sdk.android.services.common.DeliveryMechanism $r9;
        int $i0;
        com.crashlytics.android.core.CrashlyticsController$19 $r10;
        com.crashlytics.android.core.CrashlyticsController$20 $r11;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r5 = virtualinvoke $r4.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppIdentifier()>();

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        r2 = $r6.<com.crashlytics.android.core.AppData: java.lang.String versionCode>;

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        r3 = $r6.<com.crashlytics.android.core.AppData: java.lang.String versionName>;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r7 = virtualinvoke $r4.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>();

        $r6 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        $r8 = $r6.<com.crashlytics.android.core.AppData: java.lang.String installerPackageName>;

        $r9 = staticinvoke <io.fabric.sdk.android.services.common.DeliveryMechanism: io.fabric.sdk.android.services.common.DeliveryMechanism determineFrom(java.lang.String)>($r8);

        $i0 = virtualinvoke $r9.<io.fabric.sdk.android.services.common.DeliveryMechanism: int getId()>();

        $r10 = new com.crashlytics.android.core.CrashlyticsController$19;

        specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$19: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionApp", $r10);

        $r11 = new com.crashlytics.android.core.CrashlyticsController$20;

        specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$20: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(r0, $r5, r2, r3, $r7, $i0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionApp.json", $r11);

        return;
    }
    private void writeSessionDevice(java.lang.String) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r6;
        long l0, $l3, $l5;
        android.os.StatFs r2;
        com.crashlytics.android.core.CrashlyticsCore $r3;
        android.content.Context $r4;
        java.io.File $r5;
        int $i1, $i2, $i4;
        java.lang.Runtime $r7;
        boolean $z0;
        io.fabric.sdk.android.services.common.IdManager $r8;
        java.util.Map $r9;
        com.crashlytics.android.core.CrashlyticsController$23 $r10;
        com.crashlytics.android.core.CrashlyticsController$24 $r11;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r4 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        r2 = new android.os.StatFs;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        specialinvoke r2.<android.os.StatFs: void <init>(java.lang.String)>($r6);

        $i1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: int getCpuArchitectureInt()>();

        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i2 = virtualinvoke $r7.<java.lang.Runtime: int availableProcessors()>();

        $l3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: long getTotalRamInBytes()>();

        $i4 = virtualinvoke r2.<android.os.StatFs: int getBlockCount()>();

        l0 = (long) $i4;

        $i4 = virtualinvoke r2.<android.os.StatFs: int getBlockSize()>();

        $l5 = (long) $i4;

        l0 = l0 * $l5;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isEmulator(android.content.Context)>($r4);

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r9 = virtualinvoke $r8.<io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>();

        $i4 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: int getDeviceState(android.content.Context)>($r4);

        $r10 = new com.crashlytics.android.core.CrashlyticsController$23;

        specialinvoke $r10.<com.crashlytics.android.core.CrashlyticsController$23: void <init>(com.crashlytics.android.core.CrashlyticsController,int,int,long,long,boolean,java.util.Map,int)>(r0, $i1, $i2, $l3, l0, $z0, $r9, $i4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionDevice", $r10);

        $r11 = new com.crashlytics.android.core.CrashlyticsController$24;

        specialinvoke $r11.<com.crashlytics.android.core.CrashlyticsController$24: void <init>(com.crashlytics.android.core.CrashlyticsController,int,int,long,long,boolean,java.util.Map,int)>(r0, $i1, $i2, $l3, l0, $z0, $r9, $i4);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionDevice.json", $r11);

        return;
    }
    private void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream, java.util.Date, java.lang.Thread, java.lang.Throwable, java.lang.String, boolean) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.CodedOutputStream $r1;
        java.util.Date $r2;
        java.lang.Thread $r3, $r30;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r19, $r23;
        boolean $z0, $z1;
        long l0, l2, $l4;
        java.lang.StackTraceElement[] r7, $r31;
        com.crashlytics.android.core.LogFileManager $r9;
        int i1, $i3, $i5;
        java.util.TreeMap r10, $r35;
        com.crashlytics.android.core.StackTraceTrimmingStrategy $r11;
        com.crashlytics.android.core.CrashlyticsCore $r12;
        android.content.Context $r13;
        java.lang.Float $r14;
        com.crashlytics.android.core.DevicePowerStateListener $r15;
        android.content.res.Resources $r16;
        android.content.res.Configuration $r17;
        java.io.File $r18;
        android.app.ActivityManager$RunningAppProcessInfo $r20;
        com.crashlytics.android.core.AppData $r21;
        io.fabric.sdk.android.services.common.IdManager $r22;
        java.util.Map $r24, $r32;
        java.lang.Thread[] r25;
        java.util.Set $r26;
        java.util.Iterator $r27;
        java.lang.Object $r28;
        java.util.Map$Entry r29;
        com.crashlytics.android.core.TrimmedThrowableData $r33;
        java.util.LinkedList $r34;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r2 := @parameter1: java.util.Date;

        $r3 := @parameter2: java.lang.Thread;

        $r4 := @parameter3: java.lang.Throwable;

        $r5 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r33 = new com.crashlytics.android.core.TrimmedThrowableData;

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.StackTraceTrimmingStrategy stackTraceTrimmingStrategy>;

        specialinvoke $r33.<com.crashlytics.android.core.TrimmedThrowableData: void <init>(java.lang.Throwable,com.crashlytics.android.core.StackTraceTrimmingStrategy)>($r4, $r11);

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r13 = virtualinvoke $r12.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        l0 = l0 / 1000L;

        $r14 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.Float getBatteryLevel(android.content.Context)>($r13);

        $r15 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener>;

        $z1 = virtualinvoke $r15.<com.crashlytics.android.core.DevicePowerStateListener: boolean isPowerConnected()>();

        $i3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: int getBatteryVelocity(android.content.Context,boolean)>($r13, $z1);

        $z1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getProximitySensorEnabled(android.content.Context)>($r13);

        $r16 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i1 = $r17.<android.content.res.Configuration: int orientation>;

        l2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: long getTotalRamInBytes()>();

        $l4 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: long calculateFreeRamInBytes(android.content.Context)>($r13);

        l2 = l2 - $l4;

        $r18 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r19 = virtualinvoke $r18.<java.io.File: java.lang.String getPath()>();

        $l4 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: long calculateUsedDiskSpaceInBytes(java.lang.String)>($r19);

        $r19 = virtualinvoke $r13.<android.content.Context: java.lang.String getPackageName()>();

        $r20 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: android.app.ActivityManager$RunningAppProcessInfo getAppProcessInfo(java.lang.String,android.content.Context)>($r19, $r13);

        $r34 = new java.util.LinkedList;

        specialinvoke $r34.<java.util.LinkedList: void <init>()>();

        r7 = $r33.<com.crashlytics.android.core.TrimmedThrowableData: java.lang.StackTraceElement[] stacktrace>;

        $r21 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        $r19 = $r21.<com.crashlytics.android.core.AppData: java.lang.String buildId>;

        $r22 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r23 = virtualinvoke $r22.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppIdentifier()>();

        if $z0 == 0 goto label2;

        $r24 = staticinvoke <java.lang.Thread: java.util.Map getAllStackTraces()>();

        $i5 = interfaceinvoke $r24.<java.util.Map: int size()>();

        r25 = newarray (java.lang.Thread)[$i5];

        $i5 = 0;

        $r26 = interfaceinvoke $r24.<java.util.Map: java.util.Set entrySet()>();

        $r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r28;

        $r28 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.Thread) $r28;

        r25[$i5] = $r30;

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.StackTraceTrimmingStrategy stackTraceTrimmingStrategy>;

        $r28 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (java.lang.StackTraceElement[]) $r28;

        $r31 = interfaceinvoke $r11.<com.crashlytics.android.core.StackTraceTrimmingStrategy: java.lang.StackTraceElement[] getTrimmedStackTrace(java.lang.StackTraceElement[])>($r31);

        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>($r31);

        $i5 = $i5 + 1;

        goto label1;

     label2:
        r25 = newarray (java.lang.Thread)[0];

     label3:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r13, "com.crashlytics.CollectCustomKeys", 1);

        if $z0 != 0 goto label5;

        r10 = new java.util.TreeMap;

        $r24 = r10;

        specialinvoke r10.<java.util.TreeMap: void <init>()>();

     label4:
        $r9 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.LogFileManager logFileManager>;

        staticinvoke <com.crashlytics.android.core.SessionProtobufHelper: void writeSessionEvent(com.crashlytics.android.core.CodedOutputStream,long,java.lang.String,com.crashlytics.android.core.TrimmedThrowableData,java.lang.Thread,java.lang.StackTraceElement[],java.lang.Thread[],java.util.List,java.util.Map,com.crashlytics.android.core.LogFileManager,android.app.ActivityManager$RunningAppProcessInfo,int,java.lang.String,java.lang.String,java.lang.Float,int,boolean,long,long)>($r1, l0, $r5, $r33, $r3, r7, r25, $r34, $r24, $r9, $r20, i1, $r23, $r19, $r14, $i3, $z1, l2, $l4);

        return;

     label5:
        $r12 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r32 = virtualinvoke $r12.<com.crashlytics.android.core.CrashlyticsCore: java.util.Map getAttributes()>();

        $r24 = $r32;

        if $r32 == null goto label4;

        $i5 = interfaceinvoke $r32.<java.util.Map: int size()>();

        if $i5 <= 1 goto label4;

        $r35 = new java.util.TreeMap;

        specialinvoke $r35.<java.util.TreeMap: void <init>(java.util.Map)>($r32);

        $r24 = $r35;

        goto label4;
    }
    private void writeSessionOS(java.lang.String) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1;
        com.crashlytics.android.core.CrashlyticsCore $r2;
        android.content.Context $r3;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsController$21 $r4;
        com.crashlytics.android.core.CrashlyticsController$22 $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r3 = virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsCore: android.content.Context getContext()>();

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isRooted(android.content.Context)>($r3);

        $r4 = new com.crashlytics.android.core.CrashlyticsController$21;

        specialinvoke $r4.<com.crashlytics.android.core.CrashlyticsController$21: void <init>(com.crashlytics.android.core.CrashlyticsController,boolean)>(r0, $z0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionOS", $r4);

        $r5 = new com.crashlytics.android.core.CrashlyticsController$22;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsController$22: void <init>(com.crashlytics.android.core.CrashlyticsController,boolean)>(r0, $z0);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$FileOutputStreamWriteAction)>($r1, "SessionOS.json", $r5);

        return;
    }
    private void writeSessionPartFile(java.lang.String, java.lang.String, com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r2;
        com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction $r3;
        com.crashlytics.android.core.ClsFileOutputStream r4, r5;
        com.crashlytics.android.core.CodedOutputStream r6, $r9;
        java.io.File $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction;

        r5 = null;

        r6 = null;

     label1:
        r4 = new com.crashlytics.android.core.ClsFileOutputStream;

        $r7 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<com.crashlytics.android.core.ClsFileOutputStream: void <init>(java.io.File,java.lang.String)>($r7, $r1);

     label2:
        $r9 = staticinvoke <com.crashlytics.android.core.CodedOutputStream: com.crashlytics.android.core.CodedOutputStream newInstance(java.io.OutputStream)>(r4);

     label3:
        r6 = $r9;

     label4:
        interfaceinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction: void writeTo(com.crashlytics.android.core.CodedOutputStream)>($r9);

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to session ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>($r9, $r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close session ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, $r1);

        return;

     label6:
        $r10 := @caughtexception;

     label7:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to flush to session ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void flushOrLog(java.io.Flushable,java.lang.String)>(r6, $r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close session ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, $r1);

        throw $r10;

     label8:
        $r10 := @caughtexception;

        r5 = r4;

        goto label7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
    private void writeSessionPartsToSessionFile(java.io.File, java.lang.String, int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, r12;
        java.lang.String $r2, $r5;
        int $i0, $i1;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;
        com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter $r6;
        java.io.File[] $r7, $r11;
        boolean z0, z1;
        java.util.Locale $r8;
        java.lang.Object[] $r9;
        java.lang.Boolean $r10;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting session parts for ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r6 = new com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r7 == null goto label6;

        $i1 = lengthof $r7;

        if $i1 <= 0 goto label6;

        z0 = 1;

     label1:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has fatal exception: %s", $r9);

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        $r6 = new com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.crashlytics.android.core.CrashlyticsController$FileNameContainsFilter: void <init>(java.lang.String)>($r5);

        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r6);

        if $r11 == null goto label7;

        $i1 = lengthof $r11;

        if $i1 <= 0 goto label7;

        z1 = 1;

     label2:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r9[1] = $r10;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "Session %s has non-fatal exceptions: %s", $r9);

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        if z0 != 0 goto label3;

        if z1 == 0 goto label9;

     label3:
        $r11 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] getTrimmedNonFatalFiles(java.lang.String,java.io.File[],int)>($r2, $r11, $i0);

        if z0 == 0 goto label8;

        r12 = $r7[0];

     label4:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void synthesizeSessionFile(java.io.File,java.lang.String,java.io.File[],java.io.File)>($r1, $r2, $r11, r12);

     label5:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing session part files for ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void deleteSessionPartFilesFor(java.lang.String)>($r2);

        return;

     label6:
        z0 = 0;

        goto label1;

     label7:
        z1 = 0;

        goto label2;

     label8:
        r12 = null;

        goto label4;

     label9:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No events present for session ID ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r5);

        goto label5;
    }
    private void writeSessionUser(java.lang.String) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1;
        com.crashlytics.android.core.CrashlyticsController$25 $r2;
        com.crashlytics.android.core.UserMetaData $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.UserMetaData getUserMetaData(java.lang.String)>($r1);

        $r2 = new com.crashlytics.android.core.CrashlyticsController$25;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$25: void <init>(com.crashlytics.android.core.CrashlyticsController,com.crashlytics.android.core.UserMetaData)>(r0, $r3);

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void writeSessionPartFile(java.lang.String,java.lang.String,com.crashlytics.android.core.CrashlyticsController$CodedOutputStreamWriteAction)>($r1, "SessionUser", $r2);

        return;
    }
    private static void writeToCosFromFile(com.crashlytics.android.core.CodedOutputStream, java.io.File) throws java.io.IOException
    {
        com.crashlytics.android.core.CodedOutputStream $r0;
        java.io.File $r1;
        java.io.FileInputStream r2, r6;
        boolean $z0;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        long $l0;
        int $i1;
        java.lang.Throwable $r7;

        $r0 := @parameter0: com.crashlytics.android.core.CodedOutputStream;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", $r5, null);

        return;

     label1:
        r6 = null;

     label2:
        r2 = new java.io.FileInputStream;

        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label3:
        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

     label4:
        $i1 = (int) $l0;

     label5:
        staticinvoke <com.crashlytics.android.core.CrashlyticsController: void copyToCodedOutputStream(java.io.InputStream,com.crashlytics.android.core.CodedOutputStream,int)>(r2, $r0, $i1);

     label6:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r2, "Failed to close file input stream.");

        return;

     label7:
        $r7 := @caughtexception;

     label8:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r6, "Failed to close file input stream.");

        throw $r7;

     label9:
        $r7 := @caughtexception;

        r6 = r2;

        goto label8;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
    }
    void cacheKeyData(java.util.Map)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.Map r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        com.crashlytics.android.core.CrashlyticsController$11 $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.crashlytics.android.core.CrashlyticsController$11;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$11: void <init>(com.crashlytics.android.core.CrashlyticsController,java.util.Map)>(r0, r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

        return;
    }
    void cacheUserData(java.lang.String, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.String $r1, $r2, $r3;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r4;
        com.crashlytics.android.core.CrashlyticsController$10 $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r5 = new com.crashlytics.android.core.CrashlyticsController$10;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsController$10: void <init>(com.crashlytics.android.core.CrashlyticsController,java.lang.String,java.lang.String,java.lang.String)>(r0, $r1, $r2, $r3);

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r5);

        return;
    }
    void cleanInvalidTempFiles()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsController$14 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsController$14;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$14: void <init>(com.crashlytics.android.core.CrashlyticsController)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.lang.Runnable)>($r2);

        return;
    }
    void doCleanInvalidTempFiles(java.io.File[])
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        java.io.File r2, $r8, $r9;
        com.crashlytics.android.core.CrashlyticsController$15 r3;
        java.util.HashSet r4;
        int $i0, $i1, $i2;
        io.fabric.sdk.android.Logger $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.io.File[];

        $i0 = 0;

        r4 = new java.util.HashSet;

        specialinvoke r4.<java.util.HashSet: void <init>()>();

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        r2 = $r1[$i2];

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found invalid session part file: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        $r7 = staticinvoke <com.crashlytics.android.core.CrashlyticsController: java.lang.String getSessionIdFromSessionFile(java.io.File)>(r2);

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        return;

     label3:
        $r8 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getInvalidFilesDir()>();

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r8.<java.io.File: boolean mkdir()>();

     label4:
        r3 = new com.crashlytics.android.core.CrashlyticsController$15;

        specialinvoke r3.<com.crashlytics.android.core.CrashlyticsController$15: void <init>(com.crashlytics.android.core.CrashlyticsController,java.util.Set)>(r0, r4);

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>(r3);

        $i1 = lengthof $r1;

     label5:
        if $i0 >= $i1 goto label7;

        r2 = $r1[$i0];

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving session file: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        $r9 = new java.io.File;

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r7);

        $z0 = virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>($r9);

        if $z0 != 0 goto label6;

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not move session file. Deleting ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r7);

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void trimInvalidSessionFiles()>();

        return;
    }
    void doCloseSessions(io.fabric.sdk.android.services.settings.SessionSettingsData) throws java.lang.Exception
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        io.fabric.sdk.android.services.settings.SessionSettingsData $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SessionSettingsData;

        specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void doCloseSessions(io.fabric.sdk.android.services.settings.SessionSettingsData,boolean)>($r1, 0);

        return;
    }
    void enableExceptionHandling(java.lang.Thread$UncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.Thread$UncaughtExceptionHandler $r1;
        com.crashlytics.android.core.CrashlyticsController$6 r2;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: void openSession()>();

        r2 = new com.crashlytics.android.core.CrashlyticsController$6;

        specialinvoke r2.<com.crashlytics.android.core.CrashlyticsController$6: void <init>(com.crashlytics.android.core.CrashlyticsController)>(r0);

        $r3 = new com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener,java.lang.Thread$UncaughtExceptionHandler)>(r2, $r1);

        r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler crashHandler> = $r3;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler crashHandler>;

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r3);

        return;
    }
    boolean finalizeSessions(io.fabric.sdk.android.services.settings.SessionSettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        io.fabric.sdk.android.services.settings.SessionSettingsData $r1;
        com.crashlytics.android.core.CrashlyticsController$13 $r2;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.SessionSettingsData;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsController$13;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$13: void <init>(com.crashlytics.android.core.CrashlyticsController,io.fabric.sdk.android.services.settings.SessionSettingsData)>(r0, $r1);

        $r4 = virtualinvoke $r3.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
    java.io.File getFatalSessionFilesDir()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "fatal-sessions");

        return $r1;
    }
    java.io.File getFilesDir()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1;
        io.fabric.sdk.android.services.persistence.FileStore $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: io.fabric.sdk.android.services.persistence.FileStore fileStore>;

        $r1 = interfaceinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStore: java.io.File getFilesDir()>();

        return $r1;
    }
    java.io.File getInvalidFilesDir()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "invalidClsFiles");

        return $r1;
    }
    java.io.File getNonFatalSessionFilesDir()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File $r1, $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "nonfatal-sessions");

        return $r1;
    }
    void handleUncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2, $r10;
        java.util.Date r3;
        io.fabric.sdk.android.Logger $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.crashlytics.android.core.DevicePowerStateListener $r7;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r8;
        com.crashlytics.android.core.CrashlyticsController$7 $r9;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        entermonitor r0;

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics is handling uncaught exception \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r6 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", $r6);

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.DevicePowerStateListener devicePowerStateListener>;

        virtualinvoke $r7.<com.crashlytics.android.core.DevicePowerStateListener: void dispose()>();

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>()>();

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r9 = new com.crashlytics.android.core.CrashlyticsController$7;

        specialinvoke $r9.<com.crashlytics.android.core.CrashlyticsController$7: void <init>(com.crashlytics.android.core.CrashlyticsController,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, r3, $r1, $r2);

        virtualinvoke $r8.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.lang.Object submitAndWait(java.util.concurrent.Callable)>($r9);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    boolean hasOpenSession()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        int $i0;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listSessionBeginFiles()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isHandlingException()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        boolean $z0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler crashHandler>;

        if $r1 == null goto label1;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler crashHandler>;

        $z0 = virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: boolean isHandlingException()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    java.io.File[] listCompleteSessionFiles()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.util.LinkedList r1;
        java.io.File $r2;
        java.io.FilenameFilter $r3;
        java.io.File[] $r4;
        int $i0;
        java.lang.Object[] $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        r1 = new java.util.LinkedList;

        specialinvoke r1.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        $r3 = <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, $r4);

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        $r3 = <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, $r4);

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r3 = <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r4 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.File,java.io.FilenameFilter)>($r2, $r3);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, $r4);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (java.io.File)[$i0];

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.io.File[]) $r5;

        return $r4;
    }
    java.io.File[] listSessionBeginFiles()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.io.File[] $r1;
        java.io.FilenameFilter $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r2 = <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_BEGIN_FILE_FILTER>;

        $r1 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File[] listFilesMatching(java.io.FilenameFilter)>($r2);

        return $r1;
    }
    void openSession()
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r1;
        com.crashlytics.android.core.CrashlyticsController$12 $r2;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r2 = new com.crashlytics.android.core.CrashlyticsController$12;

        specialinvoke $r2.<com.crashlytics.android.core.CrashlyticsController$12: void <init>(com.crashlytics.android.core.CrashlyticsController)>(r0);

        virtualinvoke $r1.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2);

        return;
    }
    void submitAllReports(float, io.fabric.sdk.android.services.settings.SettingsData)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        float $f0;
        io.fabric.sdk.android.services.settings.SettingsData $r1;
        java.lang.String r2;
        com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck $r3;
        io.fabric.sdk.android.Logger $r4;
        io.fabric.sdk.android.services.settings.AppSettingsData $r5;
        com.crashlytics.android.core.CreateReportSpiCall $r6;
        boolean $z0;
        com.crashlytics.android.core.ReportUploader$SendCheck r7;
        com.crashlytics.android.core.CrashlyticsCore $r8;
        com.crashlytics.android.core.PreferenceManager $r9;
        io.fabric.sdk.android.services.settings.PromptSettingsData $r10;
        com.crashlytics.android.core.AppData $r11;
        com.crashlytics.android.core.ReportUploader$ReportFilesProvider $r12;
        com.crashlytics.android.core.CrashlyticsController$PrivacyDialogCheck $r13;
        com.crashlytics.android.core.ReportUploader $r14;
        com.crashlytics.android.core.ReportUploader$AlwaysSendCheck $r15;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $f0 := @parameter0: float;

        $r1 := @parameter1: io.fabric.sdk.android.services.settings.SettingsData;

        if $r1 != null goto label1;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("CrashlyticsCore", "Could not send reports. Settings are not available.");

        return;

     label1:
        $r5 = $r1.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.AppSettingsData appData>;

        r2 = $r5.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String reportsUrl>;

        $r6 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CreateReportSpiCall getCreateReportSpiCall(java.lang.String)>(r2);

        $z0 = specialinvoke r0.<com.crashlytics.android.core.CrashlyticsController: boolean shouldPromptUserBeforeSendingCrashReports(io.fabric.sdk.android.services.settings.SettingsData)>($r1);

        if $z0 == 0 goto label3;

        $r13 = new com.crashlytics.android.core.CrashlyticsController$PrivacyDialogCheck;

        r7 = $r13;

        $r8 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsCore crashlyticsCore>;

        $r9 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.PreferenceManager preferenceManager>;

        $r10 = $r1.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.PromptSettingsData promptData>;

        specialinvoke $r13.<com.crashlytics.android.core.CrashlyticsController$PrivacyDialogCheck: void <init>(io.fabric.sdk.android.Kit,com.crashlytics.android.core.PreferenceManager,io.fabric.sdk.android.services.settings.PromptSettingsData)>($r8, $r9, $r10);

     label2:
        $r14 = new com.crashlytics.android.core.ReportUploader;

        $r11 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.AppData appData>;

        r2 = $r11.<com.crashlytics.android.core.AppData: java.lang.String apiKey>;

        $r12 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$ReportFilesProvider reportFilesProvider>;

        $r3 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck handlingExceptionCheck>;

        specialinvoke $r14.<com.crashlytics.android.core.ReportUploader: void <init>(java.lang.String,com.crashlytics.android.core.CreateReportSpiCall,com.crashlytics.android.core.ReportUploader$ReportFilesProvider,com.crashlytics.android.core.ReportUploader$HandlingExceptionCheck)>(r2, $r6, $r12, $r3);

        virtualinvoke $r14.<com.crashlytics.android.core.ReportUploader: void uploadReports(float,com.crashlytics.android.core.ReportUploader$SendCheck)>($f0, r7);

        return;

     label3:
        $r15 = new com.crashlytics.android.core.ReportUploader$AlwaysSendCheck;

        r7 = $r15;

        specialinvoke $r15.<com.crashlytics.android.core.ReportUploader$AlwaysSendCheck: void <init>()>();

        goto label2;
    }
    void trimSessionFiles(int)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        int $i0, $i1;
        java.util.Comparator $r1;
        java.io.File $r2;
        java.io.FilenameFilter $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFatalSessionFilesDir()>();

        $r1 = <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        $i1 = staticinvoke <com.crashlytics.android.core.Utils: int capFileCount(java.io.File,int,java.util.Comparator)>($r2, $i0, $r1);

        $i0 = $i0 - $i1;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getNonFatalSessionFilesDir()>();

        $r1 = <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        $i1 = staticinvoke <com.crashlytics.android.core.Utils: int capFileCount(java.io.File,int,java.util.Comparator)>($r2, $i0, $r1);

        $i0 = $i0 - $i1;

        $r2 = virtualinvoke r0.<com.crashlytics.android.core.CrashlyticsController: java.io.File getFilesDir()>();

        $r3 = <com.crashlytics.android.core.CrashlyticsController: java.io.FilenameFilter SESSION_FILE_FILTER>;

        $r1 = <com.crashlytics.android.core.CrashlyticsController: java.util.Comparator SMALLEST_FILE_NAME_FIRST>;

        staticinvoke <com.crashlytics.android.core.Utils: int capFileCount(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r2, $r3, $i0, $r1);

        return;
    }
    void writeExternalCrashEvent(com.crashlytics.android.core.internal.models.SessionEventData)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        com.crashlytics.android.core.internal.models.SessionEventData $r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        com.crashlytics.android.core.CrashlyticsController$16 $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: com.crashlytics.android.core.internal.models.SessionEventData;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.crashlytics.android.core.CrashlyticsController$16;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$16: void <init>(com.crashlytics.android.core.CrashlyticsController,com.crashlytics.android.core.internal.models.SessionEventData)>(r0, $r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

        return;
    }
    void writeNonFatalException(java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;
        java.util.Date r3;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r4;
        com.crashlytics.android.core.CrashlyticsController$9 $r5;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>()>();

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r5 = new com.crashlytics.android.core.CrashlyticsController$9;

        specialinvoke $r5.<com.crashlytics.android.core.CrashlyticsController$9: void <init>(com.crashlytics.android.core.CrashlyticsController,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, r3, $r1, $r2);

        virtualinvoke $r4.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }
    void writeToLog(long, java.lang.String)
    {
        com.crashlytics.android.core.CrashlyticsController r0;
        long $l0;
        java.lang.String $r1;
        com.crashlytics.android.core.CrashlyticsBackgroundWorker $r2;
        com.crashlytics.android.core.CrashlyticsController$8 $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsController;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.crashlytics.android.core.CrashlyticsController: com.crashlytics.android.core.CrashlyticsBackgroundWorker backgroundWorker>;

        $r3 = new com.crashlytics.android.core.CrashlyticsController$8;

        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsController$8: void <init>(com.crashlytics.android.core.CrashlyticsController,long,java.lang.String)>(r0, $l0, $r1);

        virtualinvoke $r2.<com.crashlytics.android.core.CrashlyticsBackgroundWorker: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

        return;
    }
