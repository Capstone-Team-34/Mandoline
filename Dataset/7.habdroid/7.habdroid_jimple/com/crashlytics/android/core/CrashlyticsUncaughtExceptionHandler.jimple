com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
private final com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener crashListener
private final java.lang.Thread$UncaughtExceptionHandler defaultHandler
private final java.util.concurrent.atomic.AtomicBoolean isHandlingException
    public void <init>(com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener, java.lang.Thread$UncaughtExceptionHandler)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener $r1;
        java.lang.Thread$UncaughtExceptionHandler $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener;

        $r2 := @parameter1: java.lang.Thread$UncaughtExceptionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener crashListener> = $r1;

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException> = $r3;

        return;
    }
    boolean isHandlingException()
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }
    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2, $r8;
        java.lang.Exception r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener $r5;
        io.fabric.sdk.android.Logger $r6;
        java.lang.Thread$UncaughtExceptionHandler $r7;

        r0 := @this: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label1:
        $r5 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener crashListener>;

        interfaceinvoke $r5.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler$CrashListener: void onUncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

     label2:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r7.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;

     label3:
        r3 := @caughtexception;

     label4:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "An error occurred in the uncaught exception handler", r3);

     label5:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r7.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;

     label6:
        $r8 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r7 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultHandler>;

        interfaceinvoke $r7.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r4 = r0.<com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler: java.util.concurrent.atomic.AtomicBoolean isHandlingException>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
