com.mikepenz.fastadapter.adapters.ModelAdapter extends com.mikepenz.fastadapter.AbstractAdapter implements com.mikepenz.fastadapter.IItemAdapter
protected java.util.Comparator mComparator
private com.mikepenz.fastadapter.IIdDistributor mIdDistributor
private com.mikepenz.fastadapter.IInterceptor mInterceptor
private com.mikepenz.fastadapter.adapters.ItemFilter mItemFilter
private java.util.List mItems
private com.mikepenz.fastadapter.IInterceptor mReverseInterceptor
private boolean mUseIdDistributor
    public void <init>(com.mikepenz.fastadapter.IInterceptor)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IInterceptor r1;
        java.util.ArrayList $r2;
        com.mikepenz.fastadapter.adapters.ItemFilter $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IInterceptor;

        specialinvoke r0.<com.mikepenz.fastadapter.AbstractAdapter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems> = $r2;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor> = 1;

        $r3 = new com.mikepenz.fastadapter.adapters.ItemFilter;

        specialinvoke $r3.<com.mikepenz.fastadapter.adapters.ItemFilter: void <init>(com.mikepenz.fastadapter.adapters.ModelAdapter)>(r0);

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter mItemFilter> = $r3;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mInterceptor> = r1;

        return;
    }
    public static com.mikepenz.fastadapter.adapters.ModelAdapter models(com.mikepenz.fastadapter.IInterceptor)
    {
        com.mikepenz.fastadapter.IInterceptor r0;
        com.mikepenz.fastadapter.adapters.ModelAdapter $r1;

        r0 := @parameter0: com.mikepenz.fastadapter.IInterceptor;

        $r1 = new com.mikepenz.fastadapter.adapters.ModelAdapter;

        specialinvoke $r1.<com.mikepenz.fastadapter.adapters.ModelAdapter: void <init>(com.mikepenz.fastadapter.IInterceptor)>(r0);

        return $r1;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(int,java.util.List)>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(int, java.lang.Object[])
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object[];

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(int,java.lang.Object[])>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(java.util.List)>($r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter add(java.lang.Object[])
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.lang.Object[] $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.lang.Object[];

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(java.lang.Object[])>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter add(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List intercept(java.util.List)>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(int,java.util.List)>($i0, r1);

        return r0;
    }
    public final transient com.mikepenz.fastadapter.adapters.ModelAdapter add(int, java.lang.Object[])
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.lang.Object[] r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(int,java.util.List)>($i0, $r2);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter add(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List intercept(java.util.List)>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(java.util.List)>(r1);

        return r0;
    }
    public final transient com.mikepenz.fastadapter.adapters.ModelAdapter add(java.lang.Object[])
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.lang.Object[] r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter add(java.util.List)>($r2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter addInternal(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(int,java.util.List)>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter addInternal(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(java.util.List)>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(int, java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1;
        java.util.List r1, $r3;
        boolean $z0;
        com.mikepenz.fastadapter.IIdDistributor $r2;
        com.mikepenz.fastadapter.FastAdapter $r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor getIdDistributor()>();

        interfaceinvoke $r2.<com.mikepenz.fastadapter.IIdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        if r1 == null goto label2;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 <= 0 goto label2;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getOrder()>();

        $i1 = virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        $i1 = $i0 - $i1;

        interfaceinvoke $r3.<java.util.List: boolean addAll(int,java.util.Collection)>($i1, r1);

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeInserted(int,int)>($i0, $i1);

     label2:
        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter addInternal(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1, $r3;
        boolean $z0;
        com.mikepenz.fastadapter.IIdDistributor $r2;
        int $i0, $i1;
        java.util.Comparator $r4;
        com.mikepenz.fastadapter.FastAdapter $r5, $r6;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor getIdDistributor()>();

        interfaceinvoke $r2.<com.mikepenz.fastadapter.IIdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r4 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        if $r4 != null goto label2;

        $r5 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $r6 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getOrder()>();

        $i1 = virtualinvoke $r6.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        $i0 = $i1 + $i0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r5.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeInserted(int,int)>($i0, $i1);

        return r0;

     label2:
        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r4 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);

        $r5 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r5.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter clear()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter clear()>();

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter clear()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List $r1;
        int $i0, $i1;
        com.mikepenz.fastadapter.FastAdapter $r2, $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getOrder()>();

        $i1 = virtualinvoke $r3.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i1, $i0);

        return r0;
    }
    public void filter(java.lang.CharSequence)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.lang.CharSequence $r1;
        com.mikepenz.fastadapter.adapters.ItemFilter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter mItemFilter>;

        virtualinvoke $r2.<com.mikepenz.fastadapter.adapters.ItemFilter: void filter(java.lang.CharSequence)>($r1);

        return;
    }
    public com.mikepenz.fastadapter.IItem getAdapterItem(int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.lang.Object $r1;
        java.util.List $r2;
        com.mikepenz.fastadapter.IItem $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.mikepenz.fastadapter.IItem) $r1;

        return $r3;
    }
    public int getAdapterItemCount()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
    public java.util.List getAdapterItems()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        return r1;
    }
    public int getAdapterPosition(long)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        long $l0, $l3;
        int i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        com.mikepenz.fastadapter.IItem $r3;
        byte $b4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $l0 := @parameter0: long;

        i1 = 0;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

     label1:
        if i1 >= $i2 goto label3;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (com.mikepenz.fastadapter.IItem) $r2;

        $l3 = interfaceinvoke $r3.<com.mikepenz.fastadapter.IItem: long getIdentifier()>();

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }
    public int getAdapterPosition(com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IItem r1;
        long $l0;
        int $i1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IItem;

        $l0 = interfaceinvoke r1.<com.mikepenz.fastadapter.IItem: long getIdentifier()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getAdapterPosition(long)>($l0);

        return $i1;
    }
    public java.util.Comparator getComparator()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.Comparator r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        return r1;
    }
    public int getGlobalPosition(int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1;
        com.mikepenz.fastadapter.FastAdapter $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getOrder()>();

        $i1 = virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i1);

        $i0 = $i1 + $i0;

        return $i0;
    }
    public com.mikepenz.fastadapter.IIdDistributor getIdDistributor()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IIdDistributor $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor mIdDistributor>;

        if $r1 != null goto label1;

        $r1 = <com.mikepenz.fastadapter.IIdDistributor: com.mikepenz.fastadapter.IIdDistributor DEFAULT>;

        return $r1;

     label1:
        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor mIdDistributor>;

        return $r1;
    }
    public com.mikepenz.fastadapter.IInterceptor getInterceptor()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IInterceptor r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mInterceptor>;

        return r1;
    }
    public com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.adapters.ItemFilter r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter mItemFilter>;

        return r1;
    }
    public java.util.List getModels()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.ArrayList r1;
        java.util.List $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.mikepenz.fastadapter.IItem r5;
        com.mikepenz.fastadapter.IInterceptor $r6;
        com.mikepenz.fastadapter.IModelItem r7;
        java.lang.RuntimeException $r8;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = new java.util.ArrayList;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.mikepenz.fastadapter.IItem) $r4;

        $r6 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mReverseInterceptor>;

        if $r6 == null goto label2;

        $r6 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mReverseInterceptor>;

        $r4 = interfaceinvoke $r6.<com.mikepenz.fastadapter.IInterceptor: java.lang.Object intercept(java.lang.Object)>(r5);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        $z0 = r5 instanceof com.mikepenz.fastadapter.IModelItem;

        if $z0 == 0 goto label3;

        r7 = (com.mikepenz.fastadapter.IModelItem) r5;

        $r4 = interfaceinvoke r7.<com.mikepenz.fastadapter.IModelItem: java.lang.Object getModel()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("to get the list of models, the item either needs to implement `IModelItem` or you have to provide a `reverseInterceptor`");

        throw $r8;

     label4:
        return r1;
    }
    public com.mikepenz.fastadapter.IInterceptor getReverseInterceptor()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IInterceptor r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mReverseInterceptor>;

        return r1;
    }
    public com.mikepenz.fastadapter.IItem intercept(java.lang.Object)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.lang.Object r1;
        com.mikepenz.fastadapter.IInterceptor $r2;
        com.mikepenz.fastadapter.IItem $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mInterceptor>;

        r1 = interfaceinvoke $r2.<com.mikepenz.fastadapter.IInterceptor: java.lang.Object intercept(java.lang.Object)>(r1);

        $r3 = (com.mikepenz.fastadapter.IItem) r1;

        return $r3;
    }
    public java.util.List intercept(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;
        java.util.ArrayList r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.mikepenz.fastadapter.IItem $r5;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IItem intercept(java.lang.Object)>($r4);

        if $r5 == null goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return r2;
    }
    public boolean isUseIdDistributor()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        boolean z0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        z0 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        return z0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter move(int, int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1, $i2, $i3;
        com.mikepenz.fastadapter.FastAdapter $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        com.mikepenz.fastadapter.IItem r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i3 = $i0 - $i2;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        r4 = (com.mikepenz.fastadapter.IItem) $r3;

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i3 = $i0 - $i2;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i3);

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i2 = $i1 - $i2;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i2, r4);

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemMoved(int,int)>($i0, $i1);

        return r0;
    }
    public void remapMappedTypes()
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.FastAdapter $r1;
        java.util.List $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r1.<com.mikepenz.fastadapter.FastAdapter: void clearTypeInstance()>();

        $r2 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: void mapPossibleTypes(java.lang.Iterable)>($r2);

        return;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter remove(int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter remove(int)>($i0);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter remove(int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1;
        java.util.List $r1;
        com.mikepenz.fastadapter.FastAdapter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i1 = $i0 - $i1;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRemoved(int)>($i0);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter removeRange(int, int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter removeRange(int,int)>($i0, $i1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter removeRange(int, int)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1, $i2, $i3, i4;
        java.util.List $r1;
        com.mikepenz.fastadapter.FastAdapter $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i3 = virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i2 = $i2 - $i0;

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        i4 = 0;

     label1:
        if i4 >= $i2 goto label2;

        $r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i1 = $i0 - $i3;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemRangeRemoved(int,int)>($i0, $i2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter set(int, java.lang.Object)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter set(int,java.lang.Object)>($i0, $r1);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter set(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter set(java.util.List)>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter set(int, java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        com.mikepenz.fastadapter.adapters.ModelAdapter r1;
        com.mikepenz.fastadapter.IItem $r2;

        r1 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r1.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IItem intercept(java.lang.Object)>(r0);

        if $r2 != null goto label1;

        return r1;

     label1:
        r1 = virtualinvoke r1.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(int,com.mikepenz.fastadapter.IItem)>($i0, $r2);

        return r1;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter set(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter set(java.util.List,boolean)>(r1, 1);

        return r0;
    }
    protected com.mikepenz.fastadapter.adapters.ModelAdapter set(java.util.List, boolean)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;
        boolean $z0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List intercept(java.util.List)>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(java.util.List,boolean,com.mikepenz.fastadapter.IAdapterNotifier)>(r1, $z0, null);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter set(java.util.List, boolean, com.mikepenz.fastadapter.IAdapterNotifier)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;
        boolean $z0;
        com.mikepenz.fastadapter.IAdapterNotifier $r2;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.mikepenz.fastadapter.IAdapterNotifier;

        r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List intercept(java.util.List)>(r1);

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(java.util.List,boolean,com.mikepenz.fastadapter.IAdapterNotifier)>(r1, $z0, $r2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter setInternal(int, com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0;
        com.mikepenz.fastadapter.IItem $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.mikepenz.fastadapter.IItem;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(int,com.mikepenz.fastadapter.IItem)>($i0, $r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(int, com.mikepenz.fastadapter.IItem)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        int $i0, $i1;
        com.mikepenz.fastadapter.IItem r1;
        boolean $z0;
        com.mikepenz.fastadapter.IIdDistributor $r2;
        java.util.List $r3;
        com.mikepenz.fastadapter.FastAdapter $r4;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $i0 := @parameter0: int;

        r1 := @parameter1: com.mikepenz.fastadapter.IItem;

        $z0 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor getIdDistributor()>();

        interfaceinvoke $r2.<com.mikepenz.fastadapter.IIdDistributor: com.mikepenz.fastadapter.IIdentifyable checkId(com.mikepenz.fastadapter.IIdentifyable)>(r1);

     label1:
        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i1 = virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCount(int)>($i0);

        $i1 = $i0 - $i1;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        $r4 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter mFastAdapter>;

        virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: void registerTypeInstance(com.mikepenz.fastadapter.IItem)>(r1);

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterItemChanged(int)>($i0);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter setInternal(java.util.List, boolean, com.mikepenz.fastadapter.IAdapterNotifier)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1, $r11;
        boolean $z0, $z1;
        com.mikepenz.fastadapter.IAdapterNotifier $r2;
        com.mikepenz.fastadapter.IIdDistributor $r3;
        com.mikepenz.fastadapter.adapters.ItemFilter $r4;
        java.lang.CharSequence $r5;
        com.mikepenz.fastadapter.FastAdapter $r6;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.mikepenz.fastadapter.IAdapterExtension r10;
        int $i0, $i1, $i2;
        java.util.Comparator $r12;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.mikepenz.fastadapter.IAdapterNotifier;

        $z1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor getIdDistributor()>();

        interfaceinvoke $r3.<com.mikepenz.fastadapter.IIdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        $r5 = virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: java.lang.CharSequence getConstraint()>();

        if $r5 == null goto label2;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>(null);

     label2:
        $r6 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $r7 = virtualinvoke $r6.<com.mikepenz.fastadapter.FastAdapter: java.util.Set getExtensions()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.mikepenz.fastadapter.IAdapterExtension) $r9;

        interfaceinvoke r10.<com.mikepenz.fastadapter.IAdapterExtension: void set(java.util.List,boolean)>(r1, $z0);

        goto label3;

     label4:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r11 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r6 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        $i2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: int getOrder()>();

        $i2 = virtualinvoke $r6.<com.mikepenz.fastadapter.FastAdapter: int getPreItemCountByOrder(int)>($i2);

        $r11 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        if r1 == $r11 goto label6;

        $r11 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r11 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        interfaceinvoke $r11.<java.util.List: void clear()>();

     label5:
        $r11 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label6:
        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r12 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        if $r12 == null goto label7;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r12 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r12);

     label7:
        if $r2 != null goto label8;

        $r2 = <com.mikepenz.fastadapter.IAdapterNotifier: com.mikepenz.fastadapter.IAdapterNotifier DEFAULT>;

     label8:
        $r6 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        interfaceinvoke $r2.<com.mikepenz.fastadapter.IAdapterNotifier: boolean notify(com.mikepenz.fastadapter.FastAdapter,int,int,int)>($r6, $i0, $i1, $i2);

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IItemAdapter setNewList(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List $r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setNewList(java.util.List)>($r1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter setNewList(java.util.List)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter setNewList(java.util.List,boolean)>(r1, 0);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter setNewList(java.util.List, boolean)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.List r1;
        boolean $z0, $z1;
        com.mikepenz.fastadapter.IIdDistributor $r2;
        java.lang.CharSequence r3, $r5;
        com.mikepenz.fastadapter.adapters.ItemFilter $r4, $r8;
        java.util.ArrayList $r6;
        java.util.Comparator $r7;
        android.widget.Filter$FilterResults $r9;
        com.mikepenz.fastadapter.FastAdapter $r10;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List intercept(java.util.List)>(r1);

        $z1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor>;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor getIdDistributor()>();

        interfaceinvoke $r2.<com.mikepenz.fastadapter.IIdDistributor: java.util.List checkIds(java.util.List)>(r1);

     label1:
        r3 = null;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        $r5 = virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: java.lang.CharSequence getConstraint()>();

        if $r5 == null goto label2;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        r3 = virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: java.lang.CharSequence getConstraint()>();

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>(null);

     label2:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems> = $r6;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: void mapPossibleTypes(java.lang.Iterable)>(r1);

        $r7 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        if $r7 == null goto label3;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        $r7 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r7);

     label3:
        if r3 == null goto label4;

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        $r8 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter getItemFilter()>();

        $r9 = virtualinvoke $r8.<com.mikepenz.fastadapter.adapters.ItemFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>(r3);

        virtualinvoke $r4.<com.mikepenz.fastadapter.adapters.ItemFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)>(r3, $r9);

        return r0;

     label4:
        $r10 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r10.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withComparator(java.util.Comparator)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.Comparator r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.Comparator;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ModelAdapter withComparator(java.util.Comparator,boolean)>(r1, 1);

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withComparator(java.util.Comparator, boolean)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        java.util.Comparator r1;
        boolean $z0;
        com.mikepenz.fastadapter.FastAdapter $r2;
        java.util.List $r3;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: java.util.Comparator;

        $z0 := @parameter1: boolean;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator> = r1;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        if $r3 == null goto label1;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        if r1 == null goto label1;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.List mItems>;

        r1 = r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: java.util.Comparator mComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, r1);

        $r2 = virtualinvoke r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.FastAdapter getFastAdapter()>();

        virtualinvoke $r2.<com.mikepenz.fastadapter.FastAdapter: void notifyAdapterDataSetChanged()>();

     label1:
        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withIdDistributor(com.mikepenz.fastadapter.IIdDistributor)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IIdDistributor r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IIdDistributor;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IIdDistributor mIdDistributor> = r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withInterceptor(com.mikepenz.fastadapter.IInterceptor)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IInterceptor r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IInterceptor;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mInterceptor> = r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withItemFilter(com.mikepenz.fastadapter.adapters.ItemFilter)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.adapters.ItemFilter r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.adapters.ItemFilter;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.adapters.ItemFilter mItemFilter> = r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withReverseInterceptor(com.mikepenz.fastadapter.IInterceptor)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        com.mikepenz.fastadapter.IInterceptor r1;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.IInterceptor;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: com.mikepenz.fastadapter.IInterceptor mReverseInterceptor> = r1;

        return r0;
    }
    public com.mikepenz.fastadapter.adapters.ModelAdapter withUseIdDistributor(boolean)
    {
        com.mikepenz.fastadapter.adapters.ModelAdapter r0;
        boolean $z0;

        r0 := @this: com.mikepenz.fastadapter.adapters.ModelAdapter;

        $z0 := @parameter0: boolean;

        r0.<com.mikepenz.fastadapter.adapters.ModelAdapter: boolean mUseIdDistributor> = $z0;

        return r0;
    }
