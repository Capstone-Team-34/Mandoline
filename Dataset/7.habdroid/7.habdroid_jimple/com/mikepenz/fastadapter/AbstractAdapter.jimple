com.mikepenz.fastadapter.AbstractAdapter extends java.lang.Object implements com.mikepenz.fastadapter.IAdapter
protected com.mikepenz.fastadapter.FastAdapter mFastAdapter
protected int mOrder
    public void <init>()
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.fastadapter.AbstractAdapter: int mOrder> = -1;

        return;
    }
    public com.mikepenz.fastadapter.FastAdapter getFastAdapter()
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        com.mikepenz.fastadapter.FastAdapter r1;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        r1 = r0.<com.mikepenz.fastadapter.AbstractAdapter: com.mikepenz.fastadapter.FastAdapter mFastAdapter>;

        return r1;
    }
    public int getOrder()
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        int i0;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        i0 = r0.<com.mikepenz.fastadapter.AbstractAdapter: int mOrder>;

        return i0;
    }
    public void mapPossibleTypes(java.lang.Iterable)
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        java.lang.Iterable r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.mikepenz.fastadapter.IItem r4;
        com.mikepenz.fastadapter.FastAdapter $r5;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        r1 := @parameter0: java.lang.Iterable;

        if r1 == null goto label2;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.mikepenz.fastadapter.IItem) $r3;

        $r5 = r0.<com.mikepenz.fastadapter.AbstractAdapter: com.mikepenz.fastadapter.FastAdapter mFastAdapter>;

        virtualinvoke $r5.<com.mikepenz.fastadapter.FastAdapter: void registerTypeInstance(com.mikepenz.fastadapter.IItem)>(r4);

        goto label1;

     label2:
        return;
    }
    public void setOrder(int)
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        int $i0;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        $i0 := @parameter0: int;

        r0.<com.mikepenz.fastadapter.AbstractAdapter: int mOrder> = $i0;

        return;
    }
    public com.mikepenz.fastadapter.AbstractAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter)
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        com.mikepenz.fastadapter.FastAdapter r1;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        r1 := @parameter0: com.mikepenz.fastadapter.FastAdapter;

        r0.<com.mikepenz.fastadapter.AbstractAdapter: com.mikepenz.fastadapter.FastAdapter mFastAdapter> = r1;

        return r0;
    }
    public volatile com.mikepenz.fastadapter.IAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter)
    {
        com.mikepenz.fastadapter.AbstractAdapter r0;
        com.mikepenz.fastadapter.FastAdapter $r1;

        r0 := @this: com.mikepenz.fastadapter.AbstractAdapter;

        $r1 := @parameter0: com.mikepenz.fastadapter.FastAdapter;

        r0 = virtualinvoke r0.<com.mikepenz.fastadapter.AbstractAdapter: com.mikepenz.fastadapter.AbstractAdapter withFastAdapter(com.mikepenz.fastadapter.FastAdapter)>($r1);

        return r0;
    }
