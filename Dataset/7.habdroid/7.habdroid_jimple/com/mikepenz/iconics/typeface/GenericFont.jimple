com.mikepenz.iconics.typeface.GenericFont extends java.lang.Object implements com.mikepenz.iconics.typeface.ITypeface
private java.lang.String mAuthor
private java.util.HashMap mChars
private java.lang.String mFontFile
private java.lang.String mFontName
private java.lang.String mMappingPrefix
private android.graphics.Typeface typeface
    protected void <init>()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.util.HashMap $r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.iconics.typeface.GenericFont: android.graphics.Typeface typeface> = null;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars> = $r1;

        return;
    }
    public void <init>(java.lang.String, java.lang.String)
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.mikepenz.iconics.typeface.GenericFont: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("GenericFont", "GenericAuthor", $r1, $r2);

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0;
        java.util.HashMap $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mikepenz.iconics.typeface.GenericFont: android.graphics.Typeface typeface> = null;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars> = $r5;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 3 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MappingPrefix must be 3 char long");

     label1:
        r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mFontName> = $r1;

        r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mAuthor> = $r2;

        r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mMappingPrefix> = $r3;

        r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mFontFile> = $r4;

        return;
    }
    public java.lang.String getAuthor()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        r1 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mAuthor>;

        return r1;
    }
    public java.util.HashMap getCharacters()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.util.HashMap $r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }
    public java.lang.String getDescription()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        return "";
    }
    public java.lang.String getFontName()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        r1 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mFontName>;

        return r1;
    }
    public com.mikepenz.iconics.typeface.IIcon getIcon(java.lang.String)
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String $r1;
        com.mikepenz.iconics.typeface.GenericFont$Icon $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.Character $r5;
        char $c0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.mikepenz.iconics.typeface.GenericFont$Icon;

        $r3 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.Character) $r4;

        $c0 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        specialinvoke $r2.<com.mikepenz.iconics.typeface.GenericFont$Icon: void <init>(com.mikepenz.iconics.typeface.GenericFont,char)>(r0, $c0);

        $r2 = virtualinvoke $r2.<com.mikepenz.iconics.typeface.GenericFont$Icon: com.mikepenz.iconics.typeface.GenericFont$Icon withTypeface(com.mikepenz.iconics.typeface.ITypeface)>(r0);

        return $r2;
    }
    public int getIconCount()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        int $i0;
        java.util.HashMap $r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }
    public java.util.Collection getIcons()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.util.Set $r1;
        java.util.HashMap $r2;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r2 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        return $r1;
    }
    public java.lang.String getLicense()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        return "";
    }
    public java.lang.String getLicenseUrl()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        return "";
    }
    public java.lang.String getMappingPrefix()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String r1;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        r1 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mMappingPrefix>;

        return r1;
    }
    public android.graphics.Typeface getTypeface(android.content.Context)
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        android.content.Context $r1;
        java.lang.Exception r2;
        java.lang.String $r3;
        android.graphics.Typeface $r4;
        android.content.res.AssetManager $r5;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 := @parameter0: android.content.Context;

        $r4 = r0.<com.mikepenz.iconics.typeface.GenericFont: android.graphics.Typeface typeface>;

        if $r4 != null goto label2;

     label1:
        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mFontFile>;

        $r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r5, $r3);

        r0.<com.mikepenz.iconics.typeface.GenericFont: android.graphics.Typeface typeface> = $r4;

     label2:
        $r4 = r0.<com.mikepenz.iconics.typeface.GenericFont: android.graphics.Typeface typeface>;

        return $r4;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public java.lang.String getUrl()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        return "";
    }
    public java.lang.String getVersion()
    {
        com.mikepenz.iconics.typeface.GenericFont r0;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        return "1.0.0";
    }
    public void registerIcon(java.lang.String, char)
    {
        com.mikepenz.iconics.typeface.GenericFont r0;
        java.lang.String $r1, $r4;
        char $c0;
        java.util.HashMap $r2;
        java.lang.StringBuilder $r3;
        java.lang.Character $r5;

        r0 := @this: com.mikepenz.iconics.typeface.GenericFont;

        $r1 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $r2 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.util.HashMap mChars>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.mikepenz.iconics.typeface.GenericFont: java.lang.String mMappingPrefix>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        return;
    }
