com.github.paolorotolo.appintro.AppIntroViewPager extends android.support.v4.view.ViewPager
private static final int ON_ILLEGALLY_REQUESTED_NEXT_PAGE_MAX_INTERVAL
private static final java.lang.String TAG
private float currentTouchDownX
private long illegallyRequestedNextPageLastCalled
private int lockPage
private com.github.paolorotolo.appintro.ScrollerCustomDuration mScroller
private com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener
private boolean nextPagingEnabled
private android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener
private boolean pagingEnabled
    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: java.lang.String makeLogTag(java.lang.Class)>(class "Lcom/github/paolorotolo/appintro/AppIntroViewPager;");

        <com.github.paolorotolo.appintro.AppIntroViewPager: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v4.view.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.ScrollerCustomDuration mScroller> = null;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean pagingEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean nextPagingEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int lockPage> = 0;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void initViewPagerScroller()>();

        return;
    }
    private boolean checkCanRequestNextPage(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener>;

        if $r2 == null goto label1;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener>;

        $z0 = interfaceinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener: boolean onCanRequestNextPage()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void checkIllegallyRequestedNextPage(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1;
        byte $b1;
        long $l2, $l3;
        com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: float currentTouchDownX>;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b1 = $f0 cmpl 25.0F;

        if $b1 < 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: long illegallyRequestedNextPageLastCalled>;

        $l2 = $l2 - $l3;

        $b1 = $l2 cmp 1000L;

        if $b1 < 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: long illegallyRequestedNextPageLastCalled> = $l2;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener>;

        if $r2 == null goto label1;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener>;

        interfaceinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener: void onIllegallyRequestedNextPage()>();

     label1:
        return;
    }
    private boolean checkPagingState(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        int $i0;
        float $f0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean pagingEnabled>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean nextPagingEnabled>;

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: float currentTouchDownX> = $f0;

     label2:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label3;

        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean detectSwipeToEnd(android.view.MotionEvent)>($r1);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    private boolean detectSwipeToEnd(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        float f0, $f1;
        java.lang.Exception r2;
        boolean z0, $z1;
        byte $b0;
        android.content.res.Resources $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        z0 = 0;

     label1:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: float currentTouchDownX>;

     label2:
        f0 = $f1 - f0;

     label3:
        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

     label4:
        $b0 = $f1 cmpl 0.0F;

        if $b0 <= 0 goto label5;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label5;

        z0 = 1;

     label5:
        $r3 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.content.res.Resources getResources()>();

        $z1 = staticinvoke <com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>($r3);

        if $z1 == 0 goto label8;

        if z0 != 0 goto label7;

        return 1;

     label6:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        goto label5;

     label7:
        return 0;

     label8:
        return z0;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }
    private void initViewPagerScroller()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        java.lang.Exception r1;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3, $r4;
        com.github.paolorotolo.appintro.ScrollerCustomDuration $r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.view.animation.Interpolator $r8;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r2 = class "Landroid/support/v4/view/ViewPager;";

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mScroller");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r2 = class "Landroid/support/v4/view/ViewPager;";

     label3:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("sInterpolator");

        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label4:
        $r5 = new com.github.paolorotolo.appintro.ScrollerCustomDuration;

     label5:
        $r6 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.content.Context getContext()>();

        $r7 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r8 = (android.view.animation.Interpolator) $r7;

        specialinvoke $r5.<com.github.paolorotolo.appintro.ScrollerCustomDuration: void <init>(android.content.Context,android.view.animation.Interpolator)>($r6, $r8);

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.ScrollerCustomDuration mScroller> = $r5;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.ScrollerCustomDuration mScroller>;

        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, $r5);

     label6:
        return;

     label7:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public void addOnPageChangeListener(com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener;

        specialinvoke r0.<android.support.v4.view.ViewPager: void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>($r1);

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener> = $r1;

        return;
    }
    public int getLockPage()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        int i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        i0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int lockPage>;

        return i0;
    }
    public void goToNextSlide()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.content.res.Resources $r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.content.res.Resources getResources()>();

        $z0 = staticinvoke <com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i0 = $i0 + -1;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

        return;

     label1:
        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i0 = $i0 + 1;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

        return;
    }
    public void goToPreviousSlide()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        java.lang.Exception r1;
        android.content.res.Resources $r2;
        boolean $z0;
        int $i0;
        java.lang.String $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

     label01:
        $r2 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.content.res.Resources getResources()>();

        $z0 = staticinvoke <com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>($r2);

     label02:
        if $z0 == 0 goto label07;

     label03:
        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

     label04:
        $i0 = $i0 + 1;

     label05:
        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

     label06:
        return;

     label07:
        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

     label08:
        $i0 = $i0 + -1;

     label09:
        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

     label10:
        return;

     label11:
        r1 := @caughtexception;

        $r3 = <com.github.paolorotolo.appintro.AppIntroViewPager: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "goToPreviousSlide: An error occurred while switching to the previous slide. Was isFirstSlide checked before the call?";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void e(java.lang.String,java.lang.Object[])>($r3, $r4);

        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
    public boolean isFirstSlide(int)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        int $i0, $i1;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.content.res.Resources getResources()>();

        $z0 = staticinvoke <com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>($r1);

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i0 = $i1 - $i0;

        $i0 = $i0 + 1;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        if $i0 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }
    public boolean isNextPagingEnabled()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean nextPagingEnabled>;

        return z0;
    }
    public boolean isPagingEnabled()
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean pagingEnabled>;

        return z0;
    }
    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: float currentTouchDownX> = $f0;

        $z0 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean checkPagingState(android.view.MotionEvent)>($r1);

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean checkCanRequestNextPage(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label3;

     label2:
        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void checkIllegallyRequestedNextPage(android.view.MotionEvent)>($r1);

        return 0;

     label3:
        $z0 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: float currentTouchDownX> = $f0;

        $z0 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean checkPagingState(android.view.MotionEvent)>($r1);

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean checkCanRequestNextPage(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label3;

     label2:
        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: void checkIllegallyRequestedNextPage(android.view.MotionEvent)>($r1);

        return 0;

     label3:
        $z0 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public void setCurrentItem(int)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        int $i0, $i1;
        boolean z0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $i0 := @parameter0: int;

        z0 = 0;

        $i1 = specialinvoke r0.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        if $i1 != 0 goto label1;

        if $i0 != 0 goto label1;

        z0 = 1;

     label1:
        specialinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        if z0 == 0 goto label2;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener>;

        if $r1 == null goto label2;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(0);

     label2:
        return;
    }
    public void setLockPage(int)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $i0 := @parameter0: int;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int lockPage> = $i0;

        return;
    }
    public void setNextPagingEnabled(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean nextPagingEnabled> = $z0;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: int lockPage> = $i0;

     label1:
        return;
    }
    public void setOnNextPageRequestedListener(com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $r1 := @parameter0: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener nextPageRequestedListener> = $r1;

        return;
    }
    public void setPagingEnabled(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean pagingEnabled> = $z0;

        return;
    }
    public void setScrollDurationFactor(double)
    {
        com.github.paolorotolo.appintro.AppIntroViewPager r0;
        double $d0;
        com.github.paolorotolo.appintro.ScrollerCustomDuration $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroViewPager;

        $d0 := @parameter0: double;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroViewPager: com.github.paolorotolo.appintro.ScrollerCustomDuration mScroller>;

        virtualinvoke $r1.<com.github.paolorotolo.appintro.ScrollerCustomDuration: void setScrollDurationFactor(double)>($d0);

        return;
    }
