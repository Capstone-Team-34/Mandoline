com.github.paolorotolo.appintro.util.CustomFontCache extends java.lang.Object
private static final java.lang.String TAG
private static final java.util.Hashtable fCache
    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.Hashtable $r1;

        $r0 = staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: java.lang.String makeLogTag(java.lang.Class)>(class "Lcom/github/paolorotolo/appintro/util/CustomFontCache;");

        <com.github.paolorotolo.appintro.util.CustomFontCache: java.lang.String TAG> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <com.github.paolorotolo.appintro.util.CustomFontCache: java.util.Hashtable fCache> = $r1;

        return;
    }
    public void <init>()
    {
        com.github.paolorotolo.appintro.util.CustomFontCache r0;

        r0 := @this: com.github.paolorotolo.appintro.util.CustomFontCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static android.graphics.Typeface get(java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r7;
        android.content.Context $r1;
        java.lang.Exception r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        android.graphics.Typeface r5;
        android.content.res.AssetManager $r6;
        boolean $z0;
        java.lang.Object[] $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r3 = <com.github.paolorotolo.appintro.util.CustomFontCache: java.util.Hashtable fCache>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        r5 = (android.graphics.Typeface) $r4;

        if r5 != null goto label8;

     label1:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r6, $r0);

     label2:
        if r5 == null goto label4;

        $r3 = <com.github.paolorotolo.appintro.util.CustomFontCache: java.util.Hashtable fCache>;

     label3:
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r5);

     label4:
        return r5;

     label5:
        r2 := @caughtexception;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label7;

        $r0 = <com.github.paolorotolo.appintro.util.CustomFontCache: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "Empty path";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void w(java.lang.String,java.lang.Throwable,java.lang.Object[])>($r0, r2, $r8);

     label6:
        return null;

     label7:
        $r7 = <com.github.paolorotolo.appintro.util.CustomFontCache: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r0;

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void w(java.lang.String,java.lang.Throwable,java.lang.Object[])>($r7, r2, $r8);

        goto label6;

     label8:
        return r5;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
