com.github.paolorotolo.appintro.AppIntroBase extends android.support.v7.app.AppCompatActivity implements com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener
public static final int DEFAULT_COLOR
private static final int DEFAULT_SCROLL_DURATION_FACTOR
private static final java.lang.String INSTANCE_DATA_COLOR_TRANSITIONS_ENABLED
private static final java.lang.String INSTANCE_DATA_IMMERSIVE_MODE_ENABLED
private static final java.lang.String INSTANCE_DATA_IMMERSIVE_MODE_STICKY
private static final int PERMISSIONS_REQUEST_ALL_PERMISSIONS
private static final java.lang.String TAG
private boolean areColorTransitionsEnabled
private final android.animation.ArgbEvaluator argbEvaluator
protected android.view.View backButton
protected boolean baseProgressButtonEnabled
private int currentlySelectedItem
protected android.view.View doneButton
protected final java.util.List fragments
private android.support.v4.view.GestureDetectorCompat gestureDetector
private boolean isGoBackLockEnabled
private boolean isImmersiveModeEnabled
private boolean isImmersiveModeSticky
protected boolean isVibrateOn
protected boolean isWizardMode
protected com.github.paolorotolo.appintro.IndicatorController mController
protected com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter
protected android.os.Vibrator mVibrator
protected android.view.View nextButton
protected com.github.paolorotolo.appintro.AppIntroViewPager pager
protected boolean pagerIndicatorEnabled
protected java.util.ArrayList permissionsArray
protected boolean progressButtonEnabled
protected int savedCurrentItem
protected int selectedIndicatorColor
protected boolean showBackButtonWithDone
protected android.view.View skipButton
protected boolean skipButtonEnabled
protected int slidesNumber
protected int unselectedIndicatorColor
protected int vibrateIntensity
    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: java.lang.String makeLogTag(java.lang.Class)>(class "Lcom/github/paolorotolo/appintro/AppIntroBase;");

        <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG> = $r0;

        return;
    }
    public void <init>()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.util.Vector $r1;
        android.animation.ArgbEvaluator $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments> = $r1;

        $r2 = new android.animation.ArgbEvaluator;

        specialinvoke $r2.<android.animation.ArgbEvaluator: void <init>()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.animation.ArgbEvaluator argbEvaluator> = $r2;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int vibrateIntensity> = 20;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int selectedIndicatorColor> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int unselectedIndicatorColor> = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray> = $r3;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isVibrateOn> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled> = 1;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean showBackButtonWithDone> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isGoBackLockEnabled> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean areColorTransitionsEnabled> = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int currentlySelectedItem> = -1;

        return;
    }
    static boolean access$100(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 = specialinvoke $r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean handleBeforeSlideChanged()>();

        return $z0;
    }
    static boolean access$1000(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = $r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled>;

        return z0;
    }
    static boolean access$1100(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = $r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky>;

        return z0;
    }
    static boolean access$200(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 = specialinvoke $r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean checkAndRequestPermissions()>();

        return $z0;
    }
    static void access$300(com.github.paolorotolo.appintro.AppIntroBase, boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean $z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.github.paolorotolo.appintro.AppIntroBase: void changeSlide(boolean)>($z0);

        return;
    }
    static void access$400(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        specialinvoke $r0.<com.github.paolorotolo.appintro.AppIntroBase: void handleIllegalSlideChangeAttempt()>();

        return;
    }
    static void access$600(com.github.paolorotolo.appintro.AppIntroBase, android.support.v4.app.Fragment, android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        android.support.v4.app.Fragment $r1, $r2;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter1: android.support.v4.app.Fragment;

        $r2 := @parameter2: android.support.v4.app.Fragment;

        specialinvoke $r0.<com.github.paolorotolo.appintro.AppIntroBase: void handleSlideChanged(android.support.v4.app.Fragment,android.support.v4.app.Fragment)>($r1, $r2);

        return;
    }
    static boolean access$700(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        boolean z0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = $r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean areColorTransitionsEnabled>;

        return z0;
    }
    static android.animation.ArgbEvaluator access$800(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        android.animation.ArgbEvaluator r1;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        r1 = $r0.<com.github.paolorotolo.appintro.AppIntroBase: android.animation.ArgbEvaluator argbEvaluator>;

        return r1;
    }
    static int access$900(com.github.paolorotolo.appintro.AppIntroBase)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        int i0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        i0 = $r0.<com.github.paolorotolo.appintro.AppIntroBase: int currentlySelectedItem>;

        return i0;
    }
    static int access$902(com.github.paolorotolo.appintro.AppIntroBase, int)
    {
        com.github.paolorotolo.appintro.AppIntroBase $r0;
        int $i0;

        $r0 := @parameter0: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter1: int;

        $r0.<com.github.paolorotolo.appintro.AppIntroBase: int currentlySelectedItem> = $i0;

        return $i0;
    }
    private void changeSlide(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;
        com.github.paolorotolo.appintro.PagerAdapter $r1;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;
        int $i0;
        android.support.v4.app.Fragment $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $r3 = virtualinvoke $r1.<com.github.paolorotolo.appintro.PagerAdapter: android.support.v4.app.Fragment getItem(int)>($i0);

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void handleSlideChanged(android.support.v4.app.Fragment,android.support.v4.app.Fragment)>($r3, null);

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onDonePressed(android.support.v4.app.Fragment)>($r3);

        return;

     label1:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: void goToNextSlide()>();

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onNextPressed()>();

        return;
    }
    private boolean checkAndRequestPermissions()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.util.ArrayList $r1;
        boolean $z0;
        int $i0, $i1;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;
        java.lang.Object $r3;
        com.github.paolorotolo.appintro.PermissionObject $r4;
        java.lang.String[] $r5;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $z0 = 0;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if 0 >= $i0 goto label1;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i0 = $i0 + 1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.github.paolorotolo.appintro.PermissionObject) $r3;

        $i1 = virtualinvoke $r4.<com.github.paolorotolo.appintro.PermissionObject: int getPosition()>();

        if $i0 != $i1 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label3;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.github.paolorotolo.appintro.PermissionObject) $r3;

        $r5 = virtualinvoke $r4.<com.github.paolorotolo.appintro.PermissionObject: java.lang.String[] getPermission()>();

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void requestPermissions(java.lang.String[],int)>($r5, 1);

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        return 1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private void checkButton(android.view.View, java.lang.String)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.view.View $r1;
        java.lang.String $r2, $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("View not initialized, missing \'R.id.%1$s\' in XML!", $r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r2);

     label1:
        return;
    }
    private boolean handleBeforeSlideChanged()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.lang.Object[] $r1, $r6;
        com.github.paolorotolo.appintro.PagerAdapter $r2;
        com.github.paolorotolo.appintro.AppIntroViewPager $r3;
        int $i0;
        android.support.v4.app.Fragment $r4;
        java.lang.String $r5, $r7;
        boolean $z0;
        com.github.paolorotolo.appintro.ISlidePolicy r8;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        $r3 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r3.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $r4 = virtualinvoke $r2.<com.github.paolorotolo.appintro.PagerAdapter: android.support.v4.app.Fragment getItem(int)>($i0);

        $r5 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r4;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("User wants to move away from slide: %s. Checking if this should be allowed...", $r1);

        $r6[0] = $r7;

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void d(java.lang.String,java.lang.Object[])>($r5, $r6);

        $z0 = $r4 instanceof com.github.paolorotolo.appintro.ISlidePolicy;

        if $z0 == 0 goto label1;

        r8 = (com.github.paolorotolo.appintro.ISlidePolicy) $r4;

        $r5 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "Current fragment implements ISlidePolicy.";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void d(java.lang.String,java.lang.Object[])>($r5, $r1);

        $z0 = interfaceinvoke r8.<com.github.paolorotolo.appintro.ISlidePolicy: boolean isPolicyRespected()>();

        if $z0 != 0 goto label1;

        $r5 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "Slide policy not respected, denying change request.";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void d(java.lang.String,java.lang.Object[])>($r5, $r1);

        return 0;

     label1:
        $r5 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "Change request will be allowed.";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void d(java.lang.String,java.lang.Object[])>($r5, $r1);

        return 1;
    }
    private void handleIllegalSlideChangeAttempt()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.PagerAdapter $r1;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;
        int $i0;
        android.support.v4.app.Fragment $r3;
        boolean $z0;
        com.github.paolorotolo.appintro.ISlidePolicy r4;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $r3 = virtualinvoke $r1.<com.github.paolorotolo.appintro.PagerAdapter: android.support.v4.app.Fragment getItem(int)>($i0);

        if $r3 == null goto label1;

        $z0 = $r3 instanceof com.github.paolorotolo.appintro.ISlidePolicy;

        if $z0 == 0 goto label1;

        r4 = (com.github.paolorotolo.appintro.ISlidePolicy) $r3;

        $z0 = interfaceinvoke r4.<com.github.paolorotolo.appintro.ISlidePolicy: boolean isPolicyRespected()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r4.<com.github.paolorotolo.appintro.ISlidePolicy: void onUserIllegallyRequestedNextPage()>();

     label1:
        return;
    }
    private void handleSlideChanged(android.support.v4.app.Fragment, android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.app.Fragment $r1, $r2;
        boolean $z0;
        com.github.paolorotolo.appintro.ISlideSelectionListener $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: android.support.v4.app.Fragment;

        if $r1 == null goto label1;

        $z0 = $r1 instanceof com.github.paolorotolo.appintro.ISlideSelectionListener;

        if $z0 == 0 goto label1;

        $r3 = (com.github.paolorotolo.appintro.ISlideSelectionListener) $r1;

        interfaceinvoke $r3.<com.github.paolorotolo.appintro.ISlideSelectionListener: void onSlideDeselected()>();

     label1:
        if $r2 == null goto label2;

        $z0 = $r2 instanceof com.github.paolorotolo.appintro.ISlideSelectionListener;

        if $z0 == 0 goto label2;

        $r3 = (com.github.paolorotolo.appintro.ISlideSelectionListener) $r2;

        interfaceinvoke $r3.<com.github.paolorotolo.appintro.ISlideSelectionListener: void onSlideSelected()>();

     label2:
        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onSlideChanged(android.support.v4.app.Fragment,android.support.v4.app.Fragment)>($r1, $r2);

        return;
    }
    private void initController()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.IndicatorController $r1;
        com.github.paolorotolo.appintro.DefaultIndicatorController $r2;
        int $i0;
        android.view.View $r3;
        android.widget.FrameLayout r4;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        if $r1 != null goto label1;

        $r2 = new com.github.paolorotolo.appintro.DefaultIndicatorController;

        specialinvoke $r2.<com.github.paolorotolo.appintro.DefaultIndicatorController: void <init>()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController> = $r2;

     label1:
        $i0 = <com.github.paolorotolo.appintro.R$id: int indicator_container>;

        $r3 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r4 = (android.widget.FrameLayout) $r3;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        $r3 = interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: android.view.View newInstance(android.content.Context)>(r0);

        virtualinvoke r4.<android.widget.FrameLayout: void addView(android.view.View)>($r3);

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int slidesNumber>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void initialize(int)>($i0);

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int selectedIndicatorColor>;

        if $i0 == 1 goto label2;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int selectedIndicatorColor>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void setSelectedIndicatorColor(int)>($i0);

     label2:
        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int unselectedIndicatorColor>;

        if $i0 == 1 goto label3;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int unselectedIndicatorColor>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void setUnselectedIndicatorColor(int)>($i0);

     label3:
        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int currentlySelectedItem>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void selectPosition(int)>($i0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled>;

        if $z0 == 0 goto label4;

        virtualinvoke r4.<android.widget.FrameLayout: void setVisibility(int)>(0);

        return;

     label4:
        virtualinvoke r4.<android.widget.FrameLayout: void setVisibility(int)>(4);

        return;
    }
    public void addSlide(android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.app.Fragment $r1;
        boolean $z0;
        java.util.List $r2;
        int $i0;
        com.github.paolorotolo.appintro.PagerAdapter $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, $r1);

     label1:
        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setOffScreenPageLimit(int)>($i0);

     label2:
        $r3 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        virtualinvoke $r3.<com.github.paolorotolo.appintro.PagerAdapter: void notifyDataSetChanged()>();

        return;

     label3:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label1;
    }
    public void askForPermissions(java.lang.String[], int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        com.github.paolorotolo.appintro.PermissionObject r2;
        android.content.Context $r3;
        android.widget.Toast $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label2;

        if $i0 != 0 goto label1;

        $r3 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.content.Context getBaseContext()>();

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, "Invalid Slide Number", 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return;

     label1:
        r2 = new com.github.paolorotolo.appintro.PermissionObject;

        specialinvoke r2.<com.github.paolorotolo.appintro.PermissionObject: void <init>(java.lang.String[],int)>($r1, $i0);

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.ArrayList permissionsArray>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setSwipeLock(boolean)>(1);

     label2:
        return;
    }
    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.view.MotionEvent $r1;
        boolean $z0;
        android.support.v4.view.GestureDetectorCompat $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.support.v4.view.GestureDetectorCompat gestureDetector>;

        virtualinvoke $r2.<android.support.v4.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)>($r1);

     label1:
        $z0 = specialinvoke r0.<android.support.v7.app.AppCompatActivity: boolean dispatchTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }
    public boolean getBackButtonVisibilityWithDone()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        return z0;
    }
protected abstract int getLayoutId() { 
// no body
} 
    public com.github.paolorotolo.appintro.AppIntroViewPager getPager()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        return r1;
    }
    public java.util.List getSlides()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.util.List $r1;
        com.github.paolorotolo.appintro.PagerAdapter $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        $r1 = virtualinvoke $r2.<com.github.paolorotolo.appintro.PagerAdapter: java.util.List getFragments()>();

        return $r1;
    }
    public boolean getWizardMode()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        return z0;
    }
    public void init(android.os.Bundle)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.os.Bundle $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.os.Bundle;

        return;
    }
    public boolean isPagerIndicatorEnabled()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled>;

        return z0;
    }
    public boolean isProgressButtonEnabled()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled>;

        return z0;
    }
    protected boolean isRtl()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.content.res.Resources getResources()>();

        $z0 = staticinvoke <com.github.paolorotolo.appintro.util.LayoutUtil: boolean isRtl(android.content.res.Resources)>($r1);

        return $z0;
    }
    public boolean isSkipButtonEnabled()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled>;

        return z0;
    }
    public void onBackPressed()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isGoBackLockEnabled>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $z0 = virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean isFirstSlide(int)>($i0);

        if $z0 != 0 goto label1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void goToPreviousSlide()>();

        return;

     label1:
        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onBackPressed()>();

     label2:
        return;
    }
    public boolean onCanRequestNextPage()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 = specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean handleBeforeSlideChanged()>();

        return $z0;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.os.Bundle $r1;
        java.util.List $r2;
        int $i0;
        android.support.v4.view.GestureDetectorCompat $r3;
        com.github.paolorotolo.appintro.AppIntroBase$WindowGestureListener $r4;
        android.view.View $r5;
        android.widget.FrameLayout r6;
        boolean $z0;
        java.lang.Object $r7;
        android.os.Vibrator $r8;
        com.github.paolorotolo.appintro.PagerAdapter $r9;
        android.support.v4.app.FragmentManager $r10;
        com.github.paolorotolo.appintro.AppIntroViewPager $r11;
        com.github.paolorotolo.appintro.AppIntroBase$1 $r12;
        com.github.paolorotolo.appintro.AppIntroBase$2 $r13;
        com.github.paolorotolo.appintro.AppIntroBase$NextButtonOnClickListener $r14;
        com.github.paolorotolo.appintro.AppIntroBase$3 $r15;
        com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener $r16;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean requestWindowFeature(int)>(1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1);

        $i0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: int getLayoutId()>();

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setContentView(int)>($i0);

        $r3 = new android.support.v4.view.GestureDetectorCompat;

        $r4 = new com.github.paolorotolo.appintro.AppIntroBase$WindowGestureListener;

        specialinvoke $r4.<com.github.paolorotolo.appintro.AppIntroBase$WindowGestureListener: void <init>(com.github.paolorotolo.appintro.AppIntroBase,com.github.paolorotolo.appintro.AppIntroBase$1)>(r0, null);

        specialinvoke $r3.<android.support.v4.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>(r0, $r4);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.support.v4.view.GestureDetectorCompat gestureDetector> = $r3;

        $i0 = <com.github.paolorotolo.appintro.R$id: int next>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton> = $r5;

        $i0 = <com.github.paolorotolo.appintro.R$id: int done>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton> = $r5;

        $i0 = <com.github.paolorotolo.appintro.R$id: int skip>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton> = $r5;

        $i0 = <com.github.paolorotolo.appintro.R$id: int back>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton> = $r5;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void checkButton(android.view.View,java.lang.String)>($r5, "next");

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void checkButton(android.view.View,java.lang.String)>($r5, "done");

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void checkButton(android.view.View,java.lang.String)>($r5, "skip");

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void checkButton(android.view.View,java.lang.String)>($r5, "back");

        $i0 = <com.github.paolorotolo.appintro.R$id: int bottomContainer>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r6 = (android.widget.FrameLayout) $r5;

        if r6 == null goto label1;

        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        virtualinvoke r6.<android.widget.FrameLayout: void setLayoutDirection(int)>(1);

     label1:
        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        virtualinvoke $r5.<android.view.View: void setScaleX(float)>(-1.0F);

     label2:
        $r7 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r8 = (android.os.Vibrator) $r7;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: android.os.Vibrator mVibrator> = $r8;

        $r9 = new com.github.paolorotolo.appintro.PagerAdapter;

        $r10 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        specialinvoke $r9.<com.github.paolorotolo.appintro.PagerAdapter: void <init>(android.support.v4.app.FragmentManager,java.util.List)>($r10, $r2);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter> = $r9;

        $i0 = <com.github.paolorotolo.appintro.R$id: int view_pager>;

        $r5 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        $r11 = (com.github.paolorotolo.appintro.AppIntroViewPager) $r5;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager> = $r11;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        if $r5 == null goto label3;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        $r12 = new com.github.paolorotolo.appintro.AppIntroBase$1;

        specialinvoke $r12.<com.github.paolorotolo.appintro.AppIntroBase$1: void <init>(com.github.paolorotolo.appintro.AppIntroBase)>(r0);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r12);

     label3:
        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        if $r5 == null goto label4;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        $r13 = new com.github.paolorotolo.appintro.AppIntroBase$2;

        specialinvoke $r13.<com.github.paolorotolo.appintro.AppIntroBase$2: void <init>(com.github.paolorotolo.appintro.AppIntroBase)>(r0);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r13);

     label4:
        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        if $r5 == null goto label5;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        $r14 = new com.github.paolorotolo.appintro.AppIntroBase$NextButtonOnClickListener;

        specialinvoke $r14.<com.github.paolorotolo.appintro.AppIntroBase$NextButtonOnClickListener: void <init>(com.github.paolorotolo.appintro.AppIntroBase,com.github.paolorotolo.appintro.AppIntroBase$1)>(r0, null);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r14);

     label5:
        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        if $r5 == null goto label6;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        $r15 = new com.github.paolorotolo.appintro.AppIntroBase$3;

        specialinvoke $r15.<com.github.paolorotolo.appintro.AppIntroBase$3: void <init>(com.github.paolorotolo.appintro.AppIntroBase)>(r0);

        virtualinvoke $r5.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r15);

     label6:
        $r11 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r9 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.PagerAdapter mPagerAdapter>;

        virtualinvoke $r11.<com.github.paolorotolo.appintro.AppIntroViewPager: void setAdapter(android.support.v4.view.PagerAdapter)>($r9);

        $r11 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r16 = new com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener;

        specialinvoke $r16.<com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener: void <init>(com.github.paolorotolo.appintro.AppIntroBase)>(r0);

        virtualinvoke $r11.<com.github.paolorotolo.appintro.AppIntroViewPager: void addOnPageChangeListener(com.github.paolorotolo.appintro.AppIntroBase$PagerOnPageChangeListener)>($r16);

        $r11 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        virtualinvoke $r11.<com.github.paolorotolo.appintro.AppIntroViewPager: void setOnNextPageRequestedListener(com.github.paolorotolo.appintro.AppIntroViewPager$OnNextPageRequestedListener)>(r0);

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setScrollDurationFactor(int)>(1);

        return;
    }
    public void onDonePressed()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        return;
    }
    public void onDonePressed(android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.app.Fragment $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onDonePressed()>();

        return;
    }
    public void onIllegallyRequestedNextPage()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void handleIllegalSlideChangeAttempt()>();

        return;
    }
    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        android.view.View $r2;
        android.support.v4.view.ViewPager r3;
        android.support.v4.view.PagerAdapter $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        android.support.v4.app.Fragment $r7;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 == 66 goto label1;

        if $i0 == 96 goto label1;

        if $i0 != 23 goto label4;

     label1:
        $i0 = <com.github.paolorotolo.appintro.R$id: int view_pager>;

        $r2 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View findViewById(int)>($i0);

        r3 = (android.support.v4.view.ViewPager) $r2;

        $i0 = virtualinvoke r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $r4 = virtualinvoke r3.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i1 = virtualinvoke $r4.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label3;

        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i0 = virtualinvoke r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (android.support.v4.app.Fragment) $r6;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onDonePressed(android.support.v4.app.Fragment)>($r7);

     label2:
        return 0;

     label3:
        $i0 = virtualinvoke r3.<android.support.v4.view.ViewPager: int getCurrentItem()>();

        $i0 = $i0 + 1;

        virtualinvoke r3.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        goto label2;

     label4:
        $z0 = specialinvoke r0.<android.support.v7.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }
    public void onNextPressed()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        return;
    }
    protected void onPageSelected(int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        return;
    }
    protected void onPostCreate(android.os.Bundle)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.os.Bundle $r1;
        int $i0, $i1;
        java.util.List $r2;
        boolean $z0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r3;
        com.github.paolorotolo.appintro.AppIntroBase$4 $r4;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onPostCreate(android.os.Bundle)>($r1);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void init(android.os.Bundle)>(null);

     label1:
        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int savedCurrentItem>;

        $i0 = $i1 - $i0;

        virtualinvoke $r3.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

     label2:
        $r3 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r4 = new com.github.paolorotolo.appintro.AppIntroBase$4;

        specialinvoke $r4.<com.github.paolorotolo.appintro.AppIntroBase$4: void <init>(com.github.paolorotolo.appintro.AppIntroBase)>(r0);

        virtualinvoke $r3.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean post(java.lang.Runnable)>($r4);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: java.util.List fragments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int slidesNumber> = $i0;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setProgressButtonEnabled(boolean)>($z0);

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void initController()>();

        return;

     label3:
        $r3 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int savedCurrentItem>;

        virtualinvoke $r3.<com.github.paolorotolo.appintro.AppIntroViewPager: void setCurrentItem(int)>($i0);

        goto label2;
    }
    public void onRequestPermissionsResult(int, java.lang.String[], int[])
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        int[] $r2;
        java.lang.String $r3;
        java.lang.Object[] $r4;
        com.github.paolorotolo.appintro.AppIntroViewPager $r5;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: int[];

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>($i0, $r1, $r2);

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = <com.github.paolorotolo.appintro.AppIntroBase: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "Unexpected request code";

        staticinvoke <com.github.paolorotolo.appintro.util.LogHelper: void e(java.lang.String,java.lang.Object[])>($r3, $r4);

        return;

     label2:
        $r5 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r5.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i0 = $i0 + 1;

        $i1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int slidesNumber>;

        if $i0 != $i1 goto label3;

        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void changeSlide(boolean)>(1);

        return;

     label3:
        specialinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void changeSlide(boolean)>(0);

        return;
    }
    protected void onRestoreInstanceState(android.os.Bundle)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.os.Bundle $r1;
        boolean $z0;
        int $i0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onRestoreInstanceState(android.os.Bundle)>($r1);

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("baseProgressButtonEnabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled> = $z0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("progressButtonEnabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled> = $z0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("skipButtonEnabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled> = $z0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("pagerIndicatorEnabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled> = $z0;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("currentItem");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int savedCurrentItem> = $i0;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("nextEnabled");

        virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPagingEnabled(boolean)>($z0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("nextPagingEnabled");

        virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: void setNextPagingEnabled(boolean)>($z0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("lockPage");

        virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: void setLockPage(int)>($i0);

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("com.github.paolorotolo.appintro_immersive_mode_enabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled> = $z0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("com.github.paolorotolo.appintro_immersive_mode_sticky");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky> = $z0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("com.github.paolorotolo.appintro_color_transitions_enabled");

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean areColorTransitionsEnabled> = $z0;

        return;
    }
    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.os.Bundle $r1;
        boolean $z0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)>($r1);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("baseProgressButtonEnabled", $z0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("progressButtonEnabled", $z0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $z0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean isPagingEnabled()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("nextEnabled", $z0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $z0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: boolean isNextPagingEnabled()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("nextPagingEnabled", $z0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("skipButtonEnabled", $z0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("pagerIndicatorEnabled", $z0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: int getLockPage()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("lockPage", $i0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("currentItem", $i0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("com.github.paolorotolo.appintro_immersive_mode_enabled", $z0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("com.github.paolorotolo.appintro_immersive_mode_sticky", $z0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean areColorTransitionsEnabled>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("com.github.paolorotolo.appintro_color_transitions_enabled", $z0);

        return;
    }
    public void onSkipPressed()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        return;
    }
    public void onSkipPressed(android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.app.Fragment $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onSkipPressed()>();

        return;
    }
    public void onSlideChanged()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        return;
    }
    public void onSlideChanged(android.support.v4.app.Fragment, android.support.v4.app.Fragment)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.app.Fragment $r1, $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: android.support.v4.app.Fragment;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void onSlideChanged()>();

        return;
    }
    public void onWindowFocusChanged(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onWindowFocusChanged(boolean)>($z0);

        if $z0 == 0 goto label1;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setImmersiveMode(boolean,boolean)>(1, $z0);

     label1:
        return;
    }
    public void setBackButtonVisibilityWithDone(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean showBackButtonWithDone> = $z0;

        return;
    }
    protected void setButtonState(android.view.View, boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label1;

        return;

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(0);

        return;

     label2:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(4);

        return;
    }
    public void setColorTransitionsEnabled(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean areColorTransitionsEnabled> = $z0;

        return;
    }
    public void setCustomIndicator(com.github.paolorotolo.appintro.IndicatorController)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.IndicatorController $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: com.github.paolorotolo.appintro.IndicatorController;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController> = $r1;

        return;
    }
    public void setCustomTransformer(android.support.v4.view.ViewPager$PageTransformer)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        android.support.v4.view.ViewPager$PageTransformer $r1;
        com.github.paolorotolo.appintro.AppIntroViewPager $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: android.support.v4.view.ViewPager$PageTransformer;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        virtualinvoke $r2.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r1);

        return;
    }
    public void setDepthAnimation()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        com.github.paolorotolo.appintro.ViewPageTransformer $r2;
        com.github.paolorotolo.appintro.ViewPageTransformer$TransformType $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = new com.github.paolorotolo.appintro.ViewPageTransformer;

        $r3 = <com.github.paolorotolo.appintro.ViewPageTransformer$TransformType: com.github.paolorotolo.appintro.ViewPageTransformer$TransformType DEPTH>;

        specialinvoke $r2.<com.github.paolorotolo.appintro.ViewPageTransformer: void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType)>($r3);

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r2);

        return;
    }
    public void setFadeAnimation()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        com.github.paolorotolo.appintro.ViewPageTransformer $r2;
        com.github.paolorotolo.appintro.ViewPageTransformer$TransformType $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = new com.github.paolorotolo.appintro.ViewPageTransformer;

        $r3 = <com.github.paolorotolo.appintro.ViewPageTransformer$TransformType: com.github.paolorotolo.appintro.ViewPageTransformer$TransformType FADE>;

        specialinvoke $r2.<com.github.paolorotolo.appintro.ViewPageTransformer: void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType)>($r3);

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r2);

        return;
    }
    public void setFlowAnimation()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        com.github.paolorotolo.appintro.ViewPageTransformer $r2;
        com.github.paolorotolo.appintro.ViewPageTransformer$TransformType $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = new com.github.paolorotolo.appintro.ViewPageTransformer;

        $r3 = <com.github.paolorotolo.appintro.ViewPageTransformer$TransformType: com.github.paolorotolo.appintro.ViewPageTransformer$TransformType FLOW>;

        specialinvoke $r2.<com.github.paolorotolo.appintro.ViewPageTransformer: void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType)>($r3);

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r2);

        return;
    }
    public void setGoBackLock(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isGoBackLockEnabled> = $z0;

        return;
    }
    public void setImmersiveMode(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setImmersiveMode(boolean,boolean)>($z0, 0);

        return;
    }
    public void setImmersiveMode(boolean, boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0, $z1, $z2;
        int $i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label4;

        if $z0 != 0 goto label1;

        $z2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled>;

        if $z2 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r2.<android.view.View: void setSystemUiVisibility(int)>(1792);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled> = 0;

        return;

     label1:
        if $z0 == 0 goto label4;

        if $z1 == 0 goto label3;

        $i0 = 1798 | 4096;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky> = 1;

     label2:
        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r2.<android.view.View: void setSystemUiVisibility(int)>($i0);

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeEnabled> = 1;

        return;

     label3:
        $i0 = 1798 | 2048;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isImmersiveModeSticky> = 0;

        goto label2;

     label4:
        return;
    }
    public void setIndicatorColor(int, int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0, $i1;
        com.github.paolorotolo.appintro.IndicatorController $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int selectedIndicatorColor> = $i0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int unselectedIndicatorColor> = $i1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        if $r1 == null goto label2;

        if $i0 == 1 goto label1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void setSelectedIndicatorColor(int)>($i0);

     label1:
        if $i1 == 1 goto label2;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController>;

        interfaceinvoke $r1.<com.github.paolorotolo.appintro.IndicatorController: void setUnselectedIndicatorColor(int)>($i1);

     label2:
        return;
    }
    public void setNavBarColor(int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0, $i1;
        android.view.Window $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, $i0);

        virtualinvoke $r1.<android.view.Window: void setNavigationBarColor(int)>($i0);

     label1:
        return;
    }
    public void setNavBarColor(java.lang.String)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        java.lang.String $r1;
        int $i0;
        android.view.Window $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 := @parameter0: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

        virtualinvoke $r2.<android.view.Window: void setNavigationBarColor(int)>($i0);

     label1:
        return;
    }
    public void setNextPageSwipeLock(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0, $z1, $z2;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        $z1 = 0;

        if $z0 == 0 goto label3;

        $z2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled>;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled> = $z2;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setProgressButtonEnabled(boolean)>(0);

     label1:
        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        if $z0 != 0 goto label2;

        $z1 = 1;

     label2:
        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setNextPagingEnabled(boolean)>($z1);

        return;

     label3:
        $z2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setProgressButtonEnabled(boolean)>($z2);

        goto label1;
    }
    public void setOffScreenPageLimit(int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setOffscreenPageLimit(int)>($i0);

        return;
    }
    public void setProgressButtonEnabled(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        int $i0, $i1;
        android.view.View $r2;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled> = $z0;

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        $i1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: int slidesNumber>;

        $i1 = $i1 + -1;

        if $i0 == $i1 goto label2;

     label1:
        $z0 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isRtl()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        if $i0 != 0 goto label4;

     label2:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 1);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean showBackButtonWithDone>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, $z0);

        return;

     label3:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        return;

     label4:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 1);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        if $z0 == 0 goto label6;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $i0 = virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: int getCurrentItem()>();

        if $i0 != 0 goto label5;

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        return;

     label5:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, $z0);

        return;

     label6:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        $z0 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, $z0);

        return;

     label7:
        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View nextButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View doneButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View backButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        $r2 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r2, 0);

        return;
    }
    public void setProgressIndicator()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.ProgressIndicatorController $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = new com.github.paolorotolo.appintro.ProgressIndicatorController;

        specialinvoke $r1.<com.github.paolorotolo.appintro.ProgressIndicatorController: void <init>()>();

        r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.IndicatorController mController> = $r1;

        return;
    }
    protected void setScrollDurationFactor(int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        double $d0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $d0 = (double) $i0;

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setScrollDurationFactor(double)>($d0);

        return;
    }
    public void setSlideOverAnimation()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        com.github.paolorotolo.appintro.ViewPageTransformer $r2;
        com.github.paolorotolo.appintro.ViewPageTransformer$TransformType $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = new com.github.paolorotolo.appintro.ViewPageTransformer;

        $r3 = <com.github.paolorotolo.appintro.ViewPageTransformer$TransformType: com.github.paolorotolo.appintro.ViewPageTransformer$TransformType SLIDE_OVER>;

        specialinvoke $r2.<com.github.paolorotolo.appintro.ViewPageTransformer: void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType)>($r3);

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r2);

        return;
    }
    public void setSwipeLock(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0, $z1;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean progressButtonEnabled>;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled> = $z1;

     label1:
        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        if $z0 != 0 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPagingEnabled(boolean)>($z0);

        return;

     label3:
        $z1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean baseProgressButtonEnabled>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setProgressButtonEnabled(boolean)>($z1);

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }
    public void setVibrate(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isVibrateOn> = $z0;

        return;
    }
    public void setVibrateIntensity(int)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        int $i0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $i0 := @parameter0: int;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: int vibrateIntensity> = $i0;

        return;
    }
    public void setWizardMode(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0, $z1;
        android.view.View $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        $z1 = 0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean isWizardMode> = $z0;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled> = 0;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        if $z0 != 0 goto label1;

        $z1 = 1;

     label1:
        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r1, $z1);

        return;
    }
    public void setZoomAnimation()
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        com.github.paolorotolo.appintro.AppIntroViewPager $r1;
        com.github.paolorotolo.appintro.ViewPageTransformer $r2;
        com.github.paolorotolo.appintro.ViewPageTransformer$TransformType $r3;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: com.github.paolorotolo.appintro.AppIntroViewPager pager>;

        $r2 = new com.github.paolorotolo.appintro.ViewPageTransformer;

        $r3 = <com.github.paolorotolo.appintro.ViewPageTransformer$TransformType: com.github.paolorotolo.appintro.ViewPageTransformer$TransformType ZOOM>;

        specialinvoke $r2.<com.github.paolorotolo.appintro.ViewPageTransformer: void <init>(com.github.paolorotolo.appintro.ViewPageTransformer$TransformType)>($r3);

        virtualinvoke $r1.<com.github.paolorotolo.appintro.AppIntroViewPager: void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)>(1, $r2);

        return;
    }
    public void showPagerIndicator(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean pagerIndicatorEnabled> = $z0;

        return;
    }
    public void showSkipButton(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.paolorotolo.appintro.AppIntroBase: boolean skipButtonEnabled> = $z0;

        $r1 = r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.View skipButton>;

        virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: void setButtonState(android.view.View,boolean)>($r1, $z0);

        return;
    }
    public void showStatusBar(boolean)
    {
        com.github.paolorotolo.appintro.AppIntroBase r0;
        boolean $z0;
        android.view.Window $r1;

        r0 := @this: com.github.paolorotolo.appintro.AppIntroBase;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFlags(int,int)>(1024, 1024);

        return;

     label1:
        $r1 = virtualinvoke r0.<com.github.paolorotolo.appintro.AppIntroBase: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void clearFlags(int)>(1024);

        return;
    }
