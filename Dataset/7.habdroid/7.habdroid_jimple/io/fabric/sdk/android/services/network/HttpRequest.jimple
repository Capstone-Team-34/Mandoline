io.fabric.sdk.android.services.network.HttpRequest extends java.lang.Object
private static final java.lang.String BOUNDARY
public static final java.lang.String CHARSET_UTF8
private static io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY
public static final java.lang.String CONTENT_TYPE_FORM
public static final java.lang.String CONTENT_TYPE_JSON
private static final java.lang.String CONTENT_TYPE_MULTIPART
private static final java.lang.String CRLF
private static final java.lang.String[] EMPTY_STRINGS
public static final java.lang.String ENCODING_GZIP
public static final java.lang.String HEADER_ACCEPT
public static final java.lang.String HEADER_ACCEPT_CHARSET
public static final java.lang.String HEADER_ACCEPT_ENCODING
public static final java.lang.String HEADER_AUTHORIZATION
public static final java.lang.String HEADER_CACHE_CONTROL
public static final java.lang.String HEADER_CONTENT_ENCODING
public static final java.lang.String HEADER_CONTENT_LENGTH
public static final java.lang.String HEADER_CONTENT_TYPE
public static final java.lang.String HEADER_DATE
public static final java.lang.String HEADER_ETAG
public static final java.lang.String HEADER_EXPIRES
public static final java.lang.String HEADER_IF_NONE_MATCH
public static final java.lang.String HEADER_LAST_MODIFIED
public static final java.lang.String HEADER_LOCATION
public static final java.lang.String HEADER_PROXY_AUTHORIZATION
public static final java.lang.String HEADER_REFERER
public static final java.lang.String HEADER_SERVER
public static final java.lang.String HEADER_USER_AGENT
public static final java.lang.String METHOD_DELETE
public static final java.lang.String METHOD_GET
public static final java.lang.String METHOD_HEAD
public static final java.lang.String METHOD_OPTIONS
public static final java.lang.String METHOD_POST
public static final java.lang.String METHOD_PUT
public static final java.lang.String METHOD_TRACE
public static final java.lang.String PARAM_CHARSET
private int bufferSize
private java.net.HttpURLConnection connection
private boolean form
private java.lang.String httpProxyHost
private int httpProxyPort
private boolean ignoreCloseExceptions
private boolean multipart
private io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output
private final java.lang.String requestMethod
private boolean uncompress
public final java.net.URL url
    static void <clinit>()
    {
        java.lang.String[] $r0;
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r1;

        $r0 = newarray (java.lang.String)[0];

        <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS> = $r0;

        $r1 = <io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory DEFAULT>;

        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r1;

        return;
    }
    public void <init>(java.lang.CharSequence, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2, $r4;
        java.net.MalformedURLException r3;
        java.net.URL $r5;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r6;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = null;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = 1;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = 0;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = 8192;

        $r5 = new java.net.URL;

     label1:
        $r4 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r4);

     label2:
        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url> = $r5;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod> = $r2;

        return;

     label3:
        r3 := @caughtexception;

        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r3);

        throw $r6;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }
    public void <init>(java.net.URL, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.URL $r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = null;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = 1;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = 0;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = 8192;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url> = $r1;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod> = $r2;

        return;
    }
    static java.lang.String access$000(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r0);

        return $r0;
    }
    static int access$100(io.fabric.sdk.android.services.network.HttpRequest)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int i0;

        $r0 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest;

        i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        return i0;
    }
    private static java.lang.StringBuilder addParamPrefix(java.lang.String, java.lang.StringBuilder)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.StringBuilder;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(63);

        i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i0 = i0 + -1;

        if $i1 != -1 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        return $r1;

     label1:
        if $i1 >= i0 goto label2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        if $c2 == 38 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label2:
        return $r1;
    }
    private static java.lang.StringBuilder addPathSeparator(java.lang.String, java.lang.StringBuilder)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i0 = $i0 + 2;

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 != $i1 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label1:
        return $r1;
    }
    public static java.lang.String append(java.lang.CharSequence, java.util.Map)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        java.lang.StringBuilder r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.util.Map$Entry r7;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

        if r1 == null goto label4;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addPathSeparator(java.lang.String,java.lang.StringBuilder)>($r3, r2);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addParamPrefix(java.lang.String,java.lang.StringBuilder)>($r3, r2);

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r6 == null goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r6 == null goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r3;
    }
    public static transient java.lang.String append(java.lang.CharSequence, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        java.lang.Object[] $r1;
        java.lang.StringBuilder r2;
        java.lang.String $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.Object[];

        $r3 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

        if $r1 == null goto label7;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return $r3;

     label1:
        $i0 = lengthof $r1;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify an even number of parameter names/values");

        throw $r4;

     label2:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addPathSeparator(java.lang.String,java.lang.StringBuilder)>($r3, r2);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addParamPrefix(java.lang.String,java.lang.StringBuilder)>($r3, r2);

        $r5 = $r1[0];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r5 = $r1[1];

        if $r5 == null goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label3:
        $i0 = 2;

     label4:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r5 = $r1[$i0];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i1 = $i0 + 1;

        $r5 = $r1[$i1];

        if $r5 == null goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label5:
        $i0 = $i0 + 2;

        goto label4;

     label6:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return $r3;
    }
    private java.net.HttpURLConnection createConnection()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        java.lang.String $r2;
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r3;
        java.net.URL $r4;
        java.net.Proxy $r5;
        java.net.HttpURLConnection $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost>;

        if $r2 == null goto label5;

        $r3 = <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY>;

        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url>;

     label1:
        $r5 = specialinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.Proxy createProxy()>();

        $r6 = interfaceinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: java.net.HttpURLConnection create(java.net.URL,java.net.Proxy)>($r4, $r5);

     label2:
        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod>;

     label3:
        virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r2);

     label4:
        return $r6;

     label5:
        $r3 = <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY>;

        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url>;

     label6:
        $r6 = interfaceinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: java.net.HttpURLConnection create(java.net.URL)>($r4);

     label7:
        goto label2;

     label8:
        r1 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
    private java.net.Proxy createProxy()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.Proxy $r1;
        java.net.Proxy$Type $r2;
        java.net.InetSocketAddress $r3;
        java.lang.String $r4;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.net.Proxy;

        $r2 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r3 = new java.net.InetSocketAddress;

        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost>;

        $i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int httpProxyPort>;

        specialinvoke $r3.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r4, $i0);

        specialinvoke $r1.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r2, $r3);

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "DELETE");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static transient io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "DELETE");

        return $r1;
    }
    public static java.lang.String encode(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        java.io.IOException r1;
        java.net.URL r2;
        java.lang.String $r3, $r4, $r7, $r8;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.net.URI $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r9;
        java.net.URISyntaxException r10;

        $r0 := @parameter0: java.lang.CharSequence;

        r2 = new java.net.URL;

     label01:
        $r3 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r3);

     label02:
        $r4 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();

        $r3 = $r4;

        $i0 = virtualinvoke r2.<java.net.URL: int getPort()>();

        if $i0 == -1 goto label03;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r6 = new java.net.URI;

     label04:
        $r4 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();

        $r7 = virtualinvoke r2.<java.net.URL: java.lang.String getPath()>();

        $r8 = virtualinvoke r2.<java.net.URL: java.lang.String getQuery()>();

        specialinvoke $r6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r7, $r8, null);

        $r3 = virtualinvoke $r6.<java.net.URI: java.lang.String toASCIIString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(63);

     label05:
        if $i0 <= 0 goto label16;

        $i1 = $i0 + 1;

     label06:
        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

     label07:
        if $i1 >= $i2 goto label16;

        $r5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label09:
        $i1 = $i0 + 1;

     label10:
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label11:
        $i0 = $i0 + 1;

     label12:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%2B");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        return $r3;

     label14:
        r1 := @caughtexception;

        $r9 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r9;

     label15:
        r10 := @caughtexception;

        r1 = new java.io.IOException;

        specialinvoke r1.<java.io.IOException: void <init>(java.lang.String)>("Parsing URI failed");

        virtualinvoke r1.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r10);

        $r9 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r9;

     label16:
        return $r3;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.net.URISyntaxException from label04 to label05 with label15;
        catch java.net.URISyntaxException from label06 to label07 with label15;
        catch java.net.URISyntaxException from label08 to label09 with label15;
        catch java.net.URISyntaxException from label10 to label11 with label15;
        catch java.net.URISyntaxException from label12 to label13 with label15;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "GET");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static transient io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest get(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "GET");

        return $r1;
    }
    private static java.lang.String getValidCharset(java.lang.String)
    {
        int $i0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return r0;

     label1:
        return "UTF-8";
    }
    public static io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "HEAD");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static transient io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest head(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "HEAD");

        return $r1;
    }
    public static void keepAlive(boolean)
    {
        boolean $z0;
        java.lang.String $r0;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", $r0);

        return;
    }
    public static transient void nonProxyHosts(java.lang.String[])
    {
        java.lang.String[] $r0;
        int i0, i1;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.String[];

        if $r0 == null goto label3;

        i0 = lengthof $r0;

        if i0 <= 0 goto label3;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        i0 = lengthof $r0;

        i0 = i0 + -1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = $r0[i1];

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = $r0[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.nonProxyHosts", $r2);

        return;

     label3:
        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.nonProxyHosts", null);

        return;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest options(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "OPTIONS");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest options(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "OPTIONS");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "POST");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static transient io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest post(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "POST");

        return $r1;
    }
    public static void proxyHost(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.proxyHost", $r0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("https.proxyHost", $r0);

        return;
    }
    public static void proxyPort(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.proxyPort", $r0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("https.proxyPort", $r0);

        return;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "PUT");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map r1;
        boolean $z0;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static transient io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        r3 = $r2;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence)>(r3);

        return $r4;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest put(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "PUT");

        return $r1;
    }
    public static void setConnectionFactory(io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory)
    {
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r0;

        $r0 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory;

        if $r0 != null goto label1;

        $r0 = <io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory DEFAULT>;

        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r0;

        return;

     label1:
        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r0;

        return;
    }
    private static java.lang.String setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Object $r2;
        java.security.PrivilegedAction r3;
        io.fabric.sdk.android.services.network.HttpRequest$1 $r4;
        io.fabric.sdk.android.services.network.HttpRequest$2 $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$1;

        r3 = $r4;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$1: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

     label1:
        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r3);

        $r0 = (java.lang.String) $r2;

        return $r0;

     label2:
        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$2;

        r3 = $r5;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$2: void <init>(java.lang.String)>($r0);

        goto label1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest trace(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "TRACE");

        return $r1;
    }
    public static io.fabric.sdk.android.services.network.HttpRequest trace(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "TRACE");

        return $r1;
    }
    public io.fabric.sdk.android.services.network.HttpRequest accept(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest acceptCharset(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept-Charset", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest acceptEncoding(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept-Encoding", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest acceptGzipEncoding()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest acceptEncoding(java.lang.String)>("gzip");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest acceptJson()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest accept(java.lang.String)>("application/json");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest authorization(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Authorization", $r1);

        return r0;
    }
    public boolean badRequest() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 400 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest basic(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3, $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encode(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest authorization(java.lang.String)>($r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest body(java.util.concurrent.atomic.AtomicReference) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.concurrent.atomic.AtomicReference r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body()>();

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest body(java.util.concurrent.atomic.AtomicReference, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.concurrent.atomic.AtomicReference r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>($r2);

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2);

        return r0;
    }
    public java.lang.String body() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String body(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.IOException r2;
        java.io.ByteArrayOutputStream $r3;
        java.io.BufferedInputStream $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.ByteArrayOutputStream byteStream()>();

     label1:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r4, $r3);

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.io.BufferedInputStream buffer() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.BufferedInputStream $r1;
        int $i0;
        java.io.InputStream $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.io.BufferedInputStream;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>();

        $i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r2, $i0);

        return $r1;
    }
    public int bufferSize()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        return i0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest bufferSize(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Size must be greater than zero");

        throw $r1;

     label1:
        r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = $i0;

        return r0;
    }
    public java.io.BufferedReader bufferedReader() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.BufferedReader $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader(java.lang.String)>($r1);

        return $r2;
    }
    public java.io.BufferedReader bufferedReader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.BufferedReader $r2;
        int $i0;
        java.io.InputStreamReader $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.BufferedReader;

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStreamReader reader(java.lang.String)>($r1);

        $i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, $i0);

        return $r2;
    }
    protected java.io.ByteArrayOutputStream byteStream()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int contentLength()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        return $r1;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        return $r1;
    }
    public byte[] bytes() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.BufferedInputStream $r3;
        byte[] $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.ByteArrayOutputStream byteStream()>();

     label1:
        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r3, $r2);

     label2:
        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.lang.String cacheControl()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Cache-Control");

        return $r1;
    }
    public java.lang.String charset()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String parameter(java.lang.String,java.lang.String)>("Content-Type", "charset");

        return $r1;
    }
    public io.fabric.sdk.android.services.network.HttpRequest chunk(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>($i0);

        return r0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest closeOutput() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r1;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart>;

        if $z0 == 0 goto label2;

        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("\r\n--00content0boundary00--\r\n");

     label2:
        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        if $z0 == 0 goto label5;

        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void close()>();

     label4:
        r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output> = null;

        return r0;

     label5:
        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void close()>();

        goto label4;

     label6:
        $r2 := @caughtexception;

        goto label4;

        catch java.io.IOException from label3 to label4 with label6;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

     label2:
        return r0;

     label3:
        r1 := @caughtexception;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public int code() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        java.net.HttpURLConnection $r2;
        int $i0;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>();

     label2:
        return $i0;

     label3:
        r1 := @caughtexception;

        $r3 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest code(java.util.concurrent.atomic.AtomicInteger) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        return r0;
    }
    public java.lang.String contentEncoding()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Content-Encoding");

        return $r1;
    }
    public int contentLength()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String)>("Content-Length");

        return $i0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest contentLength(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest contentLength(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentLength(int)>($i0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String,java.lang.String)>($r1, null);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;
        int $i0;
        java.lang.StringBuilder $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Content-Type", $r1);

        return r0;

     label1:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Content-Type", $r1);

        return r0;
    }
    public java.lang.String contentType()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Content-Type");

        return $r1;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.fabric.sdk.android.services.network.HttpRequest$6 $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$6;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>(r0, $r1, $z0, $r1, $r2);

        $r3 = virtualinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$6: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r3;

        return r0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.Reader $r1;
        java.io.Writer $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.fabric.sdk.android.services.network.HttpRequest$7 $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.io.Writer;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$7;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$7: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.Reader,java.io.Writer)>(r0, $r1, $z0, $r1, $r2);

        $r3 = virtualinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$7: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r3;

        return r0;
    }
    public boolean created() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 201 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public long date()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        long $l0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Date");

        return $l0;
    }
    public long dateHeader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $l0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String,long)>($r1, -1L);

        return $l0;
    }
    public long dateHeader(java.lang.String, long) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        long $l0;
        java.net.HttpURLConnection $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $l0 = virtualinvoke $r2.<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>($r1, $l0);

        return $l0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest disconnect()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        return r0;
    }
    public java.lang.String eTag()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("ETag");

        return $r1;
    }
    public long expires()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        long $l0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Expires");

        return $l0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest followRedirects(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        boolean $z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object, java.lang.Object) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.Object $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object,java.lang.Object,java.lang.String)>($r1, $r2, "UTF-8");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object, java.lang.Object, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.Object $r1, $r2;
        java.io.IOException r3;
        java.lang.String $r4, $r6;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r5;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r4 := @parameter2: java.lang.String;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean form>;

        if $z0 != 0 goto label13;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label02;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String,java.lang.String)>("application/x-www-form-urlencoded", $r4);

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean form> = 1;

     label02:
        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r4);

     label03:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label04:
        if $z0 != 0 goto label06;

        $r5 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label05:
        virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void write(int)>(38);

     label06:
        $r5 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label07:
        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, $r4);

        virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r6);

     label08:
        $r5 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label09:
        virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void write(int)>(61);

     label10:
        if $r2 == null goto label15;

        $r5 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label11:
        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, $r4);

        virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r4);

     label12:
        return r0;

     label13:
        $z0 = 0;

        goto label01;

     label14:
        r3 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r3);

        throw $r7;

     label15:
        return r0;

        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label14;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map$Entry r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map$Entry;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry,java.lang.String)>(r1, "UTF-8");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map$Entry r1;
        java.lang.String $r2;
        java.lang.Object $r3, $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object,java.lang.Object,java.lang.String)>($r3, $r4, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map,java.lang.String)>(r1, "UTF-8");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map r1;
        java.lang.String $r2;
        boolean $z0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry r6;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry,java.lang.String)>(r6, $r2);

        goto label1;

     label2:
        return r0;
    }
    public java.net.HttpURLConnection getConnection()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>();

        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = $r1;

     label1:
        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

        return $r1;
    }
    protected java.lang.String getParam(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, i2, $i3;
        boolean $z0;
        char $c4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(59);

        i2 = $i1 + 1;

        if i2 == 0 goto label3;

        if i2 != $i0 goto label4;

     label3:
        return null;

     label4:
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, i2);

        $i1 = $i3;

        if $i3 != -1 goto label5;

        $i1 = $i0;

     label5:
        if i2 >= $i1 goto label7;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(61, i2);

        if $i3 == -1 goto label6;

        if $i3 >= $i1 goto label6;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        i2 = $i3 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i2, $i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i2 == 0 goto label6;

        if i2 <= 2 goto label8;

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        if 34 != $c4 goto label8;

        $i0 = i2 + -1;

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i0);

        if 34 != $c4 goto label8;

        $i0 = i2 + -1;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        return $r1;

     label6:
        i2 = $i1 + 1;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, i2);

        $i1 = $i3;

        if $i3 != -1 goto label5;

        $i1 = $i0;

        goto label5;

     label7:
        return null;

     label8:
        return $r3;
    }
    protected java.util.Map getParams(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        java.util.Map $r2;
        java.util.LinkedHashMap r3;
        char $c4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r2;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(59);

        $i0 = $i2 + 1;

        if $i0 == 0 goto label3;

        if $i0 != $i1 goto label4;

     label3:
        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r2;

     label4:
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, $i0);

        $i2 = $i3;

        if $i3 != -1 goto label5;

        $i2 = $i1;

     label5:
        r3 = new java.util.LinkedHashMap;

        specialinvoke r3.<java.util.LinkedHashMap: void <init>()>();

     label6:
        if $i0 >= $i2 goto label9;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(61, $i0);

        if $i3 == -1 goto label7;

        if $i3 >= $i2 goto label7;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $i0 = $i3 + 1;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label7;

        if $i0 <= 2 goto label8;

        $c4 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(0);

        if 34 != $c4 goto label8;

        $i3 = $i0 + -1;

        $c4 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i3);

        if 34 != $c4 goto label8;

        $i0 = $i0 + -1;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label7:
        $i0 = $i2 + 1;

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, $i0);

        $i2 = $i3;

        if $i3 != -1 goto label6;

        $i2 = $i1;

        goto label6;

     label8:
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label7;

     label9:
        return r3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String, java.lang.Number)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r3;
        java.lang.Number $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Number;

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label1:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>($r1, $r3);

        return r0;

     label2:
        $r3 = null;

        goto label1;
    }
    public io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest header(java.util.Map$Entry)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r2;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>($r3, $r4);

        return r0;
    }
    public java.lang.String header(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.net.HttpURLConnection $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1);

        return $r1;
    }
    public io.fabric.sdk.android.services.network.HttpRequest headers(java.util.Map)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.util.Map r1;
        boolean $z0;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.Map$Entry r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        r1 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.util.Map$Entry)>(r5);

        goto label1;

     label2:
        return r0;
    }
    public java.util.Map headers() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.HttpURLConnection $r1;
        java.util.Map $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        return $r2;
    }
    public java.lang.String[] headers(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.util.Map $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.List r4;
        int $i0;
        java.lang.String[] $r5;
        java.lang.Object[] $r6;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.util.Map headers()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS>;

        return $r5;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label3;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r6;

        return $r5;

     label3:
        $r5 = <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS>;

        return $r5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest ifModifiedSince(long)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        long $l0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setIfModifiedSince(long)>($l0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest ifNoneMatch(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("If-None-Match", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest ignoreCloseExceptions(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = $z0;

        return r0;
    }
    public boolean ignoreCloseExceptions()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        boolean z0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        return z0;
    }
    public int intHeader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>($r1, -1);

        return $i0;
    }
    public int intHeader(java.lang.String, int) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        int $i0;
        java.net.HttpURLConnection $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0);

        return $i0;
    }
    public boolean isBodyEmpty() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int contentLength()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public long lastModified()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        long $l0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Last-Modified");

        return $l0;
    }
    public java.lang.String location()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Location");

        return $r1;
    }
    public java.lang.String message() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        java.net.HttpURLConnection $r2;
        java.lang.String $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.lang.String method()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        return $r2;
    }
    public boolean notFound() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 404 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean notModified() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 304 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean ok() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 200 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest openOutput() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r1;
        java.net.HttpURLConnection $r2;
        java.lang.String $r3;
        java.io.OutputStream $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        if $r1 == null goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type");

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getParam(java.lang.String,java.lang.String)>($r3, "charset");

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void <init>(java.io.OutputStream,java.lang.String,int)>($r4, $r3, $i0);

        r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output> = $r1;

        return r0;
    }
    public java.lang.String parameter(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getParam(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }
    public java.util.Map parameters(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.util.Map $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.util.Map getParams(java.lang.String)>($r1);

        return $r2;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.File $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.io.File)>($r1, null, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.InputStream $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r1, null, null, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.Number) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.lang.Number $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Number;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.Number)>($r1, null, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String)>($r1, null, $r2);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;
        java.io.File $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.File;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.File)>($r1, $r2, null, $r3);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.Number) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.Number $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Number;

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

     label1:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r4);

        return r0;

     label2:
        $r4 = null;

        goto label1;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, null, $r3);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3;
        java.io.File $r4;
        java.io.BufferedInputStream r5, r6;
        java.io.FileInputStream $r7;
        java.io.IOException r8, $r11, $r12;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r9;
        java.lang.Throwable $r10;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.File;

        r6 = null;

     label01:
        r5 = new java.io.BufferedInputStream;

        $r7 = new java.io.FileInputStream;

     label02:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        specialinvoke r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

     label03:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r1, $r2, $r3, r5);

     label04:
        if r5 == null goto label17;

     label05:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label06:
        return r0;

     label07:
        r8 := @caughtexception;

     label08:
        $r9 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r8);

        throw $r9;

     label09:
        $r10 := @caughtexception;

     label10:
        if r6 == null goto label12;

     label11:
        virtualinvoke r6.<java.io.InputStream: void close()>();

     label12:
        throw $r10;

     label13:
        $r11 := @caughtexception;

        return r0;

     label14:
        $r12 := @caughtexception;

        goto label12;

     label15:
        $r10 := @caughtexception;

        r6 = r5;

        goto label10;

     label16:
        r8 := @caughtexception;

        r6 = r5;

        goto label08;

     label17:
        return r0;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.io.IOException from label11 to label12 with label14;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3;
        java.io.InputStream $r4;
        java.io.IOException r5;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.InputStream;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest startPart()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        $r6 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r4, $r6);

     label4:
        return r0;

     label5:
        r5 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r5);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.io.IOException r5;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest startPart()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        $r6 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r4);

     label4:
        return r0;

     label5:
        r5 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r5);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>($r1);

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>(": ");

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>($r2);

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>("\r\n");

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest proxyAuthorization(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Proxy-Authorization", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest proxyBasic(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3, $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encode(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest proxyAuthorization(java.lang.String)>($r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest readTimeout(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        return r0;
    }
    public java.io.InputStreamReader reader() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.InputStreamReader $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStreamReader reader(java.lang.String)>($r1);

        return $r2;
    }
    public java.io.InputStreamReader reader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        java.io.UnsupportedEncodingException r2;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.io.InputStreamReader;

     label1:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>();

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r1);

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r4, $r1);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.File $r1;
        java.io.FileNotFoundException r2;
        java.io.BufferedOutputStream r3;
        java.lang.Object $r4;
        java.io.FileOutputStream $r5;
        int $i0;
        io.fabric.sdk.android.services.network.HttpRequest$3 $r6;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.File;

        r3 = new java.io.BufferedOutputStream;

        $r5 = new java.io.FileOutputStream;

     label1:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

     label2:
        $i0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

     label3:
        specialinvoke r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r5, $i0);

     label4:
        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$3;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$3: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.OutputStream)>(r0, r3, $z0, r3);

        $r4 = virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$3: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r4;

        return r0;

     label5:
        r2 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r7;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.OutputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.OutputStream $r1;
        java.io.IOException r2;
        java.io.BufferedInputStream $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.OutputStream;

     label1:
        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r3, $r1);

     label2:
        return r0;

     label3:
        r2 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.PrintStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.PrintStream $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.PrintStream;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest receive(java.io.OutputStream)>($r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.Writer) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.Writer $r1;
        boolean $z0;
        java.io.BufferedReader $r2;
        io.fabric.sdk.android.services.network.HttpRequest$5 $r3;
        java.lang.Object $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.Writer;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader()>();

        $r3 = new io.fabric.sdk.android.services.network.HttpRequest$5;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$5: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.BufferedReader,java.io.Writer)>(r0, $r2, $z0, $r2, $r1);

        $r4 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$5: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r4;

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest receive(java.lang.Appendable) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.Appendable $r1;
        boolean $z0;
        java.io.BufferedReader $r2;
        io.fabric.sdk.android.services.network.HttpRequest$4 $r3;
        java.lang.Object $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.Appendable;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader()>();

        $r3 = new io.fabric.sdk.android.services.network.HttpRequest$4;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$4: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.BufferedReader,java.lang.Appendable)>(r0, $r2, $z0, $r2, $r1);

        $r4 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$4: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r4;

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest referer(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Referer", $r1);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.File $r1;
        java.io.FileNotFoundException r2;
        java.io.BufferedInputStream r3;
        java.io.FileInputStream $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.File;

        r3 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

     label1:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

     label2:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream)>(r3);

        return r0;

     label3:
        r2 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r5;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.InputStream $r1;
        java.io.IOException r2;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r3 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r1, $r3);

     label4:
        return r0;

     label5:
        r2 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.Reader) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.Reader $r1;
        java.io.IOException r2;
        java.io.OutputStreamWriter r3;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r4, $r5;
        java.nio.charset.CharsetEncoder $r6;
        java.nio.charset.Charset $r7;
        io.fabric.sdk.android.services.network.HttpRequest$8 $r8;
        java.lang.Object $r9;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r10;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.Reader;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        r3 = new java.io.OutputStreamWriter;

        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r5 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r6 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: java.nio.charset.CharsetEncoder access$200(io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream)>($r5);

        $r7 = virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();

        specialinvoke r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r4, $r7);

        $r8 = new io.fabric.sdk.android.services.network.HttpRequest$8;

        specialinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest$8: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Flushable,java.io.Reader,java.io.Writer)>(r0, r3, $r1, r3);

        $r9 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest$8: java.lang.Object call()>();

        r0 = (io.fabric.sdk.android.services.network.HttpRequest) $r9;

        return r0;

     label3:
        r2 := @caughtexception;

        $r10 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r10.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.CharSequence $r1;
        java.io.IOException r2;
        java.lang.String $r3;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.CharSequence;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        $r3 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r3);

     label4:
        return r0;

     label5:
        r2 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public io.fabric.sdk.android.services.network.HttpRequest send(byte[]) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream)>($r2);

        return r0;
    }
    public java.lang.String server()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Server");

        return $r1;
    }
    public boolean serverError() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 500 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest startPart() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0, $r1;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart>;

        if $z0 != 0 goto label1;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart> = 1;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String)>("multipart/form-data; boundary=00content0boundary00");

        virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("--00content0boundary00\r\n");

        return r0;

     label1:
        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("\r\n--00content0boundary00\r\n");

        return r0;
    }
    public java.io.InputStream stream() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        int $i0;
        java.net.HttpURLConnection $r1;
        java.io.InputStream $r2, $r7;
        boolean $z0;
        java.lang.String $r3, $r4;
        java.io.IOException r5, r8, r10;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r6;
        java.util.zip.GZIPInputStream $r9;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if $i0 >= 400 goto label04;

     label01:
        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label02:
        $z0 = r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress>;

        if $z0 == 0 goto label12;

        $r3 = "gzip";

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String contentEncoding()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label08;

        return $r2;

     label03:
        r5 := @caughtexception;

        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r5);

        throw $r6;

     label04:
        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r7 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r2 = $r7;

        if $r7 != null goto label02;

     label05:
        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label06:
        goto label02;

     label07:
        r8 := @caughtexception;

        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r8);

        throw $r6;

     label08:
        $r9 = new java.util.zip.GZIPInputStream;

     label09:
        specialinvoke $r9.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r2);

     label10:
        return $r9;

     label11:
        r10 := @caughtexception;

        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r10);

        throw $r6;

     label12:
        return $r2;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }
    public java.lang.String toString()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.net.URL $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String method()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public io.fabric.sdk.android.services.network.HttpRequest trustAllCerts() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest trustAllHosts()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest uncompress(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = $z0;

        return r0;
    }
    public java.net.URL url()
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.net.HttpURLConnection $r1;
        java.net.URL $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        return $r2;
    }
    public io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        boolean $z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0);

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest useProxy(java.lang.String, int)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;
        int $i0;
        java.net.HttpURLConnection $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The connection has already been created. This method must be called before reading or writing to the request.");

        throw $r3;

     label1:
        r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost> = $r1;

        r0.<io.fabric.sdk.android.services.network.HttpRequest: int httpProxyPort> = $i0;

        return r0;
    }
    public io.fabric.sdk.android.services.network.HttpRequest userAgent(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("User-Agent", $r1);

        return r0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String, java.lang.String) throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, null);

        return r0;
    }
    protected io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder r4, $r5;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("form-data; name=\"");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label1:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String,java.lang.String)>("Content-Disposition", $r1);

        if $r3 == null goto label2;

        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String,java.lang.String)>("Content-Type", $r3);

     label2:
        r0 = virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>("\r\n");

        return r0;
    }
    public java.io.OutputStreamWriter writer() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest r0;
        java.io.IOException r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2, $r4;
        java.io.OutputStreamWriter $r3;
        java.nio.charset.CharsetEncoder $r5;
        java.nio.charset.Charset $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r3 = new java.io.OutputStreamWriter;

        $r2 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r4 = r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        $r5 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: java.nio.charset.CharsetEncoder access$200(io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream)>($r4);

        $r6 = virtualinvoke $r5.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r2, $r6);

     label4:
        return $r3;

     label5:
        r1 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>(r1);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
