io.fabric.sdk.android.services.network.HttpRequest$Base64 extends java.lang.Object
private static final byte EQUALS_SIGN
private static final java.lang.String PREFERRED_ENCODING
private static final byte[] _STANDARD_ALPHABET
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] _STANDARD_ALPHABET> = $r0;

        return;
    }
    private void <init>()
    {
        io.fabric.sdk.android.services.network.HttpRequest$Base64 r0;

        r0 := @this: io.fabric.sdk.android.services.network.HttpRequest$Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String encode(java.lang.String)
    {
        java.lang.String $r0;
        java.io.UnsupportedEncodingException r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        $r0 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encodeBytes(byte[])>($r2);

        return $r0;

     label3:
        r1 := @caughtexception;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        goto label2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
    private static byte[] encode3to4(byte[], int, int, byte[], int)
    {
        byte[] $r0, $r1, r2;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        byte $b4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i2 := @parameter4: int;

        $i3 = 0;

        r2 = <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] _STANDARD_ALPHABET>;

        if $i1 <= 0 goto label5;

        $b4 = $r0[$i0];

        $i5 = $b4 << 24;

        $i5 = $i5 >>> 8;

     label1:
        if $i1 <= 1 goto label6;

        $i6 = $i0 + 1;

        $b4 = $r0[$i6];

        $i6 = $b4 << 24;

        $i6 = $i6 >>> 16;

     label2:
        $i5 = $i6 | $i5;

        if $i1 <= 2 goto label3;

        $i0 = $i0 + 2;

        $b4 = $r0[$i0];

        $i0 = $b4 << 24;

        $i3 = $i0 >>> 24;

     label3:
        $i0 = $i5 | $i3;

        lookupswitch($i1)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 3: goto label7;
            default: goto label4;
        };

     label4:
        return $r1;

     label5:
        $i5 = 0;

        goto label1;

     label6:
        $i6 = 0;

        goto label2;

     label7:
        $i1 = $i0 >>> 18;

        $b4 = r2[$i1];

        $r1[$i2] = $b4;

        $i1 = $i2 + 1;

        $i3 = $i0 >>> 12;

        $i3 = $i3 & 63;

        $b4 = r2[$i3];

        $r1[$i1] = $b4;

        $i1 = $i2 + 2;

        $i3 = $i0 >>> 6;

        $i3 = $i3 & 63;

        $b4 = r2[$i3];

        $r1[$i1] = $b4;

        $i1 = $i2 + 3;

        $i0 = $i0 & 63;

        $b4 = r2[$i0];

        $r1[$i1] = $b4;

        return $r1;

     label8:
        $i1 = $i0 >>> 18;

        $b4 = r2[$i1];

        $r1[$i2] = $b4;

        $i1 = $i2 + 1;

        $i3 = $i0 >>> 12;

        $i3 = $i3 & 63;

        $b4 = r2[$i3];

        $r1[$i1] = $b4;

        $i1 = $i2 + 2;

        $i0 = $i0 >>> 6;

        $i0 = $i0 & 63;

        $b4 = r2[$i0];

        $r1[$i1] = $b4;

        $i0 = $i2 + 3;

        $r1[$i0] = 61;

        return $r1;

     label9:
        $i1 = $i0 >>> 18;

        $b4 = r2[$i1];

        $r1[$i2] = $b4;

        $i1 = $i2 + 1;

        $i0 = $i0 >>> 12;

        $i0 = $i0 & 63;

        $b4 = r2[$i0];

        $r1[$i1] = $b4;

        $i0 = $i2 + 2;

        $r1[$i0] = 61;

        $i0 = $i2 + 3;

        $r1[$i0] = 61;

        return $r1;
    }
    public static java.lang.String encodeBytes(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encodeBytes(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }
    public static java.lang.String encodeBytes(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.io.UnsupportedEncodingException r1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encodeBytesToBytes(byte[],int,int)>($r0, $i0, $i1);

        $r2 = new java.lang.String;

     label1:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "US-ASCII");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r0);

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
    public static byte[] encodeBytesToBytes(byte[], int, int)
    {
        byte[] $r0, r1;
        int $i0, $i1, i2, i3, $i4, $i6;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.Locale $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        byte $b5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot serialize a null array.");

        throw $r2;

     label01:
        if $i0 >= 0 goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have negative offset: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label02:
        if $i1 >= 0 goto label03;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have length offset: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label03:
        i2 = $i0 + $i1;

        $i4 = lengthof $r0;

        if i2 <= $i4 goto label04;

        $r3 = new java.lang.IllegalArgumentException;

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r7 = newarray (java.lang.Object)[3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r8;

        $i0 = lengthof $r0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[2] = $r8;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Cannot have offset of %d and length of %d with array of length %d", $r7);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label04:
        i2 = $i1 / 3;

        i2 = i2 * 4;

        $i4 = $i1 % 3;

        if $i4 <= 0 goto label07;

        $b5 = 4;

     label05:
        i2 = i2 + $b5;

        r1 = newarray (byte)[i2];

        $i4 = 0;

        i2 = 0;

        i3 = $i1 + -2;

     label06:
        if $i4 >= i3 goto label08;

        $i6 = $i4 + $i0;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encode3to4(byte[],int,int,byte[],int)>($r0, $i6, 3, r1, i2);

        $i4 = $i4 + 3;

        i2 = i2 + 4;

        goto label06;

     label07:
        $b5 = 0;

        goto label05;

     label08:
        if $i4 >= $i1 goto label09;

        $i0 = $i4 + $i0;

        $i1 = $i1 - $i4;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encode3to4(byte[],int,int,byte[],int)>($r0, $i0, $i1, r1, i2);

        i2 = i2 + 4;

     label09:
        $i0 = lengthof r1;

        $i0 = $i0 + -1;

        if i2 > $i0 goto label10;

        $r0 = newarray (byte)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r0, 0, i2);

        return $r0;

     label10:
        return r1;
    }
