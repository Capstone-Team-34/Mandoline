io.fabric.sdk.android.services.common.IdManager extends java.lang.Object
private static final java.lang.String BAD_ANDROID_ID
public static final java.lang.String COLLECT_DEVICE_IDENTIFIERS
public static final java.lang.String COLLECT_USER_IDENTIFIERS
public static final java.lang.String DEFAULT_VERSION_NAME
private static final java.lang.String FORWARD_SLASH_REGEX
private static final java.util.regex.Pattern ID_PATTERN
static final java.lang.String PREFKEY_ADVERTISING_ID
private static final java.lang.String PREFKEY_INSTALLATION_UUID
io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo
io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider
private final android.content.Context appContext
private final java.lang.String appIdentifier
private final java.lang.String appInstallIdentifier
private final boolean collectHardwareIds
private final boolean collectUserIds
boolean fetchedAdvertisingInfo
io.fabric.sdk.android.services.common.FirebaseInfo firebaseInfo
private final java.util.concurrent.locks.ReentrantLock installationIdLock
private final io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider
private final java.util.Collection kits
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^\\p{Alnum}]");

        <io.fabric.sdk.android.services.common.IdManager: java.util.regex.Pattern ID_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>("/");

        <io.fabric.sdk.android.services.common.IdManager: java.lang.String FORWARD_SLASH_REGEX> = $r1;

        return;
    }
    public void <init>(android.content.Context, java.lang.String, java.lang.String, java.util.Collection)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3;
        java.util.Collection r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.lang.IllegalArgumentException $r6;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r7;
        io.fabric.sdk.android.services.common.AdvertisingInfoProvider $r8;
        io.fabric.sdk.android.services.common.FirebaseInfo $r9;
        boolean $z0;
        io.fabric.sdk.android.Logger $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock> = $r5;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appContext must not be null");

        throw $r6;

     label1:
        if $r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appIdentifier must not be null");

        throw $r6;

     label2:
        if r4 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("kits must not be null");

        throw $r6;

     label3:
        r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext> = $r1;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appIdentifier> = $r2;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appInstallIdentifier> = $r3;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.util.Collection kits> = r4;

        $r7 = new io.fabric.sdk.android.services.common.InstallerPackageNameProvider;

        specialinvoke $r7.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: void <init>()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider> = $r7;

        $r8 = new io.fabric.sdk.android.services.common.AdvertisingInfoProvider;

        specialinvoke $r8.<io.fabric.sdk.android.services.common.AdvertisingInfoProvider: void <init>(android.content.Context)>($r1);

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider> = $r8;

        $r9 = new io.fabric.sdk.android.services.common.FirebaseInfo;

        specialinvoke $r9.<io.fabric.sdk.android.services.common.FirebaseInfo: void <init>()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.FirebaseInfo firebaseInfo> = $r9;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.CollectDeviceIdentifiers", 1);

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds> = $z0;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 != 0 goto label4;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device ID collection disabled for ");

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label4:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.CollectUserIdentifiers", 1);

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds> = $z0;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds>;

        if $z0 != 0 goto label5;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User information collection disabled for ");

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label5:
        return;
    }
    private void checkAdvertisingIdRotation(android.content.SharedPreferences)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        if $r3 == null goto label1;

        $r2 = $r3.<io.fabric.sdk.android.services.common.AdvertisingInfo: java.lang.String advertisingId>;

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void flushInstallationIdIfNecessary(android.content.SharedPreferences,java.lang.String)>($r1, $r2);

     label1:
        return;
    }
    private java.lang.String createInstallationUUID(android.content.SharedPreferences)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.SharedPreferences $r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.String $r3, r4;
        java.util.UUID $r5;
        android.content.SharedPreferences$Editor $r6;
        java.lang.Throwable $r7;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null);

     label2:
        r4 = $r3;

        if $r3 != null goto label6;

     label3:
        $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r4 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>(r4);

     label4:
        r4 = $r3;

     label5:
        $r6 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("crashlytics.installation.id", $r3);

        interfaceinvoke $r6.<android.content.SharedPreferences$Editor: boolean commit()>();

     label6:
        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r4;

     label7:
        $r7 := @caughtexception;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    private java.lang.Boolean explicitCheckLimitAdTracking()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        if $r1 == null goto label1;

        $z0 = $r1.<io.fabric.sdk.android.services.common.AdvertisingInfo: boolean limitAdTrackingEnabled>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label1:
        return null;
    }
    private void flushInstallationIdIfNecessary(android.content.SharedPreferences, java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, $r4;
        java.util.concurrent.locks.ReentrantLock $r3;
        boolean $z0;
        android.content.SharedPreferences$Editor $r5;
        java.lang.Throwable $r6;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

     label02:
        if $z0 == 0 goto label03;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label03:
        $r4 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.advertising.id", null);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r5 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("crashlytics.advertising.id", $r2);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: boolean commit()>();

     label06:
        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label07:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label08:
        if $z0 != 0 goto label06;

     label09:
        $r5 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("crashlytics.installation.id");

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("crashlytics.advertising.id", $r2);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: boolean commit()>();

     label10:
        goto label06;

     label11:
        $r6 := @caughtexception;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    private java.lang.String formatId(java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        java.util.Locale $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <io.fabric.sdk.android.services.common.IdManager: java.util.regex.Pattern ID_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        return $r1;
    }
    private void putNonNullIdInto(java.util.Map, io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.Map r1;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r2;
        java.lang.String $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label1;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label1:
        return;
    }
    private java.lang.String removeForwardSlashesIn(java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = <io.fabric.sdk.android.services.common.IdManager: java.lang.String FORWARD_SLASH_REGEX>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r2, "");

        return $r1;
    }
    public boolean canCollectUserIds()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean z0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds>;

        return z0;
    }
    public java.lang.String createIdHeaderValue(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        return "";
    }
    public java.lang.String getAdvertisingId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        java.lang.String r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean shouldCollectHardwareIds()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        if $r1 == null goto label1;

        $z0 = $r1.<io.fabric.sdk.android.services.common.AdvertisingInfo: boolean limitAdTrackingEnabled>;

        if $z0 != 0 goto label1;

        r2 = $r1.<io.fabric.sdk.android.services.common.AdvertisingInfo: java.lang.String advertisingId>;

        return r2;

     label1:
        return null;
    }
    io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        boolean $z0;
        io.fabric.sdk.android.services.common.AdvertisingInfoProvider $r2;
        java.lang.Throwable $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        entermonitor r0;

     label1:
        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean fetchedAdvertisingInfo>;

        if $z0 != 0 goto label2;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider>;

        $r1 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1;

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean fetchedAdvertisingInfo> = 1;

     label2:
        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public java.lang.String getAndroidId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, $z1;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5, $r6;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean explicitCheckLimitAdTracking()>();

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        $z1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean shouldCollectHardwareIds()>();

        if $z1 == 0 goto label1;

        if $z0 != 0 goto label1;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "android_id");

        $r6 = "9774d56d682e549c";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r5);

        return $r5;

     label1:
        return null;
    }
    public java.lang.String getAppIdentifier()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appIdentifier>;

        return r1;
    }
    public java.lang.String getAppInstallIdentifier()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appInstallIdentifier>;

        if r1 != null goto label1;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r2);

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void checkAdvertisingIdRotation(android.content.SharedPreferences)>($r3);

        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null);

        if r1 != null goto label1;

        r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>($r3);

     label1:
        return r1;
    }
    public java.lang.String getBluetoothMacAddress()
    {
        io.fabric.sdk.android.services.common.IdManager r0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        return null;
    }
    public java.util.Map getDeviceIdentifiers()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.HashMap r1;
        java.util.Collection $r2;
        java.util.Iterator $r3, $r9;
        boolean $z0;
        java.lang.Object $r4;
        io.fabric.sdk.android.Kit r5;
        io.fabric.sdk.android.services.common.DeviceIdentifierProvider r6;
        java.util.Map $r7;
        java.util.Set $r8;
        java.util.Map$Entry r10;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r11;
        java.lang.String $r12;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.Collection kits>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (io.fabric.sdk.android.Kit) $r4;

        $z0 = r5 instanceof io.fabric.sdk.android.services.common.DeviceIdentifierProvider;

        if $z0 == 0 goto label1;

        r6 = (io.fabric.sdk.android.services.common.DeviceIdentifierProvider) r5;

        $r7 = interfaceinvoke r6.<io.fabric.sdk.android.services.common.DeviceIdentifierProvider: java.util.Map getDeviceIdentifiers()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) $r4;

        $r4 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.String) $r4;

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        goto label2;

     label3:
        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAdvertisingId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r12);

        if $z0 == 0 goto label5;

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_ID>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAndroidId()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

     label4:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        return $r7;

     label5:
        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_ADVERTISING_ID>;

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        goto label4;
    }
    public java.lang.String getInstallerPackageName()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.Context $r1;
        java.lang.String $r2;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider>;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r2 = virtualinvoke $r3.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: java.lang.String getInstallerPackageName(android.content.Context)>($r1);

        return $r2;
    }
    public java.lang.String getModelName()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[0] = $r3;

        $r3 = <android.os.Build: java.lang.String MODEL>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%s/%s", $r2);

        return $r3;
    }
    public java.lang.String getOsBuildVersionString()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String getOsDisplayVersionString()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String getOsVersionString()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getOsDisplayVersionString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getOsBuildVersionString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getSerialNumber()
    {
        io.fabric.sdk.android.services.common.IdManager r0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        return null;
    }
    public java.lang.String getTelephonyId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        return null;
    }
    public java.lang.String getWifiMacAddress()
    {
        io.fabric.sdk.android.services.common.IdManager r0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        return null;
    }
    public java.lang.Boolean isLimitAdTrackingEnabled()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        java.lang.Boolean $r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean shouldCollectHardwareIds()>();

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.Boolean explicitCheckLimitAdTracking()>();

        return $r1;

     label1:
        return null;
    }
    protected boolean shouldCollectHardwareIds()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.Context $r1;
        boolean $z0;
        io.fabric.sdk.android.services.common.FirebaseInfo $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.FirebaseInfo firebaseInfo>;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.FirebaseInfo: boolean isFirebaseCrashlyticsEnabled(android.content.Context)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
