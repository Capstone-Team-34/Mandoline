io.fabric.sdk.android.services.events.QueueFileEventStorage extends java.lang.Object implements io.fabric.sdk.android.services.events.EventsStorage
private final android.content.Context context
private io.fabric.sdk.android.services.common.QueueFile queueFile
private java.io.File targetDirectory
private final java.lang.String targetDirectoryName
private final java.io.File workingDirectory
private final java.io.File workingFile
    public void <init>(android.content.Context, java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        android.content.Context $r1;
        java.io.File $r2, $r5;
        java.lang.String $r3, $r4;
        io.fabric.sdk.android.services.common.QueueFile $r6;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: android.content.Context context> = $r1;

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingDirectory> = $r2;

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.lang.String targetDirectoryName> = $r4;

        $r2 = new java.io.File;

        $r5 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingDirectory>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r3);

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingFile> = $r2;

        $r6 = new io.fabric.sdk.android.services.common.QueueFile;

        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingFile>;

        specialinvoke $r6.<io.fabric.sdk.android.services.common.QueueFile: void <init>(java.io.File)>($r2);

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile> = $r6;

        specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void createTargetDirectory()>();

        return;
    }
    private void createTargetDirectory()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File $r1, $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r3 = new java.io.File;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingDirectory>;

        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.lang.String targetDirectoryName>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r2);

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory> = $r3;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }
    private void move(java.io.File, java.io.File) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File $r1, $r2;
        java.io.FileInputStream r3, r6;
        java.io.OutputStream $r4, r5;
        byte[] $r7;
        java.lang.Throwable $r8;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        r5 = null;

        r6 = null;

     label1:
        r3 = new java.io.FileInputStream;

        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label2:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.OutputStream getMoveOutputStream(java.io.File)>($r2);

     label3:
        r5 = $r4;

     label4:
        $r7 = newarray (byte)[1024];

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void copyStream(java.io.InputStream,java.io.OutputStream,byte[])>(r3, $r4, $r7);

     label5:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r3, "Failed to close file input stream");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r4, "Failed to close output stream");

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;

     label6:
        $r8 := @caughtexception;

     label7:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r6, "Failed to close file input stream");

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r5, "Failed to close output stream");

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        throw $r8;

     label8:
        $r8 := @caughtexception;

        r6 = r3;

        goto label7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
    public void add(byte[]) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        byte[] $r1;
        io.fabric.sdk.android.services.common.QueueFile $r2;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 := @parameter0: byte[];

        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

        virtualinvoke $r2.<io.fabric.sdk.android.services.common.QueueFile: void add(byte[])>($r1);

        return;
    }
    public boolean canWorkingFileStore(int, int)
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        int $i0, $i1;
        boolean $z0;
        io.fabric.sdk.android.services.common.QueueFile $r1;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.QueueFile: boolean hasSpaceFor(int,int)>($i0, $i1);

        return $z0;
    }
    public void deleteFilesInRollOverDirectory(java.util.List)
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.util.List r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.io.File r4;
        android.content.Context $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        r1 := @parameter0: java.util.List;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.io.File) $r3;

        $r5 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: android.content.Context context>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r6[0] = $r7;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("deleting sent analytics file %s", $r6);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlled(android.content.Context,java.lang.String)>($r5, $r7);

        virtualinvoke r4.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        return;
    }
    public void deleteWorkingFile()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        io.fabric.sdk.android.services.common.QueueFile $r1;
        java.io.File $r2;
        java.io.IOException $r3;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

     label1:
        virtualinvoke $r1.<io.fabric.sdk.android.services.common.QueueFile: void close()>();

     label2:
        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingFile>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        return;

     label3:
        $r3 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.util.List getAllFilesInRollOverDirectory()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File $r1;
        java.io.File[] $r2;
        java.util.List $r3;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r3;
    }
    public java.util.List getBatchOfFilesToSend(int)
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList r1;
        java.io.File r2;
        java.io.File[] $r3;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $i0 := @parameter0: int;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        $i1 = lengthof $r3;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        r2 = $r3[$i2];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i3 < $i0 goto label2;

        return r1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return r1;
    }
    public java.io.OutputStream getMoveOutputStream(java.io.File) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File $r1;
        java.io.FileOutputStream $r2;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 := @parameter0: java.io.File;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        return $r2;
    }
    public java.io.File getRollOverDirectory()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File r1;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        return r1;
    }
    public java.io.File getWorkingDirectory()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.io.File r1;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingDirectory>;

        return r1;
    }
    public int getWorkingFileUsedSizeInBytes()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        int $i0;
        io.fabric.sdk.android.services.common.QueueFile $r1;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

        $i0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.QueueFile: int usedBytes()>();

        return $i0;
    }
    public boolean isWorkingFileEmpty()
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        boolean $z0;
        io.fabric.sdk.android.services.common.QueueFile $r1;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.QueueFile: boolean isEmpty()>();

        return $z0;
    }
    public void rollOver(java.lang.String) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.QueueFileEventStorage r0;
        java.lang.String $r1;
        java.io.File $r2, $r4, $r5;
        io.fabric.sdk.android.services.common.QueueFile $r3;

        r0 := @this: io.fabric.sdk.android.services.events.QueueFileEventStorage;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile>;

        virtualinvoke $r3.<io.fabric.sdk.android.services.common.QueueFile: void close()>();

        $r4 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingFile>;

        $r5 = new java.io.File;

        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File targetDirectory>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        specialinvoke r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: void move(java.io.File,java.io.File)>($r4, $r5);

        $r3 = new io.fabric.sdk.android.services.common.QueueFile;

        $r2 = r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: java.io.File workingFile>;

        specialinvoke $r3.<io.fabric.sdk.android.services.common.QueueFile: void <init>(java.io.File)>($r2);

        r0.<io.fabric.sdk.android.services.events.QueueFileEventStorage: io.fabric.sdk.android.services.common.QueueFile queueFile> = $r3;

        return;
    }
