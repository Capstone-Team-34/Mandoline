io.fabric.sdk.android.services.persistence.FileStoreImpl extends java.lang.Object implements io.fabric.sdk.android.services.persistence.FileStore
private final java.lang.String contentPath
private final android.content.Context context
private final java.lang.String legacySupport
    public void <init>(io.fabric.sdk.android.Kit)
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        io.fabric.sdk.android.Kit $r1;
        android.content.Context $r2;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get directory before context has been set. Call Fabric.with() first");

        throw $r3;

     label1:
        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context> = $r2;

        $r4 = virtualinvoke $r1.<io.fabric.sdk.android.Kit: java.lang.String getPath()>();

        r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String contentPath> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Android/");

        $r2 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String legacySupport> = $r4;

        return;
    }
    public java.io.File getCacheDir()
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        android.content.Context $r1;
        java.io.File $r2;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        $r1 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File prepare(java.io.File)>($r2);

        return $r2;
    }
    public java.io.File getExternalCacheDir()
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        java.io.File r1, $r3;
        boolean $z0;
        int $i0;
        android.content.Context $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        r1 = null;

        $z0 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: boolean isExternalStorageAvailable()>();

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label2;

        $r2 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context>;

        r1 = virtualinvoke $r2.<android.content.Context: java.io.File getExternalCacheDir()>();

     label1:
        r1 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File prepare(java.io.File)>(r1);

        return r1;

     label2:
        r1 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String legacySupport>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/cache/");

        $r5 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String contentPath>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        goto label1;
    }
    public java.io.File getExternalFilesDir()
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        java.io.File r1, $r3;
        boolean $z0;
        int $i0;
        android.content.Context $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        r1 = null;

        $z0 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: boolean isExternalStorageAvailable()>();

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label2;

        $r2 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context>;

        r1 = virtualinvoke $r2.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(null);

     label1:
        r1 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File prepare(java.io.File)>(r1);

        return r1;

     label2:
        r1 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String legacySupport>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/files/");

        $r5 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.lang.String contentPath>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        goto label1;
    }
    public java.io.File getFilesDir()
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        android.content.Context $r1;
        java.io.File $r2;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        $r1 = r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File prepare(java.io.File)>($r2);

        return $r2;
    }
    boolean isExternalStorageAvailable()
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        io.fabric.sdk.android.Logger $r3;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r2 = "mounted";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("Fabric", "External Storage is not mounted and/or writable\nHave you declared android.permission.WRITE_EXTERNAL_STORAGE in the manifest?");

        return 0;

     label1:
        return 1;
    }
    java.io.File prepare(java.io.File)
    {
        io.fabric.sdk.android.services.persistence.FileStoreImpl r0;
        java.io.File r1;
        boolean $z0;
        io.fabric.sdk.android.Logger $r2;

        r0 := @this: io.fabric.sdk.android.services.persistence.FileStoreImpl;

        r1 := @parameter0: java.io.File;

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("Fabric", "Couldn\'t create file");

     label2:
        return null;

     label3:
        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Null File");

        goto label2;

     label4:
        return r1;
    }
