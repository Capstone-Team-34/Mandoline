io.fabric.sdk.android.Fabric extends java.lang.Object
static final boolean DEFAULT_DEBUGGABLE
static final io.fabric.sdk.android.Logger DEFAULT_LOGGER
static final java.lang.String ROOT_DIR
public static final java.lang.String TAG
static volatile io.fabric.sdk.android.Fabric singleton
private java.lang.ref.WeakReference activity
private io.fabric.sdk.android.ActivityLifecycleManager activityLifecycleManager
private final android.content.Context context
final boolean debuggable
private final java.util.concurrent.ExecutorService executorService
private final io.fabric.sdk.android.services.common.IdManager idManager
private final io.fabric.sdk.android.InitializationCallback initializationCallback
private java.util.concurrent.atomic.AtomicBoolean initialized
private final io.fabric.sdk.android.InitializationCallback kitInitializationCallback
private final java.util.Map kits
final io.fabric.sdk.android.Logger logger
private final android.os.Handler mainHandler
    static void <clinit>()
    {
        io.fabric.sdk.android.DefaultLogger $r0;

        $r0 = new io.fabric.sdk.android.DefaultLogger;

        specialinvoke $r0.<io.fabric.sdk.android.DefaultLogger: void <init>()>();

        <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger DEFAULT_LOGGER> = $r0;

        return;
    }
    void <init>(android.content.Context, java.util.Map, io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor, android.os.Handler, io.fabric.sdk.android.Logger, boolean, io.fabric.sdk.android.InitializationCallback, io.fabric.sdk.android.services.common.IdManager, android.app.Activity)
    {
        io.fabric.sdk.android.Fabric r0;
        android.content.Context $r1;
        java.util.Map r2;
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor $r3;
        android.os.Handler $r4;
        io.fabric.sdk.android.Logger $r5;
        boolean $z0;
        io.fabric.sdk.android.InitializationCallback $r6;
        io.fabric.sdk.android.services.common.IdManager $r7;
        android.app.Activity $r8;
        java.util.concurrent.atomic.AtomicBoolean $r9;
        int $i0;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor;

        $r4 := @parameter3: android.os.Handler;

        $r5 := @parameter4: io.fabric.sdk.android.Logger;

        $z0 := @parameter5: boolean;

        $r6 := @parameter6: io.fabric.sdk.android.InitializationCallback;

        $r7 := @parameter7: io.fabric.sdk.android.services.common.IdManager;

        $r8 := @parameter8: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.fabric.sdk.android.Fabric: android.content.Context context> = $r1;

        r0.<io.fabric.sdk.android.Fabric: java.util.Map kits> = r2;

        r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService executorService> = $r3;

        r0.<io.fabric.sdk.android.Fabric: android.os.Handler mainHandler> = $r4;

        r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger logger> = $r5;

        r0.<io.fabric.sdk.android.Fabric: boolean debuggable> = $z0;

        r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.InitializationCallback initializationCallback> = $r6;

        $r9 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.atomic.AtomicBoolean initialized> = $r9;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $r6 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.InitializationCallback createKitInitializationCallback(int)>($i0);

        r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.InitializationCallback kitInitializationCallback> = $r6;

        r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.services.common.IdManager idManager> = $r7;

        virtualinvoke r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric setCurrentActivity(android.app.Activity)>($r8);

        return;
    }
    static java.util.Map access$000(java.util.Collection)
    {
        java.util.Collection $r0;
        java.util.Map $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: java.util.Map getKitMap(java.util.Collection)>($r0);

        return $r1;
    }
    static android.app.Activity access$100(android.content.Context)
    {
        android.content.Context $r0;
        android.app.Activity $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: android.app.Activity extractActivity(android.content.Context)>($r0);

        return $r1;
    }
    static java.util.concurrent.atomic.AtomicBoolean access$200(io.fabric.sdk.android.Fabric)
    {
        io.fabric.sdk.android.Fabric $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: io.fabric.sdk.android.Fabric;

        r1 = $r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.atomic.AtomicBoolean initialized>;

        return r1;
    }
    static io.fabric.sdk.android.InitializationCallback access$300(io.fabric.sdk.android.Fabric)
    {
        io.fabric.sdk.android.Fabric $r0;
        io.fabric.sdk.android.InitializationCallback r1;

        $r0 := @parameter0: io.fabric.sdk.android.Fabric;

        r1 = $r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        return r1;
    }
    private static void addToKitMap(java.util.Map, java.util.Collection)
    {
        java.util.Map r0;
        java.util.Collection r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.fabric.sdk.android.Kit r4;
        java.lang.Class $r5;
        io.fabric.sdk.android.KitGroup r6;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Collection;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (io.fabric.sdk.android.Kit) $r3;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r4);

        $z0 = r4 instanceof io.fabric.sdk.android.KitGroup;

        if $z0 == 0 goto label1;

        r6 = (io.fabric.sdk.android.KitGroup) r4;

        r1 = interfaceinvoke r6.<io.fabric.sdk.android.KitGroup: java.util.Collection getKits()>();

        staticinvoke <io.fabric.sdk.android.Fabric: void addToKitMap(java.util.Map,java.util.Collection)>(r0, r1);

        goto label1;

     label2:
        return;
    }
    private static android.app.Activity extractActivity(android.content.Context)
    {
        boolean $z0;
        android.content.Context r0;
        android.app.Activity r1;

        r0 := @parameter0: android.content.Context;

        $z0 = r0 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        r1 = (android.app.Activity) r0;

        return r1;

     label1:
        return null;
    }
    public static io.fabric.sdk.android.Kit getKit(java.lang.Class)
    {
        java.lang.Class r0;
        io.fabric.sdk.android.Fabric $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        io.fabric.sdk.android.Kit $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton()>();

        $r2 = $r1.<io.fabric.sdk.android.Fabric: java.util.Map kits>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (io.fabric.sdk.android.Kit) $r3;

        return $r4;
    }
    private static java.util.Map getKitMap(java.util.Collection)
    {
        java.util.Collection r0;
        java.util.HashMap r1;
        int $i0;

        r0 := @parameter0: java.util.Collection;

        r1 = new java.util.HashMap;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke r1.<java.util.HashMap: void <init>(int)>($i0);

        staticinvoke <io.fabric.sdk.android.Fabric: void addToKitMap(java.util.Map,java.util.Collection)>(r1, r0);

        return r1;
    }
    public static io.fabric.sdk.android.Logger getLogger()
    {
        io.fabric.sdk.android.Fabric $r0;
        io.fabric.sdk.android.Logger r1;

        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r0 != null goto label1;

        r1 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger DEFAULT_LOGGER>;

        return r1;

     label1:
        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        r1 = $r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger logger>;

        return r1;
    }
    private void init()
    {
        io.fabric.sdk.android.Fabric r0;
        io.fabric.sdk.android.ActivityLifecycleManager $r1;
        android.content.Context $r2;
        io.fabric.sdk.android.Fabric$1 $r3;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r1 = new io.fabric.sdk.android.ActivityLifecycleManager;

        $r2 = r0.<io.fabric.sdk.android.Fabric: android.content.Context context>;

        specialinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager: void <init>(android.content.Context)>($r2);

        r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.ActivityLifecycleManager activityLifecycleManager> = $r1;

        $r1 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.ActivityLifecycleManager activityLifecycleManager>;

        $r3 = new io.fabric.sdk.android.Fabric$1;

        specialinvoke $r3.<io.fabric.sdk.android.Fabric$1: void <init>(io.fabric.sdk.android.Fabric)>(r0);

        virtualinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r3);

        $r2 = r0.<io.fabric.sdk.android.Fabric: android.content.Context context>;

        virtualinvoke r0.<io.fabric.sdk.android.Fabric: void initializeKits(android.content.Context)>($r2);

        return;
    }
    public static boolean isDebuggable()
    {
        io.fabric.sdk.android.Fabric $r0;
        boolean z0;

        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        z0 = $r0.<io.fabric.sdk.android.Fabric: boolean debuggable>;

        return z0;
    }
    public static boolean isInitialized()
    {
        boolean $z0;
        io.fabric.sdk.android.Fabric $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r0 == null goto label1;

        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        $r1 = $r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.atomic.AtomicBoolean initialized>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static void setFabric(io.fabric.sdk.android.Fabric)
    {
        io.fabric.sdk.android.Fabric $r0;

        $r0 := @parameter0: io.fabric.sdk.android.Fabric;

        <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton> = $r0;

        specialinvoke $r0.<io.fabric.sdk.android.Fabric: void init()>();

        return;
    }
    static io.fabric.sdk.android.Fabric singleton()
    {
        io.fabric.sdk.android.Fabric $r0;
        java.lang.IllegalStateException $r1;

        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must Initialize Fabric before using singleton()");

        throw $r1;

     label1:
        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        return $r0;
    }
    public static transient io.fabric.sdk.android.Fabric 'with'(android.content.Context, io.fabric.sdk.android.Kit[])
    {
        android.content.Context $r0;
        io.fabric.sdk.android.Kit[] $r1;
        io.fabric.sdk.android.Fabric $r2;
        io.fabric.sdk.android.Fabric$Builder $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: io.fabric.sdk.android.Kit[];

        $r2 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r2 != null goto label3;

        entermonitor class "Lio/fabric/sdk/android/Fabric;";

     label1:
        $r2 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r2 != null goto label2;

        $r3 = new io.fabric.sdk.android.Fabric$Builder;

        specialinvoke $r3.<io.fabric.sdk.android.Fabric$Builder: void <init>(android.content.Context)>($r0);

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Fabric$Builder kits(io.fabric.sdk.android.Kit[])>($r1);

        $r2 = virtualinvoke $r3.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Fabric build()>();

        staticinvoke <io.fabric.sdk.android.Fabric: void setFabric(io.fabric.sdk.android.Fabric)>($r2);

     label2:
        exitmonitor class "Lio/fabric/sdk/android/Fabric;";

     label3:
        $r2 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        return $r2;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor class "Lio/fabric/sdk/android/Fabric;";

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public static io.fabric.sdk.android.Fabric 'with'(io.fabric.sdk.android.Fabric)
    {
        io.fabric.sdk.android.Fabric $r0, $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: io.fabric.sdk.android.Fabric;

        $r1 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r1 != null goto label3;

        entermonitor class "Lio/fabric/sdk/android/Fabric;";

     label1:
        $r1 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        if $r1 != null goto label2;

        staticinvoke <io.fabric.sdk.android.Fabric: void setFabric(io.fabric.sdk.android.Fabric)>($r0);

     label2:
        exitmonitor class "Lio/fabric/sdk/android/Fabric;";

     label3:
        $r0 = <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Fabric singleton>;

        return $r0;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor class "Lio/fabric/sdk/android/Fabric;";

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    void addAnnotatedDependencies(java.util.Map, io.fabric.sdk.android.Kit)
    {
        io.fabric.sdk.android.Fabric r0;
        java.util.Map r1;
        io.fabric.sdk.android.Kit $r2, r10;
        java.lang.Class r3, $r11;
        io.fabric.sdk.android.services.concurrency.DependsOn r4;
        int $i0, $i1;
        io.fabric.sdk.android.InitializationTask $r5, $r12;
        java.lang.Class[] $r6;
        boolean $z0;
        java.util.Collection $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException $r13;

        r0 := @this: io.fabric.sdk.android.Fabric;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: io.fabric.sdk.android.Kit;

        r4 = $r2.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.services.concurrency.DependsOn dependsOnAnnotation>;

        if r4 == null goto label6;

        $r6 = interfaceinvoke r4.<io.fabric.sdk.android.services.concurrency.DependsOn: java.lang.Class[] value()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        r3 = $r6[$i1];

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (io.fabric.sdk.android.Kit) $r9;

        $r11 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        if $z0 == 0 goto label2;

        $r12 = $r2.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationTask initializationTask>;

        $r5 = r10.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationTask initializationTask>;

        virtualinvoke $r12.<io.fabric.sdk.android.InitializationTask: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>($r5);

        goto label2;

     label3:
        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r10 = (io.fabric.sdk.android.Kit) $r9;

        if r10 != null goto label4;

        $r13 = new io.fabric.sdk.android.services.concurrency.UnmetDependencyException;

        specialinvoke $r13.<io.fabric.sdk.android.services.concurrency.UnmetDependencyException: void <init>(java.lang.String)>("Referenced Kit was null, does the kit exist?");

        throw $r13;

     label4:
        $r5 = $r2.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationTask initializationTask>;

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r10 = (io.fabric.sdk.android.Kit) $r9;

        $r12 = r10.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationTask initializationTask>;

        virtualinvoke $r5.<io.fabric.sdk.android.InitializationTask: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>($r12);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return;
    }
    io.fabric.sdk.android.InitializationCallback createKitInitializationCallback(int)
    {
        io.fabric.sdk.android.Fabric r0;
        int $i0;
        io.fabric.sdk.android.Fabric$2 $r1;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $i0 := @parameter0: int;

        $r1 = new io.fabric.sdk.android.Fabric$2;

        specialinvoke $r1.<io.fabric.sdk.android.Fabric$2: void <init>(io.fabric.sdk.android.Fabric,int)>(r0, $i0);

        return $r1;
    }
    public io.fabric.sdk.android.ActivityLifecycleManager getActivityLifecycleManager()
    {
        io.fabric.sdk.android.Fabric r0;
        io.fabric.sdk.android.ActivityLifecycleManager r1;

        r0 := @this: io.fabric.sdk.android.Fabric;

        r1 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.ActivityLifecycleManager activityLifecycleManager>;

        return r1;
    }
    public java.lang.String getAppIdentifier()
    {
        io.fabric.sdk.android.Fabric r0;
        java.lang.String $r1;
        io.fabric.sdk.android.services.common.IdManager $r2;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r2 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r1 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppIdentifier()>();

        return $r1;
    }
    public java.lang.String getAppInstallIdentifier()
    {
        io.fabric.sdk.android.Fabric r0;
        java.lang.String $r1;
        io.fabric.sdk.android.services.common.IdManager $r2;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r2 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r1 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>();

        return $r1;
    }
    public android.app.Activity getCurrentActivity()
    {
        io.fabric.sdk.android.Fabric r0;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        android.app.Activity $r3;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r2 = r0.<io.fabric.sdk.android.Fabric: java.lang.ref.WeakReference activity>;

        if $r2 == null goto label1;

        $r2 = r0.<io.fabric.sdk.android.Fabric: java.lang.ref.WeakReference activity>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.app.Activity) $r1;

        return $r3;

     label1:
        return null;
    }
    public java.util.concurrent.ExecutorService getExecutorService()
    {
        io.fabric.sdk.android.Fabric r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: io.fabric.sdk.android.Fabric;

        r1 = r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService executorService>;

        return r1;
    }
    public java.lang.String getIdentifier()
    {
        io.fabric.sdk.android.Fabric r0;

        r0 := @this: io.fabric.sdk.android.Fabric;

        return "io.fabric.sdk.android:fabric";
    }
    public java.util.Collection getKits()
    {
        io.fabric.sdk.android.Fabric r0;
        java.util.Collection $r1;
        java.util.Map $r2;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r2 = r0.<io.fabric.sdk.android.Fabric: java.util.Map kits>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        return $r1;
    }
    java.util.concurrent.Future getKitsFinderFuture(android.content.Context)
    {
        io.fabric.sdk.android.Fabric r0;
        android.content.Context $r1;
        io.fabric.sdk.android.FabricKitsFinder r2;
        java.lang.String $r3;
        java.util.concurrent.ExecutorService $r4;
        java.util.concurrent.Future $r5;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r1 := @parameter0: android.content.Context;

        r2 = new io.fabric.sdk.android.FabricKitsFinder;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageCodePath()>();

        specialinvoke r2.<io.fabric.sdk.android.FabricKitsFinder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService getExecutorService()>();

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r2);

        return $r5;
    }
    public android.os.Handler getMainHandler()
    {
        io.fabric.sdk.android.Fabric r0;
        android.os.Handler r1;

        r0 := @this: io.fabric.sdk.android.Fabric;

        r1 = r0.<io.fabric.sdk.android.Fabric: android.os.Handler mainHandler>;

        return r1;
    }
    public java.lang.String getVersion()
    {
        io.fabric.sdk.android.Fabric r0;

        r0 := @this: io.fabric.sdk.android.Fabric;

        return "1.4.1.19";
    }
    void initializeKits(android.content.Context)
    {
        io.fabric.sdk.android.Fabric r0;
        android.content.Context $r1;
        java.util.ArrayList r2;
        io.fabric.sdk.android.Onboarding r3;
        java.util.concurrent.Future $r4;
        java.util.Collection $r5;
        io.fabric.sdk.android.InitializationCallback $r6;
        io.fabric.sdk.android.services.common.IdManager $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        io.fabric.sdk.android.Kit r10;
        io.fabric.sdk.android.Logger $r11;
        java.lang.StringBuilder $r12, $r17;
        java.lang.String $r13;
        io.fabric.sdk.android.InitializationTask $r14, $r15;
        java.util.Map $r16;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: java.util.concurrent.Future getKitsFinderFuture(android.content.Context)>($r1);

        $r5 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: java.util.Collection getKits()>();

        r3 = new io.fabric.sdk.android.Onboarding;

        specialinvoke r3.<io.fabric.sdk.android.Onboarding: void <init>(java.util.concurrent.Future,java.util.Collection)>($r4, $r5);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        $r6 = <io.fabric.sdk.android.InitializationCallback: io.fabric.sdk.android.InitializationCallback EMPTY>;

        $r7 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.services.common.IdManager idManager>;

        virtualinvoke r3.<io.fabric.sdk.android.Onboarding: void injectParameters(android.content.Context,io.fabric.sdk.android.Fabric,io.fabric.sdk.android.InitializationCallback,io.fabric.sdk.android.services.common.IdManager)>($r1, r0, $r6, $r7);

        $r8 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (io.fabric.sdk.android.Kit) $r9;

        $r6 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.InitializationCallback kitInitializationCallback>;

        $r7 = r0.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.services.common.IdManager idManager>;

        virtualinvoke r10.<io.fabric.sdk.android.Kit: void injectParameters(android.content.Context,io.fabric.sdk.android.Fabric,io.fabric.sdk.android.InitializationCallback,io.fabric.sdk.android.services.common.IdManager)>($r1, r0, $r6, $r7);

        goto label1;

     label2:
        virtualinvoke r3.<io.fabric.sdk.android.Onboarding: void initialize()>();

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $z0 = interfaceinvoke $r11.<io.fabric.sdk.android.Logger: boolean isLoggable(java.lang.String,int)>("Fabric", 3);

        if $z0 == 0 goto label5;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Initializing ");

        $r13 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: java.lang.String getIdentifier()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [Version: ");

        $r13 = virtualinvoke r0.<io.fabric.sdk.android.Fabric: java.lang.String getVersion()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], with the following kits:\n");

     label3:
        $r8 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (io.fabric.sdk.android.Kit) $r9;

        $r14 = r10.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationTask initializationTask>;

        $r15 = r3.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.InitializationTask initializationTask>;

        virtualinvoke $r14.<io.fabric.sdk.android.InitializationTask: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>($r15);

        $r16 = r0.<io.fabric.sdk.android.Fabric: java.util.Map kits>;

        virtualinvoke r0.<io.fabric.sdk.android.Fabric: void addAnnotatedDependencies(java.util.Map,io.fabric.sdk.android.Kit)>($r16, r10);

        virtualinvoke r10.<io.fabric.sdk.android.Kit: void initialize()>();

        if $r12 == null goto label4;

        $r13 = virtualinvoke r10.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [Version: ");

        $r13 = virtualinvoke r10.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        goto label4;

     label5:
        $r12 = null;

        goto label3;

     label6:
        if $r12 == null goto label7;

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r13);

     label7:
        return;
    }
    public io.fabric.sdk.android.Fabric setCurrentActivity(android.app.Activity)
    {
        io.fabric.sdk.android.Fabric r0;
        android.app.Activity $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: io.fabric.sdk.android.Fabric;

        $r1 := @parameter0: android.app.Activity;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<io.fabric.sdk.android.Fabric: java.lang.ref.WeakReference activity> = $r2;

        return r0;
    }
