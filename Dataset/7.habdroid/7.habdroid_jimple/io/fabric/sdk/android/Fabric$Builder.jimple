io.fabric.sdk.android.Fabric$Builder extends java.lang.Object
private java.lang.String appIdentifier
private java.lang.String appInstallIdentifier
private final android.content.Context context
private boolean debuggable
private android.os.Handler handler
private io.fabric.sdk.android.InitializationCallback initializationCallback
private io.fabric.sdk.android.Kit[] kits
private io.fabric.sdk.android.Logger logger
private io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor
    public void <init>(android.content.Context)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        android.content.Context $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null.");

        throw $r2;

     label1:
        r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context> = $r1;

        return;
    }
    public io.fabric.sdk.android.Fabric$Builder appIdentifier(java.lang.String)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appIdentifier must not be null.");

        throw $r2;

     label1:
        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("appIdentifier already set.");

        throw $r4;

     label2:
        r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier> = $r1;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder appInstallIdentifier(java.lang.String)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appInstallIdentifier must not be null.");

        throw $r2;

     label1:
        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("appInstallIdentifier already set.");

        throw $r4;

     label2:
        r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier> = $r1;

        return r0;
    }
    public io.fabric.sdk.android.Fabric build()
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        io.fabric.sdk.android.Logger $r1;
        boolean $z0;
        io.fabric.sdk.android.InitializationCallback $r2;
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor $r3;
        android.os.Handler $r4, $r15;
        android.os.Looper $r5;
        java.lang.String $r6, $r10;
        android.content.Context $r7, $r12;
        io.fabric.sdk.android.Kit[] $r8;
        java.util.Map r9;
        java.util.Collection $r11;
        android.app.Activity $r13;
        java.util.List $r14;
        io.fabric.sdk.android.DefaultLogger $r16;
        java.util.HashMap $r17;
        io.fabric.sdk.android.services.common.IdManager $r18;
        io.fabric.sdk.android.Fabric $r19;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

        if $r3 != null goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor create()>();

        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor> = $r3;

     label1:
        $r4 = r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler>;

        if $r4 != null goto label2;

        $r15 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r15.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler> = $r15;

     label2:
        $r1 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

        if $r1 != null goto label3;

        $z0 = r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable>;

        if $z0 == 0 goto label7;

        $r16 = new io.fabric.sdk.android.DefaultLogger;

        specialinvoke $r16.<io.fabric.sdk.android.DefaultLogger: void <init>(int)>(3);

        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r16;

     label3:
        $r6 = r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

        if $r6 != null goto label4;

        $r7 = r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r6 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier> = $r6;

     label4:
        $r2 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        if $r2 != null goto label5;

        $r2 = <io.fabric.sdk.android.InitializationCallback: io.fabric.sdk.android.InitializationCallback EMPTY>;

        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback> = $r2;

     label5:
        $r8 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        if $r8 != null goto label8;

        $r17 = new java.util.HashMap;

        r9 = $r17;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

     label6:
        $r7 = r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r7 = virtualinvoke $r7.<android.content.Context: android.content.Context getApplicationContext()>();

        $r18 = new io.fabric.sdk.android.services.common.IdManager;

        $r6 = r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

        $r10 = r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier>;

        $r11 = interfaceinvoke r9.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r18.<io.fabric.sdk.android.services.common.IdManager: void <init>(android.content.Context,java.lang.String,java.lang.String,java.util.Collection)>($r7, $r6, $r10, $r11);

        $r19 = new io.fabric.sdk.android.Fabric;

        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

        $r4 = r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler>;

        $r1 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

        $z0 = r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable>;

        $r2 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        $r12 = r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r13 = staticinvoke <io.fabric.sdk.android.Fabric: android.app.Activity access$100(android.content.Context)>($r12);

        specialinvoke $r19.<io.fabric.sdk.android.Fabric: void <init>(android.content.Context,java.util.Map,io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor,android.os.Handler,io.fabric.sdk.android.Logger,boolean,io.fabric.sdk.android.InitializationCallback,io.fabric.sdk.android.services.common.IdManager,android.app.Activity)>($r7, r9, $r3, $r4, $r1, $z0, $r2, $r18, $r13);

        return $r19;

     label7:
        $r16 = new io.fabric.sdk.android.DefaultLogger;

        specialinvoke $r16.<io.fabric.sdk.android.DefaultLogger: void <init>()>();

        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r16;

        goto label3;

     label8:
        $r8 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        r9 = staticinvoke <io.fabric.sdk.android.Fabric: java.util.Map access$000(java.util.Collection)>($r14);

        goto label6;
    }
    public io.fabric.sdk.android.Fabric$Builder debuggable(boolean)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $z0 := @parameter0: boolean;

        r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable> = $z0;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder executorService(java.util.concurrent.ExecutorService)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder handler(android.os.Handler)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        android.os.Handler $r1;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: android.os.Handler;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder initializationCallback(io.fabric.sdk.android.InitializationCallback)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        io.fabric.sdk.android.InitializationCallback r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        r1 := @parameter0: io.fabric.sdk.android.InitializationCallback;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initializationCallback must not be null.");

        throw $r2;

     label1:
        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initializationCallback already set.");

        throw $r4;

     label2:
        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback> = r1;

        return r0;
    }
    public transient io.fabric.sdk.android.Fabric$Builder kits(io.fabric.sdk.android.Kit[])
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        io.fabric.sdk.android.Kit[] $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.Kit[];

        $r2 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Kits already set.");

        throw $r3;

     label1:
        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits> = $r1;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder logger(io.fabric.sdk.android.Logger)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        io.fabric.sdk.android.Logger $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.Logger;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Logger must not be null.");

        throw $r2;

     label1:
        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Logger already set.");

        throw $r4;

     label2:
        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r1;

        return r0;
    }
    public io.fabric.sdk.android.Fabric$Builder threadPoolExecutor(io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor)
    {
        io.fabric.sdk.android.Fabric$Builder r0;
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PriorityThreadPoolExecutor must not be null.");

        throw $r2;

     label1:
        $r3 = r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PriorityThreadPoolExecutor already set.");

        throw $r4;

     label2:
        r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor> = $r1;

        return r0;
    }
