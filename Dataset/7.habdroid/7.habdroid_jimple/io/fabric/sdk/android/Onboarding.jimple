io.fabric.sdk.android.Onboarding extends io.fabric.sdk.android.Kit
private static final java.lang.String BINARY_BUILD_TYPE
static final java.lang.String CRASHLYTICS_API_ENDPOINT
private java.lang.String applicationLabel
private java.lang.String installerPackageName
private final java.util.concurrent.Future kitsFinder
private android.content.pm.PackageInfo packageInfo
private android.content.pm.PackageManager packageManager
private java.lang.String packageName
private final java.util.Collection providedKits
private final io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory
private java.lang.String targetAndroidSdkVersion
private java.lang.String versionCode
private java.lang.String versionName
    public void <init>(java.util.concurrent.Future, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        java.util.concurrent.Future r1;
        java.util.Collection r2;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r3;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<io.fabric.sdk.android.Kit: void <init>()>();

        $r3 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>()>();

        r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory> = $r3;

        r0.<io.fabric.sdk.android.Onboarding: java.util.concurrent.Future kitsFinder> = r1;

        r0.<io.fabric.sdk.android.Onboarding: java.util.Collection providedKits> = r2;

        return;
    }
    private io.fabric.sdk.android.services.settings.AppRequestData buildAppRequest(io.fabric.sdk.android.services.settings.IconRequest, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        io.fabric.sdk.android.services.settings.IconRequest $r1;
        java.util.Collection r2;
        java.lang.String $r3, $r4, $r5, $r8, $r9, $r13, $r15;
        android.content.Context $r6;
        io.fabric.sdk.android.services.common.ApiKey $r7;
        java.lang.String[] $r10;
        io.fabric.sdk.android.services.common.DeliveryMechanism $r11;
        int $i0;
        io.fabric.sdk.android.services.common.IdManager $r12;
        io.fabric.sdk.android.services.settings.AppRequestData $r14;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.IconRequest;

        r2 := @parameter1: java.util.Collection;

        $r6 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r7 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r7.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r8 = virtualinvoke $r7.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r6);

        $r9 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String resolveBuildId(android.content.Context)>($r6);

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = $r9;

        $r9 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String createInstanceIdFrom(java.lang.String[])>($r10);

        $r3 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String installerPackageName>;

        $r11 = staticinvoke <io.fabric.sdk.android.services.common.DeliveryMechanism: io.fabric.sdk.android.services.common.DeliveryMechanism determineFrom(java.lang.String)>($r3);

        $i0 = virtualinvoke $r11.<io.fabric.sdk.android.services.common.DeliveryMechanism: int getId()>();

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r13 = virtualinvoke $r12.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppIdentifier()>();

        $r14 = new io.fabric.sdk.android.services.settings.AppRequestData;

        $r15 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionName>;

        $r3 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionCode>;

        $r4 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String applicationLabel>;

        $r5 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String targetAndroidSdkVersion>;

        specialinvoke $r14.<io.fabric.sdk.android.services.settings.AppRequestData: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>($r8, $r13, $r15, $r3, $r9, $r4, $i0, $r5, "0", $r1, r2);

        return $r14;
    }
    private boolean performAutoConfigure(java.lang.String, io.fabric.sdk.android.services.settings.AppSettingsData, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        java.lang.String $r1, $r4, $r5;
        io.fabric.sdk.android.services.settings.AppSettingsData $r2;
        java.util.Collection r3;
        boolean $z0;
        io.fabric.sdk.android.services.settings.Settings $r6;
        io.fabric.sdk.android.Logger $r7;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.AppSettingsData;

        r3 := @parameter2: java.util.Collection;

        $r4 = "new";

        $r5 = $r2.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String status>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: boolean performCreateApp(java.lang.String,io.fabric.sdk.android.services.settings.AppSettingsData,java.util.Collection)>($r1, $r2, r3);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $z0 = virtualinvoke $r6.<io.fabric.sdk.android.services.settings.Settings: boolean loadSettingsSkippingCache()>();

        return $z0;

     label1:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to create app with Crashlytics service.", null);

        return 0;

     label2:
        $r4 = "configured";

        $r5 = $r2.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String status>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $z0 = virtualinvoke $r6.<io.fabric.sdk.android.services.settings.Settings: boolean loadSettingsSkippingCache()>();

        return $z0;

     label3:
        $z0 = $r2.<io.fabric.sdk.android.services.settings.AppSettingsData: boolean updateRequired>;

        if $z0 == 0 goto label4;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Server says an update is required - forcing a full App update.");

        specialinvoke r0.<io.fabric.sdk.android.Onboarding: boolean performUpdateApp(java.lang.String,io.fabric.sdk.android.services.settings.AppSettingsData,java.util.Collection)>($r1, $r2, r3);

     label4:
        return 1;
    }
    private boolean performCreateApp(java.lang.String, io.fabric.sdk.android.services.settings.AppSettingsData, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        java.lang.String $r1, $r9;
        io.fabric.sdk.android.services.settings.AppSettingsData $r2;
        java.util.Collection r3;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r4;
        android.content.Context $r5;
        io.fabric.sdk.android.services.settings.IconRequest $r6;
        io.fabric.sdk.android.services.settings.AppRequestData $r7;
        io.fabric.sdk.android.services.settings.CreateAppSpiCall $r8;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.AppSettingsData;

        r3 := @parameter2: java.util.Collection;

        $r5 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r6 = staticinvoke <io.fabric.sdk.android.services.settings.IconRequest: io.fabric.sdk.android.services.settings.IconRequest build(android.content.Context,java.lang.String)>($r5, $r1);

        $r7 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.settings.AppRequestData buildAppRequest(io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>($r6, r3);

        $r8 = new io.fabric.sdk.android.services.settings.CreateAppSpiCall;

        $r9 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: java.lang.String getOverridenSpiEndpoint()>();

        $r1 = $r2.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String url>;

        $r4 = r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory>;

        specialinvoke $r8.<io.fabric.sdk.android.services.settings.CreateAppSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory)>(r0, $r9, $r1, $r4);

        $z0 = virtualinvoke $r8.<io.fabric.sdk.android.services.settings.CreateAppSpiCall: boolean invoke(io.fabric.sdk.android.services.settings.AppRequestData)>($r7);

        return $z0;
    }
    private boolean performUpdateApp(io.fabric.sdk.android.services.settings.AppSettingsData, io.fabric.sdk.android.services.settings.IconRequest, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        io.fabric.sdk.android.services.settings.AppSettingsData $r1;
        io.fabric.sdk.android.services.settings.IconRequest $r2;
        java.util.Collection r3;
        java.lang.String $r4, $r8;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r5;
        io.fabric.sdk.android.services.settings.AppRequestData $r6;
        io.fabric.sdk.android.services.settings.UpdateAppSpiCall $r7;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.AppSettingsData;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.IconRequest;

        r3 := @parameter2: java.util.Collection;

        $r6 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.settings.AppRequestData buildAppRequest(io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>($r2, r3);

        $r7 = new io.fabric.sdk.android.services.settings.UpdateAppSpiCall;

        $r8 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: java.lang.String getOverridenSpiEndpoint()>();

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppSettingsData: java.lang.String url>;

        $r5 = r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory>;

        specialinvoke $r7.<io.fabric.sdk.android.services.settings.UpdateAppSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory)>(r0, $r8, $r4, $r5);

        $z0 = virtualinvoke $r7.<io.fabric.sdk.android.services.settings.UpdateAppSpiCall: boolean invoke(io.fabric.sdk.android.services.settings.AppRequestData)>($r6);

        return $z0;
    }
    private boolean performUpdateApp(java.lang.String, io.fabric.sdk.android.services.settings.AppSettingsData, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        java.lang.String $r1;
        io.fabric.sdk.android.services.settings.AppSettingsData $r2;
        java.util.Collection r3;
        android.content.Context $r4;
        io.fabric.sdk.android.services.settings.IconRequest $r5;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.AppSettingsData;

        r3 := @parameter2: java.util.Collection;

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r5 = staticinvoke <io.fabric.sdk.android.services.settings.IconRequest: io.fabric.sdk.android.services.settings.IconRequest build(android.content.Context,java.lang.String)>($r4, $r1);

        $z0 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: boolean performUpdateApp(io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>($r2, $r5, r3);

        return $z0;
    }
    private io.fabric.sdk.android.services.settings.SettingsData retrieveSettingsData()
    {
        io.fabric.sdk.android.Onboarding r0;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r1;
        java.lang.String $r2, $r3, $r7;
        java.lang.Exception r4;
        io.fabric.sdk.android.services.settings.Settings $r5;
        io.fabric.sdk.android.services.common.IdManager $r6;
        io.fabric.sdk.android.services.settings.SettingsData $r8;
        io.fabric.sdk.android.Logger $r9;

        r0 := @this: io.fabric.sdk.android.Onboarding;

     label1:
        $r5 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r6 = r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.common.IdManager idManager>;

        $r1 = r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory>;

        $r2 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionCode>;

        $r3 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionName>;

        $r7 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: java.lang.String getOverridenSpiEndpoint()>();

        $r5 = virtualinvoke $r5.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings initialize(io.fabric.sdk.android.Kit,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.network.HttpRequestFactory,java.lang.String,java.lang.String,java.lang.String)>(r0, $r6, $r1, $r2, $r3, $r7);

        virtualinvoke $r5.<io.fabric.sdk.android.services.settings.Settings: boolean loadSettingsData()>();

        $r5 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r8 = virtualinvoke $r5.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

     label2:
        return $r8;

     label3:
        r4 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Error dealing with settings", r4);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    protected java.lang.Boolean doInBackground()
    {
        io.fabric.sdk.android.Onboarding r0;
        java.lang.Exception r1;
        android.content.Context $r2;
        java.lang.String $r3;
        boolean z0, $z1;
        io.fabric.sdk.android.services.settings.SettingsData $r4;
        java.util.concurrent.Future $r5;
        java.lang.Object $r6;
        java.util.Map r7;
        java.util.Collection $r8;
        io.fabric.sdk.android.services.settings.AppSettingsData $r9;
        java.lang.Boolean $r10;
        io.fabric.sdk.android.Logger $r11;
        java.util.HashMap $r12;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getAppIconHashOrNull(android.content.Context)>($r2);

        z0 = 0;

        $r4 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.settings.SettingsData retrieveSettingsData()>();

        if $r4 == null goto label06;

     label01:
        $r5 = r0.<io.fabric.sdk.android.Onboarding: java.util.concurrent.Future kitsFinder>;

     label02:
        if $r5 == null goto label07;

     label03:
        $r5 = r0.<io.fabric.sdk.android.Onboarding: java.util.concurrent.Future kitsFinder>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.Future: java.lang.Object get()>();

        r7 = (java.util.Map) $r6;

     label04:
        $r8 = r0.<io.fabric.sdk.android.Onboarding: java.util.Collection providedKits>;

        r7 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: java.util.Map mergeKits(java.util.Map,java.util.Collection)>(r7, $r8);

        $r9 = $r4.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.AppSettingsData appData>;

        $r8 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>();

        $z1 = specialinvoke r0.<io.fabric.sdk.android.Onboarding: boolean performAutoConfigure(java.lang.String,io.fabric.sdk.android.services.settings.AppSettingsData,java.util.Collection)>($r3, $r9, $r8);

     label05:
        z0 = $z1;

     label06:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r10;

     label07:
        $r12 = new java.util.HashMap;

        r7 = $r12;

     label08:
        specialinvoke $r12.<java.util.HashMap: void <init>()>();

     label09:
        goto label04;

     label10:
        r1 := @caughtexception;

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Error performing auto configuration.", r1);

        goto label06;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label05 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    protected volatile java.lang.Object doInBackground()
    {
        io.fabric.sdk.android.Onboarding r0;
        java.lang.Boolean $r1;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: java.lang.Boolean doInBackground()>();

        return $r1;
    }
    public java.lang.String getIdentifier()
    {
        io.fabric.sdk.android.Onboarding r0;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        return "io.fabric.sdk.android:fabric";
    }
    java.lang.String getOverridenSpiEndpoint()
    {
        io.fabric.sdk.android.Onboarding r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r1, "com.crashlytics.ApiEndpoint");

        return $r2;
    }
    public java.lang.String getVersion()
    {
        io.fabric.sdk.android.Onboarding r0;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        return "1.4.1.19";
    }
    java.util.Map mergeKits(java.util.Map, java.util.Collection)
    {
        io.fabric.sdk.android.Onboarding r0;
        java.util.Map r1;
        java.util.Collection r2;
        io.fabric.sdk.android.KitInfo $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        io.fabric.sdk.android.Kit r6;
        java.lang.String $r7, $r8, $r9;

        r0 := @this: io.fabric.sdk.android.Onboarding;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Collection;

        $r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (io.fabric.sdk.android.Kit) $r5;

        $r7 = virtualinvoke r6.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r6.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r3 = new io.fabric.sdk.android.KitInfo;

        $r8 = virtualinvoke r6.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r9 = virtualinvoke r6.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        specialinvoke $r3.<io.fabric.sdk.android.KitInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, "binary");

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r3);

        goto label1;

     label2:
        return r1;
    }
    protected boolean onPreExecute()
    {
        io.fabric.sdk.android.Onboarding r0;
        android.content.pm.PackageManager$NameNotFoundException r1;
        io.fabric.sdk.android.services.common.IdManager $r2;
        java.lang.String $r3;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageInfo $r6;
        int $i0;
        android.content.pm.ApplicationInfo $r7;
        java.lang.CharSequence $r8;
        io.fabric.sdk.android.Logger $r9;

        r0 := @this: io.fabric.sdk.android.Onboarding;

     label01:
        $r2 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

     label02:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String installerPackageName> = $r3;

     label03:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label04:
        r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageManager packageManager> = $r5;

     label05:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

     label06:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String packageName> = $r3;

        $r5 = r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageManager packageManager>;

        $r3 = r0.<io.fabric.sdk.android.Onboarding: java.lang.String packageName>;

     label07:
        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label08:
        r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageInfo packageInfo> = $r6;

        $r6 = r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageInfo packageInfo>;

        $i0 = $r6.<android.content.pm.PackageInfo: int versionCode>;

     label09:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label10:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionCode> = $r3;

        $r6 = r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageInfo packageInfo>;

        $r3 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r3 != null goto label18;

        $r3 = "0.0";

     label11:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String versionName> = $r3;

        $r5 = r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageManager packageManager>;

     label12:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r7 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r8 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r7);

        $r3 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

     label13:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String applicationLabel> = $r3;

     label14:
        $r4 = virtualinvoke r0.<io.fabric.sdk.android.Onboarding: android.content.Context getContext()>();

        $r7 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label15:
        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label16:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label17:
        r0.<io.fabric.sdk.android.Onboarding: java.lang.String targetAndroidSdkVersion> = $r3;

        return 1;

     label18:
        $r6 = r0.<io.fabric.sdk.android.Onboarding: android.content.pm.PackageInfo packageInfo>;

        $r3 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        goto label11;

     label19:
        r1 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed init", r1);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label19;
    }
