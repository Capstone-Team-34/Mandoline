android.arch.lifecycle.ReflectiveGenericLifecycleObserver extends java.lang.Object implements android.arch.lifecycle.GenericLifecycleObserver
private static final int CALL_TYPE_NO_ARG
private static final int CALL_TYPE_PROVIDER
private static final int CALL_TYPE_PROVIDER_WITH_EVENT
static final java.util.Map sInfoCache
private final android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo mInfo
private final java.lang.Object mWrapped
    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.util.Map sInfoCache> = $r0;

        return;
    }
    void <init>(java.lang.Object)
    {
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo $r3;

        r0 := @this: android.arch.lifecycle.ReflectiveGenericLifecycleObserver;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped> = $r1;

        $r1 = r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo getInfo(java.lang.Class)>($r2);

        r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo mInfo> = $r3;

        return;
    }
    private static android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo createInfo(java.lang.Class)
    {
        java.lang.Class $r0, r3;
        java.util.HashMap r1;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo r2;
        java.lang.reflect.Method r4;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference r5;
        java.util.Map $r6;
        java.lang.reflect.Method[] $r7;
        java.lang.Class[] $r8;
        int $i0, $i1, $i3;
        java.util.Set $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        java.util.Map$Entry r12;
        android.arch.lifecycle.Lifecycle$Event $r13, $r17;
        java.lang.'annotation'.Annotation $r14;
        android.arch.lifecycle.OnLifecycleEvent r15;
        byte b2;
        java.lang.IllegalArgumentException $r16;

        $r0 := @parameter0: java.lang.Class;

        r3 = virtualinvoke $r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        if r3 == null goto label01;

        r2 = staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo getInfo(java.lang.Class)>(r3);

        if r2 == null goto label01;

        $r6 = r2.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo: java.util.Map mHandlerToEvent>;

        interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>($r6);

     label01:
        $r7 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r8;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label05;

        r3 = $r8[$i1];

        r2 = staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo getInfo(java.lang.Class)>(r3);

        $r6 = r2.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo: java.util.Map mHandlerToEvent>;

        $r9 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference) $r11;

        $r11 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (android.arch.lifecycle.Lifecycle$Event) $r11;

        staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)>(r1, r5, $r13, $r0);

        goto label03;

     label04:
        $i1 = $i1 + 1;

        goto label02;

     label05:
        $i0 = lengthof $r7;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label13;

        r4 = $r7[$i1];

        $r14 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/arch/lifecycle/OnLifecycleEvent;");

        r15 = (android.arch.lifecycle.OnLifecycleEvent) $r14;

        if r15 != null goto label08;

     label07:
        $i1 = $i1 + 1;

        goto label06;

     label08:
        $r8 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        b2 = 0;

        $i3 = lengthof $r8;

        if $i3 <= 0 goto label09;

        b2 = 1;

        r3 = $r8[0];

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Landroid/arch/lifecycle/LifecycleOwner;");

        if $z0 != 0 goto label09;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameter type. Must be one and instanceof LifecycleOwner");

        throw $r16;

     label09:
        $r13 = interfaceinvoke r15.<android.arch.lifecycle.OnLifecycleEvent: android.arch.lifecycle.Lifecycle$Event value()>();

        $i3 = lengthof $r8;

        if $i3 <= 1 goto label11;

        b2 = 2;

        r3 = $r8[1];

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Landroid/arch/lifecycle/Lifecycle$Event;");

        if $z0 != 0 goto label10;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameter type. second arg must be an event");

        throw $r16;

     label10:
        $r17 = <android.arch.lifecycle.Lifecycle$Event: android.arch.lifecycle.Lifecycle$Event ON_ANY>;

        if $r13 == $r17 goto label11;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Second arg is supported only for ON_ANY value");

        throw $r16;

     label11:
        $i3 = lengthof $r8;

        if $i3 <= 2 goto label12;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot have more than 2 params");

        throw $r16;

     label12:
        r5 = new android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference;

        specialinvoke r5.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: void <init>(int,java.lang.reflect.Method)>(b2, r4);

        staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)>(r1, r5, $r13, $r0);

        goto label07;

     label13:
        r2 = new android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo;

        specialinvoke r2.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo: void <init>(java.util.Map)>(r1);

        $r6 = <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.util.Map sInfoCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r2);

        return r2;
    }
    private static android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo getInfo(java.lang.Class)
    {
        java.lang.Class $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 = <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.util.Map sInfoCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        r3 = staticinvoke <android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo createInfo(java.lang.Class)>($r0);

        return r3;
    }
    private void invokeCallback(android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference, android.arch.lifecycle.LifecycleOwner, android.arch.lifecycle.Lifecycle$Event)
    {
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver r0;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference $r1;
        android.arch.lifecycle.LifecycleOwner $r2;
        android.arch.lifecycle.Lifecycle$Event $r3;
        java.lang.Throwable $r4;
        int $i0;
        java.lang.reflect.Method $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r7;
        java.lang.reflect.InvocationTargetException r8;
        java.lang.RuntimeException $r9;
        java.lang.IllegalAccessException r10;

        r0 := @this: android.arch.lifecycle.ReflectiveGenericLifecycleObserver;

        $r1 := @parameter0: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference;

        $r2 := @parameter1: android.arch.lifecycle.LifecycleOwner;

        $r3 := @parameter2: android.arch.lifecycle.Lifecycle$Event;

        $i0 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: int mCallType>;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label06;
            case 2: goto label10;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r5 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: java.lang.reflect.Method mMethod>;

        $r6 = r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped>;

        $r7 = newarray (java.lang.Object)[0];

     label03:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label04:
        return;

     label05:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r4 = virtualinvoke r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to call observer method", $r4);

        throw $r9;

     label06:
        $r5 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: java.lang.reflect.Method mMethod>;

        $r6 = r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r2;

     label07:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label08:
        return;

     label09:
        r10 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

     label10:
        $r5 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: java.lang.reflect.Method mMethod>;

        $r6 = r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r3;

     label11:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label12:
        return;

        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label05;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label05;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label05;
        catch java.lang.IllegalAccessException from label11 to label12 with label09;
    }
    private void invokeCallbacks(android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo, android.arch.lifecycle.LifecycleOwner, android.arch.lifecycle.Lifecycle$Event)
    {
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver r0;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo $r1;
        android.arch.lifecycle.LifecycleOwner $r2;
        android.arch.lifecycle.Lifecycle$Event $r3, $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.util.List $r7;

        r0 := @this: android.arch.lifecycle.ReflectiveGenericLifecycleObserver;

        $r1 := @parameter0: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo;

        $r2 := @parameter1: android.arch.lifecycle.LifecycleOwner;

        $r3 := @parameter2: android.arch.lifecycle.Lifecycle$Event;

        $r5 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo: java.util.Map mEventToHandlers>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.util.List) $r6;

        specialinvoke r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void invokeMethodsForEvent(java.util.List,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event)>($r7, $r2, $r3);

        $r5 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo: java.util.Map mEventToHandlers>;

        $r4 = <android.arch.lifecycle.Lifecycle$Event: android.arch.lifecycle.Lifecycle$Event ON_ANY>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.util.List) $r6;

        specialinvoke r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void invokeMethodsForEvent(java.util.List,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event)>($r7, $r2, $r3);

        return;
    }
    private void invokeMethodsForEvent(java.util.List, android.arch.lifecycle.LifecycleOwner, android.arch.lifecycle.Lifecycle$Event)
    {
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver r0;
        java.util.List r1;
        android.arch.lifecycle.LifecycleOwner $r2;
        android.arch.lifecycle.Lifecycle$Event $r3;
        int $i0;
        java.lang.Object $r4;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference r5;

        r0 := @this: android.arch.lifecycle.ReflectiveGenericLifecycleObserver;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.arch.lifecycle.LifecycleOwner;

        $r3 := @parameter2: android.arch.lifecycle.Lifecycle$Event;

        if r1 == null goto label2;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        r5 = (android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference) $r4;

        specialinvoke r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void invokeCallback(android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event)>(r5, $r2, $r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    private static void verifyAndPutHandler(java.util.Map, android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference, android.arch.lifecycle.Lifecycle$Event, java.lang.Class)
    {
        java.util.Map r0;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference $r1;
        android.arch.lifecycle.Lifecycle$Event $r2, r7;
        java.lang.Class $r3;
        java.lang.reflect.Method r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference;

        $r2 := @parameter2: android.arch.lifecycle.Lifecycle$Event;

        $r3 := @parameter3: java.lang.Class;

        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (android.arch.lifecycle.Lifecycle$Event) $r6;

        if r7 == null goto label1;

        if $r2 == r7 goto label1;

        r4 = $r1.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference: java.lang.reflect.Method mMethod>;

        $r5 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r9 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r9 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already declared with different @OnLifecycleEvent value: previous");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new value ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        if r7 != null goto label2;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        return;
    }
    public void onStateChanged(android.arch.lifecycle.LifecycleOwner, android.arch.lifecycle.Lifecycle$Event)
    {
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver r0;
        android.arch.lifecycle.LifecycleOwner $r1;
        android.arch.lifecycle.Lifecycle$Event $r2;
        android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo $r3;

        r0 := @this: android.arch.lifecycle.ReflectiveGenericLifecycleObserver;

        $r1 := @parameter0: android.arch.lifecycle.LifecycleOwner;

        $r2 := @parameter1: android.arch.lifecycle.Lifecycle$Event;

        $r3 = r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo mInfo>;

        specialinvoke r0.<android.arch.lifecycle.ReflectiveGenericLifecycleObserver: void invokeCallbacks(android.arch.lifecycle.ReflectiveGenericLifecycleObserver$CallbackInfo,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event)>($r3, $r1, $r2);

        return;
    }
