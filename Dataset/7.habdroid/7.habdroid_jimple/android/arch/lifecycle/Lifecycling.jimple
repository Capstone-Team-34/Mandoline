android.arch.lifecycle.Lifecycling extends java.lang.Object
private static java.util.Map sCallbackCache
private static java.lang.reflect.Constructor sREFLECTIVE
    static void <clinit>()
    {
        java.lang.reflect.Constructor $r0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        java.util.HashMap $r3;
        java.lang.NoSuchMethodException $r4;

        $r1 = class "Landroid/arch/lifecycle/ReflectiveGenericLifecycleObserver;";

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Object;";

     label1:
        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label2:
        <android.arch.lifecycle.Lifecycling: java.lang.reflect.Constructor sREFLECTIVE> = $r0;

     label3:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.arch.lifecycle.Lifecycling: java.util.Map sCallbackCache> = $r3;

        return;

     label4:
        $r4 := @caughtexception;

        goto label3;

        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
    }
    void <init>()
    {
        android.arch.lifecycle.Lifecycling r0;

        r0 := @this: android.arch.lifecycle.Lifecycling;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String getAdapterName(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_LifecycleAdapter");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    static android.arch.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    {
        java.lang.Object r0, $r4;
        boolean $z0;
        android.arch.lifecycle.GenericLifecycleObserver r1;
        java.lang.Class $r2;
        java.util.Map $r3;
        java.lang.reflect.Constructor r5, r7;
        java.lang.Object[] $r6;
        java.lang.IllegalAccessException r8;
        java.lang.RuntimeException $r9;
        java.lang.InstantiationException r10;
        java.lang.reflect.InvocationTargetException r11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.arch.lifecycle.GenericLifecycleObserver;

        if $z0 == 0 goto label01;

        r1 = (android.arch.lifecycle.GenericLifecycleObserver) r0;

        return r1;

     label01:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r3 = <android.arch.lifecycle.Lifecycling: java.util.Map sCallbackCache>;

     label03:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

     label04:
        r5 = (java.lang.reflect.Constructor) $r4;

        if r5 == null goto label07;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

     label05:
        r0 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label06:
        r1 = (android.arch.lifecycle.GenericLifecycleObserver) r0;

        return r1;

     label07:
        r5 = staticinvoke <android.arch.lifecycle.Lifecycling: java.lang.reflect.Constructor getGeneratedAdapterConstructor(java.lang.Class)>($r2);

     label08:
        r7 = r5;

        if r5 == null goto label17;

     label09:
        $z0 = virtualinvoke r5.<java.lang.reflect.Constructor: boolean isAccessible()>();

     label10:
        if $z0 != 0 goto label12;

     label11:
        virtualinvoke r5.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label12:
        $r3 = <android.arch.lifecycle.Lifecycling: java.util.Map sCallbackCache>;

     label13:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r7);

     label14:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

     label15:
        r0 = virtualinvoke r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label16:
        r1 = (android.arch.lifecycle.GenericLifecycleObserver) r0;

        return r1;

     label17:
        r7 = <android.arch.lifecycle.Lifecycling: java.lang.reflect.Constructor sREFLECTIVE>;

        goto label12;

     label18:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label19:
        r10 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

     label20:
        r11 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw $r9;

        catch java.lang.IllegalAccessException from label01 to label02 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label07 to label08 with label18;
        catch java.lang.IllegalAccessException from label09 to label10 with label18;
        catch java.lang.IllegalAccessException from label11 to label12 with label18;
        catch java.lang.IllegalAccessException from label13 to label14 with label18;
        catch java.lang.IllegalAccessException from label15 to label16 with label18;
        catch java.lang.InstantiationException from label01 to label02 with label19;
        catch java.lang.InstantiationException from label03 to label04 with label19;
        catch java.lang.InstantiationException from label05 to label06 with label19;
        catch java.lang.InstantiationException from label07 to label08 with label19;
        catch java.lang.InstantiationException from label09 to label10 with label19;
        catch java.lang.InstantiationException from label11 to label12 with label19;
        catch java.lang.InstantiationException from label13 to label14 with label19;
        catch java.lang.InstantiationException from label15 to label16 with label19;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label20;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label20;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label20;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label20;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label20;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label20;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label20;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label20;
    }
    private static java.lang.reflect.Constructor getGeneratedAdapterConstructor(java.lang.Class)
    {
        java.lang.Class r0, $r5;
        java.lang.Package $r1;
        java.lang.String $r2, $r3, r4;
        boolean $z0;
        java.lang.Class[] $r6;
        java.lang.reflect.Constructor $r7;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.ClassNotFoundException r9;
        java.lang.NoSuchMethodException r10;
        java.lang.RuntimeException $r11;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        if $r1 == null goto label02;

        $r2 = virtualinvoke $r1.<java.lang.Package: java.lang.String getName()>();

     label01:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        r4 = $r3;

        if $r3 != null goto label03;

        return null;

     label02:
        $r2 = "";

        goto label01;

     label03:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label11;

     label04:
        $r3 = staticinvoke <android.arch.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>(r4);

        r4 = $r3;

     label05:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

     label06:
        if $z0 == 0 goto label12;

     label07:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r4);

     label08:
        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = r0;

     label09:
        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6);

     label10:
        return $r7;

     label11:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label04;

     label12:
        $r8 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        r4 = $r2;

        goto label07;

     label15:
        r9 := @caughtexception;

        r0 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        if r0 == null goto label17;

        $r7 = staticinvoke <android.arch.lifecycle.Lifecycling: java.lang.reflect.Constructor getGeneratedAdapterConstructor(java.lang.Class)>(r0);

        return $r7;

     label16:
        r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r11;

     label17:
        return null;

        catch java.lang.ClassNotFoundException from label05 to label06 with label15;
        catch java.lang.ClassNotFoundException from label07 to label08 with label15;
        catch java.lang.ClassNotFoundException from label09 to label10 with label15;
        catch java.lang.NoSuchMethodException from label05 to label06 with label16;
        catch java.lang.NoSuchMethodException from label07 to label08 with label16;
        catch java.lang.NoSuchMethodException from label09 to label10 with label16;
        catch java.lang.ClassNotFoundException from label13 to label14 with label15;
        catch java.lang.NoSuchMethodException from label13 to label14 with label16;
    }
