android.support.v7.content.res.GrowingArrayUtils extends java.lang.Object
static final boolean $assertionsDisabled
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Landroid/support/v7/content/res/GrowingArrayUtils;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    private void <init>()
    {
        android.support.v7.content.res.GrowingArrayUtils r0;

        r0 := @this: android.support.v7.content.res.GrowingArrayUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int[] append(int[], int, int)
    {
        int $i0, $i1, $i2, $i3;
        int[] r0, $r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = lengthof $r1;

        if $i0 <= $i2 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i3 = $i0 + 1;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

        $i2 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r0, 0, $i0);

        $r1 = r0;

     label2:
        $r1[$i0] = $i1;

        return $r1;
    }
    public static long[] append(long[], int, long)
    {
        int $i0, $i2, $i3;
        long $l1;
        long[] r0, $r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = lengthof $r1;

        if $i0 <= $i2 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i3 = $i0 + 1;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

        $i2 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (long)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r0, 0, $i0);

        $r1 = r0;

     label2:
        $r1[$i0] = $l1;

        return $r1;
    }
    public static java.lang.Object[] append(java.lang.Object[], int, java.lang.Object)
    {
        int $i0, $i1, $i2;
        java.lang.Object r0, $r4;
        java.lang.Object[] r1, $r5;
        boolean $z0;
        java.lang.AssertionError $r2;
        java.lang.Class $r3;

        r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = lengthof r1;

        if $i0 <= $i1 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i1 = $i0 + 1;

        $i2 = lengthof r1;

        if $i1 <= $i2 goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i1 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i1);

        $r5 = (java.lang.Object[]) $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, $i0);

        r1 = $r5;

     label2:
        r1[$i0] = r0;

        return r1;
    }
    public static boolean[] append(boolean[], int, boolean)
    {
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        boolean[] r0, $r1;
        java.lang.AssertionError $r2;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i2 = $i0 + 1;

        $i1 = lengthof $r1;

        if $i2 <= $i1 goto label2;

        $i1 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (boolean)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r0, 0, $i0);

        $r1 = r0;

     label2:
        $r1[$i0] = $z0;

        return $r1;
    }
    public static int growSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 > 4 goto label1;

        return 8;

     label1:
        $i0 = $i0 * 2;

        return $i0;
    }
    public static int[] insert(int[], int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;
        int[] r0, r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = lengthof r1;

        if $i0 <= $i3 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i3 = $i0 + 1;

        $i4 = lengthof r1;

        if $i3 > $i4 goto label2;

        $i3 = $i1 + 1;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r1, $i3, $i0);

        r1[$i1] = $i2;

        return r1;

     label2:
        $i0 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (int)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i1);

        r0[$i1] = $i2;

        $i0 = $i1 + 1;

        $i2 = lengthof r1;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r0, $i0, $i2);

        return r0;
    }
    public static long[] insert(long[], int, int, long)
    {
        int $i0, $i1, $i3, $i4;
        long $l2;
        long[] r0, r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 := @parameter3: long;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = lengthof r1;

        if $i0 <= $i3 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i3 = $i0 + 1;

        $i4 = lengthof r1;

        if $i3 > $i4 goto label2;

        $i3 = $i1 + 1;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r1, $i3, $i0);

        r1[$i1] = $l2;

        return r1;

     label2:
        $i0 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (long)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i1);

        r0[$i1] = $l2;

        $i0 = $i1 + 1;

        $i3 = lengthof r1;

        $i3 = $i3 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r0, $i0, $i3);

        return r0;
    }
    public static java.lang.Object[] insert(java.lang.Object[], int, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0, $r4;
        java.lang.Object[] r1, $r5;
        boolean $z0;
        java.lang.AssertionError $r2;
        java.lang.Class $r3;

        r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $z0 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = lengthof r1;

        if $i0 <= $i2 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i2 = $i0 + 1;

        $i3 = lengthof r1;

        if $i2 > $i3 goto label2;

        $i2 = $i1 + 1;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r1, $i2, $i0);

        r1[$i1] = r0;

        return r1;

     label2:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i0 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i0);

        $r5 = (java.lang.Object[]) $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, $i1);

        $r5[$i1] = r0;

        $i0 = $i1 + 1;

        $i2 = lengthof r1;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, $r5, $i0, $i2);

        return $r5;
    }
    public static boolean[] insert(boolean[], int, int, boolean)
    {
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        boolean[] r0, r1;
        java.lang.AssertionError $r2;

        r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $z1 = <android.support.v7.content.res.GrowingArrayUtils: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $i2 = lengthof r1;

        if $i0 <= $i2 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i2 = $i0 + 1;

        $i3 = lengthof r1;

        if $i2 > $i3 goto label2;

        $i2 = $i1 + 1;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r1, $i2, $i0);

        r1[$i1] = $z0;

        return r1;

     label2:
        $i0 = staticinvoke <android.support.v7.content.res.GrowingArrayUtils: int growSize(int)>($i0);

        r0 = newarray (boolean)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i1);

        r0[$i1] = $z0;

        $i0 = $i1 + 1;

        $i2 = lengthof r1;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i1, r0, $i0, $i2);

        return r0;
    }
