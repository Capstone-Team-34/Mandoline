android.support.v7.util.SortedList extends java.lang.Object
private static final int CAPACITY_GROWTH
private static final int DELETION
private static final int INSERTION
public static final int INVALID_POSITION
private static final int LOOKUP
private static final int MIN_CAPACITY
private android.support.v7.util.SortedList$BatchedCallback mBatchedCallback
private android.support.v7.util.SortedList$Callback mCallback
java.lang.Object[] mData
private int mMergedSize
private java.lang.Object[] mOldData
private int mOldDataSize
private int mOldDataStart
private int mSize
private final java.lang.Class mTClass
    public void <init>(java.lang.Class, android.support.v7.util.SortedList$Callback)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Class r1;
        android.support.v7.util.SortedList$Callback r2;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.support.v7.util.SortedList$Callback;

        specialinvoke r0.<android.support.v7.util.SortedList: void <init>(java.lang.Class,android.support.v7.util.SortedList$Callback,int)>(r1, r2, 10);

        return;
    }
    public void <init>(java.lang.Class, android.support.v7.util.SortedList$Callback, int)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Class r1;
        android.support.v7.util.SortedList$Callback r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.Object[] $r4;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.support.v7.util.SortedList$Callback;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.util.SortedList: java.lang.Class mTClass> = r1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i0);

        $r4 = (java.lang.Object[]) $r3;

        r0.<android.support.v7.util.SortedList: java.lang.Object[] mData> = $r4;

        r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback> = r2;

        r0.<android.support.v7.util.SortedList: int mSize> = 0;

        return;
    }
    private int add(java.lang.Object, boolean)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1, r3;
        boolean $z0, $z1;
        java.lang.Object[] $r2;
        int $i0, i1, $i2;
        android.support.v7.util.SortedList$Callback $r4;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)>(r1, $r2, 0, $i0, 1);

        i1 = $i0;

        if $i0 != -1 goto label3;

        i1 = 0;

     label1:
        specialinvoke r0.<android.support.v7.util.SortedList: void addToData(int,java.lang.Object)>(i1, r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: void onInserted(int,int)>(i1, 1);

     label2:
        return i1;

     label3:
        $i2 = r0.<android.support.v7.util.SortedList: int mSize>;

        if $i0 >= $i2 goto label1;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        r3 = $r2[$i0];

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z1 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label4;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r2[$i0] = r1;

        return $i0;

     label4:
        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r2[$i0] = r1;

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: void onChanged(int,int)>($i0, 1);

        return $i0;
    }
    private void addAllInternal(java.lang.Object[])
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] r1, $r3;
        int $i0, $i1;
        android.support.v7.util.SortedList$Callback $r2;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = $r2 instanceof android.support.v7.util.SortedList$BatchedCallback;

        if $z0 != 0 goto label4;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.support.v7.util.SortedList: void beginBatchedUpdates()>();

     label2:
        $r3 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData> = $r3;

        r0.<android.support.v7.util.SortedList: int mOldDataStart> = 0;

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        r0.<android.support.v7.util.SortedList: int mOldDataSize> = $i0;

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, $r2);

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int deduplicate(java.lang.Object[])>(r1);

        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        if $i1 != 0 goto label5;

        r0.<android.support.v7.util.SortedList: java.lang.Object[] mData> = r1;

        r0.<android.support.v7.util.SortedList: int mSize> = $i0;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = $i0;

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r2.<android.support.v7.util.SortedList$Callback: void onInserted(int,int)>(0, $i0);

     label3:
        r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData> = null;

        if $z0 == 0 goto label6;

        virtualinvoke r0.<android.support.v7.util.SortedList: void endBatchedUpdates()>();

        return;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        specialinvoke r0.<android.support.v7.util.SortedList: void merge(java.lang.Object[],int)>(r1, $i0);

        goto label3;

     label6:
        return;
    }
    private void addToData(int, java.lang.Object)
    {
        android.support.v7.util.SortedList r0;
        int $i0, $i1, $i2;
        java.lang.Object r1, $r7;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5, $r8;
        java.lang.Class $r6;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        if $i0 <= $i1 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot add item to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because size is ");

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = lengthof $r5;

        if $i1 != $i2 goto label3;

        $r6 = r0.<android.support.v7.util.SortedList: java.lang.Class mTClass>;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i1 = lengthof $r5;

        $i1 = $i1 + 10;

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r6, $i1);

        $r5 = (java.lang.Object[]) $r7;

        $r8 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r5, 0, $i0);

        $r5[$i0] = r1;

        $r8 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i1 = $i0 + 1;

        $i2 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i2 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i0, $r5, $i1, $i2);

        r0.<android.support.v7.util.SortedList: java.lang.Object[] mData> = $r5;

     label2:
        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i0 = $i0 + 1;

        r0.<android.support.v7.util.SortedList: int mSize> = $i0;

        return;

     label3:
        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r8 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i1 = $i0 + 1;

        $i2 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i2 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i0, $r8, $i1, $i2);

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r5[$i0] = r1;

        goto label2;
    }
    private int deduplicate(java.lang.Object[])
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] r1;
        java.lang.Object r2, $r5;
        int i0, $i1, i2, i3;
        java.lang.IllegalArgumentException $r3;
        android.support.v7.util.SortedList$Callback $r4;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object[];

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input array must be non-empty");

        throw $r3;

     label1:
        $i1 = 0;

        i2 = 1;

        i3 = 1;

     label2:
        i0 = lengthof r1;

        if i3 >= i0 goto label9;

        r2 = r1[i3];

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $r5 = r1[$i1];

        i0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>($r5, r2);

        if i0 <= 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input must be sorted in ascending order.");

        throw $r3;

     label3:
        if i0 != 0 goto label7;

        i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findSameItem(java.lang.Object,java.lang.Object[],int,int)>(r2, r1, $i1, i2);

        if i0 == -1 goto label5;

        r1[i0] = r2;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if i2 == i3 goto label6;

        r1[i2] = r2;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        if i2 == i3 goto label8;

        r1[i2] = r2;

     label8:
        $i1 = i2;

        i2 = i2 + 1;

        goto label4;

     label9:
        return i2;
    }
    private int findIndexOf(java.lang.Object, java.lang.Object[], int, int, int)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;
        int $i0, i1, $i2, $i3, $i4;
        android.support.v7.util.SortedList$Callback $r4;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i0 := @parameter4: int;

     label1:
        if i1 >= $i2 goto label6;

        $i3 = i1 + $i2;

        $i3 = $i3 / 2;

        r3 = r2[$i3];

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i4 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>(r3, r1);

        if $i4 >= 0 goto label2;

        i1 = $i3 + 1;

        goto label1;

     label2:
        if $i4 != 0 goto label5;

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label3;

        return $i3;

     label3:
        i1 = specialinvoke r0.<android.support.v7.util.SortedList: int linearEqualitySearch(java.lang.Object,int,int,int)>(r1, $i3, i1, $i2);

        if $i0 != 1 goto label4;

        if i1 == -1 goto label9;

     label4:
        return i1;

     label5:
        $i2 = $i3;

        goto label1;

     label6:
        if $i0 != 1 goto label8;

     label7:
        return i1;

     label8:
        i1 = -1;

        goto label7;

     label9:
        return $i3;
    }
    private int findSameItem(java.lang.Object, java.lang.Object[], int, int)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1, $r3;
        java.lang.Object[] r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v7.util.SortedList$Callback $r4;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

     label1:
        if $i0 >= $i1 goto label3;

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $r3 = r2[$i0];

        $z0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }
    private int linearEqualitySearch(java.lang.Object, int, int, int)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1, r3;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.Object[] $r2;
        android.support.v7.util.SortedList$Callback $r4;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        i3 = $i0 + -1;

     label1:
        if i3 < $i1 goto label2;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        r3 = $r2[i3];

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i4 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>(r3, r1);

        if $i4 == 0 goto label5;

     label2:
        $i0 = $i0 + 1;

     label3:
        if $i0 >= $i2 goto label4;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        r3 = $r2[$i0];

        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i1 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>(r3, r1);

        if $i1 == 0 goto label7;

     label4:
        return -1;

     label5:
        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label6;

        return i3;

     label6:
        i3 = i3 + -1;

        goto label1;

     label7:
        $r4 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label8;

        return $i0;

     label8:
        $i0 = $i0 + 1;

        goto label3;
    }
    private void merge(java.lang.Object[], int)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] r1, $r5;
        int $i0, i1, $i2, $i3;
        java.lang.Object r2, r3;
        java.lang.Class $r4;
        android.support.v7.util.SortedList$Callback $r6;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        i1 = i1 + $i0;

        i1 = i1 + 10;

        $r4 = r0.<android.support.v7.util.SortedList: java.lang.Class mTClass>;

        r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, i1);

        $r5 = (java.lang.Object[]) r2;

        r0.<android.support.v7.util.SortedList: java.lang.Object[] mData> = $r5;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = 0;

        i1 = 0;

     label1:
        $i2 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i3 = r0.<android.support.v7.util.SortedList: int mOldDataSize>;

        if $i2 < $i3 goto label2;

        if i1 >= $i0 goto label7;

     label2:
        $i2 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i3 = r0.<android.support.v7.util.SortedList: int mOldDataSize>;

        if $i2 != $i3 goto label3;

        $i0 = $i0 - i1;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r5, $i2, $i0);

        i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        i1 = i1 + $i0;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = i1;

        i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        i1 = i1 + $i0;

        r0.<android.support.v7.util.SortedList: int mSize> = i1;

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        i1 = i1 - $i0;

        virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: void onInserted(int,int)>(i1, $i0);

        return;

     label3:
        if i1 != $i0 goto label4;

        $i0 = r0.<android.support.v7.util.SortedList: int mOldDataSize>;

        i1 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i0 = $i0 - i1;

        r1 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        i1 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r5, $i2, $i0);

        i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i0 = i1 + $i0;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = $i0;

        return;

     label4:
        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        r3 = $r5[$i2];

        r2 = r1[i1];

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i2 = virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>(r3, r2);

        if $i2 <= 0 goto label5;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i3 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = $i3;

        $r5[$i2] = r2;

        $i2 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i2 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mSize> = $i2;

        i1 = i1 + 1;

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i2 = $i2 + -1;

        virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: void onInserted(int,int)>($i2, 1);

        goto label1;

     label5:
        if $i2 != 0 goto label6;

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z0 == 0 goto label6;

        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i3 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = $i3;

        $r5[$i2] = r2;

        i1 = i1 + 1;

        $i2 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i2 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mOldDataStart> = $i2;

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z0 != 0 goto label1;

        $r6 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i2 = $i2 + -1;

        virtualinvoke $r6.<android.support.v7.util.SortedList$Callback: void onChanged(int,int)>($i2, 1);

        goto label1;

     label6:
        $r5 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i3 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mMergedSize> = $i3;

        $r5[$i2] = r3;

        $i2 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i2 = $i2 + 1;

        r0.<android.support.v7.util.SortedList: int mOldDataStart> = $i2;

        goto label1;

     label7:
        return;
    }
    private boolean remove(java.lang.Object, boolean)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Object[] $r2;
        int $i0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)>(r1, $r2, 0, $i0, 2);

        if $i0 != -1 goto label1;

        return 0;

     label1:
        specialinvoke r0.<android.support.v7.util.SortedList: void removeItemAtIndex(int,boolean)>($i0, $z0);

        return 1;
    }
    private void removeItemAtIndex(int, boolean)
    {
        android.support.v7.util.SortedList r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Object[] $r1, $r2;
        android.support.v7.util.SortedList$Callback $r3;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i1 = $i0 + 1;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i2 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i2 = $i2 - $i0;

        $i2 = $i2 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i0, $i2);

        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i1 = $i1 + -1;

        r0.<android.support.v7.util.SortedList: int mSize> = $i1;

        $r1 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        $r1[$i1] = null;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: void onRemoved(int,int)>($i0, 1);

     label1:
        return;
    }
    private void throwIfMerging()
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v7.util.SortedList;

        $r1 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call this method from within addAll");

        throw $r2;

     label1:
        return;
    }
    public int add(java.lang.Object)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int add(java.lang.Object,boolean)>(r1, 1);

        return $i0;
    }
    public void addAll(java.util.Collection)
    {
        android.support.v7.util.SortedList r0;
        java.util.Collection r1;
        java.lang.Class $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.Object[] $r4;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Class mTClass>;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i0);

        $r4 = (java.lang.Object[]) $r3;

        $r4 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        virtualinvoke r0.<android.support.v7.util.SortedList: void addAll(java.lang.Object[],boolean)>($r4, 1);

        return;
    }
    public transient void addAll(java.lang.Object[])
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] r1;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object[];

        virtualinvoke r0.<android.support.v7.util.SortedList: void addAll(java.lang.Object[],boolean)>(r1, 0);

        return;
    }
    public void addAll(java.lang.Object[], boolean)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object[] r1, $r4;
        boolean $z0;
        int $i0;
        java.lang.Object $r2;
        java.lang.Class $r3;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object[];

        $z0 := @parameter1: boolean;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return;

     label1:
        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.v7.util.SortedList: void addAllInternal(java.lang.Object[])>(r1);

        return;

     label2:
        $r3 = r0.<android.support.v7.util.SortedList: java.lang.Class mTClass>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r3, $i0);

        $r4 = (java.lang.Object[]) $r2;

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, $i0);

        specialinvoke r0.<android.support.v7.util.SortedList: void addAllInternal(java.lang.Object[])>($r4);

        return;
    }
    public void beginBatchedUpdates()
    {
        android.support.v7.util.SortedList r0;
        android.support.v7.util.SortedList$Callback $r1;
        boolean $z0;
        android.support.v7.util.SortedList$BatchedCallback $r2;

        r0 := @this: android.support.v7.util.SortedList;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $r1 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = $r1 instanceof android.support.v7.util.SortedList$BatchedCallback;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$BatchedCallback mBatchedCallback>;

        if $r2 != null goto label2;

        $r2 = new android.support.v7.util.SortedList$BatchedCallback;

        $r1 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        specialinvoke $r2.<android.support.v7.util.SortedList$BatchedCallback: void <init>(android.support.v7.util.SortedList$Callback)>($r1);

        r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$BatchedCallback mBatchedCallback> = $r2;

     label2:
        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$BatchedCallback mBatchedCallback>;

        r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback> = $r2;

        return;
    }
    public void clear()
    {
        android.support.v7.util.SortedList r0;
        int i0;
        java.lang.Object[] $r1;
        android.support.v7.util.SortedList$Callback $r2;

        r0 := @this: android.support.v7.util.SortedList;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        if i0 != 0 goto label1;

        return;

     label1:
        i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $r1 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, 0, i0, null);

        r0.<android.support.v7.util.SortedList: int mSize> = 0;

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r2.<android.support.v7.util.SortedList$Callback: void onRemoved(int,int)>(0, i0);

        return;
    }
    public void endBatchedUpdates()
    {
        android.support.v7.util.SortedList r0;
        android.support.v7.util.SortedList$BatchedCallback $r1;
        android.support.v7.util.SortedList$Callback $r2;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = $r2 instanceof android.support.v7.util.SortedList$BatchedCallback;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $r1 = (android.support.v7.util.SortedList$BatchedCallback) $r2;

        virtualinvoke $r1.<android.support.v7.util.SortedList$BatchedCallback: void dispatchLastEvent()>();

     label1:
        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $r1 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$BatchedCallback mBatchedCallback>;

        if $r2 != $r1 goto label2;

        $r1 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$BatchedCallback mBatchedCallback>;

        $r2 = $r1.<android.support.v7.util.SortedList$BatchedCallback: android.support.v7.util.SortedList$Callback mWrappedCallback>;

        r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback> = $r2;

     label2:
        return;
    }
    public java.lang.Object get(int) throws java.lang.IndexOutOfBoundsException
    {
        android.support.v7.util.SortedList r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.util.SortedList: int mSize>;

        if $i0 >= $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to get item at ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but size is ");

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r4 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        if $r4 == null goto label3;

        $i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        if $i0 < $i1 goto label3;

        $r4 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        $i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i0 = $i0 - $i1;

        $i1 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i0 = $i0 + $i1;

        $r5 = $r4[$i0];

        return $r5;

     label3:
        $r4 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r5 = $r4[$i0];

        return $r5;
    }
    public int indexOf(java.lang.Object)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        int $i0, $i1;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        if $r2 == null goto label3;

        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i0 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)>(r1, $r2, 0, $i0, 4);

        if $i0 == -1 goto label1;

        return $i0;

     label1:
        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mOldData>;

        $i0 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i1 = r0.<android.support.v7.util.SortedList: int mOldDataSize>;

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)>(r1, $r2, $i0, $i1, 4);

        if $i0 == -1 goto label2;

        $i1 = r0.<android.support.v7.util.SortedList: int mOldDataStart>;

        $i0 = $i0 - $i1;

        $i1 = r0.<android.support.v7.util.SortedList: int mMergedSize>;

        $i0 = $i0 + $i1;

        return $i0;

     label2:
        return -1;

     label3:
        $r2 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        $i0 = specialinvoke r0.<android.support.v7.util.SortedList: int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)>(r1, $r2, 0, $i0, 4);

        return $i0;
    }
    public void recalculatePositionOfItemAt(int)
    {
        android.support.v7.util.SortedList r0;
        int $i0, $i1;
        java.lang.Object $r1;
        android.support.v7.util.SortedList$Callback $r2;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $r1 = virtualinvoke r0.<android.support.v7.util.SortedList: java.lang.Object get(int)>($i0);

        specialinvoke r0.<android.support.v7.util.SortedList: void removeItemAtIndex(int,boolean)>($i0, 0);

        $i1 = specialinvoke r0.<android.support.v7.util.SortedList: int add(java.lang.Object,boolean)>($r1, 0);

        if $i0 == $i1 goto label1;

        $r2 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r2.<android.support.v7.util.SortedList$Callback: void onMoved(int,int)>($i0, $i1);

     label1:
        return;
    }
    public boolean remove(java.lang.Object)
    {
        android.support.v7.util.SortedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: android.support.v7.util.SortedList;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $z0 = specialinvoke r0.<android.support.v7.util.SortedList: boolean remove(java.lang.Object,boolean)>(r1, 1);

        return $z0;
    }
    public java.lang.Object removeItemAt(int)
    {
        android.support.v7.util.SortedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $r1 = virtualinvoke r0.<android.support.v7.util.SortedList: java.lang.Object get(int)>($i0);

        specialinvoke r0.<android.support.v7.util.SortedList: void removeItemAtIndex(int,boolean)>($i0, 1);

        return $r1;
    }
    public int size()
    {
        android.support.v7.util.SortedList r0;
        int i0;

        r0 := @this: android.support.v7.util.SortedList;

        i0 = r0.<android.support.v7.util.SortedList: int mSize>;

        return i0;
    }
    public void updateItemAt(int, java.lang.Object)
    {
        android.support.v7.util.SortedList r0;
        int $i0, $i1;
        java.lang.Object r1, $r2;
        android.support.v7.util.SortedList$Callback $r3;
        boolean $z0;
        java.lang.Object[] $r4;

        r0 := @this: android.support.v7.util.SortedList;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.support.v7.util.SortedList: void throwIfMerging()>();

        $r2 = virtualinvoke r0.<android.support.v7.util.SortedList: java.lang.Object get(int)>($i0);

        if $r2 == r1 goto label1;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $z0 = virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        if $r2 == r1 goto label4;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        $i1 = virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)>($r2, r1);

        if $i1 != 0 goto label4;

        $r4 = r0.<android.support.v7.util.SortedList: java.lang.Object[] mData>;

        $r4[$i0] = r1;

        if $z0 == 0 goto label6;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: void onChanged(int,int)>($i0, 1);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        if $z0 == 0 goto label5;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: void onChanged(int,int)>($i0, 1);

     label5:
        specialinvoke r0.<android.support.v7.util.SortedList: void removeItemAtIndex(int,boolean)>($i0, 0);

        $i1 = specialinvoke r0.<android.support.v7.util.SortedList: int add(java.lang.Object,boolean)>(r1, 0);

        if $i0 == $i1 goto label6;

        $r3 = r0.<android.support.v7.util.SortedList: android.support.v7.util.SortedList$Callback mCallback>;

        virtualinvoke $r3.<android.support.v7.util.SortedList$Callback: void onMoved(int,int)>($i0, $i1);

     label6:
        return;
    }
