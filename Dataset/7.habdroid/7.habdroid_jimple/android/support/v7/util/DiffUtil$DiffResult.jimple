android.support.v7.util.DiffUtil$DiffResult extends java.lang.Object
private static final int FLAG_CHANGED
private static final int FLAG_IGNORE
private static final int FLAG_MASK
private static final int FLAG_MOVED_CHANGED
private static final int FLAG_MOVED_NOT_CHANGED
private static final int FLAG_NOT_CHANGED
private static final int FLAG_OFFSET
private final android.support.v7.util.DiffUtil$Callback mCallback
private final boolean mDetectMoves
private final int[] mNewItemStatuses
private final int mNewListSize
private final int[] mOldItemStatuses
private final int mOldListSize
private final java.util.List mSnakes
    void <init>(android.support.v7.util.DiffUtil$Callback, java.util.List, int[], int[], boolean)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.util.DiffUtil$Callback $r1;
        java.util.List r2;
        int[] $r3, $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r1 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        r2 := @parameter1: java.util.List;

        $r3 := @parameter2: int[];

        $r4 := @parameter3: int[];

        $z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes> = r2;

        r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses> = $r3;

        r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses> = $r4;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, 0);

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, 0);

        r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback> = $r1;

        $i0 = virtualinvoke $r1.<android.support.v7.util.DiffUtil$Callback: int getOldListSize()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize> = $i0;

        $i0 = virtualinvoke $r1.<android.support.v7.util.DiffUtil$Callback: int getNewListSize()>();

        r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize> = $i0;

        r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves> = $z0;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void addRootSnake()>();

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findMatchingItems()>();

        return;
    }
    private void addRootSnake()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.util.DiffUtil$Snake r1;
        java.util.List $r2;
        boolean $z0;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r2 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        r1 = null;

     label1:
        if r1 == null goto label2;

        $i0 = r1.<android.support.v7.util.DiffUtil$Snake: int x>;

        if $i0 != 0 goto label2;

        $i0 = r1.<android.support.v7.util.DiffUtil$Snake: int y>;

        if $i0 == 0 goto label4;

     label2:
        r1 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke r1.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        r1.<android.support.v7.util.DiffUtil$Snake: int x> = 0;

        r1.<android.support.v7.util.DiffUtil$Snake: int y> = 0;

        r1.<android.support.v7.util.DiffUtil$Snake: boolean removal> = 0;

        r1.<android.support.v7.util.DiffUtil$Snake: int size> = 0;

        r1.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 0;

        $r2 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        return;

     label3:
        $r2 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r1 = (android.support.v7.util.DiffUtil$Snake) $r3;

        goto label1;

     label4:
        return;
    }
    private void dispatchAdditions(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List r1;
        android.support.v7.util.ListUpdateCallback $r2;
        int $i0, $i1, $i2, i3, i4, $i6;
        boolean $z0;
        int[] $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        long $l5;
        java.lang.String $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        android.support.v7.util.DiffUtil$PostponedUpdate r9;
        android.support.v7.util.DiffUtil$Callback $r10;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.support.v7.util.ListUpdateCallback;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z0 != 0 goto label1;

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onInserted(int,int)>($i0, $i1);

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i1 < 0 goto label9;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i4 = $i2 + $i1;

        i4 = $r3[i4];

        i4 = i4 & 31;

        lookupswitch(i4)
        {
            case 0: goto label4;
            case 4: goto label6;
            case 8: goto label6;
            case 16: goto label8;
            default: goto label3;
        };

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flag for pos ");

        $i0 = $i2 + $i1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l5 = (long) i4;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l5);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onInserted(int,int)>($i0, 1);

        $r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r8;

        i4 = r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        i4 = i4 + 1;

        r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = i4;

        goto label5;

     label6:
        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i3 = $i2 + $i1;

        i3 = $r3[i3];

        i3 = i3 >> 5;

        r9 = staticinvoke <android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean)>(r1, i3, 1);

        $i6 = r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onMoved(int,int)>($i6, $i0);

        if i4 != 4 goto label7;

        $r10 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        i4 = $i2 + $i1;

        $r8 = virtualinvoke $r10.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i3, i4);

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onChanged(int,int,java.lang.Object)>($i0, 1, $r8);

     label7:
        $i1 = $i1 + -1;

        goto label2;

     label8:
        r9 = new android.support.v7.util.DiffUtil$PostponedUpdate;

        i4 = $i2 + $i1;

        specialinvoke r9.<android.support.v7.util.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>(i4, $i0, 0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label7;

     label9:
        return;
    }
    private void dispatchRemovals(java.util.List, android.support.v7.util.ListUpdateCallback, int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List r1;
        android.support.v7.util.ListUpdateCallback $r2;
        int $i0, $i1, $i2, i3, i4, $i6, $i7;
        boolean $z0;
        int[] $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        long $l5;
        java.lang.String $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        android.support.v7.util.DiffUtil$PostponedUpdate r9;
        android.support.v7.util.DiffUtil$Callback $r10;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.support.v7.util.ListUpdateCallback;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z0 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z0 != 0 goto label1;

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onRemoved(int,int)>($i0, $i1);

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i1 < 0 goto label9;

        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i3 = $i2 + $i1;

        i3 = $r3[i3];

        i4 = i3 & 31;

        lookupswitch(i4)
        {
            case 0: goto label4;
            case 4: goto label6;
            case 8: goto label6;
            case 16: goto label8;
            default: goto label3;
        };

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flag for pos ");

        $i0 = $i2 + $i1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l5 = (long) i4;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l5);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        i3 = $i0 + $i1;

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onRemoved(int,int)>(i3, 1);

        $r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r8;

        i3 = r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        i3 = i3 + -1;

        r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = i3;

        goto label5;

     label6:
        $r3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i3 = $i2 + $i1;

        i3 = $r3[i3];

        i3 = i3 >> 5;

        r9 = staticinvoke <android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean)>(r1, i3, 0);

        $i6 = $i0 + $i1;

        $i7 = r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        $i7 = $i7 + -1;

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onMoved(int,int)>($i6, $i7);

        if i4 != 4 goto label7;

        i4 = r9.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        i4 = i4 + -1;

        $r10 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $i6 = $i2 + $i1;

        $r8 = virtualinvoke $r10.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>($i6, i3);

        interfaceinvoke $r2.<android.support.v7.util.ListUpdateCallback: void onChanged(int,int,java.lang.Object)>(i4, 1, $r8);

     label7:
        $i1 = $i1 + -1;

        goto label2;

     label8:
        r9 = new android.support.v7.util.DiffUtil$PostponedUpdate;

        i3 = $i2 + $i1;

        i4 = $i0 + $i1;

        specialinvoke r9.<android.support.v7.util.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>(i3, i4, 1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label7;

     label9:
        return;
    }
    private void findAddition(int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i3 = $i0 + -1;

        $i3 = $r1[$i3];

        if $i3 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: boolean findMatchingItem(int,int,int,boolean)>($i0, $i1, $i2, 0);

        return;
    }
    private boolean findMatchingItem(int, int, int, boolean)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i7;
        boolean $z0, $z1;
        java.util.List $r1;
        java.lang.Object $r2;
        android.support.v7.util.DiffUtil$Snake r3;
        android.support.v7.util.DiffUtil$Callback $r4;
        byte b8;
        int[] $r5;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label05;

        i4 = $i1 + -1;

        i5 = $i0;

        i6 = $i1 + -1;

     label01:
        $i1 = $i2;

     label02:
        if $i1 < 0 goto label14;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        r3 = (android.support.v7.util.DiffUtil$Snake) $r2;

        $i2 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        i3 = r3.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i2 = $i2 + i3;

        i3 = r3.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i7 = r3.<android.support.v7.util.DiffUtil$Snake: int size>;

        i3 = i3 + $i7;

        if $z0 == 0 goto label08;

        i5 = i5 + -1;

     label03:
        if i5 < $i2 goto label13;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z1 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i5, i4);

        if $z1 == 0 goto label07;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i5, i4);

        if $z0 == 0 goto label06;

        b8 = 8;

     label04:
        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i0 = i5 << 5;

        $i0 = $i0 | 16;

        $r5[i4] = $i0;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i0 = i4 << 5;

        $i0 = $i0 | b8;

        $r5[i5] = $i0;

        return 1;

     label05:
        i4 = $i0 + -1;

        i5 = $i0 + -1;

        i6 = $i1;

        goto label01;

     label06:
        b8 = 4;

        goto label04;

     label07:
        i5 = i5 + -1;

        goto label03;

     label08:
        $i2 = i6 + -1;

     label09:
        if $i2 < i3 goto label13;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z1 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i4, $i2);

        if $z1 == 0 goto label12;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i4, $i2);

        if $z0 == 0 goto label11;

        b8 = 8;

     label10:
        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i1 = $i0 + -1;

        i4 = $i2 << 5;

        i4 = i4 | 16;

        $r5[$i1] = i4;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i0 = $i0 + -1;

        $i0 = $i0 << 5;

        $i0 = $i0 | b8;

        $r5[$i2] = $i0;

        return 1;

     label11:
        b8 = 4;

        goto label10;

     label12:
        $i2 = $i2 + -1;

        goto label09;

     label13:
        i5 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        i6 = r3.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i1 = $i1 + -1;

        goto label02;

     label14:
        return 0;
    }
    private void findMatchingItems()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.List $r1;
        java.lang.Object $r2;
        android.support.v7.util.DiffUtil$Snake r3;
        boolean $z0;
        android.support.v7.util.DiffUtil$Callback $r4;
        byte b6;
        int[] $r5;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        i3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize>;

        i2 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize>;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $i4 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i4 = $i4 + -1;

     label1:
        if $i4 < 0 goto label9;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i4);

        r3 = (android.support.v7.util.DiffUtil$Snake) $r2;

        i0 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        i1 = r3.<android.support.v7.util.DiffUtil$Snake: int size>;

        i0 = i0 + i1;

        i1 = r3.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i5 = r3.<android.support.v7.util.DiffUtil$Snake: int size>;

        i1 = i1 + $i5;

        $z0 = r0.<android.support.v7.util.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z0 == 0 goto label4;

     label2:
        if i3 <= i0 goto label3;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findAddition(int,int,int)>(i3, i2, $i4);

        i3 = i3 + -1;

        goto label2;

     label3:
        if i2 <= i1 goto label4;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void findRemoval(int,int,int)>(i3, i2, $i4);

        i2 = i2 + -1;

        goto label3;

     label4:
        i3 = 0;

     label5:
        i2 = r3.<android.support.v7.util.DiffUtil$Snake: int size>;

        if i3 >= i2 goto label8;

        i2 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        i0 = i2 + i3;

        i2 = r3.<android.support.v7.util.DiffUtil$Snake: int y>;

        i2 = i2 + i3;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        $z0 = virtualinvoke $r4.<android.support.v7.util.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i0, i2);

        if $z0 == 0 goto label7;

        b6 = 1;

     label6:
        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i1 = i2 << 5;

        i1 = i1 | b6;

        $r5[i0] = i1;

        $r5 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i0 = i0 << 5;

        i0 = i0 | b6;

        $r5[i2] = i0;

        i3 = i3 + 1;

        goto label5;

     label7:
        b6 = 2;

        goto label6;

     label8:
        i3 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        i2 = r3.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i4 = $i4 + -1;

        goto label1;

     label9:
        return;
    }
    private void findRemoval(int, int, int)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i3 = $i1 + -1;

        $i3 = $r1[$i3];

        if $i3 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: boolean findMatchingItem(int,int,int,boolean)>($i0, $i1, $i2, 1);

        return;
    }
    private static android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List, int, boolean)
    {
        java.util.List r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object $r1;
        android.support.v7.util.DiffUtil$PostponedUpdate r2, $r3;
        byte $b3;

        r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label6;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r1;

        $i2 = r2.<android.support.v7.util.DiffUtil$PostponedUpdate: int posInOwnerList>;

        if $i2 != $i0 goto label5;

        $z1 = r2.<android.support.v7.util.DiffUtil$PostponedUpdate: boolean removal>;

        if $z1 != $z0 goto label5;

        interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>($i1);

        $i0 = $i1;

     label2:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label7;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (android.support.v7.util.DiffUtil$PostponedUpdate) $r1;

        $i1 = $r3.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos>;

        if $z0 == 0 goto label4;

        $b3 = 1;

     label3:
        $i1 = $b3 + $i1;

        $r3.<android.support.v7.util.DiffUtil$PostponedUpdate: int currentPos> = $i1;

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $b3 = -1;

        goto label3;

     label5:
        $i1 = $i1 + -1;

        goto label1;

     label6:
        return null;

     label7:
        return r2;
    }
    public void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3, i4, $i5;
        android.support.v7.util.ListUpdateCallback $r2;
        boolean $z0;
        android.support.v7.util.BatchingListUpdateCallback r3;
        java.util.List $r4;
        java.lang.Object $r5;
        android.support.v7.util.DiffUtil$Snake r6;
        int[] $r7;
        android.support.v7.util.DiffUtil$Callback $r8;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r2 := @parameter0: android.support.v7.util.ListUpdateCallback;

        $z0 = $r2 instanceof android.support.v7.util.BatchingListUpdateCallback;

        if $z0 == 0 goto label7;

        r3 = (android.support.v7.util.BatchingListUpdateCallback) $r2;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i3 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mOldListSize>;

        i4 = r0.<android.support.v7.util.DiffUtil$DiffResult: int mNewListSize>;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $i5 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i5 = $i5 + -1;

     label2:
        if $i5 < 0 goto label9;

        $r4 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);

        r6 = (android.support.v7.util.DiffUtil$Snake) $r5;

        i2 = r6.<android.support.v7.util.DiffUtil$Snake: int size>;

        i0 = r6.<android.support.v7.util.DiffUtil$Snake: int x>;

        i0 = i0 + i2;

        i1 = r6.<android.support.v7.util.DiffUtil$Snake: int y>;

        i1 = i1 + i2;

        if i0 >= i3 goto label3;

        i3 = i3 - i0;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)>(r1, r3, i0, i3, i0);

     label3:
        if i1 >= i4 goto label4;

        i4 = i4 - i1;

        specialinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)>(r1, r3, i0, i4, i1);

     label4:
        i2 = i2 + -1;

     label5:
        if i2 < 0 goto label8;

        $r7 = r0.<android.support.v7.util.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i4 = r6.<android.support.v7.util.DiffUtil$Snake: int x>;

        i4 = i4 + i2;

        i4 = $r7[i4];

        i4 = i4 & 31;

        if i4 != 2 goto label6;

        i4 = r6.<android.support.v7.util.DiffUtil$Snake: int x>;

        i4 = i4 + i2;

        $r8 = r0.<android.support.v7.util.DiffUtil$DiffResult: android.support.v7.util.DiffUtil$Callback mCallback>;

        i0 = r6.<android.support.v7.util.DiffUtil$Snake: int x>;

        i0 = i0 + i2;

        i3 = r6.<android.support.v7.util.DiffUtil$Snake: int y>;

        i3 = i3 + i2;

        $r5 = virtualinvoke $r8.<android.support.v7.util.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i0, i3);

        virtualinvoke r3.<android.support.v7.util.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)>(i4, 1, $r5);

     label6:
        i2 = i2 + -1;

        goto label5;

     label7:
        r3 = new android.support.v7.util.BatchingListUpdateCallback;

        specialinvoke r3.<android.support.v7.util.BatchingListUpdateCallback: void <init>(android.support.v7.util.ListUpdateCallback)>($r2);

        goto label1;

     label8:
        i3 = r6.<android.support.v7.util.DiffUtil$Snake: int x>;

        i4 = r6.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i5 = $i5 + -1;

        goto label2;

     label9:
        virtualinvoke r3.<android.support.v7.util.BatchingListUpdateCallback: void dispatchLastEvent()>();

        return;
    }
    public void dispatchUpdatesTo(android.support.v7.widget.RecyclerView$Adapter)
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        android.support.v7.widget.RecyclerView$Adapter $r1;
        android.support.v7.util.DiffUtil$DiffResult$1 $r2;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        $r2 = new android.support.v7.util.DiffUtil$DiffResult$1;

        specialinvoke $r2.<android.support.v7.util.DiffUtil$DiffResult$1: void <init>(android.support.v7.util.DiffUtil$DiffResult,android.support.v7.widget.RecyclerView$Adapter)>(r0, $r1);

        virtualinvoke r0.<android.support.v7.util.DiffUtil$DiffResult: void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback)>($r2);

        return;
    }
    java.util.List getSnakes()
    {
        android.support.v7.util.DiffUtil$DiffResult r0;
        java.util.List r1;

        r0 := @this: android.support.v7.util.DiffUtil$DiffResult;

        r1 = r0.<android.support.v7.util.DiffUtil$DiffResult: java.util.List mSnakes>;

        return r1;
    }
