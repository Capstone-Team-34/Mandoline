android.support.v7.widget.GapWorker extends java.lang.Object implements java.lang.Runnable
static final java.lang.ThreadLocal sGapWorker
static java.util.Comparator sTaskComparator
long mFrameIntervalNs
long mPostTimeNs
java.util.ArrayList mRecyclerViews
private java.util.ArrayList mTasks
    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        android.support.v7.widget.GapWorker$1 $r1;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.support.v7.widget.GapWorker: java.lang.ThreadLocal sGapWorker> = $r0;

        $r1 = new android.support.v7.widget.GapWorker$1;

        specialinvoke $r1.<android.support.v7.widget.GapWorker$1: void <init>()>();

        <android.support.v7.widget.GapWorker: java.util.Comparator sTaskComparator> = $r1;

        return;
    }
    void <init>()
    {
        android.support.v7.widget.GapWorker r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.v7.widget.GapWorker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks> = $r1;

        return;
    }
    private void buildTaskList()
    {
        android.support.v7.widget.GapWorker r0;
        int i0, i1, $i2, i3, i4, $i5;
        android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v7.widget.RecyclerView r4;
        android.support.v7.widget.GapWorker$Task r5;
        int[] $r6;
        boolean $z0;
        java.util.Comparator $r7;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

        i4 = 0;

     label01:
        if i4 >= $i2 goto label03;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (android.support.v7.widget.RecyclerView) $r3;

        i1 = virtualinvoke r4.<android.support.v7.widget.RecyclerView: int getWindowVisibility()>();

        if i1 != 0 goto label02;

        r1 = r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        virtualinvoke r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean)>(r4, 0);

        r1 = r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        i1 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount>;

        i3 = i3 + i1;

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        virtualinvoke $r2.<java.util.ArrayList: void ensureCapacity(int)>(i3);

        i3 = 0;

        i4 = 0;

     label04:
        if i4 >= $i2 goto label12;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (android.support.v7.widget.RecyclerView) $r3;

        i1 = virtualinvoke r4.<android.support.v7.widget.RecyclerView: int getWindowVisibility()>();

        if i1 == 0 goto label06;

     label05:
        i4 = i4 + 1;

        goto label04;

     label06:
        r1 = r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        i1 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDx>;

        i1 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i5 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mPrefetchDy>;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        i1 = i1 + $i5;

        $i5 = 0;

     label07:
        i0 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount>;

        i0 = i0 * 2;

        if $i5 >= i0 goto label05;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 < i0 goto label10;

        r5 = new android.support.v7.widget.GapWorker$Task;

        specialinvoke r5.<android.support.v7.widget.GapWorker$Task: void <init>()>();

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label08:
        $r6 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int[] mPrefetchArray>;

        i0 = $i5 + 1;

        i0 = $r6[i0];

        if i0 > i1 goto label11;

        $z0 = 1;

     label09:
        r5.<android.support.v7.widget.GapWorker$Task: boolean immediate> = $z0;

        r5.<android.support.v7.widget.GapWorker$Task: int viewVelocity> = i1;

        r5.<android.support.v7.widget.GapWorker$Task: int distanceToItem> = i0;

        r5.<android.support.v7.widget.GapWorker$Task: android.support.v7.widget.RecyclerView view> = r4;

        $r6 = r1.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int[] mPrefetchArray>;

        i0 = $r6[$i5];

        r5.<android.support.v7.widget.GapWorker$Task: int position> = i0;

        i3 = i3 + 1;

        $i5 = $i5 + 2;

        goto label07;

     label10:
        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (android.support.v7.widget.GapWorker$Task) $r3;

        goto label08;

     label11:
        $z0 = 0;

        goto label09;

     label12:
        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        $r7 = <android.support.v7.widget.GapWorker: java.util.Comparator sTaskComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r7);

        return;
    }
    private void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task, long)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.GapWorker$Task $r1;
        long $l0, l2;
        int $i1;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.GapWorker$Task;

        $l0 := @parameter1: long;

        $z0 = $r1.<android.support.v7.widget.GapWorker$Task: boolean immediate>;

        if $z0 == 0 goto label2;

        l2 = 9223372036854775807L;

     label1:
        $r2 = $r1.<android.support.v7.widget.GapWorker$Task: android.support.v7.widget.RecyclerView view>;

        $i1 = $r1.<android.support.v7.widget.GapWorker$Task: int position>;

        $r3 = specialinvoke r0.<android.support.v7.widget.GapWorker: android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long)>($r2, $i1, l2);

        if $r3 == null goto label3;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 != 0 goto label3;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r2 = (android.support.v7.widget.RecyclerView) $r5;

        specialinvoke r0.<android.support.v7.widget.GapWorker: void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long)>($r2, $l0);

        return;

     label2:
        l2 = $l0;

        goto label1;

     label3:
        return;
    }
    private void flushTasksWithDeadline(long)
    {
        android.support.v7.widget.GapWorker r0;
        long $l0;
        int i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.widget.GapWorker$Task r3;
        android.support.v7.widget.RecyclerView $r4;

        r0 := @this: android.support.v7.widget.GapWorker;

        $l0 := @parameter0: long;

        i1 = 0;

     label1:
        $r1 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r1 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mTasks>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.support.v7.widget.GapWorker$Task) $r2;

        $r4 = r3.<android.support.v7.widget.GapWorker$Task: android.support.v7.widget.RecyclerView view>;

        if $r4 != null goto label2;

        return;

     label2:
        specialinvoke r0.<android.support.v7.widget.GapWorker: void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long)>(r3, $l0);

        virtualinvoke r3.<android.support.v7.widget.GapWorker$Task: void clear()>();

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }
    static boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView, int)
    {
        android.support.v7.widget.RecyclerView $r0;
        int $i0, $i1, i2, $i3;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $r1 = $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        $r1 = $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i2);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $i3 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 != $i0 goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }
    private void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView, long)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.RecyclerView $r1;
        long $l0;
        int i1, $i2;
        android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl r2;
        android.support.v7.widget.RecyclerView$Adapter $r3;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        int[] $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $l0 := @parameter1: long;

        if $r1 != null goto label01;

        return;

     label01:
        $z0 = $r1.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label02;

        $r4 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i2 = virtualinvoke $r4.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        if $i2 == 0 goto label02;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void removeAndRecycleViews()>();

     label02:
        r2 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        virtualinvoke r2.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean)>($r1, 1);

        $i2 = r2.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount>;

        if $i2 == 0 goto label11;

     label03:
        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV Nested Prefetch");

        $r5 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$State: void prepareForNestedPrefetch(android.support.v7.widget.RecyclerView$Adapter)>($r3);

     label04:
        $i2 = 0;

     label05:
        i1 = r2.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int mCount>;

     label06:
        i1 = i1 * 2;

        if $i2 >= i1 goto label09;

     label07:
        $r6 = r2.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: int[] mPrefetchArray>;

        i1 = $r6[$i2];

        specialinvoke r0.<android.support.v7.widget.GapWorker: android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long)>($r1, i1, $l0);

     label08:
        $i2 = $i2 + 2;

        goto label05;

     label09:
        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        throw $r7;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }
    private android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView, int, long)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;
        long $l1;
        android.support.v7.widget.RecyclerView$Recycler r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        android.view.View $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $z0 = staticinvoke <android.support.v7.widget.GapWorker: boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int)>($r1, $i0);

        if $z0 == 0 goto label01;

        return null;

     label01:
        r2 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

     label02:
        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r3 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$Recycler: android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)>($i0, 0, $l1);

     label03:
        if $r3 == null goto label09;

     label04:
        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isBound()>();

     label05:
        if $z0 == 0 goto label10;

     label06:
        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

     label07:
        if $z0 != 0 goto label10;

     label08:
        $r4 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$Recycler: void recycleView(android.view.View)>($r4);

     label09:
        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll(boolean)>(0);

        return $r3;

     label10:
        virtualinvoke r2.<android.support.v7.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean)>($r3, 0);

     label11:
        goto label09;

     label12:
        $r5 := @caughtexception;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll(boolean)>(0);

        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }
    public void add(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.RecyclerView $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }
    void postFromTraversal(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;
        boolean $z0;
        long $l2;
        byte $b3;
        android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl $r2;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $l2 = r0.<android.support.v7.widget.GapWorker: long mPostTimeNs>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $l2 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: long getNanoTime()>();

        r0.<android.support.v7.widget.GapWorker: long mPostTimeNs> = $l2;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean post(java.lang.Runnable)>(r0);

     label1:
        $r2 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry>;

        virtualinvoke $r2.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: void setPrefetchVector(int,int)>($i0, $i1);

        return;
    }
    void prefetch(long)
    {
        android.support.v7.widget.GapWorker r0;
        long $l0;

        r0 := @this: android.support.v7.widget.GapWorker;

        $l0 := @parameter0: long;

        specialinvoke r0.<android.support.v7.widget.GapWorker: void buildTaskList()>();

        specialinvoke r0.<android.support.v7.widget.GapWorker: void flushTasksWithDeadline(long)>($l0);

        return;
    }
    public void remove(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.GapWorker r0;
        android.support.v7.widget.RecyclerView $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.GapWorker;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void run()
    {
        android.support.v7.widget.GapWorker r0;
        long l0, $l4;
        java.util.ArrayList $r1;
        boolean $z0;
        int $i1, i2, $i3;
        java.lang.Object $r2;
        android.support.v7.widget.RecyclerView r3;
        byte $b5;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.support.v7.widget.GapWorker;

     label01:
        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV Prefetch");

        $r1 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

     label02:
        if $z0 == 0 goto label03;

        r0.<android.support.v7.widget.GapWorker: long mPostTimeNs> = 0L;

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label03:
        $r1 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label04:
        l0 = 0L;

        i2 = 0;

     label05:
        if i2 >= $i1 goto label10;

     label06:
        $r1 = r0.<android.support.v7.widget.GapWorker: java.util.ArrayList mRecyclerViews>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (android.support.v7.widget.RecyclerView) $r2;

        $i3 = virtualinvoke r3.<android.support.v7.widget.RecyclerView: int getWindowVisibility()>();

     label07:
        if $i3 != 0 goto label09;

     label08:
        $l4 = virtualinvoke r3.<android.support.v7.widget.RecyclerView: long getDrawingTime()>();

        l0 = staticinvoke <java.lang.Math: long max(long,long)>($l4, l0);

     label09:
        i2 = i2 + 1;

        goto label05;

     label10:
        $b5 = l0 cmp 0L;

        if $b5 != 0 goto label11;

        r0.<android.support.v7.widget.GapWorker: long mPostTimeNs> = 0L;

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label11:
        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l4 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        l0 = r0.<android.support.v7.widget.GapWorker: long mFrameIntervalNs>;

     label12:
        l0 = $l4 + l0;

     label13:
        virtualinvoke r0.<android.support.v7.widget.GapWorker: void prefetch(long)>(l0);

     label14:
        r0.<android.support.v7.widget.GapWorker: long mPostTimeNs> = 0L;

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label15:
        $r5 := @caughtexception;

        r0.<android.support.v7.widget.GapWorker: long mPostTimeNs> = 0L;

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
