android.support.v7.widget.RecyclerView$LayoutManager extends java.lang.Object
boolean mAutoMeasure
android.support.v7.widget.ChildHelper mChildHelper
private int mHeight
private int mHeightMode
android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck
private final android.support.v7.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback
boolean mIsAttachedToWindow
private boolean mItemPrefetchEnabled
private boolean mMeasurementCacheEnabled
int mPrefetchMaxCountObserved
boolean mPrefetchMaxObservedInInitialPrefetch
android.support.v7.widget.RecyclerView mRecyclerView
boolean mRequestedSimpleAnimations
android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller
android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck
private final android.support.v7.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback
private int mWidth
private int mWidthMode
    public void <init>()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutManager$1 $r1;
        android.support.v7.widget.RecyclerView$LayoutManager$2 $r2;
        android.support.v7.widget.ViewBoundsCheck $r3;
        android.support.v7.widget.ViewBoundsCheck$Callback $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.support.v7.widget.RecyclerView$LayoutManager$1;

        specialinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager$1: void <init>(android.support.v7.widget.RecyclerView$LayoutManager)>(r0);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback> = $r1;

        $r2 = new android.support.v7.widget.RecyclerView$LayoutManager$2;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager$2: void <init>(android.support.v7.widget.RecyclerView$LayoutManager)>(r0);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback> = $r2;

        $r3 = new android.support.v7.widget.ViewBoundsCheck;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback>;

        specialinvoke $r3.<android.support.v7.widget.ViewBoundsCheck: void <init>(android.support.v7.widget.ViewBoundsCheck$Callback)>($r4);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck> = $r3;

        $r3 = new android.support.v7.widget.ViewBoundsCheck;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback>;

        specialinvoke $r3.<android.support.v7.widget.ViewBoundsCheck: void <init>(android.support.v7.widget.ViewBoundsCheck$Callback)>($r4);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck> = $r3;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = 0;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = 1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = 1;

        return;
    }
    static void access$1400(android.support.v7.widget.RecyclerView$LayoutManager, android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager $r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$SmoothScroller;

        specialinvoke $r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)>($r1);

        return;
    }
    private void addViewInt(android.view.View, int, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        boolean $z0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.ViewInfoStore $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v7.widget.RecyclerView$LayoutParams r6;
        android.support.v7.widget.ChildHelper $r7;
        android.view.ViewParent $r8;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        android.support.v7.widget.RecyclerView$SmoothScroller $r12;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label06;

     label01:
        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<android.support.v7.widget.ViewInfoStore: void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label02:
        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.v7.widget.RecyclerView$LayoutParams) $r5;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z0 == 0 goto label08;

     label03:
        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z0 == 0 goto label07;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void unScrap()>();

     label04:
        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r7.<android.support.v7.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r5, 0);

     label05:
        $z0 = r6.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>;

        if $z0 == 0 goto label12;

        $r1 = $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        r6.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

        return;

     label06:
        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<android.support.v7.widget.ViewInfoStore: void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

        goto label02;

     label07:
        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

        goto label04;

     label08:
        $r8 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r8 != $r3 goto label11;

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r7.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>($r1);

        if $i0 != -1 goto label09;

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r7.<android.support.v7.widget.ChildHelper: int getChildCount()>();

     label09:
        if $i1 != -1 goto label10;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added View has RecyclerView as parent but view is not a real child. Unfiltered index:");

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: int indexOfChild(android.view.View)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r11 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label10:
        if $i1 == $i0 goto label05;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r0 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void moveView(int,int)>($i1, $i0);

        goto label05;

     label11:
        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r7.<android.support.v7.widget.ChildHelper: void addView(android.view.View,int,boolean)>($r1, $i0, 0);

        r6.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        $r12 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r12 == null goto label05;

        $r12 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r12.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label05;

        $r12 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r12.<android.support.v7.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)>($r1);

        goto label05;

     label12:
        return;
    }
    public static int chooseSize(int, int, int)
    {
        int $i0, $i1, $i2, $i3, i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        i4 = $i0;

        lookupswitch($i3)
        {
            case -2147483648: goto label3;
            case 1073741824: goto label2;
            default: goto label1;
        };

     label1:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

     label2:
        return i4;

     label3:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;
    }
    private void detachViewInternal(int, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void detachViewFromParent(int)>($i0);

        return;
    }
    public static int getChildMeasureSpec(int, int, int, int, boolean)
    {
        int $i0, $i1, $i2, $i3, i4;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $i0 = $i0 - $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i2 = 0;

        i4 = 0;

        if $z0 == 0 goto label07;

        if $i3 < 0 goto label02;

        $i2 = $i3;

        i4 = 1073741824;

     label01:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, i4);

        return $i0;

     label02:
        if $i3 != -1 goto label06;

        lookupswitch($i1)
        {
            case -2147483648: goto label04;
            case 0: goto label05;
            case 1073741824: goto label04;
            default: goto label03;
        };

     label03:
        goto label01;

     label04:
        $i2 = $i0;

        i4 = $i1;

        goto label01;

     label05:
        $i2 = 0;

        i4 = 0;

        goto label01;

     label06:
        if $i3 != -2 goto label01;

        $i2 = 0;

        i4 = 0;

        goto label01;

     label07:
        if $i3 < 0 goto label08;

        $i2 = $i3;

        i4 = 1073741824;

        goto label01;

     label08:
        if $i3 != -1 goto label09;

        $i2 = $i0;

        i4 = $i1;

        goto label01;

     label09:
        if $i3 != -2 goto label01;

        $i2 = $i0;

        if $i1 == -2147483648 goto label10;

        if $i1 != 1073741824 goto label11;

     label10:
        i4 = -2147483648;

        goto label01;

     label11:
        i4 = 0;

        goto label01;
    }
    public static int getChildMeasureSpec(int, int, int, boolean)
    {
        int $i0, $i1, $i2, i3;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = 0;

        i3 = 0;

        if $z0 == 0 goto label3;

        if $i2 < 0 goto label2;

        $i1 = $i2;

        i3 = 1073741824;

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, i3);

        return $i0;

     label2:
        $i1 = 0;

        i3 = 0;

        goto label1;

     label3:
        if $i2 < 0 goto label4;

        $i1 = $i2;

        i3 = 1073741824;

        goto label1;

     label4:
        if $i2 != -1 goto label5;

        $i1 = $i0;

        i3 = 1073741824;

        goto label1;

     label5:
        if $i2 != -2 goto label1;

        $i1 = $i0;

        i3 = -2147483648;

        goto label1;
    }
    private int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2;
        android.graphics.Rect $r3;
        boolean $z0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        int[] r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.Rect;

        $z0 := @parameter3: boolean;

        r4 = newarray (int)[2];

        $i6 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i7 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i5 = i5 - i3;

        i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i4 = i3 - i4;

        i3 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        i1 = $r3.<android.graphics.Rect: int left>;

        i3 = i3 + i1;

        i1 = virtualinvoke $r2.<android.view.View: int getScrollX()>();

        i1 = i3 - i1;

        i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i8 = $r3.<android.graphics.Rect: int top>;

        i3 = i3 + $i8;

        $i8 = virtualinvoke $r2.<android.view.View: int getScrollY()>();

        i3 = i3 - $i8;

        $i8 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        i2 = i1 + $i8;

        $i8 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        i0 = i3 + $i8;

        $i8 = i1 - $i6;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i8);

        $i8 = i3 - $i7;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i8);

        $i10 = i2 - i5;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        i4 = i0 - i4;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, i4);

        i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if i0 != 1 goto label4;

        if $i10 == 0 goto label3;

        $i6 = $i10;

     label1:
        if $i8 == 0 goto label6;

        $i7 = $i8;

     label2:
        r4[0] = $i6;

        r4[1] = $i7;

        return r4;

     label3:
        $i6 = i2 - i5;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i6);

        goto label1;

     label4:
        if $i9 == 0 goto label5;

        $i6 = $i9;

        goto label1;

     label5:
        $i6 = i1 - $i6;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i10);

        goto label1;

     label6:
        $i7 = i3 - $i7;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i4);

        goto label2;
    }
    public static android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r1;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$LayoutManager$Properties r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r2 = new android.support.v7.widget.RecyclerView$LayoutManager$Properties;

        specialinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: void <init>()>();

        $r3 = <android.support.v7.recyclerview.R$styleable: int[] RecyclerView>;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r3, $i0, $i1);

        $i0 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_android_orientation>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 1);

        r2.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: int orientation> = $i0;

        $i0 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_spanCount>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 1);

        r2.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: int spanCount> = $i0;

        $i0 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_reverseLayout>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r2.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout> = $z0;

        $i0 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_stackFromEnd>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r2.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return r2;
    }
    private boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1, i2, i3, $i4, $i5, $i6;
        android.graphics.Rect r2;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: android.view.View getFocusedChild()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i3 = i2 - i3;

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i6 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i2 = i2 - $i6;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r2 = $r1.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r3, r2);

        $i6 = r2.<android.graphics.Rect: int left>;

        $i6 = $i6 - $i0;

        if $i6 >= i3 goto label2;

        i3 = r2.<android.graphics.Rect: int right>;

        $i0 = i3 - $i0;

        if $i0 <= $i4 goto label2;

        $i0 = r2.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        if $i0 >= i2 goto label2;

        $i0 = r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        if $i0 <= $i5 goto label2;

        return 1;

     label2:
        return 0;
    }
    private static boolean isMeasurementUpToDate(int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = 1;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        if $i2 <= 0 goto label2;

        if $i0 == $i2 goto label2;

        $z0 = 0;

     label1:
        return $z0;

     label2:
        lookupswitch($i3)
        {
            case -2147483648: goto label4;
            case 0: goto label1;
            case 1073741824: goto label5;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        if $i1 >= $i0 goto label6;

        return 0;

     label5:
        if $i1 == $i0 goto label6;

        return 0;

     label6:
        return 1;
    }
    private void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 != $r1 goto label1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller> = null;

     label1:
        return;
    }
    private void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler, int, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r4;
        android.support.v7.widget.RecyclerView$Adapter $r5;
        android.support.v7.widget.ViewInfoStore $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.View;

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeViewAt(int)>($i0);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

        return;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewAt(int)>($i0);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void scrapView(android.view.View)>($r2);

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r6 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r6.<android.support.v7.widget.ViewInfoStore: void onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

        return;
    }
    public void addDisappearingView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)>($r1, -1);

        return;
    }
    public void addDisappearingView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>($r1, $i0, 1);

        return;
    }
    public void addView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)>($r1, -1);

        return;
    }
    public void addView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>($r1, $i0, 0);

        return;
    }
    public void assertInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.String $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)>($r1);

     label1:
        return;
    }
    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.String $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>($r1);

     label1:
        return;
    }
    public void attachView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>($r1, -1);

        return;
    }
    public void attachView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams)>($r1, $i0, $r3);

        return;
    }
    public void attachView(android.view.View, int, android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;
        android.support.v7.widget.RecyclerView$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r4;
        android.support.v7.widget.ViewInfoStore $r5;
        android.support.v7.widget.ChildHelper $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$LayoutParams;

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<android.support.v7.widget.ViewInfoStore: void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

     label1:
        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        virtualinvoke $r6.<android.support.v7.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>($r1, $i0, $r2, $z0);

        return;

     label2:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r5.<android.support.v7.widget.ViewInfoStore: void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

        goto label1;
    }
    public void calculateItemDecorationsForChild(android.view.View, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r3;
        android.support.v7.widget.RecyclerView $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r4 != null goto label1;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r1);

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return;
    }
    public boolean canScrollHorizontally()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }
    public boolean canScrollVertically()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }
    public boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$LayoutParams;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public void collectAdjacentPrefetchPositions(int, int, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $r2 := @parameter3: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }
    public void collectInitialPrefetchPositions(int, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        return;
    }
    public int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>($r1, $i0, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    public void detachAndScrapView(android.view.View, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;
        android.support.v7.widget.ChildHelper $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>($r1);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>($r2, $i0, $r1);

        return;
    }
    public void detachAndScrapViewAt(int, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>($r1, $i0, $r2);

        return;
    }
    public void detachView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>($r1);

        if $i0 < 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>($i0, $r1);

     label1:
        return;
    }
    public void detachViewAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>($i0, $r1);

        return;
    }
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onAttachedToWindow(android.support.v7.widget.RecyclerView)>($r1);

        return;
    }
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow> = 0;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)>($r1, $r2);

        return;
    }
    public void endAnimation(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$ItemAnimator $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r4 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label1:
        return;
    }
    public android.view.View findContainingItemView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.ChildHelper $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r1 != null goto label2;

        return null;

     label2:
        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        return null;

     label3:
        return $r1;
    }
    public android.view.View findViewByPosition(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1, i2, $i3;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$State $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label4;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i2);

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 != null goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i3 != $i0 goto label2;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label2;

        return $r1;

     label4:
        return null;

     label5:
        return $r1;
    }
public abstract android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() { 
// no body
} 
    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = new android.support.v7.widget.RecyclerView$LayoutParams;

        specialinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return $r3;
    }
    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutParams $r2, r3;
        android.view.ViewGroup$MarginLayoutParams r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v7.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new android.support.v7.widget.RecyclerView$LayoutParams;

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) r1;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.support.v7.widget.RecyclerView$LayoutParams)>(r3);

        return $r2;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new android.support.v7.widget.RecyclerView$LayoutParams;

        r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r4);

        return $r2;

     label2:
        $r2 = new android.support.v7.widget.RecyclerView$LayoutParams;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }
    public int getBaseline()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return -1;
    }
    public int getBottomDecorationHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int bottom>;

        return i0;
    }
    public android.view.View getChildAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>($i0);

        return $r1;

     label1:
        return null;
    }
    public int getChildCount()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.ChildHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        return $i0;

     label1:
        return 0;
    }
    public boolean getClipToPadding()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = $r1.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$Adapter $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r4 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        return $i0;

     label2:
        return 1;
    }
    public int getDecoratedBottom(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }
    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <android.support.v7.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;
    }
    public int getDecoratedLeft(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)>($r1);

        $i0 = $i0 - $i1;

        return $i0;
    }
    public int getDecoratedMeasuredHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i1;

        $i1 = r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i1;

        return $i0;
    }
    public int getDecoratedMeasuredWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i1;

        $i1 = r2.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i1;

        return $i0;
    }
    public int getDecoratedRight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }
    public int getDecoratedTop(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)>($r1);

        $i0 = $i0 - $i1;

        return $i0;
    }
    public android.view.View getFocusedChild()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2;
        android.support.v7.widget.ChildHelper $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: android.view.View getFocusedChild()>();

        if $r2 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        return $r2;
    }
    public int getHeight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeight>;

        return i0;
    }
    public int getHeightMode()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeightMode>;

        return i0;
    }
    public int getItemCount()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter getAdapter()>();

     label1:
        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        return $i0;

     label2:
        $r2 = null;

        goto label1;

     label3:
        return 0;
    }
    public int getItemViewType(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        return $i0;
    }
    public int getLayoutDirection()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r1);

        return $i0;
    }
    public int getLeftDecorationWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int left>;

        return i0;
    }
    public int getMinimumHeight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        return $i0;
    }
    public int getMinimumWidth()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumWidth(android.view.View)>($r1);

        return $i0;
    }
    public int getPaddingBottom()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        return $i0;

     label1:
        return 0;
    }
    public int getPaddingEnd()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r1);

        return $i0;

     label1:
        return 0;
    }
    public int getPaddingLeft()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        return $i0;

     label1:
        return 0;
    }
    public int getPaddingRight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        return $i0;

     label1:
        return 0;
    }
    public int getPaddingStart()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r1);

        return $i0;

     label1:
        return 0;
    }
    public int getPaddingTop()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        return $i0;

     label1:
        return 0;
    }
    public int getPosition(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()>();

        return $i0;
    }
    public int getRightDecorationWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int right>;

        return i0;
    }
    public int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$Adapter $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r4 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        return $i0;

     label2:
        return 1;
    }
    public int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public int getTopDecorationHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        i0 = $r4.<android.graphics.Rect: int top>;

        return i0;
    }
    public void getTransformedBoundingBox(android.view.View, boolean, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        boolean $z0;
        android.graphics.Rect $r2, r3;
        android.graphics.RectF r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v7.widget.RecyclerView$LayoutParams $r6;
        android.support.v7.widget.RecyclerView $r7;
        android.graphics.Matrix $r8;
        float $f0;
        double $d0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.graphics.Rect;

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.support.v7.widget.RecyclerView$LayoutParams) $r5;

        r3 = $r6.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i1 = r3.<android.graphics.Rect: int left>;

        $i1 = neg $i1;

        $i2 = r3.<android.graphics.Rect: int top>;

        $i2 = neg $i2;

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i0 = r3.<android.graphics.Rect: int right>;

        $i3 = $i3 + $i0;

        $i4 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i0 = r3.<android.graphics.Rect: int bottom>;

        $i0 = $i4 + $i0;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i0);

     label1:
        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r7 == null goto label2;

        $r8 = virtualinvoke $r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        if $r8 == null goto label2;

        $z0 = virtualinvoke $r8.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label2;

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r4 = $r7.<android.support.v7.widget.RecyclerView: android.graphics.RectF mTempRectF>;

        virtualinvoke r4.<android.graphics.RectF: void set(android.graphics.Rect)>($r2);

        virtualinvoke $r8.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r4);

        $f0 = r4.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i1 = (int) $d0;

        $f0 = r4.<android.graphics.RectF: float top>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i2 = (int) $d0;

        $f0 = r4.<android.graphics.RectF: float right>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i3 = (int) $d0;

        $f0 = r4.<android.graphics.RectF: float bottom>;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i0);

     label2:
        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i1, $i2);

        return;

     label3:
        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        goto label1;
    }
    public int getWidth()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidth>;

        return i0;
    }
    public int getWidthMode()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidthMode>;

        return i0;
    }
    boolean hasFlexibleChildInBothOrientations()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, i1, $i2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i2 >= 0 goto label2;

        $i2 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 >= 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    public boolean hasFocus()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void ignoreView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        android.support.v7.widget.RecyclerView $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.support.v7.widget.RecyclerView$ViewHolder $r7;
        android.support.v7.widget.ViewInfoStore $r8;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 != $r3 goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: int indexOfChild(android.view.View)>($r1);

        if $i0 != -1 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View should be fully attached to be ignored");

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r6 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: java.lang.String exceptionLabel()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke $r7.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(128);

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r8 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r8.<android.support.v7.widget.ViewInfoStore: void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)>($r7);

        return;
    }
    public boolean isAttachedToWindow()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow>;

        return z0;
    }
    public boolean isAutoMeasureEnabled()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>;

        return z0;
    }
    public boolean isFocused()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isItemPrefetchEnabled()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        return z0;
    }
    public boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public boolean isMeasurementCacheEnabled()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        return z0;
    }
    public boolean isSmoothScrolling()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isViewPartiallyVisible(android.view.View, boolean, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        boolean $z0, $z1, $z2;
        android.support.v7.widget.ViewBoundsCheck $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z1 = 1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $z2 = virtualinvoke $r2.<android.support.v7.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)>($r1, 24579);

        if $z2 == 0 goto label2;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $z2 = virtualinvoke $r2.<android.support.v7.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)>($r1, 24579);

        if $z2 == 0 goto label2;

        $z2 = 1;

     label1:
        if $z0 == 0 goto label3;

        return $z2;

     label2:
        $z2 = 0;

        goto label1;

     label3:
        if $z2 != 0 goto label5;

     label4:
        return $z1;

     label5:
        $z1 = 0;

        goto label4;
    }
    public void layoutDecorated(android.view.View, int, int, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i0 = $i4 + $i0;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i1 = $i4 + $i1;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i4;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public void layoutDecoratedWithMargins(android.view.View, int, int, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i0 = $i4 + $i0;

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i0 = $i0 + $i4;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i1 = $i4 + $i1;

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $i1 = $i1 + $i4;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i2 = $i2 - $i4;

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i2 = $i2 - $i4;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i3 - $i4;

        $i3 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i3 = $i4 - $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public void measureChild(android.view.View, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams r3;
        android.support.v7.widget.RecyclerView $r4;
        android.graphics.Rect $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r1);

        $i2 = $r5.<android.graphics.Rect: int left>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i2 = $i0 + $i2;

        $i0 = $r5.<android.graphics.Rect: int top>;

        $i3 = $r5.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i3;

        $i0 = $i1 + $i0;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i4 = $i4 + $i5;

        $i2 = $i4 + $i2;

        $i4 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $i1 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i1, $i3, $i2, $i4, $z0);

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i4 = $i4 + $i5;

        $i0 = $i4 + $i0;

        $i4 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $i0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i2, $i3, $i0, $i4, $z0);

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams)>($r1, $i1, $i0, r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        return;
    }
    public void measureChildWithMargins(android.view.View, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams r3;
        android.support.v7.widget.RecyclerView $r4;
        android.graphics.Rect $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>($r1);

        $i2 = $r5.<android.graphics.Rect: int left>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i2 = $i0 + $i2;

        $i0 = $r5.<android.graphics.Rect: int top>;

        $i3 = $r5.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i3;

        $i0 = $i1 + $i0;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidthMode()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i4 = $i4 + $i5;

        $i5 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i4 = $i4 + $i5;

        $i5 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i4 = $i4 + $i5;

        $i2 = $i4 + $i2;

        $i4 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $i1 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i1, $i3, $i2, $i4, $z0);

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeightMode()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i4 = $i4 + $i5;

        $i5 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $i4 = $i4 + $i5;

        $i5 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i0 = $i4 + $i0;

        $i4 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $i0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i2, $i3, $i0, $i4, $z0);

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams)>($r1, $i1, $i0, r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i1, $i0);

     label1:
        return;
    }
    public void moveView(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        android.view.View $r2;
        java.lang.StringBuilder $r3;
        android.support.v7.widget.RecyclerView $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        if $r2 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move a child from non-existing index:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewAt(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>($r2, $i1);

        return;
    }
    public void offsetChildrenHorizontal(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void offsetChildrenHorizontal(int)>($i0);

     label1:
        return;
    }
    public void offsetChildrenVertical(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void offsetChildrenVertical(int)>($i0);

     label1:
        return;
    }
    public void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter, android.support.v7.widget.RecyclerView$Adapter)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Adapter $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Adapter;

        return;
    }
    public boolean onAddFocusables(android.support.v7.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        java.util.ArrayList r2;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: java.util.ArrayList;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        return 0;
    }
    public void onAttachedToWindow(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }
    public void onDetachedFromWindow(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }
    public void onDetachedFromWindow(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(android.support.v7.widget.RecyclerView)>($r1);

        return;
    }
    public android.view.View onFocusSearchFailed(android.view.View, int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r2;
        android.support.v7.widget.RecyclerView$State $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$Recycler;

        $r3 := @parameter3: android.support.v7.widget.RecyclerView$State;

        return null;
    }
    public void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.accessibility.AccessibilityEvent $r3;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView $r4;
        android.support.v7.widget.RecyclerView$Adapter $r5;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = 1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r4 == null goto label4;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z1 != 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z1 != 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z1 != 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke $r3.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z0);

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r5 == null goto label4;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        virtualinvoke $r3.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i0);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;
    }
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.accessibility.AccessibilityEvent $r1;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.RecyclerView$Recycler $r3;
        android.support.v7.widget.RecyclerView$State $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)>($r3, $r4, $r1);

        return;
    }
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.RecyclerView$Recycler $r3;
        android.support.v7.widget.RecyclerView$State $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r3, $r4, $r1);

        return;
    }
    public void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r3;
        android.support.v7.widget.RecyclerView $r4;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(8192);

        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label2:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 != 0 goto label3;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z0 == 0 goto label4;

     label3:
        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(4096);

        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label4:
        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        $r5 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>($i0, $i1, $z0, $i2);

        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>($r5);

        return;
    }
    public void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.View $r3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r4;
        boolean $z0;
        int $i0, $i1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.view.View;

        $r4 := @parameter3: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>($r3);

     label1:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>($r3);

     label2:
        $r5 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>($i0, 1, $i1, 1, 0, 0);

        virtualinvoke $r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r5);

        return;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i1 = 0;

        goto label2;
    }
    void onInitializeAccessibilityNodeInfoForItem(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1, $r5;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r4;
        android.support.v7.widget.RecyclerView $r6;
        android.support.v7.widget.RecyclerView$Recycler $r7;
        android.support.v7.widget.RecyclerView$State $r8;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $r5 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r5);

        if $z0 != 0 goto label1;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r7 = $r6.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r8 = $r6.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r7, $r8, $r1, $r2);

     label1:
        return;
    }
    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return null;
    }
    public void onItemsAdded(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
    public void onItemsChanged(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }
    public void onItemsMoved(android.support.v7.widget.RecyclerView, int, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }
    public void onItemsRemoved(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
    public void onItemsUpdated(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
    public void onItemsUpdated(android.support.v7.widget.RecyclerView, int, int, java.lang.Object)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.Object;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int)>($r1, $i0, $i1);

        return;
    }
    public void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");

        return;
    }
    public void onLayoutCompleted(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return;
    }
    public void onMeasure(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;
    }
    public boolean onRequestChildFocus(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State, android.view.View, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.View $r3, $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.view.View;

        $r4 := @parameter3: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View)>($r1, $r3, $r4);

        return $z0;
    }
    public boolean onRequestChildFocus(android.support.v7.widget.RecyclerView, android.view.View, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.os.Parcelable $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.os.Parcelable;

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return null;
    }
    public void onScrollStateChanged(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        return;
    }
    boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.os.Bundle $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.RecyclerView$Recycler $r3;
        android.support.v7.widget.RecyclerView$State $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle)>($r3, $r4, $i0, $r1);

        return $z0;
    }
    public boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, i1, i2;
        android.os.Bundle $r3;
        android.support.v7.widget.RecyclerView $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.os.Bundle;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r4 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        i2 = 0;

        lookupswitch($i0)
        {
            case 4096: goto label6;
            case 8192: goto label4;
            default: goto label2;
        };

     label2:
        if i1 != 0 goto label3;

        if i2 == 0 goto label8;

     label3:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView: void scrollBy(int,int)>(i2, i1);

        return 1;

     label4:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(-1);

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i0 = $i0 - i1;

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i0 = $i0 - i1;

        i1 = neg $i0;

     label5:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(-1);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i0 = $i0 - i2;

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i0 = $i0 - i2;

        i2 = neg $i0;

        goto label2;

     label6:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollVertically(int)>(1);

        if $z0 == 0 goto label7;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i0 = $i0 - i1;

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i1 = $i0 - i1;

     label7:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView: boolean canScrollHorizontally(int)>(1);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i0 = $i0 - i2;

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i0 - i2;

        goto label2;

     label8:
        return 0;
    }
    public boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.View $r3;
        int $i0;
        android.os.Bundle $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

        $r4 := @parameter4: android.os.Bundle;

        return 0;
    }
    boolean performAccessibilityActionForItem(android.view.View, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0;
        android.os.Bundle $r2;
        android.support.v7.widget.RecyclerView$Recycler $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = $r5.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r5.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)>($r3, $r4, $r1, $i0, $r2);

        return $z0;
    }
    public void postOnAnimation(java.lang.Runnable)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r2, $r1);

     label1:
        return;
    }
    public void removeAllViews()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v7.widget.ChildHelper: void removeViewAt(int)>($i0);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    public void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)>($i0, $r1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r4;
        android.support.v7.widget.RecyclerView$ItemAnimator $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: int getScrapCount()>();

        i1 = $i0 + -1;

     label1:
        if i1 < 0 goto label6;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r2, 0);

     label4:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r5 == null goto label5;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

     label5:
        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(1);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)>($r2);

        goto label2;

     label6:
        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void clearScrap()>();

        if $i0 <= 0 goto label7;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView: void invalidate()>();

     label7:
        return;
    }
    public void removeAndRecycleView(android.view.View, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeView(android.view.View)>($r1);

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: void recycleView(android.view.View)>($r1);

        return;
    }
    public void removeAndRecycleViewAt(int, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeViewAt(int)>($i0);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void recycleView(android.view.View)>($r2);

        return;
    }
    public boolean removeCallbacks(java.lang.Runnable)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.Runnable $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return $z0;

     label1:
        return 0;
    }
    public void removeDetachedView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)>($r1, 0);

        return;
    }
    public void removeView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void removeView(android.view.View)>($r1);

        return;
    }
    public void removeViewAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>($i0);

        if $r2 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v7.widget.ChildHelper: void removeViewAt(int)>($i0);

     label1:
        return;
    }
    public boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2;
        android.graphics.Rect $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.Rect;

        $z0 := @parameter3: boolean;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>($r1, $r2, $r3, $z0, 0);

        return $z0;
    }
    public boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.view.View $r2;
        android.graphics.Rect $r3;
        boolean $z0, $z1;
        int i0, i1;
        int[] $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.graphics.Rect;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $r4 = specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)>($r1, $r2, $r3, $z0);

        i0 = $r4[0];

        i1 = $r4[1];

        if $z1 == 0 goto label1;

        $z1 = specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int)>($r1, i0, i1);

        if $z1 == 0 goto label5;

     label1:
        if i0 != 0 goto label2;

        if i1 == 0 goto label5;

     label2:
        if $z0 == 0 goto label4;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void scrollBy(int,int)>(i0, i1);

     label3:
        return 1;

     label4:
        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void smoothScrollBy(int,int)>(i0, i1);

        goto label3;

     label5:
        return 0;
    }
    public void requestLayout()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }
    public void requestSimpleAnimationsInNextLayout()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 1;

        return;
    }
    public int scrollHorizontallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public void scrollToPosition(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        return;
    }
    public int scrollVerticallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        return 0;
    }
    public void setAutoMeasureEnabled(boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mAutoMeasure> = $z0;

        return;
    }
    void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i0, $i1);

        return;
    }
    public final void setItemPrefetchEnabled(boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled>;

        if $z0 == $z1 goto label1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled> = $z0;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r2 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label1:
        return;
    }
    void setMeasureSpecs(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidth> = $i2;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidthMode> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidthMode>;

        if $i0 != 0 goto label1;

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidth> = 0;

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeight> = $i0;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeightMode> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeightMode>;

        if $i0 != 0 goto label2;

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC>;

        if $z0 != 0 goto label2;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeight> = 0;

     label2:
        return;
    }
    public void setMeasuredDimension(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$1200(android.support.v7.widget.RecyclerView,int,int)>($r1, $i0, $i1);

        return;
    }
    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.graphics.Rect $r1;
        int $i0, $i1, i2, i3, $i4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.graphics.Rect;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i3 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i3 = i3 + i2;

        i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i3 = i3 + i2;

        i2 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        i2 = i2 + $i4;

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i2 = i2 + $i4;

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getMinimumWidth()>();

        $i0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>($i0, i3, $i4);

        i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getMinimumHeight()>();

        $i1 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>($i1, i2, i3);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    void setMeasuredDimensionFromChildren(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, $i8;
        android.graphics.Rect r1;
        android.support.v7.widget.RecyclerView $r2;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        if $i2 != 0 goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;

     label1:
        i3 = 2147483647;

        i4 = 2147483647;

        i5 = -2147483648;

        i6 = -2147483648;

        i7 = 0;

     label2:
        if i7 >= $i2 goto label7;

        $r3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i7);

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r1 = $r2.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r3, r1);

        $i8 = r1.<android.graphics.Rect: int left>;

        if $i8 >= i3 goto label3;

        i3 = r1.<android.graphics.Rect: int left>;

     label3:
        $i8 = r1.<android.graphics.Rect: int right>;

        if $i8 <= i5 goto label4;

        i5 = r1.<android.graphics.Rect: int right>;

     label4:
        $i8 = r1.<android.graphics.Rect: int top>;

        if $i8 >= i4 goto label5;

        i4 = r1.<android.graphics.Rect: int top>;

     label5:
        $i8 = r1.<android.graphics.Rect: int bottom>;

        if $i8 <= i6 goto label6;

        i6 = r1.<android.graphics.Rect: int bottom>;

     label6:
        i7 = i7 + 1;

        goto label2;

     label7:
        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r1 = $r2.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(i3, i4, i5, i6);

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r1 = $r2.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)>(r1, $i0, $i1);

        return;
    }
    public void setMeasurementCacheEnabled(boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled> = $z0;

        return;
    }
    void setRecyclerView(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.ChildHelper $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        if $r1 != null goto label2;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView> = null;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper> = null;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidth> = 0;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeight> = 0;

     label1:
        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidthMode> = 1073741824;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeightMode> = 1073741824;

        return;

     label2:
        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView> = $r1;

        $r2 = $r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper> = $r2;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getWidth()>();

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mWidth> = $i0;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getHeight()>();

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: int mHeight> = $i0;

        goto label1;
    }
    boolean shouldMeasureChild(android.view.View, int, int, android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.support.v7.widget.RecyclerView$LayoutParams $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.support.v7.widget.RecyclerView$LayoutParams;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isLayoutRequested()>();

        if $z0 != 0 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i3 = $r2.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, $i0, $i3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i2 = $r2.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i0, $i1, $i2);

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    boolean shouldMeasureTwice()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }
    boolean shouldReMeasureChild(android.view.View, int, int, android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.support.v7.widget.RecyclerView$LayoutParams $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.support.v7.widget.RecyclerView$LayoutParams;

        $z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $r2.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i2, $i0, $i3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $r2.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)>($i0, $i1, $i2);

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void smoothScrollToPosition(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");

        return;
    }
    public void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1, $r3;
        android.support.v7.widget.RecyclerView $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r3 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == $r3 goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller> = $r1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$SmoothScroller: void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager)>($r2, r0);

        return;
    }
    public void stopIgnoringView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void stopIgnoring()>();

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void resetInternal()>();

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(4);

        return;
    }
    void stopSmoothScroller()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        return;
    }
    public boolean supportsPredictiveItemAnimations()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }
