android.support.v7.widget.LinearLayoutManager extends android.support.v7.widget.RecyclerView$LayoutManager implements android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
static final boolean DEBUG
public static final int HORIZONTAL
public static final int INVALID_OFFSET
private static final float MAX_SCROLL_FACTOR
private static final java.lang.String TAG
public static final int VERTICAL
final android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo
private int mInitialPrefetchItemCount
private boolean mLastStackFromEnd
private final android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult
private android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState
int mOrientation
android.support.v7.widget.OrientationHelper mOrientationHelper
android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState
int mPendingScrollPosition
int mPendingScrollPositionOffset
private boolean mRecycleChildrenOnDetach
private boolean mReverseLayout
boolean mShouldReverseLayout
private boolean mSmoothScrollbarEnabled
private boolean mStackFromEnd
    public void <init>(android.content.Context)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.content.Context $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>($r1, 1, 0);

        return;
    }
    public void <init>(android.content.Context, int, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.content.Context $r1;
        int $i0;
        boolean $z0;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r2;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void <init>()>();

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        $r2 = new android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void <init>(android.support.v7.widget.LinearLayoutManager)>(r0);

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo> = $r2;

        $r3 = new android.support.v7.widget.LinearLayoutManager$LayoutChunkResult;

        specialinvoke $r3.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>();

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult> = $r3;

        r0.<android.support.v7.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = 2;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setOrientation(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setReverseLayout(boolean)>($z0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setAutoMeasureEnabled(boolean)>(1);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$LayoutManager$Properties $r3;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r4;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void <init>()>();

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd> = 0;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        $r4 = new android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke $r4.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void <init>(android.support.v7.widget.LinearLayoutManager)>(r0);

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo> = $r4;

        $r5 = new android.support.v7.widget.LinearLayoutManager$LayoutChunkResult;

        specialinvoke $r5.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: void <init>()>();

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult> = $r5;

        r0.<android.support.v7.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = 2;

        $r3 = staticinvoke <android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        $i0 = $r3.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: int orientation>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setOrientation(int)>($i0);

        $z0 = $r3.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setReverseLayout(boolean)>($z0);

        $z0 = $r3.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setStackFromEnd(boolean)>($z0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setAutoMeasureEnabled(boolean)>(1);

        return;
    }
    private int computeScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0, $z1;
        int $i0;
        android.view.View $r3, $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $z0 = 0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z1 = 1;

     label2:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z1, 1);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label3;

        $z0 = 1;

     label3:
        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z0, 1);

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $i0 = staticinvoke <android.support.v7.widget.ScrollbarHelper: int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)>($r1, $r2, $r3, $r4, r0, $z0);

        return $i0;

     label4:
        $z1 = 0;

        goto label2;
    }
    private int computeScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0, $z1;
        int $i0;
        android.view.View $r3, $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $z0 = 0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z1 = 1;

     label2:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z1, 1);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label3;

        $z0 = 1;

     label3:
        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z0, 1);

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i0 = staticinvoke <android.support.v7.widget.ScrollbarHelper: int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean)>($r1, $r2, $r3, $r4, r0, $z0, $z1);

        return $i0;

     label4:
        $z1 = 0;

        goto label2;
    }
    private int computeScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0, $z1;
        int $i0;
        android.view.View $r3, $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $z0 = 0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label4;

        $z1 = 1;

     label2:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z1, 1);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        if $z1 != 0 goto label3;

        $z0 = 1;

     label3:
        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z0, 1);

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        $i0 = staticinvoke <android.support.v7.widget.ScrollbarHelper: int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)>($r1, $r2, $r3, $r4, r0, $z0);

        return $i0;

     label4:
        $z1 = 0;

        goto label2;
    }
    private android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)>(0, $i0);

        return $r3;
    }
    private android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int)>($r1, $r2, 0, $i0, $i1);

        return $r3;
    }
    private android.view.View findFirstVisibleChildClosestToEnd(boolean, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1, $z2;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z2 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, $z0, $z1);

        return $r1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i0, -1, $z0, $z1);

        return $r1;
    }
    private android.view.View findFirstVisibleChildClosestToStart(boolean, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1, $z2;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z2 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i0, -1, $z0, $z1);

        return $r1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, $z0, $z1);

        return $r1;
    }
    private android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)>($i0, -1);

        return $r3;
    }
    private android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int)>($r1, $r2, $i0, -1, $i1);

        return $r3;
    }
    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;

     label1:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;
    }
    private android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;

     label1:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;
    }
    private android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;

     label1:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;
    }
    private android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;

     label1:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        return $r3;
    }
    private int fixLayoutEndGap(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.v7.widget.OrientationHelper $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $z0 := @parameter3: boolean;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $i1 = $i1 - $i0;

        if $i1 <= 0 goto label1;

        $i1 = neg $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i1, $r1, $r2);

        $i1 = neg $i1;

        $i0 = $i0 + $i1;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $i0 = $i2 - $i0;

        if $i0 <= 0 goto label2;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: void offsetChildren(int)>($i0);

        $i0 = $i0 + $i1;

        return $i0;

     label1:
        return 0;

     label2:
        return $i1;
    }
    private int fixLayoutStartGap(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;
        int $i0, $i1, $i2;
        android.support.v7.widget.OrientationHelper $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $z0 := @parameter3: boolean;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i1 = $i0 - $i1;

        if $i1 <= 0 goto label1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i1, $r1, $r2);

        $i1 = neg $i1;

        $i0 = $i0 + $i1;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i2 = $i0 - $i2;

        if $i2 <= 0 goto label2;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = neg $i2;

        virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: void offsetChildren(int)>($i0);

        $i0 = $i1 - $i2;

        return $i0;

     label1:
        return 0;

     label2:
        return $i1;
    }
    private android.view.View getChildClosestToEnd()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label2;

        $i0 = 0;

     label1:
        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i0);

        return $r1;

     label2:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        goto label1;
    }
    private android.view.View getChildClosestToStart()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i0);

        return $r1;

     label2:
        $i0 = 0;

        goto label1;
    }
    private void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, $i7;
        boolean $z0, $z1;
        java.util.List $r3;
        android.view.View $r4;
        java.lang.Object $r5;
        android.support.v7.widget.RecyclerView$ViewHolder r6;
        byte b8;
        android.support.v7.widget.OrientationHelper $r7;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r8;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean willRunPredictiveAnimations()>();

        if $z0 == 0 goto label13;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i2 == 0 goto label13;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        i3 = 0;

        $i2 = 0;

        $r3 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: java.util.List getScrapList()>();

        $i4 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        $i5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r4);

        i6 = 0;

     label02:
        if i6 >= $i4 goto label10;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i6);

        r6 = (android.support.v7.widget.RecyclerView$ViewHolder) $r5;

        $z0 = virtualinvoke r6.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label04;

     label03:
        i6 = i6 + 1;

        goto label02;

     label04:
        $i7 = virtualinvoke r6.<android.support.v7.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i7 >= $i5 goto label07;

        $z0 = 1;

     label05:
        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == $z1 goto label08;

        b8 = -1;

     label06:
        if b8 != -1 goto label09;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $r4 = r6.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i7 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r4);

        i3 = i3 + $i7;

        goto label03;

     label07:
        $z0 = 0;

        goto label05;

     label08:
        b8 = 1;

        goto label06;

     label09:
        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $r4 = r6.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i7 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r4);

        $i2 = $i2 + $i7;

        goto label03;

     label10:
        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList> = $r3;

        if i3 <= 0 goto label11;

        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r4);

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>($i4, $i0);

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = i3;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = 0;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()>();

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r8, $r2, 0);

     label11:
        if $i2 <= 0 goto label12;

        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r4);

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>($i0, $i1);

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i2;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = 0;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()>();

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r8, $r2, 0);

     label12:
        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList> = null;

     label13:
        return;
    }
    private void logChildren()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int i0, $i1;
        android.view.View $r1;
        java.lang.StringBuilder $r2;
        android.support.v7.widget.OrientationHelper $r3;
        java.lang.String $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", "internal representation of views on the screen");

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("item ");

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", coord:");

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", $r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", "==============");

        return;
    }
    private void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.LinearLayoutManager$LayoutState)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.LinearLayoutManager$LayoutState;

        $z0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mRecycle>;

        if $z0 == 0 goto label3;

        $z0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mInfinite>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i0 != -1 goto label2;

        $i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int)>($r1, $i0);

        return;

     label2:
        $i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int)>($r1, $i0);

     label3:
        return;
    }
    private void recycleChildren(android.support.v7.widget.RecyclerView$Recycler, int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 != $i1 goto label1;

        return;

     label1:
        if $i1 <= $i0 goto label3;

        $i1 = $i1 + -1;

     label2:
        if $i1 < $i0 goto label4;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)>($i1, $r1);

        $i1 = $i1 + -1;

        goto label2;

     label3:
        if $i0 <= $i1 goto label4;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)>($i0, $r1);

        $i0 = $i0 + -1;

        goto label3;

     label4:
        return;
    }
    private void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0, $i1, $i2, $i3;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 >= 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getEnd()>();

        $i0 = $i2 - $i0;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label5;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label9;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i2);

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        if $i3 < $i0 goto label3;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)>($r3);

        if $i3 >= $i0 goto label4;

     label3:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)>($r1, 0, $i2);

        return;

     label4:
        $i2 = $i2 + 1;

        goto label2;

     label5:
        $i2 = $i1 + -1;

     label6:
        if $i2 < 0 goto label9;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i2);

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        if $i3 < $i0 goto label7;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)>($r3);

        if $i3 >= $i0 goto label8;

     label7:
        $i0 = $i1 + -1;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)>($r1, $i0, $i2);

        return;

     label8:
        $i2 = $i2 + -1;

        goto label6;

     label9:
        return;
    }
    private void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        int $i0, $i1, i2, $i3;
        boolean $z0;
        android.view.View $r2;
        android.support.v7.widget.OrientationHelper $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i0 := @parameter1: int;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label5;

        i2 = $i1 + -1;

     label2:
        if i2 < 0 goto label9;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r2);

        if $i3 > $i0 goto label3;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)>($r2);

        if $i3 <= $i0 goto label4;

     label3:
        $i0 = $i1 + -1;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)>($r1, $i0, i2);

        return;

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        i2 = 0;

     label6:
        if i2 >= $i1 goto label9;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r2);

        if $i3 > $i0 goto label7;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)>($r2);

        if $i3 <= $i0 goto label8;

     label7:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)>($r1, 0, i2);

        return;

     label8:
        i2 = i2 + 1;

        goto label6;

     label9:
        return;
    }
    private void resolveShouldLayoutReverse()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z1 = 1;

        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 == 1 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z0 != 0 goto label2;

     label1:
        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout>;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout> = $z1;

        return;

     label2:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout>;

        if $z0 != 0 goto label4;

     label3:
        r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout> = $z1;

        return;

     label4:
        $z1 = 0;

        goto label3;
    }
    private boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r3;
        int $i0, $i1;
        android.view.View $r4;
        boolean $z0, $z1;
        android.support.v7.widget.OrientationHelper $r5;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 != 0 goto label01;

        return 0;

     label01:
        $r4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getFocusedChild()>();

        if $r4 == null goto label02;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State)>($r4, $r2);

        if $z0 == 0 goto label02;

        virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View)>($r4);

        return 1;

     label02:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z0 != $z1 goto label11;

        $z0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label08;

        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

     label03:
        if $r4 == null goto label11;

        virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View)>($r4);

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z0 == 0 goto label07;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r4);

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        if $i0 >= $i1 goto label04;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r4);

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        if $i0 >= $i1 goto label09;

     label04:
        $z0 = 1;

     label05:
        if $z0 == 0 goto label07;

        $z0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label10;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

     label06:
        $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = $i0;

     label07:
        return 1;

     label08:
        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        goto label03;

     label09:
        $z0 = 0;

        goto label05;

     label10:
        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        goto label06;

     label11:
        return 0;
    }
    private boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        android.support.v7.widget.LinearLayoutManager$SavedState $r3;
        android.support.v7.widget.OrientationHelper $r4;
        android.view.View $r5;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $r2 := @parameter1: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $z0 = 0;

        $z1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label01;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if i0 != -1 goto label02;

     label01:
        return 0;

     label02:
        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if i0 < 0 goto label03;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if i0 < $i1 goto label04;

     label03:
        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        return 0;

     label04:
        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition> = i0;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r3 == null goto label06;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z1 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z1 == 0 goto label06;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z0 = $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z0;

        $z0 = $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label05;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        i0 = i0 - $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        return 1;

     label05:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorOffset>;

        i0 = i0 + $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        return 1;

     label06:
        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        if i0 != -2147483648 goto label17;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        $r5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findViewByPosition(int)>(i0);

        if $r5 == null goto label12;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r5);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getTotalSpace()>();

        if i0 <= $i1 goto label07;

        virtualinvoke $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

        return 1;

     label07:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r5);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        i0 = i0 - $i1;

        if i0 >= 0 goto label08;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = 0;

        return 1;

     label08:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r5);

        i0 = i0 - $i1;

        if i0 >= 0 goto label09;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = 1;

        return 1;

     label09:
        $z0 = $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label11;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r5);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getTotalSpaceChange()>();

        i0 = i0 + $i1;

     label10:
        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        return 1;

     label11:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r5);

        goto label10;

     label12:
        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i0 <= 0 goto label15;

        $r5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r5);

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i1 >= i0 goto label16;

        $z1 = 1;

     label13:
        $z2 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 != $z2 goto label14;

        $z0 = 1;

     label14:
        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z0;

     label15:
        virtualinvoke $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

        return 1;

     label16:
        $z1 = 0;

        goto label13;

     label17:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z0;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label18;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i0 = i0 - $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        return 1;

     label18:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i0 = i0 + $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate> = i0;

        return 1;
    }
    private void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $z0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r2, $r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r1, $r2, $r3);

        if $z0 != 0 goto label4;

        virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()>();

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $i0 = $i0 + -1;

     label2:
        $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i0;

        return;

     label3:
        $i0 = 0;

        goto label2;

     label4:
        return;
    }
    private void updateLayoutState(int, int, boolean, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i4;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$State $r1;
        byte $b2, $b3;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r2, $r5;
        android.support.v7.widget.OrientationHelper $r3;
        android.view.View $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 := @parameter3: android.support.v7.widget.RecyclerView$State;

        $b2 = -1;

        $b3 = 1;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean resolveIsInfinite()>();

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mInfinite> = $z1;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State)>($r1);

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i4;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = $i0;

        if $i0 != 1 goto label5;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra>;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndPadding()>();

        $i0 = $i0 + $i4;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i0;

        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == 0 goto label4;

     label1:
        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b2;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r4);

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i4 = $r5.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i0 = $i0 + $i4;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i0;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r4);

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset> = $i0;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r4);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $i0 = $i0 - $i4;

     label2:
        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i1;

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i1 = $i1 - $i0;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i1;

     label3:
        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i0;

        return;

     label4:
        $b2 = 1;

        goto label1;

     label5:
        $r4 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra>;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i0 = $i0 + $i4;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i0;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == 0 goto label7;

     label6:
        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b3;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r4);

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i4 = $r5.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i0 = $i0 + $i4;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i0;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r4);

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset> = $i0;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r4);

        $i0 = neg $i0;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i0 = $i0 + $i4;

        goto label2;

     label7:
        $b3 = -1;

        goto label6;
    }
    private void updateLayoutStateToFillEnd(int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i2;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r1;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0;
        byte $b3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $i2 = $i2 - $i1;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i2;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label2;

        $b3 = -1;

     label1:
        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b3;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i0;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = 1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset> = $i1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        return;

     label2:
        $b3 = 1;

        goto label1;
    }
    private void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $i0 = $r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i1 = $r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>($i0, $i1);

        return;
    }
    private void updateLayoutStateToFillStart(int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i2;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r1;
        android.support.v7.widget.OrientationHelper $r2;
        boolean $z0;
        byte $b3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i2 = $i1 - $i2;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i2;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i0;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label2;

        $b3 = 1;

     label1:
        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection> = $b3;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection> = -1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset> = $i1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        return;

     label2:
        $b3 = -1;

        goto label1;
    }
    private void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $i0 = $r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i1 = $r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mCoordinate>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>($i0, $i1);

        return;
    }
    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        java.lang.String $r1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r2 != null goto label1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>($r1);

     label1:
        return;
    }
    public boolean canScrollHorizontally()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean canScrollVertically()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void collectAdjacentPrefetchPositions(int, int, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i2;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry $r2;
        byte b3;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $r2 := @parameter3: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        $i2 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i2 != 0 goto label2;

     label1:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i1 == 0 goto label6;

        if $i0 != 0 goto label3;

        return;

     label2:
        $i0 = $i1;

        goto label1;

     label3:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        if $i0 <= 0 goto label5;

        b3 = 1;

     label4:
        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State)>(b3, $i0, 1, $r1);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)>($r1, $r3, $r2);

        return;

     label5:
        b3 = -1;

        goto label4;

     label6:
        return;
    }
    public void collectInitialPrefetchPositions(int, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, i2, i3, $i4;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry $r1;
        boolean $z0;
        byte b1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        b1 = -1;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r2 == null goto label4;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z0 = $r2.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd>;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        i2 = $r2.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

     label1:
        if $z0 == 0 goto label7;

     label2:
        i3 = 0;

     label3:
        $i4 = r0.<android.support.v7.widget.LinearLayoutManager: int mInitialPrefetchItemCount>;

        if i3 >= $i4 goto label8;

        if i2 < 0 goto label8;

        if i2 >= $i0 goto label8;

        interfaceinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i2, 0);

        i2 = i2 + b1;

        i3 = i3 + 1;

        goto label3;

     label4:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        i2 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if i2 != -1 goto label6;

        if $z0 == 0 goto label5;

        i2 = $i0 + -1;

        goto label1;

     label5:
        i2 = 0;

        goto label1;

     label6:
        i2 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        goto label1;

     label7:
        b1 = 1;

        goto label2;

     label8:
        return;
    }
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r2;
        android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry $r3;
        int i0, $i1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $r2 := @parameter1: android.support.v7.widget.LinearLayoutManager$LayoutState;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        if i0 < 0 goto label1;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if i0 >= $i1 goto label1;

        $i1 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        interfaceinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i0, $i1);

     label1:
        return;
    }
    public int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollExtent(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    public int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollOffset(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    public int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollRange(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    public android.graphics.PointF computeScrollVectorForPosition(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1;
        boolean $z0, $z1;
        android.view.View $r1;
        byte b2;
        android.graphics.PointF $r2;
        float $f0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $z0 = 0;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        if $i0 >= $i1 goto label2;

        $z0 = 1;

     label2:
        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == $z1 goto label4;

        b2 = -1;

     label3:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 0 goto label5;

        $r2 = new android.graphics.PointF;

        $f0 = (float) b2;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f0, 0.0F);

        return $r2;

     label4:
        b2 = 1;

        goto label3;

     label5:
        $r2 = new android.graphics.PointF;

        $f0 = (float) b2;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>(0.0F, $f0);

        return $r2;
    }
    public int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollExtent(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    public int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollOffset(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    public int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int computeScrollRange(android.support.v7.widget.RecyclerView$State)>($r1);

        return $i0;
    }
    int convertFocusDirectionToLayoutDirection(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 = -2147483648;

        $i2 = 1;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 17: goto label08;
            case 33: goto label05;
            case 66: goto label09;
            case 130: goto label06;
            default: goto label01;
        };

     label01:
        return -2147483648;

     label02:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 == 1 goto label12;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label12;

        return 1;

     label03:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 1 goto label04;

        return 1;

     label04:
        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z0 != 0 goto label12;

        return 1;

     label05:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 == 1 goto label12;

        return -2147483648;

     label06:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 1 goto label07;

        $i1 = 1;

     label07:
        return $i1;

     label08:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 == 0 goto label12;

        return -2147483648;

     label09:
        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 0 goto label11;

     label10:
        return $i2;

     label11:
        $i2 = -2147483648;

        goto label10;

     label12:
        return -1;
    }
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = new android.support.v7.widget.LinearLayoutManager$LayoutState;

        specialinvoke $r1.<android.support.v7.widget.LinearLayoutManager$LayoutState: void <init>()>();

        return $r1;
    }
    void ensureLayoutState()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r1;
        android.support.v7.widget.OrientationHelper $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState()>();

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState> = $r1;

     label1:
        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        if $r2 != null goto label2;

        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        $r2 = staticinvoke <android.support.v7.widget.OrientationHelper: android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int)>(r0, $i0);

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper> = $r2;

     label2:
        return;
    }
    int fill(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.RecyclerView$State, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r2, $r5;
        android.support.v7.widget.RecyclerView$State $r3;
        boolean $z0, $z1;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult r4;
        int i0, $i1, $i2, $i3, $i4;
        java.util.List $r6;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.LinearLayoutManager$LayoutState;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $z0 := @parameter3: boolean;

        i0 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i2 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        if $i2 == -2147483648 goto label02;

        $i2 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i2 >= 0 goto label01;

        $i2 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i2 = $i2 + $i3;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i2;

     label01:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState)>($r1, $r2);

     label02:
        $i2 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra>;

        $i2 = $i2 + $i3;

        r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult>;

     label03:
        $z1 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mInfinite>;

        if $z1 != 0 goto label04;

        if $i2 <= 0 goto label05;

     label04:
        $z1 = virtualinvoke $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean hasMore(android.support.v7.widget.RecyclerView$State)>($r3);

        if $z1 == 0 goto label05;

        virtualinvoke r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: void resetInternal()>();

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)>($r1, $r3, $r2, r4);

        $z1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished>;

        if $z1 == 0 goto label06;

     label05:
        $i2 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        i0 = i0 - $i2;

        return i0;

     label06:
        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i1 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        $i1 = $i4 * $i1;

        $i3 = $i3 + $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset> = $i3;

        $z1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed>;

        if $z1 == 0 goto label07;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r6 = $r5.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r6 != null goto label07;

        $z1 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label08;

     label07:
        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i3 = $i3 - $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable> = $i3;

        $i3 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i2 = $i2 - $i3;

     label08:
        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        if $i3 == -2147483648 goto label10;

        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i3 = $i3 + $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i3;

        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i3 >= 0 goto label09;

        $i3 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i1 = $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i3 = $i3 + $i1;

        $r2.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = $i3;

     label09:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState)>($r1, $r2);

     label10:
        if $z0 == 0 goto label03;

        $z1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        if $z1 == 0 goto label03;

        goto label05;
    }
    public int findFirstCompletelyVisibleItemPosition()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, 1, 0);

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        return $i0;
    }
    public int findFirstVisibleItemPosition()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>(0, $i0, 0, 1);

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        return $i0;
    }
    public int findLastCompletelyVisibleItemPosition()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i0, -1, 1, 0);

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        return $i0;
    }
    public int findLastVisibleItemPosition()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)>($i0, -1, 0, 1);

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        return $i0;
    }
    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i3, $i4;
        byte b2;
        android.view.View $r1;
        android.support.v7.widget.OrientationHelper $r2;
        short s5, s6;
        android.support.v7.widget.ViewBoundsCheck $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        if $i1 <= $i0 goto label2;

        b2 = 1;

     label1:
        if b2 != 0 goto label4;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i0);

        return $r1;

     label2:
        if $i1 >= $i0 goto label3;

        b2 = -1;

        goto label1;

     label3:
        b2 = 0;

        goto label1;

     label4:
        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i0);

        $i3 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r1);

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        if $i3 >= $i4 goto label6;

        s5 = 16644;

        s6 = 16388;

     label5:
        $i3 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i3 != 0 goto label7;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $r1 = virtualinvoke $r3.<android.support.v7.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>($i0, $i1, s5, s6);

        return $r1;

     label6:
        s5 = 4161;

        s6 = 4097;

        goto label5;

     label7:
        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $r1 = virtualinvoke $r3.<android.support.v7.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>($i0, $i1, s5, s6);

        return $r1;
    }
    android.view.View findOneVisibleChild(int, int, boolean, boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1, $i4;
        boolean $z0, $z1;
        short s2, s3;
        android.support.v7.widget.ViewBoundsCheck $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        s2 = 0;

        if $z0 == 0 goto label3;

        s3 = 24579;

     label1:
        if $z1 == 0 goto label2;

        s2 = 320;

     label2:
        $i4 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i4 != 0 goto label4;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>($i0, $i1, s3, s2);

        return $r2;

     label3:
        s3 = 320;

        goto label1;

     label4:
        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)>($i0, $i1, s3, s2);

        return $r2;
    }
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        android.view.View r3, r4, $r6;
        android.support.v7.widget.OrientationHelper $r5;
        byte b5;
        android.view.ViewGroup$LayoutParams $r7;
        android.support.v7.widget.RecyclerView$LayoutParams $r8;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        r3 = null;

        r4 = null;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        if $i1 <= $i0 goto label3;

        b5 = 1;

     label1:
        if $i0 == $i1 goto label6;

        $r6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>($i0);

        $i6 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r6);

        if $i6 < 0 goto label2;

        if $i6 >= $i2 goto label2;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (android.support.v7.widget.RecyclerView$LayoutParams) $r7;

        $z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label4;

        if r3 != null goto label2;

        r3 = $r6;

     label2:
        $i0 = $i0 + b5;

        goto label1;

     label3:
        b5 = -1;

        goto label1;

     label4:
        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r6);

        if $i6 >= $i4 goto label5;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r6);

        if $i6 >= $i3 goto label9;

     label5:
        if r4 != null goto label2;

        r4 = $r6;

        goto label2;

     label6:
        if r4 == null goto label8;

     label7:
        return r4;

     label8:
        r4 = r3;

        goto label7;

     label9:
        return $r6;
    }
    public android.view.View findViewByPosition(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, i1, $i2;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i2 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        i1 = $i0 - i1;

        if i1 < 0 goto label2;

        if i1 >= $i2 goto label2;

        $r1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i1);

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        if $i2 == $i0 goto label3;

     label2:
        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)>($i0);

     label3:
        return $r1;
    }
    public android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = new android.support.v7.widget.RecyclerView$LayoutParams;

        specialinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }
    protected int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        boolean $z0;
        android.support.v7.widget.OrientationHelper $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: boolean hasTargetScrollPosition()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.OrientationHelper: int getTotalSpace()>();

        return $i0;

     label1:
        return 0;
    }
    public int getInitialPrefetchItemCount()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mInitialPrefetchItemCount>;

        return i0;
    }
    public int getOrientation()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        return i0;
    }
    public boolean getRecycleChildrenOnDetach()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach>;

        return z0;
    }
    public boolean getReverseLayout()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout>;

        return z0;
    }
    public boolean getStackFromEnd()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        return z0;
    }
    protected boolean isLayoutRTL()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isSmoothScrollbarEnabled()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled>;

        return z0;
    }
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r3;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult $r4;
        android.view.View $r5;
        android.view.ViewGroup$LayoutParams $r6;
        android.support.v7.widget.RecyclerView$LayoutParams r7;
        java.util.List $r8;
        boolean $z0, $z1;
        int $i0, $i1, i2, i3, $i4;
        android.support.v7.widget.OrientationHelper $r9;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$LayoutState;

        $r4 := @parameter3: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult;

        $r5 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: android.view.View next(android.support.v7.widget.RecyclerView$Recycler)>($r1);

        if $r5 != null goto label01;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label01:
        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.v7.widget.RecyclerView$LayoutParams) $r6;

        $r8 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r8 != null goto label10;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i0 != -1 goto label08;

        $z1 = 1;

     label02:
        if $z0 != $z1 goto label09;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void addView(android.view.View)>($r5);

     label03:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void measureChildWithMargins(android.view.View,int,int)>($r5, 0, 0);

        $r9 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r5);

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = $i0;

        $i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != 1 goto label16;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPaddingRight()>();

        i2 = $i0 - $i1;

        $r9 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>($r5);

        $i0 = i2 - $i0;

     label04:
        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i1 != -1 goto label15;

        i3 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i1 = $i1 - $i4;

     label05:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)>($r5, $i0, $i1, i2, i3);

        $z0 = virtualinvoke r7.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke r7.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z0 == 0 goto label07;

     label06:
        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label07:
        $z0 = virtualinvoke $r5.<android.view.View: boolean hasFocusable()>();

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = $z0;

        return;

     label08:
        $z1 = 0;

        goto label02;

     label09:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void addView(android.view.View,int)>($r5, 0);

        goto label03;

     label10:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i0 != -1 goto label12;

        $z1 = 1;

     label11:
        if $z0 != $z1 goto label13;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void addDisappearingView(android.view.View)>($r5);

        goto label03;

     label12:
        $z1 = 0;

        goto label11;

     label13:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void addDisappearingView(android.view.View,int)>($r5, 0);

        goto label03;

     label14:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPaddingLeft()>();

        $i0 = $i1;

        $r9 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r9.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>($r5);

        i2 = $i1 + i2;

        goto label04;

     label15:
        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i3 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i3 = i3 + $i4;

        goto label05;

     label16:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPaddingTop()>();

        $i1 = $i0;

        $r9 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r9.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>($r5);

        i3 = $i0 + i2;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i0 != -1 goto label17;

        i2 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        $i0 = $i0 - $i4;

        goto label05;

     label17:
        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i2 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i4 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed>;

        i2 = i2 + $i4;

        goto label05;
    }
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $i0 := @parameter3: int;

        return;
    }
    public void onDetachedFromWindow(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)>($r1, $r2);

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)>($r2);

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: void clear()>();

     label1:
        return;
    }
    public android.view.View onFocusSearchFailed(android.view.View, int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.view.View $r1, $r6;
        int $i0, i1;
        android.support.v7.widget.RecyclerView$Recycler $r2;
        android.support.v7.widget.RecyclerView$State $r3;
        android.support.v7.widget.OrientationHelper $r4;
        float $f0;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$Recycler;

        $r3 := @parameter3: android.support.v7.widget.RecyclerView$State;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i1 != 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int convertFocusDirectionToLayoutDirection(int)>($i0);

        if $i0 != -2147483648 goto label2;

        return null;

     label2:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getTotalSpace()>();

        $f0 = (float) i1;

        $f0 = 0.33333334F * $f0;

        i1 = (int) $f0;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State)>($i0, i1, 0, $r3);

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r5.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset> = -2147483648;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r5.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 0;

        $r5 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r2, $r5, $r3, 1);

        if $i0 != -1 goto label5;

        $r1 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r2, $r3);

     label3:
        if $i0 != -1 goto label6;

        $r6 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

     label4:
        $z0 = virtualinvoke $r6.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label7;

        if $r1 != null goto label8;

        return null;

     label5:
        $r1 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r2, $r3);

        goto label3;

     label6:
        $r6 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        goto label4;

     label7:
        return $r1;

     label8:
        return $r6;
    }
    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.view.accessibility.AccessibilityEvent $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int findFirstVisibleItemPosition()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i0);

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int findLastVisibleItemPosition()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i0);

     label1:
        return;
    }
    public void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int i0, $i1, $i2, $i3, $i5;
        android.support.v7.widget.LinearLayoutManager$SavedState $r3;
        boolean $z0, $z1;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r4, $r8;
        android.view.View $r5;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r6;
        android.support.v7.widget.OrientationHelper $r7;
        byte b4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r3 != null goto label01;

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i1 == -1 goto label02;

     label01:
        $i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i1 != 0 goto label02;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)>($r1);

        return;

     label02:
        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r3 == null goto label03;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()>();

        if $z0 == 0 goto label03;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        $i1 = $r3.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorPosition>;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = $i1;

     label03:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 0;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        $r5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getFocusedChild()>();

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z0 = $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mValid>;

        if $z0 == 0 goto label04;

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if $i1 != -1 goto label04;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r3 == null goto label14;

     label04:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        $z0 = $z0 ^ $z1;

        $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd> = $z0;

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r1, $r2, $r6);

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mValid> = 1;

     label05:
        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State)>($r2);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i2 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta>;

        if $i2 < 0 goto label16;

        $i2 = 0;

     label06:
        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i2 = $i2 + i0;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getEndPadding()>();

        $i1 = $i1 + i0;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label08;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        if i0 == -1 goto label08;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        if i0 == -2147483648 goto label08;

        i0 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition>;

        $r5 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View findViewByPosition(int)>(i0);

        if $r5 == null goto label08;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label17;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r5);

        i0 = i0 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i0 = i0 - $i3;

     label07:
        if i0 <= 0 goto label18;

        $i2 = $i2 + i0;

     label08:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z0 = $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label20;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label19;

        b4 = 1;

     label09:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int)>($r1, $r2, $r6, b4);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler)>($r1);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean resolveIsInfinite()>();

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mInfinite> = $z0;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout> = $z0;

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        $z0 = $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd>;

        if $z0 == 0 goto label22;

        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r6);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i2;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i2 = $i3;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i0 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i5 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i5 <= 0 goto label10;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i5 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i1 = $i1 + $i5;

     label10:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r6);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i1;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i5 = $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i1 = $i1 + $i5;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i1;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i5 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i5 <= 0 goto label11;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i2 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)>(i0, $i3);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i2;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i2 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

     label11:
        i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i0 <= 0 goto label12;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label24;

        i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)>($i1, $r1, $r2, 1);

        $i2 = $i2 + i0;

        $i1 = $i1 + i0;

        i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)>($i2, $r1, $r2, 0);

        $i2 = $i2 + i0;

        $i1 = $i1 + i0;

     label12:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)>($r1, $r2, $i2, $i1);

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label25;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: void onLayoutComplete()>();

     label13:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mLastStackFromEnd> = $z0;

        return;

     label14:
        if $r5 == null goto label05;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r5);

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        if $i1 >= $i2 goto label15;

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r5);

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        if $i1 > $i2 goto label05;

     label15:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View)>($r5);

        goto label05;

     label16:
        $i2 = $i1;

        $i1 = 0;

        goto label06;

     label17:
        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r5);

        $r7 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r7.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        i0 = i0 - $i3;

        $i3 = r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset>;

        i0 = $i3 - i0;

        goto label07;

     label18:
        $i1 = $i1 - i0;

        goto label08;

     label19:
        b4 = -1;

        goto label09;

     label20:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label21;

        b4 = -1;

        goto label09;

     label21:
        b4 = 1;

        goto label09;

     label22:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r6);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i1;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i0 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i3 <= 0 goto label23;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        $i2 = $i2 + $i3;

     label23:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r6);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i2;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i2 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $r8 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r8.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i2 = $i2 + $i3;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i2;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i2 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        if $i3 <= 0 goto label11;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i3 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mAvailable>;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)>(i0, $i1);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mExtra> = $i3;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r4, $r2, 0);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i1 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        goto label11;

     label24:
        i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)>($i2, $r1, $r2, 1);

        $i2 = $i2 + i0;

        $i1 = $i1 + i0;

        i0 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)>($i1, $r1, $r2, 0);

        $i2 = $i2 + i0;

        $i1 = $i1 + i0;

        goto label12;

     label25:
        $r6 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r6.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        goto label13;
    }
    public void onLayoutCompleted(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onLayoutCompleted(android.support.v7.widget.RecyclerView$State)>($r1);

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState> = null;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = -1;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo>;

        virtualinvoke $r2.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: void reset()>();

        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0;
        android.os.Parcelable $r1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.support.v7.widget.LinearLayoutManager$SavedState;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v7.widget.LinearLayoutManager$SavedState) $r1;

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState> = $r2;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

     label1:
        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean z0, $z1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1, $r2;
        int $i0, $i1;
        android.view.View $r3;
        android.support.v7.widget.OrientationHelper $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 == null goto label1;

        $r1 = new android.support.v7.widget.LinearLayoutManager$SavedState;

        $r2 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        specialinvoke $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: void <init>(android.support.v7.widget.LinearLayoutManager$SavedState)>($r2);

        return $r1;

     label1:
        $r1 = new android.support.v7.widget.LinearLayoutManager$SavedState;

        specialinvoke $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: void <init>()>();

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 <= 0 goto label3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        z0 = z0 ^ $z1;

        $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd> = z0;

        if z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()>();

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r3);

        $i0 = $i0 - $i1;

        $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r3);

        $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i0;

        return $r1;

     label2:
        $r3 = specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildClosestToStart()>();

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r3);

        $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorPosition> = $i0;

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $i0 = $i0 - $i1;

        $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: int mAnchorOffset> = $i0;

        return $r1;

     label3:
        virtualinvoke $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

        return $r1;
    }
    public void prepareForDrop(android.view.View, android.view.View, int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i3, $i4;
        byte b2;
        boolean $z0;
        android.support.v7.widget.OrientationHelper $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot drop a view during a scroll or layout calculation");

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void resolveShouldLayoutReverse()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r1);

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r2);

        if $i1 >= $i0 goto label2;

        b2 = 1;

     label1:
        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z0 == 0 goto label4;

        if b2 != 1 goto label3;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r1);

        $i3 = $i3 + $i4;

        $i1 = $i1 - $i3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>($i0, $i1);

        return;

     label2:
        b2 = -1;

        goto label1;

     label3:
        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r2);

        $i1 = $i1 - $i3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>($i0, $i1);

        return;

     label4:
        if b2 != -1 goto label5;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r2);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>($i0, $i1);

        return;

     label5:
        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r1);

        $i1 = $i1 - $i3;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)>($i0, $i1);

        return;
    }
    boolean resolveIsInfinite()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.OrientationHelper $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.OrientationHelper: int getMode()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.OrientationHelper: int getEnd()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    int scrollBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, i1, $i2, $i4;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r3;
        byte b3;
        android.support.v7.widget.OrientationHelper $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i2 == 0 goto label6;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean mRecycle> = 1;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void ensureLayoutState()>();

        if $i0 <= 0 goto label4;

        b3 = 1;

     label2:
        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State)>(b3, $i2, 1, $r2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        i1 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $i4 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)>($r1, $r3, $r2, 0);

        i1 = i1 + $i4;

        if i1 < 0 goto label6;

        if $i2 <= i1 goto label5;

        $i0 = b3 * i1;

     label3:
        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i2 = neg $i0;

        virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: void offsetChildren(int)>($i2);

        $r3 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState>;

        $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta> = $i0;

        return $i0;

     label4:
        b3 = -1;

        goto label2;

     label5:
        goto label3;

     label6:
        return 0;
    }
    public int scrollHorizontallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i1 != 1 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i0, $r1, $r2);

        return $i0;
    }
    public void scrollToPosition(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = $i0;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = -2147483648;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        virtualinvoke $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }
    public void scrollToPositionWithOffset(int, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPosition> = $i0;

        r0.<android.support.v7.widget.LinearLayoutManager: int mPendingScrollPositionOffset> = $i1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        virtualinvoke $r1.<android.support.v7.widget.LinearLayoutManager$SavedState: void invalidateAnchor()>();

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }
    public int scrollVerticallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i0, $r1, $r2);

        return $i0;
    }
    public void setInitialPrefetchItemCount(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        r0.<android.support.v7.widget.LinearLayoutManager: int mInitialPrefetchItemCount> = $i0;

        return;
    }
    public void setOrientation(int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid orientation:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $i1 = r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation>;

        if $i0 != $i1 goto label2;

        return;

     label2:
        r0.<android.support.v7.widget.LinearLayoutManager: int mOrientation> = $i0;

        r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper> = null;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }
    public void setRecycleChildrenOnDetach(boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach> = $z0;

        return;
    }
    public void setReverseLayout(boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.LinearLayoutManager: boolean mReverseLayout> = $z0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }
    public void setSmoothScrollbarEnabled(boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled> = $z0;

        return;
    }
    public void setStackFromEnd(boolean)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>(null);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd> = $z0;

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void requestLayout()>();

        return;
    }
    boolean shouldMeasureTwice()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getHeightMode()>();

        if $i0 == 1073741824 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getWidthMode()>();

        if $i0 == 1073741824 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: boolean hasFlexibleChildInBothOrientations()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void smoothScrollToPosition(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.LinearLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;
        android.support.v7.widget.LinearSmoothScroller r3;
        android.content.Context $r4;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        r3 = new android.support.v7.widget.LinearSmoothScroller;

        $r4 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke r3.<android.support.v7.widget.LinearSmoothScroller: void <init>(android.content.Context)>($r4);

        virtualinvoke r3.<android.support.v7.widget.LinearSmoothScroller: void setTargetPosition(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller)>(r3);

        return;
    }
    public boolean supportsPredictiveItemAnimations()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $r1 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mLastStackFromEnd>;

        $z0 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mStackFromEnd>;

        if $z1 != $z0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void validateChildOrder()
    {
        android.support.v7.widget.LinearLayoutManager r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r2;
        android.view.View $r3;
        android.support.v7.widget.OrientationHelper $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.support.v7.widget.LinearLayoutManager;

        $z0 = 1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validating child count ");

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinearLayoutManager", $r2);

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if $i0 >= 1 goto label01;

        return;

     label01:
        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r3);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        $z1 = r0.<android.support.v7.widget.LinearLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == 0 goto label07;

        i2 = 1;

     label02:
        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i2 >= $i3 goto label13;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i2);

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r3);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        if $i3 >= $i0 goto label05;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void logChildren()>();

        $r5 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detected invalid position. loc invalid? ");

        if $i4 >= $i1 goto label04;

     label03:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        if $i4 <= $i1 goto label06;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void logChildren()>();

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("detected invalid location");

        throw $r5;

     label06:
        i2 = i2 + 1;

        goto label02;

     label07:
        i2 = 1;

     label08:
        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getChildCount()>();

        if i2 >= $i3 goto label13;

        $r3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: android.view.View getChildAt(int)>(i2);

        $i3 = virtualinvoke r0.<android.support.v7.widget.LinearLayoutManager: int getPosition(android.view.View)>($r3);

        $r4 = r0.<android.support.v7.widget.LinearLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r4.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r3);

        if $i3 >= $i0 goto label11;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void logChildren()>();

        $r5 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detected invalid position. loc invalid? ");

        if $i4 >= $i1 goto label10;

     label09:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label10:
        $z0 = 0;

        goto label09;

     label11:
        if $i4 >= $i1 goto label12;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void logChildren()>();

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("detected invalid location");

        throw $r5;

     label12:
        i2 = i2 + 1;

        goto label08;

     label13:
        return;
    }
