android.support.v7.widget.TooltipCompatHandler extends java.lang.Object implements android.view.View$OnLongClickListener android.view.View$OnHoverListener android.view.View$OnAttachStateChangeListener
private static final long HOVER_HIDE_TIMEOUT_MS
private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
private static final long LONG_CLICK_HIDE_TIMEOUT_MS
private static final java.lang.String TAG
private static android.support.v7.widget.TooltipCompatHandler sActiveHandler
private final android.view.View mAnchor
private int mAnchorX
private int mAnchorY
private boolean mFromTouch
private final java.lang.Runnable mHideRunnable
private android.support.v7.widget.TooltipPopup mPopup
private final java.lang.Runnable mShowRunnable
private final java.lang.CharSequence mTooltipText
    private void <init>(android.view.View, java.lang.CharSequence)
    {
        android.support.v7.widget.TooltipCompatHandler r0;
        android.view.View $r1;
        java.lang.CharSequence $r2;
        android.support.v7.widget.TooltipCompatHandler$1 $r3;
        android.support.v7.widget.TooltipCompatHandler$2 $r4;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.support.v7.widget.TooltipCompatHandler$1;

        specialinvoke $r3.<android.support.v7.widget.TooltipCompatHandler$1: void <init>(android.support.v7.widget.TooltipCompatHandler)>(r0);

        r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable> = $r3;

        $r4 = new android.support.v7.widget.TooltipCompatHandler$2;

        specialinvoke $r4.<android.support.v7.widget.TooltipCompatHandler$2: void <init>(android.support.v7.widget.TooltipCompatHandler)>(r0);

        r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable> = $r4;

        r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor> = $r1;

        r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText> = $r2;

        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $r1.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0);

        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $r1.<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>(r0);

        return;
    }
    static void access$000(android.support.v7.widget.TooltipCompatHandler, boolean)
    {
        android.support.v7.widget.TooltipCompatHandler $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.TooltipCompatHandler;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<android.support.v7.widget.TooltipCompatHandler: void show(boolean)>($z0);

        return;
    }
    static void access$100(android.support.v7.widget.TooltipCompatHandler)
    {
        android.support.v7.widget.TooltipCompatHandler $r0;

        $r0 := @parameter0: android.support.v7.widget.TooltipCompatHandler;

        specialinvoke $r0.<android.support.v7.widget.TooltipCompatHandler: void hide()>();

        return;
    }
    private void hide()
    {
        android.support.v7.widget.TooltipCompatHandler r0, $r1;
        android.support.v7.widget.TooltipPopup $r2;
        android.view.View $r3;
        java.lang.Runnable $r4;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        if $r1 != r0 goto label1;

        <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler> = null;

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup>;

        virtualinvoke $r2.<android.support.v7.widget.TooltipPopup: void hide()>();

        r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup> = null;

        $r3 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $r3.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r0);

     label1:
        $r3 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r4 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable>;

        virtualinvoke $r3.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r4);

        $r3 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r4 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke $r3.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r4);

        return;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TooltipCompatHandler", "sActiveHandler.mPopup == null");

        goto label1;
    }
    public static void setTooltipText(android.view.View, java.lang.CharSequence)
    {
        android.view.View $r0, $r3;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.support.v7.widget.TooltipCompatHandler $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        $r2 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        if $r2 == null goto label1;

        $r2 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        $r3 = $r2.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        if $r3 != $r0 goto label1;

        $r2 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        specialinvoke $r2.<android.support.v7.widget.TooltipCompatHandler: void hide()>();

     label1:
        virtualinvoke $r0.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(null);

        virtualinvoke $r0.<android.view.View: void setLongClickable(boolean)>(0);

        virtualinvoke $r0.<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>(null);

        return;

     label2:
        $r2 = new android.support.v7.widget.TooltipCompatHandler;

        specialinvoke $r2.<android.support.v7.widget.TooltipCompatHandler: void <init>(android.view.View,java.lang.CharSequence)>($r0, $r1);

        return;
    }
    private void show(boolean)
    {
        android.support.v7.widget.TooltipCompatHandler r0, $r3;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        android.view.View $r2;
        android.support.v7.widget.TooltipPopup $r4;
        android.content.Context $r5;
        long l2;
        java.lang.Runnable $r6;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $z0 := @parameter0: boolean;

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($r2);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        if $r3 == null goto label2;

        $r3 = <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler>;

        specialinvoke $r3.<android.support.v7.widget.TooltipCompatHandler: void hide()>();

     label2:
        <android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipCompatHandler sActiveHandler> = r0;

        r0.<android.support.v7.widget.TooltipCompatHandler: boolean mFromTouch> = $z0;

        $r4 = new android.support.v7.widget.TooltipPopup;

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r5 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r4.<android.support.v7.widget.TooltipPopup: void <init>(android.content.Context)>($r5);

        r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup> = $r4;

        $r4 = r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup>;

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $i1 = r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorX>;

        $i0 = r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorY>;

        $z0 = r0.<android.support.v7.widget.TooltipCompatHandler: boolean mFromTouch>;

        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText>;

        virtualinvoke $r4.<android.support.v7.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)>($r2, $i1, $i0, $z0, $r1);

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        virtualinvoke $r2.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r0);

        $z0 = r0.<android.support.v7.widget.TooltipCompatHandler: boolean mFromTouch>;

        if $z0 == 0 goto label4;

        l2 = 2500L;

     label3:
        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r6 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke $r2.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r6);

        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r6 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable>;

        virtualinvoke $r2.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r6, l2);

        return;

     label4:
        $r2 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>($r2);

        $i0 = $i0 & 1;

        if $i0 != 1 goto label5;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        l2 = (long) $i0;

        l2 = 3000L - l2;

        goto label3;

     label5:
        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        l2 = (long) $i0;

        l2 = 15000L - l2;

        goto label3;
    }
    public boolean onHover(android.view.View, android.view.MotionEvent)
    {
        android.support.v7.widget.TooltipCompatHandler r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        long $l0;
        android.support.v7.widget.TooltipPopup $r3;
        boolean $z0;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.view.accessibility.AccessibilityManager r6;
        int $i1;
        float $f0;
        java.lang.Runnable $r7;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        $r3 = r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup>;

        if $r3 == null goto label1;

        $z0 = r0.<android.support.v7.widget.TooltipCompatHandler: boolean mFromTouch>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r4 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r6 = (android.view.accessibility.AccessibilityManager) $r5;

        $z0 = virtualinvoke r6.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r6.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 != 0 goto label6;

     label2:
        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i1)
        {
            case 7: goto label4;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label5;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isEnabled()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<android.support.v7.widget.TooltipCompatHandler: android.support.v7.widget.TooltipPopup mPopup>;

        if $r3 != null goto label6;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorX> = $i1;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorY> = $i1;

        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r7 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable>;

        virtualinvoke $r1.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r7);

        $r1 = r0.<android.support.v7.widget.TooltipCompatHandler: android.view.View mAnchor>;

        $r7 = r0.<android.support.v7.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable>;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l0 = (long) $i1;

        virtualinvoke $r1.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r7, $l0);

        return 0;

     label5:
        specialinvoke r0.<android.support.v7.widget.TooltipCompatHandler: void hide()>();

     label6:
        return 0;
    }
    public boolean onLongClick(android.view.View)
    {
        android.support.v7.widget.TooltipCompatHandler r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i0 = $i0 / 2;

        r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorX> = $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i0 = $i0 / 2;

        r0.<android.support.v7.widget.TooltipCompatHandler: int mAnchorY> = $i0;

        specialinvoke r0.<android.support.v7.widget.TooltipCompatHandler: void show(boolean)>(1);

        return 1;
    }
    public void onViewAttachedToWindow(android.view.View)
    {
        android.support.v7.widget.TooltipCompatHandler r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 := @parameter0: android.view.View;

        return;
    }
    public void onViewDetachedFromWindow(android.view.View)
    {
        android.support.v7.widget.TooltipCompatHandler r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.TooltipCompatHandler;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.support.v7.widget.TooltipCompatHandler: void hide()>();

        return;
    }
