android.support.v7.view.ContextThemeWrapper extends android.content.ContextWrapper
private android.view.LayoutInflater mInflater
private android.content.res.Configuration mOverrideConfiguration
private android.content.res.Resources mResources
private android.content.res.Resources$Theme mTheme
private int mThemeResource
    public void <init>()
    {
        android.support.v7.view.ContextThemeWrapper r0;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>(null);

        return;
    }
    public void <init>(android.content.Context, int)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.Context $r1;
        int $i0;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>($r1);

        r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource> = $i0;

        return;
    }
    public void <init>(android.content.Context, android.content.res.Resources$Theme)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.Context $r1;
        android.content.res.Resources$Theme $r2;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.res.Resources$Theme;

        specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>($r1);

        r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme> = $r2;

        return;
    }
    private android.content.res.Resources getResourcesInternal()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0;
        android.content.Context $r3;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources mResources>;

        if $r1 != null goto label1;

        $r2 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration>;

        if $r2 != null goto label2;

        $r1 = specialinvoke r0.<android.content.ContextWrapper: android.content.res.Resources getResources()>();

        r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources mResources> = $r1;

     label1:
        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources mResources>;

        return $r1;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $r2 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration>;

        $r3 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>($r2);

        $r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources mResources> = $r1;

        goto label1;
    }
    private void initializeTheme()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        int $i0;
        android.content.res.Resources$Theme $r1, $r4;
        boolean z0;
        android.content.res.Resources $r2;
        android.content.Context $r3;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        if $r1 != null goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme> = $r1;

        $r3 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.Context getBaseContext()>();

        $r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        if $r1 == null goto label2;

        $r4 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        virtualinvoke $r4.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r1);

     label2:
        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        $i0 = r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource>;

        virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>($r1, $i0, z0);

        return;

     label3:
        z0 = 0;

        goto label1;
    }
    public void applyOverrideConfiguration(android.content.res.Configuration)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Configuration $r1, $r4;
        android.content.res.Resources $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources mResources>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getResources() or getAssets() has already been called");

        throw $r3;

     label1:
        $r4 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration>;

        if $r4 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Override configuration has already been set");

        throw $r3;

     label2:
        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r1);

        r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration> = $r4;

        return;
    }
    protected void attachBaseContext(android.content.Context)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.Context $r1;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>($r1);

        return;
    }
    public android.content.res.AssetManager getAssets()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Resources $r1;
        android.content.res.AssetManager $r2;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        return $r2;
    }
    public android.content.res.Configuration getOverrideConfiguration()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Configuration r1;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration>;

        return r1;
    }
    public android.content.res.Resources getResources()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Resources $r1;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 = specialinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()>();

        return $r1;
    }
    public java.lang.Object getSystemService(java.lang.String)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.view.LayoutInflater $r3;
        android.content.Context $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = "layout_inflater";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<android.support.v7.view.ContextThemeWrapper: android.view.LayoutInflater mInflater>;

        if $r3 != null goto label1;

        $r4 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.Context getBaseContext()>();

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4);

        $r3 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>(r0);

        r0.<android.support.v7.view.ContextThemeWrapper: android.view.LayoutInflater mInflater> = $r3;

     label1:
        $r3 = r0.<android.support.v7.view.ContextThemeWrapper: android.view.LayoutInflater mInflater>;

        return $r3;

     label2:
        $r4 = virtualinvoke r0.<android.support.v7.view.ContextThemeWrapper: android.content.Context getBaseContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>($r1);

        return $r5;
    }
    public android.content.res.Resources$Theme getTheme()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Resources$Theme $r1;
        int $i0;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        return $r1;

     label1:
        $i0 = r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource>;

        if $i0 != 0 goto label2;

        $i0 = <android.support.v7.appcompat.R$style: int Theme_AppCompat_Light>;

        r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource> = $i0;

     label2:
        specialinvoke r0.<android.support.v7.view.ContextThemeWrapper: void initializeTheme()>();

        $r1 = r0.<android.support.v7.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme>;

        return $r1;
    }
    public int getThemeResId()
    {
        android.support.v7.view.ContextThemeWrapper r0;
        int i0;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        i0 = r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource>;

        return i0;
    }
    protected void onApplyThemeResource(android.content.res.Resources$Theme, int, boolean)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        android.content.res.Resources$Theme $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        virtualinvoke $r1.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i0, 1);

        return;
    }
    public void setTheme(int)
    {
        android.support.v7.view.ContextThemeWrapper r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.view.ContextThemeWrapper;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v7.view.ContextThemeWrapper: int mThemeResource> = $i0;

        specialinvoke r0.<android.support.v7.view.ContextThemeWrapper: void initializeTheme()>();

     label1:
        return;
    }
