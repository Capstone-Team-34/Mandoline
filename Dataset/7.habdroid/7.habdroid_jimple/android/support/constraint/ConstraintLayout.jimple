android.support.constraint.ConstraintLayout extends android.view.ViewGroup
static final boolean ALLOWS_EMBEDDED
private static final boolean SIMPLE_LAYOUT
private static final java.lang.String TAG
public static final java.lang.String VERSION
android.util.SparseArray mChildrenByIds
private android.support.constraint.ConstraintSet mConstraintSet
private boolean mDirtyHierarchy
android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget
private int mMaxHeight
private int mMaxWidth
private int mMinHeight
private int mMinWidth
private int mOptimizationLevel
private final java.util.ArrayList mVariableDimensionsWidgets
    public void <init>(android.content.Context)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context $r1;
        android.util.SparseArray $r2;
        java.util.ArrayList $r3;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r4;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(100);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets> = $r3;

        $r4 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r4;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 2;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet)>(null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(100);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 2;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.constraint.ConstraintLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(100);

        r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets> = $r4;

        $r5 = new android.support.constraint.solver.widgets.ConstraintWidgetContainer;

        specialinvoke $r5.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget> = $r5;

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = 2147483647;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = 2;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void init(android.util.AttributeSet)>($r2);

        return;
    }
    private final android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.view.View r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.constraint.ConstraintLayout$LayoutParams $r5;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer r6;
        android.support.constraint.solver.widgets.ConstraintWidget r7;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        r6 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return r6;

     label1:
        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r3 = (android.view.View) $r2;

        if r3 != r0 goto label2;

        r6 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return r6;

     label2:
        if r3 != null goto label3;

        return null;

     label3:
        $r4 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.support.constraint.ConstraintLayout$LayoutParams) $r4;

        r7 = $r5.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        return r7;
    }
    private final android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.constraint.ConstraintLayout$LayoutParams $r3;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer r4;
        android.support.constraint.solver.widgets.ConstraintWidget r5;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.View;

        if $r1 != r0 goto label1;

        r4 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        return r4;

     label1:
        if $r1 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.constraint.ConstraintLayout$LayoutParams) $r2;

        r5 = $r3.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        return r5;
    }
    private void init(android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet $r1;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r2;
        android.util.SparseArray $r3;
        int $i0, i1, $i2, $i3;
        android.content.Context $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.support.constraint.ConstraintSet $r7;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setCompanionWidget(java.lang.Object)>(r0);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r0);

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = null;

        if $r1 == null goto label9;

        $r4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        $r5 = <android.support.constraint.R$styleable: int[] ConstraintLayout_Layout>;

        $r6 = virtualinvoke $r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r1, $r5);

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getIndexCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label8;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getIndex(int)>(i1);

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_minWidth>;

        if $i2 != $i3 goto label3;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = $i2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_minHeight>;

        if $i2 != $i3 goto label4;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = $i2;

        goto label2;

     label4:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_maxWidth>;

        if $i2 != $i3 goto label5;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = $i2;

        goto label2;

     label5:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_maxHeight>;

        if $i2 != $i3 goto label6;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = $i2;

        goto label2;

     label6:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel>;

        if $i2 != $i3 goto label7;

        $i3 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel> = $i2;

        goto label2;

     label7:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_constraintSet>;

        if $i2 != $i3 goto label2;

        $i2 = virtualinvoke $r6.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, 0);

        $r7 = new android.support.constraint.ConstraintSet;

        specialinvoke $r7.<android.support.constraint.ConstraintSet: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = $r7;

        $r7 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        $r4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        virtualinvoke $r7.<android.support.constraint.ConstraintSet: void load(android.content.Context,int)>($r4, $i2);

        goto label2;

     label8:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

     label9:
        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mOptimizationLevel>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>($i0);

        return;
    }
    private void internalMeasureChildren(int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1, i2, i3, $i4, i5, $i6, $i7, i8, $i9;
        android.support.constraint.solver.widgets.ConstraintWidget r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.constraint.ConstraintLayout$LayoutParams r4;
        boolean $z0, z1, z2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingTop()>();

        i3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingBottom()>();

        i2 = i2 + i3;

        i3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        $i4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingRight()>();

        i3 = i3 + $i4;

        $i4 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        i5 = 0;

     label01:
        if i5 >= $i4 goto label17;

        $r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i5);

        $i6 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i6 != 8 goto label03;

     label02:
        i5 = i5 + 1;

        goto label01;

     label03:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.constraint.ConstraintLayout$LayoutParams) $r3;

        r1 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if $z0 != 0 goto label02;

        $i7 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        i8 = $i7;

        $i6 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $z0 != 0 goto label05;

        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $z0 != 0 goto label05;

        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $z0 != 0 goto label04;

        $i9 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth>;

        if $i9 == 1 goto label05;

     label04:
        $i9 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i9 == -1 goto label05;

        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $z0 != 0 goto label14;

        $i9 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight>;

        if $i9 == 1 goto label05;

        $i9 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i9 != -1 goto label14;

     label05:
        $z0 = 1;

     label06:
        z1 = 0;

        z2 = 0;

        if $z0 == 0 goto label11;

        if $i7 == 0 goto label07;

        if $i7 != -1 goto label15;

     label07:
        i8 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i0, i3, -2);

        z1 = 1;

     label08:
        if $i6 == 0 goto label09;

        if $i6 != -1 goto label16;

     label09:
        $i6 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i1, i2, -2);

        z2 = 1;

     label10:
        virtualinvoke $r2.<android.view.View: void measure(int,int)>(i8, $i6);

        i8 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i6 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

     label11:
        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>(i8);

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>($i6);

        if z1 == 0 goto label12;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: void setWrapWidth(int)>(i8);

     label12:
        if z2 == 0 goto label13;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: void setWrapHeight(int)>($i6);

     label13:
        $z0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline>;

        if $z0 == 0 goto label02;

        $i6 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

        if $i6 == -1 goto label02;

        virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: void setBaselineDistance(int)>($i6);

        goto label02;

     label14:
        $z0 = 0;

        goto label06;

     label15:
        i8 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i0, i3, $i7);

        goto label08;

     label16:
        $i6 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i1, i2, $i6);

        goto label10;

     label17:
        return;
    }
    private void setChildrenConstraints()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintSet $r1;
        int $i0, i1, $i2, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r2;
        android.view.View $r3;
        android.support.constraint.solver.widgets.ConstraintWidget $r4, $r9;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.constraint.ConstraintLayout$LayoutParams r6, r14;
        boolean $z0;
        java.util.ArrayList $r7;
        android.support.constraint.solver.widgets.Guideline r8;
        float $f0;
        byte $b3;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r10, $r11;
        android.util.SparseArray $r12;
        java.lang.Object $r13;
        android.support.constraint.solver.widgets.ConstraintAnchor $r15, $r16;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r17;
        android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour $r18;
        java.lang.String $r19;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        if $r1 == null goto label01;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet>;

        virtualinvoke $r1.<android.support.constraint.ConstraintSet: void applyToInternal(android.support.constraint.ConstraintLayout)>(r0);

     label01:
        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void removeAllChildren()>();

        i1 = 0;

     label02:
        if i1 >= $i0 goto label35;

        $r3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i1);

        $r4 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($r3);

        if $r4 != null goto label04;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.constraint.ConstraintLayout$LayoutParams) $r5;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void reset()>();

        $i2 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVisibility(int)>($i2);

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setCompanionWidget(java.lang.Object)>($r3);

        $r2 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void add(android.support.constraint.solver.widgets.ConstraintWidget)>($r4);

        $z0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $z0 == 0 goto label05;

        $z0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $z0 != 0 goto label06;

     label05:
        $r7 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label06:
        $z0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if $z0 == 0 goto label09;

        r8 = (android.support.constraint.solver.widgets.Guideline) $r4;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        if $i2 == -1 goto label07;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        virtualinvoke r8.<android.support.constraint.solver.widgets.Guideline: void setGuideBegin(int)>($i2);

     label07:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        if $i2 == -1 goto label08;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        virtualinvoke r8.<android.support.constraint.solver.widgets.Guideline: void setGuideEnd(int)>($i2);

     label08:
        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

        $b3 = $f0 cmpl -1.0F;

        if $b3 == 0 goto label03;

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

        virtualinvoke r8.<android.support.constraint.solver.widgets.Guideline: void setGuidePercent(float)>($f0);

        goto label03;

     label09:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        if $i2 != -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i2 == -1 goto label10;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i2 != -1 goto label03;

     label10:
        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft>;

        i5 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight>;

        i6 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft>;

        i7 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight>;

        i8 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin>;

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias>;

        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 >= 17 goto label12;

        $i10 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        i4 = $i10;

        $i11 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        i5 = $i11;

        $i9 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        i6 = $i9;

        $i12 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        i7 = $i12;

        i8 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin>;

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        if $i10 != -1 goto label11;

        if $i11 != -1 goto label11;

        $i10 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i10 == -1 goto label25;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

     label11:
        if $i9 != -1 goto label12;

        if $i12 != -1 goto label12;

        $i9 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i9 == -1 goto label26;

        i6 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

     label12:
        if i4 == -1 goto label27;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>(i4);

        if $r9 == null goto label13;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, i4, i8);

     label13:
        if i6 == -1 goto label28;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>(i6);

        if $r9 == null goto label14;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, i4, $i2);

     label14:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        if $i2 == -1 goto label29;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i2);

        if $r9 == null goto label15;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, $i2, i4);

     label15:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        if $i2 == -1 goto label30;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i2);

        if $r9 == null goto label16;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, $i2, i4);

     label16:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        if $i2 == -1 goto label17;

        $r12 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r3 = (android.view.View) $r13;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i2);

        if $r9 == null goto label17;

        if $r3 == null goto label17;

        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r5 instanceof android.support.constraint.ConstraintLayout$LayoutParams;

        if $z0 == 0 goto label17;

        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r14 = (android.support.constraint.ConstraintLayout$LayoutParams) $r5;

        r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        r14.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 1;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        $r16 = virtualinvoke $r9.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r17 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength STRONG>;

        virtualinvoke $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int,boolean)>($r16, 0, -1, $r17, 0, 1);

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        virtualinvoke $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: void reset()>();

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        virtualinvoke $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: void reset()>();

     label17:
        $b3 = $f0 cmpl 0.0F;

        if $b3 < 0 goto label18;

        $b3 = $f0 cmpl 0.5F;

        if $b3 == 0 goto label18;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)>($f0);

     label18:
        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 < 0 goto label19;

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        $b3 = $f0 cmpl 0.5F;

        if $b3 == 0 goto label19;

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)>($f0);

     label19:
        $z0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isInEditMode()>();

        if $z0 == 0 goto label21;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        if $i2 != -1 goto label20;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        if $i2 == -1 goto label21;

     label20:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setOrigin(int,int)>($i2, i4);

     label21:
        $z0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        if $z0 != 0 goto label32;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i2 != -1 goto label31;

        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i2;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i2;

     label22:
        $z0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        if $z0 != 0 goto label34;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i2 != -1 goto label33;

        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i2;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r15 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        $r15.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i2;

     label23:
        $r19 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        if $r19 == null goto label24;

        $r19 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setDimensionRatio(java.lang.String)>($r19);

     label24:
        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalWeight(float)>($f0);

        $f0 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalWeight(float)>($f0);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)>($i2);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)>($i2);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth>;

        i6 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalMatchStyle(int,int,int)>($i2, i4, i6);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight>;

        i6 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalMatchStyle(int,int,int)>($i2, i4, i6);

        goto label03;

     label25:
        $i10 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i10 == -1 goto label11;

        i5 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        goto label11;

     label26:
        $i9 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i9 == -1 goto label12;

        i7 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        goto label12;

     label27:
        if i5 == -1 goto label13;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>(i5);

        if $r9 == null goto label13;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int leftMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, i4, i8);

        goto label13;

     label28:
        if i7 == -1 goto label14;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>(i7);

        if $r9 == null goto label14;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int rightMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, i4, $i2);

        goto label14;

     label29:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        if $i2 == -1 goto label15;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i2);

        if $r9 == null goto label15;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int topMargin>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, $i2, i4);

        goto label15;

     label30:
        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        if $i2 == -1 goto label16;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        $r9 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int)>($i2);

        if $r9 == null goto label16;

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r11 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomMargin>;

        i4 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int)>($r10, $r9, $r11, $i2, i4);

        goto label16;

     label31:
        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>(0);

        goto label22;

     label32:
        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>($i2);

        goto label22;

     label33:
        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>(0);

        goto label23;

     label34:
        $r18 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r18);

        $i2 = r6.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>($i2);

        goto label23;

     label35:
        return;
    }
    private void setSelfDimensionBehaviour(int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, i7;
        android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour r1, r2;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingTop()>();

        i3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingBottom()>();

        i2 = i2 + i3;

        i3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        $i6 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingRight()>();

        i3 = i3 + $i6;

        r1 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $i6 = 0;

        i7 = 0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        lookupswitch($i4)
        {
            case -2147483648: goto label3;
            case 0: goto label4;
            case 1073741824: goto label5;
            default: goto label1;
        };

     label1:
        lookupswitch($i0)
        {
            case -2147483648: goto label6;
            case 0: goto label7;
            case 1073741824: goto label8;
            default: goto label2;
        };

     label2:
        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>(0);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>(0);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>(r1);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>($i6);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)>(r2);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(i7);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinWidth(int)>($i0);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setMinHeight(int)>($i0);

        return;

     label3:
        r1 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        $i6 = $i5;

        goto label1;

     label4:
        r1 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        goto label1;

     label5:
        $i4 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $i6 = $i4 - i3;

        goto label1;

     label6:
        r2 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        i7 = $i1;

        goto label2;

     label7:
        r2 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        goto label2;

     label8:
        $i0 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        i7 = $i0 - i2;

        goto label2;
    }
    private void updateHierarchy()
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, i1;
        boolean z0, $z1;
        android.view.View $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        z0 = 0;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>(i1);

        $z1 = virtualinvoke $r1.<android.view.View: boolean isLayoutRequested()>();

        if $z1 == 0 goto label3;

        z0 = 1;

     label2:
        if z0 == 0 goto label4;

        $r2 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void setChildrenConstraints()>();

        return;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label1;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void onViewAdded(android.view.View)>($r1);

     label1:
        return;
    }
    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.constraint.ConstraintLayout$LayoutParams;

        return $z0;
    }
    protected android.support.constraint.ConstraintLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintLayout$LayoutParams $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = new android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke $r1.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintLayout$LayoutParams $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    public android.support.constraint.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet $r1;
        android.support.constraint.ConstraintLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.constraint.ConstraintLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }
    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.util.AttributeSet $r1;
        android.support.constraint.ConstraintLayout$LayoutParams $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }
    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.constraint.ConstraintLayout$LayoutParams $r2;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke $r2.<android.support.constraint.ConstraintLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    public int getMaxHeight()
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        return i0;
    }
    public int getMaxWidth()
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        return i0;
    }
    public int getMinHeight()
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        return i0;
    }
    public int getMinWidth()
    {
        android.support.constraint.ConstraintLayout r0;
        int i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        i0 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        return i0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, i4, i5;
        android.support.constraint.solver.widgets.ConstraintWidget r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.constraint.ConstraintLayout$LayoutParams r4;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        $z0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: boolean isInEditMode()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: android.view.View getChildAt(int)>($i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.constraint.ConstraintLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 != 8 goto label3;

        $z1 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        if $z1 != 0 goto label3;

        if $z0 != 0 goto label3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r1 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $i2 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getDrawX()>();

        $i3 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getDrawY()>();

        i5 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getWidth()>();

        i5 = $i2 + i5;

        i4 = virtualinvoke r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getHeight()>();

        i4 = $i3 + i4;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i2, $i3, i5, i4);

        goto label2;

     label4:
        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r1;
        boolean $z0, z1, z2, $z3;
        java.util.ArrayList $r2;
        android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour $r3, $r4;
        java.lang.Object $r5;
        android.support.constraint.solver.widgets.ConstraintWidget r6;
        android.view.View r7;
        android.view.ViewGroup$LayoutParams $r8;
        android.support.constraint.ConstraintLayout$LayoutParams r9;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r10;
        android.support.constraint.solver.widgets.ConstraintAnchor $r11;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i6 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingLeft()>();

        i2 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingTop()>();

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setX(int)>(i6);

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setY(int)>(i2);

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void setSelfDimensionBehaviour(int,int)>($i0, $i1);

        $z0 = r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy>;

        if $z0 == 0 goto label01;

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 0;

        specialinvoke r0.<android.support.constraint.ConstraintLayout: void updateHierarchy()>();

     label01:
        specialinvoke r0.<android.support.constraint.ConstraintLayout: void internalMeasureChildren(int,int)>($i0, $i1);

        $i7 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getChildCount()>();

        if $i7 <= 0 goto label02;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void solveLinearSystem()>();

     label02:
        $i7 = 0;

        $r2 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets>;

        i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingBottom()>();

        i2 = i2 + $i8;

        $i8 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getPaddingRight()>();

        i6 = i6 + $i8;

        if i3 <= 0 goto label20;

        $z0 = 0;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $r3 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r4 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r3 != $r4 goto label07;

        z1 = 1;

     label03:
        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $r3 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $r4 = <android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour: android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r3 != $r4 goto label08;

        z2 = 1;

     label04:
        $i8 = 0;

     label05:
        if $i8 >= i3 goto label19;

        $r2 = r0.<android.support.constraint.ConstraintLayout: java.util.ArrayList mVariableDimensionsWidgets>;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        r6 = (android.support.constraint.solver.widgets.ConstraintWidget) $r5;

        $z3 = r6 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z3 == 0 goto label09;

     label06:
        $i8 = $i8 + 1;

        goto label05;

     label07:
        z1 = 0;

        goto label03;

     label08:
        z2 = 0;

        goto label04;

     label09:
        $r5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()>();

        r7 = (android.view.View) $r5;

        if r7 == null goto label06;

        i4 = virtualinvoke r7.<android.view.View: int getVisibility()>();

        if i4 == 8 goto label06;

        $r8 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.support.constraint.ConstraintLayout$LayoutParams) $r8;

        i4 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if i4 != -2 goto label17;

        i4 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        i4 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i0, i6, i4);

     label10:
        i5 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if i5 != -2 goto label18;

        i5 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        i5 = staticinvoke <android.support.constraint.ConstraintLayout: int getChildMeasureSpec(int,int,int)>($i1, i2, i5);

     label11:
        virtualinvoke r7.<android.view.View: void measure(int,int)>(i4, i5);

        i5 = virtualinvoke r7.<android.view.View: int getMeasuredWidth()>();

        i4 = virtualinvoke r7.<android.view.View: int getMeasuredHeight()>();

        $i9 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getWidth()>();

        if i5 == $i9 goto label13;

        virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: void setWidth(int)>(i5);

        if z1 == 0 goto label12;

        i5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getRight()>();

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i9 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        if i5 <= $i9 goto label12;

        i5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getRight()>();

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i9 = virtualinvoke $r11.<android.support.constraint.solver.widgets.ConstraintAnchor: int getMargin()>();

        i5 = i5 + $i9;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $i9 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>($i9, i5);

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setWidth(int)>(i5);

     label12:
        $z0 = 1;

     label13:
        i5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getHeight()>();

        if i4 == i5 goto label15;

        virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: void setHeight(int)>(i4);

        if z2 == 0 goto label14;

        i4 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getBottom()>();

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        i5 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        if i4 <= i5 goto label14;

        i4 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getBottom()>();

        $r10 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r11 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type)>($r10);

        i5 = virtualinvoke $r11.<android.support.constraint.solver.widgets.ConstraintAnchor: int getMargin()>();

        i4 = i4 + i5;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        i5 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i4);

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setHeight(int)>(i4);

     label14:
        $z0 = 1;

     label15:
        $z3 = r9.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline>;

        if $z3 == 0 goto label16;

        i4 = virtualinvoke r7.<android.view.View: int getBaseline()>();

        if i4 == -1 goto label16;

        i5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getBaselineDistance()>();

        if i4 == i5 goto label16;

        virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: void setBaselineDistance(int)>(i4);

        $z0 = 1;

     label16:
        i4 = <android.os.Build$VERSION: int SDK_INT>;

        if i4 < 11 goto label06;

        i4 = virtualinvoke r7.<android.view.View: int getMeasuredState()>();

        $i7 = staticinvoke <android.support.constraint.ConstraintLayout: int combineMeasuredStates(int,int)>($i7, i4);

        goto label06;

     label17:
        i4 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getWidth()>();

        i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, 1073741824);

        goto label10;

     label18:
        i5 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintWidget: int getHeight()>();

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, 1073741824);

        goto label11;

     label19:
        if $z0 == 0 goto label20;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void solveLinearSystem()>();

     label20:
        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        i3 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        i3 = i3 + i6;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        i6 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        i2 = i6 + i2;

        i6 = <android.os.Build$VERSION: int SDK_INT>;

        if i6 < 11 goto label23;

        $i0 = staticinvoke <android.support.constraint.ConstraintLayout: int resolveSizeAndState(int,int,int)>(i3, $i0, $i7);

        $i7 = $i7 << 16;

        $i1 = staticinvoke <android.support.constraint.ConstraintLayout: int resolveSizeAndState(int,int,int)>(i2, $i1, $i7);

        $i7 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i0);

        $i7 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i1);

        $i0 = $i0 & 16777215;

        $i1 = $i1 & 16777215;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()>();

        if $z0 == 0 goto label21;

        $i0 = $i0 | 16777216;

     label21:
        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $z0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()>();

        if $z0 == 0 goto label22;

        $i1 = $i1 | 16777216;

     label22:
        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label23:
        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void setMeasuredDimension(int,int)>(i3, i2);

        return;
    }
    public void onViewAdded(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View $r1;
        int $i0;
        android.support.constraint.solver.widgets.ConstraintWidget $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.constraint.ConstraintLayout$LayoutParams r4;
        android.support.constraint.solver.widgets.Guideline $r5;
        android.util.SparseArray $r6;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onViewAdded(android.view.View)>($r1);

     label1:
        $r2 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($r1);

        $z0 = $r1 instanceof android.support.constraint.Guideline;

        if $z0 == 0 goto label2;

        $z0 = $r2 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.constraint.ConstraintLayout$LayoutParams) $r3;

        $r5 = new android.support.constraint.solver.widgets.Guideline;

        specialinvoke $r5.<android.support.constraint.solver.widgets.Guideline: void <init>()>();

        r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r5;

        r4.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 1;

        $r2 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $r5 = (android.support.constraint.solver.widgets.Guideline) $r2;

        $i0 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation>;

        virtualinvoke $r5.<android.support.constraint.solver.widgets.Guideline: void setOrientation(int)>($i0);

        $r2 = r4.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

     label2:
        $r6 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r1);

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }
    public void onViewRemoved(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View $r1;
        int $i0;
        android.util.SparseArray $r2;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r3;
        android.support.constraint.solver.widgets.ConstraintWidget $r4;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onViewRemoved(android.view.View)>($r1);

     label1:
        $r2 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        $r3 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        $r4 = specialinvoke r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View)>($r1);

        virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void remove(android.support.constraint.solver.widgets.ConstraintWidget)>($r4);

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }
    public void removeView(android.view.View)
    {
        android.support.constraint.ConstraintLayout r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>($r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label1;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void onViewRemoved(android.view.View)>($r1);

     label1:
        return;
    }
    public void requestLayout()
    {
        android.support.constraint.ConstraintLayout r0;

        r0 := @this: android.support.constraint.ConstraintLayout;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        r0.<android.support.constraint.ConstraintLayout: boolean mDirtyHierarchy> = 1;

        return;
    }
    public void setConstraintSet(android.support.constraint.ConstraintSet)
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.ConstraintSet $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 := @parameter0: android.support.constraint.ConstraintSet;

        r0.<android.support.constraint.ConstraintLayout: android.support.constraint.ConstraintSet mConstraintSet> = $r1;

        return;
    }
    public void setId(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1;
        android.util.SparseArray $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i1 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>($i1);

        specialinvoke r0.<android.view.ViewGroup: void setId(int)>($i0);

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.util.SparseArray mChildrenByIds>;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout: int getId()>();

        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r0);

        return;
    }
    public void setMaxHeight(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMaxHeight>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMaxHeight> = $i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }
    public void setMaxWidth(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMaxWidth>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMaxWidth> = $i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }
    public void setMinHeight(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMinHeight>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMinHeight> = $i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }
    public void setMinWidth(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.constraint.ConstraintLayout: int mMinWidth>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.constraint.ConstraintLayout: int mMinWidth> = $i0;

        virtualinvoke r0.<android.support.constraint.ConstraintLayout: void requestLayout()>();

        return;
    }
    public void setOptimizationLevel(int)
    {
        android.support.constraint.ConstraintLayout r0;
        int $i0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)>($i0);

        return;
    }
    protected void solveLinearSystem()
    {
        android.support.constraint.ConstraintLayout r0;
        android.support.constraint.solver.widgets.ConstraintWidgetContainer $r1;

        r0 := @this: android.support.constraint.ConstraintLayout;

        $r1 = r0.<android.support.constraint.ConstraintLayout: android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget>;

        virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidgetContainer: void layout()>();

        return;
    }
