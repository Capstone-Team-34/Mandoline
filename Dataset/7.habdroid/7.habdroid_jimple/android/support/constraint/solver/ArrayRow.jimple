android.support.constraint.solver.ArrayRow extends java.lang.Object
private static final boolean DEBUG
float constantValue
boolean isSimpleDefinition
boolean used
android.support.constraint.solver.SolverVariable variable
final android.support.constraint.solver.ArrayLinkedVariables variables
    public void <init>(android.support.constraint.solver.Cache)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.Cache $r1;
        android.support.constraint.solver.ArrayLinkedVariables $r2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.Cache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable> = null;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = 0.0F;

        r0.<android.support.constraint.solver.ArrayRow: boolean used> = 0;

        r0.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        $r2 = new android.support.constraint.solver.ArrayLinkedVariables;

        specialinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: void <init>(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.Cache)>(r0, $r1);

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables> = $r2;

        return;
    }
    public android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        android.support.constraint.solver.ArrayLinkedVariables $r3;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        return r0;
    }
    android.support.constraint.solver.ArrayRow addSingleError(android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0;
        android.support.constraint.solver.ArrayLinkedVariables $r2;
        float $f0;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = (float) $i0;

        virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, $f0);

        return r0;
    }
    android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, float, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.support.constraint.solver.ArrayLinkedVariables $r5;
        byte $b2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        $f0 := @parameter3: float;

        $r3 := @parameter4: android.support.constraint.solver.SolverVariable;

        $r4 := @parameter5: android.support.constraint.solver.SolverVariable;

        $i1 := @parameter6: int;

        if $r2 != $r3 goto label1;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -2.0F);

        return r0;

     label1:
        $b2 = $f0 cmpl 0.5F;

        if $b2 != 0 goto label3;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, 1.0F);

        if $i0 > 0 goto label2;

        if $i1 <= 0 goto label7;

     label2:
        $i0 = neg $i0;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        return r0;

     label3:
        $b2 = $f0 cmpg 0.0F;

        if $b2 > 0 goto label4;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, 1.0F);

        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        return r0;

     label4:
        $b2 = $f0 cmpl 1.0F;

        if $b2 < 0 goto label5;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, 1.0F);

        $f0 = (float) $i1;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        return r0;

     label5:
        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        $f1 = $f1 * 1.0F;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, $f1);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        $f1 = $f1 * -1.0F;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, $f1);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = -1.0F * $f0;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, $f1);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F * $f0;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, $f1);

        if $i0 > 0 goto label6;

        if $i1 <= 0 goto label7;

     label6:
        $i0 = neg $i0;

        $f1 = (float) $i0;

        $f2 = 1.0F - $f0;

        $f1 = $f1 * $f2;

        $f2 = (float) $i1;

        $f0 = $f2 * $f0;

        $f0 = $f1 + $f0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

     label7:
        return r0;
    }
    android.support.constraint.solver.ArrayRow createRowDefinition(android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0;
        float $f0;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter1: int;

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable> = $r1;

        $f0 = (float) $i0;

        $r1.<android.support.constraint.solver.SolverVariable: float computedValue> = $f0;

        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        r0.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition> = 1;

        return r0;
    }
    android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, float)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        float $f0, $f1;
        android.support.constraint.solver.ArrayLinkedVariables $r4;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r3 := @parameter2: android.support.constraint.solver.SolverVariable;

        $f0 := @parameter3: float;

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, $f1);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, $f0);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowDimensionRatio(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, float)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3, $r4;
        float $f0;
        android.support.constraint.solver.ArrayLinkedVariables $r5;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r3 := @parameter2: android.support.constraint.solver.SolverVariable;

        $r4 := @parameter3: android.support.constraint.solver.SolverVariable;

        $f0 := @parameter4: float;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, $f0);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = neg $f0;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, $f0);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowEqualDimension(float, float, float, android.support.constraint.solver.SolverVariable, int, android.support.constraint.solver.SolverVariable, int, android.support.constraint.solver.SolverVariable, int, android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        float $f0, $f1, $f2;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        byte $b4;
        android.support.constraint.solver.ArrayLinkedVariables $r5;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter4: int;

        $r2 := @parameter5: android.support.constraint.solver.SolverVariable;

        $i1 := @parameter6: int;

        $r3 := @parameter7: android.support.constraint.solver.SolverVariable;

        $i2 := @parameter8: int;

        $r4 := @parameter9: android.support.constraint.solver.SolverVariable;

        $i3 := @parameter10: int;

        $b4 = $f1 cmpl 0.0F;

        if $b4 == 0 goto label1;

        $b4 = $f0 cmpl $f2;

        if $b4 != 0 goto label2;

     label1:
        $i0 = neg $i0;

        $i0 = $i0 - $i1;

        $i0 = $i0 + $i2;

        $i0 = $i0 + $i3;

        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, -1.0F);

        return r0;

     label2:
        $f0 = $f0 / $f1;

        $f1 = $f2 / $f1;

        $f0 = $f0 / $f1;

        $i0 = neg $i0;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f2 = (float) $i2;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $f2 = (float) $i3;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f1;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r4, $f0);

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = neg $f0;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, $f0);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0;
        float $f0;
        android.support.constraint.solver.ArrayLinkedVariables $r2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter1: int;

        if $i0 >= 0 goto label1;

        $i0 = $i0 * -1;

        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        return r0;

     label1:
        $f0 = (float) $i0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        int $i0, i1;
        boolean z0;
        float $f0;
        android.support.constraint.solver.ArrayLinkedVariables $r3;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        z0 = 0;

        if $i0 == 0 goto label2;

        i1 = $i0;

        if $i0 >= 0 goto label1;

        i1 = $i0 * -1;

        z0 = 1;

     label1:
        $f0 = (float) i1;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if z0 != 0 goto label3;

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, 1.0F);

        return r0;

     label3:
        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        int $i0, i1;
        boolean z0;
        float $f0;
        android.support.constraint.solver.ArrayLinkedVariables $r4;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r3 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        z0 = 0;

        if $i0 == 0 goto label2;

        i1 = $i0;

        if $i0 >= 0 goto label1;

        i1 = $i0 * -1;

        z0 = 1;

     label1:
        $f0 = (float) i1;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if z0 != 0 goto label3;

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, 1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, 1.0F);

        return r0;

     label3:
        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, -1.0F);

        return r0;
    }
    public android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        int $i0, i1;
        boolean z0;
        float $f0;
        android.support.constraint.solver.ArrayLinkedVariables $r4;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r3 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        z0 = 0;

        if $i0 == 0 goto label2;

        i1 = $i0;

        if $i0 >= 0 goto label1;

        i1 = $i0 * -1;

        z0 = 1;

     label1:
        $f0 = (float) i1;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if z0 != 0 goto label3;

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, 1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, -1.0F);

        return r0;

     label3:
        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r1, 1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        $r4 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r3, 1.0F);

        return r0;
    }
    void ensurePositiveConstant()
    {
        android.support.constraint.solver.ArrayRow r0;
        float $f0;
        byte $b0;
        android.support.constraint.solver.ArrayLinkedVariables $r1;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $f0 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f0 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $f0 = $f0 * -1.0F;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<android.support.constraint.solver.ArrayLinkedVariables: void invert()>();

     label1:
        return;
    }
    boolean hasAtLeastOnePositiveVariable()
    {
        android.support.constraint.solver.ArrayRow r0;
        boolean $z0;
        android.support.constraint.solver.ArrayLinkedVariables $r1;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $z0 = virtualinvoke $r1.<android.support.constraint.solver.ArrayLinkedVariables: boolean hasAtLeastOnePositiveVariable()>();

        return $z0;
    }
    boolean hasKeyVariable()
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        android.support.constraint.solver.SolverVariable$Type $r2, $r3;
        float $f0;
        byte $b0;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r2 = $r1.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r3 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r2 == $r3 goto label1;

        $f0 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    boolean hasVariable(android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        boolean $z0;
        android.support.constraint.solver.ArrayLinkedVariables $r2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $z0 = virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: boolean containsKey(android.support.constraint.solver.SolverVariable)>($r1);

        return $z0;
    }
    void pickRowVariable()
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1;
        android.support.constraint.solver.ArrayLinkedVariables $r2;
        int $i0;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $r1 = virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable pickPivotCandidate()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<android.support.constraint.solver.ArrayRow: void pivot(android.support.constraint.solver.SolverVariable)>($r1);

     label1:
        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $i0 = $r2.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if $i0 != 0 goto label2;

        r0.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition> = 1;

     label2:
        return;
    }
    void pivot(android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        float f0, $f1;
        android.support.constraint.solver.ArrayLinkedVariables $r3;
        byte $b0;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void put(android.support.constraint.solver.SolverVariable,float)>($r2, -1.0F);

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable> = null;

     label1:
        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        f0 = virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: float remove(android.support.constraint.solver.SolverVariable)>($r1);

        f0 = f0 * -1.0F;

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable> = $r1;

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label2;

        return;

     label2:
        $f1 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $f1 = $f1 / f0;

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = $f1;

        $r3 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void divideByAmount(float)>(f0);

        return;
    }
    public void reset()
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.ArrayLinkedVariables $r1;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable> = null;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<android.support.constraint.solver.ArrayLinkedVariables: void clear()>();

        r0.<android.support.constraint.solver.ArrayRow: float constantValue> = 0.0F;

        r0.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        return;
    }
    int sizeInBytes()
    {
        android.support.constraint.solver.ArrayRow r0;
        int $i0, i1;
        android.support.constraint.solver.SolverVariable $r1;
        android.support.constraint.solver.ArrayLinkedVariables $r2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $i0 = 0;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        if $r1 == null goto label1;

        $i0 = 4;

     label1:
        $i0 = $i0 + 4;

        i1 = $i0 + 4;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: int sizeInBytes()>();

        $i0 = i1 + $i0;

        return $i0;
    }
    java.lang.String toReadableString()
    {
        android.support.constraint.solver.ArrayRow r0;
        int i0, i2;
        android.support.constraint.solver.SolverVariable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, r4;
        boolean z0;
        float $f0, f1;
        byte $b1;
        android.support.constraint.solver.ArrayLinkedVariables $r5;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        if $r1 != null goto label05;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = $r3;

        z0 = 0;

        $f0 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label02;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $f0 = r0.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = 1;

     label02:
        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        i0 = $r5.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        i2 = 0;

     label03:
        if i2 >= i0 goto label12;

        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $r1 = virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable getVariable(int)>(i2);

        if $r1 != null goto label06;

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label06:
        $r5 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: float getVariableValue(int)>(i2);

        f1 = $f0;

        $r3 = virtualinvoke $r1.<android.support.constraint.solver.SolverVariable: java.lang.String toString()>();

        if z0 != 0 goto label09;

        $b1 = $f0 cmpg 0.0F;

        if $b1 >= 0 goto label07;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- ");

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        f1 = $f0 * -1.0F;

     label07:
        $b1 = f1 cmpl 1.0F;

        if $b1 != 0 goto label11;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        z0 = 1;

        goto label04;

     label09:
        $b1 = $f0 cmpl 0.0F;

        if $b1 <= 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        f1 = $f0 * -1.0F;

        goto label07;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label12:
        if z0 != 0 goto label13;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label13:
        return r4;
    }
    public java.lang.String toString()
    {
        android.support.constraint.solver.ArrayRow r0;
        java.lang.String $r1;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 = virtualinvoke r0.<android.support.constraint.solver.ArrayRow: java.lang.String toReadableString()>();

        return $r1;
    }
    void updateClientEquations()
    {
        android.support.constraint.solver.ArrayRow r0;
        android.support.constraint.solver.ArrayLinkedVariables $r1;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<android.support.constraint.solver.ArrayLinkedVariables: void updateClientEquations(android.support.constraint.solver.ArrayRow)>(r0);

        return;
    }
    boolean updateRowWithEquation(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.ArrayRow r0, $r1;
        android.support.constraint.solver.ArrayLinkedVariables $r2;

        r0 := @this: android.support.constraint.solver.ArrayRow;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $r2 = r0.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<android.support.constraint.solver.ArrayLinkedVariables: void updateFromRow(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow)>(r0, $r1);

        return 1;
    }
