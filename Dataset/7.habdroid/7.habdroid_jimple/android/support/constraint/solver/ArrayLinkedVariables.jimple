android.support.constraint.solver.ArrayLinkedVariables extends java.lang.Object
private static final boolean DEBUG
private static final int NONE
private int ROW_SIZE
private android.support.constraint.solver.SolverVariable candidate
int currentSize
private int[] mArrayIndices
private int[] mArrayNextIndices
private float[] mArrayValues
private final android.support.constraint.solver.Cache mCache
private boolean mDidFillOnce
private int mHead
private int mLast
private final android.support.constraint.solver.ArrayRow mRow
    void <init>(android.support.constraint.solver.ArrayRow, android.support.constraint.solver.Cache)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.ArrayRow $r1;
        android.support.constraint.solver.Cache $r2;
        int $i0;
        int[] $r3;
        float[] $r4;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $r2 := @parameter1: android.support.constraint.solver.Cache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = 0;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE> = 8;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable candidate> = null;

        $i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = newarray (int)[$i0];

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices> = $r3;

        $i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = newarray (int)[$i0];

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = $r3;

        $i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r4 = newarray (float)[$i0];

        r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues> = $r4;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.ArrayRow mRow> = $r1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache> = $r2;

        return;
    }
    public final void add(android.support.constraint.solver.SolverVariable, float)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable $r1;
        float $f0, $f1;
        int i0, $i2, $i3, i4, $i5;
        byte $b1;
        float[] $r2;
        int[] $r3, $r7;
        boolean $z0;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        android.support.constraint.solver.ArrayRow $r6;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $f0 := @parameter1: float;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label01;

        return;

     label01:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i2 != -1 goto label02;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = 0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r2[$i2] = $f0;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $i3 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        $r3[$i2] = $i3;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r3[$i2] = -1;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $i2 = $i2 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = $i2;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 != 0 goto label19;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i2 = $i2 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i2;

        return;

     label02:
        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $i2 = -1;

        i4 = 0;

     label03:
        if $i3 == -1 goto label09;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i4 >= i0 goto label09;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = $r3[$i3];

        $i5 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if i0 != $i5 goto label07;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f1 = $r2[$i3];

        $f0 = $f1 + $f0;

        $r2[$i3] = $f0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r2[$i3];

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label19;

        i4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i3 != i4 goto label06;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i2 = $r3[$i3];

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = $i2;

     label04:
        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r1 = $r5[i0];

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.ArrayRow mRow>;

        virtualinvoke $r1.<android.support.constraint.solver.SolverVariable: void removeClientEquation(android.support.constraint.solver.ArrayRow)>($r6);

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 == 0 goto label05;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i3;

     label05:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $i2 = $i2 + -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = $i2;

        return;

     label06:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r7 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i4 = $r7[$i3];

        $r3[$i2] = i4;

        goto label04;

     label07:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = $r3[$i3];

        $i5 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if i0 >= $i5 goto label08;

        $i2 = $i3;

     label08:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i3 = $r3[$i3];

        i4 = i4 + 1;

        goto label03;

     label09:
        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i3 = $i3 + 1;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 == 0 goto label10;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i3 = $r3[$i3];

        if $i3 != -1 goto label16;

        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

     label10:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = lengthof $r3;

        if $i3 < i0 goto label12;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i4 = lengthof $r3;

        if i0 >= i4 goto label12;

        i0 = 0;

     label11:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i4 = lengthof $r3;

        if i0 >= i4 goto label12;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i4 = $r3[i0];

        if i4 != -1 goto label17;

        $i3 = i0;

     label12:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = lengthof $r3;

        if $i3 < i0 goto label13;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = lengthof $r3;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        i0 = i0 * 2;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE> = i0;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        i0 = $i3 + -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = i0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r2, i0);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues> = $r2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r3, i0);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices> = $r3;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r3, i0);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = $r3;

     label13:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        $r3[$i3] = i0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $r2[$i3] = $f0;

        if $i2 == -1 goto label18;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r7 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r7[$i2];

        $r3[$i3] = i0;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r3[$i2] = $i3;

     label14:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $i2 = $i2 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = $i2;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 != 0 goto label15;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i2 = $i2 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i2;

     label15:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label19;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = lengthof $r3;

        $i2 = $i2 + -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i2;

        return;

     label16:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = lengthof $r3;

        goto label10;

     label17:
        i0 = i0 + 1;

        goto label11;

     label18:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r3[$i3] = $i2;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = $i3;

        goto label14;

     label19:
        return;
    }
    public final void clear()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = 0;

        return;
    }
    final boolean containsKey(android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0, $i1, i2, $i3;
        int[] $r2;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i1 != -1 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i2 = 0;

     label2:
        if $i1 == -1 goto label4;

        $i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i2 >= $i0 goto label4;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = $r2[$i1];

        $i0 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if $i3 != $i0 goto label3;

        return 1;

     label3:
        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i1 = $r2[$i1];

        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }
    public void display()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int i0, i1;
        java.io.PrintStream $r1;
        android.support.constraint.solver.SolverVariable $r2;
        java.lang.StringBuilder $r3;
        float $f0;
        java.lang.String $r4;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("{ ");

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r2 = virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable getVariable(int)>(i1);

        if $r2 != null goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $f0 = virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: float getVariableValue(int)>(i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r4);

        goto label2;

     label4:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(" }");

        return;
    }
    void divideByAmount(float)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        float $f0, $f1;
        int i0, i1, $i2;
        float[] $r1;
        int[] $r2;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $f0 := @parameter0: float;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label2;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label2;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f1 = $r1[i0];

        $f1 = $f1 / $f0;

        $r1[i0] = $f1;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r2[i0];

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    public final float get(android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0, i1, i2, $i3;
        int[] $r2;
        float[] $r3;
        float $f0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i2 = 0;

     label1:
        if i1 == -1 goto label3;

        $i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i2 >= $i0 goto label3;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i3 = $r2[i1];

        $i0 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if $i3 != $i0 goto label2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r3[i1];

        return $f0;

     label2:
        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i1 = $r2[i1];

        i2 = i2 + 1;

        goto label1;

     label3:
        return 0.0F;
    }
    android.support.constraint.solver.SolverVariable getPivotCandidate()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable r1, r2;
        int i0, i1, $i2, $i4;
        float[] $r3;
        float $f0;
        byte $b3;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        int[] $r6;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable candidate>;

        if r1 != null goto label4;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

        r2 = null;

     label1:
        if i0 == -1 goto label5;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label5;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r3[i0];

        $b3 = $f0 cmpg 0.0F;

        if $b3 >= 0 goto label3;

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r6[i0];

        r1 = $r5[$i2];

        if r2 == null goto label2;

        $i2 = r2.<android.support.constraint.solver.SolverVariable: int strength>;

        $i4 = r1.<android.support.constraint.solver.SolverVariable: int strength>;

        if $i2 >= $i4 goto label3;

     label2:
        r2 = r1;

     label3:
        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r6[i0];

        i1 = i1 + 1;

        goto label1;

     label4:
        r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable candidate>;

        return r1;

     label5:
        return r2;
    }
    final android.support.constraint.solver.SolverVariable getVariable(int)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int $i0, i1, i2, $i3;
        android.support.constraint.solver.Cache $r1;
        android.support.constraint.solver.SolverVariable[] $r2;
        int[] $r3;
        android.support.constraint.solver.SolverVariable $r4;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $i0 := @parameter0: int;

        i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i2 = 0;

     label1:
        if i1 == -1 goto label3;

        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i2 >= $i3 goto label3;

        if i2 != $i0 goto label2;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r2 = $r1.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i0 = $r3[i1];

        $r4 = $r2[$i0];

        return $r4;

     label2:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i1 = $r3[i1];

        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }
    final float getVariableValue(int)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int $i0, i1, i2, $i3;
        float[] $r1;
        float $f0;
        int[] $r2;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $i0 := @parameter0: int;

        i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i2 = 0;

     label1:
        if i1 == -1 goto label3;

        $i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i2 >= $i3 goto label3;

        if i2 != $i0 goto label2;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r1[i1];

        return $f0;

     label2:
        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i1 = $r2[i1];

        i2 = i2 + 1;

        goto label1;

     label3:
        return 0.0F;
    }
    boolean hasAtLeastOnePositiveVariable()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int i0, i1, $i2;
        float[] $r1;
        float $f0;
        byte $b3;
        int[] $r2;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label3;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label3;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r1[i0];

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r2[i0];

        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
    void invert()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int i0, i1, $i2;
        float[] $r1;
        float $f0;
        int[] $r2;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label2;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label2;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r1[i0];

        $f0 = $f0 * -1.0F;

        $r1[i0] = $f0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r2[i0];

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    android.support.constraint.solver.SolverVariable pickPivotCandidate()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable r1, r2, r7;
        int i0, i1, $i2, $i4;
        float[] $r3;
        float f0, $f1;
        byte $b3;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        int[] $r6;
        android.support.constraint.solver.SolverVariable$Type $r8, $r9;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        r1 = null;

        r2 = null;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label8;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label8;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        f0 = $r3[i0];

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label3;

        $f1 = neg 0.001F;

        $b3 = f0 cmpl $f1;

        if $b3 <= 0 goto label2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $r3[i0] = 0.0F;

        f0 = 0.0F;

     label2:
        $b3 = f0 cmpl 0.0F;

        if $b3 == 0 goto label5;

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r6[i0];

        r7 = $r5[$i2];

        $r8 = r7.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r9 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r8 != $r9 goto label6;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label4;

        return r7;

     label3:
        $b3 = f0 cmpg 0.001F;

        if $b3 >= 0 goto label2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $r3[i0] = 0.0F;

        f0 = 0.0F;

        goto label2;

     label4:
        if r2 != null goto label5;

        r2 = r7;

     label5:
        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r6[i0];

        i1 = i1 + 1;

        goto label1;

     label6:
        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label5;

        if r1 == null goto label7;

        $i2 = r7.<android.support.constraint.solver.SolverVariable: int strength>;

        $i4 = r1.<android.support.constraint.solver.SolverVariable: int strength>;

        if $i2 >= $i4 goto label5;

     label7:
        r1 = r7;

        goto label5;

     label8:
        if r2 == null goto label9;

        return r2;

     label9:
        return r1;
    }
    public final void put(android.support.constraint.solver.SolverVariable, float)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable $r1;
        float $f0;
        byte $b0;
        int $i1, $i2, i3, $i4, $i5;
        float[] $r2;
        int[] $r3, $r4;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $f0 := @parameter1: float;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label01;

        virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: float remove(android.support.constraint.solver.SolverVariable)>($r1);

        return;

     label01:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i1 != -1 goto label02;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = 0;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r2[$i1] = $f0;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $i2 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        $r3[$i1] = $i2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r3[$i1] = -1;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $i1 = $i1 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = $i1;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 != 0 goto label16;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i1 = $i1 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i1;

        return;

     label02:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $i1 = -1;

        i3 = 0;

     label03:
        if $i2 == -1 goto label06;

        $i4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i3 >= $i4 goto label06;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i4 = $r3[$i2];

        $i5 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if $i4 != $i5 goto label04;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $r2[$i2] = $f0;

        return;

     label04:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i4 = $r3[$i2];

        $i5 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if $i4 >= $i5 goto label05;

        $i1 = $i2;

     label05:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i2 = $r3[$i2];

        i3 = i3 + 1;

        goto label03;

     label06:
        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i2 = $i2 + 1;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 == 0 goto label07;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i2 = $r3[$i2];

        if $i2 != -1 goto label13;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

     label07:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i3 = lengthof $r3;

        if $i2 < i3 goto label09;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i4 = lengthof $r3;

        if i3 >= $i4 goto label09;

        i3 = 0;

     label08:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i4 = lengthof $r3;

        if i3 >= $i4 goto label09;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i4 = $r3[i3];

        if $i4 != -1 goto label14;

        $i2 = i3;

     label09:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i3 = lengthof $r3;

        if $i2 < i3 goto label10;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = lengthof $r3;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        i3 = i3 * 2;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE> = i3;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 0;

        i3 = $i2 + -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = i3;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r2, i3);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues> = $r2;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r3, i3);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices> = $r3;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int ROW_SIZE>;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r3, i3);

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices> = $r3;

     label10:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i3 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        $r3[$i2] = i3;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $r2[$i2] = $f0;

        if $i1 == -1 goto label15;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i3 = $r4[$i1];

        $r3[$i2] = i3;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r3[$i1] = $i2;

     label11:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $i1 = $i1 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = $i1;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 != 0 goto label12;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast>;

        $i1 = $i1 + 1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i1;

     label12:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = lengthof $r3;

        if $i1 < $i2 goto label16;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce> = 1;

        return;

     label13:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = lengthof $r3;

        goto label07;

     label14:
        i3 = i3 + 1;

        goto label08;

     label15:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        $r3[$i2] = $i1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = $i2;

        goto label11;

     label16:
        return;
    }
    public final float remove(android.support.constraint.solver.SolverVariable)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        int i0, $i1, i2, i3, $i4;
        int[] $r3, $r8;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        android.support.constraint.solver.ArrayRow $r6;
        boolean $z0;
        float[] $r7;
        float $f0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable candidate>;

        if $r2 != $r1 goto label1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable candidate> = null;

     label1:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i1 != -1 goto label2;

        return 0.0F;

     label2:
        $i1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i2 = -1;

        i3 = 0;

     label3:
        if $i1 == -1 goto label8;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i3 >= i0 goto label8;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        i0 = $r3[$i1];

        $i4 = $r1.<android.support.constraint.solver.SolverVariable: int id>;

        if i0 != $i4 goto label7;

        i3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        if $i1 != i3 goto label6;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i2 = $r3[$i1];

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead> = i2;

     label4:
        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r1 = $r5[i0];

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.ArrayRow mRow>;

        virtualinvoke $r1.<android.support.constraint.solver.SolverVariable: void removeClientEquation(android.support.constraint.solver.ArrayRow)>($r6);

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        i0 = i0 + -1;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize> = i0;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $r3[$i1] = -1;

        $z0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: boolean mDidFillOnce>;

        if $z0 == 0 goto label5;

        r0.<android.support.constraint.solver.ArrayLinkedVariables: int mLast> = $i1;

     label5:
        $r7 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r7[$i1];

        return $f0;

     label6:
        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $r8 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i3 = $r8[$i1];

        $r3[i2] = i3;

        goto label4;

     label7:
        i2 = $i1;

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        $i1 = $r3[$i1];

        i3 = i3 + 1;

        goto label3;

     label8:
        return 0.0F;
    }
    int sizeInBytes()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i0 = lengthof $r1;

        $i0 = $i0 * 4;

        $i0 = $i0 * 3;

        $i0 = $i0 + 36;

        return $i0;
    }
    public java.lang.String toString()
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        java.lang.String r1;
        int i0, i1, $i2;
        java.lang.StringBuilder $r2;
        float[] $r3;
        float $f0;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        int[] $r6;
        android.support.constraint.solver.SolverVariable $r7;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        r1 = "";

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label2;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        $f0 = $r3[i0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r6[i0];

        $r7 = $r5[$i2];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r6[i0];

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
    void updateClientEquations(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0;
        android.support.constraint.solver.ArrayRow $r1;
        int i0, i1, $i2;
        android.support.constraint.solver.Cache $r2;
        android.support.constraint.solver.SolverVariable[] $r3;
        int[] $r4;
        android.support.constraint.solver.SolverVariable $r5;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label2;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label2;

        $r2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r4[i0];

        $r5 = $r3[$i2];

        virtualinvoke $r5.<android.support.constraint.solver.SolverVariable: void addClientEquation(android.support.constraint.solver.ArrayRow)>($r1);

        $r4 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r4[i0];

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    void updateFromRow(android.support.constraint.solver.ArrayRow, android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.ArrayLinkedVariables r0, r4;
        android.support.constraint.solver.ArrayRow $r1, $r2;
        float f0, f1, $f2;
        android.support.constraint.solver.SolverVariable r3;
        int i0, i1, $i2, $i3;
        int[] $r5;
        float[] $r6;
        android.support.constraint.solver.Cache $r7;
        android.support.constraint.solver.SolverVariable[] $r8;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $r2 := @parameter1: android.support.constraint.solver.ArrayRow;

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label5;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label5;

        $r5 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r5[i0];

        r3 = $r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $i3 = r3.<android.support.constraint.solver.SolverVariable: int id>;

        if $i2 != $i3 goto label4;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        f1 = $r6[i0];

        r3 = $r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: float remove(android.support.constraint.solver.SolverVariable)>(r3);

        r4 = $r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        i0 = r4.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label2:
        if i0 == -1 goto label3;

        $i2 = r4.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label3;

        $r7 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r8 = $r7.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r5 = r4.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r5[i0];

        r3 = $r8[$i2];

        $r6 = r4.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        f0 = $r6[i0];

        f0 = f0 * f1;

        virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: void add(android.support.constraint.solver.SolverVariable,float)>(r3, f0);

        $r5 = r4.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r5[i0];

        i1 = i1 + 1;

        goto label2;

     label3:
        f0 = $r1.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $f2 = $r2.<android.support.constraint.solver.ArrayRow: float constantValue>;

        f1 = $f2 * f1;

        f1 = f0 + f1;

        $r1.<android.support.constraint.solver.ArrayRow: float constantValue> = f1;

        r3 = $r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        virtualinvoke r3.<android.support.constraint.solver.SolverVariable: void removeClientEquation(android.support.constraint.solver.ArrayRow)>($r1);

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

        goto label1;

     label4:
        $r5 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r5[i0];

        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }
    void updateFromSystem(android.support.constraint.solver.ArrayRow, android.support.constraint.solver.ArrayRow[])
    {
        android.support.constraint.solver.ArrayLinkedVariables r0, r5;
        android.support.constraint.solver.ArrayRow $r1, r3;
        android.support.constraint.solver.ArrayRow[] $r2;
        float f0, f1, $f2;
        android.support.constraint.solver.SolverVariable r4;
        int i0, i1, $i2;
        android.support.constraint.solver.Cache $r6;
        android.support.constraint.solver.SolverVariable[] $r7;
        int[] $r8;
        float[] $r9;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.ArrayLinkedVariables;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $r2 := @parameter1: android.support.constraint.solver.ArrayRow[];

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label1:
        if i0 == -1 goto label5;

        $i2 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label5;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r7 = $r6.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r8 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r8[i0];

        r4 = $r7[$i2];

        $i2 = r4.<android.support.constraint.solver.SolverVariable: int definitionId>;

        if $i2 == -1 goto label4;

        $r9 = r0.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        f1 = $r9[i0];

        virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: float remove(android.support.constraint.solver.SolverVariable)>(r4);

        i0 = r4.<android.support.constraint.solver.SolverVariable: int definitionId>;

        r3 = $r2[i0];

        $z0 = r3.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition>;

        if $z0 != 0 goto label3;

        r5 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        i0 = r5.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

     label2:
        if i0 == -1 goto label3;

        $i2 = r5.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if i1 >= $i2 goto label3;

        $r6 = r0.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.Cache mCache>;

        $r7 = $r6.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $r8 = r5.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayIndices>;

        $i2 = $r8[i0];

        r4 = $r7[$i2];

        $r9 = r5.<android.support.constraint.solver.ArrayLinkedVariables: float[] mArrayValues>;

        f0 = $r9[i0];

        f0 = f0 * f1;

        virtualinvoke r0.<android.support.constraint.solver.ArrayLinkedVariables: void add(android.support.constraint.solver.SolverVariable,float)>(r4, f0);

        $r8 = r5.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r8[i0];

        i1 = i1 + 1;

        goto label2;

     label3:
        f0 = $r1.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $f2 = r3.<android.support.constraint.solver.ArrayRow: float constantValue>;

        f1 = $f2 * f1;

        f1 = f0 + f1;

        $r1.<android.support.constraint.solver.ArrayRow: float constantValue> = f1;

        r4 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        virtualinvoke r4.<android.support.constraint.solver.SolverVariable: void removeClientEquation(android.support.constraint.solver.ArrayRow)>($r1);

        i0 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int mHead>;

        i1 = 0;

        goto label1;

     label4:
        $r8 = r0.<android.support.constraint.solver.ArrayLinkedVariables: int[] mArrayNextIndices>;

        i0 = $r8[i0];

        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }
