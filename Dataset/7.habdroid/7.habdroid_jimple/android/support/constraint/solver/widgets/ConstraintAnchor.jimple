android.support.constraint.solver.widgets.ConstraintAnchor extends java.lang.Object
private static final boolean ALLOW_BINARY
public static final int ANY_GROUP
public static final int APPLY_GROUP_RESULTS
public static final int AUTO_CONSTRAINT_CREATOR
public static final int SCOUT_CREATOR
private static final int UNSET_GONE_MARGIN
public static final int USER_CREATOR
public static final boolean USE_CENTER_ANCHOR
private int mConnectionCreator
private android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
int mGoneMargin
int mGroup
public int mMargin
final android.support.constraint.solver.widgets.ConstraintWidget mOwner
android.support.constraint.solver.SolverVariable mSolverVariable
private android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength
android.support.constraint.solver.widgets.ConstraintAnchor mTarget
final android.support.constraint.solver.widgets.ConstraintAnchor$Type mType
    public void <init>(android.support.constraint.solver.widgets.ConstraintWidget, android.support.constraint.solver.widgets.ConstraintAnchor$Type)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r3;
        android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType $r4;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        $r2 := @parameter1: android.support.constraint.solver.widgets.ConstraintAnchor$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength NONE>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength> = $r3;

        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType RELAXED>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType> = $r4;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGroup> = 2147483647;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner> = $r1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType> = $r2;

        return;
    }
    private boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget, java.util.HashSet)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, r6;
        android.support.constraint.solver.widgets.ConstraintWidget $r1, $r3;
        java.util.HashSet r2;
        boolean $z0;
        java.util.ArrayList $r4;
        int i0, $i1;
        java.lang.Object $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        r2 := @parameter1: java.util.HashSet;

        $z0 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        $r3 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        if $r1 != $r3 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: java.util.ArrayList getAnchors()>();

        i0 = 0;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label3:
        if i0 >= $i1 goto label5;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r6 = (android.support.constraint.solver.widgets.ConstraintAnchor) $r5;

        $z0 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor)>(r0);

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label4;

        r6 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor getTarget()>();

        $r1 = virtualinvoke r6.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z0 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet)>($r1, r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return 0;
    }
    private java.lang.String toString(java.util.HashSet)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r6;
        java.util.HashSet r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r7;
        android.support.constraint.solver.widgets.ConstraintWidget $r3;
        java.lang.String $r4;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 := @parameter0: java.util.HashSet;

        $z0 = virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r4 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r4 = virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r6 == null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connected to ");

        r0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r4 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.lang.String toString(java.util.HashSet)>(r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $r4 = "";

        goto label1;

     label3:
        return "<-";
    }
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        int $i0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter1: int;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength STRONG>;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int,boolean)>($r1, $i0, -1, $r2, 0, 0);

        return $z0;
    }
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int, int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        int $i0, $i1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength STRONG>;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int,boolean)>($r1, $i0, -1, $r2, $i1, 0);

        return $z0;
    }
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int, int, android.support.constraint.solver.widgets.ConstraintAnchor$Strength, int, boolean)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        int $i0, $i1, $i2;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.support.constraint.solver.widgets.ConstraintAnchor$Strength;

        $i2 := @parameter4: int;

        $z0 := @parameter5: boolean;

        if $r1 != null goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = null;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength NONE>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength> = $r2;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator> = 2;

        return 1;

     label1:
        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor)>($r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = $r1;

        if $i0 <= 0 goto label4;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i0;

     label3:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = $i1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength> = $r2;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator> = $i2;

        return 1;

     label4:
        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        goto label3;
    }
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor, int, android.support.constraint.solver.widgets.ConstraintAnchor$Strength, int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        int $i0, $i1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r2;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.support.constraint.solver.widgets.ConstraintAnchor$Strength;

        $i1 := @parameter3: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int,boolean)>($r1, $i0, -1, $r2, $i1, 0);

        return $z0;
    }
    public int getConnectionCreator()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator>;

        return i0;
    }
    public android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType>;

        return r1;
    }
    public int getGroup()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGroup>;

        return i0;
    }
    public int getMargin()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r2;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $i0 != 8 goto label1;

        return 0;

     label1:
        $i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        if $i0 <= -1 goto label2;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r1 = $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $i0 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $i0 != 8 goto label2;

        $i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin>;

        return $i0;

     label2:
        $i0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin>;

        return $i0;
    }
    public final android.support.constraint.solver.widgets.ConstraintAnchor getOpposite()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        int[] $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;
        android.support.constraint.solver.widgets.ConstraintWidget $r3;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        r0 = $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mRight>;

        return r0;

     label3:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        r0 = $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mLeft>;

        return r0;

     label4:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        r0 = $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mBottom>;

        return r0;

     label5:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        r0 = $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintAnchor mTop>;

        return r0;
    }
    public android.support.constraint.solver.widgets.ConstraintWidget getOwner()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        return r1;
    }
    public int getPriorityLevel()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        int[] $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;
    }
    public int getSnapPriorityLevel()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        byte $b1;
        int[] $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $b1 = 1;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label2;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        $b1 = 0;

     label2:
        return $b1;

     label3:
        return 0;

     label4:
        return 2;

     label5:
        return 3;
    }
    public android.support.constraint.solver.SolverVariable getSolverVariable()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.SolverVariable r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        return r1;
    }
    public android.support.constraint.solver.widgets.ConstraintAnchor$Strength getStrength()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength>;

        return r1;
    }
    public android.support.constraint.solver.widgets.ConstraintAnchor getTarget()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        return r0;
    }
    public android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        return r1;
    }
    public boolean isConnected()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintWidget $r1, $r3;
        java.util.HashSet r2;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $z0 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet)>($r1, r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $r3 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintWidget getParent()>();

        if $r3 != $r1 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: android.support.constraint.solver.widgets.ConstraintWidget getParent()>();

        if $r1 != $r3 goto label3;

        return 1;

     label3:
        return 0;
    }
    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget, android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r2;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintWidget;

        $r2 := @parameter1: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget)>($r1);

        return $z0;
    }
    public boolean isSideAnchor()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        int[] $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }
    public boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        boolean $z0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2, $r3;
        int[] $r4;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = 1;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        if $r2 != $r3 goto label01;

        return 1;

     label01:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label06;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label06;
            case 7: goto label08;
            case 8: goto label08;
            default: goto label02;
        };

     label02:
        return 0;

     label03:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $r2 == $r3 goto label05;

     label04:
        return $z0;

     label05:
        $z0 = 0;

        goto label04;

     label06:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        if $r2 == $r3 goto label07;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if $r2 == $r3 goto label07;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $r2 != $r3 goto label10;

     label07:
        return 1;

     label08:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        if $r2 == $r3 goto label09;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if $r2 == $r3 goto label09;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $r2 == $r3 goto label09;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $r2 != $r3 goto label10;

     label09:
        return 1;

     label10:
        return 0;
    }
    public boolean isSnapCompatibleWith(android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2, $r3;
        int[] $r4;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER>;

        if $r2 != $r3 goto label01;

        return 0;

     label01:
        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r3 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        if $r2 != $r3 goto label02;

        return 1;

     label02:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label13;
            case 5: goto label16;
            case 6: goto label10;
            case 7: goto label19;
            default: goto label03;
        };

     label03:
        return 0;

     label04:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label05;
            case 6: goto label06;
            default: goto label05;
        };

     label05:
        return 0;

     label06:
        return 1;

     label07:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 2: goto label09;
            case 6: goto label09;
            default: goto label08;
        };

     label08:
        return 0;

     label09:
        return 1;

     label10:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 2: goto label12;
            case 3: goto label12;
            default: goto label11;
        };

     label11:
        return 0;

     label12:
        return 1;

     label13:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 5: goto label15;
            case 6: goto label14;
            case 7: goto label15;
            default: goto label14;
        };

     label14:
        return 0;

     label15:
        return 1;

     label16:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label18;
            default: goto label17;
        };

     label17:
        return 0;

     label18:
        return 1;

     label19:
        $r4 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 4: goto label21;
            case 5: goto label21;
            default: goto label20;
        };

     label20:
        return 0;

     label21:
        return 1;
    }
    public boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r1;
        boolean $z0, $z1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2, $r3;
        android.support.constraint.solver.widgets.ConstraintWidget $r4;
        int[] $r5;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor;

        $z0 = 1;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r2 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        if $r2 != $r3 goto label03;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER>;

        if $r2 == $r3 goto label22;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $r2 != $r3 goto label02;

        $r4 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z0 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $z0 == 0 goto label22;

        $r4 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z0 = virtualinvoke $r4.<android.support.constraint.solver.widgets.ConstraintWidget: boolean hasBaseline()>();

        if $z0 == 0 goto label22;

     label02:
        return 1;

     label03:
        $r5 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label15;
            case 5: goto label15;
            default: goto label04;
        };

     label04:
        return 0;

     label05:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE>;

        if $r2 == $r3 goto label07;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $r2 == $r3 goto label07;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $r2 == $r3 goto label07;

     label06:
        return $z0;

     label07:
        $z0 = 0;

        goto label06;

     label08:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT>;

        if $r2 == $r3 goto label09;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT>;

        if $r2 != $r3 goto label13;

     label09:
        $z0 = 1;

     label10:
        $r4 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z1 = $r4 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z1 == 0 goto label12;

        if $z0 != 0 goto label11;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X>;

        if $r2 != $r3 goto label14;

     label11:
        $z0 = 1;

     label12:
        return $z0;

     label13:
        $z0 = 0;

        goto label10;

     label14:
        $z0 = 0;

        goto label12;

     label15:
        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP>;

        if $r2 == $r3 goto label16;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        if $r2 != $r3 goto label20;

     label16:
        $z0 = 1;

     label17:
        $r4 = virtualinvoke $r1.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget getOwner()>();

        $z1 = $r4 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z1 == 0 goto label19;

        if $z0 != 0 goto label18;

        $r3 = <android.support.constraint.solver.widgets.ConstraintAnchor$Type: android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y>;

        if $r2 != $r3 goto label21;

     label18:
        $z0 = 1;

     label19:
        return $z0;

     label20:
        $z0 = 0;

        goto label17;

     label21:
        $z0 = 0;

        goto label19;

     label22:
        return 0;
    }
    public boolean isVerticalAnchor()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        int[] $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$1: int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type>;

        $r2 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        return 0;
    }
    public void reset()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r1;
        android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType $r2;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget> = null;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = 0;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = -1;

        $r1 = <android.support.constraint.solver.widgets.ConstraintAnchor$Strength: android.support.constraint.solver.widgets.ConstraintAnchor$Strength STRONG>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength> = $r1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator> = 0;

        $r2 = <android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType RELAXED>;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType> = $r2;

        return;
    }
    public void resetSolverVariable(android.support.constraint.solver.Cache)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.Cache $r1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        android.support.constraint.solver.SolverVariable $r3;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.Cache;

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        if $r3 != null goto label1;

        $r3 = new android.support.constraint.solver.SolverVariable;

        $r2 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        specialinvoke $r3.<android.support.constraint.solver.SolverVariable: void <init>(android.support.constraint.solver.SolverVariable$Type)>($r2);

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable> = $r3;

        return;

     label1:
        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable mSolverVariable>;

        virtualinvoke $r3.<android.support.constraint.solver.SolverVariable: void reset()>();

        return;
    }
    public void setConnectionCreator(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter0: int;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mConnectionCreator> = $i0;

        return;
    }
    public void setConnectionType(android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType $r1;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType> = $r1;

        return;
    }
    public void setGoneMargin(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGoneMargin> = $i0;

     label1:
        return;
    }
    public void setGroup(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter0: int;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mGroup> = $i0;

        return;
    }
    public void setMargin(int)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: int mMargin> = $i0;

     label1:
        return;
    }
    public void setStrength(android.support.constraint.solver.widgets.ConstraintAnchor$Strength)
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0;
        android.support.constraint.solver.widgets.ConstraintAnchor$Strength $r1;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        $r1 := @parameter0: android.support.constraint.solver.widgets.ConstraintAnchor$Strength;

        $z0 = virtualinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: boolean isConnected()>();

        if $z0 == 0 goto label1;

        r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength> = $r1;

     label1:
        return;
    }
    public java.lang.String toString()
    {
        android.support.constraint.solver.widgets.ConstraintAnchor r0, $r6;
        java.util.HashSet r1;
        java.lang.StringBuilder $r2, $r7;
        android.support.constraint.solver.widgets.ConstraintWidget $r3;
        java.lang.String $r4;
        android.support.constraint.solver.widgets.ConstraintAnchor$Type $r5;

        r0 := @this: android.support.constraint.solver.widgets.ConstraintAnchor;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintWidget mOwner>;

        $r4 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor$Type mType>;

        $r4 = virtualinvoke $r5.<android.support.constraint.solver.widgets.ConstraintAnchor$Type: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        if $r6 == null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connected to ");

        r0 = r0.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.widgets.ConstraintAnchor mTarget>;

        $r4 = specialinvoke r0.<android.support.constraint.solver.widgets.ConstraintAnchor: java.lang.String toString(java.util.HashSet)>(r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $r4 = "";

        goto label1;
    }
