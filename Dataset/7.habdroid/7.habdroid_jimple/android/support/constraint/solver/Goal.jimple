android.support.constraint.solver.Goal extends java.lang.Object
java.util.ArrayList variables
    public void <init>()
    {
        android.support.constraint.solver.Goal r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.constraint.solver.Goal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables> = $r1;

        return;
    }
    private void initFromSystemErrors(android.support.constraint.solver.LinearSystem)
    {
        android.support.constraint.solver.Goal r0;
        android.support.constraint.solver.LinearSystem $r1;
        android.support.constraint.solver.SolverVariable r2;
        java.util.ArrayList $r3;
        int i0, $i1;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        float[] $r6;
        android.support.constraint.solver.SolverVariable$Type $r7, $r8;

        r0 := @this: android.support.constraint.solver.Goal;

        $r1 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        i0 = 1;

     label1:
        $i1 = $r1.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        if i0 >= $i1 goto label6;

        $r4 = $r1.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        r2 = $r5[i0];

        $i1 = 0;

     label2:
        if $i1 >= 6 goto label3;

        $r6 = r2.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $r6[$i1] = 0.0F;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r6 = r2.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $i1 = r2.<android.support.constraint.solver.SolverVariable: int strength>;

        $r6[$i1] = 1.0F;

        $r7 = r2.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r8 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type ERROR>;

        if $r7 == $r8 goto label5;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label4;

     label6:
        return;
    }
    android.support.constraint.solver.SolverVariable getPivotCandidate()
    {
        android.support.constraint.solver.Goal r0;
        float f0;
        java.util.ArrayList $r1;
        int $i0, i1, i2, i3;
        android.support.constraint.solver.SolverVariable r2, r4;
        java.lang.Object $r3;
        float[] $r5;
        byte $b4;

        r0 := @this: android.support.constraint.solver.Goal;

        $r1 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        r2 = null;

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label6;

        $r1 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (android.support.constraint.solver.SolverVariable) $r3;

        i3 = 5;

     label2:
        if i3 < 0 goto label5;

        $r5 = r4.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        f0 = $r5[i3];

        if r2 != null goto label3;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label3;

        if i3 < i1 goto label3;

        i1 = i3;

        r2 = r4;

     label3:
        $b4 = f0 cmpl 0.0F;

        if $b4 <= 0 goto label4;

        if i3 <= i1 goto label4;

        i1 = i3;

        r2 = null;

     label4:
        i3 = i3 + -1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return r2;
    }
    public java.lang.String toString()
    {
        android.support.constraint.solver.Goal r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.support.constraint.solver.SolverVariable r4;
        java.lang.StringBuilder $r5;

        r0 := @this: android.support.constraint.solver.Goal;

        r1 = "Goal: ";

        $r2 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.support.constraint.solver.SolverVariable) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke r4.<android.support.constraint.solver.SolverVariable: java.lang.String strengthsToString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
    void updateFromSystem(android.support.constraint.solver.LinearSystem)
    {
        android.support.constraint.solver.Goal r0;
        android.support.constraint.solver.LinearSystem $r1;
        int i0, $i1, i2, i3, i4;
        android.support.constraint.solver.ArrayLinkedVariables r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.support.constraint.solver.SolverVariable r5, $r7;
        android.support.constraint.solver.ArrayRow $r6;
        float $f0, $f1, $f2;
        float[] $r8, $r9;
        boolean $z0;

        r0 := @this: android.support.constraint.solver.Goal;

        $r1 := @parameter0: android.support.constraint.solver.LinearSystem;

        specialinvoke r0.<android.support.constraint.solver.Goal: void initFromSystemErrors(android.support.constraint.solver.LinearSystem)>($r1);

        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label9;

        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (android.support.constraint.solver.SolverVariable) $r4;

        i0 = r5.<android.support.constraint.solver.SolverVariable: int definitionId>;

        if i0 == -1 goto label8;

        i0 = r5.<android.support.constraint.solver.SolverVariable: int definitionId>;

        $r6 = virtualinvoke $r1.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow getRow(int)>(i0);

        r2 = $r6.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        i0 = r2.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        i3 = 0;

     label2:
        if i3 >= i0 goto label7;

        $r7 = virtualinvoke r2.<android.support.constraint.solver.ArrayLinkedVariables: android.support.constraint.solver.SolverVariable getVariable(int)>(i3);

        if $r7 != null goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $f0 = virtualinvoke r2.<android.support.constraint.solver.ArrayLinkedVariables: float getVariableValue(int)>(i3);

        i4 = 0;

     label5:
        if i4 >= 6 goto label6;

        $r8 = $r7.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $f1 = $r8[i4];

        $r9 = r5.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $f2 = $r9[i4];

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $r8[i4] = $f1;

        i4 = i4 + 1;

        goto label5;

     label6:
        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label3;

        $r3 = r0.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label3;

     label7:
        virtualinvoke r5.<android.support.constraint.solver.SolverVariable: void clearStrengths()>();

     label8:
        i2 = i2 + 1;

        goto label1;

     label9:
        return;
    }
