android.support.constraint.solver.SolverVariable extends java.lang.Object
private static final boolean INTERNAL_DEBUG
static final int MAX_STRENGTH
public static final int STRENGTH_EQUALITY
public static final int STRENGTH_HIGH
public static final int STRENGTH_HIGHEST
public static final int STRENGTH_LOW
public static final int STRENGTH_MEDIUM
public static final int STRENGTH_NONE
private static int uniqueId
public float computedValue
int definitionId
public int id
android.support.constraint.solver.ArrayRow[] mClientEquations
int mClientEquationsCount
private java.lang.String mName
android.support.constraint.solver.SolverVariable$Type mType
public int strength
float[] strengthVector
    static void <clinit>()
    {
        <android.support.constraint.solver.SolverVariable: int uniqueId> = 1;

        return;
    }
    public void <init>(android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.SolverVariable r0;
        android.support.constraint.solver.SolverVariable$Type $r1;
        float[] $r2;
        android.support.constraint.solver.ArrayRow[] $r3;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.SolverVariable: int id> = -1;

        r0.<android.support.constraint.solver.SolverVariable: int definitionId> = -1;

        r0.<android.support.constraint.solver.SolverVariable: int strength> = 0;

        $r2 = newarray (float)[6];

        r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector> = $r2;

        $r3 = newarray (android.support.constraint.solver.ArrayRow)[8];

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations> = $r3;

        r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount> = 0;

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType> = $r1;

        return;
    }
    public void <init>(java.lang.String, android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.SolverVariable r0;
        java.lang.String $r1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        float[] $r3;
        android.support.constraint.solver.ArrayRow[] $r4;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.SolverVariable: int id> = -1;

        r0.<android.support.constraint.solver.SolverVariable: int definitionId> = -1;

        r0.<android.support.constraint.solver.SolverVariable: int strength> = 0;

        $r3 = newarray (float)[6];

        r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector> = $r3;

        $r4 = newarray (android.support.constraint.solver.ArrayRow)[8];

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations> = $r4;

        r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount> = 0;

        r0.<android.support.constraint.solver.SolverVariable: java.lang.String mName> = $r1;

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType> = $r2;

        return;
    }
    private static java.lang.String getUniqueName(android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.SolverVariable$Type $r0;
        int $i0;
        int[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.support.constraint.solver.SolverVariable$Type;

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $i0 = $i0 + 1;

        <android.support.constraint.solver.SolverVariable: int uniqueId> = $i0;

        $r1 = <android.support.constraint.solver.SolverVariable$1: int[] $SwitchMap$android$support$constraint$solver$SolverVariable$Type>;

        $i0 = virtualinvoke $r0.<android.support.constraint.solver.SolverVariable$Type: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V");

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U");

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("e");

        $i0 = <android.support.constraint.solver.SolverVariable: int uniqueId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    void addClientEquation(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.SolverVariable r0;
        android.support.constraint.solver.ArrayRow $r1, $r4;
        java.lang.Object[] $r2;
        int i0, $i1;
        android.support.constraint.solver.ArrayRow[] $r3, $r5;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        i0 = 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        if i0 >= $i1 goto label3;

        $r3 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $r4 = $r3[i0];

        if $r4 != $r1 goto label2;

        return;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i0 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        $r3 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $i1 = lengthof $r3;

        if i0 < $i1 goto label4;

        $r3 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $r5 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        i0 = lengthof $r5;

        i0 = i0 * 2;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, i0);

        $r3 = (android.support.constraint.solver.ArrayRow[]) $r2;

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations> = $r3;

     label4:
        $r3 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        i0 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        $r3[i0] = $r1;

        i0 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        i0 = i0 + 1;

        r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount> = i0;

        return;
    }
    void clearStrengths()
    {
        android.support.constraint.solver.SolverVariable r0;
        int i0;
        float[] $r1;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $r1 = r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $r1[i0] = 0.0F;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public java.lang.String getName()
    {
        android.support.constraint.solver.SolverVariable r0;
        java.lang.String r1;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        r1 = r0.<android.support.constraint.solver.SolverVariable: java.lang.String mName>;

        return r1;
    }
    void removeClientEquation(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.SolverVariable r0;
        android.support.constraint.solver.ArrayRow $r1, $r3;
        int $i0, i1, $i2, $i3;
        android.support.constraint.solver.ArrayRow[] $r2, $r4;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        i1 = 0;

     label1:
        $i2 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        if i1 >= $i2 goto label5;

        $r2 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $r3 = $r2[i1];

        if $r3 != $r1 goto label4;

        $i2 = 0;

     label2:
        $i0 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        $i0 = $i0 - i1;

        $i0 = $i0 + -1;

        if $i2 >= $i0 goto label3;

        $r2 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $i0 = i1 + $i2;

        $r4 = r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        $i3 = i1 + $i2;

        $i3 = $i3 + 1;

        $r1 = $r4[$i3];

        $r2[$i0] = $r1;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        i1 = r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        i1 = i1 + -1;

        r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount> = i1;

        return;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }
    public void reset()
    {
        android.support.constraint.solver.SolverVariable r0;
        android.support.constraint.solver.SolverVariable$Type $r1;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        r0.<android.support.constraint.solver.SolverVariable: java.lang.String mName> = null;

        $r1 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNKNOWN>;

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType> = $r1;

        r0.<android.support.constraint.solver.SolverVariable: int strength> = 0;

        r0.<android.support.constraint.solver.SolverVariable: int id> = -1;

        r0.<android.support.constraint.solver.SolverVariable: int definitionId> = -1;

        r0.<android.support.constraint.solver.SolverVariable: float computedValue> = 0.0F;

        r0.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount> = 0;

        return;
    }
    public void setName(java.lang.String)
    {
        android.support.constraint.solver.SolverVariable r0;
        java.lang.String $r1;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: java.lang.String;

        r0.<android.support.constraint.solver.SolverVariable: java.lang.String mName> = $r1;

        return;
    }
    public void setType(android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.SolverVariable r0;
        android.support.constraint.solver.SolverVariable$Type $r1;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable$Type;

        r0.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType> = $r1;

        return;
    }
    java.lang.String strengthsToString()
    {
        android.support.constraint.solver.SolverVariable r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int i0, $i1;
        float[] $r3;
        float $f0;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = 0;

     label1:
        $r3 = r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $f0 = $r3[i0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        $i1 = lengthof $r3;

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label4:
        return $r2;
    }
    public java.lang.String toString()
    {
        android.support.constraint.solver.SolverVariable r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: android.support.constraint.solver.SolverVariable;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = r0.<android.support.constraint.solver.SolverVariable: java.lang.String mName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
