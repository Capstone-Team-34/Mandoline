android.support.constraint.solver.LinearSystem extends java.lang.Object
private static final boolean DEBUG
private static int POOL_SIZE
private int TABLE_SIZE
private boolean[] mAlreadyTestedCandidates
final android.support.constraint.solver.Cache mCache
private android.support.constraint.solver.Goal mGoal
private int mMaxColumns
private int mMaxRows
int mNumColumns
private int mNumRows
private android.support.constraint.solver.SolverVariable[] mPoolVariables
private int mPoolVariablesCount
private android.support.constraint.solver.ArrayRow[] mRows
private java.util.HashMap mVariables
int mVariablesID
private android.support.constraint.solver.ArrayRow[] tempClientsCopy
    static void <clinit>()
    {
        <android.support.constraint.solver.LinearSystem: int POOL_SIZE> = 1000;

        return;
    }
    public void <init>()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;
        int $i0;
        boolean[] $r2;
        android.support.constraint.solver.SolverVariable[] $r3;
        android.support.constraint.solver.ArrayRow[] $r4;
        android.support.constraint.solver.Cache $r5;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = 0;

        r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables> = null;

        $r1 = new android.support.constraint.solver.Goal;

        specialinvoke $r1.<android.support.constraint.solver.Goal: void <init>()>();

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal> = $r1;

        r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE> = 32;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns> = $i0;

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows> = null;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r2 = newarray (boolean)[$i0];

        r0.<android.support.constraint.solver.LinearSystem: boolean[] mAlreadyTestedCandidates> = $r2;

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumRows> = 0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        r0.<android.support.constraint.solver.LinearSystem: int mMaxRows> = $i0;

        $i0 = <android.support.constraint.solver.LinearSystem: int POOL_SIZE>;

        $r3 = newarray (android.support.constraint.solver.SolverVariable)[$i0];

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable[] mPoolVariables> = $r3;

        r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount> = 0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r4 = newarray (android.support.constraint.solver.ArrayRow)[$i0];

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] tempClientsCopy> = $r4;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r4 = newarray (android.support.constraint.solver.ArrayRow)[$i0];

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows> = $r4;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void releaseRows()>();

        $r5 = new android.support.constraint.solver.Cache;

        specialinvoke $r5.<android.support.constraint.solver.Cache: void <init>()>();

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache> = $r5;

        return;
    }
    private android.support.constraint.solver.SolverVariable acquireSolverVariable(android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable$Type $r1;
        int $i0, $i1;
        android.support.constraint.solver.Cache $r2;
        android.support.constraint.solver.Pools$Pool $r3;
        java.lang.Object $r4;
        android.support.constraint.solver.SolverVariable r5;
        android.support.constraint.solver.SolverVariable[] $r6;
        java.lang.Object[] $r7;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable$Type;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.Pools$Pool solverVariablePool>;

        $r4 = interfaceinvoke $r3.<android.support.constraint.solver.Pools$Pool: java.lang.Object acquire()>();

        r5 = (android.support.constraint.solver.SolverVariable) $r4;

        if r5 != null goto label3;

        r5 = new android.support.constraint.solver.SolverVariable;

        specialinvoke r5.<android.support.constraint.solver.SolverVariable: void <init>(android.support.constraint.solver.SolverVariable$Type)>($r1);

     label1:
        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount>;

        $i1 = <android.support.constraint.solver.LinearSystem: int POOL_SIZE>;

        if $i0 < $i1 goto label2;

        $i0 = <android.support.constraint.solver.LinearSystem: int POOL_SIZE>;

        $i0 = $i0 * 2;

        <android.support.constraint.solver.LinearSystem: int POOL_SIZE> = $i0;

        $r6 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable[] mPoolVariables>;

        $i0 = <android.support.constraint.solver.LinearSystem: int POOL_SIZE>;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r6, $i0);

        $r6 = (android.support.constraint.solver.SolverVariable[]) $r7;

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable[] mPoolVariables> = $r6;

     label2:
        $r6 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable[] mPoolVariables>;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount>;

        $i0 = $i1 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount> = $i0;

        $r6[$i1] = r5;

        return r5;

     label3:
        virtualinvoke r5.<android.support.constraint.solver.SolverVariable: void reset()>();

        virtualinvoke r5.<android.support.constraint.solver.SolverVariable: void setType(android.support.constraint.solver.SolverVariable$Type)>($r1);

        goto label1;
    }
    private void addError(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow $r1;
        android.support.constraint.solver.SolverVariable $r2, $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $r2 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable)>($r2, $r3);

        return;
    }
    private void addSingleError(android.support.constraint.solver.ArrayRow, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow $r1;
        int $i0;
        android.support.constraint.solver.SolverVariable $r2;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow addSingleError(android.support.constraint.solver.SolverVariable,int)>($r2, $i0);

        return;
    }
    private void computeValues()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow r1;
        float $f0;
        int i0, $i1;
        android.support.constraint.solver.ArrayRow[] $r2;
        android.support.constraint.solver.SolverVariable $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i0 = 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i0 >= $i1 goto label2;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r1 = $r2[i0];

        $r3 = r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $f0 = r1.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $r3.<android.support.constraint.solver.SolverVariable: float computedValue> = $f0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.LinearSystem, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, float, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, boolean)
    {
        android.support.constraint.solver.LinearSystem $r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1;
        float $f0;
        boolean $z0;
        android.support.constraint.solver.ArrayRow $r5;

        $r0 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        $f0 := @parameter4: float;

        $r3 := @parameter5: android.support.constraint.solver.SolverVariable;

        $r4 := @parameter6: android.support.constraint.solver.SolverVariable;

        $i1 := @parameter7: int;

        $z0 := @parameter8: boolean;

        $r5 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r5.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $i0, $f0, $r3, $r4, $i1);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r2 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r1.<android.support.constraint.solver.SolverVariable: int strength> = 4;

        $r2.<android.support.constraint.solver.SolverVariable: int strength> = 4;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable)>($r1, $r2);

     label1:
        return $r5;
    }
    public static android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.LinearSystem, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, float, boolean)
    {
        android.support.constraint.solver.LinearSystem $r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        float $f0;
        boolean $z0;
        android.support.constraint.solver.ArrayRow $r4;

        $r0 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter2: android.support.constraint.solver.SolverVariable;

        $r3 := @parameter3: android.support.constraint.solver.SolverVariable;

        $f0 := @parameter4: float;

        $z0 := @parameter5: boolean;

        $r4 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.support.constraint.solver.LinearSystem: void addError(android.support.constraint.solver.ArrayRow)>($r4);

     label1:
        $r4 = virtualinvoke $r4.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float)>($r1, $r2, $r3, $f0);

        return $r4;
    }
    public static android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.LinearSystem, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, boolean)
    {
        android.support.constraint.solver.LinearSystem $r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        int $i0;
        boolean $z0;
        android.support.constraint.solver.ArrayRow $r3;

        $r0 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r3 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $i0);

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.support.constraint.solver.LinearSystem: void addSingleError(android.support.constraint.solver.ArrayRow,int)>($r3, 1);

     label1:
        return $r3;
    }
    public static android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.LinearSystem, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, boolean)
    {
        android.support.constraint.solver.LinearSystem $r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        int $i0;
        boolean $z0;
        android.support.constraint.solver.ArrayRow $r4;
        android.support.constraint.solver.ArrayLinkedVariables $r5;
        float $f0;

        $r0 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r3 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createSlackVariable()>();

        $r4 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r4.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $r3, $i0);

        if $z0 == 0 goto label1;

        $r5 = $r4.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: float get(android.support.constraint.solver.SolverVariable)>($r3);

        $f0 = -1.0F * $f0;

        $i0 = (int) $f0;

        specialinvoke $r0.<android.support.constraint.solver.LinearSystem: void addSingleError(android.support.constraint.solver.ArrayRow,int)>($r4, $i0);

     label1:
        return $r4;
    }
    public static android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.LinearSystem, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, boolean)
    {
        android.support.constraint.solver.LinearSystem $r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3;
        int $i0;
        boolean $z0;
        android.support.constraint.solver.ArrayRow $r4;
        android.support.constraint.solver.ArrayLinkedVariables $r5;
        float $f0;

        $r0 := @parameter0: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter1: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter2: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r3 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createSlackVariable()>();

        $r4 = virtualinvoke $r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r4.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $r3, $i0);

        if $z0 == 0 goto label1;

        $r5 = $r4.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r5.<android.support.constraint.solver.ArrayLinkedVariables: float get(android.support.constraint.solver.SolverVariable)>($r3);

        $f0 = -1.0F * $f0;

        $i0 = (int) $f0;

        specialinvoke $r0.<android.support.constraint.solver.LinearSystem: void addSingleError(android.support.constraint.solver.ArrayRow,int)>($r4, $i0);

     label1:
        return $r4;
    }
    private android.support.constraint.solver.SolverVariable createVariable(java.lang.String, android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String $r1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        android.support.constraint.solver.SolverVariable $r3;
        int $i0, $i1;
        java.util.HashMap $r4;
        android.support.constraint.solver.Cache $r5;
        android.support.constraint.solver.SolverVariable[] $r6;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable$Type;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        if $i0 < $i1 goto label1;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void increaseTableSize()>();

     label1:
        $r3 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable acquireSolverVariable(android.support.constraint.solver.SolverVariable$Type)>($r2);

        virtualinvoke $r3.<android.support.constraint.solver.SolverVariable: void setName(java.lang.String)>($r1);

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r3.<android.support.constraint.solver.SolverVariable: int id> = $i0;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        if $r4 != null goto label2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables> = $r4;

     label2:
        $r4 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r6 = $r5.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r6[$i0] = $r3;

        return $r3;
    }
    private void displayRows()
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        android.support.constraint.solver.ArrayRow[] $r3;
        android.support.constraint.solver.ArrayRow $r4;
        android.support.constraint.solver.Goal $r5;
        java.util.ArrayList $r6;
        java.io.PrintStream $r7;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void displaySolverVariables()>();

        r1 = "";

        i0 = 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i0 >= $i1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r4 = $r3[i0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r6 = $r5.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }
    private void displaySolverVariables()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r3;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        java.io.PrintStream $r6;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Display Rows (");

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") :\n\t | C | ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = 1;

     label1:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        if $i0 > $i1 goto label2;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        r1 = $r5[$i0];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }
    private int enforceBFS(android.support.constraint.solver.Goal) throws java.lang.Exception
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;
        android.support.constraint.solver.SolverVariable r2;
        android.support.constraint.solver.ArrayRow r3, $r11;
        float f0, $f1, $f2;
        int i0, i1, $i2, i4, i5, $i6, $i7;
        boolean z0;
        android.support.constraint.solver.ArrayRow[] $r4;
        android.support.constraint.solver.SolverVariable$Type $r5, $r6;
        byte $b3;
        android.support.constraint.solver.Cache $r7;
        android.support.constraint.solver.SolverVariable[] $r8;
        android.support.constraint.solver.ArrayLinkedVariables $r9;
        float[] $r10;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.Goal;

        i0 = 0;

        z0 = 0;

        i1 = 0;

     label01:
        $i2 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i1 >= $i2 goto label04;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[i1];

        r2 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r5 = r2.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r6 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r5 != $r6 goto label03;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[i1];

        $f2 = r3.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b3 = $f2 cmpg 0.0F;

        if $b3 >= 0 goto label02;

        z0 = 1;

     label04:
        if z0 == 0 goto label20;

        z0 = 0;

        i0 = 0;

     label05:
        if z0 != 0 goto label20;

        i0 = i0 + 1;

        $f2 = 3.4028235E38F;

        i1 = 0;

        $i2 = -1;

        i4 = -1;

        i5 = 0;

     label06:
        $i6 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i5 >= $i6 goto label16;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[i5];

        r2 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r5 = r2.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r6 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r5 != $r6 goto label08;

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        $f1 = r3.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b3 = $f1 cmpg 0.0F;

        if $b3 >= 0 goto label07;

        $i6 = 1;

     label09:
        $i7 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        if $i6 >= $i7 goto label07;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r8 = $r7.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        r2 = $r8[$i6];

        $r9 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $f1 = virtualinvoke $r9.<android.support.constraint.solver.ArrayLinkedVariables: float get(android.support.constraint.solver.SolverVariable)>(r2);

        $b3 = $f1 cmpg 0.0F;

        if $b3 > 0 goto label11;

     label10:
        $i6 = $i6 + 1;

        goto label09;

     label11:
        $i7 = 0;

     label12:
        if $i7 >= 6 goto label10;

        $r10 = r2.<android.support.constraint.solver.SolverVariable: float[] strengthVector>;

        f0 = $r10[$i7];

        f0 = f0 / $f1;

        $b3 = f0 cmpg $f2;

        if $b3 >= 0 goto label13;

        if $i7 == i1 goto label14;

     label13:
        if $i7 <= i1 goto label15;

     label14:
        $f2 = f0;

        $i2 = i5;

        i4 = $i6;

        i1 = $i7;

     label15:
        $i7 = $i7 + 1;

        goto label12;

     label16:
        if $i2 == -1 goto label19;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[$i2];

        r2 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        r2.<android.support.constraint.solver.SolverVariable: int definitionId> = -1;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r8 = $r7.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        r2 = $r8[i4];

        virtualinvoke r3.<android.support.constraint.solver.ArrayRow: void pivot(android.support.constraint.solver.SolverVariable)>(r2);

        r2 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        r2.<android.support.constraint.solver.SolverVariable: int definitionId> = $i2;

        i1 = 0;

     label17:
        $i2 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i1 >= $i2 goto label18;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r11 = $r4[i1];

        virtualinvoke $r11.<android.support.constraint.solver.ArrayRow: boolean updateRowWithEquation(android.support.constraint.solver.ArrayRow)>(r3);

        i1 = i1 + 1;

        goto label17;

     label18:
        virtualinvoke $r1.<android.support.constraint.solver.Goal: void updateFromSystem(android.support.constraint.solver.LinearSystem)>(r0);

        goto label05;

     label19:
        z0 = 1;

        goto label05;

     label20:
        i1 = 0;

     label21:
        $i2 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i1 >= $i2 goto label24;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[i1];

        r2 = r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r5 = r2.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r6 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r5 != $r6 goto label23;

     label22:
        i1 = i1 + 1;

        goto label21;

     label23:
        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r4[i1];

        $f2 = r3.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $b3 = $f2 cmpg 0.0F;

        if $b3 >= 0 goto label22;

     label24:
        return i0;
    }
    private java.lang.String getDisplaySize(int)
    {
        android.support.constraint.solver.LinearSystem r0;
        int $i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 := @parameter0: int;

        i1 = $i0 * 4;

        i1 = i1 / 1024;

        i1 = i1 / 1024;

        if i1 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mb");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        i1 = $i0 * 4;

        i1 = i1 / 1024;

        if i1 <= 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Kb");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = $i0 * 4;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    private void increaseTableSize()
    {
        android.support.constraint.solver.LinearSystem r0;
        int $i0;
        android.support.constraint.solver.ArrayRow[] $r1;
        java.lang.Object[] $r2;
        android.support.constraint.solver.Cache $r3, $r4;
        android.support.constraint.solver.SolverVariable[] $r5;
        boolean[] $r6;
        android.support.constraint.solver.Goal $r7;
        java.util.ArrayList $r8;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $i0 = $i0 * 2;

        r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE> = $i0;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r1 = (android.support.constraint.solver.ArrayRow[]) $r2;

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows> = $r1;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i0);

        $r5 = (android.support.constraint.solver.SolverVariable[]) $r2;

        $r3.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables> = $r5;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r6 = newarray (boolean)[$i0];

        r0.<android.support.constraint.solver.LinearSystem: boolean[] mAlreadyTestedCandidates> = $r6;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        r0.<android.support.constraint.solver.LinearSystem: int mMaxRows> = $i0;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r8 = $r7.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        return;
    }
    private int optimize(android.support.constraint.solver.Goal)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;
        android.support.constraint.solver.ArrayRow r2, $r11;
        java.lang.Exception r3;
        float f0, f1, $f2;
        android.support.constraint.solver.SolverVariable r4, r6;
        boolean z0, $z1;
        int i0, i1, $i2, i3, $i4;
        boolean[] $r5;
        android.support.constraint.solver.ArrayRow[] $r7;
        android.support.constraint.solver.SolverVariable$Type $r8, $r9;
        android.support.constraint.solver.ArrayLinkedVariables $r10;
        byte $b5;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.Goal;

        z0 = 0;

        i0 = 0;

        i1 = 0;

     label01:
        $i2 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        if i1 >= $i2 goto label02;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: boolean[] mAlreadyTestedCandidates>;

        $r5[i1] = 0;

        i1 = i1 + 1;

        goto label01;

     label02:
        i1 = 0;

     label03:
        if z0 != 0 goto label17;

        i0 = i0 + 1;

        r4 = virtualinvoke $r1.<android.support.constraint.solver.Goal: android.support.constraint.solver.SolverVariable getPivotCandidate()>();

        r6 = r4;

        if r4 == null goto label04;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: boolean[] mAlreadyTestedCandidates>;

        $i2 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        $z1 = $r5[$i2];

        if $z1 == 0 goto label07;

        r6 = null;

     label04:
        if r6 == null goto label16;

        f1 = 3.4028235E38F;

        $i2 = -1;

        i3 = 0;

     label05:
        $i4 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i3 >= $i4 goto label09;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r2 = $r7[i3];

        r4 = r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r8 = r4.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r9 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r8 != $r9 goto label08;

     label06:
        i3 = i3 + 1;

        goto label05;

     label07:
        $r5 = r0.<android.support.constraint.solver.LinearSystem: boolean[] mAlreadyTestedCandidates>;

        $i2 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        $r5[$i2] = 1;

        i1 = i1 + 1;

        $i2 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        if i1 < $i2 goto label04;

        z0 = 1;

        goto label04;

     label08:
        $z1 = virtualinvoke r2.<android.support.constraint.solver.ArrayRow: boolean hasVariable(android.support.constraint.solver.SolverVariable)>(r6);

        if $z1 == 0 goto label06;

        $r10 = r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        f0 = virtualinvoke $r10.<android.support.constraint.solver.ArrayLinkedVariables: float get(android.support.constraint.solver.SolverVariable)>(r6);

        $b5 = f0 cmpg 0.0F;

        if $b5 >= 0 goto label06;

        $f2 = r2.<android.support.constraint.solver.ArrayRow: float constantValue>;

        $f2 = neg $f2;

        f0 = $f2 / f0;

        $b5 = f0 cmpg f1;

        if $b5 >= 0 goto label06;

        f1 = f0;

        $i2 = i3;

        goto label06;

     label09:
        if $i2 <= -1 goto label15;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r2 = $r7[$i2];

        r4 = r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        r4.<android.support.constraint.solver.SolverVariable: int definitionId> = -1;

        virtualinvoke r2.<android.support.constraint.solver.ArrayRow: void pivot(android.support.constraint.solver.SolverVariable)>(r6);

        r6 = r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        r6.<android.support.constraint.solver.SolverVariable: int definitionId> = $i2;

        $i2 = 0;

     label10:
        i3 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if $i2 >= i3 goto label11;

        $r7 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r11 = $r7[$i2];

        virtualinvoke $r11.<android.support.constraint.solver.ArrayRow: boolean updateRowWithEquation(android.support.constraint.solver.ArrayRow)>(r2);

        $i2 = $i2 + 1;

        goto label10;

     label11:
        virtualinvoke $r1.<android.support.constraint.solver.Goal: void updateFromSystem(android.support.constraint.solver.LinearSystem)>(r0);

     label12:
        specialinvoke r0.<android.support.constraint.solver.LinearSystem: int enforceBFS(android.support.constraint.solver.Goal)>($r1);

     label13:
        goto label03;

     label14:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        goto label03;

     label15:
        z0 = 1;

        goto label03;

     label16:
        z0 = 1;

        goto label03;

     label17:
        return i0;

        catch java.lang.Exception from label12 to label13 with label14;
    }
    private void releaseRows()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow r1;
        int i0, $i1;
        android.support.constraint.solver.ArrayRow[] $r2;
        android.support.constraint.solver.Cache $r3;
        android.support.constraint.solver.Pools$Pool $r4;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i0 = 0;

     label1:
        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r1 = $r2[i0];

        if r1 == null goto label2;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r4 = $r3.<android.support.constraint.solver.Cache: android.support.constraint.solver.Pools$Pool arrayRowPool>;

        interfaceinvoke $r4.<android.support.constraint.solver.Pools$Pool: boolean release(java.lang.Object)>(r1);

     label2:
        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2[i0] = null;

        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    private void updateRowFromVariables(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow $r1;
        android.support.constraint.solver.ArrayRow[] $r2;
        int $i0;
        android.support.constraint.solver.ArrayLinkedVariables $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if $i0 <= 0 goto label1;

        $r3 = $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayLinkedVariables: void updateFromSystem(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow[])>($r1, $r2);

        $r3 = $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        $i0 = $r3.<android.support.constraint.solver.ArrayLinkedVariables: int currentSize>;

        if $i0 != 0 goto label1;

        $r1.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition> = 1;

     label1:
        return;
    }
    public void addCentering(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, float, android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        float $f0;
        android.support.constraint.solver.ArrayRow $r5;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        $f0 := @parameter3: float;

        $r3 := @parameter4: android.support.constraint.solver.SolverVariable;

        $r4 := @parameter5: android.support.constraint.solver.SolverVariable;

        $i1 := @parameter6: int;

        $i2 := @parameter7: int;

        $r5 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r5.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $i0, $f0, $r3, $r4, $i1);

        $r1 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r2 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r1.<android.support.constraint.solver.SolverVariable: int strength> = $i2;

        $r2.<android.support.constraint.solver.SolverVariable: int strength> = $i2;

        virtualinvoke $r5.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable)>($r1, $r2);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>($r5);

        return;
    }
    public void addConstraint(android.support.constraint.solver.ArrayRow)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.ArrayRow $r1, r2;
        android.support.constraint.solver.ArrayRow[] r3, $r7;
        int i0, $i1;
        boolean $z0;
        android.support.constraint.solver.Cache $r4;
        android.support.constraint.solver.Pools$Pool $r5;
        android.support.constraint.solver.SolverVariable $r6;
        android.support.constraint.solver.ArrayLinkedVariables $r8;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.ArrayRow;

        if $r1 != null goto label01;

        return;

     label01:
        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        i0 = i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxRows>;

        if i0 >= $i1 goto label02;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        i0 = i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        if i0 < $i1 goto label03;

     label02:
        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void increaseTableSize()>();

     label03:
        $z0 = $r1.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition>;

        if $z0 != 0 goto label04;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void updateRowFromVariables(android.support.constraint.solver.ArrayRow)>($r1);

        virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: void ensurePositiveConstant()>();

        virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: void pickRowVariable()>();

        $z0 = virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: boolean hasKeyVariable()>();

        if $z0 == 0 goto label14;

     label04:
        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        r2 = r3[i0];

        if r2 == null goto label05;

        $r4 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r5 = $r4.<android.support.constraint.solver.Cache: android.support.constraint.solver.Pools$Pool arrayRowPool>;

        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        r2 = r3[i0];

        interfaceinvoke $r5.<android.support.constraint.solver.Pools$Pool: boolean release(java.lang.Object)>(r2);

     label05:
        $z0 = $r1.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition>;

        if $z0 != 0 goto label06;

        virtualinvoke $r1.<android.support.constraint.solver.ArrayRow: void updateClientEquations()>();

     label06:
        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        r3[i0] = $r1;

        $r6 = $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        $r6.<android.support.constraint.solver.SolverVariable: int definitionId> = i0;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        i0 = i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumRows> = i0;

        $r6 = $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        i0 = $r6.<android.support.constraint.solver.SolverVariable: int mClientEquationsCount>;

        if i0 <= 0 goto label14;

     label07:
        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] tempClientsCopy>;

        $i1 = lengthof r3;

        if $i1 >= i0 goto label08;

        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] tempClientsCopy>;

        $i1 = lengthof r3;

        $i1 = $i1 * 2;

        r3 = newarray (android.support.constraint.solver.ArrayRow)[$i1];

        r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] tempClientsCopy> = r3;

        goto label07;

     label08:
        r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] tempClientsCopy>;

        $i1 = 0;

     label09:
        if $i1 >= i0 goto label10;

        $r6 = $r1.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r7 = $r6.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.ArrayRow[] mClientEquations>;

        r2 = $r7[$i1];

        r3[$i1] = r2;

        $i1 = $i1 + 1;

        goto label09;

     label10:
        $i1 = 0;

     label11:
        if $i1 >= i0 goto label14;

        r2 = r3[$i1];

        if r2 != $r1 goto label13;

     label12:
        $i1 = $i1 + 1;

        goto label11;

     label13:
        $r8 = r2.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r8.<android.support.constraint.solver.ArrayLinkedVariables: void updateFromRow(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow)>(r2, $r1);

        virtualinvoke r2.<android.support.constraint.solver.ArrayRow: void updateClientEquations()>();

        goto label12;

     label14:
        return;
    }
    public android.support.constraint.solver.ArrayRow addEquality(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1, $r2;
        int $i0, $i1;
        android.support.constraint.solver.ArrayRow $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $i0);

        $r1 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r2 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createErrorVariable()>();

        $r1.<android.support.constraint.solver.SolverVariable: int strength> = $i1;

        $r2.<android.support.constraint.solver.SolverVariable: int strength> = $i1;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable)>($r1, $r2);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>($r3);

        return $r3;
    }
    public void addEquality(android.support.constraint.solver.SolverVariable, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0, i1, $i2;
        android.support.constraint.solver.ArrayRow[] $r2;
        android.support.constraint.solver.ArrayRow r3;
        boolean $z0;
        float $f0;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter1: int;

        i1 = $r1.<android.support.constraint.solver.SolverVariable: int definitionId>;

        $i2 = $r1.<android.support.constraint.solver.SolverVariable: int definitionId>;

        if $i2 == -1 goto label2;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        r3 = $r2[i1];

        $z0 = r3.<android.support.constraint.solver.ArrayRow: boolean isSimpleDefinition>;

        if $z0 == 0 goto label1;

        $f0 = (float) $i0;

        r3.<android.support.constraint.solver.ArrayRow: float constantValue> = $f0;

        return;

     label1:
        r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,int)>($r1, $i0);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>(r3);

        return;

     label2:
        r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        virtualinvoke r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowDefinition(android.support.constraint.solver.SolverVariable,int)>($r1, $i0);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>(r3);

        return;
    }
    public void addGreaterThan(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r4;
        int $i0, $i1;
        android.support.constraint.solver.ArrayRow $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        $r4 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createSlackVariable()>();

        $r4.<android.support.constraint.solver.SolverVariable: int strength> = $i1;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $r4, $i0);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>($r3);

        return;
    }
    public void addLowerThan(android.support.constraint.solver.SolverVariable, android.support.constraint.solver.SolverVariable, int, int)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1, $r2, $r4;
        int $i0, $i1;
        android.support.constraint.solver.ArrayRow $r3;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.SolverVariable;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow createRow()>();

        $r4 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createSlackVariable()>();

        $r4.<android.support.constraint.solver.SolverVariable: int strength> = $i1;

        virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)>($r1, $r2, $r4, $i0);

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void addConstraint(android.support.constraint.solver.ArrayRow)>($r3);

        return;
    }
    public android.support.constraint.solver.SolverVariable createErrorVariable()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0, $i1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        android.support.constraint.solver.Cache $r3;
        android.support.constraint.solver.SolverVariable[] $r4;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        if $i0 < $i1 goto label1;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void increaseTableSize()>();

     label1:
        $r2 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type ERROR>;

        $r1 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable acquireSolverVariable(android.support.constraint.solver.SolverVariable$Type)>($r2);

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r1.<android.support.constraint.solver.SolverVariable: int id> = $i0;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r4 = $r3.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r4[$i0] = $r1;

        return $r1;
    }
    public android.support.constraint.solver.SolverVariable createObjectVariable(java.lang.Object)
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.Object r1;
        int $i0, $i1;
        boolean $z0;
        android.support.constraint.solver.widgets.ConstraintAnchor $r2;
        android.support.constraint.solver.SolverVariable $r3, r4;
        android.support.constraint.solver.Cache $r5;
        android.support.constraint.solver.SolverVariable[] $r6;
        android.support.constraint.solver.SolverVariable$Type $r7;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        if $i0 < $i1 goto label2;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void increaseTableSize()>();

     label2:
        $z0 = r1 instanceof android.support.constraint.solver.widgets.ConstraintAnchor;

        if $z0 == 0 goto label6;

        $r2 = (android.support.constraint.solver.widgets.ConstraintAnchor) r1;

        $r3 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable getSolverVariable()>();

        r4 = $r3;

        if $r3 != null goto label3;

        $r2 = (android.support.constraint.solver.widgets.ConstraintAnchor) r1;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: void resetSolverVariable(android.support.constraint.solver.Cache)>($r5);

        $r2 = (android.support.constraint.solver.widgets.ConstraintAnchor) r1;

        r4 = virtualinvoke $r2.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable getSolverVariable()>();

     label3:
        $i0 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        if $i0 == -1 goto label4;

        $i0 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        if $i0 > $i1 goto label4;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r6 = $r5.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        $r3 = $r6[$i0];

        if $r3 != null goto label7;

     label4:
        $i0 = r4.<android.support.constraint.solver.SolverVariable: int id>;

        if $i0 == -1 goto label5;

        virtualinvoke r4.<android.support.constraint.solver.SolverVariable: void reset()>();

     label5:
        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        r4.<android.support.constraint.solver.SolverVariable: int id> = $i0;

        $r7 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        r4.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType> = $r7;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r6 = $r5.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r6[$i0] = r4;

        return r4;

     label6:
        return null;

     label7:
        return r4;
    }
    public android.support.constraint.solver.ArrayRow createRow()
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.Object $r1;
        android.support.constraint.solver.Cache $r2;
        android.support.constraint.solver.Pools$Pool $r3;
        android.support.constraint.solver.ArrayRow r4;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.Pools$Pool arrayRowPool>;

        $r1 = interfaceinvoke $r3.<android.support.constraint.solver.Pools$Pool: java.lang.Object acquire()>();

        r4 = (android.support.constraint.solver.ArrayRow) $r1;

        if r4 != null goto label1;

        r4 = new android.support.constraint.solver.ArrayRow;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        specialinvoke r4.<android.support.constraint.solver.ArrayRow: void <init>(android.support.constraint.solver.Cache)>($r2);

        return r4;

     label1:
        virtualinvoke r4.<android.support.constraint.solver.ArrayRow: void reset()>();

        return r4;
    }
    public android.support.constraint.solver.SolverVariable createSlackVariable()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1;
        int $i0, $i1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        android.support.constraint.solver.Cache $r3;
        android.support.constraint.solver.SolverVariable[] $r4;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        if $i0 < $i1 goto label1;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void increaseTableSize()>();

     label1:
        $r2 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type SLACK>;

        $r1 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable acquireSolverVariable(android.support.constraint.solver.SolverVariable$Type)>($r2);

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $i0 = $i0 + 1;

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = $i0;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r1.<android.support.constraint.solver.SolverVariable: int id> = $i0;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r4 = $r3.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        $r4[$i0] = $r1;

        return $r1;
    }
    void displayReadableRows()
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        android.support.constraint.solver.ArrayRow[] $r3;
        android.support.constraint.solver.ArrayRow $r4;
        android.support.constraint.solver.Goal $r5;
        java.io.PrintStream $r6;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void displaySolverVariables()>();

        r1 = "";

        i0 = 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i0 >= $i1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r4 = $r3[i0];

        r1 = virtualinvoke $r4.<android.support.constraint.solver.ArrayRow: java.lang.String toReadableString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        if $r5 == null goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }
    void displaySystemInformations()
    {
        android.support.constraint.solver.LinearSystem r0;
        int $i0, i1, i2, $i3;
        android.support.constraint.solver.ArrayRow[] $r1;
        android.support.constraint.solver.ArrayRow $r2;
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i1 = 0;

        i2 = 0;

     label1:
        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        if i2 >= $i0 goto label3;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[i2];

        if $r2 == null goto label2;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[i2];

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.ArrayRow: int sizeInBytes()>();

        i1 = i1 + $i0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i2 = 0;

        $i0 = 0;

     label4:
        $i3 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if $i0 >= $i3 goto label6;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[$i0];

        if $r2 == null goto label5;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[$i0];

        $i3 = virtualinvoke $r2.<android.support.constraint.solver.ArrayRow: int sizeInBytes()>();

        i2 = i2 + $i3;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Linear System -> Table size: ");

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i3 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int TABLE_SIZE>;

        $i0 = $i3 * $i0;

        $r5 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: java.lang.String getDisplaySize(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -- row sizes: ");

        $r5 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: java.lang.String getDisplaySize(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual size: ");

        $r5 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: java.lang.String getDisplaySize(int)>(i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rows: ");

        i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxRows>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cols: ");

        i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumColumns>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        i1 = r0.<android.support.constraint.solver.LinearSystem: int mMaxColumns>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" occupied cells, ");

        $r5 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: java.lang.String getDisplaySize(int)>(0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }
    public void displayVariablesReadableRows()
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String r1;
        int i0, $i1;
        android.support.constraint.solver.ArrayRow[] $r2;
        android.support.constraint.solver.ArrayRow $r3;
        android.support.constraint.solver.SolverVariable $r4;
        android.support.constraint.solver.SolverVariable$Type $r5, $r6;
        java.lang.StringBuilder $r7;
        android.support.constraint.solver.Goal $r8;
        java.util.ArrayList $r9;
        java.io.PrintStream $r10;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void displaySolverVariables()>();

        r1 = "";

        i0 = 0;

     label1:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i0 >= $i1 goto label3;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r3 = $r2[i0];

        $r4 = $r3.<android.support.constraint.solver.ArrayRow: android.support.constraint.solver.SolverVariable variable>;

        $r5 = $r4.<android.support.constraint.solver.SolverVariable: android.support.constraint.solver.SolverVariable$Type mType>;

        $r6 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        if $r5 != $r6 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r3 = $r2[i0];

        r1 = virtualinvoke $r3.<android.support.constraint.solver.ArrayRow: java.lang.String toReadableString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r8 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r9 = $r8.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i0 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }
    public android.support.constraint.solver.Cache getCache()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Cache r1;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        return r1;
    }
    android.support.constraint.solver.Goal getGoal()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal r1;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        return r1;
    }
    public int getMemoryUsed()
    {
        android.support.constraint.solver.LinearSystem r0;
        int $i0, i1, i2;
        android.support.constraint.solver.ArrayRow[] $r1;
        android.support.constraint.solver.ArrayRow $r2;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i1 = 0;

        i2 = 0;

     label1:
        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if i2 >= $i0 goto label3;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[i2];

        if $r2 == null goto label2;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[i2];

        $i0 = virtualinvoke $r2.<android.support.constraint.solver.ArrayRow: int sizeInBytes()>();

        i1 = i1 + $i0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i1;
    }
    public int getNumEquations()
    {
        android.support.constraint.solver.LinearSystem r0;
        int i0;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        return i0;
    }
    public int getNumVariables()
    {
        android.support.constraint.solver.LinearSystem r0;
        int i0;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        i0 = r0.<android.support.constraint.solver.LinearSystem: int mVariablesID>;

        return i0;
    }
    public int getObjectVariableValue(java.lang.Object)
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable $r1;
        java.lang.Object $r2;
        android.support.constraint.solver.widgets.ConstraintAnchor $r3;
        float $f0;
        int $i0;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (android.support.constraint.solver.widgets.ConstraintAnchor) $r2;

        $r1 = virtualinvoke $r3.<android.support.constraint.solver.widgets.ConstraintAnchor: android.support.constraint.solver.SolverVariable getSolverVariable()>();

        if $r1 == null goto label1;

        $f0 = $r1.<android.support.constraint.solver.SolverVariable: float computedValue>;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;

     label1:
        return 0;
    }
    android.support.constraint.solver.ArrayRow getRow(int)
    {
        android.support.constraint.solver.LinearSystem r0;
        int $i0;
        android.support.constraint.solver.ArrayRow[] $r1;
        android.support.constraint.solver.ArrayRow $r2;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r2 = $r1[$i0];

        return $r2;
    }
    float getValueFor(java.lang.String)
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String $r1;
        android.support.constraint.solver.SolverVariable $r2;
        android.support.constraint.solver.SolverVariable$Type $r3;
        float f0;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: java.lang.String;

        $r3 = <android.support.constraint.solver.SolverVariable$Type: android.support.constraint.solver.SolverVariable$Type UNRESTRICTED>;

        $r2 = virtualinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable getVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type)>($r1, $r3);

        if $r2 != null goto label1;

        return 0.0F;

     label1:
        f0 = $r2.<android.support.constraint.solver.SolverVariable: float computedValue>;

        return f0;
    }
    android.support.constraint.solver.SolverVariable getVariable(java.lang.String, android.support.constraint.solver.SolverVariable$Type)
    {
        android.support.constraint.solver.LinearSystem r0;
        java.lang.String $r1;
        android.support.constraint.solver.SolverVariable$Type $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        android.support.constraint.solver.SolverVariable r5;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.support.constraint.solver.SolverVariable$Type;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        if $r3 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables> = $r3;

     label1:
        $r3 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (android.support.constraint.solver.SolverVariable) $r4;

        if r5 != null goto label2;

        r5 = specialinvoke r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable createVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type)>($r1, $r2);

     label2:
        return r5;
    }
    public void minimize() throws java.lang.Exception
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        virtualinvoke r0.<android.support.constraint.solver.LinearSystem: void minimizeGoal(android.support.constraint.solver.Goal)>($r1);

        return;
    }
    void minimizeGoal(android.support.constraint.solver.Goal) throws java.lang.Exception
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 := @parameter0: android.support.constraint.solver.Goal;

        virtualinvoke $r1.<android.support.constraint.solver.Goal: void updateFromSystem(android.support.constraint.solver.LinearSystem)>(r0);

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: int enforceBFS(android.support.constraint.solver.Goal)>($r1);

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: int optimize(android.support.constraint.solver.Goal)>($r1);

        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void computeValues()>();

        return;
    }
    void rebuildGoalFromErrors()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.Goal $r1;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $r1 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        virtualinvoke $r1.<android.support.constraint.solver.Goal: void updateFromSystem(android.support.constraint.solver.LinearSystem)>(r0);

        return;
    }
    public void reset()
    {
        android.support.constraint.solver.LinearSystem r0;
        android.support.constraint.solver.SolverVariable r1;
        int $i0, $i1;
        android.support.constraint.solver.Cache $r2;
        android.support.constraint.solver.SolverVariable[] $r3;
        android.support.constraint.solver.Pools$Pool $r4;
        java.util.HashMap $r5;
        android.support.constraint.solver.Goal $r6;
        java.util.ArrayList $r7;
        android.support.constraint.solver.ArrayRow[] $r8;
        android.support.constraint.solver.ArrayRow $r9;

        r0 := @this: android.support.constraint.solver.LinearSystem;

        $i0 = 0;

     label1:
        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        r1 = $r3[$i0];

        if r1 == null goto label2;

        virtualinvoke r1.<android.support.constraint.solver.SolverVariable: void reset()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r4 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.Pools$Pool solverVariablePool>;

        $r3 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.SolverVariable[] mPoolVariables>;

        $i0 = r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount>;

        interfaceinvoke $r4.<android.support.constraint.solver.Pools$Pool: void releaseAll(java.lang.Object[],int)>($r3, $i0);

        r0.<android.support.constraint.solver.LinearSystem: int mPoolVariablesCount> = 0;

        $r2 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Cache mCache>;

        $r3 = $r2.<android.support.constraint.solver.Cache: android.support.constraint.solver.SolverVariable[] mIndexedVariables>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r3, null);

        $r5 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        if $r5 == null goto label4;

        $r5 = r0.<android.support.constraint.solver.LinearSystem: java.util.HashMap mVariables>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

     label4:
        r0.<android.support.constraint.solver.LinearSystem: int mVariablesID> = 0;

        $r6 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.Goal mGoal>;

        $r7 = $r6.<android.support.constraint.solver.Goal: java.util.ArrayList variables>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        r0.<android.support.constraint.solver.LinearSystem: int mNumColumns> = 1;

        $i0 = 0;

     label5:
        $i1 = r0.<android.support.constraint.solver.LinearSystem: int mNumRows>;

        if $i0 >= $i1 goto label6;

        $r8 = r0.<android.support.constraint.solver.LinearSystem: android.support.constraint.solver.ArrayRow[] mRows>;

        $r9 = $r8[$i0];

        $r9.<android.support.constraint.solver.ArrayRow: boolean used> = 0;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        specialinvoke r0.<android.support.constraint.solver.LinearSystem: void releaseRows()>();

        r0.<android.support.constraint.solver.LinearSystem: int mNumRows> = 0;

        return;
    }
