android.support.constraint.ConstraintLayout$LayoutParams extends android.view.ViewGroup$MarginLayoutParams
public static final int BASELINE
public static final int BOTTOM
public static final int CHAIN_PACKED
public static final int CHAIN_SPREAD
public static final int CHAIN_SPREAD_INSIDE
public static final int END
public static final int HORIZONTAL
public static final int LEFT
public static final int MATCH_CONSTRAINT
public static final int MATCH_CONSTRAINT_SPREAD
public static final int MATCH_CONSTRAINT_WRAP
public static final int PARENT_ID
public static final int RIGHT
public static final int START
public static final int TOP
public static final int UNSET
public static final int VERTICAL
public int baselineToBaseline
public int bottomToBottom
public int bottomToTop
public java.lang.String dimensionRatio
int dimensionRatioSide
float dimensionRatioValue
public int editorAbsoluteX
public int editorAbsoluteY
public int endToEnd
public int endToStart
public int goneBottomMargin
public int goneEndMargin
public int goneLeftMargin
public int goneRightMargin
public int goneStartMargin
public int goneTopMargin
public int guideBegin
public int guideEnd
public float guidePercent
public float horizontalBias
public int horizontalChainStyle
boolean horizontalDimensionFixed
public float horizontalWeight
boolean isGuideline
public int leftToLeft
public int leftToRight
public int matchConstraintDefaultHeight
public int matchConstraintDefaultWidth
public int matchConstraintMaxHeight
public int matchConstraintMaxWidth
public int matchConstraintMinHeight
public int matchConstraintMinWidth
boolean needsBaseline
public int orientation
int resolveGoneLeftMargin
int resolveGoneRightMargin
float resolvedHorizontalBias
int resolvedLeftToLeft
int resolvedLeftToRight
int resolvedRightToLeft
int resolvedRightToRight
public int rightToLeft
public int rightToRight
public int startToEnd
public int startToStart
public int topToBottom
public int topToTop
public float verticalBias
public int verticalChainStyle
boolean verticalDimensionFixed
public float verticalWeight
android.support.constraint.solver.widgets.ConstraintWidget widget
    public void <init>(int, int)
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0;
        int $i0, $i1;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>($i0, $i1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = -1.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = null;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = 0.5F;

        $r1 = new android.support.constraint.solver.widgets.ConstraintWidget;

        specialinvoke $r1.<android.support.constraint.solver.widgets.ConstraintWidget: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.support.constraint.solver.widgets.ConstraintWidget $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        int $i0, i1, $i2, $i3, $i4;
        float $f0, $f1;
        java.lang.String $r6, $r7;
        boolean $z0;
        byte $b5;
        java.lang.NumberFormatException $r8, $r9;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = -1.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = null;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = 0.5F;

        $r3 = new android.support.constraint.solver.widgets.ConstraintWidget;

        specialinvoke $r3.<android.support.constraint.solver.widgets.ConstraintWidget: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r3;

        $r4 = <android.support.constraint.R$styleable: int[] ConstraintLayout_Layout>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r4);

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getIndexCount()>();

        i1 = 0;

     label01:
        if i1 >= $i0 goto label57;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getIndex(int)>(i1);

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf>;

        if $i2 != $i3 goto label03;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = $i2;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toRightOf>;

        if $i2 != $i3 goto label04;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = $i2;

        goto label02;

     label04:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toLeftOf>;

        if $i2 != $i3 goto label05;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = $i2;

        goto label02;

     label05:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toRightOf>;

        if $i2 != $i3 goto label06;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = $i2;

        goto label02;

     label06:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toTopOf>;

        if $i2 != $i3 goto label07;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = $i2;

        goto label02;

     label07:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toBottomOf>;

        if $i2 != $i3 goto label08;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = $i2;

        goto label02;

     label08:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toTopOf>;

        if $i2 != $i3 goto label09;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = $i2;

        goto label02;

     label09:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf>;

        if $i2 != $i3 goto label10;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = $i2;

        goto label02;

     label10:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf>;

        if $i2 != $i3 goto label11;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = $i2;

        goto label02;

     label11:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteX>;

        if $i2 != $i3 goto label12;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = $i2;

        goto label02;

     label12:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteY>;

        if $i2 != $i3 goto label13;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = $i2;

        goto label02;

     label13:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_begin>;

        if $i2 != $i3 goto label14;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = $i2;

        goto label02;

     label14:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_end>;

        if $i2 != $i3 goto label15;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = $i2;

        goto label02;

     label15:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_percent>;

        if $i2 != $i3 goto label16;

        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, $f0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = $f0;

        goto label02;

     label16:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_android_orientation>;

        if $i2 != $i3 goto label17;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = $i2;

        goto label02;

     label17:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toEndOf>;

        if $i2 != $i3 goto label18;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = $i2;

        goto label02;

     label18:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toStartOf>;

        if $i2 != $i3 goto label19;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = $i2;

        goto label02;

     label19:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toStartOf>;

        if $i2 != $i3 goto label20;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = $i2;

        goto label02;

     label20:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toEndOf>;

        if $i2 != $i3 goto label21;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        $i3 = virtualinvoke $r5.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = $i3;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i3 != -1 goto label02;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, -1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = $i2;

        goto label02;

     label21:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginLeft>;

        if $i2 != $i3 goto label22;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = $i2;

        goto label02;

     label22:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginTop>;

        if $i2 != $i3 goto label23;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = $i2;

        goto label02;

     label23:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginRight>;

        if $i2 != $i3 goto label24;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = $i2;

        goto label02;

     label24:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginBottom>;

        if $i2 != $i3 goto label25;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = $i2;

        goto label02;

     label25:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginStart>;

        if $i2 != $i3 goto label26;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = $i2;

        goto label02;

     label26:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_goneMarginEnd>;

        if $i2 != $i3 goto label27;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = $i2;

        goto label02;

     label27:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_bias>;

        if $i2 != $i3 goto label28;

        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, $f0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = $f0;

        goto label02;

     label28:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_bias>;

        if $i2 != $i3 goto label29;

        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, $f0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = $f0;

        goto label02;

     label29:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintDimensionRatio>;

        if $i2 != $i3 goto label46;

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: java.lang.String getString(int)>($i2);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = $r6;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = #NaNF;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = -1;

        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        if $r6 == null goto label02;

        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $i3 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(44);

        if $i3 <= 0 goto label38;

        $i4 = $i2 + -1;

        if $i3 >= $i4 goto label38;

        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("W");

        if $z0 == 0 goto label37;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 0;

     label30:
        $i3 = $i3 + 1;

     label31:
        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $i4 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(58);

        if $i4 < 0 goto label42;

        $i2 = $i2 + -1;

        if $i4 >= $i2 goto label42;

        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r7 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $i2 = $i4 + 1;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i2);

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i2 <= 0 goto label02;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 <= 0 goto label02;

     label32:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r7);

     label33:
        $b5 = $f0 cmpl 0.0F;

        if $b5 <= 0 goto label02;

        $b5 = $f1 cmpl 0.0F;

        if $b5 <= 0 goto label02;

        $i2 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide>;

        if $i2 != 1 goto label39;

        $f0 = $f1 / $f0;

     label34:
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

     label35:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = $f0;

        goto label02;

     label36:
        $r8 := @caughtexception;

        goto label02;

     label37:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("H");

        if $z0 == 0 goto label30;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 1;

        goto label30;

     label38:
        $i3 = 0;

        goto label31;

     label39:
        $f0 = $f0 / $f1;

     label40:
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

     label41:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = $f0;

        goto label02;

     label42:
        $r6 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i3);

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i2 <= 0 goto label02;

     label43:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

     label44:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = $f0;

        goto label02;

     label45:
        $r9 := @caughtexception;

        goto label02;

     label46:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_weight>;

        if $i2 != $i3 goto label47;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, 0.0F);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = $f0;

        goto label02;

     label47:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_weight>;

        if $i2 != $i3 goto label48;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, 0.0F);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = $f0;

        goto label02;

     label48:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle>;

        if $i2 != $i3 goto label49;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = $i2;

        goto label02;

     label49:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_chainStyle>;

        if $i2 != $i3 goto label50;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = $i2;

        goto label02;

     label50:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_default>;

        if $i2 != $i3 goto label51;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = $i2;

        goto label02;

     label51:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_default>;

        if $i2 != $i3 goto label52;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = $i2;

        goto label02;

     label52:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_min>;

        if $i2 != $i3 goto label53;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = $i2;

        goto label02;

     label53:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_max>;

        if $i2 != $i3 goto label54;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = $i2;

        goto label02;

     label54:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_min>;

        if $i2 != $i3 goto label55;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = $i2;

        goto label02;

     label55:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_max>;

        if $i2 != $i3 goto label56;

        $i3 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight>;

        $i2 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i2, $i3);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = $i2;

        goto label02;

     label56:
        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_creator>;

        if $i2 == $i3 goto label02;

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_creator>;

        if $i2 == $i3 goto label02;

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_creator>;

        if $i2 == $i3 goto label02;

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_creator>;

        if $i2 == $i3 goto label02;

        $i3 = <android.support.constraint.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_creator>;

        if $i2 != $i3 goto label02;

        goto label02;

     label57:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.support.constraint.ConstraintLayout$LayoutParams: void validate()>();

        return;

        catch java.lang.NumberFormatException from label32 to label33 with label36;
        catch java.lang.NumberFormatException from label34 to label35 with label36;
        catch java.lang.NumberFormatException from label40 to label41 with label36;
        catch java.lang.NumberFormatException from label43 to label44 with label45;
    }
    public void <init>(android.support.constraint.ConstraintLayout$LayoutParams)
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0, $r1;
        android.support.constraint.solver.widgets.ConstraintWidget $r2;
        int $i0;
        float $f0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        $r1 := @parameter0: android.support.constraint.ConstraintLayout$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = -1.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = null;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = 0.5F;

        $r2 = new android.support.constraint.solver.widgets.ConstraintWidget;

        specialinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidget: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r2;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = $i0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = $f0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = $i0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = $f0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = $f0;

        $r3 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = $r3;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = $f0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = $i0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = $f0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = $f0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = $i0;

        $z0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = $z0;

        $z0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = $z0;

        $z0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = $z0;

        $z0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = $z0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = $i0;

        $i0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = $i0;

        $f0 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = $f0;

        $r2 = $r1.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r2;

        return;
    }
    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.constraint.solver.widgets.ConstraintWidget $r2;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent> = -1.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int topToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToTop> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int bottomToBottom> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int baselineToBaseline> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneTopMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneBottomMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalBias> = 0.5F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio> = null;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float dimensionRatioValue> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int dimensionRatioSide> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float verticalWeight> = 0.0F;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int horizontalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int verticalChainStyle> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMinHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteX> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int editorAbsoluteY> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean needsBaseline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = 0.5F;

        $r2 = new android.support.constraint.solver.widgets.ConstraintWidget;

        specialinvoke $r2.<android.support.constraint.solver.widgets.ConstraintWidget: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r2;

        return;
    }
    public void resolveLayoutDirection(int)
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0;
        int $i0;
        float $f0;
        boolean z0;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        $i0 := @parameter0: int;

        z0 = 1;

        specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void resolveLayoutDirection(int)>($i0);

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = -1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = -1;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneLeftMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = $i0;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneRightMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = $i0;

        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = $f0;

        $i0 = virtualinvoke r0.<android.support.constraint.ConstraintLayout$LayoutParams: int getLayoutDirection()>();

        if 1 != $i0 goto label09;

     label01:
        if z0 == 0 goto label11;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i0 == -1 goto label10;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = $i0;

     label02:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i0 == -1 goto label03;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = $i0;

     label03:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i0 == -1 goto label04;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = $i0;

     label04:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        if $i0 == -1 goto label05;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = $i0;

     label05:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        if $i0 == -1 goto label06;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = $i0;

     label06:
        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float horizontalBias>;

        $f0 = 1.0F - $f0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: float resolvedHorizontalBias> = $f0;

     label07:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i0 != -1 goto label08;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i0 != -1 goto label08;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        if $i0 == -1 goto label17;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = $i0;

     label08:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i0 != -1 goto label19;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i0 != -1 goto label19;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        if $i0 == -1 goto label18;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToLeft>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = $i0;

        return;

     label09:
        z0 = 0;

        goto label01;

     label10:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i0 == -1 goto label02;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = $i0;

        goto label02;

     label11:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        if $i0 == -1 goto label12;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = $i0;

     label12:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        if $i0 == -1 goto label13;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int startToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToLeft> = $i0;

     label13:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        if $i0 == -1 goto label14;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToStart>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToLeft> = $i0;

     label14:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        if $i0 == -1 goto label15;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int endToEnd>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = $i0;

     label15:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        if $i0 == -1 goto label16;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneStartMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneLeftMargin> = $i0;

     label16:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        if $i0 == -1 goto label07;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int goneEndMargin>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolveGoneRightMargin> = $i0;

        goto label07;

     label17:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        if $i0 == -1 goto label08;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int rightToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedRightToRight> = $i0;

        goto label08;

     label18:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        if $i0 == -1 goto label19;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int leftToRight>;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: int resolvedLeftToRight> = $i0;

     label19:
        return;
    }
    public void validate()
    {
        android.support.constraint.ConstraintLayout$LayoutParams r0;
        int $i0;
        float $f0;
        byte $b1;
        android.support.constraint.solver.widgets.ConstraintWidget $r1;
        boolean $z0;
        android.support.constraint.solver.widgets.Guideline $r2;

        r0 := @this: android.support.constraint.ConstraintLayout$LayoutParams;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 0;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i0 == 0 goto label1;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int width>;

        if $i0 != -1 goto label2;

     label1:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 0;

     label2:
        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i0 == 0 goto label3;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int height>;

        if $i0 != -1 goto label4;

     label3:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 0;

     label4:
        $f0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: float guidePercent>;

        $b1 = $f0 cmpl -1.0F;

        if $b1 != 0 goto label5;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideBegin>;

        if $i0 != -1 goto label5;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int guideEnd>;

        if $i0 == -1 goto label7;

     label5:
        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean isGuideline> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean horizontalDimensionFixed> = 1;

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: boolean verticalDimensionFixed> = 1;

        $r1 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $z0 = $r1 instanceof android.support.constraint.solver.widgets.Guideline;

        if $z0 != 0 goto label6;

        $r2 = new android.support.constraint.solver.widgets.Guideline;

        specialinvoke $r2.<android.support.constraint.solver.widgets.Guideline: void <init>()>();

        r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget> = $r2;

     label6:
        $r1 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: android.support.constraint.solver.widgets.ConstraintWidget widget>;

        $r2 = (android.support.constraint.solver.widgets.Guideline) $r1;

        $i0 = r0.<android.support.constraint.ConstraintLayout$LayoutParams: int orientation>;

        virtualinvoke $r2.<android.support.constraint.solver.widgets.Guideline: void setOrientation(int)>($i0);

     label7:
        return;
    }
