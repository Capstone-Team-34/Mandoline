android.support.graphics.drawable.VectorDrawableCompat$VFullPath extends android.support.graphics.drawable.VectorDrawableCompat$VPath
float mFillAlpha
int mFillColor
int mFillRule
float mStrokeAlpha
int mStrokeColor
android.graphics.Paint$Cap mStrokeLineCap
android.graphics.Paint$Join mStrokeLineJoin
float mStrokeMiterlimit
float mStrokeWidth
private int[] mThemeAttrs
float mTrimPathEnd
float mTrimPathOffset
float mTrimPathStart
    public void <init>()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        android.graphics.Paint$Cap $r1;
        android.graphics.Paint$Join $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset> = 0.0F;

        $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r1;

        $r2 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r2;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit> = 4.0F;

        return;
    }
    public void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0, $r1;
        android.graphics.Paint$Cap $r2;
        android.graphics.Paint$Join $r3;
        int[] $r4;
        int $i0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $r1 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPath: void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath)>($r1);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule> = 0;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd> = 1.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset> = 0.0F;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r2;

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r3;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit> = 4.0F;

        $r4 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs> = $r4;

        $i0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor> = $i0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha> = $f0;

        $i0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor> = $i0;

        $i0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule> = $i0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset> = $f0;

        $r2 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r2;

        $r3 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r3;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit> = $f0;

        return;
    }
    private android.graphics.Paint$Cap getStrokeLineCap(int, android.graphics.Paint$Cap)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int $i0;
        android.graphics.Paint$Cap r1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint$Cap;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return r1;

     label2:
        r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        return r1;

     label3:
        r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        return r1;

     label4:
        r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        return r1;
    }
    private android.graphics.Paint$Join getStrokeLineJoin(int, android.graphics.Paint$Join)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int $i0;
        android.graphics.Paint$Join r1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint$Join;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return r1;

     label2:
        r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        return r1;

     label3:
        r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        return r1;

     label4:
        r1 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;

        return r1;
    }
    private void updateStateFromTypedArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;
        java.lang.String $r3;
        android.support.v4.graphics.PathParser$PathDataNode[] $r4;
        int $i0;
        float $f0;
        android.graphics.Paint$Cap $r5;
        android.graphics.Paint$Join $r6;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs> = null;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "pathData");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if $r3 == null goto label2;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: java.lang.String mPathName> = $r3;

     label2:
        $r3 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.support.v4.graphics.PathParser: android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r3);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.support.v4.graphics.PathParser$PathDataNode[] mNodes> = $r4;

     label3:
        $i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor>;

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r2, "fillColor", 1, $i0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor> = $i0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "fillAlpha", 12, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha> = $f0;

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r2, "strokeLineCap", 8, -1);

        $r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        $r5 = specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)>($i0, $r5);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r5;

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r2, "strokeLineJoin", 9, -1);

        $r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        $r6 = specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)>($i0, $r6);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r6;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "strokeMiterLimit", 10, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit> = $f0;

        $i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor>;

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r2, "strokeColor", 3, $i0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor> = $i0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "strokeAlpha", 11, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha> = $f0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "strokeWidth", 4, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth> = $f0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "trimPathEnd", 6, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd> = $f0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "trimPathOffset", 7, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset> = $f0;

        $f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "trimPathStart", 5, $f0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart> = $f0;

        $i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule>;

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r2, "fillType", 13, $i0);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule> = $i0;

        return;
    }
    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        android.content.res.Resources$Theme $r1;
        int[] $r2;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs>;

        if $r2 != null goto label1;

     label1:
        return;
    }
    public boolean canApplyTheme()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int[] $r1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $r1 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    float getFillAlpha()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        return f0;
    }
    int getFillColor()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor>;

        return i0;
    }
    float getStrokeAlpha()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        return f0;
    }
    int getStrokeColor()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor>;

        return i0;
    }
    float getStrokeWidth()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        return f0;
    }
    float getTrimPathEnd()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        return f0;
    }
    float getTrimPathOffset()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        return f0;
    }
    float getTrimPathStart()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        f0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        return f0;
    }
    public void inflate(android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        android.content.res.Resources $r1;
        android.util.AttributeSet $r2;
        android.content.res.Resources$Theme $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 := @parameter2: android.content.res.Resources$Theme;

        $r4 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $r5 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH>;

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r3, $r2, $r5);

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($r6, $r4);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    void setFillAlpha(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha> = $f0;

        return;
    }
    void setFillColor(int)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int $i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $i0 := @parameter0: int;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor> = $i0;

        return;
    }
    void setStrokeAlpha(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha> = $f0;

        return;
    }
    void setStrokeColor(int)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        int $i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $i0 := @parameter0: int;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor> = $i0;

        return;
    }
    void setStrokeWidth(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth> = $f0;

        return;
    }
    void setTrimPathEnd(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd> = $f0;

        return;
    }
    void setTrimPathOffset(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset> = $f0;

        return;
    }
    void setTrimPathStart(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VFullPath;

        $f0 := @parameter0: float;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart> = $f0;

        return;
    }
