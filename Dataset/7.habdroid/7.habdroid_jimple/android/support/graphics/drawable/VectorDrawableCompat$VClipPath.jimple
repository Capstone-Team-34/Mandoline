android.support.graphics.drawable.VectorDrawableCompat$VClipPath extends android.support.graphics.drawable.VectorDrawableCompat$VPath
    public void <init>()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VClipPath r0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPath: void <init>()>();

        return;
    }
    public void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VClipPath r0, $r1;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        $r1 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPath: void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath)>($r1);

        return;
    }
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VClipPath r0;
        android.content.res.TypedArray $r1;
        java.lang.String $r2;
        android.support.v4.graphics.PathParser$PathDataNode[] $r3;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if $r2 == null goto label1;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VClipPath: java.lang.String mPathName> = $r2;

     label1:
        $r2 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        if $r2 == null goto label2;

        $r3 = staticinvoke <android.support.v4.graphics.PathParser: android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r2);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VClipPath: android.support.v4.graphics.PathParser$PathDataNode[] mNodes> = $r3;

     label2:
        return;
    }
    public void inflate(android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VClipPath r0;
        android.content.res.Resources $r1;
        android.util.AttributeSet $r2;
        android.content.res.Resources$Theme $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 := @parameter2: android.content.res.Resources$Theme;

        $r4 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r4, "pathData");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH>;

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r3, $r2, $r5);

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray)>($r6);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    public boolean isClipPath()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VClipPath r0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VClipPath;

        return 1;
    }
