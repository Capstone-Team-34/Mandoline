android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer extends java.lang.Object
private static final android.graphics.Matrix IDENTITY_MATRIX
float mBaseHeight
float mBaseWidth
private int mChangingConfigurations
private android.graphics.Paint mFillPaint
private final android.graphics.Matrix mFinalPathMatrix
private final android.graphics.Path mPath
private android.graphics.PathMeasure mPathMeasure
private final android.graphics.Path mRenderPath
int mRootAlpha
final android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
java.lang.String mRootName
private android.graphics.Paint mStrokePaint
final android.support.v4.util.ArrayMap mVGTargetsMap
float mViewportHeight
float mViewportWidth
    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        <android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> = $r0;

        return;
    }
    public void <init>()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.graphics.Matrix $r1;
        android.support.v4.util.ArrayMap $r2;
        android.support.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        android.graphics.Path $r4;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r1;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        $r2 = new android.support.v4.util.ArrayMap;

        specialinvoke $r2.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.v4.util.ArrayMap mVGTargetsMap> = $r2;

        $r3 = new android.support.graphics.drawable.VectorDrawableCompat$VGroup;

        specialinvoke $r3.<android.support.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $r4;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $r4;

        return;
    }
    public void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0, $r1;
        android.support.v4.util.ArrayMap $r2;
        android.graphics.Matrix $r3;
        android.support.graphics.drawable.VectorDrawableCompat$VGroup $r4, $r5;
        android.graphics.Path $r6, $r7;
        float $f0;
        int $i0;
        java.lang.String $r8;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r3;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        $r2 = new android.support.v4.util.ArrayMap;

        specialinvoke $r2.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.v4.util.ArrayMap mVGTargetsMap> = $r2;

        $r4 = new android.support.graphics.drawable.VectorDrawableCompat$VGroup;

        $r5 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.v4.util.ArrayMap mVGTargetsMap>;

        specialinvoke $r4.<android.support.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap)>($r5, $r2);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $r4;

        $r6 = new android.graphics.Path;

        $r7 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $r6;

        $r6 = new android.graphics.Path;

        $r7 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7);

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $r6;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = $f0;

        $f0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = $f0;

        $i0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations> = $i0;

        $i0 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $i0;

        $r8 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = $r8;

        $r8 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        if $r8 == null goto label1;

        $r2 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.v4.util.ArrayMap mVGTargetsMap>;

        $r8 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        virtualinvoke $r2.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r0);

     label1:
        return;
    }
    static android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Paint r1;

        $r0 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        r1 = $r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        return r1;
    }
    static android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer, android.graphics.Paint)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Paint $r1;

        $r0 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter1: android.graphics.Paint;

        $r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint> = $r1;

        return $r1;
    }
    static android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Paint r1;

        $r0 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        r1 = $r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        return r1;
    }
    static android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer, android.graphics.Paint)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Paint $r1;

        $r0 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter1: android.graphics.Paint;

        $r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint> = $r1;

        return $r1;
    }
    private static float cross(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f0 = $f0 * $f3;

        $f1 = $f1 * $f2;

        $f0 = $f0 - $f1;

        return $f0;
    }
    private void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup, android.graphics.Matrix, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.support.graphics.drawable.VectorDrawableCompat$VGroup $r1, r8;
        android.graphics.Matrix $r2, $r5;
        android.graphics.Canvas $r3;
        int $i0, $i1, i2, $i3;
        android.graphics.ColorFilter $r4;
        java.util.ArrayList $r6;
        java.lang.Object $r7;
        boolean $z0;
        android.support.graphics.drawable.VectorDrawableCompat$VPath r9;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VGroup;

        $r2 := @parameter1: android.graphics.Matrix;

        $r3 := @parameter2: android.graphics.Canvas;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: android.graphics.ColorFilter;

        $r5 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup)>($r1);

        virtualinvoke $r5.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r2);

        $r2 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup)>($r1);

        $r5 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup)>($r1);

        virtualinvoke $r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r5);

        virtualinvoke $r3.<android.graphics.Canvas: int save()>();

        i2 = 0;

     label1:
        $r6 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label4;

        $r6 = $r1.<android.support.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $z0 = $r7 instanceof android.support.graphics.drawable.VectorDrawableCompat$VGroup;

        if $z0 == 0 goto label3;

        r8 = (android.support.graphics.drawable.VectorDrawableCompat$VGroup) $r7;

        $r2 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup)>($r1);

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>(r8, $r2, $r3, $i0, $i1, $r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $z0 = $r7 instanceof android.support.graphics.drawable.VectorDrawableCompat$VPath;

        if $z0 == 0 goto label2;

        r9 = (android.support.graphics.drawable.VectorDrawableCompat$VPath) $r7;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r1, r9, $r3, $i0, $i1, $r4);

        goto label2;

     label4:
        virtualinvoke $r3.<android.graphics.Canvas: void restore()>();

        return;
    }
    private void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup, android.support.graphics.drawable.VectorDrawableCompat$VPath, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.support.graphics.drawable.VectorDrawableCompat$VGroup $r1;
        android.support.graphics.drawable.VectorDrawableCompat$VPath $r2;
        android.graphics.Canvas $r3;
        int $i0, $i1;
        android.graphics.ColorFilter $r4;
        android.graphics.Paint r5;
        float f0, f1, f2, $f3, $f4;
        android.graphics.Path r6, $r9;
        android.graphics.Matrix $r7, $r8;
        byte $b2;
        boolean $z0;
        android.support.graphics.drawable.VectorDrawableCompat$VFullPath r10;
        android.graphics.PathMeasure $r11;
        android.graphics.Paint$Style $r12;
        android.graphics.Path$FillType $r13;
        android.graphics.Paint$Join $r14;
        android.graphics.Paint$Cap $r15;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.support.graphics.drawable.VectorDrawableCompat$VGroup;

        $r2 := @parameter1: android.support.graphics.drawable.VectorDrawableCompat$VPath;

        $r3 := @parameter2: android.graphics.Canvas;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: android.graphics.ColorFilter;

        f0 = (float) $i0;

        f1 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        f1 = f0 / f1;

        f0 = (float) $i1;

        f2 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        f2 = f0 / f2;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f2);

        $r7 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup)>($r1);

        $r8 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r8.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r7);

        $r8 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f2);

        f1 = specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)>($r7);

        $b2 = f1 cmpl 0.0F;

        if $b2 != 0 goto label01;

        return;

     label01:
        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.support.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)>(r6);

        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        $r9 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $z0 = virtualinvoke $r2.<android.support.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()>();

        if $z0 == 0 goto label02;

        $r9 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $r7 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r9.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(r6, $r7);

        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>(r6);

        return;

     label02:
        r10 = (android.support.graphics.drawable.VectorDrawableCompat$VFullPath) $r2;

        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        $b2 = f2 cmpl 0.0F;

        if $b2 != 0 goto label03;

        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        $b2 = f2 cmpl 1.0F;

        if $b2 == 0 goto label06;

     label03:
        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        $f3 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        f2 = f2 + $f3;

        f2 = f2 % 1.0F;

        $f3 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        $f4 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        $f3 = $f3 + $f4;

        $f4 = $f3 % 1.0F;

        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        if $r11 != null goto label04;

        $r11 = new android.graphics.PathMeasure;

        specialinvoke $r11.<android.graphics.PathMeasure: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure> = $r11;

     label04:
        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        $r9 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $r11.<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>($r9, 0);

        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        $f3 = virtualinvoke $r11.<android.graphics.PathMeasure: float getLength()>();

        f2 = f2 * $f3;

        $f4 = $f4 * $f3;

        virtualinvoke r6.<android.graphics.Path: void reset()>();

        $b2 = f2 cmpl $f4;

        if $b2 <= 0 goto label13;

        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(f2, $f3, r6, 1);

        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(0.0F, $f4, r6, 1);

     label05:
        virtualinvoke r6.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F);

     label06:
        $r9 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $r7 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r9.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(r6, $r7);

        $i0 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor>;

        if $i0 == 0 goto label09;

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        if r5 != null goto label07;

        r5 = new android.graphics.Paint;

        specialinvoke r5.<android.graphics.Paint: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint> = r5;

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label07:
        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        $i0 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillColor>;

        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        $i0 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, f2);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r5.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $i0 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule>;

        if $i0 != 0 goto label14;

        $r13 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

     label08:
        virtualinvoke r6.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r13);

        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r6, r5);

     label09:
        $i0 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor>;

        if $i0 == 0 goto label15;

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        if r5 != null goto label10;

        r5 = new android.graphics.Paint;

        specialinvoke r5.<android.graphics.Paint: void <init>()>();

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint> = r5;

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label10:
        r5 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r14 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        if $r14 == null goto label11;

        $r14 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r14);

     label11:
        $r15 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        if $r15 == null goto label12;

        $r15 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r15);

     label12:
        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit>;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeMiter(float)>(f2);

        $i0 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: int mStrokeColor>;

        f2 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        $i0 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, f2);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r5.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        f0 = f0 * f1;

        f1 = r10.<android.support.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        f0 = f1 * f0;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        r6 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r6, r5);

        return;

     label13:
        $r11 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r11.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(f2, $f4, r6, 1);

        goto label05;

     label14:
        $r13 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        goto label08;

     label15:
        return;
    }
    private float getMatrixScale(android.graphics.Matrix)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.graphics.Matrix $r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        float[] r2;
        double $d0, $d1;
        byte $b0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.graphics.Matrix;

        r2 = newarray (float)[4];

        r2[0] = 0.0F;

        r2[1] = 1.0F;

        r2[2] = 1.0F;

        r2[3] = 0.0F;

        virtualinvoke $r1.<android.graphics.Matrix: void mapVectors(float[])>(r2);

        f0 = r2[0];

        $d0 = (double) f0;

        f0 = r2[1];

        $d1 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        f0 = (float) $d0;

        f1 = r2[2];

        $d0 = (double) f1;

        f1 = r2[3];

        $d1 = (double) f1;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        f1 = (float) $d0;

        $f4 = r2[0];

        $f2 = r2[1];

        $f5 = r2[2];

        $f3 = r2[3];

        $f2 = staticinvoke <android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>($f4, $f2, $f5, $f3);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        f1 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        f0 = f1 / f0;

        return f0;

     label1:
        return 0.0F;
    }
    public void draw(android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.graphics.Canvas $r1;
        int $i0, $i1;
        android.graphics.ColorFilter $r2;
        android.support.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        android.graphics.Matrix $r4;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.graphics.ColorFilter;

        $r3 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $r4 = <android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r3, $r4, $r1, $i0, $i1, $r2);

        return;
    }
    public float getAlpha()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        int $i0;
        float $f0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $i0 = virtualinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        return $f0;
    }
    public int getRootAlpha()
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        int i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        i0 = r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        return i0;
    }
    public void setAlpha(float)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        float $f0;
        int $i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $f0 := @parameter0: float;

        $f0 = 255.0F * $f0;

        $i0 = (int) $f0;

        virtualinvoke r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>($i0);

        return;
    }
    public void setRootAlpha(int)
    {
        android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        int $i0;

        r0 := @this: android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $i0 := @parameter0: int;

        r0.<android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $i0;

        return;
    }
