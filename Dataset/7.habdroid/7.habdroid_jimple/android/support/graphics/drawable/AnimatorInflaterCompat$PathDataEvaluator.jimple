android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
private android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray
    private void <init>()
    {
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r0;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(android.support.graphics.drawable.AnimatorInflaterCompat$1)
    {
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r0;
        android.support.graphics.drawable.AnimatorInflaterCompat$1 $r1;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $r1 := @parameter0: android.support.graphics.drawable.AnimatorInflaterCompat$1;

        specialinvoke r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>()>();

        return;
    }
    void <init>(android.support.v4.graphics.PathParser$PathDataNode[])
    {
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r0;
        android.support.v4.graphics.PathParser$PathDataNode[] $r1;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $r1 := @parameter0: android.support.v4.graphics.PathParser$PathDataNode[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray> = $r1;

        return;
    }
    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r0;
        float $f0;
        android.support.v4.graphics.PathParser$PathDataNode[] $r1, $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $f0 := @parameter0: float;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r1 = (android.support.v4.graphics.PathParser$PathDataNode[]) $r2;

        $r4 = (android.support.v4.graphics.PathParser$PathDataNode[]) $r3;

        $r1 = virtualinvoke r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[])>($f0, $r1, $r4);

        return $r1;
    }
    public android.support.v4.graphics.PathParser$PathDataNode[] evaluate(float, android.support.v4.graphics.PathParser$PathDataNode[], android.support.v4.graphics.PathParser$PathDataNode[])
    {
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r0;
        float $f0;
        android.support.v4.graphics.PathParser$PathDataNode[] $r1, $r2, $r5;
        android.support.v4.graphics.PathParser$PathDataNode $r3, $r6, $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        int i0, $i1;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $f0 := @parameter0: float;

        $r1 := @parameter1: android.support.v4.graphics.PathParser$PathDataNode[];

        $r2 := @parameter2: android.support.v4.graphics.PathParser$PathDataNode[];

        $z0 = staticinvoke <android.support.v4.graphics.PathParser: boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[])>($r1, $r2);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t interpolate between two incompatible pathData");

        throw $r4;

     label1:
        $r5 = r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray>;

        if $r5 == null goto label2;

        $r5 = r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray>;

        $z0 = staticinvoke <android.support.v4.graphics.PathParser: boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[])>($r5, $r1);

        if $z0 != 0 goto label3;

     label2:
        $r5 = staticinvoke <android.support.v4.graphics.PathParser: android.support.v4.graphics.PathParser$PathDataNode[] deepCopyNodes(android.support.v4.graphics.PathParser$PathDataNode[])>($r1);

        r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray> = $r5;

     label3:
        i0 = 0;

     label4:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label5;

        $r5 = r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray>;

        $r6 = $r5[i0];

        $r7 = $r1[i0];

        $r3 = $r2[i0];

        virtualinvoke $r6.<android.support.v4.graphics.PathParser$PathDataNode: void interpolatePathDataNode(android.support.v4.graphics.PathParser$PathDataNode,android.support.v4.graphics.PathParser$PathDataNode,float)>($r7, $r3, $f0);

        i0 = i0 + 1;

        goto label4;

     label5:
        $r1 = r0.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray>;

        return $r1;
    }
