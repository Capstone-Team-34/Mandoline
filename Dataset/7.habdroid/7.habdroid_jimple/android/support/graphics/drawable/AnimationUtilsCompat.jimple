android.support.graphics.drawable.AnimationUtilsCompat extends java.lang.Object
    public void <init>()
    {
        android.support.graphics.drawable.AnimationUtilsCompat r0;

        r0 := @this: android.support.graphics.drawable.AnimationUtilsCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.view.animation.Interpolator r4;
        int $i0, $i1, $i2;
        android.util.AttributeSet $r5;
        java.lang.String $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r18;
        android.view.animation.LinearInterpolator $r8;
        android.view.animation.AccelerateInterpolator $r9;
        android.view.animation.DecelerateInterpolator $r10;
        android.view.animation.AccelerateDecelerateInterpolator $r11;
        android.view.animation.CycleInterpolator $r12;
        android.view.animation.AnticipateInterpolator $r13;
        android.view.animation.OvershootInterpolator $r14;
        android.view.animation.AnticipateOvershootInterpolator $r15;
        android.view.animation.BounceInterpolator $r16;
        android.support.graphics.drawable.PathInterpolatorCompat $r17;
        java.lang.RuntimeException $r19;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        r4 = null;

        $i0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 3 goto label02;

        $i2 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= $i0 goto label13;

     label02:
        if $i1 == 1 goto label13;

        if $i1 != 2 goto label01;

        $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("linearInterpolator");

        if $z0 == 0 goto label03;

        $r8 = new android.view.animation.LinearInterpolator;

        r4 = $r8;

        specialinvoke $r8.<android.view.animation.LinearInterpolator: void <init>()>();

        goto label01;

     label03:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("accelerateInterpolator");

        if $z0 == 0 goto label04;

        $r9 = new android.view.animation.AccelerateInterpolator;

        r4 = $r9;

        specialinvoke $r9.<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label04:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("decelerateInterpolator");

        if $z0 == 0 goto label05;

        $r10 = new android.view.animation.DecelerateInterpolator;

        r4 = $r10;

        specialinvoke $r10.<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label05:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("accelerateDecelerateInterpolator");

        if $z0 == 0 goto label06;

        $r11 = new android.view.animation.AccelerateDecelerateInterpolator;

        r4 = $r11;

        specialinvoke $r11.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        goto label01;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("cycleInterpolator");

        if $z0 == 0 goto label07;

        $r12 = new android.view.animation.CycleInterpolator;

        r4 = $r12;

        specialinvoke $r12.<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("anticipateInterpolator");

        if $z0 == 0 goto label08;

        $r13 = new android.view.animation.AnticipateInterpolator;

        r4 = $r13;

        specialinvoke $r13.<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label08:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("overshootInterpolator");

        if $z0 == 0 goto label09;

        $r14 = new android.view.animation.OvershootInterpolator;

        r4 = $r14;

        specialinvoke $r14.<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label09:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("anticipateOvershootInterpolator");

        if $z0 == 0 goto label10;

        $r15 = new android.view.animation.AnticipateOvershootInterpolator;

        r4 = $r15;

        specialinvoke $r15.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>($r0, $r5);

        goto label01;

     label10:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("bounceInterpolator");

        if $z0 == 0 goto label11;

        $r16 = new android.view.animation.BounceInterpolator;

        r4 = $r16;

        specialinvoke $r16.<android.view.animation.BounceInterpolator: void <init>()>();

        goto label01;

     label11:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("pathInterpolator");

        if $z0 == 0 goto label12;

        $r17 = new android.support.graphics.drawable.PathInterpolatorCompat;

        r4 = $r17;

        specialinvoke $r17.<android.support.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r0, $r5, $r3);

        goto label01;

     label12:
        $r19 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ");

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r19;

     label13:
        return r4;
    }
    public static android.view.animation.Interpolator loadInterpolator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.view.animation.Interpolator $r1;
        android.content.res.XmlResourceParser r2, $r7;
        android.support.v4.view.animation.FastOutLinearInInterpolator $r3;
        android.support.v4.view.animation.FastOutSlowInInterpolator $r4;
        android.support.v4.view.animation.LinearOutSlowInInterpolator $r5;
        android.content.res.Resources $r6;
        android.content.res.Resources$Theme $r8;
        org.xmlpull.v1.XmlPullParserException r9;
        android.content.res.Resources$NotFoundException r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        java.io.IOException r14;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label01;

        $r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r0, $i0);

        return $r1;

     label01:
        r2 = null;

        if $i0 != 17563663 goto label05;

     label02:
        $r3 = new android.support.v4.view.animation.FastOutLinearInInterpolator;

     label03:
        specialinvoke $r3.<android.support.v4.view.animation.FastOutLinearInInterpolator: void <init>()>();

     label04:
        goto label23;

     label05:
        if $i0 != 17563661 goto label09;

     label06:
        $r4 = new android.support.v4.view.animation.FastOutSlowInInterpolator;

     label07:
        specialinvoke $r4.<android.support.v4.view.animation.FastOutSlowInInterpolator: void <init>()>();

     label08:
        goto label24;

     label09:
        if $i0 != 17563662 goto label13;

     label10:
        $r5 = new android.support.v4.view.animation.LinearOutSlowInInterpolator;

     label11:
        specialinvoke $r5.<android.support.v4.view.animation.LinearOutSlowInInterpolator: void <init>()>();

     label12:
        goto label25;

     label13:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0);

     label14:
        r2 = $r7;

     label15:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r1 = staticinvoke <android.support.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r0, $r6, $r8, $r7);

     label16:
        if $r7 == null goto label26;

        interfaceinvoke $r7.<android.content.res.XmlResourceParser: void close()>();

        return $r1;

     label17:
        r9 := @caughtexception;

     label18:
        r10 = new android.content.res.Resources$NotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r12);

        virtualinvoke r10.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r9);

        throw r10;

     label19:
        $r13 := @caughtexception;

        if r2 == null goto label20;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label20:
        throw $r13;

     label21:
        r14 := @caughtexception;

     label22:
        r10 = new android.content.res.Resources$NotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r12);

        virtualinvoke r10.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r14);

        throw r10;

     label23:
        return $r3;

     label24:
        return $r4;

     label25:
        return $r5;

     label26:
        return $r1;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label17;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Throwable from label02 to label04 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label17;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.lang.Throwable from label06 to label08 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label17;
        catch java.io.IOException from label11 to label12 with label21;
        catch java.lang.Throwable from label10 to label12 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label17;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label22 to label23 with label19;
    }
