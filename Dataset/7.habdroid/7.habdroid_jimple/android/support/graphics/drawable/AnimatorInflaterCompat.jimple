android.support.graphics.drawable.AnimatorInflaterCompat extends java.lang.Object
private static final boolean DBG_ANIMATOR_INFLATER
private static final int MAX_NUM_POINTS
private static final java.lang.String TAG
private static final int TOGETHER
private static final int VALUE_TYPE_COLOR
private static final int VALUE_TYPE_FLOAT
private static final int VALUE_TYPE_INT
private static final int VALUE_TYPE_PATH
private static final int VALUE_TYPE_UNDEFINED
    public void <init>()
    {
        android.support.graphics.drawable.AnimatorInflaterCompat r0;

        r0 := @this: android.support.graphics.drawable.AnimatorInflaterCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static android.animation.Animator createAnimatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        float $f0;
        android.util.AttributeSet $r4;
        android.animation.Animator $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $f0 := @parameter4: float;

        $r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $r5 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>($r0, $r1, $r2, $r3, $r4, null, 0, $f0);

        return $r5;
    }
    private static android.animation.Animator createAnimatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.animation.AnimatorSet, int, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4, $r14;
        android.animation.AnimatorSet $r5, $r13;
        int $i0, i1, $i2, $i3;
        float $f0;
        android.animation.Animator[] r6;
        android.animation.Animator r7, r19;
        java.util.ArrayList r8, $r20;
        java.lang.String $r9;
        boolean z0, $z1;
        android.animation.ValueAnimator $r10;
        int[] $r11;
        android.content.res.TypedArray $r12;
        android.animation.PropertyValuesHolder[] $r15;
        java.lang.StringBuilder $r16, $r21;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        java.lang.RuntimeException $r22;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter4: android.util.AttributeSet;

        $r5 := @parameter5: android.animation.AnimatorSet;

        $i0 := @parameter6: int;

        $f0 := @parameter7: float;

        r7 = null;

        r8 = null;

        i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 != 3 goto label02;

        $i3 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label10;

     label02:
        if $i2 == 1 goto label10;

        if $i2 != 2 goto label01;

        $r9 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = 0;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("objectAnimator");

        if $z1 == 0 goto label05;

        r7 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r4, $f0, $r3);

     label03:
        if $r5 == null goto label01;

        if z0 != 0 goto label01;

        if r8 != null goto label04;

        $r20 = new java.util.ArrayList;

        r8 = $r20;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label04:
        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        goto label01;

     label05:
        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("animator");

        if $z1 == 0 goto label06;

        r7 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r4, null, $f0, $r3);

        goto label03;

     label06:
        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z1 == 0 goto label07;

        $r13 = new android.animation.AnimatorSet;

        r7 = $r13;

        specialinvoke $r13.<android.animation.AnimatorSet: void <init>()>();

        $r11 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET>;

        $r12 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r4, $r11);

        $i2 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r12, $r3, "ordering", 0, 0);

        $r13 = (android.animation.AnimatorSet) $r13;

        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>($r0, $r1, $r2, $r3, $r4, $r13, $i2, $f0);

        virtualinvoke $r12.<android.content.res.TypedArray: void recycle()>();

        goto label03;

     label07:
        z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("propertyValuesHolder");

        if z0 == 0 goto label09;

        $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $r15 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r0, $r1, $r2, $r3, $r14);

        if $r15 == null goto label08;

        if r7 == null goto label08;

        z0 = r7 instanceof android.animation.ValueAnimator;

        if z0 == 0 goto label08;

        $r10 = (android.animation.ValueAnimator) r7;

        virtualinvoke $r10.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r15);

     label08:
        z0 = 1;

        goto label03;

     label09:
        $r22 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animator name: ");

        $r9 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r22;

     label10:
        if $r5 == null goto label14;

        if r8 == null goto label14;

        i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        r6 = newarray (android.animation.Animator)[i1];

        $i2 = 0;

        $r17 = virtualinvoke r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label12;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.animation.Animator) $r18;

        r6[$i2] = r19;

        $i2 = $i2 + 1;

        goto label11;

     label12:
        if $i0 != 0 goto label13;

        virtualinvoke $r5.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r6);

        return r7;

     label13:
        virtualinvoke $r5.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>(r6);

     label14:
        return r7;
    }
    private static android.animation.Keyframe createNewKeyframe(android.animation.Keyframe, float)
    {
        android.animation.Keyframe $r0;
        float $f0;
        java.lang.Class $r1, $r2;

        $r0 := @parameter0: android.animation.Keyframe;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.animation.Keyframe: java.lang.Class getType()>();

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if $r1 != $r2 goto label1;

        $r0 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>($f0);

        return $r0;

     label1:
        $r1 = virtualinvoke $r0.<android.animation.Keyframe: java.lang.Class getType()>();

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 != $r2 goto label2;

        $r0 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>($f0);

        return $r0;

     label2:
        $r0 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofObject(float)>($f0);

        return $r0;
    }
    private static void distributeKeyframes(android.animation.Keyframe[], float, int, int)
    {
        android.animation.Keyframe[] $r0;
        float $f0, $f1;
        int $i0, $i1, i2;
        android.animation.Keyframe $r1, $r2;

        $r0 := @parameter0: android.animation.Keyframe[];

        $f0 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        i2 = $i1 - $i0;

        i2 = i2 + 2;

        $f1 = (float) i2;

        $f0 = $f0 / $f1;

     label1:
        if $i0 > $i1 goto label2;

        $r1 = $r0[$i0];

        i2 = $i0 + -1;

        $r2 = $r0[i2];

        $f1 = virtualinvoke $r2.<android.animation.Keyframe: float getFraction()>();

        $f1 = $f1 + $f0;

        virtualinvoke $r1.<android.animation.Keyframe: void setFraction(float)>($f1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private static void dumpKeyframes(java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] $r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.Object r2;
        android.animation.Keyframe r3;
        java.lang.StringBuilder $r4;
        float $f0;
        byte $b2;
        java.io.Serializable $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label7;

        i0 = lengthof $r0;

        if i0 != 0 goto label1;

        return;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorInflater", $r1);

        i0 = lengthof $r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        r2 = $r0[i1];

        r3 = (android.animation.Keyframe) r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyframe ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fraction ");

        $f0 = virtualinvoke r3.<android.animation.Keyframe: float getFraction()>();

        $b2 = $f0 cmpg 0.0F;

        if $b2 >= 0 goto label5;

        $r5 = "null";

     label3:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value : ");

        $z0 = virtualinvoke r3.<android.animation.Keyframe: boolean hasValue()>();

        if $z0 == 0 goto label6;

        r2 = virtualinvoke r3.<android.animation.Keyframe: java.lang.Object getValue()>();

     label4:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AnimatorInflater", $r1);

        i1 = i1 + 1;

        goto label2;

     label5:
        $f0 = virtualinvoke r3.<android.animation.Keyframe: float getFraction()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label3;

     label6:
        r2 = "null";

        goto label4;

     label7:
        return;
    }
    private static android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray, int, int, int, java.lang.String)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r1, $r4, $r5;
        android.util.TypedValue $r2;
        boolean z0, z1, $z2;
        android.animation.PropertyValuesHolder r3;
        android.support.v4.graphics.PathParser$PathDataNode[] $r6, $r7;
        android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator r8;
        android.view.InflateException $r9;
        java.lang.StringBuilder $r10;
        java.lang.Object[] $r11;
        android.support.graphics.drawable.ArgbEvaluator r12;
        float $f0, $f1;
        float[] $r13;
        int[] $r14;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r2 == null goto label10;

        z0 = 1;

     label01:
        if z0 == 0 goto label11;

        i3 = $r2.<android.util.TypedValue: int type>;

     label02:
        $r2 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i1);

        if $r2 == null goto label12;

        z1 = 1;

     label03:
        if z1 == 0 goto label13;

        i4 = $r2.<android.util.TypedValue: int type>;

     label04:
        if $i2 != 4 goto label07;

        if z0 == 0 goto label05;

        $z2 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>(i3);

        if $z2 != 0 goto label06;

     label05:
        if z1 == 0 goto label14;

        $z2 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>(i4);

        if $z2 == 0 goto label14;

     label06:
        $i2 = 3;

     label07:
        if $i2 != 0 goto label15;

        $z2 = 1;

     label08:
        r3 = null;

        if $i2 != 2 goto label19;

        $r4 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        $r5 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        $r6 = staticinvoke <android.support.v4.graphics.PathParser: android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r4);

        $r7 = staticinvoke <android.support.v4.graphics.PathParser: android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>($r5);

        if $r6 != null goto label09;

        if $r7 == null goto label42;

     label09:
        if $r6 == null goto label18;

        r8 = new android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        specialinvoke r8.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>(android.support.graphics.drawable.AnimatorInflaterCompat$1)>(null);

        if $r7 == null goto label17;

        z1 = staticinvoke <android.support.v4.graphics.PathParser: boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[])>($r6, $r7);

        if z1 != 0 goto label16;

        $r9 = new android.view.InflateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Can\'t morph from ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.view.InflateException: void <init>(java.lang.String)>($r1);

        throw $r9;

     label10:
        z0 = 0;

        goto label01;

     label11:
        i3 = 0;

        goto label02;

     label12:
        z1 = 0;

        goto label03;

     label13:
        i4 = 0;

        goto label04;

     label14:
        $i2 = 0;

        goto label07;

     label15:
        $z2 = 0;

        goto label08;

     label16:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r6;

        $r11[1] = $r7;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, r8, $r11);

        return r3;

     label17:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r6;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, r8, $r11);

        return r3;

     label18:
        if $r7 == null goto label42;

        r8 = new android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        specialinvoke r8.<android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: void <init>(android.support.graphics.drawable.AnimatorInflaterCompat$1)>(null);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r7;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>($r1, r8, $r11);

        return r3;

     label19:
        r12 = null;

        if $i2 != 3 goto label20;

        r12 = staticinvoke <android.support.graphics.drawable.ArgbEvaluator: android.support.graphics.drawable.ArgbEvaluator getInstance()>();

     label20:
        if $z2 == 0 goto label30;

        if z0 == 0 goto label27;

        if i3 != 5 goto label24;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

     label21:
        if z1 == 0 goto label26;

        if i4 != 5 goto label25;

        $f1 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

     label22:
        $r13 = newarray (float)[2];

        $r13[0] = $f0;

        $r13[1] = $f1;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13);

     label23:
        if r3 == null goto label43;

        if r12 == null goto label43;

        virtualinvoke r3.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r12);

        return r3;

     label24:
        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getFloat(int,float)>($i0, 0.0F);

        goto label21;

     label25:
        $f1 = virtualinvoke $r0.<android.content.res.TypedArray: float getFloat(int,float)>($i1, 0.0F);

        goto label22;

     label26:
        $r13 = newarray (float)[1];

        $r13[0] = $f0;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13);

        goto label23;

     label27:
        if i4 != 5 goto label29;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

     label28:
        $r13 = newarray (float)[1];

        $r13[0] = $f0;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r1, $r13);

        goto label23;

     label29:
        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getFloat(int,float)>($i1, 0.0F);

        goto label28;

     label30:
        if z0 == 0 goto label38;

        if i3 != 5 goto label33;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        $i2 = (int) $f0;

     label31:
        if z1 == 0 goto label37;

        if i4 != 5 goto label35;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i0 = (int) $f0;

     label32:
        $r14 = newarray (int)[2];

        $r14[0] = $i2;

        $r14[1] = $i0;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14);

        goto label23;

     label33:
        z0 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>(i3);

        if z0 == 0 goto label34;

        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        goto label31;

     label34:
        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        goto label31;

     label35:
        z1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>(i4);

        if z1 == 0 goto label36;

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        goto label32;

     label36:
        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        goto label32;

     label37:
        $r14 = newarray (int)[1];

        $r14[0] = $i2;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14);

        goto label23;

     label38:
        if z1 == 0 goto label23;

        if i4 != 5 goto label40;

        $f0 = virtualinvoke $r0.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i2 = (int) $f0;

     label39:
        $r14 = newarray (int)[1];

        $r14[0] = $i2;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r1, $r14);

        goto label23;

     label40:
        z1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>(i4);

        if z1 == 0 goto label41;

        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        goto label39;

     label41:
        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i1, 0);

        goto label39;

     label42:
        return null;

     label43:
        return r3;
    }
    private static int inferValueTypeFromValues(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray $r0;
        int $i0, $i1;
        boolean z0, z1;
        android.util.TypedValue $r1;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        z0 = 1;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i0);

        if $r1 == null goto label07;

        z1 = 1;

     label01:
        if z1 == 0 goto label08;

        $i0 = $r1.<android.util.TypedValue: int type>;

     label02:
        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>($i1);

        if $r1 == null goto label09;

     label03:
        if z0 == 0 goto label10;

        $i1 = $r1.<android.util.TypedValue: int type>;

     label04:
        if z1 == 0 goto label05;

        z1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i0);

        if z1 != 0 goto label06;

     label05:
        if z0 == 0 goto label11;

        z0 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i1);

        if z0 == 0 goto label11;

     label06:
        return 3;

     label07:
        z1 = 0;

        goto label01;

     label08:
        $i0 = 0;

        goto label02;

     label09:
        z0 = 0;

        goto label03;

     label10:
        $i1 = 0;

        goto label04;

     label11:
        return 0;
    }
    private static int inferValueTypeOfKeyframe(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        android.content.res.Resources $r0;
        android.content.res.Resources$Theme $r1;
        android.util.AttributeSet $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean z0;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.util.TypedValue $r6;
        int $i0;
        byte b1;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: android.content.res.Resources$Theme;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        z0 = 0;

        $r4 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME>;

        $r5 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r0, $r1, $r2, $r4);

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r5, $r3, "value", 0);

        if $r6 == null goto label1;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $i0 = $r6.<android.util.TypedValue: int type>;

        z0 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i0);

        if z0 == 0 goto label3;

        b1 = 3;

     label2:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return b1;

     label3:
        b1 = 0;

        goto label2;
    }
    private static boolean isColorType(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 28 goto label1;

        if $i0 > 31 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static android.animation.Animator loadAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.animation.Animator $r1;
        android.content.res.Resources $r2;
        android.content.res.Resources$Theme $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label1;

        $r1 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r0, $i0);

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)>($r0, $r2, $r3, $i0);

        return $r1;
    }
    public static android.animation.Animator loadAnimator(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        int $i0;
        android.animation.Animator $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $i0 := @parameter3: int;

        $r3 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)>($r0, $r1, $r2, $i0, 1.0F);

        return $r3;
    }
    public static android.animation.Animator loadAnimator(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, int, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        int $i0;
        float $f0;
        android.content.res.XmlResourceParser r3, $r4;
        android.animation.Animator $r5;
        org.xmlpull.v1.XmlPullParserException r6;
        android.content.res.Resources$NotFoundException r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        java.io.IOException r11;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $i0 := @parameter3: int;

        $f0 := @parameter4: float;

        r3 = null;

     label01:
        $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>($i0);

     label02:
        r3 = $r4;

     label03:
        $r5 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>($r0, $r1, $r2, $r4, $f0);

     label04:
        if $r4 == null goto label11;

        interfaceinvoke $r4.<android.content.res.XmlResourceParser: void close()>();

        return $r5;

     label05:
        r6 := @caughtexception;

     label06:
        r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r9);

        virtualinvoke r7.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        throw r7;

     label07:
        $r10 := @caughtexception;

        if r3 == null goto label08;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label08:
        throw $r10;

     label09:
        r11 := @caughtexception;

     label10:
        r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r9);

        virtualinvoke r7.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r11);

        throw r7;

     label11:
        return $r5;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label05;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }
    private static android.animation.ValueAnimator loadAnimator(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, android.animation.ValueAnimator, float, org.xmlpull.v1.XmlPullParser) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.util.AttributeSet $r3;
        float $f0;
        org.xmlpull.v1.XmlPullParser $r4;
        android.animation.ValueAnimator r5;
        int[] $r6;
        android.content.res.TypedArray $r7, $r8;
        int $i0;
        android.view.animation.Interpolator $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: android.util.AttributeSet;

        r5 := @parameter4: android.animation.ValueAnimator;

        $f0 := @parameter5: float;

        $r4 := @parameter6: org.xmlpull.v1.XmlPullParser;

        $r6 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR>;

        $r7 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r3, $r6);

        $r6 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR>;

        $r8 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r3, $r6);

        if r5 != null goto label1;

        r5 = new android.animation.ValueAnimator;

        specialinvoke r5.<android.animation.ValueAnimator: void <init>()>();

     label1:
        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)>(r5, $r7, $r8, $f0, $r4);

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r7, $r4, "interpolator", 0, 0);

        if $i0 <= 0 goto label2;

        $r9 = staticinvoke <android.support.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r0, $i0);

        virtualinvoke r5.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r9);

     label2:
        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        if $r8 == null goto label3;

        virtualinvoke $r8.<android.content.res.TypedArray: void recycle()>();

     label3:
        return r5;
    }
    private static android.animation.Keyframe loadKeyframe(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.util.AttributeSet $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        int $i0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.animation.Keyframe r7;
        float $f0, $f1;
        android.util.TypedValue $r8;
        boolean z0, $z1;
        android.view.animation.Interpolator $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: android.util.AttributeSet;

        $i0 := @parameter4: int;

        $r4 := @parameter5: org.xmlpull.v1.XmlPullParser;

        $r5 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME>;

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r3, $r5);

        r7 = null;

        $f0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r4, "fraction", 3, -1.0F);

        $r8 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r6, $r4, "value", 0);

        if $r8 == null goto label05;

        z0 = 1;

     label01:
        if $i0 != 4 goto label02;

        if z0 == 0 goto label06;

        $i0 = $r8.<android.util.TypedValue: int type>;

        $z1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)>($i0);

        if $z1 == 0 goto label06;

        $i0 = 3;

     label02:
        if z0 == 0 goto label09;

        lookupswitch($i0)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label03;
            case 3: goto label08;
            default: goto label03;
        };

     label03:
        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r4, "interpolator", 1, 0);

        if $i0 <= 0 goto label04;

        $r9 = staticinvoke <android.support.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r0, $i0);

        virtualinvoke r7.<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>($r9);

     label04:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        return r7;

     label05:
        z0 = 0;

        goto label01;

     label06:
        $i0 = 0;

        goto label02;

     label07:
        $f1 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r4, "value", 0, 0.0F);

        r7 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>($f0, $f1);

        goto label03;

     label08:
        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r4, "value", 0, 0);

        r7 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>($f0, $i0);

        goto label03;

     label09:
        if $i0 != 0 goto label10;

        r7 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>($f0);

        goto label03;

     label10:
        r7 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float)>($f0);

        goto label03;
    }
    private static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, float, org.xmlpull.v1.XmlPullParser) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.util.AttributeSet $r3;
        float $f0;
        org.xmlpull.v1.XmlPullParser $r4;
        android.animation.ObjectAnimator r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: android.util.AttributeSet;

        $f0 := @parameter4: float;

        $r4 := @parameter5: org.xmlpull.v1.XmlPullParser;

        r5 = new android.animation.ObjectAnimator;

        specialinvoke r5.<android.animation.ObjectAnimator: void <init>()>();

        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r3, r5, $f0, $r4);

        return r5;
    }
    private static android.animation.PropertyValuesHolder loadPvh(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, java.lang.String, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        java.lang.String $r4, $r6;
        float f0, $f1;
        int i0, $i1, $i2, $i3, i5, i6, $i7;
        java.util.ArrayList r5;
        boolean $z0;
        android.util.AttributeSet $r7;
        android.animation.Keyframe $r8, r10;
        java.lang.Object $r9;
        byte $b4;
        android.animation.Keyframe[] $r11;
        android.animation.PropertyValuesHolder $r12;
        android.support.graphics.drawable.ArgbEvaluator $r13;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter4: java.lang.String;

        $i1 := @parameter5: int;

        r5 = null;

     label01:
        $i2 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i2 == 3 goto label05;

        if $i2 == 1 goto label05;

        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("keyframe");

        if $z0 == 0 goto label01;

        if $i1 != 4 goto label02;

        $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $i1 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r1, $r2, $r7, $r3);

     label02:
        $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r3);

        $r8 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)>($r0, $r1, $r2, $r7, $i1, $r3);

        if $r8 == null goto label04;

        if r5 != null goto label03;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label03:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label04:
        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label05:
        if r5 == null goto label18;

        $i3 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $i2 = $i3;

        if $i3 <= 0 goto label18;

        $r9 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r8 = (android.animation.Keyframe) $r9;

        i0 = $i3 + -1;

        $r9 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r10 = (android.animation.Keyframe) $r9;

        f0 = virtualinvoke r10.<android.animation.Keyframe: float getFraction()>();

        $b4 = f0 cmpg 1.0F;

        if $b4 >= 0 goto label06;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label10;

        virtualinvoke r10.<android.animation.Keyframe: void setFraction(float)>(1.0F);

     label06:
        f0 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        $b4 = f0 cmpl 0.0F;

        if $b4 == 0 goto label07;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label11;

        virtualinvoke $r8.<android.animation.Keyframe: void setFraction(float)>(0.0F);

     label07:
        $r11 = newarray (android.animation.Keyframe)[$i2];

        virtualinvoke r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $i3 = 0;

     label08:
        if $i3 >= $i2 goto label17;

        $r8 = $r11[$i3];

        f0 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label09;

        if $i3 != 0 goto label12;

        virtualinvoke $r8.<android.animation.Keyframe: void setFraction(float)>(0.0F);

     label09:
        $i3 = $i3 + 1;

        goto label08;

     label10:
        $i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        r10 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>(r10, 1.0F);

        virtualinvoke r5.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, r10);

        $i2 = $i3 + 1;

        goto label06;

     label11:
        $r8 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)>($r8, 0.0F);

        virtualinvoke r5.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r8);

        $i2 = $i2 + 1;

        goto label07;

     label12:
        i0 = $i2 + -1;

        if $i3 != i0 goto label13;

        virtualinvoke $r8.<android.animation.Keyframe: void setFraction(float)>(1.0F);

        goto label09;

     label13:
        i0 = $i3;

        i5 = $i3;

        i6 = $i3 + 1;

     label14:
        $i7 = $i2 + -1;

        if i6 >= $i7 goto label15;

        $r8 = $r11[i6];

        f0 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        $b4 = f0 cmpl 0.0F;

        if $b4 < 0 goto label16;

     label15:
        i6 = i5 + 1;

        $r8 = $r11[i6];

        f0 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        i6 = i0 + -1;

        $r8 = $r11[i6];

        $f1 = virtualinvoke $r8.<android.animation.Keyframe: float getFraction()>();

        f0 = f0 - $f1;

        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)>($r11, f0, i0, i5);

        goto label09;

     label16:
        i5 = i6;

        i6 = i6 + 1;

        goto label14;

     label17:
        $r12 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>($r4, $r11);

        if $i1 != 3 goto label19;

        $r13 = staticinvoke <android.support.graphics.drawable.ArgbEvaluator: android.support.graphics.drawable.ArgbEvaluator getInstance()>();

        virtualinvoke $r12.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>($r13);

        return $r12;

     label18:
        return null;

     label19:
        return $r12;
    }
    private static android.animation.PropertyValuesHolder[] loadValues(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4;
        java.util.ArrayList r5;
        int $i0, i1;
        java.lang.String $r6;
        boolean $z0;
        int[] $r7;
        android.content.res.TypedArray $r8;
        android.animation.PropertyValuesHolder $r9, r10;
        android.animation.PropertyValuesHolder[] $r11;
        java.lang.Object $r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter4: android.util.AttributeSet;

        r5 = null;

     label01:
        $i0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 3 goto label07;

        if $i0 == 1 goto label07;

        if $i0 == 2 goto label02;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label02:
        $r6 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("propertyValuesHolder");

        if $z0 == 0 goto label06;

        $r7 = <android.support.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER>;

        $r8 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r4, $r7);

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r8, $r3, "propertyName", 3);

        $i0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r8, $r3, "valueType", 2, 4);

        $r9 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r0, $r1, $r2, $r3, $r6, $i0);

        r10 = $r9;

        if $r9 != null goto label03;

        r10 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>($r8, $i0, 0, 1, $r6);

     label03:
        if r10 == null goto label05;

        if r5 != null goto label04;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label04:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label05:
        virtualinvoke $r8.<android.content.res.TypedArray: void recycle()>();

     label06:
        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label07:
        if r5 == null goto label09;

        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $r11 = newarray (android.animation.PropertyValuesHolder)[$i0];

        i1 = 0;

     label08:
        if i1 >= $i0 goto label10;

        $r12 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.animation.PropertyValuesHolder) $r12;

        $r11[i1] = $r9;

        i1 = i1 + 1;

        goto label08;

     label09:
        return null;

     label10:
        return $r11;
    }
    private static void parseAnimatorFromTypeArray(android.animation.ValueAnimator, android.content.res.TypedArray, android.content.res.TypedArray, float, org.xmlpull.v1.XmlPullParser)
    {
        android.animation.ValueAnimator $r0;
        android.content.res.TypedArray $r1, $r2;
        float $f0;
        org.xmlpull.v1.XmlPullParser $r3;
        long l0, l1;
        int $i2, $i3;
        boolean $z0;
        android.animation.PropertyValuesHolder $r4;
        android.animation.PropertyValuesHolder[] $r5;

        $r0 := @parameter0: android.animation.ValueAnimator;

        $r1 := @parameter1: android.content.res.TypedArray;

        $r2 := @parameter2: android.content.res.TypedArray;

        $f0 := @parameter3: float;

        $r3 := @parameter4: org.xmlpull.v1.XmlPullParser;

        $i2 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r3, "duration", 1, 300);

        l0 = (long) $i2;

        $i2 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r3, "startOffset", 2, 0);

        l1 = (long) $i2;

        $i3 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r3, "valueType", 7, 4);

        $i2 = $i3;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r3, "valueFrom");

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r3, "valueTo");

        if $z0 == 0 goto label2;

        if $i3 != 4 goto label1;

        $i2 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)>($r1, 5, 6);

     label1:
        $r4 = staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)>($r1, $i2, 5, 6, "");

        if $r4 == null goto label2;

        $r5 = newarray (android.animation.PropertyValuesHolder)[1];

        $r5[0] = $r4;

        virtualinvoke $r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r5);

     label2:
        virtualinvoke $r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        virtualinvoke $r0.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $i3 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r3, "repeatCount", 3, 0);

        virtualinvoke $r0.<android.animation.ValueAnimator: void setRepeatCount(int)>($i3);

        $i3 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r1, $r3, "repeatMode", 4, 1);

        virtualinvoke $r0.<android.animation.ValueAnimator: void setRepeatMode(int)>($i3);

        if $r2 == null goto label3;

        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)>($r0, $r2, $i2, $f0, $r3);

     label3:
        return;
    }
    private static void setupObjectAnimator(android.animation.ValueAnimator, android.content.res.TypedArray, int, float, org.xmlpull.v1.XmlPullParser)
    {
        android.animation.ValueAnimator $r0;
        android.content.res.TypedArray $r1;
        float $f0;
        org.xmlpull.v1.XmlPullParser $r2;
        int $i0;
        android.animation.ObjectAnimator r3;
        java.lang.String $r4, $r5, $r6;
        android.view.InflateException $r7;
        java.lang.StringBuilder $r8;
        android.graphics.Path $r9;

        $r0 := @parameter0: android.animation.ValueAnimator;

        $r1 := @parameter1: android.content.res.TypedArray;

        $i0 := @parameter2: int;

        $f0 := @parameter3: float;

        $r2 := @parameter4: org.xmlpull.v1.XmlPullParser;

        r3 = (android.animation.ObjectAnimator) $r0;

        $r4 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "pathData", 1);

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyXName", 2);

        $r6 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyYName", 3);

        if $i0 == 2 goto label1;

        if $i0 != 4 goto label1;

     label1:
        if $r5 != null goto label2;

        if $r6 != null goto label2;

        $r7 = new android.view.InflateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" propertyXName or propertyYName is needed for PathData");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.view.InflateException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label2:
        $r9 = staticinvoke <android.support.v4.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>($r4);

        $f0 = 0.5F * $f0;

        staticinvoke <android.support.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)>($r9, r3, $f0, $r5, $r6);

        return;

     label3:
        $r4 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "propertyName", 0);

        virtualinvoke r3.<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>($r4);

        return;
    }
    private static void setupPathMotion(android.graphics.Path, android.animation.ObjectAnimator, float, java.lang.String, java.lang.String)
    {
        android.graphics.Path $r0;
        android.animation.ObjectAnimator $r1;
        float $f0, f1, $f2;
        java.lang.String $r2, $r3;
        java.util.ArrayList r4;
        float[] r5, r6, r8;
        android.graphics.PathMeasure r7;
        java.lang.Float $r9;
        boolean $z0;
        int $i0, i1, $i2, $i3, $i4;
        java.lang.Object $r10;
        byte $b5;
        android.animation.PropertyValuesHolder r11, r12;
        android.animation.PropertyValuesHolder[] $r13;

        $r0 := @parameter0: android.graphics.Path;

        $r1 := @parameter1: android.animation.ObjectAnimator;

        $f0 := @parameter2: float;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        r7 = new android.graphics.PathMeasure;

        specialinvoke r7.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r0, 0);

        f1 = 0.0F;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label1:
        $f2 = virtualinvoke r7.<android.graphics.PathMeasure: float getLength()>();

        f1 = f1 + $f2;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $z0 = virtualinvoke r7.<android.graphics.PathMeasure: boolean nextContour()>();

        if $z0 != 0 goto label1;

        r7 = new android.graphics.PathMeasure;

        specialinvoke r7.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r0, 0);

        $f0 = f1 / $f0;

        $i0 = (int) $f0;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(100, $i0);

        r5 = newarray (float)[$i0];

        r6 = newarray (float)[$i0];

        r8 = newarray (float)[2];

        i1 = 0;

        $i2 = $i0 + -1;

        $f0 = (float) $i2;

        $f0 = f1 / $f0;

        f1 = 0.0F;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label4;

        virtualinvoke r7.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(f1, r8, null);

        virtualinvoke r7.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(f1, r8, null);

        $f2 = r8[0];

        r5[$i2] = $f2;

        $f2 = r8[1];

        r6[$i2] = $f2;

        f1 = f1 + $f0;

        $i3 = i1 + 1;

        $i4 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i3 >= $i4 goto label3;

        $i3 = i1 + 1;

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r9 = (java.lang.Float) $r10;

        $f2 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $b5 = f1 cmpl $f2;

        if $b5 <= 0 goto label3;

        $i3 = i1 + 1;

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r9 = (java.lang.Float) $r10;

        $f2 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        f1 = f1 - $f2;

        i1 = i1 + 1;

        virtualinvoke r7.<android.graphics.PathMeasure: boolean nextContour()>();

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        r11 = null;

        r12 = null;

        if $r2 == null goto label5;

        r11 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r2, r5);

     label5:
        if $r3 == null goto label6;

        r12 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r3, r6);

     label6:
        if r11 != null goto label7;

        $r13 = newarray (android.animation.PropertyValuesHolder)[1];

        $r13[0] = r12;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13);

        return;

     label7:
        if r12 != null goto label8;

        $r13 = newarray (android.animation.PropertyValuesHolder)[1];

        $r13[0] = r11;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13);

        return;

     label8:
        $r13 = newarray (android.animation.PropertyValuesHolder)[2];

        $r13[0] = r11;

        $r13[1] = r12;

        virtualinvoke $r1.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13);

        return;
    }
