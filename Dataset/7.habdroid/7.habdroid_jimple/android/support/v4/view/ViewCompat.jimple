android.support.v4.view.ViewCompat extends java.lang.Object
public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
public static final int ACCESSIBILITY_LIVE_REGION_NONE
public static final int ACCESSIBILITY_LIVE_REGION_POLITE
static final android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL
public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
public static final int LAYER_TYPE_HARDWARE
public static final int LAYER_TYPE_NONE
public static final int LAYER_TYPE_SOFTWARE
public static final int LAYOUT_DIRECTION_INHERIT
public static final int LAYOUT_DIRECTION_LOCALE
public static final int LAYOUT_DIRECTION_LTR
public static final int LAYOUT_DIRECTION_RTL
public static final int MEASURED_HEIGHT_STATE_SHIFT
public static final int MEASURED_SIZE_MASK
public static final int MEASURED_STATE_MASK
public static final int MEASURED_STATE_TOO_SMALL
public static final int OVER_SCROLL_ALWAYS
public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
public static final int OVER_SCROLL_NEVER
public static final int SCROLL_AXIS_HORIZONTAL
public static final int SCROLL_AXIS_NONE
public static final int SCROLL_AXIS_VERTICAL
public static final int SCROLL_INDICATOR_BOTTOM
public static final int SCROLL_INDICATOR_END
public static final int SCROLL_INDICATOR_LEFT
public static final int SCROLL_INDICATOR_RIGHT
public static final int SCROLL_INDICATOR_START
public static final int SCROLL_INDICATOR_TOP
private static final java.lang.String TAG
public static final int TYPE_NON_TOUCH
public static final int TYPE_TOUCH
    static void <clinit>()
    {
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatApi26Impl $r0;
        android.support.v4.view.ViewCompat$ViewCompatApi24Impl $r1;
        android.support.v4.view.ViewCompat$ViewCompatApi23Impl $r2;
        android.support.v4.view.ViewCompat$ViewCompatApi21Impl $r3;
        android.support.v4.view.ViewCompat$ViewCompatApi19Impl $r4;
        android.support.v4.view.ViewCompat$ViewCompatApi18Impl $r5;
        android.support.v4.view.ViewCompat$ViewCompatApi17Impl $r6;
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl $r7;
        android.support.v4.view.ViewCompat$ViewCompatApi15Impl $r8;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r9;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r0 = new android.support.v4.view.ViewCompat$ViewCompatApi26Impl;

        specialinvoke $r0.<android.support.v4.view.ViewCompat$ViewCompatApi26Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r0;

        return;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label2;

        $r1 = new android.support.v4.view.ViewCompat$ViewCompatApi24Impl;

        specialinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatApi24Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r1;

        return;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label3;

        $r2 = new android.support.v4.view.ViewCompat$ViewCompatApi23Impl;

        specialinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatApi23Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r2;

        return;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label4;

        $r3 = new android.support.v4.view.ViewCompat$ViewCompatApi21Impl;

        specialinvoke $r3.<android.support.v4.view.ViewCompat$ViewCompatApi21Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r3;

        return;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label5;

        $r4 = new android.support.v4.view.ViewCompat$ViewCompatApi19Impl;

        specialinvoke $r4.<android.support.v4.view.ViewCompat$ViewCompatApi19Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r4;

        return;

     label5:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label6;

        $r5 = new android.support.v4.view.ViewCompat$ViewCompatApi18Impl;

        specialinvoke $r5.<android.support.v4.view.ViewCompat$ViewCompatApi18Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r5;

        return;

     label6:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label7;

        $r6 = new android.support.v4.view.ViewCompat$ViewCompatApi17Impl;

        specialinvoke $r6.<android.support.v4.view.ViewCompat$ViewCompatApi17Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r6;

        return;

     label7:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label8;

        $r7 = new android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        specialinvoke $r7.<android.support.v4.view.ViewCompat$ViewCompatApi16Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r7;

        return;

     label8:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 15 goto label9;

        $r8 = new android.support.v4.view.ViewCompat$ViewCompatApi15Impl;

        specialinvoke $r8.<android.support.v4.view.ViewCompat$ViewCompatApi15Impl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r8;

        return;

     label9:
        $r9 = new android.support.v4.view.ViewCompat$ViewCompatBaseImpl;

        specialinvoke $r9.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void <init>()>();

        <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL> = $r9;

        return;
    }
    protected void <init>()
    {
        android.support.v4.view.ViewCompat r0;

        r0 := @this: android.support.v4.view.ViewCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void addKeyboardNavigationClusters(android.view.View, java.util.Collection, int)
    {
        android.view.View $r0;
        java.util.Collection r1;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.Collection;

        $i0 := @parameter2: int;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>($r0, r1, $i0);

        return;
    }
    public static android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r0);

        return $r1;
    }
    public static boolean canScrollHorizontally(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.View: boolean canScrollHorizontally(int)>($i0);

        return $z0;
    }
    public static boolean canScrollVertically(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.view.View: boolean canScrollVertically(int)>($i0);

        return $z0;
    }
    public static void cancelDragAndDrop(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void cancelDragAndDrop(android.view.View)>($r0);

        return;
    }
    public static int combineMeasuredStates(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i0, $i1);

        return $i0;
    }
    public static android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat)
    {
        android.view.View $r0;
        android.support.v4.view.WindowInsetsCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)>($r0, $r1);

        return $r1;
    }
    public static void dispatchFinishTemporaryDetach(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void dispatchFinishTemporaryDetach(android.view.View)>($r0);

        return;
    }
    public static boolean dispatchNestedFling(android.view.View, float, float, boolean)
    {
        android.view.View $r0;
        float $f0, $f1;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedFling(android.view.View,float,float,boolean)>($r0, $f0, $f1, $z0);

        return $z0;
    }
    public static boolean dispatchNestedPreFling(android.view.View, float, float)
    {
        android.view.View $r0;
        float $f0, $f1;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedPreFling(android.view.View,float,float)>($r0, $f0, $f1);

        return $z0;
    }
    public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[])
    {
        android.view.View $r0;
        int $i0, $i1;
        int[] $r1, $r2;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r3;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $r2 := @parameter4: int[];

        $r3 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r3.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>($r0, $i0, $i1, $r1, $r2);

        return $z0;
    }
    public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[], int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r2;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild2 $r3;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r4;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $r2 := @parameter4: int[];

        $i2 := @parameter5: int;

        $z0 = $r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r3 = (android.support.v4.view.NestedScrollingChild2) $r0;

        $z0 = interfaceinvoke $r3.<android.support.v4.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>($i0, $i1, $r1, $r2, $i2);

        return $z0;

     label1:
        if $i2 != 0 goto label2;

        $r4 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r4.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>($r0, $i0, $i1, $r1, $r2);

        return $z0;

     label2:
        return 0;
    }
    public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[])
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 := @parameter5: int[];

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>($r0, $i0, $i1, $i2, $i3, $r1);

        return $z0;
    }
    public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[], int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild2 $r2;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r3;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 := @parameter5: int[];

        $i4 := @parameter6: int;

        $z0 = $r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.NestedScrollingChild2) $r0;

        $z0 = interfaceinvoke $r2.<android.support.v4.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)>($i0, $i1, $i2, $i3, $r1, $i4);

        return $z0;

     label1:
        if $i4 != 0 goto label2;

        $r3 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r3.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>($r0, $i0, $i1, $i2, $i3, $r1);

        return $z0;

     label2:
        return 0;
    }
    public static void dispatchStartTemporaryDetach(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void dispatchStartTemporaryDetach(android.view.View)>($r0);

        return;
    }
    public static int getAccessibilityLiveRegion(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getAccessibilityLiveRegion(android.view.View)>($r0);

        return $i0;
    }
    public static android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.accessibility.AccessibilityNodeProviderCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>($r0);

        return $r1;
    }
    public static float getAlpha(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getAlpha()>();

        return $f0;
    }
    public static android.content.res.ColorStateList getBackgroundTintList(android.view.View)
    {
        android.view.View $r0;
        android.content.res.ColorStateList $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>($r0);

        return $r1;
    }
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    {
        android.view.View $r0;
        android.graphics.PorterDuff$Mode $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)>($r0);

        return $r1;
    }
    public static android.graphics.Rect getClipBounds(android.view.View)
    {
        android.view.View $r0;
        android.graphics.Rect $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.graphics.Rect getClipBounds(android.view.View)>($r0);

        return $r1;
    }
    public static android.view.Display getDisplay(android.view.View)
    {
        android.view.View $r0;
        android.view.Display $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.view.Display getDisplay(android.view.View)>($r0);

        return $r1;
    }
    public static float getElevation(android.view.View)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $f0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: float getElevation(android.view.View)>($r0);

        return $f0;
    }
    public static boolean getFitsSystemWindows(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean getFitsSystemWindows(android.view.View)>($r0);

        return $z0;
    }
    public static int getImportantForAccessibility(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getImportantForAccessibility(android.view.View)>($r0);

        return $i0;
    }
    public static int getLabelFor(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getLabelFor(android.view.View)>($r0);

        return $i0;
    }
    public static int getLayerType(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getLayerType()>();

        return $i0;
    }
    public static int getLayoutDirection(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getLayoutDirection(android.view.View)>($r0);

        return $i0;
    }
    public static android.graphics.Matrix getMatrix(android.view.View)
    {
        android.view.View $r0;
        android.graphics.Matrix $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        return $r1;
    }
    public static int getMeasuredHeightAndState(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getMeasuredHeightAndState()>();

        return $i0;
    }
    public static int getMeasuredState(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getMeasuredState()>();

        return $i0;
    }
    public static int getMeasuredWidthAndState(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getMeasuredWidthAndState()>();

        return $i0;
    }
    public static int getMinimumHeight(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getMinimumHeight(android.view.View)>($r0);

        return $i0;
    }
    public static int getMinimumWidth(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getMinimumWidth(android.view.View)>($r0);

        return $i0;
    }
    public static int getNextClusterForwardId(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getNextClusterForwardId(android.view.View)>($r0);

        return $i0;
    }
    public static int getOverScrollMode(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getOverScrollMode()>();

        return $i0;
    }
    public static int getPaddingEnd(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getPaddingEnd(android.view.View)>($r0);

        return $i0;
    }
    public static int getPaddingStart(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getPaddingStart(android.view.View)>($r0);

        return $i0;
    }
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    {
        android.view.View $r0;
        android.view.ViewParent $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.view.ViewParent getParentForAccessibility(android.view.View)>($r0);

        return $r1;
    }
    public static float getPivotX(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getPivotX()>();

        return $f0;
    }
    public static float getPivotY(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getPivotY()>();

        return $f0;
    }
    public static float getRotation(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getRotation()>();

        return $f0;
    }
    public static float getRotationX(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getRotationX()>();

        return $f0;
    }
    public static float getRotationY(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getRotationY()>();

        return $f0;
    }
    public static float getScaleX(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getScaleX()>();

        return $f0;
    }
    public static float getScaleY(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getScaleY()>();

        return $f0;
    }
    public static int getScrollIndicators(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getScrollIndicators(android.view.View)>($r0);

        return $i0;
    }
    public static java.lang.String getTransitionName(android.view.View)
    {
        android.view.View $r0;
        java.lang.String $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: java.lang.String getTransitionName(android.view.View)>($r0);

        return $r1;
    }
    public static float getTranslationX(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getTranslationX()>();

        return $f0;
    }
    public static float getTranslationY(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getTranslationY()>();

        return $f0;
    }
    public static float getTranslationZ(android.view.View)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $f0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: float getTranslationZ(android.view.View)>($r0);

        return $f0;
    }
    public static int getWindowSystemUiVisibility(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: int getWindowSystemUiVisibility(android.view.View)>($r0);

        return $i0;
    }
    public static float getX(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getX()>();

        return $f0;
    }
    public static float getY(android.view.View)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 = virtualinvoke $r0.<android.view.View: float getY()>();

        return $f0;
    }
    public static float getZ(android.view.View)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $f0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: float getZ(android.view.View)>($r0);

        return $f0;
    }
    public static boolean hasAccessibilityDelegate(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasAccessibilityDelegate(android.view.View)>($r0);

        return $z0;
    }
    public static boolean hasExplicitFocusable(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasExplicitFocusable(android.view.View)>($r0);

        return $z0;
    }
    public static boolean hasNestedScrollingParent(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasNestedScrollingParent(android.view.View)>($r0);

        return $z0;
    }
    public static boolean hasNestedScrollingParent(android.view.View, int)
    {
        int $i0;
        boolean $z0;
        android.view.View r0;
        android.support.v4.view.NestedScrollingChild2 r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label2;

        r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        interfaceinvoke r1.<android.support.v4.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)>($i0);

     label1:
        return 0;

     label2:
        if $i0 != 0 goto label1;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasNestedScrollingParent(android.view.View)>(r0);

        return $z0;
    }
    public static boolean hasOnClickListeners(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasOnClickListeners(android.view.View)>($r0);

        return $z0;
    }
    public static boolean hasOverlappingRendering(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasOverlappingRendering(android.view.View)>($r0);

        return $z0;
    }
    public static boolean hasTransientState(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean hasTransientState(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isAttachedToWindow(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isAttachedToWindow(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isFocusedByDefault(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isFocusedByDefault(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isImportantForAccessibility(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isImportantForAccessibility(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isInLayout(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isInLayout(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isKeyboardNavigationCluster(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isKeyboardNavigationCluster(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isLaidOut(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isLaidOut(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isLayoutDirectionResolved(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isLayoutDirectionResolved(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isNestedScrollingEnabled(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isNestedScrollingEnabled(android.view.View)>($r0);

        return $z0;
    }
    public static boolean isOpaque(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isOpaque()>();

        return $z0;
    }
    public static boolean isPaddingRelative(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean isPaddingRelative(android.view.View)>($r0);

        return $z0;
    }
    public static void jumpDrawablesToCurrentState(android.view.View)
    {
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        return;
    }
    public static android.view.View keyboardNavigationClusterSearch(android.view.View, android.view.View, int)
    {
        android.view.View $r0, $r1;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>($r0, $r1, $i0);

        return $r0;
    }
    public static void offsetLeftAndRight(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void offsetLeftAndRight(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void offsetTopAndBottom(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void offsetTopAndBottom(android.view.View,int)>($r0, $i0);

        return;
    }
    public static android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat)
    {
        android.view.View $r0;
        android.support.v4.view.WindowInsetsCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)>($r0, $r1);

        return $r1;
    }
    public static void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View $r0;
        android.view.accessibility.AccessibilityEvent $r1;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke $r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        return;
    }
    public static void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.view.View $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r0, $r1);

        return;
    }
    public static void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View $r0;
        android.view.accessibility.AccessibilityEvent $r1;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke $r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        return;
    }
    public static boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.view.View $r0;
        int $i0;
        android.os.Bundle $r1;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>($r0, $i0, $r1);

        return $z0;
    }
    public static void postInvalidateOnAnimation(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void postInvalidateOnAnimation(android.view.View)>($r0);

        return;
    }
    public static void postInvalidateOnAnimation(android.view.View, int, int, int, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)>($r0, $i0, $i1, $i2, $i3);

        return;
    }
    public static void postOnAnimation(android.view.View, java.lang.Runnable)
    {
        android.view.View $r0;
        java.lang.Runnable $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.Runnable;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void postOnAnimation(android.view.View,java.lang.Runnable)>($r0, $r1);

        return;
    }
    public static void postOnAnimationDelayed(android.view.View, java.lang.Runnable, long)
    {
        android.view.View $r0;
        java.lang.Runnable $r1;
        long $l0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)>($r0, $r1, $l0);

        return;
    }
    public static void requestApplyInsets(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void requestApplyInsets(android.view.View)>($r0);

        return;
    }
    public static int resolveSizeAndState(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i0, $i1, $i2);

        return $i0;
    }
    public static boolean restoreDefaultFocus(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean restoreDefaultFocus(android.view.View)>($r0);

        return $z0;
    }
    public static void setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)
    {
        android.view.View $r0;
        android.support.v4.view.AccessibilityDelegateCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.AccessibilityDelegateCompat;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r1);

        return;
    }
    public static void setAccessibilityLiveRegion(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setAccessibilityLiveRegion(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setActivated(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.view.View: void setActivated(boolean)>($z0);

        return;
    }
    public static void setAlpha(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setAlpha(float)>($f0);

        return;
    }
    public static void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.view.View $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r0, $r1);

        return;
    }
    public static void setBackgroundTintList(android.view.View, android.content.res.ColorStateList)
    {
        android.view.View $r0;
        android.content.res.ColorStateList $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>($r0, $r1);

        return;
    }
    public static void setBackgroundTintMode(android.view.View, android.graphics.PorterDuff$Mode)
    {
        android.view.View $r0;
        android.graphics.PorterDuff$Mode $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>($r0, $r1);

        return;
    }
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)>($r0, $z0);

        return;
    }
    public static void setClipBounds(android.view.View, android.graphics.Rect)
    {
        android.view.View $r0;
        android.graphics.Rect $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setClipBounds(android.view.View,android.graphics.Rect)>($r0, $r1);

        return;
    }
    public static void setElevation(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setElevation(android.view.View,float)>($r0, $f0);

        return;
    }
    public static void setFitsSystemWindows(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.view.View: void setFitsSystemWindows(boolean)>($z0);

        return;
    }
    public static void setFocusedByDefault(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setFocusedByDefault(android.view.View,boolean)>($r0, $z0);

        return;
    }
    public static void setHasTransientState(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setHasTransientState(android.view.View,boolean)>($r0, $z0);

        return;
    }
    public static void setImportantForAccessibility(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setImportantForAccessibility(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setKeyboardNavigationCluster(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setKeyboardNavigationCluster(android.view.View,boolean)>($r0, $z0);

        return;
    }
    public static void setLabelFor(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setLabelFor(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setLayerPaint(android.view.View, android.graphics.Paint)
    {
        android.view.View $r0;
        android.graphics.Paint $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Paint;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setLayerPaint(android.view.View,android.graphics.Paint)>($r0, $r1);

        return;
    }
    public static void setLayerType(android.view.View, int, android.graphics.Paint)
    {
        android.view.View $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Paint;

        virtualinvoke $r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>($i0, $r1);

        return;
    }
    public static void setLayoutDirection(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setLayoutDirection(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setNestedScrollingEnabled(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setNestedScrollingEnabled(android.view.View,boolean)>($r0, $z0);

        return;
    }
    public static void setNextClusterForwardId(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setNextClusterForwardId(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setOnApplyWindowInsetsListener(android.view.View, android.support.v4.view.OnApplyWindowInsetsListener)
    {
        android.view.View $r0;
        android.support.v4.view.OnApplyWindowInsetsListener $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.OnApplyWindowInsetsListener;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>($r0, $r1);

        return;
    }
    public static void setOverScrollMode(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.view.View: void setOverScrollMode(int)>($i0);

        return;
    }
    public static void setPaddingRelative(android.view.View, int, int, int, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setPaddingRelative(android.view.View,int,int,int,int)>($r0, $i0, $i1, $i2, $i3);

        return;
    }
    public static void setPivotX(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setPivotX(float)>($f0);

        return;
    }
    public static void setPivotY(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setPivotY(float)>($f0);

        return;
    }
    public static void setPointerIcon(android.view.View, android.support.v4.view.PointerIconCompat)
    {
        android.view.View $r0;
        android.support.v4.view.PointerIconCompat $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.PointerIconCompat;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat)>($r0, $r1);

        return;
    }
    public static void setRotation(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setRotation(float)>($f0);

        return;
    }
    public static void setRotationX(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setRotationX(float)>($f0);

        return;
    }
    public static void setRotationY(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setRotationY(float)>($f0);

        return;
    }
    public static void setSaveFromParentEnabled(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        virtualinvoke $r0.<android.view.View: void setSaveFromParentEnabled(boolean)>($z0);

        return;
    }
    public static void setScaleX(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setScaleX(float)>($f0);

        return;
    }
    public static void setScaleY(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setScaleY(float)>($f0);

        return;
    }
    public static void setScrollIndicators(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setScrollIndicators(android.view.View,int)>($r0, $i0);

        return;
    }
    public static void setScrollIndicators(android.view.View, int, int)
    {
        android.view.View $r0;
        int $i0, $i1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setScrollIndicators(android.view.View,int,int)>($r0, $i0, $i1);

        return;
    }
    public static void setTooltipText(android.view.View, java.lang.CharSequence)
    {
        android.view.View $r0;
        java.lang.CharSequence $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.CharSequence;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setTooltipText(android.view.View,java.lang.CharSequence)>($r0, $r1);

        return;
    }
    public static void setTransitionName(android.view.View, java.lang.String)
    {
        android.view.View $r0;
        java.lang.String $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: java.lang.String;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setTransitionName(android.view.View,java.lang.String)>($r0, $r1);

        return;
    }
    public static void setTranslationX(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setTranslationX(float)>($f0);

        return;
    }
    public static void setTranslationY(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setTranslationY(float)>($f0);

        return;
    }
    public static void setTranslationZ(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setTranslationZ(android.view.View,float)>($r0, $f0);

        return;
    }
    public static void setX(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setX(float)>($f0);

        return;
    }
    public static void setY(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        virtualinvoke $r0.<android.view.View: void setY(float)>($f0);

        return;
    }
    public static void setZ(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void setZ(android.view.View,float)>($r0, $f0);

        return;
    }
    public static boolean startDragAndDrop(android.view.View, android.content.ClipData, android.view.View$DragShadowBuilder, java.lang.Object, int)
    {
        android.view.View $r0;
        android.content.ClipData $r1;
        android.view.View$DragShadowBuilder $r2;
        java.lang.Object $r3;
        int $i0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r4;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.content.ClipData;

        $r2 := @parameter2: android.view.View$DragShadowBuilder;

        $r3 := @parameter3: java.lang.Object;

        $i0 := @parameter4: int;

        $r4 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r4.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>($r0, $r1, $r2, $r3, $i0);

        return $z0;
    }
    public static boolean startNestedScroll(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        boolean $z0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean startNestedScroll(android.view.View,int)>($r0, $i0);

        return $z0;
    }
    public static boolean startNestedScroll(android.view.View, int, int)
    {
        int $i0, $i1;
        android.view.View r0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild2 r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        $z0 = interfaceinvoke r1.<android.support.v4.view.NestedScrollingChild2: boolean startNestedScroll(int,int)>($i0, $i1);

        return $z0;

     label1:
        if $i1 != 0 goto label2;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: boolean startNestedScroll(android.view.View,int)>(r0, $i0);

        return $z0;

     label2:
        return 0;
    }
    public static void stopNestedScroll(android.view.View)
    {
        android.view.View $r0;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r1.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void stopNestedScroll(android.view.View)>($r0);

        return;
    }
    public static void stopNestedScroll(android.view.View, int)
    {
        int $i0;
        android.view.View r0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild2 r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = r0 instanceof android.support.v4.view.NestedScrollingChild2;

        if $z0 == 0 goto label1;

        r1 = (android.support.v4.view.NestedScrollingChild2) r0;

        interfaceinvoke r1.<android.support.v4.view.NestedScrollingChild2: void stopNestedScroll(int)>($i0);

        return;

     label1:
        if $i0 != 0 goto label2;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void stopNestedScroll(android.view.View)>(r0);

     label2:
        return;
    }
    public static void updateDragShadow(android.view.View, android.view.View$DragShadowBuilder)
    {
        android.view.View $r0;
        android.view.View$DragShadowBuilder $r1;
        android.support.v4.view.ViewCompat$ViewCompatBaseImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View$DragShadowBuilder;

        $r2 = <android.support.v4.view.ViewCompat: android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL>;

        virtualinvoke $r2.<android.support.v4.view.ViewCompat$ViewCompatBaseImpl: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>($r0, $r1);

        return;
    }
