android.support.v4.view.ViewCompat$ViewCompatApi16Impl extends android.support.v4.view.ViewCompat$ViewCompatApi15Impl
    void <init>()
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        specialinvoke r0.<android.support.v4.view.ViewCompat$ViewCompatApi15Impl: void <init>()>();

        return;
    }
    public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityNodeProvider $r2;
        android.support.v4.view.accessibility.AccessibilityNodeProviderCompat $r3;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if $r2 == null goto label1;

        $r3 = new android.support.v4.view.accessibility.AccessibilityNodeProviderCompat;

        specialinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: void <init>(java.lang.Object)>($r2);

        return $r3;

     label1:
        return null;
    }
    public boolean getFitsSystemWindows(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r1.<android.view.View: boolean getFitsSystemWindows()>();

        return $z0;
    }
    public int getImportantForAccessibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getImportantForAccessibility()>();

        return $i0;
    }
    public int getMinimumHeight(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getMinimumHeight()>();

        return $i0;
    }
    public int getMinimumWidth(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getMinimumWidth()>();

        return $i0;
    }
    public android.view.ViewParent getParentForAccessibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        android.view.ViewParent $r2;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        return $r2;
    }
    public boolean hasOverlappingRendering(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasOverlappingRendering()>();

        return $z0;
    }
    public boolean hasTransientState(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r1.<android.view.View: boolean hasTransientState()>();

        return $z0;
    }
    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0;
        android.os.Bundle $r2;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke $r1.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>($i0, $r2);

        return $z0;
    }
    public void postInvalidateOnAnimation(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r1.<android.view.View: void postInvalidateOnAnimation()>();

        return;
    }
    public void postInvalidateOnAnimation(android.view.View, int, int, int, int)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r1.<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public void postOnAnimation(android.view.View, java.lang.Runnable)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        java.lang.Runnable $r2;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.Runnable;

        virtualinvoke $r1.<android.view.View: void postOnAnimation(java.lang.Runnable)>($r2);

        return;
    }
    public void postOnAnimationDelayed(android.view.View, java.lang.Runnable, long)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        java.lang.Runnable $r2;
        long $l0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        virtualinvoke $r1.<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>($r2, $l0);

        return;
    }
    public void requestApplyInsets(android.view.View)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r1.<android.view.View: void requestFitSystemWindows()>();

        return;
    }
    public void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        virtualinvoke $r1.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r2);

        return;
    }
    public void setHasTransientState(android.view.View, boolean)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        virtualinvoke $r1.<android.view.View: void setHasTransientState(boolean)>($z0);

        return;
    }
    public void setImportantForAccessibility(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$ViewCompatApi16Impl r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v4.view.ViewCompat$ViewCompatApi16Impl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        if $i0 != 4 goto label1;

        $i0 = 2;

     label1:
        virtualinvoke $r1.<android.view.View: void setImportantForAccessibility(int)>($i0);

        return;
    }
