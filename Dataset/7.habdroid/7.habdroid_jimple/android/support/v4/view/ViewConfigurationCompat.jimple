android.support.v4.view.ViewConfigurationCompat extends java.lang.Object
private static final java.lang.String TAG
private static java.lang.reflect.Method sGetScaledScrollFactorMethod
    static void <clinit>()
    {
        java.lang.Exception r0;
        java.lang.reflect.Method $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 25 goto label4;

        $r2 = class "Landroid/view/ViewConfiguration;";

     label1:
        $r3 = newarray (java.lang.Class)[0];

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getScaledScrollFactor", $r3);

     label2:
        <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod> = $r1;

        return;

     label3:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void <init>()
    {
        android.support.v4.view.ViewConfigurationCompat r0;

        r0 := @this: android.support.v4.view.ViewConfigurationCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static float getLegacyScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $r0;
        android.content.Context $r1;
        java.lang.Exception r2;
        android.util.TypedValue r3;
        int $i0;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        float $f0;
        android.content.res.Resources$Theme $r8;
        boolean $z0;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;

        $r0 := @parameter0: android.view.ViewConfiguration;

        $r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 25 goto label4;

        $r4 = <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>;

        if $r4 == null goto label4;

        $r4 = <android.support.v4.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod>;

     label1:
        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label2:
        $f0 = (float) $i0;

        return $f0;

     label3:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewConfigCompat", "Could not find method getScaledScrollFactor() on ViewConfiguration");

     label4:
        r3 = new android.util.TypedValue;

        specialinvoke r3.<android.util.TypedValue: void <init>()>();

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, r3, 1);

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r3.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r10);

        return $f0;

     label5:
        return 0.0F;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static float getScaledHorizontalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $r0;
        android.content.Context $r1;
        int $i0;
        float $f0;

        $r0 := @parameter0: android.view.ViewConfiguration;

        $r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $f0 = virtualinvoke $r0.<android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>();

        return $f0;

     label1:
        $f0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>($r0, $r1);

        return $f0;
    }
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration $r0;
        int $i0;

        $r0 := @parameter0: android.view.ViewConfiguration;

        $i0 = virtualinvoke $r0.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        return $i0;
    }
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration, android.content.Context)
    {
        android.view.ViewConfiguration $r0;
        android.content.Context $r1;
        int $i0;
        float $f0;

        $r0 := @parameter0: android.view.ViewConfiguration;

        $r1 := @parameter1: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $f0 = virtualinvoke $r0.<android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>();

        return $f0;

     label1:
        $f0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>($r0, $r1);

        return $f0;
    }
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    {
        android.view.ViewConfiguration $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.ViewConfiguration;

        $z0 = virtualinvoke $r0.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        return $z0;
    }
