android.support.v4.provider.SelfDestructiveThread$2 extends java.lang.Object implements java.lang.Runnable
final android.support.v4.provider.SelfDestructiveThread this$0
final java.util.concurrent.Callable val$callable
final android.os.Handler val$callingHandler
final android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply
    void <init>(android.support.v4.provider.SelfDestructiveThread, java.util.concurrent.Callable, android.os.Handler, android.support.v4.provider.SelfDestructiveThread$ReplyCallback)
    {
        android.support.v4.provider.SelfDestructiveThread$2 r0;
        android.support.v4.provider.SelfDestructiveThread $r1;
        java.util.concurrent.Callable $r2;
        android.os.Handler $r3;
        android.support.v4.provider.SelfDestructiveThread$ReplyCallback $r4;

        r0 := @this: android.support.v4.provider.SelfDestructiveThread$2;

        $r1 := @parameter0: android.support.v4.provider.SelfDestructiveThread;

        $r2 := @parameter1: java.util.concurrent.Callable;

        $r3 := @parameter2: android.os.Handler;

        $r4 := @parameter3: android.support.v4.provider.SelfDestructiveThread$ReplyCallback;

        r0.<android.support.v4.provider.SelfDestructiveThread$2: android.support.v4.provider.SelfDestructiveThread this$0> = $r1;

        r0.<android.support.v4.provider.SelfDestructiveThread$2: java.util.concurrent.Callable val$callable> = $r2;

        r0.<android.support.v4.provider.SelfDestructiveThread$2: android.os.Handler val$callingHandler> = $r3;

        r0.<android.support.v4.provider.SelfDestructiveThread$2: android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        android.support.v4.provider.SelfDestructiveThread$2 r0;
        java.lang.Exception r1;
        android.support.v4.provider.SelfDestructiveThread$2$1 $r2;
        java.lang.Object $r3;
        java.util.concurrent.Callable $r4;
        android.os.Handler $r5;

        r0 := @this: android.support.v4.provider.SelfDestructiveThread$2;

     label1:
        $r4 = r0.<android.support.v4.provider.SelfDestructiveThread$2: java.util.concurrent.Callable val$callable>;

        $r3 = interfaceinvoke $r4.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        $r5 = r0.<android.support.v4.provider.SelfDestructiveThread$2: android.os.Handler val$callingHandler>;

        $r2 = new android.support.v4.provider.SelfDestructiveThread$2$1;

        specialinvoke $r2.<android.support.v4.provider.SelfDestructiveThread$2$1: void <init>(android.support.v4.provider.SelfDestructiveThread$2,java.lang.Object)>(r0, $r3);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;

     label3:
        r1 := @caughtexception;

        $r3 = null;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
