android.support.v4.widget.ExploreByTouchHelper extends android.support.v4.view.AccessibilityDelegateCompat
private static final java.lang.String DEFAULT_CLASS_NAME
public static final int HOST_ID
public static final int INVALID_ID
private static final android.graphics.Rect INVALID_PARENT_BOUNDS
private static final android.support.v4.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
private static final android.support.v4.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
private int mAccessibilityFocusedVirtualViewId
private final android.view.View mHost
private int mHoveredVirtualViewId
private int mKeyboardFocusedVirtualViewId
private final android.view.accessibility.AccessibilityManager mManager
private android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
private final int[] mTempGlobalRect
private final android.graphics.Rect mTempParentRect
private final android.graphics.Rect mTempScreenRect
private final android.graphics.Rect mTempVisibleRect
    static void <clinit>()
    {
        android.graphics.Rect $r0;
        android.support.v4.widget.ExploreByTouchHelper$1 $r1;
        android.support.v4.widget.ExploreByTouchHelper$2 $r2;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>(int,int,int,int)>(2147483647, 2147483647, -2147483648, -2147483648);

        <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS> = $r0;

        $r1 = new android.support.v4.widget.ExploreByTouchHelper$1;

        specialinvoke $r1.<android.support.v4.widget.ExploreByTouchHelper$1: void <init>()>();

        <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER> = $r1;

        $r2 = new android.support.v4.widget.ExploreByTouchHelper$2;

        specialinvoke $r2.<android.support.v4.widget.ExploreByTouchHelper$2: void <init>()>();

        <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER> = $r2;

        return;
    }
    public void <init>(android.view.View)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        int[] $r3;
        java.lang.IllegalArgumentException $r4;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.view.accessibility.AccessibilityManager $r7;
        int $i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect> = $r2;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect> = $r2;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect> = $r2;

        $r3 = newarray (int)[2];

        r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect> = $r3;

        r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = -2147483648;

        r0.<android.support.v4.widget.ExploreByTouchHelper: int mHoveredVirtualViewId> = -2147483648;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View may not be null");

        throw $r4;

     label1:
        r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost> = $r1;

        $r5 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r7 = (android.view.accessibility.AccessibilityManager) $r6;

        r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager> = $r7;

        virtualinvoke $r1.<android.view.View: void setFocusable(boolean)>(1);

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r1);

        if $i0 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r1, 1);

     label2:
        return;
    }
    static int access$000(android.support.v4.widget.ExploreByTouchHelper)
    {
        android.support.v4.widget.ExploreByTouchHelper $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.ExploreByTouchHelper;

        i0 = $r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        return i0;
    }
    static int access$100(android.support.v4.widget.ExploreByTouchHelper)
    {
        android.support.v4.widget.ExploreByTouchHelper $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.ExploreByTouchHelper;

        i0 = $r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        return i0;
    }
    private boolean clearAccessibilityFocus(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 != $i0 goto label1;

        r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>($i0, 65536);

        return 1;

     label1:
        return 0;
    }
    private boolean clickKeyboardFocusedVirtualView()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i0 == -2147483648 goto label1;

        $i0 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        $z0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>($i0, 16, null);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private android.view.accessibility.AccessibilityEvent createEvent(int, int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        lookupswitch($i0)
        {
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>($i0, $i1);

        return $r1;

     label2:
        $r1 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForHost(int)>($i1);

        return $r1;
    }
    private android.view.accessibility.AccessibilityEvent createEventForChild(int, int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityEvent $r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r2;
        java.util.List $r3;
        java.lang.CharSequence $r4;
        boolean $z0;
        java.lang.RuntimeException $r5;
        android.view.View $r6;
        android.content.Context $r7;
        java.lang.String $r8;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>($i1);

        $r2 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>($i0);

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>($i0, $r1);

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>();

        if $r4 != null goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateEventForVirtualViewId()");

        throw $r5;

     label1:
        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        $r6 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)>($r1, $r6, $i0);

        $r6 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r7 = virtualinvoke $r6.<android.view.View: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r8);

        return $r1;
    }
    private android.view.accessibility.AccessibilityEvent createEventForHost(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>($i0);

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r1.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r2);

        return $r2;
    }
    private android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1, $i2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r10;
        android.graphics.Rect $r2, $r6;
        android.view.View $r3;
        java.lang.CharSequence $r4;
        java.lang.RuntimeException $r5;
        boolean $z0, $z1;
        android.content.Context $r7;
        java.lang.String $r8;
        int[] $r9;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>(1);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>(1);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>("android.view.View");

        $r2 = <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r2);

        $r2 = <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r2);

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r3);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($i0, $r1);

        $r4 = virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        if $r4 != null goto label01;

        $r4 = virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        if $r4 != null goto label01;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateNodeForVirtualViewId()");

        throw $r5;

     label01:
        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r2);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $r6 = <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must set parent bounds in populateNodeForVirtualViewId()");

        throw $r5;

     label02:
        $i1 = virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        $i2 = $i1 & 64;

        if $i2 == 0 goto label03;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r5;

     label03:
        $i1 = $i1 & 128;

        if $i1 == 0 goto label04;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_CLEAR_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r5;

     label04:
        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r7 = virtualinvoke $r3.<android.view.View: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r8);

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>($r3, $i0);

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 != $i0 goto label09;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(1);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(128);

     label05:
        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 != $i0 goto label10;

        $z0 = 1;

     label06:
        if $z0 == 0 goto label11;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(2);

     label07:
        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z0);

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        virtualinvoke $r3.<android.view.View: void getLocationOnScreen(int[])>($r9);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r2);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r6 = <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label14;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r2);

        $i0 = $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        if $i0 == -1 goto label13;

        $r10 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        $i0 = $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

     label08:
        if $i0 == -1 goto label12;

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r10.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)>($r3, -1);

        $r2 = <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke $r10.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r2);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($i0, $r10);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        virtualinvoke $r10.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r2);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r6 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $r6 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $i1 = $r6.<android.graphics.Rect: int top>;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $i0 = $r10.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        goto label08;

     label09:
        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(0);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(64);

        goto label05;

     label10:
        $z0 = 0;

        goto label06;

     label11:
        $z1 = virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        if $z1 == 0 goto label07;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(1);

        goto label07;

     label12:
        virtualinvoke $r10.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

     label13:
        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i0 = $r9[0];

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i1 = virtualinvoke $r3.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i1 = $r9[1];

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i2 = virtualinvoke $r3.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

     label14:
        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label15;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i0 = $r9[0];

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i1 = virtualinvoke $r3.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i1 = $r9[1];

        $r3 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i2 = virtualinvoke $r3.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r6 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r6);

        if $z0 == 0 goto label15;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r2);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean isVisibleToUser(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label15;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>(1);

     label15:
        return $r1;
    }
    private android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        java.util.ArrayList r1;
        android.view.View $r2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r3;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r3 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)>($r2);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <android.support.v4.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r2, $r3);

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>(r1);

        $i0 = virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Views cannot have both real and virtual children");

        throw $r4;

     label1:
        $i0 = 0;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label2:
        if $i0 >= $i1 goto label3;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>($r2, $i2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r3;
    }
    private android.support.v4.util.SparseArrayCompat getAllNodes()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.support.v4.util.SparseArrayCompat r1;
        java.util.ArrayList r2;
        int i0, $i1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r3;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>(r2);

        r1 = new android.support.v4.util.SparseArrayCompat;

        specialinvoke r1.<android.support.v4.util.SparseArrayCompat: void <init>()>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r3 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>(i0);

        virtualinvoke r1.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i0, $r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private void getBoundsInParent(int, android.graphics.Rect)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        android.graphics.Rect $r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>($i0);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r1);

        return;
    }
    private static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View, int, android.graphics.Rect)
    {
        android.view.View $r0;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $i1 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        lookupswitch($i0)
        {
            case 17: goto label2;
            case 33: goto label3;
            case 66: goto label4;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i1, 0, $i1, $i2);

        return $r1;

     label3:
        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, $i2, $i1, $i2);

        return $r1;

     label4:
        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(-1, 0, -1, $i2);

        return $r1;

     label5:
        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, -1, $i1, -1);

        return $r1;
    }
    private boolean isVisibleToUser(android.graphics.Rect)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.graphics.Rect $r1;
        boolean $z0;
        android.view.View $r2;
        int $i0;
        android.view.ViewParent $r3;
        float $f0;
        byte $b1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.graphics.Rect;

        if $r1 == null goto label4;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i0 = virtualinvoke $r2.<android.view.View: int getWindowVisibility()>();

        if $i0 != 0 goto label4;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        $z0 = $r3 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r2 = (android.view.View) $r3;

        $f0 = virtualinvoke $r2.<android.view.View: float getAlpha()>();

        $b1 = $f0 cmpg 0.0F;

        if $b1 <= 0 goto label4;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label4;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        goto label2;

     label3:
        if $r3 == null goto label4;

        return 1;

     label4:
        return 0;
    }
    private static int keyToDirection(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 19: goto label3;
            case 20: goto label1;
            case 21: goto label2;
            case 22: goto label4;
            default: goto label1;
        };

     label1:
        return 130;

     label2:
        return 17;

     label3:
        return 33;

     label4:
        return 66;
    }
    private boolean moveFocus(int, android.graphics.Rect)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, i1;
        android.graphics.Rect $r1, r4;
        android.support.v4.widget.FocusStrategy$CollectionAdapter $r2;
        android.support.v4.widget.FocusStrategy$BoundsAdapter $r3;
        android.support.v4.util.SparseArrayCompat $r5;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.Object $r8;
        android.view.View $r9;
        boolean z0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $r5 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.util.SparseArrayCompat getAllNodes()>();

        i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if i1 != -2147483648 goto label03;

        r6 = null;

     label01:
        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label04;
            case 17: goto label09;
            case 33: goto label09;
            case 66: goto label09;
            case 130: goto label09;
            default: goto label02;
        };

     label02:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD, FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r7;

     label03:
        $r8 = virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i1);

        r6 = (android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) $r8;

        goto label01;

     label04:
        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        i1 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r9);

        if i1 != 1 goto label08;

        z0 = 1;

     label05:
        $r2 = <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER>;

        $r3 = <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER>;

        $r8 = staticinvoke <android.support.v4.widget.FocusStrategy: java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,android.support.v4.widget.FocusStrategy$CollectionAdapter,android.support.v4.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)>($r5, $r2, $r3, r6, $i0, z0, 0);

        r6 = (android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) $r8;

     label06:
        if r6 != null goto label13;

        $i0 = -2147483648;

     label07:
        z0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>($i0);

        return z0;

     label08:
        z0 = 0;

        goto label05;

     label09:
        r4 = new android.graphics.Rect;

        specialinvoke r4.<android.graphics.Rect: void <init>()>();

        i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if i1 == -2147483648 goto label11;

        i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)>(i1, r4);

     label10:
        $r2 = <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER>;

        $r3 = <android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER>;

        $r8 = staticinvoke <android.support.v4.widget.FocusStrategy: java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,android.support.v4.widget.FocusStrategy$CollectionAdapter,android.support.v4.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)>($r5, $r2, $r3, r6, r4, $i0);

        r6 = (android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) $r8;

        goto label06;

     label11:
        if $r1 == null goto label12;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        goto label10;

     label12:
        $r9 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <android.support.v4.widget.ExploreByTouchHelper: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)>($r9, $i0, r4);

        goto label10;

     label13:
        $i0 = virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: int indexOfValue(java.lang.Object)>(r6);

        $i0 = virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: int keyAt(int)>($i0);

        goto label07;
    }
    private boolean performActionForChild(int, int, android.os.Bundle)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        lookupswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 64: goto label2;
            case 128: goto label3;
            default: goto label1;
        };

     label1:
        $z0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>($i0, $i1, $r1);

        return $z0;

     label2:
        $z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean requestAccessibilityFocus(int)>($i0);

        return $z0;

     label3:
        $z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>($i0);

        return $z0;

     label4:
        $z0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>($i0);

        return $z0;

     label5:
        $z0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>($i0);

        return $z0;
    }
    private boolean performActionForHost(int, android.os.Bundle)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        android.os.Bundle $r1;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>($r2, $i0, $r1);

        return $z0;
    }
    private boolean requestAccessibilityFocus(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityManager $r1;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 == $i0 goto label3;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label2;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>($i1);

     label2:
        r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = $i0;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r2.<android.view.View: void invalidate()>();

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>($i0, 32768);

        return 1;

     label3:
        return 0;
    }
    private void updateHoveredVirtualView(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, i1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>;

        if i1 != $i0 goto label1;

        return;

     label1:
        i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>;

        r0.<android.support.v4.widget.ExploreByTouchHelper: int mHoveredVirtualViewId> = $i0;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>($i0, 128);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i1, 256);

        return;
    }
    public final boolean clearKeyboardFocusForVirtualView(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = -2147483648;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)>($i0, 0);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>($i0, 8);

        return 1;
    }
    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.MotionEvent $r1;
        boolean $z0, $z1;
        android.view.accessibility.AccessibilityManager $r2;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = 1;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z1 == 0 goto label7;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 7: goto label3;
            case 8: goto label2;
            case 9: goto label3;
            case 10: goto label6;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)>($f0, $f1);

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>($i0);

        if $i0 == -2147483648 goto label5;

     label4:
        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $i0 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i0 == -2147483648 goto label7;

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>(-2147483648);

        return 1;

     label7:
        return 0;
    }
    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.KeyEvent $r1;
        int i0, $i1, i2;
        boolean z0, $z1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.KeyEvent;

        z0 = 0;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 == 1 goto label7;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i1)
        {
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label4;
            case 61: goto label5;
            case 66: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z1 == 0 goto label7;

        $i1 = staticinvoke <android.support.v4.widget.ExploreByTouchHelper: int keyToDirection(int)>($i1);

        i0 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        i0 = i0 + 1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label8;

        $z1 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>($i1, null);

        if $z1 == 0 goto label8;

        z0 = 1;

        i2 = i2 + 1;

        goto label3;

     label4:
        z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if z0 == 0 goto label9;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label9;

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clickKeyboardFocusedVirtualView()>();

        return 1;

     label5:
        z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if z0 == 0 goto label6;

        z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(2, null);

        return z0;

     label6:
        z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if z0 == 0 goto label9;

        z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(1, null);

        return z0;

     label7:
        return 0;

     label8:
        return z0;

     label9:
        return 0;
    }
    public final int getAccessibilityFocusedVirtualViewId()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        i0 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        return i0;
    }
    public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.View $r1;
        android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider>;

        if $r2 != null goto label1;

        $r2 = new android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider;

        specialinvoke $r2.<android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider: void <init>(android.support.v4.widget.ExploreByTouchHelper)>(r0);

        r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider> = $r2;

     label1:
        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider>;

        return $r2;
    }
    public int getFocusedVirtualView()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 = virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()>();

        return $i0;
    }
    public final int getKeyboardFocusedVirtualViewId()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        i0 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        return i0;
    }
protected abstract int getVirtualViewAt(float, float) { 
// no body
} 
protected abstract void getVisibleVirtualViews(java.util.List) { 
// no body
} 
    public final void invalidateRoot()
    {
        android.support.v4.widget.ExploreByTouchHelper r0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>(-1, 1);

        return;
    }
    public final void invalidateVirtualView(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>($i0, 0);

        return;
    }
    public final void invalidateVirtualView(int, int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityManager $r1;
        boolean $z0;
        android.view.View $r2;
        android.view.ViewParent $r3;
        android.view.accessibility.AccessibilityEvent $r4;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == -2147483648 goto label1;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>($i0, 2048);

        staticinvoke <android.support.v4.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>($r4, $i1);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <android.support.v4.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>($r3, $r2, $r4);

     label1:
        return;
    }
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        if $i0 != -1 goto label1;

        $r1 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()>();

        return $r1;

     label1:
        $r1 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>($i0);

        return $r1;
    }
    public final void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        boolean $z0;
        int $i0, $i1;
        android.graphics.Rect $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label1;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>($i1);

     label1:
        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>($i0, $r1);

     label2:
        return;
    }
    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)>($r2);

        return;
    }
    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.View $r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r2);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r2);

        return;
    }
protected abstract boolean onPerformActionForVirtualView(int, int, android.os.Bundle) { 
// no body
} 
    protected void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }
    protected void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        return;
    }
    protected void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        return;
    }
protected abstract void onPopulateNodeForVirtualView(int, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) { 
// no body
} 
    protected void onVirtualViewKeyboardFocusChanged(int, boolean)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        return;
    }
    boolean performAction(int, int, android.os.Bundle)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.os.Bundle;

        lookupswitch($i0)
        {
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)>($i0, $i1, $r1);

        return $z0;

     label2:
        $z0 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean performActionForHost(int,android.os.Bundle)>($i1, $r1);

        return $z0;
    }
    public final boolean requestKeyboardFocusForVirtualView(int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == $i0 goto label3;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label2;

        $i1 = r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>($i1);

     label2:
        r0.<android.support.v4.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = $i0;

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)>($i0, 1);

        virtualinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>($i0, 8);

        return 1;

     label3:
        return 0;
    }
    public final boolean sendEventForVirtualView(int, int)
    {
        android.support.v4.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityManager $r1;
        boolean $z0;
        android.view.View $r2;
        android.view.ViewParent $r3;
        android.view.accessibility.AccessibilityEvent $r4;

        r0 := @this: android.support.v4.widget.ExploreByTouchHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == -2147483648 goto label2;

        $r1 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 == null goto label2;

        $r4 = specialinvoke r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>($i0, $i1);

        $r2 = r0.<android.support.v4.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = staticinvoke <android.support.v4.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>($r3, $r2, $r4);

        return $z0;

     label2:
        return 0;
    }
