android.support.v4.app.FragmentHostCallback extends android.support.v4.app.FragmentContainer
private final android.app.Activity mActivity
private android.support.v4.util.SimpleArrayMap mAllLoaderManagers
private boolean mCheckedForLoaderManager
final android.content.Context mContext
final android.support.v4.app.FragmentManagerImpl mFragmentManager
private final android.os.Handler mHandler
private android.support.v4.app.LoaderManagerImpl mLoaderManager
private boolean mLoadersStarted
private boolean mRetainLoaders
final int mWindowAnimations
    void <init>(android.app.Activity, android.content.Context, android.os.Handler, int)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.app.Activity $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        int $i0;
        android.support.v4.app.FragmentManagerImpl $r4;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.Handler;

        $i0 := @parameter3: int;

        specialinvoke r0.<android.support.v4.app.FragmentContainer: void <init>()>();

        $r4 = new android.support.v4.app.FragmentManagerImpl;

        specialinvoke $r4.<android.support.v4.app.FragmentManagerImpl: void <init>()>();

        r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.FragmentManagerImpl mFragmentManager> = $r4;

        r0.<android.support.v4.app.FragmentHostCallback: android.app.Activity mActivity> = $r1;

        r0.<android.support.v4.app.FragmentHostCallback: android.content.Context mContext> = $r2;

        r0.<android.support.v4.app.FragmentHostCallback: android.os.Handler mHandler> = $r3;

        r0.<android.support.v4.app.FragmentHostCallback: int mWindowAnimations> = $i0;

        return;
    }
    public void <init>(android.content.Context, android.os.Handler, int)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.content.Context $r1;
        android.os.Handler $r2;
        int $i0;
        boolean $z0;
        android.app.Activity $r3;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Handler;

        $i0 := @parameter2: int;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r3 = (android.app.Activity) $r1;

     label1:
        specialinvoke r0.<android.support.v4.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>($r3, $r1, $r2, $i0);

        return;

     label2:
        $r3 = null;

        goto label1;
    }
    void <init>(android.support.v4.app.FragmentActivity)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.FragmentActivity $r1;
        android.os.Handler $r2;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.FragmentActivity;

        $r2 = $r1.<android.support.v4.app.FragmentActivity: android.os.Handler mHandler>;

        specialinvoke r0.<android.support.v4.app.FragmentHostCallback: void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)>($r1, $r1, $r2, 0);

        return;
    }
    void doLoaderDestroy()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.LoaderManagerImpl $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doDestroy()>();

        return;
    }
    void doLoaderRetain()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.LoaderManagerImpl $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doRetain()>();

        return;
    }
    void doLoaderStart()
    {
        android.support.v4.app.FragmentHostCallback r0;
        boolean $z0;
        android.support.v4.app.LoaderManagerImpl $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted> = 1;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 == null goto label3;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doStart()>();

     label2:
        r0.<android.support.v4.app.FragmentHostCallback: boolean mCheckedForLoaderManager> = 1;

        return;

     label3:
        $z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mCheckedForLoaderManager>;

        if $z0 != 0 goto label2;

        $z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted>;

        $r1 = virtualinvoke r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", $z0, 0);

        r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager> = $r1;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        $z0 = $r1.<android.support.v4.app.LoaderManagerImpl: boolean mStarted>;

        if $z0 != 0 goto label2;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doStart()>();

        goto label2;
    }
    void doLoaderStop(boolean)
    {
        android.support.v4.app.FragmentHostCallback r0;
        boolean $z0, $z1;
        android.support.v4.app.LoaderManagerImpl $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $z0 := @parameter0: boolean;

        r0.<android.support.v4.app.FragmentHostCallback: boolean mRetainLoaders> = $z0;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 != null goto label1;

        return;

     label1:
        $z1 = r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted>;

        if $z1 == 0 goto label3;

        r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted> = 0;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doRetain()>();

        return;

     label2:
        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r1.<android.support.v4.app.LoaderManagerImpl: void doStop()>();

     label3:
        return;
    }
    void dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.String $r1, $r6;
        java.io.FileDescriptor $r2;
        java.io.PrintWriter $r3;
        java.lang.String[] $r4;
        boolean $z0;
        android.support.v4.app.LoaderManagerImpl $r5;
        int $i0;
        java.lang.StringBuilder $r7;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.FileDescriptor;

        $r3 := @parameter2: java.io.PrintWriter;

        $r4 := @parameter3: java.lang.String[];

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("mLoadersStarted=");

        $z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(boolean)>($z0);

        $r5 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r5 == null goto label1;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("Loader Manager ");

        $r5 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r5 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r1, $r2, $r3, $r4);

     label1:
        return;
    }
    android.app.Activity getActivity()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.app.Activity r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        r1 = r0.<android.support.v4.app.FragmentHostCallback: android.app.Activity mActivity>;

        return r1;
    }
    android.content.Context getContext()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        r1 = r0.<android.support.v4.app.FragmentHostCallback: android.content.Context mContext>;

        return r1;
    }
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.FragmentManagerImpl r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.FragmentManagerImpl mFragmentManager>;

        return r1;
    }
    android.os.Handler getHandler()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.os.Handler r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        r1 = r0.<android.support.v4.app.FragmentHostCallback: android.os.Handler mHandler>;

        return r1;
    }
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String, boolean, boolean)
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        android.support.v4.util.SimpleArrayMap $r3;
        android.support.v4.app.LoaderManagerImpl r4;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        if $r3 != null goto label1;

        $r3 = new android.support.v4.util.SimpleArrayMap;

        specialinvoke $r3.<android.support.v4.util.SimpleArrayMap: void <init>()>();

        r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers> = $r3;

     label1:
        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $r2 = virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (android.support.v4.app.LoaderManagerImpl) $r2;

        if r4 != null goto label2;

        if $z1 == 0 goto label2;

        r4 = new android.support.v4.app.LoaderManagerImpl;

        specialinvoke r4.<android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)>($r1, r0, $z0);

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r4);

        return r4;

     label2:
        if $z0 == 0 goto label3;

        if r4 == null goto label3;

        $z0 = r4.<android.support.v4.app.LoaderManagerImpl: boolean mStarted>;

        if $z0 != 0 goto label3;

        virtualinvoke r4.<android.support.v4.app.LoaderManagerImpl: void doStart()>();

     label3:
        return r4;
    }
    android.support.v4.app.LoaderManagerImpl getLoaderManagerImpl()
    {
        android.support.v4.app.FragmentHostCallback r0;
        boolean $z0;
        android.support.v4.app.LoaderManagerImpl $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        return $r1;

     label1:
        r0.<android.support.v4.app.FragmentHostCallback: boolean mCheckedForLoaderManager> = 1;

        $z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mLoadersStarted>;

        $r1 = virtualinvoke r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", $z0, 1);

        r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager> = $r1;

        $r1 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl mLoaderManager>;

        return $r1;
    }
    boolean getRetainLoaders()
    {
        android.support.v4.app.FragmentHostCallback r0;
        boolean z0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        z0 = r0.<android.support.v4.app.FragmentHostCallback: boolean mRetainLoaders>;

        return z0;
    }
    void inactivateFragment(java.lang.String)
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        android.support.v4.util.SimpleArrayMap $r3;
        android.support.v4.app.LoaderManagerImpl r4;
        boolean $z0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        if $r3 == null goto label1;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $r2 = virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (android.support.v4.app.LoaderManagerImpl) $r2;

        if r4 == null goto label1;

        $z0 = r4.<android.support.v4.app.LoaderManagerImpl: boolean mRetaining>;

        if $z0 != 0 goto label1;

        virtualinvoke r4.<android.support.v4.app.LoaderManagerImpl: void doDestroy()>();

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }
    void onAttachFragment(android.support.v4.app.Fragment)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        return;
    }
    public void onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.String $r1;
        java.io.FileDescriptor $r2;
        java.io.PrintWriter $r3;
        java.lang.String[] $r4;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.FileDescriptor;

        $r3 := @parameter2: java.io.PrintWriter;

        $r4 := @parameter3: java.lang.String[];

        return;
    }
    public android.view.View onFindViewById(int)
    {
        android.support.v4.app.FragmentHostCallback r0;
        int $i0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $i0 := @parameter0: int;

        return null;
    }
public abstract java.lang.Object onGetHost() { 
// no body
} 
    public android.view.LayoutInflater onGetLayoutInflater()
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.Object $r1;
        android.content.Context $r2;
        android.view.LayoutInflater $r3;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r2 = r0.<android.support.v4.app.FragmentHostCallback: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r1;

        return $r3;
    }
    public int onGetWindowAnimations()
    {
        android.support.v4.app.FragmentHostCallback r0;
        int i0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        i0 = r0.<android.support.v4.app.FragmentHostCallback: int mWindowAnimations>;

        return i0;
    }
    public boolean onHasView()
    {
        android.support.v4.app.FragmentHostCallback r0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        return 1;
    }
    public boolean onHasWindowAnimations()
    {
        android.support.v4.app.FragmentHostCallback r0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        return 1;
    }
    public void onRequestPermissionsFromFragment(android.support.v4.app.Fragment, java.lang.String[], int)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;
        java.lang.String[] $r2;
        int $i0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: java.lang.String[];

        $i0 := @parameter2: int;

        return;
    }
    public boolean onShouldSaveFragmentState(android.support.v4.app.Fragment)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        return 1;
    }
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    {
        android.support.v4.app.FragmentHostCallback r0;
        java.lang.String $r1;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: java.lang.String;

        return 0;
    }
    public void onStartActivityFromFragment(android.support.v4.app.Fragment, android.content.Intent, int)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;
        android.content.Intent $r2;
        int $i0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: android.content.Intent;

        $i0 := @parameter2: int;

        virtualinvoke r0.<android.support.v4.app.FragmentHostCallback: void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle)>($r1, $r2, $i0, null);

        return;
    }
    public void onStartActivityFromFragment(android.support.v4.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;
        android.content.Intent $r2;
        int $i0;
        android.os.Bundle $r3;
        java.lang.IllegalStateException $r4;
        android.content.Context $r5;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: android.content.Intent;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.os.Bundle;

        if $i0 == -1 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting activity with a requestCode requires a FragmentActivity host");

        throw $r4;

     label1:
        $r5 = r0.<android.support.v4.app.FragmentHostCallback: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>($r2);

        return;
    }
    public void onStartIntentSenderFromFragment(android.support.v4.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.Fragment $r1;
        android.content.IntentSender $r2;
        int $i0, $i1, $i2, $i3;
        android.content.Intent $r3;
        android.os.Bundle $r4;
        java.lang.IllegalStateException $r5;
        android.app.Activity $r6;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 := @parameter1: android.content.IntentSender;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.content.Intent;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $r4 := @parameter7: android.os.Bundle;

        if $i0 == -1 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting intent sender with a requestCode requires a FragmentActivity host");

        throw $r5;

     label1:
        $r6 = r0.<android.support.v4.app.FragmentHostCallback: android.app.Activity mActivity>;

        staticinvoke <android.support.v4.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>($r6, $r2, $i0, $r3, $i1, $i2, $i3, $r4);

        return;
    }
    public void onSupportInvalidateOptionsMenu()
    {
        android.support.v4.app.FragmentHostCallback r0;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        return;
    }
    void reportLoaderStart()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.LoaderManagerImpl r1;
        android.support.v4.app.LoaderManagerImpl[] r2;
        android.support.v4.util.SimpleArrayMap $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        if $r3 == null goto label4;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $i0 = virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: int size()>();

        r2 = newarray (android.support.v4.app.LoaderManagerImpl)[$i0];

        i1 = $i0 + -1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $r4 = virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: java.lang.Object valueAt(int)>(i1);

        r1 = (android.support.v4.app.LoaderManagerImpl) $r4;

        r2[i1] = r1;

        i1 = i1 + -1;

        goto label1;

     label2:
        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r1 = r2[i1];

        virtualinvoke r1.<android.support.v4.app.LoaderManagerImpl: void finishRetain()>();

        virtualinvoke r1.<android.support.v4.app.LoaderManagerImpl: void doReportStart()>();

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.util.SimpleArrayMap r1;
        int i0, $i1;
        java.lang.Object $r2;
        android.support.v4.app.LoaderManagerImpl $r3;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        r1 := @parameter0: android.support.v4.util.SimpleArrayMap;

        if r1 == null goto label2;

        i0 = 0;

        $i1 = virtualinvoke r1.<android.support.v4.util.SimpleArrayMap: int size()>();

     label1:
        if i0 >= $i1 goto label2;

        $r2 = virtualinvoke r1.<android.support.v4.util.SimpleArrayMap: java.lang.Object valueAt(int)>(i0);

        $r3 = (android.support.v4.app.LoaderManagerImpl) $r2;

        virtualinvoke $r3.<android.support.v4.app.LoaderManagerImpl: void updateHostController(android.support.v4.app.FragmentHostCallback)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers> = r1;

        return;
    }
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig()
    {
        android.support.v4.app.FragmentHostCallback r0;
        android.support.v4.app.LoaderManagerImpl r1;
        android.support.v4.app.LoaderManagerImpl[] r2;
        java.lang.String $r3;
        boolean z0, $z1, $z2;
        android.support.v4.util.SimpleArrayMap $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: android.support.v4.app.FragmentHostCallback;

        z0 = 0;

        $r4 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        if $r4 == null goto label8;

        $r4 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $i0 = virtualinvoke $r4.<android.support.v4.util.SimpleArrayMap: int size()>();

        r2 = newarray (android.support.v4.app.LoaderManagerImpl)[$i0];

        i1 = $i0 + -1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $r5 = virtualinvoke $r4.<android.support.v4.util.SimpleArrayMap: java.lang.Object valueAt(int)>(i1);

        r1 = (android.support.v4.app.LoaderManagerImpl) $r5;

        r2[i1] = r1;

        i1 = i1 + -1;

        goto label1;

     label2:
        $z1 = virtualinvoke r0.<android.support.v4.app.FragmentHostCallback: boolean getRetainLoaders()>();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label8;

        r1 = r2[i1];

        $z2 = r1.<android.support.v4.app.LoaderManagerImpl: boolean mRetaining>;

        if $z2 != 0 goto label5;

        if $z1 == 0 goto label5;

        $z2 = r1.<android.support.v4.app.LoaderManagerImpl: boolean mStarted>;

        if $z2 != 0 goto label4;

        virtualinvoke r1.<android.support.v4.app.LoaderManagerImpl: void doStart()>();

     label4:
        virtualinvoke r1.<android.support.v4.app.LoaderManagerImpl: void doRetain()>();

     label5:
        $z2 = r1.<android.support.v4.app.LoaderManagerImpl: boolean mRetaining>;

        if $z2 == 0 goto label7;

        z0 = 1;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        virtualinvoke r1.<android.support.v4.app.LoaderManagerImpl: void doDestroy()>();

        $r4 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        $r3 = r1.<android.support.v4.app.LoaderManagerImpl: java.lang.String mWho>;

        virtualinvoke $r4.<android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        goto label6;

     label8:
        if z0 == 0 goto label9;

        $r4 = r0.<android.support.v4.app.FragmentHostCallback: android.support.v4.util.SimpleArrayMap mAllLoaderManagers>;

        return $r4;

     label9:
        return null;
    }
