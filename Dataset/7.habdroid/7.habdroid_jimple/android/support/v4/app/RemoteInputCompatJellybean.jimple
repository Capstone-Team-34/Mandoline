android.support.v4.app.RemoteInputCompatJellybean extends java.lang.Object
private static final java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA
private static final java.lang.String KEY_ALLOWED_DATA_TYPES
private static final java.lang.String KEY_ALLOW_FREE_FORM_INPUT
private static final java.lang.String KEY_CHOICES
private static final java.lang.String KEY_EXTRAS
private static final java.lang.String KEY_LABEL
private static final java.lang.String KEY_RESULT_KEY
    void <init>()
    {
        android.support.v4.app.RemoteInputCompatJellybean r0;

        r0 := @this: android.support.v4.app.RemoteInputCompatJellybean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void addDataResultToIntent(android.support.v4.app.RemoteInput, android.content.Intent, java.util.Map)
    {
        android.support.v4.app.RemoteInput $r0;
        android.content.Intent $r1, $r3, r4;
        java.util.Map r2;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry r8;
        java.lang.String r9, $r11, $r14;
        android.net.Uri r10;
        android.os.Bundle $r12, r13;
        android.content.ClipData $r15;

        $r0 := @parameter0: android.support.v4.app.RemoteInput;

        $r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.util.Map;

        $r3 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($r1);

        r4 = $r3;

        if $r3 != null goto label1;

        r4 = new android.content.Intent;

        specialinvoke r4.<android.content.Intent: void <init>()>();

     label1:
        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (android.net.Uri) $r7;

        if r9 == null goto label2;

        $r11 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: java.lang.String getExtraResultsKeyForData(java.lang.String)>(r9);

        $r12 = virtualinvoke r4.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>($r11);

        r13 = $r12;

        if $r12 != null goto label3;

        r13 = new android.os.Bundle;

        specialinvoke r13.<android.os.Bundle: void <init>()>();

     label3:
        $r11 = virtualinvoke $r0.<android.support.v4.app.RemoteInput: java.lang.String getResultKey()>();

        $r14 = virtualinvoke r10.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r13.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r11, $r14);

        r9 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: java.lang.String getExtraResultsKeyForData(java.lang.String)>(r9);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>(r9, r13);

        goto label2;

     label4:
        $r15 = staticinvoke <android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>("android.remoteinput.results", r4);

        virtualinvoke $r1.<android.content.Intent: void setClipData(android.content.ClipData)>($r15);

        return;
    }
    static void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[], android.content.Intent, android.os.Bundle)
    {
        android.support.v4.app.RemoteInputCompatBase$RemoteInput[] $r0;
        android.content.Intent $r1, $r4, r5;
        android.os.Bundle $r2, $r6, r7;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput r3;
        int $i0, $i1;
        java.lang.String $r8;
        java.lang.Object $r9;
        boolean $z0;
        java.lang.CharSequence r10;
        android.content.ClipData $r11;

        $r0 := @parameter0: android.support.v4.app.RemoteInputCompatBase$RemoteInput[];

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: android.os.Bundle;

        $r4 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($r1);

        r5 = $r4;

        if $r4 != null goto label1;

        r5 = new android.content.Intent;

        specialinvoke r5.<android.content.Intent: void <init>()>();

     label1:
        $r6 = virtualinvoke r5.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("android.remoteinput.resultsData");

        r7 = $r6;

        if $r6 != null goto label2;

        r7 = new android.os.Bundle;

        specialinvoke r7.<android.os.Bundle: void <init>()>();

     label2:
        $i0 = lengthof $r0;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        r3 = $r0[$i1];

        $r8 = virtualinvoke r3.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.lang.String getResultKey()>();

        $r9 = virtualinvoke $r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r8);

        $z0 = $r9 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label4;

        $r8 = virtualinvoke r3.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.lang.String getResultKey()>();

        r10 = (java.lang.CharSequence) $r9;

        virtualinvoke r7.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>($r8, r10);

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("android.remoteinput.resultsData", r7);

        $r11 = staticinvoke <android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>("android.remoteinput.results", r5);

        virtualinvoke $r1.<android.content.Intent: void setClipData(android.content.ClipData)>($r11);

        return;
    }
    static android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle, android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
    {
        android.os.Bundle $r0;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory $r1;
        java.util.HashSet r2;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6;
        java.lang.CharSequence $r7;
        java.lang.CharSequence[] $r8;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput $r9;

        $r0 := @parameter0: android.os.Bundle;

        $r1 := @parameter1: android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory;

        $r3 = virtualinvoke $r0.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("allowedDataTypes");

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        r6 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("resultKey");

        $r7 = virtualinvoke $r0.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("label");

        $r8 = virtualinvoke $r0.<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>("choices");

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String)>("allowFreeFormInput");

        $r0 = virtualinvoke $r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        $r9 = interfaceinvoke $r1.<android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory: android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set)>(r6, $r7, $r8, $z0, $r0, r2);

        return $r9;
    }
    static android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[], android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
    {
        android.os.Bundle[] $r0;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory $r1;
        int $i0, $i1;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput[] $r2;
        android.os.Bundle $r3;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput $r4;

        $r0 := @parameter0: android.os.Bundle[];

        $r1 := @parameter1: android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r0;

        $r2 = interfaceinvoke $r1.<android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory: android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $r3 = $r0[$i0];

        $r4 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)>($r3, $r1);

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r2;
    }
    private static android.content.Intent getClipDataIntentFromIntent(android.content.Intent)
    {
        android.content.Intent $r0;
        android.content.ClipData $r1;
        android.content.ClipDescription $r2;
        boolean $z0;
        java.lang.CharSequence $r3;
        android.content.ClipData$Item $r4;

        $r0 := @parameter0: android.content.Intent;

        $r1 = virtualinvoke $r0.<android.content.Intent: android.content.ClipData getClipData()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        $z0 = virtualinvoke $r2.<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>("text/vnd.android.intent");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.content.ClipDescription: java.lang.CharSequence getLabel()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>("android.remoteinput.results");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $r0 = virtualinvoke $r4.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        return $r0;

     label2:
        return null;
    }
    static java.util.Map getDataResultsFromIntent(android.content.Intent, java.lang.String)
    {
        android.content.Intent $r0;
        java.lang.String $r1, r7, $r8;
        java.util.HashMap r2;
        android.os.Bundle $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0;
        android.net.Uri $r9;

        $r0 := @parameter0: android.content.Intent;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($r0);

        if $r0 != null goto label1;

        return null;

     label1:
        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Intent: android.os.Bundle getExtras()>();

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("android.remoteinput.dataTypeResultsData");

        if $z0 == 0 goto label2;

        $r8 = "android.remoteinput.dataTypeResultsData";

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i0);

        if $r8 == null goto label2;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r0.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>(r7);

        r7 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r1);

        if r7 == null goto label2;

        $z0 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r7);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label2;

     label3:
        $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        r2 = null;

     label4:
        return r2;
    }
    private static java.lang.String getExtraResultsKeyForData(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.remoteinput.dataTypeResultsData");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    static android.os.Bundle getResultsFromIntent(android.content.Intent)
    {
        android.content.Intent $r0;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;

        $r0 := @parameter0: android.content.Intent;

        $r0 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>($r0);

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Intent: android.os.Bundle getExtras()>();

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.remoteinput.resultsData");

        $r1 = (android.os.Bundle) $r2;

        return $r1;
    }
    static android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)
    {
        android.support.v4.app.RemoteInputCompatBase$RemoteInput $r0;
        java.util.ArrayList r1;
        android.os.Bundle r2, $r6;
        java.lang.String $r3;
        java.lang.CharSequence $r4;
        java.lang.CharSequence[] $r5;
        boolean $z0;
        java.util.Set $r7;
        int $i0;
        java.util.Iterator $r8;
        java.lang.Object $r9;

        $r0 := @parameter0: android.support.v4.app.RemoteInputCompatBase$RemoteInput;

        r2 = new android.os.Bundle;

        specialinvoke r2.<android.os.Bundle: void <init>()>();

        $r3 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.lang.String getResultKey()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("resultKey", $r3);

        $r4 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.lang.CharSequence getLabel()>();

        virtualinvoke r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("label", $r4);

        $r5 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.lang.CharSequence[] getChoices()>();

        virtualinvoke r2.<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>("choices", $r5);

        $z0 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: boolean getAllowFreeFormInput()>();

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("allowFreeFormInput", $z0);

        $r6 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: android.os.Bundle getExtras()>();

        virtualinvoke r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r6);

        $r7 = virtualinvoke $r0.<android.support.v4.app.RemoteInputCompatBase$RemoteInput: java.util.Set getAllowedDataTypes()>();

        if $r7 == null goto label3;

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r7.<java.util.Set: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r9;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        virtualinvoke r2.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("allowedDataTypes", r1);

     label3:
        return r2;
    }
    static android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
    {
        android.support.v4.app.RemoteInputCompatBase$RemoteInput[] $r0;
        android.os.Bundle $r1;
        int $i0, $i1;
        android.os.Bundle[] r2;
        android.support.v4.app.RemoteInputCompatBase$RemoteInput $r3;

        $r0 := @parameter0: android.support.v4.app.RemoteInputCompatBase$RemoteInput[];

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r0;

        r2 = newarray (android.os.Bundle)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $r3 = $r0[$i0];

        $r1 = staticinvoke <android.support.v4.app.RemoteInputCompatJellybean: android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)>($r3);

        r2[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return r2;
    }
