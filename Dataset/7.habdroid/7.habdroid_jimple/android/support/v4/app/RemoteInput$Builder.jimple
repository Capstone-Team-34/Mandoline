android.support.v4.app.RemoteInput$Builder extends java.lang.Object
private boolean mAllowFreeFormTextInput
private final java.util.Set mAllowedDataTypes
private java.lang.CharSequence[] mChoices
private android.os.Bundle mExtras
private java.lang.CharSequence mLabel
private final java.lang.String mResultKey
    public void <init>(java.lang.String)
    {
        android.support.v4.app.RemoteInput$Builder r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        java.util.HashSet $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.app.RemoteInput$Builder: boolean mAllowFreeFormTextInput> = 1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.support.v4.app.RemoteInput$Builder: android.os.Bundle mExtras> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.support.v4.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes> = $r3;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Result key can\'t be null");

        throw $r4;

     label1:
        r0.<android.support.v4.app.RemoteInput$Builder: java.lang.String mResultKey> = $r1;

        return;
    }
    public android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle)
    {
        android.support.v4.app.RemoteInput$Builder r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 := @parameter0: android.os.Bundle;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>($r1);

     label1:
        return r0;
    }
    public android.support.v4.app.RemoteInput build()
    {
        android.support.v4.app.RemoteInput$Builder r0;
        android.support.v4.app.RemoteInput $r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;
        java.lang.CharSequence[] $r4;
        boolean $z0;
        android.os.Bundle $r5;
        java.util.Set $r6;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 = new android.support.v4.app.RemoteInput;

        $r2 = r0.<android.support.v4.app.RemoteInput$Builder: java.lang.String mResultKey>;

        $r3 = r0.<android.support.v4.app.RemoteInput$Builder: java.lang.CharSequence mLabel>;

        $r4 = r0.<android.support.v4.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices>;

        $z0 = r0.<android.support.v4.app.RemoteInput$Builder: boolean mAllowFreeFormTextInput>;

        $r5 = r0.<android.support.v4.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        $r6 = r0.<android.support.v4.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes>;

        specialinvoke $r1.<android.support.v4.app.RemoteInput: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set)>($r2, $r3, $r4, $z0, $r5, $r6);

        return $r1;
    }
    public android.os.Bundle getExtras()
    {
        android.support.v4.app.RemoteInput$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        r1 = r0.<android.support.v4.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        return r1;
    }
    public android.support.v4.app.RemoteInput$Builder setAllowDataType(java.lang.String, boolean)
    {
        android.support.v4.app.RemoteInput$Builder r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Set $r2;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v4.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r0;

     label1:
        $r2 = r0.<android.support.v4.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        return r0;
    }
    public android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
    {
        android.support.v4.app.RemoteInput$Builder r0;
        boolean $z0;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $z0 := @parameter0: boolean;

        r0.<android.support.v4.app.RemoteInput$Builder: boolean mAllowFreeFormTextInput> = $z0;

        return r0;
    }
    public android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
    {
        android.support.v4.app.RemoteInput$Builder r0;
        java.lang.CharSequence[] $r1;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 := @parameter0: java.lang.CharSequence[];

        r0.<android.support.v4.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices> = $r1;

        return r0;
    }
    public android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
    {
        android.support.v4.app.RemoteInput$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.v4.app.RemoteInput$Builder;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.v4.app.RemoteInput$Builder: java.lang.CharSequence mLabel> = $r1;

        return r0;
    }
