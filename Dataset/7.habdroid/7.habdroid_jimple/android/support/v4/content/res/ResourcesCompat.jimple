android.support.v4.content.res.ResourcesCompat extends java.lang.Object
private static final java.lang.String TAG
    private void <init>()
    {
        android.support.v4.content.res.ResourcesCompat r0;

        r0 := @this: android.support.v4.content.res.ResourcesCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int getColor(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $i0 = virtualinvoke $r0.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<android.content.res.Resources: int getColor(int)>($i0);

        return $i0;
    }
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.content.res.ColorStateList $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i0);

        return $r2;
    }
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r2;
    }
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1, $i2;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.content.res.Resources$Theme;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)>($i0, $i1, $r1);

        return $r2;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 15 goto label2;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>($i0, $i1);

        return $r2;

     label2:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r2;
    }
    public static android.graphics.Typeface getFont(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        boolean $z0;
        android.util.TypedValue $r1;
        android.graphics.Typeface $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        $r2 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView)>($r0, $i0, $r1, 0, null);

        return $r2;
    }
    public static android.graphics.Typeface getFont(android.content.Context, int, android.util.TypedValue, int, android.widget.TextView) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.util.TypedValue $r1;
        android.widget.TextView $r2;
        boolean $z0;
        android.graphics.Typeface $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.util.TypedValue;

        $i1 := @parameter3: int;

        $r2 := @parameter4: android.widget.TextView;

        $z0 = virtualinvoke $r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView)>($r0, $i0, $r1, $i1, $r2);

        return $r3;
    }
    private static android.graphics.Typeface loadFont(android.content.Context, int, android.util.TypedValue, int, android.widget.TextView)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.util.TypedValue $r1;
        android.widget.TextView $r2;
        android.content.res.Resources $r3;
        android.graphics.Typeface $r4;
        android.content.res.Resources$NotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.util.TypedValue;

        $i1 := @parameter3: int;

        $r2 := @parameter4: android.widget.TextView;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $r4 = staticinvoke <android.support.v4.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)>($r0, $r3, $r1, $i0, $i1, $r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = new android.content.res.Resources$NotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Font resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }
    private static android.graphics.Typeface loadFont(android.content.Context, android.content.res.Resources, android.util.TypedValue, int, int, android.widget.TextView)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.TypedValue $r2;
        int $i0, $i1;
        android.widget.TextView $r3;
        java.lang.CharSequence $r4;
        android.content.res.Resources$NotFoundException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r9;
        boolean $z0;
        android.graphics.Typeface $r8;
        android.content.res.XmlResourceParser $r10;
        android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry $r11;
        org.xmlpull.v1.XmlPullParserException r12;
        java.io.IOException r13;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.util.TypedValue;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 := @parameter5: android.widget.TextView;

        $r4 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r4 != null goto label01;

        $r5 = new android.content.res.Resources$NotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource \"");

        $r7 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" (");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not a Font: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label01:
        $r4 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        $r7 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("res/");

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r8 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)>($r1, $i0, $i1);

        if $r8 != null goto label16;

     label03:
        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

     label04:
        if $z0 == 0 goto label11;

     label05:
        $r10 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r11 = staticinvoke <android.support.v4.content.res.FontResourcesParserCompat: android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>($r10, $r1);

     label06:
        if $r11 != null goto label09;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourcesCompat", "Failed to find font-family tag");

     label08:
        return null;

     label09:
        $r8 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.widget.TextView)>($r0, $r11, $r1, $i0, $i1, $r3);

     label10:
        return $r8;

     label11:
        $r8 = staticinvoke <android.support.v4.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>($r0, $r1, $i0, $r7, $i1);

     label12:
        return $r8;

     label13:
        r12 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse xml resource ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r7, r12);

     label14:
        return null;

     label15:
        r13 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read xml resource ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r7, r13);

        goto label14;

     label16:
        return $r8;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label13;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label11 to label12 with label15;
    }
