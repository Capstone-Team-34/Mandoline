android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase extends java.lang.Object implements android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
static final int RCC_PLAYSTATE_NONE
final android.media.AudioManager mAudioManager
volatile android.support.v4.media.session.MediaSessionCompat$Callback mCallback
boolean mCaptioningEnabled
private final android.content.Context mContext
final android.os.RemoteCallbackList mControllerCallbacks
boolean mDestroyed
android.os.Bundle mExtras
int mFlags
private android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler
boolean mIsActive
private boolean mIsMbrRegistered
private boolean mIsRccRegistered
int mLocalStream
final java.lang.Object mLock
private final android.content.ComponentName mMediaButtonReceiverComponentName
private final android.app.PendingIntent mMediaButtonReceiverIntent
android.support.v4.media.MediaMetadataCompat mMetadata
final java.lang.String mPackageName
java.util.List mQueue
java.lang.CharSequence mQueueTitle
int mRatingType
final android.media.RemoteControlClient mRcc
int mRepeatMode
android.app.PendingIntent mSessionActivity
int mShuffleMode
boolean mShuffleModeEnabled
android.support.v4.media.session.PlaybackStateCompat mState
private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub
final java.lang.String mTag
private final android.support.v4.media.session.MediaSessionCompat$Token mToken
private android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback
android.support.v4.media.VolumeProviderCompat mVolumeProvider
int mVolumeType
    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.content.Context $r1;
        java.lang.String $r2, $r9;
        android.content.ComponentName $r3;
        android.app.PendingIntent $r4;
        java.lang.Object $r5;
        android.os.RemoteCallbackList $r6;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r7;
        java.lang.IllegalArgumentException $r8;
        android.media.AudioManager $r10;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub $r11;
        android.support.v4.media.session.MediaSessionCompat$Token $r12;
        android.media.RemoteControlClient $r13;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ComponentName;

        $r4 := @parameter3: android.app.PendingIntent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock> = $r5;

        $r6 = new android.os.RemoteCallbackList;

        specialinvoke $r6.<android.os.RemoteCallbackList: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks> = $r6;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        $r7 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        specialinvoke $r7.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback> = $r7;

        if $r3 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaButtonReceiver component may not be null.");

        throw $r8;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext> = $r1;

        $r9 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName> = $r9;

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r10 = (android.media.AudioManager) $r5;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager> = $r10;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag> = $r2;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName> = $r3;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent> = $r4;

        $r11 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub;

        specialinvoke $r11.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>(r0);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub> = $r11;

        $r12 = new android.support.v4.media.session.MediaSessionCompat$Token;

        $r11 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub>;

        specialinvoke $r12.<android.support.v4.media.session.MediaSessionCompat$Token: void <init>(java.lang.Object)>($r11);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r12;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = 3;

        $r13 = new android.media.RemoteControlClient;

        specialinvoke $r13.<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc> = $r13;

        return;
    }
    private void sendCaptioningEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0;
        android.os.RemoteCallbackList $r1;
        int $i0;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onCaptioningEnabledChanged(boolean)>($z0);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.RemoteCallbackList $r3;
        int $i0;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback r5;
        android.os.RemoteException $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke r5.<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r6 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.Bundle $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onExtrasChanged(android.os.Bundle)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.util.List r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>(r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.CharSequence $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendRepeatMode(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.os.RemoteCallbackList $r1;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i1 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i1);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onRepeatModeChanged(int)>($i0);

     label3:
        $i1 = $i1 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendSessionDestroyed()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.RemoteCallbackList $r1;
        int $i0;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>();

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void kill()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendShuffleMode(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        android.os.RemoteCallbackList $r1;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i1 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i1);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChanged(int)>($i0);

     label3:
        $i1 = $i1 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendShuffleModeEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0;
        android.os.RemoteCallbackList $r1;
        int $i0;
        android.os.IInterface $r2;
        android.support.v4.media.session.IMediaControllerCallback r3;
        android.os.RemoteException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r2 = virtualinvoke $r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r3 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label2:
        interfaceinvoke r3.<android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChangedDeprecated(boolean)>($z0);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r4 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    private void sendState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onAdjustVolume(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }
    android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.Bundle $r1;
        android.media.RemoteControlClient $r2;
        android.media.RemoteControlClient$MetadataEditor $r3;
        boolean $z0;
        android.os.Parcelable $r4;
        android.graphics.Bitmap r5;
        android.graphics.Bitmap$Config $r6;
        java.lang.String $r7;
        long $l0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $r3 = virtualinvoke $r2.<android.media.RemoteControlClient: android.media.RemoteControlClient$MetadataEditor editMetadata(boolean)>(1);

        if $r1 != null goto label01;

        return $r3;

     label01:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ART");

        if $z0 == 0 goto label16;

        $r4 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.media.metadata.ART");

        r5 = (android.graphics.Bitmap) $r4;

        if r5 == null goto label02;

        $r6 = virtualinvoke r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r5 = virtualinvoke r5.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r6, 0);

     label02:
        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putBitmap(int,android.graphics.Bitmap)>(100, r5);

     label03:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM");

        if $z0 == 0 goto label04;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ALBUM");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(1, $r7);

     label04:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM_ARTIST");

        if $z0 == 0 goto label05;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ALBUM_ARTIST");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(13, $r7);

     label05:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ARTIST");

        if $z0 == 0 goto label06;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.ARTIST");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(2, $r7);

     label06:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.AUTHOR");

        if $z0 == 0 goto label07;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.AUTHOR");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(3, $r7);

     label07:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.COMPILATION");

        if $z0 == 0 goto label08;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.COMPILATION");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(15, $r7);

     label08:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.COMPOSER");

        if $z0 == 0 goto label09;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.COMPOSER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(4, $r7);

     label09:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DATE");

        if $z0 == 0 goto label10;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.DATE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(5, $r7);

     label10:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DISC_NUMBER");

        if $z0 == 0 goto label11;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.DISC_NUMBER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(14, $l0);

     label11:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

        if $z0 == 0 goto label12;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.DURATION");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(9, $l0);

     label12:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.GENRE");

        if $z0 == 0 goto label13;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.GENRE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(6, $r7);

     label13:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.TITLE");

        if $z0 == 0 goto label14;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.TITLE");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(7, $r7);

     label14:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.TRACK_NUMBER");

        if $z0 == 0 goto label15;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("android.media.metadata.TRACK_NUMBER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>(0, $l0);

     label15:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.WRITER");

        if $z0 == 0 goto label18;

        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.media.metadata.WRITER");

        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>(11, $r7);

        return $r3;

     label16:
        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.media.metadata.ALBUM_ART");

        if $z0 == 0 goto label03;

        $r4 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.media.metadata.ALBUM_ART");

        r5 = (android.graphics.Bitmap) $r4;

        if r5 == null goto label17;

        $r6 = virtualinvoke r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r5 = virtualinvoke r5.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r6, 0);

     label17:
        virtualinvoke $r3.<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putBitmap(int,android.graphics.Bitmap)>(100, r5);

        goto label03;

     label18:
        return $r3;
    }
    public java.lang.String getCallingPackage()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }
    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        android.support.v4.media.session.PlaybackStateCompat r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    int getRccStateFromState(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label11;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label04;
            case 5: goto label08;
            case 6: goto label02;
            case 7: goto label03;
            case 8: goto label02;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label10;
            default: goto label01;
        };

     label01:
        return -1;

     label02:
        return 8;

     label03:
        return 9;

     label04:
        return 4;

     label05:
        return 0;

     label06:
        return 2;

     label07:
        return 3;

     label08:
        return 5;

     label09:
        return 7;

     label10:
        return 6;

     label11:
        return 1;
    }
    int getRccTransportControlFlagsFromActions(long)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        long $l0, $l2;
        int i1;
        byte $b3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $l0 := @parameter0: long;

        i1 = 0;

        $l2 = 1L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        i1 = 32;

     label1:
        $l2 = 2L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        i1 = i1 | 16;

     label2:
        $l2 = 4L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label3;

        i1 = i1 | 4;

     label3:
        $l2 = 8L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label4;

        i1 = i1 | 2;

     label4:
        $l2 = 16L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label5;

        i1 = i1 | 1;

     label5:
        $l2 = 32L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label6;

        i1 = i1 | 128;

     label6:
        $l2 = 64L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label7;

        i1 = i1 | 64;

     label7:
        $l0 = 512L & $l0;

        $b3 = $l0 cmp 0L;

        if $b3 == 0 goto label8;

        i1 = i1 | 8;

     label8:
        return i1;
    }
    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }
    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        return z0;
    }
    void postToHandler(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void postToHandler(int,java.lang.Object)>($i0, null);

        return;
    }
    void postToHandler(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void postToHandler(int,java.lang.Object,int)>($i0, null, $i1);

        return;
    }
    void postToHandler(int, java.lang.Object)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void postToHandler(int,java.lang.Object,android.os.Bundle)>($i0, $r1, null);

        return;
    }
    void postToHandler(int, java.lang.Object, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;
        java.lang.Object $r1, $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void post(int,java.lang.Object,int)>($i0, $r1, $i1);

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    void postToHandler(int, java.lang.Object, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;
        java.lang.Object $r1, $r3;
        android.os.Bundle $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void post(int,java.lang.Object,android.os.Bundle)>($i0, $r1, $r2);

     label2:
        exitmonitor $r3;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    void registerMediaButtonEventReceiver(android.app.PendingIntent, android.content.ComponentName)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;
        android.content.ComponentName $r2;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>($r2);

        return;
    }
    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 1;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendSessionDestroyed()>();

        return;
    }
    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

        return;
    }
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.os.RemoteCallbackList $r2;
        int $i0;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback r4;
        android.os.RemoteException $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label4;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);

        r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke r4.<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }
    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0, $z1;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = $z0;

        $z0 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r2);

     label2:
        return;
    }
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1;
        java.lang.Object $r2;
        android.os.Looper $r3;
        android.os.Handler r4;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        r4 := @parameter1: android.os.Handler;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback> = $r1;

        if $r1 == null goto label7;

        if r4 != null goto label1;

        r4 = new android.os.Handler;

        specialinvoke r4.<android.os.Handler: void <init>()>();

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label2:
        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        if $r5 == null goto label3;

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label3:
        $r5 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler;

        $r3 = virtualinvoke r4.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper)>(r0, $r3);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler> = $r5;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompat$Callback: void access$300(android.support.v4.media.session.MediaSessionCompat$Callback,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler)>($r1, r0, r4);

        exitmonitor $r2;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
    public void setCaptioningEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mCaptioningEnabled>;

        if $z1 == $z0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mCaptioningEnabled> = $z0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendCaptioningEnabled(boolean)>($z0);

     label1:
        return;
    }
    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.os.Bundle $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendExtras(android.os.Bundle)>($r1);

        return;
    }
    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags> = $i0;

        exitmonitor $r2;

     label2:
        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        return;
    }
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.MediaMetadataCompat$Builder $r2;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.os.Bundle $r5;
        android.media.RemoteControlClient$MetadataEditor $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        if $r1 == null goto label1;

        $r2 = new android.support.v4.media.MediaMetadataCompat$Builder;

        $i0 = <android.support.v4.media.session.MediaSessionCompat: int sMaxBitmapSize>;

        specialinvoke $r2.<android.support.v4.media.MediaMetadataCompat$Builder: void <init>(android.support.v4.media.MediaMetadataCompat,int)>($r1, $i0);

        $r1 = virtualinvoke $r2.<android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat build()>();

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label2:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata> = $r1;

        exitmonitor $r3;

     label3:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label7;

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor $r3;

     label6:
        throw $r4;

     label7:
        if $r1 != null goto label9;

        $r5 = null;

     label8:
        $r6 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle)>($r5);

        virtualinvoke $r6.<android.media.RemoteControlClient$MetadataEditor: void apply()>();

        return;

     label9:
        $r5 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

        goto label8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.media.RemoteControlClient $r4;
        long $l0;
        int $i1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState> = $r1;

        exitmonitor $r2;

     label2:
        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label6;

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r3;

     label6:
        if $r1 != null goto label7;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setTransportControlFlags(int)>(0);

        return;

     label7:
        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setRccState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $l0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        $i1 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int getRccTransportControlFlagsFromActions(long)>($l0);

        virtualinvoke $r4.<android.media.RemoteControlClient: void setTransportControlFlags(int)>($i1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2, $i3;
        android.support.v4.media.session.ParcelableVolumeInfo r1;
        android.support.v4.media.VolumeProviderCompat $r2;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r2.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        r1 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i3 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i3);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i1 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>($i1);

        specialinvoke r1.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i2, 2, $i3, $i1);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r1);

        return;
    }
    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r4;
        android.support.v4.media.session.ParcelableVolumeInfo r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.media.VolumeProviderCompat$Callback $r5;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null");

        throw $r3;

     label1:
        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label2:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 2;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider> = $r1;

        r2 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i2 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i3 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i4 = virtualinvoke $r4.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();

        specialinvoke r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>(r2);

        $r5 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>($r5);

        return;
    }
    public void setQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.util.List r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 := @parameter0: java.util.List;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue> = r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueue(java.util.List)>(r1);

        return;
    }
    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle> = $r1;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueueTitle(java.lang.CharSequence)>($r1);

        return;
    }
    public void setRatingType(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i0;

        return;
    }
    void setRccState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.media.RemoteControlClient $r2;
        int $i0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        $i0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $i0 = virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int getRccStateFromState(int)>($i0);

        virtualinvoke $r2.<android.media.RemoteControlClient: void setPlaybackState(int)>($i0);

        return;
    }
    public void setRepeatMode(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRepeatMode>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRepeatMode> = $i0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendRepeatMode(int)>($i0);

     label1:
        return;
    }
    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label1:
        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity> = $r1;

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void setShuffleMode(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mShuffleMode>;

        if $i1 == $i0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mShuffleMode> = $i0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendShuffleMode(int)>($i0);

     label1:
        return;
    }
    public void setShuffleModeEnabled(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mShuffleModeEnabled>;

        if $z1 == $z0 goto label1;

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mShuffleModeEnabled> = $z0;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendShuffleModeEnabled(boolean)>($z0);

     label1:
        return;
    }
    void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onSetVolumeTo(int)>($i0);

        return;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        virtualinvoke $r2.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i2, $i0, $i1);

     label2:
        return;
    }
    void unregisterMediaButtonEventReceiver(android.app.PendingIntent, android.content.ComponentName)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        android.app.PendingIntent $r1;
        android.content.ComponentName $r2;
        android.media.AudioManager $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>($r2);

        return;
    }
    boolean update()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase r0;
        boolean $z0;
        int $i0;
        android.app.PendingIntent $r1;
        android.content.ComponentName $r2;
        android.media.AudioManager $r3;
        android.media.RemoteControlClient $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 == 0 goto label4;

        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 != 0 goto label2;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label2;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 1;

     label1:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 != 0 goto label3;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label3;

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 1;

        return 1;

     label2:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        goto label1;

     label3:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label6;

        $i0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label6;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        return 0;

     label4:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonReceiverIntent>;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mMediaButtonReceiverComponentName>;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName)>($r1, $r2);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label5:
        $z0 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

        if $z0 == 0 goto label6;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r4.<android.media.RemoteControlClient: void setPlaybackState(int)>(0);

        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.RemoteControlClient mRcc>;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>($r4);

        r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

     label6:
        return 0;
    }
