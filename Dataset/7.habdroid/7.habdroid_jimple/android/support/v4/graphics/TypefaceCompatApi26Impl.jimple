android.support.v4.graphics.TypefaceCompatApi26Impl extends android.support.v4.graphics.TypefaceCompatApi21Impl
private static final java.lang.String ABORT_CREATION_METHOD
private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
private static final java.lang.String FONT_FAMILY_CLASS
private static final java.lang.String FREEZE_METHOD
private static final int RESOLVE_BY_FONT_TABLE
private static final java.lang.String TAG
private static final java.lang.reflect.Method sAbortCreation
private static final java.lang.reflect.Method sAddFontFromAssetManager
private static final java.lang.reflect.Method sAddFontFromBuffer
private static final java.lang.reflect.Method sCreateFromFamiliesWithDefault
private static final java.lang.Class sFontFamily
private static final java.lang.reflect.Constructor sFontFamilyCtor
private static final java.lang.reflect.Method sFreeze
    static void <clinit>()
    {
        java.lang.Class $r0, r1, $r4;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.reflect.Method $r5, $r6, $r7, $r8, $r10, r11;
        java.lang.Object $r9;
        java.lang.ReflectiveOperationException r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;

     label01:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.graphics.FontFamily");

     label02:
        r1 = $r0;

        $r2 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

     label04:
        $r2 = newarray (java.lang.Class)[8];

        $r2[0] = class "Landroid/content/res/AssetManager;";

        $r2[1] = class "Ljava/lang/String;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r4;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2[3] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[4] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[5] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[6] = $r4;

        $r2[7] = class "[Landroid/graphics/fonts/FontVariationAxis;";

     label05:
        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromAssetManager", $r2);

     label06:
        $r2 = newarray (java.lang.Class)[5];

        $r2[0] = class "Ljava/nio/ByteBuffer;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r4;

        $r2[2] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[3] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[4] = $r4;

     label07:
        $r6 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addFontFromBuffer", $r2);

     label08:
        $r2 = newarray (java.lang.Class)[0];

     label09:
        $r7 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("freeze", $r2);

     label10:
        $r2 = newarray (java.lang.Class)[0];

     label11:
        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("abortCreation", $r2);

     label12:
        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, 1);

     label13:
        $r0 = class "Landroid/graphics/Typeface;";

        $r2 = newarray (java.lang.Class)[3];

     label14:
        $r4 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

     label15:
        $r2[0] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r4;

     label16:
        $r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createFromFamiliesWithDefault", $r2);

     label17:
        r11 = $r10;

     label18:
        virtualinvoke $r10.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label19:
        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor sFontFamilyCtor> = $r3;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class sFontFamily> = r1;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromAssetManager> = $r5;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromBuffer> = $r6;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sFreeze> = $r7;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAbortCreation> = $r8;

        <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault> = r11;

        return;

     label20:
        r12 := @caughtexception;

     label21:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to collect necessary methods for class ");

        r1 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TypefaceCompatApi26Impl", $r14, r12);

        r1 = null;

        $r3 = null;

        $r5 = null;

        $r6 = null;

        $r7 = null;

        $r8 = null;

        r11 = null;

        goto label19;

     label22:
        r12 := @caughtexception;

        goto label21;

        catch java.lang.ClassNotFoundException from label01 to label02 with label20;
        catch java.lang.ClassNotFoundException from label03 to label04 with label20;
        catch java.lang.ClassNotFoundException from label05 to label06 with label20;
        catch java.lang.ClassNotFoundException from label07 to label08 with label20;
        catch java.lang.ClassNotFoundException from label09 to label10 with label20;
        catch java.lang.ClassNotFoundException from label11 to label12 with label20;
        catch java.lang.ClassNotFoundException from label12 to label13 with label20;
        catch java.lang.ClassNotFoundException from label14 to label15 with label20;
        catch java.lang.ClassNotFoundException from label16 to label17 with label20;
        catch java.lang.ClassNotFoundException from label18 to label19 with label20;
        catch java.lang.NoSuchMethodException from label01 to label02 with label22;
        catch java.lang.NoSuchMethodException from label03 to label04 with label22;
        catch java.lang.NoSuchMethodException from label05 to label06 with label22;
        catch java.lang.NoSuchMethodException from label07 to label08 with label22;
        catch java.lang.NoSuchMethodException from label09 to label10 with label22;
        catch java.lang.NoSuchMethodException from label11 to label12 with label22;
        catch java.lang.NoSuchMethodException from label12 to label13 with label22;
        catch java.lang.NoSuchMethodException from label14 to label15 with label22;
        catch java.lang.NoSuchMethodException from label16 to label17 with label22;
        catch java.lang.NoSuchMethodException from label18 to label19 with label22;
    }
    public void <init>()
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: void <init>()>();

        return;
    }
    private static boolean abortCreation(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.reflect.Method $r1;
        java.lang.Object[] $r2;
        java.lang.Boolean r3;
        boolean $z0;
        java.lang.ReflectiveOperationException r4;
        java.lang.RuntimeException $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAbortCreation>;

        $r2 = newarray (java.lang.Object)[0];

     label1:
        $r0 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r2);

     label2:
        r3 = (java.lang.Boolean) $r0;

     label3:
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z0;

     label5:
        r4 := @caughtexception;

     label6:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r5;

     label7:
        r4 := @caughtexception;

        goto label6;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
    }
    private static boolean addFontFromAssetManager(android.content.Context, java.lang.Object, java.lang.String, int, int, int)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        android.content.res.AssetManager $r5;
        java.lang.Integer $r6;
        java.lang.Boolean $r7;
        boolean $z0;
        java.lang.ReflectiveOperationException r8;
        java.lang.RuntimeException $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $r3 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromAssetManager>;

        $r4 = newarray (java.lang.Object)[8];

     label01:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r4[0] = $r5;

        $r4[1] = $r2;

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label04:
        $r4[2] = $r6;

     label05:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label06:
        $r4[3] = $r7;

     label07:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label08:
        $r4[4] = $r6;

     label09:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label10:
        $r4[5] = $r6;

     label11:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label12:
        $r4[6] = $r6;

        $r4[7] = null;

     label13:
        $r1 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label14:
        $r7 = (java.lang.Boolean) $r1;

     label15:
        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

     label16:
        return $z0;

     label17:
        r8 := @caughtexception;

     label18:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label19:
        r8 := @caughtexception;

        goto label18;

        catch java.lang.IllegalAccessException from label01 to label02 with label17;
        catch java.lang.IllegalAccessException from label03 to label04 with label17;
        catch java.lang.IllegalAccessException from label05 to label06 with label17;
        catch java.lang.IllegalAccessException from label07 to label08 with label17;
        catch java.lang.IllegalAccessException from label09 to label10 with label17;
        catch java.lang.IllegalAccessException from label11 to label12 with label17;
        catch java.lang.IllegalAccessException from label13 to label14 with label17;
        catch java.lang.IllegalAccessException from label15 to label16 with label17;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label19;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label19;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label19;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label19;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label19;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label19;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label19;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label19;
    }
    private static boolean addFontFromBuffer(java.lang.Object, java.nio.ByteBuffer, int, int, int)
    {
        java.lang.Object $r0;
        java.nio.ByteBuffer $r1;
        int $i0, $i1, $i2;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.Boolean r5;
        boolean $z0;
        java.lang.ReflectiveOperationException r6;
        java.lang.RuntimeException $r7;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.nio.ByteBuffer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r2 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromBuffer>;

        $r3 = newarray (java.lang.Object)[5];

        $r3[0] = $r1;

     label01:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label02:
        $r3[1] = $r4;

        $r3[2] = null;

     label03:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label04:
        $r3[3] = $r4;

     label05:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label06:
        $r3[4] = $r4;

     label07:
        $r0 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label08:
        r5 = (java.lang.Boolean) $r0;

     label09:
        $z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        return $z0;

     label11:
        r6 := @caughtexception;

     label12:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r6);

        throw $r7;

     label13:
        r6 := @caughtexception;

        goto label12;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label09 to label10 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label13;
    }
    private static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.lang.Class $r1;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        android.graphics.Typeface $r6;
        java.lang.ReflectiveOperationException r7;
        java.lang.RuntimeException $r8;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Class sFontFamily>;

     label01:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, 1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r2, 0, $r0);

     label02:
        $r3 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = $r2;

     label03:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

     label04:
        $r4[1] = $r5;

     label05:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

     label06:
        $r4[2] = $r5;

     label07:
        $r0 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label08:
        $r6 = (android.graphics.Typeface) $r0;

        return $r6;

     label09:
        r7 := @caughtexception;

     label10:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r7);

        throw $r8;

     label11:
        r7 := @caughtexception;

        goto label10;

        catch java.lang.IllegalAccessException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
    }
    private static boolean freeze(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.reflect.Method $r1;
        java.lang.Object[] $r2;
        java.lang.Boolean r3;
        boolean $z0;
        java.lang.ReflectiveOperationException r4;
        java.lang.RuntimeException $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sFreeze>;

        $r2 = newarray (java.lang.Object)[0];

     label1:
        $r0 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r2);

     label2:
        r3 = (java.lang.Boolean) $r0;

     label3:
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z0;

     label5:
        r4 := @caughtexception;

     label6:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r5;

     label7:
        r4 := @caughtexception;

        goto label6;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
    }
    private static boolean isFontFamilyPrivateAPIAvailable()
    {
        java.lang.reflect.Method $r0;

        $r0 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromAssetManager>;

        if $r0 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TypefaceCompatApi26Impl", "Unable to collect necessary private methods.Fallback to legacy implementation.");

     label1:
        $r0 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method sAddFontFromAssetManager>;

        if $r0 == null goto label2;

        return 1;

     label2:
        return 0;
    }
    private static java.lang.Object newFamily()
    {
        java.lang.Object $r0;
        java.lang.reflect.Constructor $r1;
        java.lang.Object[] $r2;
        java.lang.ReflectiveOperationException r3;
        java.lang.RuntimeException $r4;

        $r1 = <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor sFontFamilyCtor>;

        $r2 = newarray (java.lang.Object)[0];

     label1:
        $r0 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        return $r0;

     label3:
        r3 := @caughtexception;

     label4:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r4;

     label5:
        r3 := @caughtexception;

        goto label4;

     label6:
        r3 := @caughtexception;

        goto label4;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }
    public android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context, android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context $r1;
        android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry $r2;
        android.content.res.Resources $r3;
        int $i0, $i1, $i2;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry r4;
        boolean $z0;
        android.graphics.Typeface $r5;
        java.lang.Object $r6;
        android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] $r7;
        java.lang.String $r8;
        byte $b3;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry;

        $r3 := @parameter2: android.content.res.Resources;

        $i0 := @parameter3: int;

        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>($r1, $r2, $r3, $i0);

        return $r5;

     label1:
        $r6 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        $r7 = virtualinvoke $r2.<android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()>();

        $i0 = lengthof $r7;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label6;

        r4 = $r7[$i1];

        $r8 = virtualinvoke r4.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()>();

        $i2 = virtualinvoke r4.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()>();

        $z0 = virtualinvoke r4.<android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()>();

        if $z0 == 0 goto label4;

        $b3 = 1;

     label3:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int)>($r1, $r6, $r8, 0, $i2, $b3);

        if $z0 != 0 goto label5;

        staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean abortCreation(java.lang.Object)>($r6);

        return null;

     label4:
        $b3 = 0;

        goto label3;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>($r6);

        if $z0 != 0 goto label7;

        return null;

     label7:
        $r5 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>($r6);

        return $r5;
    }
    public android.graphics.Typeface createFromFontInfo(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontsContractCompat$FontInfo[], int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context $r1;
        android.os.CancellationSignal $r2;
        android.support.v4.provider.FontsContractCompat$FontInfo[] $r3;
        int $i0, $i1, $i2, $i3;
        java.io.IOException r4;
        android.support.v4.provider.FontsContractCompat$FontInfo r5;
        boolean $z0;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;
        android.os.ParcelFileDescriptor $r8;
        android.graphics.Typeface$Builder $r9;
        java.io.FileDescriptor $r10;
        android.graphics.Typeface $r11;
        java.lang.Throwable $r12, $r13, $r14;
        java.util.Map $r15;
        java.lang.Object $r16, $r17;
        java.nio.ByteBuffer r18;
        byte $b4;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.CancellationSignal;

        $r3 := @parameter2: android.support.v4.provider.FontsContractCompat$FontInfo[];

        $i0 := @parameter3: int;

        $i1 = lengthof $r3;

        if $i1 >= 1 goto label01;

        return null;

     label01:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z0 != 0 goto label18;

        r5 = virtualinvoke r0.<android.support.v4.graphics.TypefaceCompatApi26Impl: android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int)>($r3, $i0);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        $r7 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        $r8 = virtualinvoke $r6.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>($r7, "r", $r2);

     label03:
        $r9 = new android.graphics.Typeface$Builder;

        $r10 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r9.<android.graphics.Typeface$Builder: void <init>(java.io.FileDescriptor)>($r10);

        $i0 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: int getWeight()>();

        $r9 = virtualinvoke $r9.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setWeight(int)>($i0);

        $z0 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: boolean isItalic()>();

        $r9 = virtualinvoke $r9.<android.graphics.Typeface$Builder: android.graphics.Typeface$Builder setItalic(boolean)>($z0);

        $r11 = virtualinvoke $r9.<android.graphics.Typeface$Builder: android.graphics.Typeface build()>();

     label04:
        if $r8 == null goto label28;

        goto label06;

     label05:
        r4 := @caughtexception;

        return null;

     label06:
        virtualinvoke $r8.<android.os.ParcelFileDescriptor: void close()>();

     label07:
        return $r11;

     label08:
        $r12 := @caughtexception;

     label09:
        throw $r12;

     label10:
        $r13 := @caughtexception;

        if $r8 == null goto label12;

        if $r12 == null goto label16;

     label11:
        virtualinvoke $r8.<android.os.ParcelFileDescriptor: void close()>();

     label12:
        throw $r13;

     label13:
        $r14 := @caughtexception;

     label14:
        virtualinvoke $r12.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label15:
        goto label12;

     label16:
        virtualinvoke $r8.<android.os.ParcelFileDescriptor: void close()>();

     label17:
        goto label12;

     label18:
        $r15 = staticinvoke <android.support.v4.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)>($r1, $r3, $r2);

        $r16 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        $z0 = 0;

        $i0 = lengthof $r3;

        $i1 = 0;

     label19:
        if $i1 >= $i0 goto label25;

        r5 = $r3[$i1];

        $r7 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r18 = (java.nio.ByteBuffer) $r17;

        if r18 != null goto label21;

     label20:
        $i1 = $i1 + 1;

        goto label19;

     label21:
        $i2 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: int getTtcIndex()>();

        $i3 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: int getWeight()>();

        $z0 = virtualinvoke r5.<android.support.v4.provider.FontsContractCompat$FontInfo: boolean isItalic()>();

        if $z0 == 0 goto label23;

        $b4 = 1;

     label22:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)>($r16, r18, $i2, $i3, $b4);

        if $z0 != 0 goto label24;

        staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean abortCreation(java.lang.Object)>($r16);

        return null;

     label23:
        $b4 = 0;

        goto label22;

     label24:
        $z0 = 1;

        goto label20;

     label25:
        if $z0 != 0 goto label26;

        staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean abortCreation(java.lang.Object)>($r16);

        return null;

     label26:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>($r16);

        if $z0 != 0 goto label27;

        return null;

     label27:
        $r11 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>($r16);

     label28:
        return $r11;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label12 to label13 with label05;
        catch java.io.IOException from label14 to label15 with label05;
        catch java.io.IOException from label16 to label17 with label05;
    }
    public android.graphics.Typeface createFromResourcesFontFile(android.content.Context, android.content.res.Resources, int, java.lang.String, int)
    {
        android.support.v4.graphics.TypefaceCompatApi26Impl r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0;
        android.graphics.Typeface $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v4.graphics.TypefaceCompatApi26Impl;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.res.Resources;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        $i1 := @parameter4: int;

        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()>();

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<android.support.v4.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>($r1, $r2, $i0, $r3, $i1);

        return $r4;

     label1:
        $r5 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()>();

        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int)>($r1, $r5, $r3, 0, -1, -1);

        if $z0 != 0 goto label2;

        staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean abortCreation(java.lang.Object)>($r5);

        return null;

     label2:
        $z0 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r4 = staticinvoke <android.support.v4.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>($r5);

        return $r4;
    }
