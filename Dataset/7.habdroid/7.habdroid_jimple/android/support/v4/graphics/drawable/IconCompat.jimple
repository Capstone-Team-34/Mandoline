android.support.v4.graphics.drawable.IconCompat extends java.lang.Object
private static final float ADAPTIVE_ICON_INSET_FACTOR
private static final int AMBIENT_SHADOW_ALPHA
private static final float BLUR_FACTOR
private static final float DEFAULT_VIEW_PORT_SCALE
private static final float ICON_DIAMETER_FACTOR
private static final int KEY_SHADOW_ALPHA
private static final float KEY_SHADOW_OFFSET_FACTOR
private static final int TYPE_ADAPTIVE_BITMAP
private static final int TYPE_BITMAP
private static final int TYPE_DATA
private static final int TYPE_RESOURCE
private static final int TYPE_URI
private int mInt1
private int mInt2
private java.lang.Object mObj1
private final int mType
    private void <init>(int)
    {
        android.support.v4.graphics.drawable.IconCompat r0;
        int $i0;

        r0 := @this: android.support.v4.graphics.drawable.IconCompat;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.graphics.drawable.IconCompat: int mType> = $i0;

        return;
    }
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0, $r6;
        float f0, f1, f2, $f3;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        android.graphics.BitmapShader r3;
        android.graphics.Matrix r4;
        int i0, $i1;
        android.graphics.Bitmap$Config $r5;
        android.graphics.Shader$TileMode $r7, $r8;

        $r0 := @parameter0: android.graphics.Bitmap;

        i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        f1 = (float) i0;

        f1 = 0.6666667F * f1;

        i0 = (int) f1;

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r5);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        r2 = new android.graphics.Paint;

        specialinvoke r2.<android.graphics.Paint: void <init>(int)>(3);

        f1 = (float) i0;

        f1 = f1 * 0.5F;

        f2 = f1 * 0.9166667F;

        f0 = (float) i0;

        f0 = 0.010416667F * f0;

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(0);

        $f3 = (float) i0;

        $f3 = 0.020833334F * $f3;

        virtualinvoke r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f0, 0.0F, $f3, 1023410176);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f1, f2, r2);

        virtualinvoke r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f0, 0.0F, 0.0F, 503316480);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f1, f2, r2);

        virtualinvoke r2.<android.graphics.Paint: void clearShadowLayer()>();

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        r3 = new android.graphics.BitmapShader;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke r3.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r0, $r7, $r8);

        r4 = new android.graphics.Matrix;

        specialinvoke r4.<android.graphics.Matrix: void <init>()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $i1 - i0;

        $i1 = neg $i1;

        $i1 = $i1 / 2;

        f0 = (float) $i1;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        i0 = $i1 - i0;

        i0 = neg i0;

        i0 = i0 / 2;

        $f3 = (float) i0;

        virtualinvoke r4.<android.graphics.Matrix: void setTranslate(float,float)>(f0, $f3);

        virtualinvoke r3.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>(r4);

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r3);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f1, f2, r2);

        virtualinvoke r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return $r6;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;

     label1:
        r1 = new android.support.v4.graphics.drawable.IconCompat;

        specialinvoke r1.<android.support.v4.graphics.drawable.IconCompat: void <init>(int)>(5);

        r1.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;

     label1:
        r1 = new android.support.v4.graphics.drawable.IconCompat;

        specialinvoke r1.<android.support.v4.graphics.drawable.IconCompat: void <init>(int)>(1);

        r1.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;
        android.support.v4.graphics.drawable.IconCompat $r3;

        $r0 := @parameter0: android.net.Uri;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r1;

     label1:
        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r3 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.support.v4.graphics.drawable.IconCompat createWithContentUri(java.lang.String)>($r2);

        return $r3;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    {
        java.lang.String $r0;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r2;

     label1:
        r1 = new android.support.v4.graphics.drawable.IconCompat;

        specialinvoke r1.<android.support.v4.graphics.drawable.IconCompat: void <init>(int)>(4);

        r1.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithData(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Data must not be null.");

        throw $r2;

     label1:
        r1 = new android.support.v4.graphics.drawable.IconCompat;

        specialinvoke r1.<android.support.v4.graphics.drawable.IconCompat: void <init>(int)>(3);

        r1.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        r1.<android.support.v4.graphics.drawable.IconCompat: int mInt1> = $i0;

        r1.<android.support.v4.graphics.drawable.IconCompat: int mInt2> = $i1;

        return r1;
    }
    public static android.support.v4.graphics.drawable.IconCompat createWithResource(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.support.v4.graphics.drawable.IconCompat r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null.");

        throw $r2;

     label1:
        r1 = new android.support.v4.graphics.drawable.IconCompat;

        specialinvoke r1.<android.support.v4.graphics.drawable.IconCompat: void <init>(int)>(2);

        r1.<android.support.v4.graphics.drawable.IconCompat: int mInt1> = $i0;

        r1.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return r1;
    }
    public void addToShortcutIntent(android.content.Intent)
    {
        android.support.v4.graphics.drawable.IconCompat r0;
        android.content.Intent $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4;
        android.content.Context $r5;
        android.content.Intent$ShortcutIconResource $r6;

        r0 := @this: android.support.v4.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Intent;

        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mType>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon type not supported for intent shortcuts");

        throw $r2;

     label2:
        $r3 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (android.graphics.Bitmap) $r3;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON", $r4);

        return;

     label3:
        $r3 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (android.graphics.Bitmap) $r3;

        $r4 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap)>($r4);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON", $r4);

        return;

     label4:
        $r3 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (android.content.Context) $r3;

        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mInt1>;

        $r6 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r5, $i0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r6);

        return;
    }
    public android.graphics.drawable.Icon toIcon()
    {
        android.support.v4.graphics.drawable.IconCompat r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        android.graphics.Bitmap $r3;
        android.graphics.drawable.Icon $r4;
        android.content.Context $r5;
        byte[] $r6;
        java.lang.String $r7;

        r0 := @this: android.support.v4.graphics.drawable.IconCompat;

        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mType>;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown type");

        throw $r1;

     label2:
        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (android.graphics.Bitmap) $r2;

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r3);

        return $r4;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label4;

        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (android.graphics.Bitmap) $r2;

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>($r3);

        return $r4;

     label4:
        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (android.graphics.Bitmap) $r2;

        $r3 = staticinvoke <android.support.v4.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap)>($r3);

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r3);

        return $r4;

     label5:
        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (android.content.Context) $r2;

        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mInt1>;

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>($r5, $i0);

        return $r4;

     label6:
        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (byte[]) $r2;

        $i1 = r0.<android.support.v4.graphics.drawable.IconCompat: int mInt1>;

        $i0 = r0.<android.support.v4.graphics.drawable.IconCompat: int mInt2>;

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>($r6, $i1, $i0);

        return $r4;

     label7:
        $r2 = r0.<android.support.v4.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r7 = (java.lang.String) $r2;

        $r4 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>($r7);

        return $r4;
    }
