android.support.transition.Slide$5 extends android.support.transition.Slide$CalculateSlideHorizontal
    void <init>()
    {
        android.support.transition.Slide$5 r0;

        r0 := @this: android.support.transition.Slide$5;

        specialinvoke r0.<android.support.transition.Slide$CalculateSlideHorizontal: void <init>(android.support.transition.Slide$1)>(null);

        return;
    }
    public float getGoneX(android.view.ViewGroup, android.view.View)
    {
        android.support.transition.Slide$5 r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        boolean z0;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.support.transition.Slide$5;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        z0 = 1;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r1);

        if $i0 != 1 goto label2;

     label1:
        if z0 == 0 goto label3;

        $f0 = virtualinvoke $r2.<android.view.View: float getTranslationX()>();

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        return $f0;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $f0 = virtualinvoke $r2.<android.view.View: float getTranslationX()>();

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 + $f1;

        return $f0;
    }
