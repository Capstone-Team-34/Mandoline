android.support.transition.ChangeTransform extends android.support.transition.Transition
private static final android.util.Property NON_TRANSLATIONS_PROPERTY
private static final java.lang.String PROPNAME_INTERMEDIATE_MATRIX
private static final java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX
private static final java.lang.String PROPNAME_MATRIX
private static final java.lang.String PROPNAME_PARENT
private static final java.lang.String PROPNAME_PARENT_MATRIX
private static final java.lang.String PROPNAME_TRANSFORMS
private static final boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION
private static final android.util.Property TRANSLATIONS_PROPERTY
private static final java.lang.String[] sTransitionProperties
private boolean mReparent
private android.graphics.Matrix mTempMatrix
private boolean mUseOverlay
    static void <clinit>()
    {
        boolean $z0;
        java.lang.String[] $r0;
        android.support.transition.ChangeTransform$1 $r1;
        android.support.transition.ChangeTransform$2 $r2;
        int $i0;

        $z0 = 1;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "android:changeTransform:matrix";

        $r0[1] = "android:changeTransform:transforms";

        $r0[2] = "android:changeTransform:parentMatrix";

        <android.support.transition.ChangeTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.support.transition.ChangeTransform$1;

        specialinvoke $r1.<android.support.transition.ChangeTransform$1: void <init>(java.lang.Class,java.lang.String)>(class "[F", "nonTranslations");

        <android.support.transition.ChangeTransform: android.util.Property NON_TRANSLATIONS_PROPERTY> = $r1;

        $r2 = new android.support.transition.ChangeTransform$2;

        specialinvoke $r2.<android.support.transition.ChangeTransform$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "translations");

        <android.support.transition.ChangeTransform: android.util.Property TRANSLATIONS_PROPERTY> = $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

     label1:
        <android.support.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>()
    {
        android.support.transition.ChangeTransform r0;
        android.graphics.Matrix $r1;

        r0 := @this: android.support.transition.ChangeTransform;

        specialinvoke r0.<android.support.transition.Transition: void <init>()>();

        r0.<android.support.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.support.transition.ChangeTransform: boolean mReparent> = 1;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r1;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.ChangeTransform r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Matrix $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        org.xmlpull.v1.XmlPullParser $r6;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<android.support.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.support.transition.ChangeTransform: boolean mReparent> = 1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r3;

        $r4 = <android.support.transition.Styleable: int[] CHANGE_TRANSFORM>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r4);

        $r6 = (org.xmlpull.v1.XmlPullParser) $r2;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>($r5, $r6, "reparentWithOverlay", 1, 1);

        r0.<android.support.transition.ChangeTransform: boolean mUseOverlay> = $z0;

        $r6 = (org.xmlpull.v1.XmlPullParser) $r2;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>($r5, $r6, "reparent", 0, 1);

        r0.<android.support.transition.ChangeTransform: boolean mReparent> = $z0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    static boolean access$000(android.support.transition.ChangeTransform)
    {
        android.support.transition.ChangeTransform $r0;
        boolean z0;

        $r0 := @parameter0: android.support.transition.ChangeTransform;

        z0 = $r0.<android.support.transition.ChangeTransform: boolean mUseOverlay>;

        return z0;
    }
    static void access$100(android.view.View)
    {
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        staticinvoke <android.support.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>($r0);

        return;
    }
    static void access$200(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $f4 := @parameter5: float;

        $f5 := @parameter6: float;

        $f6 := @parameter7: float;

        $f7 := @parameter8: float;

        staticinvoke <android.support.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>($r0, $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7);

        return;
    }
    private void captureValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.support.transition.TransitionValues $r1;
        android.graphics.Matrix r2, $r7;
        android.support.transition.ChangeTransform$Transforms r3;
        android.view.View r4;
        int $i0;
        java.util.Map $r5;
        android.view.ViewParent $r6;
        boolean $z0;
        android.view.ViewGroup r8;
        float $f0, $f1;
        java.lang.Object $r9;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        r4 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $i0 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        return;

     label1:
        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r6 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parent", $r6);

        r3 = new android.support.transition.ChangeTransform$Transforms;

        specialinvoke r3.<android.support.transition.ChangeTransform$Transforms: void <init>(android.view.View)>(r4);

        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:transforms", r3);

        $r7 = virtualinvoke r4.<android.view.View: android.graphics.Matrix getMatrix()>();

        if $r7 == null goto label2;

        $z0 = virtualinvoke $r7.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label4;

     label2:
        r2 = null;

     label3:
        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r2);

        $z0 = r0.<android.support.transition.ChangeTransform: boolean mReparent>;

        if $z0 == 0 goto label5;

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        $r6 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        r8 = (android.view.ViewGroup) $r6;

        staticinvoke <android.support.transition.ViewUtils: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>(r8, r2);

        $i0 = virtualinvoke r8.<android.view.ViewGroup: int getScrollX()>();

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = virtualinvoke r8.<android.view.ViewGroup: int getScrollY()>();

        $i0 = neg $i0;

        $f1 = (float) $i0;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", r2);

        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $i0 = <android.support.transition.R$id: int transition_transform>;

        $r9 = virtualinvoke r4.<android.view.View: java.lang.Object getTag(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateMatrix", $r9);

        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $i0 = <android.support.transition.R$id: int parent_matrix>;

        $r9 = virtualinvoke r4.<android.view.View: java.lang.Object getTag(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateParentMatrix", $r9);

        return;

     label4:
        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r7);

        goto label3;

     label5:
        return;
    }
    private void createGhostView(android.view.ViewGroup, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.view.ViewGroup $r1;
        android.support.transition.TransitionValues $r2, $r3;
        android.support.transition.ChangeTransform$GhostListener r4;
        android.graphics.Matrix r5, r9;
        android.view.View r6, $r11, $r14;
        java.util.Map $r7;
        java.lang.Object $r8;
        android.support.transition.GhostViewImpl $r10;
        android.support.transition.Transition r12;
        android.support.transition.TransitionSet $r13;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        r6 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        $r7 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r9 = (android.graphics.Matrix) $r8;

        r5 = new android.graphics.Matrix;

        specialinvoke r5.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r9);

        staticinvoke <android.support.transition.ViewUtils: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>($r1, r5);

        $r10 = staticinvoke <android.support.transition.GhostViewUtils: android.support.transition.GhostViewImpl addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>(r6, $r1, r5);

        if $r10 != null goto label1;

        return;

     label1:
        $r7 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        $r1 = (android.view.ViewGroup) $r8;

        $r11 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        interfaceinvoke $r10.<android.support.transition.GhostViewImpl: void reserveEndViewTransition(android.view.ViewGroup,android.view.View)>($r1, $r11);

        r12 = r0;

     label2:
        $r13 = r12.<android.support.transition.Transition: android.support.transition.TransitionSet mParent>;

        if $r13 == null goto label3;

        r12 = r12.<android.support.transition.Transition: android.support.transition.TransitionSet mParent>;

        goto label2;

     label3:
        r4 = new android.support.transition.ChangeTransform$GhostListener;

        specialinvoke r4.<android.support.transition.ChangeTransform$GhostListener: void <init>(android.view.View,android.support.transition.GhostViewImpl)>(r6, $r10);

        virtualinvoke r12.<android.support.transition.Transition: android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener)>(r4);

        $z0 = <android.support.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>;

        if $z0 == 0 goto label5;

        $r11 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        $r14 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        if $r11 == $r14 goto label4;

        $r11 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>($r11, 0.0F);

     label4:
        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>(r6, 1.0F);

     label5:
        return;
    }
    private android.animation.ObjectAnimator createTransformAnimator(android.support.transition.TransitionValues, android.support.transition.TransitionValues, boolean)
    {
        android.support.transition.ChangeTransform r0;
        android.support.transition.TransitionValues $r1, $r2;
        boolean $z0, $z1;
        android.support.transition.ChangeTransform$3 r3;
        android.view.View r4;
        android.support.transition.ChangeTransform$PathAnimatorMatrix r5;
        float[] r6, r7, $r15;
        java.util.Map $r8;
        java.lang.Object $r9;
        android.graphics.Matrix r10, r11;
        android.support.transition.ChangeTransform$Transforms r12;
        android.util.Property $r13;
        android.support.transition.FloatArrayEvaluator $r14;
        float[][] $r16;
        android.animation.PropertyValuesHolder $r17, $r20;
        android.support.transition.PathMotion $r18;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path $r19;
        android.animation.PropertyValuesHolder[] $r21;
        android.animation.ObjectAnimator $r22;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $z0 := @parameter2: boolean;

        $r8 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r10 = (android.graphics.Matrix) $r9;

        $r8 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r11 = (android.graphics.Matrix) $r9;

        if r10 != null goto label1;

        r10 = <android.support.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label1:
        if r11 != null goto label2;

        r11 = <android.support.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label2:
        $z1 = virtualinvoke r10.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label3;

        return null;

     label3:
        $r8 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:transforms");

        r12 = (android.support.transition.ChangeTransform$Transforms) $r9;

        r4 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        staticinvoke <android.support.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>(r4);

        r7 = newarray (float)[9];

        virtualinvoke r10.<android.graphics.Matrix: void getValues(float[])>(r7);

        r6 = newarray (float)[9];

        virtualinvoke r11.<android.graphics.Matrix: void getValues(float[])>(r6);

        r5 = new android.support.transition.ChangeTransform$PathAnimatorMatrix;

        specialinvoke r5.<android.support.transition.ChangeTransform$PathAnimatorMatrix: void <init>(android.view.View,float[])>(r4, r7);

        $r13 = <android.support.transition.ChangeTransform: android.util.Property NON_TRANSLATIONS_PROPERTY>;

        $r14 = new android.support.transition.FloatArrayEvaluator;

        $r15 = newarray (float)[9];

        specialinvoke $r14.<android.support.transition.FloatArrayEvaluator: void <init>(float[])>($r15);

        $r16 = newarray (float[])[2];

        $r16[0] = r7;

        $r16[1] = r6;

        $r17 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r13, $r14, $r16);

        $r18 = virtualinvoke r0.<android.support.transition.ChangeTransform: android.support.transition.PathMotion getPathMotion()>();

        $f0 = r7[2];

        $f1 = r7[5];

        $f2 = r6[2];

        $f3 = r6[5];

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r13 = <android.support.transition.ChangeTransform: android.util.Property TRANSLATIONS_PROPERTY>;

        $r20 = staticinvoke <android.support.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)>($r13, $r19);

        $r21 = newarray (android.animation.PropertyValuesHolder)[2];

        $r21[0] = $r17;

        $r21[1] = $r20;

        $r22 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r5, $r21);

        r3 = new android.support.transition.ChangeTransform$3;

        specialinvoke r3.<android.support.transition.ChangeTransform$3: void <init>(android.support.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.support.transition.ChangeTransform$Transforms,android.support.transition.ChangeTransform$PathAnimatorMatrix)>(r0, $z0, r11, r4, r12, r5);

        virtualinvoke $r22.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r3);

        staticinvoke <android.support.transition.AnimatorUtils: void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)>($r22, r3);

        return $r22;
    }
    private boolean parentsMatch(android.view.ViewGroup, android.view.ViewGroup)
    {
        android.support.transition.ChangeTransform r0;
        android.view.ViewGroup $r1, $r2;
        boolean $z0;
        android.support.transition.TransitionValues $r3;
        android.view.View $r4;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.ViewGroup;

        $z0 = virtualinvoke r0.<android.support.transition.ChangeTransform: boolean isValidTarget(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<android.support.transition.ChangeTransform: boolean isValidTarget(android.view.View)>($r2);

        if $z0 != 0 goto label3;

     label1:
        if $r1 != $r2 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r3 = virtualinvoke r0.<android.support.transition.ChangeTransform: android.support.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>($r1, 1);

        if $r3 == null goto label5;

        $r4 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        if $r2 != $r4 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        return 0;
    }
    private static void setIdentityTransforms(android.view.View)
    {
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        staticinvoke <android.support.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>($r0, 0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        return;
    }
    private void setMatricesForParent(android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.support.transition.TransitionValues $r1, $r2;
        android.graphics.Matrix r3, r6, r8;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.view.View $r7;
        int $i0;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r6 = (android.graphics.Matrix) $r5;

        $r7 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        $i0 = <android.support.transition.R$id: int parent_matrix>;

        virtualinvoke $r7.<android.view.View: void setTag(int,java.lang.Object)>($i0, r6);

        r3 = r0.<android.support.transition.ChangeTransform: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r3.<android.graphics.Matrix: void reset()>();

        virtualinvoke r6.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r3);

        $r4 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r6 = (android.graphics.Matrix) $r5;

        if r6 != null goto label1;

        r6 = new android.graphics.Matrix;

        specialinvoke r6.<android.graphics.Matrix: void <init>()>();

        $r4 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r6);

     label1:
        $r4 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r8 = (android.graphics.Matrix) $r5;

        virtualinvoke r6.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r8);

        virtualinvoke r6.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r3);

        return;
    }
    private static void setTransforms(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $f4 := @parameter5: float;

        $f5 := @parameter6: float;

        $f6 := @parameter7: float;

        $f7 := @parameter8: float;

        virtualinvoke $r0.<android.view.View: void setTranslationX(float)>($f0);

        virtualinvoke $r0.<android.view.View: void setTranslationY(float)>($f1);

        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationZ(android.view.View,float)>($r0, $f2);

        virtualinvoke $r0.<android.view.View: void setScaleX(float)>($f3);

        virtualinvoke $r0.<android.view.View: void setScaleY(float)>($f4);

        virtualinvoke $r0.<android.view.View: void setRotationX(float)>($f5);

        virtualinvoke $r0.<android.view.View: void setRotationY(float)>($f6);

        virtualinvoke $r0.<android.view.View: void setRotation(float)>($f7);

        return;
    }
    public void captureEndValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeTransform: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.support.transition.TransitionValues $r1;
        android.view.View $r2;
        android.view.ViewParent $r3;
        boolean $z0;
        android.view.ViewGroup $r4;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeTransform: void captureValues(android.support.transition.TransitionValues)>($r1);

        $z0 = <android.support.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>;

        if $z0 != 0 goto label1;

        $r2 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        $r4 = (android.view.ViewGroup) $r3;

        $r2 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        virtualinvoke $r4.<android.view.ViewGroup: void startViewTransition(android.view.View)>($r2);

     label1:
        return;
    }
    public android.animation.Animator createAnimator(android.view.ViewGroup, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeTransform r0;
        android.view.ViewGroup $r1, r6, r7;
        android.support.transition.TransitionValues $r2, $r3;
        java.util.Map $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.graphics.Matrix r8;
        android.animation.ObjectAnimator $r9;
        android.view.View $r10;

        r0 := @this: android.support.transition.ChangeTransform;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        if $r2 == null goto label1;

        if $r3 == null goto label1;

        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z0 == 0 goto label1;

        $r4 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r6 = (android.view.ViewGroup) $r5;

        $r4 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r7 = (android.view.ViewGroup) $r5;

        $z0 = r0.<android.support.transition.ChangeTransform: boolean mReparent>;

        if $z0 == 0 goto label7;

        $z0 = specialinvoke r0.<android.support.transition.ChangeTransform: boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup)>(r6, r7);

        if $z0 != 0 goto label7;

        $z0 = 1;

     label3:
        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateMatrix");

        r8 = (android.graphics.Matrix) $r5;

        if r8 == null goto label4;

        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r8);

     label4:
        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateParentMatrix");

        r8 = (android.graphics.Matrix) $r5;

        if r8 == null goto label5;

        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", r8);

     label5:
        if $z0 == 0 goto label6;

        specialinvoke r0.<android.support.transition.ChangeTransform: void setMatricesForParent(android.support.transition.TransitionValues,android.support.transition.TransitionValues)>($r2, $r3);

     label6:
        $r9 = specialinvoke r0.<android.support.transition.ChangeTransform: android.animation.ObjectAnimator createTransformAnimator(android.support.transition.TransitionValues,android.support.transition.TransitionValues,boolean)>($r2, $r3, $z0);

        if $z0 == 0 goto label8;

        if $r9 == null goto label8;

        $z0 = r0.<android.support.transition.ChangeTransform: boolean mUseOverlay>;

        if $z0 == 0 goto label8;

        specialinvoke r0.<android.support.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)>($r1, $r2, $r3);

        return $r9;

     label7:
        $z0 = 0;

        goto label3;

     label8:
        $z0 = <android.support.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>;

        if $z0 != 0 goto label9;

        $r10 = $r2.<android.support.transition.TransitionValues: android.view.View view>;

        virtualinvoke r6.<android.view.ViewGroup: void endViewTransition(android.view.View)>($r10);

     label9:
        return $r9;
    }
    public boolean getReparent()
    {
        android.support.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.support.transition.ChangeTransform;

        z0 = r0.<android.support.transition.ChangeTransform: boolean mReparent>;

        return z0;
    }
    public boolean getReparentWithOverlay()
    {
        android.support.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.support.transition.ChangeTransform;

        z0 = r0.<android.support.transition.ChangeTransform: boolean mUseOverlay>;

        return z0;
    }
    public java.lang.String[] getTransitionProperties()
    {
        android.support.transition.ChangeTransform r0;
        java.lang.String[] r1;

        r0 := @this: android.support.transition.ChangeTransform;

        r1 = <android.support.transition.ChangeTransform: java.lang.String[] sTransitionProperties>;

        return r1;
    }
    public void setReparent(boolean)
    {
        android.support.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeTransform;

        $z0 := @parameter0: boolean;

        r0.<android.support.transition.ChangeTransform: boolean mReparent> = $z0;

        return;
    }
    public void setReparentWithOverlay(boolean)
    {
        android.support.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeTransform;

        $z0 := @parameter0: boolean;

        r0.<android.support.transition.ChangeTransform: boolean mUseOverlay> = $z0;

        return;
    }
