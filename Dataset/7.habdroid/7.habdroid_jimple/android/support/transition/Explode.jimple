android.support.transition.Explode extends android.support.transition.Visibility
private static final java.lang.String PROPNAME_SCREEN_BOUNDS
private static final android.animation.TimeInterpolator sAccelerate
private static final android.animation.TimeInterpolator sDecelerate
private int[] mTempLoc
    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.support.transition.Explode: android.animation.TimeInterpolator sDecelerate> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <android.support.transition.Explode: android.animation.TimeInterpolator sAccelerate> = $r1;

        return;
    }
    public void <init>()
    {
        android.support.transition.Explode r0;
        int[] $r1;
        android.support.transition.CircularPropagation $r2;

        r0 := @this: android.support.transition.Explode;

        specialinvoke r0.<android.support.transition.Visibility: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.support.transition.Explode: int[] mTempLoc> = $r1;

        $r2 = new android.support.transition.CircularPropagation;

        specialinvoke $r2.<android.support.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.support.transition.Explode: void setPropagation(android.support.transition.TransitionPropagation)>($r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.Explode r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.support.transition.CircularPropagation $r4;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = newarray (int)[2];

        r0.<android.support.transition.Explode: int[] mTempLoc> = $r3;

        $r4 = new android.support.transition.CircularPropagation;

        specialinvoke $r4.<android.support.transition.CircularPropagation: void <init>()>();

        virtualinvoke r0.<android.support.transition.Explode: void setPropagation(android.support.transition.TransitionPropagation)>($r4);

        return;
    }
    private static float calculateDistance(float, float)
    {
        float $f0, $f1;
        double $d0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }
    private static float calculateMaxDistance(android.view.View, int, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2;
        float $f0, $f1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i2 = $i2 - $i0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        $i2 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $i2 = $i2 - $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $f1 = (float) $i0;

        $f0 = (float) $i1;

        $f0 = staticinvoke <android.support.transition.Explode: float calculateDistance(float,float)>($f1, $f0);

        return $f0;
    }
    private void calculateOut(android.view.View, android.graphics.Rect, int[])
    {
        android.support.transition.Explode r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r5;
        int[] $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        float $f0, f1, $f2;
        byte $b6;
        double $d0;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 := @parameter2: int[];

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        virtualinvoke $r1.<android.view.View: void getLocationOnScreen(int[])>($r4);

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i0 = $r4[0];

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i1 = $r4[1];

        $r5 = virtualinvoke r0.<android.support.transition.Explode: android.graphics.Rect getEpicenter()>();

        if $r5 != null goto label3;

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i2 / 2;

        $i2 = $i2 + i0;

        $f0 = virtualinvoke $r1.<android.view.View: float getTranslationX()>();

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i3 = $i3 / 2;

        $i3 = $i3 + i1;

        $f0 = virtualinvoke $r1.<android.view.View: float getTranslationY()>();

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = $i3 + $i4;

     label1:
        $i5 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $i4 = virtualinvoke $r2.<android.graphics.Rect: int centerY()>();

        $i5 = $i5 - $i2;

        $f0 = (float) $i5;

        $i4 = $i4 - $i3;

        f1 = (float) $i4;

        $b6 = $f0 cmpl 0.0F;

        if $b6 != 0 goto label2;

        $b6 = f1 cmpl 0.0F;

        if $b6 != 0 goto label2;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 2.0;

        $f0 = (float) $d0;

        $f0 = $f0 - 1.0F;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 2.0;

        f1 = (float) $d0;

        f1 = f1 - 1.0F;

     label2:
        $f2 = staticinvoke <android.support.transition.Explode: float calculateDistance(float,float)>($f0, f1);

        $f0 = $f0 / $f2;

        f1 = f1 / $f2;

        i0 = $i2 - i0;

        i1 = $i3 - i1;

        $f2 = staticinvoke <android.support.transition.Explode: float calculateMaxDistance(android.view.View,int,int)>($r1, i0, i1);

        $f0 = $f2 * $f0;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r3[0] = i1;

        $f0 = $f2 * f1;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r3[1] = i1;

        return;

     label3:
        $i2 = virtualinvoke $r5.<android.graphics.Rect: int centerX()>();

        $i3 = virtualinvoke $r5.<android.graphics.Rect: int centerY()>();

        goto label1;
    }
    private void captureValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues $r1;
        int i0, i1, i2, i3;
        android.view.View r2;
        android.graphics.Rect $r3;
        int[] $r4;
        java.util.Map $r5;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        r2 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        virtualinvoke r2.<android.view.View: void getLocationOnScreen(int[])>($r4);

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i1 = $r4[0];

        $r4 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        i3 = $r4[1];

        i2 = virtualinvoke r2.<android.view.View: int getWidth()>();

        i2 = i1 + i2;

        i0 = virtualinvoke r2.<android.view.View: int getHeight()>();

        i0 = i3 + i0;

        $r5 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>(i1, i3, i2, i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:explode:screenBounds", $r3);

        return;
    }
    public void captureEndValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.Visibility: void captureEndValues(android.support.transition.TransitionValues)>($r1);

        specialinvoke r0.<android.support.transition.Explode: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.Visibility: void captureStartValues(android.support.transition.TransitionValues)>($r1);

        specialinvoke r0.<android.support.transition.Explode: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public android.animation.Animator onAppear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        android.support.transition.TransitionValues $r3, $r4;
        int $i0, $i1;
        float f0, f1, $f2, $f3;
        android.animation.TimeInterpolator $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        android.graphics.Rect r8;
        int[] $r9;
        android.animation.Animator $r10;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        $r4 := @parameter3: android.support.transition.TransitionValues;

        if $r4 != null goto label1;

        return null;

     label1:
        $r6 = $r4.<android.support.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r8 = (android.graphics.Rect) $r7;

        $f2 = virtualinvoke $r2.<android.view.View: float getTranslationX()>();

        $f3 = virtualinvoke $r2.<android.view.View: float getTranslationY()>();

        $r9 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.support.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>($r1, r8, $r9);

        $r9 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i0 = $r9[0];

        f0 = (float) $i0;

        f0 = $f2 + f0;

        $r9 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i0 = $r9[1];

        f1 = (float) $i0;

        f1 = $f3 + f1;

        $i0 = r8.<android.graphics.Rect: int left>;

        $i1 = r8.<android.graphics.Rect: int top>;

        $r5 = <android.support.transition.Explode: android.animation.TimeInterpolator sDecelerate>;

        $r10 = staticinvoke <android.support.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)>($r2, $r4, $i0, $i1, f0, f1, $f2, $f3, $r5);

        return $r10;
    }
    public android.animation.Animator onDisappear(android.view.ViewGroup, android.view.View, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.Explode r0;
        android.view.ViewGroup $r1;
        android.view.View $r2, $r9;
        android.support.transition.TransitionValues $r3, $r4;
        int i0, i1, $i2, $i3;
        android.animation.TimeInterpolator $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        android.graphics.Rect r8;
        float $f0, $f1, f2, f3, $f4;
        int[] $r10;
        android.animation.Animator $r11;

        r0 := @this: android.support.transition.Explode;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        $r4 := @parameter3: android.support.transition.TransitionValues;

        if $r3 != null goto label1;

        return null;

     label1:
        $r6 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:explode:screenBounds");

        r8 = (android.graphics.Rect) $r7;

        i0 = r8.<android.graphics.Rect: int left>;

        i1 = r8.<android.graphics.Rect: int top>;

        $f0 = virtualinvoke $r2.<android.view.View: float getTranslationX()>();

        $f1 = virtualinvoke $r2.<android.view.View: float getTranslationY()>();

        f2 = $f0;

        f3 = $f1;

        $r9 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        $i2 = <android.support.transition.R$id: int transition_position>;

        $r7 = virtualinvoke $r9.<android.view.View: java.lang.Object getTag(int)>($i2);

        $r10 = (int[]) $r7;

        if $r10 == null goto label2;

        $i2 = $r10[0];

        $i3 = r8.<android.graphics.Rect: int left>;

        $i2 = $i2 - $i3;

        f3 = (float) $i2;

        f2 = $f0 + f3;

        $i2 = $r10[1];

        $i3 = r8.<android.graphics.Rect: int top>;

        $i2 = $i2 - $i3;

        f3 = (float) $i2;

        f3 = $f1 + f3;

        $i2 = $r10[0];

        $i3 = $r10[1];

        virtualinvoke r8.<android.graphics.Rect: void offsetTo(int,int)>($i2, $i3);

     label2:
        $r10 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        specialinvoke r0.<android.support.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>($r1, r8, $r10);

        $r10 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i2 = $r10[0];

        $f4 = (float) $i2;

        f2 = f2 + $f4;

        $r10 = r0.<android.support.transition.Explode: int[] mTempLoc>;

        $i2 = $r10[1];

        $f4 = (float) $i2;

        f3 = f3 + $f4;

        $r5 = <android.support.transition.Explode: android.animation.TimeInterpolator sAccelerate>;

        $r11 = staticinvoke <android.support.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)>($r2, $r3, i0, i1, $f0, $f1, f2, f3, $r5);

        return $r11;
    }
