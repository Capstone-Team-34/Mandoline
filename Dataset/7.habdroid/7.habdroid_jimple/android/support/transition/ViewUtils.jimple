android.support.transition.ViewUtils extends java.lang.Object
static final android.util.Property CLIP_BOUNDS
private static final android.support.transition.ViewUtilsImpl IMPL
private static final java.lang.String TAG
static final android.util.Property TRANSITION_ALPHA
private static final int VISIBILITY_MASK
private static java.lang.reflect.Field sViewFlagsField
private static boolean sViewFlagsFieldFetched
    static void <clinit>()
    {
        int $i0;
        android.support.transition.ViewUtilsApi22 $r0;
        android.support.transition.ViewUtils$1 $r1;
        android.support.transition.ViewUtils$2 $r2;
        android.support.transition.ViewUtilsApi21 $r3;
        android.support.transition.ViewUtilsApi19 $r4;
        android.support.transition.ViewUtilsApi18 $r5;
        android.support.transition.ViewUtilsApi14 $r6;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 22 goto label2;

        $r0 = new android.support.transition.ViewUtilsApi22;

        specialinvoke $r0.<android.support.transition.ViewUtilsApi22: void <init>()>();

        <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL> = $r0;

     label1:
        $r1 = new android.support.transition.ViewUtils$1;

        specialinvoke $r1.<android.support.transition.ViewUtils$1: void <init>(java.lang.Class,java.lang.String)>(class "Ljava/lang/Float;", "translationAlpha");

        <android.support.transition.ViewUtils: android.util.Property TRANSITION_ALPHA> = $r1;

        $r2 = new android.support.transition.ViewUtils$2;

        specialinvoke $r2.<android.support.transition.ViewUtils$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/Rect;", "clipBounds");

        <android.support.transition.ViewUtils: android.util.Property CLIP_BOUNDS> = $r2;

        return;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r3 = new android.support.transition.ViewUtilsApi21;

        specialinvoke $r3.<android.support.transition.ViewUtilsApi21: void <init>()>();

        <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL> = $r3;

        goto label1;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label4;

        $r4 = new android.support.transition.ViewUtilsApi19;

        specialinvoke $r4.<android.support.transition.ViewUtilsApi19: void <init>()>();

        <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL> = $r4;

        goto label1;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label5;

        $r5 = new android.support.transition.ViewUtilsApi18;

        specialinvoke $r5.<android.support.transition.ViewUtilsApi18: void <init>()>();

        <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL> = $r5;

        goto label1;

     label5:
        $r6 = new android.support.transition.ViewUtilsApi14;

        specialinvoke $r6.<android.support.transition.ViewUtilsApi14: void <init>()>();

        <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL> = $r6;

        goto label1;
    }
    void <init>()
    {
        android.support.transition.ViewUtils r0;

        r0 := @this: android.support.transition.ViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static void clearNonTransitionAlpha(android.view.View)
    {
        android.view.View $r0;
        android.support.transition.ViewUtilsImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r1.<android.support.transition.ViewUtilsImpl: void clearNonTransitionAlpha(android.view.View)>($r0);

        return;
    }
    private static void fetchViewFlagsField()
    {
        java.lang.NoSuchFieldException r0;
        java.lang.reflect.Field $r1;
        boolean $z0;
        java.lang.Class $r2;

        $z0 = <android.support.transition.ViewUtils: boolean sViewFlagsFieldFetched>;

        if $z0 != 0 goto label6;

        $r2 = class "Landroid/view/View;";

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mViewFlags");

     label2:
        <android.support.transition.ViewUtils: java.lang.reflect.Field sViewFlagsField> = $r1;

        $r1 = <android.support.transition.ViewUtils: java.lang.reflect.Field sViewFlagsField>;

     label3:
        virtualinvoke $r1.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label4:
        <android.support.transition.ViewUtils: boolean sViewFlagsFieldFetched> = 1;

        return;

     label5:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewUtils", "fetchViewFlagsField: ");

        goto label4;

     label6:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label5;
    }
    static android.support.transition.ViewOverlayImpl getOverlay(android.view.View)
    {
        android.view.View $r0;
        android.support.transition.ViewOverlayImpl $r1;
        android.support.transition.ViewUtilsImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        $r1 = interfaceinvoke $r2.<android.support.transition.ViewUtilsImpl: android.support.transition.ViewOverlayImpl getOverlay(android.view.View)>($r0);

        return $r1;
    }
    static float getTransitionAlpha(android.view.View)
    {
        android.view.View $r0;
        float $f0;
        android.support.transition.ViewUtilsImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        $f0 = interfaceinvoke $r1.<android.support.transition.ViewUtilsImpl: float getTransitionAlpha(android.view.View)>($r0);

        return $f0;
    }
    static android.support.transition.WindowIdImpl getWindowId(android.view.View)
    {
        android.view.View $r0;
        android.support.transition.WindowIdImpl $r1;
        android.support.transition.ViewUtilsImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r2 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        $r1 = interfaceinvoke $r2.<android.support.transition.ViewUtilsImpl: android.support.transition.WindowIdImpl getWindowId(android.view.View)>($r0);

        return $r1;
    }
    static void saveNonTransitionAlpha(android.view.View)
    {
        android.view.View $r0;
        android.support.transition.ViewUtilsImpl $r1;

        $r0 := @parameter0: android.view.View;

        $r1 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r1.<android.support.transition.ViewUtilsImpl: void saveNonTransitionAlpha(android.view.View)>($r0);

        return;
    }
    static void setAnimationMatrix(android.view.View, android.graphics.Matrix)
    {
        android.view.View $r0;
        android.graphics.Matrix $r1;
        android.support.transition.ViewUtilsImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Matrix;

        $r2 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r2.<android.support.transition.ViewUtilsImpl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)>($r0, $r1);

        return;
    }
    static void setLeftTopRightBottom(android.view.View, int, int, int, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3;
        android.support.transition.ViewUtilsImpl $r1;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r1.<android.support.transition.ViewUtilsImpl: void setLeftTopRightBottom(android.view.View,int,int,int,int)>($r0, $i0, $i1, $i2, $i3);

        return;
    }
    static void setTransitionAlpha(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.support.transition.ViewUtilsImpl $r1;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $r1 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r1.<android.support.transition.ViewUtilsImpl: void setTransitionAlpha(android.view.View,float)>($r0, $f0);

        return;
    }
    static void setTransitionVisibility(android.view.View, int)
    {
        android.view.View $r0;
        int $i0, $i1;
        java.lang.reflect.Field $r1;
        java.lang.IllegalAccessException $r2;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        staticinvoke <android.support.transition.ViewUtils: void fetchViewFlagsField()>();

        $r1 = <android.support.transition.ViewUtils: java.lang.reflect.Field sViewFlagsField>;

        if $r1 == null goto label6;

        $r1 = <android.support.transition.ViewUtils: java.lang.reflect.Field sViewFlagsField>;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r0);

     label2:
        $r1 = <android.support.transition.ViewUtils: java.lang.reflect.Field sViewFlagsField>;

        $i1 = $i1 & -13;

        $i0 = $i1 | $i0;

     label3:
        virtualinvoke $r1.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>($r0, $i0);

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label5;
    }
    static void transformMatrixToGlobal(android.view.View, android.graphics.Matrix)
    {
        android.view.View $r0;
        android.graphics.Matrix $r1;
        android.support.transition.ViewUtilsImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Matrix;

        $r2 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r2.<android.support.transition.ViewUtilsImpl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>($r0, $r1);

        return;
    }
    static void transformMatrixToLocal(android.view.View, android.graphics.Matrix)
    {
        android.view.View $r0;
        android.graphics.Matrix $r1;
        android.support.transition.ViewUtilsImpl $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Matrix;

        $r2 = <android.support.transition.ViewUtils: android.support.transition.ViewUtilsImpl IMPL>;

        interfaceinvoke $r2.<android.support.transition.ViewUtilsImpl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>($r0, $r1);

        return;
    }
