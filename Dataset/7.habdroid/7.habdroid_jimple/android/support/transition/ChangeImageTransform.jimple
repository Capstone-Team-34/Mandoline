android.support.transition.ChangeImageTransform extends android.support.transition.Transition
private static final android.util.Property ANIMATED_TRANSFORM_PROPERTY
private static final android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR
private static final java.lang.String PROPNAME_BOUNDS
private static final java.lang.String PROPNAME_MATRIX
private static final java.lang.String[] sTransitionProperties
    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.support.transition.ChangeImageTransform$1 $r1;
        android.support.transition.ChangeImageTransform$2 $r2;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "android:changeImageTransform:matrix";

        $r0[1] = "android:changeImageTransform:bounds";

        <android.support.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.support.transition.ChangeImageTransform$1;

        specialinvoke $r1.<android.support.transition.ChangeImageTransform$1: void <init>()>();

        <android.support.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR> = $r1;

        $r2 = new android.support.transition.ChangeImageTransform$2;

        specialinvoke $r2.<android.support.transition.ChangeImageTransform$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/Matrix;", "animatedTransform");

        <android.support.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY> = $r2;

        return;
    }
    public void <init>()
    {
        android.support.transition.ChangeImageTransform r0;

        r0 := @this: android.support.transition.ChangeImageTransform;

        specialinvoke r0.<android.support.transition.Transition: void <init>()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.ChangeImageTransform r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    private void captureValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeImageTransform r0;
        android.support.transition.TransitionValues $r1;
        android.graphics.Rect r2;
        java.util.Map r3;
        android.view.View r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.widget.ImageView r5;
        android.graphics.drawable.Drawable $r6;
        android.graphics.Matrix $r7;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        r4 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $z0 = r4 instanceof android.widget.ImageView;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i0 == 0 goto label1;

        return;

     label1:
        r5 = (android.widget.ImageView) r4;

        $r6 = virtualinvoke r5.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r6 == null goto label2;

        r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $i0 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r4.<android.view.View: int getTop()>();

        $i2 = virtualinvoke r4.<android.view.View: int getRight()>();

        $i3 = virtualinvoke r4.<android.view.View: int getBottom()>();

        r2 = new android.graphics.Rect;

        specialinvoke r2.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:bounds", r2);

        $r7 = staticinvoke <android.support.transition.ChangeImageTransform: android.graphics.Matrix copyImageMatrix(android.widget.ImageView)>(r5);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeImageTransform:matrix", $r7);

     label2:
        return;
    }
    private static android.graphics.Matrix centerCropMatrix(android.widget.ImageView)
    {
        android.widget.ImageView $r0;
        float f0, f1, f2, $f3;
        android.graphics.Matrix r1;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: android.widget.ImageView;

        $r2 = virtualinvoke $r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.widget.ImageView: int getWidth()>();

        f1 = (float) $i1;

        f0 = (float) $i0;

        f1 = f1 / f0;

        $i2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i3 = virtualinvoke $r0.<android.widget.ImageView: int getHeight()>();

        f0 = (float) $i3;

        f2 = (float) $i2;

        f0 = f0 / f2;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0);

        f0 = (float) $i0;

        f2 = f0 * f1;

        f0 = (float) $i2;

        f0 = f0 * f1;

        $f3 = (float) $i1;

        f2 = $f3 - f2;

        f2 = f2 / 2.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>(f2);

        f2 = (float) $i3;

        f0 = f2 - f0;

        f0 = f0 / 2.0F;

        $i3 = staticinvoke <java.lang.Math: int round(float)>(f0);

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f1);

        f1 = (float) $i0;

        f0 = (float) $i3;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>(f1, f0);

        return r1;
    }
    private static android.graphics.Matrix copyImageMatrix(android.widget.ImageView)
    {
        android.widget.ImageView $r0;
        int[] $r1;
        android.widget.ImageView$ScaleType $r2;
        int $i0;
        android.graphics.Matrix $r3, $r4;

        $r0 := @parameter0: android.widget.ImageView;

        $r1 = <android.support.transition.ChangeImageTransform$3: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r2 = virtualinvoke $r0.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $i0 = virtualinvoke $r2.<android.widget.ImageView$ScaleType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new android.graphics.Matrix;

        $r4 = virtualinvoke $r0.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        specialinvoke $r3.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r4);

        return $r3;

     label2:
        $r3 = staticinvoke <android.support.transition.ChangeImageTransform: android.graphics.Matrix fitXYMatrix(android.widget.ImageView)>($r0);

        return $r3;

     label3:
        $r3 = staticinvoke <android.support.transition.ChangeImageTransform: android.graphics.Matrix centerCropMatrix(android.widget.ImageView)>($r0);

        return $r3;
    }
    private android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView, android.graphics.Matrix, android.graphics.Matrix)
    {
        android.support.transition.ChangeImageTransform r0;
        android.widget.ImageView $r1;
        android.graphics.Matrix $r2, $r3;
        android.support.transition.TransitionUtils$MatrixEvaluator $r4;
        android.animation.ObjectAnimator $r5;
        android.util.Property $r6;
        android.graphics.Matrix[] $r7;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.widget.ImageView;

        $r2 := @parameter1: android.graphics.Matrix;

        $r3 := @parameter2: android.graphics.Matrix;

        $r6 = <android.support.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r4 = new android.support.transition.TransitionUtils$MatrixEvaluator;

        specialinvoke $r4.<android.support.transition.TransitionUtils$MatrixEvaluator: void <init>()>();

        $r7 = newarray (android.graphics.Matrix)[2];

        $r7[0] = $r2;

        $r7[1] = $r3;

        $r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r6, $r4, $r7);

        return $r5;
    }
    private android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)
    {
        android.support.transition.ChangeImageTransform r0;
        android.widget.ImageView $r1;
        android.animation.TypeEvaluator $r2;
        android.animation.ObjectAnimator $r3;
        android.util.Property $r4;
        android.graphics.Matrix[] $r5;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.widget.ImageView;

        $r4 = <android.support.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        $r2 = <android.support.transition.ChangeImageTransform: android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR>;

        $r5 = newarray (android.graphics.Matrix)[2];

        $r5[0] = null;

        $r5[1] = null;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>($r1, $r4, $r2, $r5);

        return $r3;
    }
    private static android.graphics.Matrix fitXYMatrix(android.widget.ImageView)
    {
        android.widget.ImageView $r0;
        android.graphics.Matrix r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;
        float $f0, $f1, $f2;

        $r0 := @parameter0: android.widget.ImageView;

        $r2 = virtualinvoke $r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        $i0 = virtualinvoke $r0.<android.widget.ImageView: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = virtualinvoke $r0.<android.widget.ImageView: int getHeight()>();

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f1);

        return r1;
    }
    public void captureEndValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeImageTransform r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeImageTransform: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeImageTransform r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeImageTransform: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public android.animation.Animator createAnimator(android.view.ViewGroup, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeImageTransform r0;
        android.view.ViewGroup $r1;
        android.support.transition.TransitionValues $r2, $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        android.graphics.Rect r6, r7;
        android.graphics.Matrix r8, r9;
        boolean $z0, $z1;
        android.view.View r10;
        android.widget.ImageView r11;
        android.graphics.drawable.Drawable $r12;
        int $i0, $i1;
        android.animation.ObjectAnimator $r13;
        android.util.Property $r14;

        r0 := @this: android.support.transition.ChangeImageTransform;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        if $r2 == null goto label12;

        if $r3 != null goto label01;

        return null;

     label01:
        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r6 = (android.graphics.Rect) $r5;

        $r4 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:bounds");

        r7 = (android.graphics.Rect) $r5;

        if r6 == null goto label12;

        if r7 == null goto label12;

        $r4 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r8 = (android.graphics.Matrix) $r5;

        $r4 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeImageTransform:matrix");

        r9 = (android.graphics.Matrix) $r5;

        if r8 != null goto label02;

        if r9 == null goto label03;

     label02:
        if r8 == null goto label08;

        $z0 = virtualinvoke r8.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label08;

     label03:
        $z0 = 1;

     label04:
        $z1 = virtualinvoke r6.<android.graphics.Rect: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label05;

        if $z0 != 0 goto label12;

     label05:
        r10 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        r11 = (android.widget.ImageView) r10;

        $r12 = virtualinvoke r11.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0 = virtualinvoke $r12.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r12.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        staticinvoke <android.support.transition.ImageViewUtils: void startAnimateTransform(android.widget.ImageView)>(r11);

        if $i0 == 0 goto label06;

        if $i1 != 0 goto label09;

     label06:
        $r13 = specialinvoke r0.<android.support.transition.ChangeImageTransform: android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView)>(r11);

     label07:
        staticinvoke <android.support.transition.ImageViewUtils: void reserveEndAnimateTransform(android.widget.ImageView,android.animation.Animator)>(r11, $r13);

        return $r13;

     label08:
        $z0 = 0;

        goto label04;

     label09:
        if r8 != null goto label10;

        r8 = <android.support.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label10:
        if r9 != null goto label11;

        r9 = <android.support.transition.MatrixUtils: android.graphics.Matrix IDENTITY_MATRIX>;

     label11:
        $r14 = <android.support.transition.ChangeImageTransform: android.util.Property ANIMATED_TRANSFORM_PROPERTY>;

        virtualinvoke $r14.<android.util.Property: void set(java.lang.Object,java.lang.Object)>(r11, r8);

        $r13 = specialinvoke r0.<android.support.transition.ChangeImageTransform: android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix)>(r11, r8, r9);

        goto label07;

     label12:
        return null;
    }
    public java.lang.String[] getTransitionProperties()
    {
        android.support.transition.ChangeImageTransform r0;
        java.lang.String[] r1;

        r0 := @this: android.support.transition.ChangeImageTransform;

        r1 = <android.support.transition.ChangeImageTransform: java.lang.String[] sTransitionProperties>;

        return r1;
    }
