android.support.transition.TransitionUtils extends java.lang.Object
private static final int MAX_IMAGE_SIZE
    void <init>()
    {
        android.support.transition.TransitionUtils r0;

        r0 := @this: android.support.transition.TransitionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static android.view.View copyViewImage(android.view.ViewGroup, android.view.View, android.view.View)
    {
        android.view.ViewGroup $r0;
        android.view.View $r1, $r2;
        android.graphics.RectF r3;
        android.widget.ImageView r4;
        android.graphics.Matrix r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1;
        android.content.Context $r6;
        android.widget.ImageView$ScaleType $r7;
        android.graphics.Bitmap $r8;

        $r0 := @parameter0: android.view.ViewGroup;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        r5 = new android.graphics.Matrix;

        specialinvoke r5.<android.graphics.Matrix: void <init>()>();

        $i0 = virtualinvoke $r2.<android.view.View: int getScrollX()>();

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r2.<android.view.View: int getScrollY()>();

        $i0 = neg $i0;

        $f1 = (float) $i0;

        virtualinvoke r5.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        staticinvoke <android.support.transition.ViewUtils: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>($r1, r5);

        staticinvoke <android.support.transition.ViewUtils: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>($r0, r5);

        r3 = new android.graphics.RectF;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $f1 = (float) $i0;

        specialinvoke r3.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        virtualinvoke r5.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f0 = r3.<android.graphics.RectF: float left>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = r3.<android.graphics.RectF: float top>;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = r3.<android.graphics.RectF: float right>;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = r3.<android.graphics.RectF: float bottom>;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r4 = new android.widget.ImageView;

        $r6 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke r4.<android.widget.ImageView: void <init>(android.content.Context)>($r6);

        $r7 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke r4.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r7);

        $r8 = staticinvoke <android.support.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)>($r1, r5, r3);

        if $r8 == null goto label1;

        virtualinvoke r4.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r8);

     label1:
        $i4 = $i2 - $i0;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);

        $i5 = $i3 - $i1;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        virtualinvoke r4.<android.widget.ImageView: void measure(int,int)>($i4, $i5);

        virtualinvoke r4.<android.widget.ImageView: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return r4;
    }
    private static android.graphics.Bitmap createViewBitmap(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.view.View $r0;
        android.graphics.Matrix $r1;
        android.graphics.RectF $r2;
        android.graphics.Canvas r3;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Bitmap $r5;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Matrix;

        $r2 := @parameter2: android.graphics.RectF;

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        if $i0 <= 0 goto label1;

        if $i1 <= 0 goto label1;

        $i2 = $i0 * $i1;

        $f0 = (float) $i2;

        $f0 = 1048576.0F / $f0;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $f1 = (float) $i1;

        $f1 = $f1 * $f0;

        $i1 = (int) $f1;

        $f1 = $r2.<android.graphics.RectF: float left>;

        $f1 = neg $f1;

        $f2 = $r2.<android.graphics.RectF: float top>;

        $f2 = neg $f2;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f2);

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f0);

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r4);

        r3 = new android.graphics.Canvas;

        specialinvoke r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r5);

        virtualinvoke r3.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r1);

        virtualinvoke $r0.<android.view.View: void draw(android.graphics.Canvas)>(r3);

        return $r5;

     label1:
        return null;
    }
    static android.animation.Animator mergeAnimators(android.animation.Animator, android.animation.Animator)
    {
        android.animation.Animator $r0, r2;
        android.animation.AnimatorSet r1;
        android.animation.Animator[] $r3;

        $r0 := @parameter0: android.animation.Animator;

        r2 := @parameter1: android.animation.Animator;

        if $r0 != null goto label1;

        return r2;

     label1:
        if r2 != null goto label2;

        return $r0;

     label2:
        r1 = new android.animation.AnimatorSet;

        specialinvoke r1.<android.animation.AnimatorSet: void <init>()>();

        $r3 = newarray (android.animation.Animator)[2];

        $r3[0] = $r0;

        $r3[1] = r2;

        virtualinvoke r1.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r3);

        return r1;
    }
