android.support.transition.ChangeBounds extends android.support.transition.Transition
private static final android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY
private static final android.util.Property BOTTOM_RIGHT_PROPERTY
private static final android.util.Property DRAWABLE_ORIGIN_PROPERTY
private static final android.util.Property POSITION_PROPERTY
private static final java.lang.String PROPNAME_BOUNDS
private static final java.lang.String PROPNAME_CLIP
private static final java.lang.String PROPNAME_PARENT
private static final java.lang.String PROPNAME_WINDOW_X
private static final java.lang.String PROPNAME_WINDOW_Y
private static final android.util.Property TOP_LEFT_ONLY_PROPERTY
private static final android.util.Property TOP_LEFT_PROPERTY
private static android.support.transition.RectEvaluator sRectEvaluator
private static final java.lang.String[] sTransitionProperties
private boolean mReparent
private boolean mResizeClip
private int[] mTempLocation
    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.support.transition.ChangeBounds$1 $r1;
        android.support.transition.ChangeBounds$2 $r2;
        android.support.transition.ChangeBounds$3 $r3;
        android.support.transition.ChangeBounds$4 $r4;
        android.support.transition.ChangeBounds$5 $r5;
        android.support.transition.ChangeBounds$6 $r6;
        android.support.transition.RectEvaluator $r7;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "android:changeBounds:bounds";

        $r0[1] = "android:changeBounds:clip";

        $r0[2] = "android:changeBounds:parent";

        $r0[3] = "android:changeBounds:windowX";

        $r0[4] = "android:changeBounds:windowY";

        <android.support.transition.ChangeBounds: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.support.transition.ChangeBounds$1;

        specialinvoke $r1.<android.support.transition.ChangeBounds$1: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "boundsOrigin");

        <android.support.transition.ChangeBounds: android.util.Property DRAWABLE_ORIGIN_PROPERTY> = $r1;

        $r2 = new android.support.transition.ChangeBounds$2;

        specialinvoke $r2.<android.support.transition.ChangeBounds$2: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "topLeft");

        <android.support.transition.ChangeBounds: android.util.Property TOP_LEFT_PROPERTY> = $r2;

        $r3 = new android.support.transition.ChangeBounds$3;

        specialinvoke $r3.<android.support.transition.ChangeBounds$3: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "bottomRight");

        <android.support.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_PROPERTY> = $r3;

        $r4 = new android.support.transition.ChangeBounds$4;

        specialinvoke $r4.<android.support.transition.ChangeBounds$4: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "bottomRight");

        <android.support.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY> = $r4;

        $r5 = new android.support.transition.ChangeBounds$5;

        specialinvoke $r5.<android.support.transition.ChangeBounds$5: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "topLeft");

        <android.support.transition.ChangeBounds: android.util.Property TOP_LEFT_ONLY_PROPERTY> = $r5;

        $r6 = new android.support.transition.ChangeBounds$6;

        specialinvoke $r6.<android.support.transition.ChangeBounds$6: void <init>(java.lang.Class,java.lang.String)>(class "Landroid/graphics/PointF;", "position");

        <android.support.transition.ChangeBounds: android.util.Property POSITION_PROPERTY> = $r6;

        $r7 = new android.support.transition.RectEvaluator;

        specialinvoke $r7.<android.support.transition.RectEvaluator: void <init>()>();

        <android.support.transition.ChangeBounds: android.support.transition.RectEvaluator sRectEvaluator> = $r7;

        return;
    }
    public void <init>()
    {
        android.support.transition.ChangeBounds r0;
        int[] $r1;

        r0 := @this: android.support.transition.ChangeBounds;

        specialinvoke r0.<android.support.transition.Transition: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.support.transition.ChangeBounds: int[] mTempLocation> = $r1;

        r0.<android.support.transition.ChangeBounds: boolean mResizeClip> = 0;

        r0.<android.support.transition.ChangeBounds: boolean mReparent> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.transition.ChangeBounds r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.content.res.XmlResourceParser $r5;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = newarray (int)[2];

        r0.<android.support.transition.ChangeBounds: int[] mTempLocation> = $r3;

        r0.<android.support.transition.ChangeBounds: boolean mResizeClip> = 0;

        r0.<android.support.transition.ChangeBounds: boolean mReparent> = 0;

        $r3 = <android.support.transition.Styleable: int[] CHANGE_BOUNDS>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $r5 = (android.content.res.XmlResourceParser) $r2;

        $z0 = staticinvoke <android.support.v4.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>($r4, $r5, "resizeClip", 0, 0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.support.transition.ChangeBounds: void setResizeClip(boolean)>($z0);

        return;
    }
    private void captureValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeBounds r0;
        android.support.transition.TransitionValues $r1;
        android.view.View r2, $r5;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.util.Map $r3;
        android.graphics.Rect $r4;
        android.view.ViewParent $r6;
        int[] $r7;
        java.lang.Integer $r8;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        r2 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r2);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r2.<android.view.View: int getWidth()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke r2.<android.view.View: int getHeight()>();

        if $i0 == 0 goto label3;

     label1:
        $r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r4 = new android.graphics.Rect;

        $i0 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i2 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i3 = virtualinvoke r2.<android.view.View: int getBottom()>();

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:bounds", $r4);

        $r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r5 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:parent", $r6);

        $z0 = r0.<android.support.transition.ChangeBounds: boolean mReparent>;

        if $z0 == 0 goto label2;

        $r5 = $r1.<android.support.transition.TransitionValues: android.view.View view>;

        $r7 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        virtualinvoke $r5.<android.view.View: void getLocationInWindow(int[])>($r7);

        $r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r7 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        $i0 = $r7[0];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:windowX", $r8);

        $r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r7 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        $i0 = $r7[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:windowY", $r8);

     label2:
        $z0 = r0.<android.support.transition.ChangeBounds: boolean mResizeClip>;

        if $z0 == 0 goto label3;

        $r3 = $r1.<android.support.transition.TransitionValues: java.util.Map values>;

        $r4 = staticinvoke <android.support.v4.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeBounds:clip", $r4);

     label3:
        return;
    }
    private boolean parentMatches(android.view.View, android.view.View)
    {
        android.support.transition.ChangeBounds r0;
        android.view.View $r1, $r2;
        android.support.transition.TransitionValues $r3;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = r0.<android.support.transition.ChangeBounds: boolean mReparent>;

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>($r1, 1);

        if $r3 != null goto label2;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r1 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        if $r2 != $r1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 1;
    }
    public void captureEndValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeBounds r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeBounds: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public void captureStartValues(android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeBounds r0;
        android.support.transition.TransitionValues $r1;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.support.transition.TransitionValues;

        specialinvoke r0.<android.support.transition.ChangeBounds: void captureValues(android.support.transition.TransitionValues)>($r1);

        return;
    }
    public android.animation.Animator createAnimator(android.view.ViewGroup, android.support.transition.TransitionValues, android.support.transition.TransitionValues)
    {
        android.support.transition.ChangeBounds r0;
        android.view.ViewGroup $r1, r14, r15;
        android.support.transition.TransitionValues $r2, $r3;
        android.view.View r4;
        android.graphics.Rect r5, r16, r17;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, i12;
        android.graphics.drawable.BitmapDrawable r6;
        android.graphics.Canvas r7;
        android.animation.AnimatorSet r8;
        android.support.transition.ChangeBounds$9 r9;
        android.support.transition.ChangeBounds$ViewBounds r10;
        java.util.Map $r11, $r12;
        java.lang.Object $r13;
        boolean $z0;
        android.support.transition.PathMotion $r18;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Path $r19;
        android.util.Property $r20;
        android.animation.ObjectAnimator $r21, $r24, $r29;
        android.animation.Animator r22;
        android.view.ViewParent $r23;
        android.animation.Animator[] $r25;
        android.support.transition.ChangeBounds$7 $r26;
        android.support.transition.RectEvaluator $r27;
        java.lang.Object[] $r28;
        android.support.transition.ChangeBounds$8 $r30;
        java.lang.Integer $r31;
        int[] $r32;
        android.graphics.Bitmap$Config $r33;
        android.graphics.Bitmap $r34;
        android.support.transition.ViewOverlayImpl $r35;
        android.animation.PropertyValuesHolder $r36;
        android.animation.PropertyValuesHolder[] $r37;
        android.support.transition.ChangeBounds$10 $r38;

        r0 := @this: android.support.transition.ChangeBounds;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.support.transition.TransitionValues;

        $r3 := @parameter2: android.support.transition.TransitionValues;

        if $r2 == null goto label01;

        if $r3 != null goto label02;

     label01:
        return null;

     label02:
        $r11 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r12 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:parent");

        r14 = (android.view.ViewGroup) $r13;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:parent");

        r15 = (android.view.ViewGroup) $r13;

        if r14 == null goto label03;

        if r15 != null goto label04;

     label03:
        return null;

     label04:
        r4 = $r3.<android.support.transition.TransitionValues: android.view.View view>;

        $z0 = specialinvoke r0.<android.support.transition.ChangeBounds: boolean parentMatches(android.view.View,android.view.View)>(r14, r15);

        if $z0 == 0 goto label25;

        $r11 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:bounds");

        r5 = (android.graphics.Rect) $r13;

        $r11 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:bounds");

        r16 = (android.graphics.Rect) $r13;

        $i8 = r5.<android.graphics.Rect: int left>;

        i0 = r16.<android.graphics.Rect: int left>;

        $i9 = r5.<android.graphics.Rect: int top>;

        i1 = r16.<android.graphics.Rect: int top>;

        $i10 = r5.<android.graphics.Rect: int right>;

        i2 = r16.<android.graphics.Rect: int right>;

        $i11 = r5.<android.graphics.Rect: int bottom>;

        i3 = r16.<android.graphics.Rect: int bottom>;

        i7 = $i10 - $i8;

        i6 = $i11 - $i9;

        i5 = i2 - i0;

        i4 = i3 - i1;

        $r11 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:clip");

        r16 = (android.graphics.Rect) $r13;

        $r11 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:clip");

        r17 = (android.graphics.Rect) $r13;

        i12 = 0;

        if i7 == 0 goto label05;

        if i6 != 0 goto label06;

     label05:
        if i5 == 0 goto label10;

        if i4 == 0 goto label10;

     label06:
        if $i8 != i0 goto label07;

        if $i9 == i1 goto label08;

     label07:
        i12 = 1;

     label08:
        if $i10 != i2 goto label09;

        if $i11 == i3 goto label10;

     label09:
        i12 = i12 + 1;

     label10:
        if r16 == null goto label11;

        $z0 = virtualinvoke r16.<android.graphics.Rect: boolean equals(java.lang.Object)>(r17);

        if $z0 == 0 goto label12;

     label11:
        if r16 != null goto label13;

        if r17 == null goto label13;

     label12:
        i12 = i12 + 1;

     label13:
        if i12 <= 0 goto label27;

        $z0 = r0.<android.support.transition.ChangeBounds: boolean mResizeClip>;

        if $z0 != 0 goto label19;

        staticinvoke <android.support.transition.ViewUtils: void setLeftTopRightBottom(android.view.View,int,int,int,int)>(r4, $i8, $i9, $i10, $i11);

        if i12 != 2 goto label16;

        if i7 != i5 goto label15;

        if i6 != i4 goto label15;

        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i8;

        $f1 = (float) $i9;

        $f2 = (float) i0;

        $f3 = (float) i1;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property POSITION_PROPERTY>;

        r22 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r4, $r20, $r19);

     label14:
        $r23 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r23 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label28;

        $r23 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        $r1 = (android.view.ViewGroup) $r23;

        staticinvoke <android.support.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>($r1, 1);

        r9 = new android.support.transition.ChangeBounds$9;

        specialinvoke r9.<android.support.transition.ChangeBounds$9: void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup)>(r0, $r1);

        virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener)>(r9);

        return r22;

     label15:
        r10 = new android.support.transition.ChangeBounds$ViewBounds;

        specialinvoke r10.<android.support.transition.ChangeBounds$ViewBounds: void <init>(android.view.View)>(r4);

        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i8;

        $f1 = (float) $i9;

        $f2 = (float) i0;

        $f3 = (float) i1;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property TOP_LEFT_PROPERTY>;

        $r21 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r10, $r20, $r19);

        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i10;

        $f1 = (float) $i11;

        $f2 = (float) i2;

        $f3 = (float) i3;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_PROPERTY>;

        $r24 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r10, $r20, $r19);

        r8 = new android.animation.AnimatorSet;

        specialinvoke r8.<android.animation.AnimatorSet: void <init>()>();

        $r25 = newarray (android.animation.Animator)[2];

        $r25[0] = $r21;

        $r25[1] = $r24;

        virtualinvoke r8.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r25);

        r22 = r8;

        $r26 = new android.support.transition.ChangeBounds$7;

        specialinvoke $r26.<android.support.transition.ChangeBounds$7: void <init>(android.support.transition.ChangeBounds,android.support.transition.ChangeBounds$ViewBounds)>(r0, r10);

        virtualinvoke r8.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r26);

        goto label14;

     label16:
        if $i8 != i0 goto label17;

        if $i9 == i1 goto label18;

     label17:
        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i8;

        $f1 = (float) $i9;

        $f2 = (float) i0;

        $f3 = (float) i1;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property TOP_LEFT_ONLY_PROPERTY>;

        r22 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r4, $r20, $r19);

        goto label14;

     label18:
        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i10;

        $f1 = (float) $i11;

        $f2 = (float) i2;

        $f3 = (float) i3;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY>;

        r22 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r4, $r20, $r19);

        goto label14;

     label19:
        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(i7, i5);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i4);

        $i11 = $i8 + $i11;

        $i10 = $i9 + $i10;

        staticinvoke <android.support.transition.ViewUtils: void setLeftTopRightBottom(android.view.View,int,int,int,int)>(r4, $i8, $i9, $i11, $i10);

        $r21 = null;

        if $i8 != i0 goto label20;

        if $i9 == i1 goto label21;

     label20:
        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $f0 = (float) $i8;

        $f1 = (float) $i9;

        $f2 = (float) i0;

        $f3 = (float) i1;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property POSITION_PROPERTY>;

        $r21 = staticinvoke <android.support.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>(r4, $r20, $r19);

     label21:
        r5 = r17;

        if r16 != null goto label22;

        r16 = new android.graphics.Rect;

        specialinvoke r16.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i7, i6);

     label22:
        if r17 != null goto label23;

        r17 = new android.graphics.Rect;

        specialinvoke r17.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i5, i4);

     label23:
        $r24 = null;

        $z0 = virtualinvoke r16.<android.graphics.Rect: boolean equals(java.lang.Object)>(r17);

        if $z0 != 0 goto label24;

        staticinvoke <android.support.v4.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)>(r4, r16);

        $r27 = <android.support.transition.ChangeBounds: android.support.transition.RectEvaluator sRectEvaluator>;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = r16;

        $r28[1] = r17;

        $r29 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r4, "clipBounds", $r27, $r28);

        $r24 = $r29;

        $r30 = new android.support.transition.ChangeBounds$8;

        specialinvoke $r30.<android.support.transition.ChangeBounds$8: void <init>(android.support.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int)>(r0, r4, r5, i0, i1, i2, i3);

        virtualinvoke $r29.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r30);

     label24:
        r22 = staticinvoke <android.support.transition.TransitionUtils: android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator)>($r21, $r24);

        goto label14;

     label25:
        $r11 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowX");

        $r31 = (java.lang.Integer) $r13;

        i3 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $r11 = $r2.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowY");

        $r31 = (java.lang.Integer) $r13;

        i2 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $r11 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowX");

        $r31 = (java.lang.Integer) $r13;

        i1 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $r11 = $r3.<android.support.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeBounds:windowY");

        $r31 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        if i3 != i1 goto label26;

        if i2 == i0 goto label27;

     label26:
        $r32 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        virtualinvoke $r1.<android.view.ViewGroup: void getLocationInWindow(int[])>($r32);

        i4 = virtualinvoke r4.<android.view.View: int getWidth()>();

        i5 = virtualinvoke r4.<android.view.View: int getHeight()>();

        $r33 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r34 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i4, i5, $r33);

        r7 = new android.graphics.Canvas;

        specialinvoke r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r34);

        virtualinvoke r4.<android.view.View: void draw(android.graphics.Canvas)>(r7);

        r6 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke r6.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r34);

        $f0 = staticinvoke <android.support.transition.ViewUtils: float getTransitionAlpha(android.view.View)>(r4);

        staticinvoke <android.support.transition.ViewUtils: void setTransitionAlpha(android.view.View,float)>(r4, 0.0F);

        $r35 = staticinvoke <android.support.transition.ViewUtils: android.support.transition.ViewOverlayImpl getOverlay(android.view.View)>($r1);

        interfaceinvoke $r35.<android.support.transition.ViewOverlayImpl: void add(android.graphics.drawable.Drawable)>(r6);

        $r18 = virtualinvoke r0.<android.support.transition.ChangeBounds: android.support.transition.PathMotion getPathMotion()>();

        $r32 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        i4 = $r32[0];

        i3 = i3 - i4;

        $f1 = (float) i3;

        $r32 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        i3 = $r32[1];

        i2 = i2 - i3;

        $f2 = (float) i2;

        $r32 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        i2 = $r32[0];

        i1 = i1 - i2;

        $f3 = (float) i1;

        $r32 = r0.<android.support.transition.ChangeBounds: int[] mTempLocation>;

        i1 = $r32[1];

        i0 = i0 - i1;

        $f4 = (float) i0;

        $r19 = virtualinvoke $r18.<android.support.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>($f1, $f2, $f3, $f4);

        $r20 = <android.support.transition.ChangeBounds: android.util.Property DRAWABLE_ORIGIN_PROPERTY>;

        $r36 = staticinvoke <android.support.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)>($r20, $r19);

        $r37 = newarray (android.animation.PropertyValuesHolder)[1];

        $r37[0] = $r36;

        $r21 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r6, $r37);

        $r38 = new android.support.transition.ChangeBounds$10;

        specialinvoke $r38.<android.support.transition.ChangeBounds$10: void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float)>(r0, $r1, r6, r4, $f0);

        virtualinvoke $r21.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r38);

        return $r21;

     label27:
        return null;

     label28:
        return r22;
    }
    public boolean getResizeClip()
    {
        android.support.transition.ChangeBounds r0;
        boolean z0;

        r0 := @this: android.support.transition.ChangeBounds;

        z0 = r0.<android.support.transition.ChangeBounds: boolean mResizeClip>;

        return z0;
    }
    public java.lang.String[] getTransitionProperties()
    {
        android.support.transition.ChangeBounds r0;
        java.lang.String[] r1;

        r0 := @this: android.support.transition.ChangeBounds;

        r1 = <android.support.transition.ChangeBounds: java.lang.String[] sTransitionProperties>;

        return r1;
    }
    public void setResizeClip(boolean)
    {
        android.support.transition.ChangeBounds r0;
        boolean $z0;

        r0 := @this: android.support.transition.ChangeBounds;

        $z0 := @parameter0: boolean;

        r0.<android.support.transition.ChangeBounds: boolean mResizeClip> = $z0;

        return;
    }
