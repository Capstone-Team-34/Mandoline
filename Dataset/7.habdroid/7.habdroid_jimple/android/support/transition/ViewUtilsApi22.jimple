android.support.transition.ViewUtilsApi22 extends android.support.transition.ViewUtilsApi21
private static final java.lang.String TAG
private static java.lang.reflect.Method sSetLeftTopRightBottomMethod
private static boolean sSetLeftTopRightBottomMethodFetched
    void <init>()
    {
        android.support.transition.ViewUtilsApi22 r0;

        r0 := @this: android.support.transition.ViewUtilsApi22;

        specialinvoke r0.<android.support.transition.ViewUtilsApi21: void <init>()>();

        return;
    }
    private void fetchSetLeftTopRightBottomMethod()
    {
        android.support.transition.ViewUtilsApi22 r0;
        java.lang.NoSuchMethodException r1;
        java.lang.reflect.Method $r2;
        boolean $z0;
        java.lang.Class $r3, $r5;
        java.lang.Class[] $r4;

        r0 := @this: android.support.transition.ViewUtilsApi22;

        $z0 = <android.support.transition.ViewUtilsApi22: boolean sSetLeftTopRightBottomMethodFetched>;

        if $z0 != 0 goto label6;

        $r3 = class "Landroid/view/View;";

        $r4 = newarray (java.lang.Class)[4];

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[0] = $r5;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[1] = $r5;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[2] = $r5;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4[3] = $r5;

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLeftTopRightBottom", $r4);

     label2:
        <android.support.transition.ViewUtilsApi22: java.lang.reflect.Method sSetLeftTopRightBottomMethod> = $r2;

        $r2 = <android.support.transition.ViewUtilsApi22: java.lang.reflect.Method sSetLeftTopRightBottomMethod>;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        <android.support.transition.ViewUtilsApi22: boolean sSetLeftTopRightBottomMethodFetched> = 1;

        return;

     label5:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi22", "Failed to retrieve setLeftTopRightBottom method", r1);

        goto label4;

     label6:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }
    public void setLeftTopRightBottom(android.view.View, int, int, int, int)
    {
        android.support.transition.ViewUtilsApi22 r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.reflect.InvocationTargetException r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.RuntimeException $r6;
        java.lang.Throwable $r7;
        java.lang.IllegalAccessException $r8;

        r0 := @this: android.support.transition.ViewUtilsApi22;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.support.transition.ViewUtilsApi22: void fetchSetLeftTopRightBottomMethod()>();

        $r3 = <android.support.transition.ViewUtilsApi22: java.lang.reflect.Method sSetLeftTopRightBottomMethod>;

        if $r3 == null goto label13;

        $r3 = <android.support.transition.ViewUtilsApi22: java.lang.reflect.Method sSetLeftTopRightBottomMethod>;

        $r4 = newarray (java.lang.Object)[4];

     label01:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label02:
        $r4[0] = $r5;

     label03:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label04:
        $r4[1] = $r5;

     label05:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label06:
        $r4[2] = $r5;

     label07:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label08:
        $r4[3] = $r5;

     label09:
        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label10:
        return;

     label11:
        r2 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label12:
        $r8 := @caughtexception;

     label13:
        return;

        catch java.lang.IllegalAccessException from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label11;
    }
