android.support.transition.GhostViewApi14 extends android.view.View implements android.support.transition.GhostViewImpl
android.graphics.Matrix mCurrentMatrix
private int mDeltaX
private int mDeltaY
private final android.graphics.Matrix mMatrix
private final android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener
int mReferences
android.view.ViewGroup mStartParent
android.view.View mStartView
final android.view.View mView
    void <init>(android.view.View)
    {
        android.support.transition.GhostViewApi14 r0;
        android.view.View $r1;
        android.content.Context $r2;
        android.graphics.Matrix $r3;
        android.support.transition.GhostViewApi14$1 $r4;

        r0 := @this: android.support.transition.GhostViewApi14;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r2);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.support.transition.GhostViewApi14: android.graphics.Matrix mMatrix> = $r3;

        $r4 = new android.support.transition.GhostViewApi14$1;

        specialinvoke $r4.<android.support.transition.GhostViewApi14$1: void <init>(android.support.transition.GhostViewApi14)>(r0);

        r0.<android.support.transition.GhostViewApi14: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener> = $r4;

        r0.<android.support.transition.GhostViewApi14: android.view.View mView> = $r1;

        virtualinvoke r0.<android.support.transition.GhostViewApi14: void setLayerType(int,android.graphics.Paint)>(2, null);

        return;
    }
    static android.support.transition.GhostViewApi14 getGhostView(android.view.View)
    {
        android.view.View $r0;
        java.lang.Object $r1;
        int $i0;
        android.support.transition.GhostViewApi14 $r2;

        $r0 := @parameter0: android.view.View;

        $i0 = <android.support.transition.R$id: int ghost_view>;

        $r1 = virtualinvoke $r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        $r2 = (android.support.transition.GhostViewApi14) $r1;

        return $r2;
    }
    private static void setGhostView(android.view.View, android.support.transition.GhostViewApi14)
    {
        android.view.View $r0;
        android.support.transition.GhostViewApi14 $r1;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.transition.GhostViewApi14;

        $i0 = <android.support.transition.R$id: int ghost_view>;

        virtualinvoke $r0.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r1);

        return;
    }
    protected void onAttachedToWindow()
    {
        android.support.transition.GhostViewApi14 r0;
        int[] r1, r2;
        android.view.View $r3;
        int $i0, $i1;
        float $f0, $f1;
        android.view.ViewTreeObserver $r4;
        android.view.ViewTreeObserver$OnPreDrawListener $r5;

        r0 := @this: android.support.transition.GhostViewApi14;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        staticinvoke <android.support.transition.GhostViewApi14: void setGhostView(android.view.View,android.support.transition.GhostViewApi14)>($r3, r0);

        r1 = newarray (int)[2];

        r2 = newarray (int)[2];

        virtualinvoke r0.<android.support.transition.GhostViewApi14: void getLocationOnScreen(int[])>(r1);

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void getLocationOnScreen(int[])>(r2);

        $i0 = r2[0];

        $f0 = (float) $i0;

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        $f1 = virtualinvoke $r3.<android.view.View: float getTranslationX()>();

        $f0 = $f0 - $f1;

        $i0 = (int) $f0;

        r2[0] = $i0;

        $i0 = r2[1];

        $f0 = (float) $i0;

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        $f1 = virtualinvoke $r3.<android.view.View: float getTranslationY()>();

        $f0 = $f0 - $f1;

        $i0 = (int) $f0;

        r2[1] = $i0;

        $i0 = r2[0];

        $i1 = r1[0];

        $i0 = $i0 - $i1;

        r0.<android.support.transition.GhostViewApi14: int mDeltaX> = $i0;

        $i0 = r2[1];

        $i1 = r1[1];

        $i0 = $i0 - $i1;

        r0.<android.support.transition.GhostViewApi14: int mDeltaY> = $i0;

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r5 = r0.<android.support.transition.GhostViewApi14: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r5);

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(4);

        return;
    }
    protected void onDetachedFromWindow()
    {
        android.support.transition.GhostViewApi14 r0;
        android.view.ViewTreeObserver $r1;
        android.view.View $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r3;

        r0 := @this: android.support.transition.GhostViewApi14;

        $r2 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.support.transition.GhostViewApi14: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

        $r2 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        $r2 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        staticinvoke <android.support.transition.GhostViewApi14: void setGhostView(android.view.View,android.support.transition.GhostViewApi14)>($r2, null);

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        android.support.transition.GhostViewApi14 r0;
        android.graphics.Canvas $r1;
        android.graphics.Matrix $r2, $r3;
        int $i0;
        float $f0, $f1;
        android.view.View $r4;

        r0 := @this: android.support.transition.GhostViewApi14;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.support.transition.GhostViewApi14: android.graphics.Matrix mMatrix>;

        $r3 = r0.<android.support.transition.GhostViewApi14: android.graphics.Matrix mCurrentMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r2 = r0.<android.support.transition.GhostViewApi14: android.graphics.Matrix mMatrix>;

        $i0 = r0.<android.support.transition.GhostViewApi14: int mDeltaX>;

        $f0 = (float) $i0;

        $i0 = r0.<android.support.transition.GhostViewApi14: int mDeltaY>;

        $f1 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        $r2 = r0.<android.support.transition.GhostViewApi14: android.graphics.Matrix mMatrix>;

        virtualinvoke $r1.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>($r2);

        $r4 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void draw(android.graphics.Canvas)>($r1);

        return;
    }
    public void reserveEndViewTransition(android.view.ViewGroup, android.view.View)
    {
        android.support.transition.GhostViewApi14 r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;

        r0 := @this: android.support.transition.GhostViewApi14;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        r0.<android.support.transition.GhostViewApi14: android.view.ViewGroup mStartParent> = $r1;

        r0.<android.support.transition.GhostViewApi14: android.view.View mStartView> = $r2;

        return;
    }
    public void setVisibility(int)
    {
        android.support.transition.GhostViewApi14 r0;
        int $i0;
        android.view.View $r1;
        byte $b1;

        r0 := @this: android.support.transition.GhostViewApi14;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void setVisibility(int)>($i0);

        $r1 = r0.<android.support.transition.GhostViewApi14: android.view.View mView>;

        if $i0 != 0 goto label2;

        $b1 = 4;

     label1:
        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b1);

        return;

     label2:
        $b1 = 0;

        goto label1;
    }
