android.support.transition.GhostViewApi21 extends java.lang.Object implements android.support.transition.GhostViewImpl
private static final java.lang.String TAG
private static java.lang.reflect.Method sAddGhostMethod
private static boolean sAddGhostMethodFetched
private static java.lang.Class sGhostViewClass
private static boolean sGhostViewClassFetched
private static java.lang.reflect.Method sRemoveGhostMethod
private static boolean sRemoveGhostMethodFetched
private final android.view.View mGhostView
    private void <init>(android.view.View)
    {
        android.support.transition.GhostViewApi21 r0;
        android.view.View $r1;

        r0 := @this: android.support.transition.GhostViewApi21;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.transition.GhostViewApi21: android.view.View mGhostView> = $r1;

        return;
    }
    void <init>(android.view.View, android.support.transition.GhostViewApi21$1)
    {
        android.support.transition.GhostViewApi21 r0;
        android.view.View $r1;
        android.support.transition.GhostViewApi21$1 $r2;

        r0 := @this: android.support.transition.GhostViewApi21;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.transition.GhostViewApi21$1;

        specialinvoke r0.<android.support.transition.GhostViewApi21: void <init>(android.view.View)>($r1);

        return;
    }
    static void access$000()
    {
        staticinvoke <android.support.transition.GhostViewApi21: void fetchAddGhostMethod()>();

        return;
    }
    static java.lang.reflect.Method access$100()
    {
        java.lang.reflect.Method r0;

        r0 = <android.support.transition.GhostViewApi21: java.lang.reflect.Method sAddGhostMethod>;

        return r0;
    }
    static void access$300()
    {
        staticinvoke <android.support.transition.GhostViewApi21: void fetchRemoveGhostMethod()>();

        return;
    }
    static java.lang.reflect.Method access$400()
    {
        java.lang.reflect.Method r0;

        r0 = <android.support.transition.GhostViewApi21: java.lang.reflect.Method sRemoveGhostMethod>;

        return r0;
    }
    private static void fetchAddGhostMethod()
    {
        java.lang.NoSuchMethodException r0;
        java.lang.reflect.Method $r1;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;

        $z0 = <android.support.transition.GhostViewApi21: boolean sAddGhostMethodFetched>;

        if $z0 != 0 goto label8;

     label1:
        staticinvoke <android.support.transition.GhostViewApi21: void fetchGhostViewClass()>();

     label2:
        $r2 = <android.support.transition.GhostViewApi21: java.lang.Class sGhostViewClass>;

        $r3 = newarray (java.lang.Class)[3];

        $r3[0] = class "Landroid/view/View;";

        $r3[1] = class "Landroid/view/ViewGroup;";

        $r3[2] = class "Landroid/graphics/Matrix;";

     label3:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addGhost", $r3);

     label4:
        <android.support.transition.GhostViewApi21: java.lang.reflect.Method sAddGhostMethod> = $r1;

        $r1 = <android.support.transition.GhostViewApi21: java.lang.reflect.Method sAddGhostMethod>;

     label5:
        virtualinvoke $r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label6:
        <android.support.transition.GhostViewApi21: boolean sAddGhostMethodFetched> = 1;

        return;

     label7:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve addGhost method", r0);

        goto label6;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }
    private static void fetchGhostViewClass()
    {
        java.lang.ClassNotFoundException r0;
        java.lang.Class $r1;
        boolean $z0;

        $z0 = <android.support.transition.GhostViewApi21: boolean sGhostViewClassFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.view.GhostView");

     label2:
        <android.support.transition.GhostViewApi21: java.lang.Class sGhostViewClass> = $r1;

     label3:
        <android.support.transition.GhostViewApi21: boolean sGhostViewClassFetched> = 1;

        return;

     label4:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve GhostView class", r0);

        goto label3;

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }
    private static void fetchRemoveGhostMethod()
    {
        java.lang.NoSuchMethodException r0;
        java.lang.reflect.Method $r1;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;

        $z0 = <android.support.transition.GhostViewApi21: boolean sRemoveGhostMethodFetched>;

        if $z0 != 0 goto label8;

     label1:
        staticinvoke <android.support.transition.GhostViewApi21: void fetchGhostViewClass()>();

     label2:
        $r2 = <android.support.transition.GhostViewApi21: java.lang.Class sGhostViewClass>;

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/view/View;";

     label3:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("removeGhost", $r3);

     label4:
        <android.support.transition.GhostViewApi21: java.lang.reflect.Method sRemoveGhostMethod> = $r1;

        $r1 = <android.support.transition.GhostViewApi21: java.lang.reflect.Method sRemoveGhostMethod>;

     label5:
        virtualinvoke $r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label6:
        <android.support.transition.GhostViewApi21: boolean sRemoveGhostMethodFetched> = 1;

        return;

     label7:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve removeGhost method", r0);

        goto label6;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }
    public void reserveEndViewTransition(android.view.ViewGroup, android.view.View)
    {
        android.support.transition.GhostViewApi21 r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;

        r0 := @this: android.support.transition.GhostViewApi21;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        return;
    }
    public void setVisibility(int)
    {
        android.support.transition.GhostViewApi21 r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.transition.GhostViewApi21;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.transition.GhostViewApi21: android.view.View mGhostView>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($i0);

        return;
    }
