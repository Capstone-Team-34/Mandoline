android.support.transition.ViewUtilsApi21 extends android.support.transition.ViewUtilsApi19
private static final java.lang.String TAG
private static java.lang.reflect.Method sSetAnimationMatrixMethod
private static boolean sSetAnimationMatrixMethodFetched
private static java.lang.reflect.Method sTransformMatrixToGlobalMethod
private static boolean sTransformMatrixToGlobalMethodFetched
private static java.lang.reflect.Method sTransformMatrixToLocalMethod
private static boolean sTransformMatrixToLocalMethodFetched
    void <init>()
    {
        android.support.transition.ViewUtilsApi21 r0;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        specialinvoke r0.<android.support.transition.ViewUtilsApi19: void <init>()>();

        return;
    }
    private void fetchSetAnimationMatrix()
    {
        android.support.transition.ViewUtilsApi21 r0;
        java.lang.NoSuchMethodException r1;
        java.lang.reflect.Method $r2;
        boolean $z0;
        java.lang.Class $r3;
        java.lang.Class[] $r4;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $z0 = <android.support.transition.ViewUtilsApi21: boolean sSetAnimationMatrixMethodFetched>;

        if $z0 != 0 goto label6;

        $r3 = class "Landroid/view/View;";

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Landroid/graphics/Matrix;";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setAnimationMatrix", $r4);

     label2:
        <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sSetAnimationMatrixMethod> = $r2;

        $r2 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sSetAnimationMatrixMethod>;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        <android.support.transition.ViewUtilsApi21: boolean sSetAnimationMatrixMethodFetched> = 1;

        return;

     label5:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi21", "Failed to retrieve setAnimationMatrix method", r1);

        goto label4;

     label6:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }
    private void fetchTransformMatrixToGlobalMethod()
    {
        android.support.transition.ViewUtilsApi21 r0;
        java.lang.NoSuchMethodException r1;
        java.lang.reflect.Method $r2;
        boolean $z0;
        java.lang.Class $r3;
        java.lang.Class[] $r4;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $z0 = <android.support.transition.ViewUtilsApi21: boolean sTransformMatrixToGlobalMethodFetched>;

        if $z0 != 0 goto label6;

        $r3 = class "Landroid/view/View;";

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Landroid/graphics/Matrix;";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("transformMatrixToGlobal", $r4);

     label2:
        <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToGlobalMethod> = $r2;

        $r2 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToGlobalMethod>;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        <android.support.transition.ViewUtilsApi21: boolean sTransformMatrixToGlobalMethodFetched> = 1;

        return;

     label5:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi21", "Failed to retrieve transformMatrixToGlobal method", r1);

        goto label4;

     label6:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }
    private void fetchTransformMatrixToLocalMethod()
    {
        android.support.transition.ViewUtilsApi21 r0;
        java.lang.NoSuchMethodException r1;
        java.lang.reflect.Method $r2;
        boolean $z0;
        java.lang.Class $r3;
        java.lang.Class[] $r4;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $z0 = <android.support.transition.ViewUtilsApi21: boolean sTransformMatrixToLocalMethodFetched>;

        if $z0 != 0 goto label6;

        $r3 = class "Landroid/view/View;";

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Landroid/graphics/Matrix;";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("transformMatrixToLocal", $r4);

     label2:
        <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToLocalMethod> = $r2;

        $r2 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToLocalMethod>;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        <android.support.transition.ViewUtilsApi21: boolean sTransformMatrixToLocalMethodFetched> = 1;

        return;

     label5:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi21", "Failed to retrieve transformMatrixToLocal method", r1);

        goto label4;

     label6:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }
    public void setAnimationMatrix(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsApi21 r0;
        android.view.View $r1;
        android.graphics.Matrix $r2;
        java.lang.IllegalAccessException r3;
        java.lang.Throwable $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.RuntimeException $r7;
        java.lang.reflect.InvocationTargetException $r8;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<android.support.transition.ViewUtilsApi21: void fetchSetAnimationMatrix()>();

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sSetAnimationMatrixMethod>;

        if $r5 == null goto label5;

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sSetAnimationMatrixMethod>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r2;

     label1:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r6);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r4 = virtualinvoke r3.<java.lang.IllegalAccessException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r7;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }
    public void transformMatrixToGlobal(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsApi21 r0;
        android.view.View $r1;
        android.graphics.Matrix $r2;
        java.lang.reflect.InvocationTargetException r3;
        java.lang.Throwable $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.RuntimeException $r7;
        java.lang.IllegalAccessException $r8;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<android.support.transition.ViewUtilsApi21: void fetchTransformMatrixToGlobalMethod()>();

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToGlobalMethod>;

        if $r5 == null goto label5;

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToGlobalMethod>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r2;

     label1:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r6);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r4 = virtualinvoke r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r7;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
    public void transformMatrixToLocal(android.view.View, android.graphics.Matrix)
    {
        android.support.transition.ViewUtilsApi21 r0;
        android.view.View $r1;
        android.graphics.Matrix $r2;
        java.lang.reflect.InvocationTargetException r3;
        java.lang.Throwable $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.RuntimeException $r7;
        java.lang.IllegalAccessException $r8;

        r0 := @this: android.support.transition.ViewUtilsApi21;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<android.support.transition.ViewUtilsApi21: void fetchTransformMatrixToLocalMethod()>();

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToLocalMethod>;

        if $r5 == null goto label5;

        $r5 = <android.support.transition.ViewUtilsApi21: java.lang.reflect.Method sTransformMatrixToLocalMethod>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r2;

     label1:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r6);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r4 = virtualinvoke r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r7;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
