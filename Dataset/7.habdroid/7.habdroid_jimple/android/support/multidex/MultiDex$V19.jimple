android.support.multidex.MultiDex$V19 extends java.lang.Object
    private void <init>()
    {
        android.support.multidex.MultiDex$V19 r0;

        r0 := @this: android.support.multidex.MultiDex$V19;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static void access$000(java.lang.ClassLoader, java.util.List, java.io.File) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException
    {
        java.lang.ClassLoader $r0;
        java.util.List $r1;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.ClassLoader;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.io.File;

        staticinvoke <android.support.multidex.MultiDex$V19: void install(java.lang.ClassLoader,java.util.List,java.io.File)>($r0, $r1, $r2);

        return;
    }
    private static void install(java.lang.ClassLoader, java.util.List, java.io.File) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException, java.lang.NoSuchFieldException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException
    {
        java.lang.ClassLoader $r0;
        java.util.List r1;
        java.io.File $r2;
        java.io.IOException[] r3, r12;
        java.util.ArrayList r4, $r7;
        java.lang.reflect.Field $r5;
        java.lang.Object $r6, $r10;
        java.lang.Object[] $r8;
        int $i0, $i1;
        java.util.Iterator $r9;
        boolean $z0;
        java.io.IOException r11;

        $r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.io.File;

        $r5 = staticinvoke <android.support.multidex.MultiDex: java.lang.reflect.Field access$300(java.lang.Object,java.lang.String)>($r0, "pathList");

        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r8 = staticinvoke <android.support.multidex.MultiDex$V19: java.lang.Object[] makeDexElements(java.lang.Object,java.util.ArrayList,java.io.File,java.util.ArrayList)>($r6, $r7, $r2, r4);

        staticinvoke <android.support.multidex.MultiDex: void access$400(java.lang.Object,java.lang.String,java.lang.Object[])>($r6, "dexElements", $r8);

        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label5;

        $r9 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.io.IOException) $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Exception in makeDexElement", r11);

        goto label1;

     label2:
        $r5 = staticinvoke <android.support.multidex.MultiDex: java.lang.reflect.Field access$300(java.lang.Object,java.lang.String)>($r6, "dexElementsSuppressedExceptions");

        $r10 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (java.io.IOException[]) $r10;

        r12 = r3;

        if r3 != null goto label4;

        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        r3 = newarray (java.io.IOException)[$i0];

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        r3 = (java.io.IOException[]) $r8;

     label3:
        virtualinvoke $r5.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r6, r3);

        return;

     label4:
        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $i1 = lengthof r3;

        $i0 = $i0 + $i1;

        r3 = newarray (java.io.IOException)[$i0];

        virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $i1 = lengthof r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r3, $i0, $i1);

        goto label3;

     label5:
        return;
    }
    private static java.lang.Object[] makeDexElements(java.lang.Object, java.util.ArrayList, java.io.File, java.util.ArrayList) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.NoSuchMethodException
    {
        java.lang.Object $r0;
        java.util.ArrayList r1, r3;
        java.io.File $r2;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.io.File;

        r3 := @parameter3: java.util.ArrayList;

        $r4 = newarray (java.lang.Class)[3];

        $r4[0] = class "Ljava/util/ArrayList;";

        $r4[1] = class "Ljava/io/File;";

        $r4[2] = class "Ljava/util/ArrayList;";

        $r5 = staticinvoke <android.support.multidex.MultiDex: java.lang.reflect.Method access$500(java.lang.Object,java.lang.String,java.lang.Class[])>($r0, "makeDexElements", $r4);

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r1;

        $r6[1] = $r2;

        $r6[2] = r3;

        $r0 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r6);

        $r6 = (java.lang.Object[]) $r0;

        return $r6;
    }
