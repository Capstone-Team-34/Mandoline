android.support.design.internal.SnackbarContentLayout extends android.widget.LinearLayout implements android.support.design.widget.BaseTransientBottomBar$ContentViewCallback
private android.widget.Button mActionView
private int mMaxInlineActionWidth
private int mMaxWidth
private android.widget.TextView mMessageView
    public void <init>(android.content.Context)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.internal.SnackbarContentLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <android.support.design.R$styleable: int[] SnackbarLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <android.support.design.R$styleable: int SnackbarLayout_android_maxWidth>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, -1);

        r0.<android.support.design.internal.SnackbarContentLayout: int mMaxWidth> = $i0;

        $i0 = <android.support.design.R$styleable: int SnackbarLayout_maxActionInlineWidth>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, -1);

        r0.<android.support.design.internal.SnackbarContentLayout: int mMaxInlineActionWidth> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    private static void updateTopBottomPadding(android.view.View, int, int)
    {
        android.view.View $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isPaddingRelative(android.view.View)>($r0);

        if $z0 == 0 goto label1;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r0);

        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>($r0, $i2, $i0, $i3, $i1);

        return;

     label1:
        $i2 = virtualinvoke $r0.<android.view.View: int getPaddingLeft()>();

        $i3 = virtualinvoke $r0.<android.view.View: int getPaddingRight()>();

        virtualinvoke $r0.<android.view.View: void setPadding(int,int,int,int)>($i2, $i0, $i3, $i1);

        return;
    }
    private boolean updateViewsWithinLayout(int, int, int)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        int $i0, $i1, $i2, $i3;
        boolean z0;
        android.widget.TextView $r1;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        z0 = 0;

        $i3 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: int getOrientation()>();

        if $i0 == $i3 goto label1;

        virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: void setOrientation(int)>($i0);

        z0 = 1;

     label1:
        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getPaddingTop()>();

        if $i0 != $i1 goto label2;

        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        $i0 = virtualinvoke $r1.<android.widget.TextView: int getPaddingBottom()>();

        if $i0 == $i2 goto label3;

     label2:
        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        staticinvoke <android.support.design.internal.SnackbarContentLayout: void updateTopBottomPadding(android.view.View,int,int)>($r1, $i1, $i2);

        return 1;

     label3:
        return z0;
    }
    public void animateContentIn(int, int)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        int $i0, $i1, $i3;
        android.widget.TextView $r1;
        android.view.ViewPropertyAnimator $r2;
        long $l2;
        android.widget.Button $r3;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        virtualinvoke $r1.<android.widget.TextView: void setAlpha(float)>(0.0F);

        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.view.ViewPropertyAnimator animate()>();

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $l2 = (long) $i1;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l2);

        $l2 = (long) $i0;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>($l2);

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void start()>();

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        $i3 = virtualinvoke $r3.<android.widget.Button: int getVisibility()>();

        if $i3 != 0 goto label1;

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        virtualinvoke $r3.<android.widget.Button: void setAlpha(float)>(0.0F);

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        $r2 = virtualinvoke $r3.<android.widget.Button: android.view.ViewPropertyAnimator animate()>();

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $l2 = (long) $i1;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l2);

        $l2 = (long) $i0;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>($l2);

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void start()>();

     label1:
        return;
    }
    public void animateContentOut(int, int)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        int $i0, $i1, $i3;
        android.widget.TextView $r1;
        android.view.ViewPropertyAnimator $r2;
        long $l2;
        android.widget.Button $r3;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        virtualinvoke $r1.<android.widget.TextView: void setAlpha(float)>(1.0F);

        $r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.view.ViewPropertyAnimator animate()>();

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $l2 = (long) $i1;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l2);

        $l2 = (long) $i0;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>($l2);

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void start()>();

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        $i3 = virtualinvoke $r3.<android.widget.Button: int getVisibility()>();

        if $i3 != 0 goto label1;

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        virtualinvoke $r3.<android.widget.Button: void setAlpha(float)>(1.0F);

        $r3 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        $r2 = virtualinvoke $r3.<android.widget.Button: android.view.ViewPropertyAnimator animate()>();

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $l2 = (long) $i1;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l2);

        $l2 = (long) $i0;

        $r2 = virtualinvoke $r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>($l2);

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void start()>();

     label1:
        return;
    }
    public android.widget.Button getActionView()
    {
        android.support.design.internal.SnackbarContentLayout r0;
        android.widget.Button r1;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        return r1;
    }
    public android.widget.TextView getMessageView()
    {
        android.support.design.internal.SnackbarContentLayout r0;
        android.widget.TextView r1;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        r1 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        return r1;
    }
    protected void onFinishInflate()
    {
        android.support.design.internal.SnackbarContentLayout r0;
        int $i0;
        android.view.View $r1;
        android.widget.TextView $r2;
        android.widget.Button $r3;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        specialinvoke r0.<android.widget.LinearLayout: void onFinishInflate()>();

        $i0 = <android.support.design.R$id: int snackbar_text>;

        $r1 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: android.view.View findViewById(int)>($i0);

        $r2 = (android.widget.TextView) $r1;

        r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView> = $r2;

        $i0 = <android.support.design.R$id: int snackbar_action>;

        $r1 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: android.view.View findViewById(int)>($i0);

        $r3 = (android.widget.Button) $r1;

        r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView> = $r3;

        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.design.internal.SnackbarContentLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.res.Resources $r1;
        android.widget.TextView $r2;
        android.text.Layout $r3;
        boolean z0, z1;
        android.widget.Button $r4;

        r0 := @this: android.support.design.internal.SnackbarContentLayout;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i1, $i0);

        $i2 = r0.<android.support.design.internal.SnackbarContentLayout: int mMaxWidth>;

        if $i2 <= 0 goto label1;

        $i2 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: int getMeasuredWidth()>();

        $i3 = r0.<android.support.design.internal.SnackbarContentLayout: int mMaxWidth>;

        if $i2 <= $i3 goto label1;

        $i1 = r0.<android.support.design.internal.SnackbarContentLayout: int mMaxWidth>;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        $i1 = $i2;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i2, $i0);

     label1:
        $r1 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: android.content.res.Resources getResources()>();

        $i2 = <android.support.design.R$dimen: int design_snackbar_padding_vertical_2lines>;

        $i2 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        $r1 = virtualinvoke r0.<android.support.design.internal.SnackbarContentLayout: android.content.res.Resources getResources()>();

        $i3 = <android.support.design.R$dimen: int design_snackbar_padding_vertical>;

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i3);

        $r2 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.TextView mMessageView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        $i4 = virtualinvoke $r3.<android.text.Layout: int getLineCount()>();

        if $i4 <= 1 goto label4;

        z0 = 1;

     label2:
        z1 = 0;

        if z0 == 0 goto label5;

        $i4 = r0.<android.support.design.internal.SnackbarContentLayout: int mMaxInlineActionWidth>;

        if $i4 <= 0 goto label5;

        $r4 = r0.<android.support.design.internal.SnackbarContentLayout: android.widget.Button mActionView>;

        $i4 = virtualinvoke $r4.<android.widget.Button: int getMeasuredWidth()>();

        $i5 = r0.<android.support.design.internal.SnackbarContentLayout: int mMaxInlineActionWidth>;

        if $i4 <= $i5 goto label5;

        $i3 = $i2 - $i3;

        z0 = specialinvoke r0.<android.support.design.internal.SnackbarContentLayout: boolean updateViewsWithinLayout(int,int,int)>(1, $i2, $i3);

        if z0 == 0 goto label3;

        z1 = 1;

     label3:
        if z1 == 0 goto label8;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i1, $i0);

        return;

     label4:
        z0 = 0;

        goto label2;

     label5:
        if z0 == 0 goto label7;

     label6:
        z0 = specialinvoke r0.<android.support.design.internal.SnackbarContentLayout: boolean updateViewsWithinLayout(int,int,int)>(0, $i2, $i2);

        if z0 == 0 goto label3;

        z1 = 1;

        goto label3;

     label7:
        $i2 = $i3;

        goto label6;

     label8:
        return;
    }
