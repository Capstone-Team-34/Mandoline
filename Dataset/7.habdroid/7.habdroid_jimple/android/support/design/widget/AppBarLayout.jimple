android.support.design.widget.AppBarLayout extends android.widget.LinearLayout
private static final int INVALID_SCROLL_RANGE
static final int PENDING_ACTION_ANIMATE_ENABLED
static final int PENDING_ACTION_COLLAPSED
static final int PENDING_ACTION_EXPANDED
static final int PENDING_ACTION_FORCE
static final int PENDING_ACTION_NONE
private boolean mCollapsed
private boolean mCollapsible
private int mDownPreScrollRange
private int mDownScrollRange
private boolean mHaveChildWithInterpolator
private android.support.v4.view.WindowInsetsCompat mLastInsets
private java.util.List mListeners
private int mPendingAction
private int[] mTmpStatesArray
private int mTotalScrollRange
    public void <init>(android.content.Context)
    {
        android.support.design.widget.AppBarLayout r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0;
        float $f0;
        android.support.design.widget.AppBarLayout$1 $r6;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<android.support.design.widget.AppBarLayout: int mTotalScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int mDownPreScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int mDownScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int mPendingAction> = 0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setOrientation(int)>(1);

        staticinvoke <android.support.design.widget.ThemeUtils: void checkAppCompatTheme(android.content.Context)>($r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>(r0);

        $i0 = <android.support.design.R$style: int Widget_Design_AppBarLayout>;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>(r0, $r2, 0, $i0);

     label1:
        $r3 = <android.support.design.R$styleable: int[] AppBarLayout>;

        $i0 = <android.support.design.R$style: int Widget_Design_AppBarLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, $i0);

        $i0 = <android.support.design.R$styleable: int AppBarLayout_android_background>;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>(r0, $r5);

        $i0 = <android.support.design.R$styleable: int AppBarLayout_expanded>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_expanded>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean,boolean)>($z0, 0, 0);

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_elevation>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label3;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_elevation>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        $f0 = (float) $i0;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r0, $f0);

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label5;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label4;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_android_keyboardNavigationCluster>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setKeyboardNavigationCluster(boolean)>($z0);

     label4:
        $i0 = <android.support.design.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label5;

        $i0 = <android.support.design.R$styleable: int AppBarLayout_android_touchscreenBlocksFocus>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setTouchscreenBlocksFocus(boolean)>($z0);

     label5:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r6 = new android.support.design.widget.AppBarLayout$1;

        specialinvoke $r6.<android.support.design.widget.AppBarLayout$1: void <init>(android.support.design.widget.AppBarLayout)>(r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>(r0, $r6);

        return;
    }
    private void invalidateScrollRanges()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r0.<android.support.design.widget.AppBarLayout: int mTotalScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int mDownPreScrollRange> = -1;

        r0.<android.support.design.widget.AppBarLayout: int mDownScrollRange> = -1;

        return;
    }
    private boolean setCollapsibleState(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.AppBarLayout: boolean mCollapsible>;

        if $z1 == $z0 goto label1;

        r0.<android.support.design.widget.AppBarLayout: boolean mCollapsible> = $z0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void refreshDrawableState()>();

        return 1;

     label1:
        return 0;
    }
    private void setExpanded(boolean, boolean, boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0, $z1, $z2;
        byte $b0, $b1, $b2;
        int $i3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        $b0 = 0;

        if $z0 == 0 goto label4;

        $b1 = 1;

     label1:
        if $z1 == 0 goto label5;

        $b2 = 4;

     label2:
        $i3 = $b2 | $b1;

        if $z2 == 0 goto label3;

        $b0 = 8;

     label3:
        $i3 = $b0 | $i3;

        r0.<android.support.design.widget.AppBarLayout: int mPendingAction> = $i3;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void requestLayout()>();

        return;

     label4:
        $b1 = 2;

        goto label1;

     label5:
        $b2 = 0;

        goto label2;
    }
    private void updateCollapsible()
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0, $z1;
        int i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 = 0;

        i0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label1:
        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        $z1 = virtualinvoke $r3.<android.support.design.widget.AppBarLayout$LayoutParams: boolean isCollapsible()>();

        if $z1 == 0 goto label3;

        z0 = 1;

     label2:
        specialinvoke r0.<android.support.design.widget.AppBarLayout: boolean setCollapsibleState(boolean)>(z0);

        return;

     label3:
        i0 = i0 + 1;

        goto label1;
    }
    public void addOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.support.design.widget.AppBarLayout$OnOffsetChangedListener;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners> = $r3;

     label1:
        if $r1 == null goto label2;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        return;
    }
    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.design.widget.AppBarLayout$LayoutParams;

        return $z0;
    }
    void dispatchOffsetUpdates(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0, i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        if $r1 == null goto label3;

        i1 = 0;

        $r1 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

     label1:
        if i1 >= $i2 goto label3;

        $r1 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.support.design.widget.AppBarLayout$OnOffsetChangedListener) $r2;

        if r3 == null goto label2;

        interfaceinvoke r3.<android.support.design.widget.AppBarLayout$OnOffsetChangedListener: void onOffsetChanged(android.support.design.widget.AppBarLayout,int)>(r0, $i0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }
    protected android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = new android.support.design.widget.AppBarLayout$LayoutParams;

        specialinvoke $r1.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    protected volatile android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    public android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet $r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }
    protected android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        int $i0;
        boolean $z0;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams r3;
        android.view.ViewGroup$MarginLayoutParams r4;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        r3 = (android.widget.LinearLayout$LayoutParams) r1;

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>(r3);

        return $r2;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r4);

        return $r2;

     label2:
        $r2 = new android.support.design.widget.AppBarLayout$LayoutParams;

        specialinvoke $r2.<android.support.design.widget.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }
    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet $r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout r0;
        android.util.AttributeSet $r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }
    protected volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.AppBarLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.design.widget.AppBarLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    int getDownNestedPreScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, $i1, i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mDownPreScrollRange>;

        if $i1 == -1 goto label1;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mDownPreScrollRange>;

        return $i1;

     label1:
        i2 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

        $i1 = $i1 + -1;

     label2:
        if $i1 < 0 goto label7;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        i0 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int mScrollFlags>;

        $i4 = i0 & 5;

        if $i4 != 5 goto label6;

        $i4 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i5 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        i2 = i2 + $i4;

        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        i2 = i2 + $i3;

     label3:
        $i1 = $i1 + -1;

        goto label2;

     label4:
        i0 = i0 & 2;

        if i0 == 0 goto label5;

        i0 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        $i3 = $i3 - i0;

        i2 = i2 + $i3;

        goto label3;

     label5:
        i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i3 = $i3 - i0;

        i2 = i2 + $i3;

        goto label3;

     label6:
        if i2 <= 0 goto label3;

     label7:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, i2);

        r0.<android.support.design.widget.AppBarLayout: int mDownPreScrollRange> = $i1;

        return $i1;
    }
    int getDownNestedScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, $i1, i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mDownScrollRange>;

        if $i1 == -1 goto label1;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mDownScrollRange>;

        return $i1;

     label1:
        $i1 = 0;

        i2 = 0;

        $i3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label2:
        if i2 >= $i3 goto label3;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i2);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i5 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i4 = i0 + $i4;

        i0 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int mScrollFlags>;

        $i5 = i0 & 1;

        if $i5 == 0 goto label3;

        $i1 = $i1 + $i4;

        i0 = i0 & 2;

        if i0 == 0 goto label4;

        i2 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        $i3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        i2 = i2 + $i3;

        $i1 = $i1 - i2;

     label3:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<android.support.design.widget.AppBarLayout: int mDownScrollRange> = $i1;

        return $i1;

     label4:
        i2 = i2 + 1;

        goto label2;
    }
    final int getMinimumHeightForVisibleOverlappingContent()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r0);

        if $i1 == 0 goto label1;

        $i1 = $i1 * 2;

        $i0 = $i1 + $i0;

        return $i0;

     label1:
        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

        if $i1 < 1 goto label3;

        $i1 = $i1 + -1;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>($i1);

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

     label2:
        if $i1 == 0 goto label4;

        $i1 = $i1 * 2;

        $i0 = $i1 + $i0;

        return $i0;

     label3:
        $i1 = 0;

        goto label2;

     label4:
        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getHeight()>();

        $i0 = $i0 / 3;

        return $i0;
    }
    int getPendingAction()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        i0 = r0.<android.support.design.widget.AppBarLayout: int mPendingAction>;

        return i0;
    }
    public float getTargetElevation()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        return 0.0F;
    }
    final int getTopInset()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;
        android.support.v4.view.WindowInsetsCompat $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        return $i0;

     label1:
        return 0;
    }
    public final int getTotalScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int i0, $i1, i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams r3;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mTotalScrollRange>;

        if $i1 == -1 goto label1;

        $i1 = r0.<android.support.design.widget.AppBarLayout: int mTotalScrollRange>;

        return $i1;

     label1:
        $i1 = 0;

        i2 = 0;

        $i3 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label2:
        if i2 >= $i3 goto label3;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>(i2);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        i0 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int mScrollFlags>;

        $i5 = i0 & 1;

        if $i5 == 0 goto label3;

        $i5 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int topMargin>;

        $i4 = $i5 + $i4;

        $i5 = r3.<android.support.design.widget.AppBarLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 + $i5;

        $i1 = $i1 + $i4;

        i0 = i0 & 2;

        if i0 == 0 goto label4;

        i2 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        $i1 = $i1 - i2;

     label3:
        i2 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTopInset()>();

        $i1 = $i1 - i2;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<android.support.design.widget.AppBarLayout: int mTotalScrollRange> = $i1;

        return $i1;

     label4:
        i2 = i2 + 1;

        goto label2;
    }
    int getUpNestedPreScrollRange()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        return $i0;
    }
    boolean hasChildWithInterpolator()
    {
        android.support.design.widget.AppBarLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        z0 = r0.<android.support.design.widget.AppBarLayout: boolean mHaveChildWithInterpolator>;

        return z0;
    }
    boolean hasScrollableChildren()
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected int[] onCreateDrawableState(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 := @parameter0: int;

        r1 = r0.<android.support.design.widget.AppBarLayout: int[] mTmpStatesArray>;

        if r1 != null goto label1;

        r1 = newarray (int)[2];

        r0.<android.support.design.widget.AppBarLayout: int[] mTmpStatesArray> = r1;

     label1:
        r1 = r0.<android.support.design.widget.AppBarLayout: int[] mTmpStatesArray>;

        $i1 = lengthof r1;

        $i0 = $i1 + $i0;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: int[] onCreateDrawableState(int)>($i0);

        $z0 = r0.<android.support.design.widget.AppBarLayout: boolean mCollapsible>;

        if $z0 == 0 goto label4;

        $i0 = <android.support.design.R$attr: int state_collapsible>;

     label2:
        r1[0] = $i0;

        $z0 = r0.<android.support.design.widget.AppBarLayout: boolean mCollapsible>;

        if $z0 == 0 goto label5;

        $z0 = r0.<android.support.design.widget.AppBarLayout: boolean mCollapsed>;

        if $z0 == 0 goto label5;

        $i0 = <android.support.design.R$attr: int state_collapsed>;

     label3:
        r1[1] = $i0;

        r1 = staticinvoke <android.support.design.widget.AppBarLayout: int[] mergeDrawableStates(int[],int[])>($r2, r1);

        return r1;

     label4:
        $i0 = <android.support.design.R$attr: int state_collapsible>;

        $i0 = neg $i0;

        goto label2;

     label5:
        $i0 = <android.support.design.R$attr: int state_collapsed>;

        $i0 = neg $i0;

        goto label3;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.AppBarLayout$LayoutParams r3;
        android.view.animation.Interpolator $r4;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

        r0.<android.support.design.widget.AppBarLayout: boolean mHaveChildWithInterpolator> = 0;

        $i0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: int getChildCount()>();

     label1:
        if $i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.AppBarLayout: android.view.View getChildAt(int)>($i0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.AppBarLayout$LayoutParams) $r2;

        $r4 = virtualinvoke r3.<android.support.design.widget.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()>();

        if $r4 == null goto label3;

        r0.<android.support.design.widget.AppBarLayout: boolean mHaveChildWithInterpolator> = 1;

     label2:
        specialinvoke r0.<android.support.design.widget.AppBarLayout: void updateCollapsible()>();

        return;

     label3:
        $i0 = $i0 + 1;

        goto label1;
    }
    protected void onMeasure(int, int)
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

        return;
    }
    android.support.v4.view.WindowInsetsCompat onWindowInsetChanged(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1, r2, $r3;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        r2 = null;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        r2 = $r1;

     label1:
        $r3 = r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r3, r2);

        if $z0 != 0 goto label2;

        r0.<android.support.design.widget.AppBarLayout: android.support.v4.view.WindowInsetsCompat mLastInsets> = r2;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void invalidateScrollRanges()>();

     label2:
        return $r1;
    }
    public void removeOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
    {
        android.support.design.widget.AppBarLayout r0;
        android.support.design.widget.AppBarLayout$OnOffsetChangedListener $r1;
        java.util.List $r2;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $r1 := @parameter0: android.support.design.widget.AppBarLayout$OnOffsetChangedListener;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.design.widget.AppBarLayout: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }
    void resetPendingAction()
    {
        android.support.design.widget.AppBarLayout r0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        r0.<android.support.design.widget.AppBarLayout: int mPendingAction> = 0;

        return;
    }
    boolean setCollapsedState(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.AppBarLayout: boolean mCollapsed>;

        if $z1 == $z0 goto label1;

        r0.<android.support.design.widget.AppBarLayout: boolean mCollapsed> = $z0;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void refreshDrawableState()>();

        return 1;

     label1:
        return 0;
    }
    public void setExpanded(boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean)>($z0, $z1);

        return;
    }
    public void setExpanded(boolean, boolean)
    {
        android.support.design.widget.AppBarLayout r0;
        boolean $z0, $z1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        specialinvoke r0.<android.support.design.widget.AppBarLayout: void setExpanded(boolean,boolean,boolean)>($z0, $z1, 1);

        return;
    }
    public void setOrientation(int)
    {
        android.support.design.widget.AppBarLayout r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AppBarLayout is always vertical and does not support horizontal orientation");

        throw $r1;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>($i0);

        return;
    }
    public void setTargetElevation(float)
    {
        android.support.design.widget.AppBarLayout r0;
        float $f0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout;

        $f0 := @parameter0: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <android.support.design.widget.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>(r0, $f0);

     label1:
        return;
    }
