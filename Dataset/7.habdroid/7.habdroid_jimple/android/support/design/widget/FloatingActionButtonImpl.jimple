android.support.design.widget.FloatingActionButtonImpl extends java.lang.Object
static final android.view.animation.Interpolator ANIM_INTERPOLATOR
static final int ANIM_STATE_HIDING
static final int ANIM_STATE_NONE
static final int ANIM_STATE_SHOWING
static final int[] EMPTY_STATE_SET
static final int[] ENABLED_STATE_SET
static final int[] FOCUSED_ENABLED_STATE_SET
static final long PRESSED_ANIM_DELAY
static final long PRESSED_ANIM_DURATION
static final int[] PRESSED_ENABLED_STATE_SET
static final int SHOW_HIDE_ANIM_DURATION
int mAnimState
android.support.design.widget.CircularBorderDrawable mBorderDrawable
android.graphics.drawable.Drawable mContentBackground
float mElevation
private android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener
float mPressedTranslationZ
android.graphics.drawable.Drawable mRippleDrawable
private float mRotation
android.support.design.widget.ShadowDrawableWrapper mShadowDrawable
final android.support.design.widget.ShadowViewDelegate mShadowViewDelegate
android.graphics.drawable.Drawable mShapeDrawable
private final android.support.design.widget.StateListAnimator mStateListAnimator
private final android.graphics.Rect mTmpRect
final android.support.design.widget.VisibilityAwareImageButton mView
    static void <clinit>()
    {
        android.view.animation.Interpolator $r0;
        int[] $r1;

        $r0 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        <android.support.design.widget.FloatingActionButtonImpl: android.view.animation.Interpolator ANIM_INTERPOLATOR> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 16842919;

        $r1[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 16842908;

        $r1[1] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 16842910;

        <android.support.design.widget.FloatingActionButtonImpl: int[] ENABLED_STATE_SET> = $r1;

        $r1 = newarray (int)[0];

        <android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET> = $r1;

        return;
    }
    void <init>(android.support.design.widget.VisibilityAwareImageButton, android.support.design.widget.ShadowViewDelegate)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        android.support.design.widget.ShadowViewDelegate $r2;
        android.graphics.Rect $r3;
        android.support.design.widget.StateListAnimator $r4;
        int[] $r5;
        android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation $r6;
        android.animation.ValueAnimator $r7;
        android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation $r8;
        android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation $r9;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.support.design.widget.VisibilityAwareImageButton;

        $r2 := @parameter1: android.support.design.widget.ShadowViewDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect mTmpRect> = $r3;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView> = $r1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate> = $r2;

        $r4 = new android.support.design.widget.StateListAnimator;

        specialinvoke $r4.<android.support.design.widget.StateListAnimator: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator> = $r4;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        $r5 = <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET>;

        $r6 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation;

        specialinvoke $r6.<android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r7 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r6);

        virtualinvoke $r4.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r5, $r7);

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        $r5 = <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET>;

        $r6 = new android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation;

        specialinvoke $r6.<android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r7 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r6);

        virtualinvoke $r4.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r5, $r7);

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        $r5 = <android.support.design.widget.FloatingActionButtonImpl: int[] ENABLED_STATE_SET>;

        $r8 = new android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation;

        specialinvoke $r8.<android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r7 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r8);

        virtualinvoke $r4.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r5, $r7);

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        $r5 = <android.support.design.widget.FloatingActionButtonImpl: int[] EMPTY_STATE_SET>;

        $r9 = new android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation;

        specialinvoke $r9.<android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        $r7 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)>($r9);

        virtualinvoke $r4.<android.support.design.widget.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>($r5, $r7);

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $f0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: float getRotation()>();

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation> = $f0;

        return;
    }
    private android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl $r1;
        android.animation.ValueAnimator r2;
        android.view.animation.Interpolator $r3;
        float[] $r4;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl;

        r2 = new android.animation.ValueAnimator;

        specialinvoke r2.<android.animation.ValueAnimator: void <init>()>();

        $r3 = <android.support.design.widget.FloatingActionButtonImpl: android.view.animation.Interpolator ANIM_INTERPOLATOR>;

        virtualinvoke r2.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r3);

        virtualinvoke r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(100L);

        virtualinvoke r2.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r1);

        virtualinvoke r2.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r1);

        $r4 = newarray (float)[2];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        virtualinvoke r2.<android.animation.ValueAnimator: void setFloatValues(float[])>($r4);

        return r2;
    }
    private static android.content.res.ColorStateList createColorStateList(int)
    {
        int $i0;
        int[] r0, $r2;
        int[][] r1;
        android.content.res.ColorStateList $r3;

        $i0 := @parameter0: int;

        r1 = newarray (int[])[3];

        r0 = newarray (int)[3];

        $r2 = <android.support.design.widget.FloatingActionButtonImpl: int[] FOCUSED_ENABLED_STATE_SET>;

        r1[0] = $r2;

        r0[0] = $i0;

        $r2 = <android.support.design.widget.FloatingActionButtonImpl: int[] PRESSED_ENABLED_STATE_SET>;

        r1[1] = $r2;

        r0[1] = $i0;

        $i0 = 1 + 1;

        $r2 = newarray (int)[0];

        r1[$i0] = $r2;

        r0[$i0] = 0;

        $r3 = new android.content.res.ColorStateList;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r1, r0);

        return $r3;
    }
    private void ensurePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.support.design.widget.FloatingActionButtonImpl$3 $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        if $r1 != null goto label1;

        $r2 = new android.support.design.widget.FloatingActionButtonImpl$3;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl$3: void <init>(android.support.design.widget.FloatingActionButtonImpl)>(r0);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener> = $r2;

     label1:
        return;
    }
    private boolean shouldAnimateVisibilityChange()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $z0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void updateFromViewRotation()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0;
        float $f0;
        byte $b1;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        android.support.design.widget.ShadowDrawableWrapper $r2;
        android.support.design.widget.CircularBorderDrawable $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 19 goto label1;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation>;

        $f0 = $f0 % 90.0F;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label3;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getLayerType()>();

        if $i0 == 1 goto label1;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: void setLayerType(int,android.graphics.Paint)>(1, null);

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation>;

        $f0 = neg $f0;

        virtualinvoke $r2.<android.support.design.widget.ShadowDrawableWrapper: void setRotation(float)>($f0);

     label2:
        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable>;

        if $r3 == null goto label4;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable>;

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation>;

        $f0 = neg $f0;

        virtualinvoke $r3.<android.support.design.widget.CircularBorderDrawable: void setRotation(float)>($f0);

        return;

     label3:
        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getLayerType()>();

        if $i0 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: void setLayerType(int,android.graphics.Paint)>(0, null);

        goto label1;

     label4:
        return;
    }
    android.support.design.widget.CircularBorderDrawable createBorderDrawable(int, android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.ColorStateList $r1;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.content.Context $r3;
        android.support.design.widget.CircularBorderDrawable $r4;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        $r4 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable newCircularDrawable()>();

        $i1 = <android.support.design.R$color: int design_fab_stroke_top_outer_color>;

        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i1);

        $i2 = <android.support.design.R$color: int design_fab_stroke_top_inner_color>;

        $i2 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i2);

        $i3 = <android.support.design.R$color: int design_fab_stroke_end_inner_color>;

        $i3 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i3);

        $i4 = <android.support.design.R$color: int design_fab_stroke_end_outer_color>;

        $i4 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i4);

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setGradientColors(int,int,int,int)>($i1, $i2, $i3, $i4);

        $f0 = (float) $i0;

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setBorderWidth(float)>($f0);

        virtualinvoke $r4.<android.support.design.widget.CircularBorderDrawable: void setBorderTint(android.content.res.ColorStateList)>($r1);

        return $r4;
    }
    android.graphics.drawable.GradientDrawable createShapeDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.GradientDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable newGradientDrawableForShape()>();

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable: void setShape(int)>(1);

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable: void setColor(int)>(-1);

        return $r1;
    }
    final android.graphics.drawable.Drawable getContentBackground()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mContentBackground>;

        return r1;
    }
    float getElevation()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float f0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        return f0;
    }
    void getPadding(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect $r1;
        android.support.design.widget.ShadowDrawableWrapper $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        virtualinvoke $r2.<android.support.design.widget.ShadowDrawableWrapper: boolean getPadding(android.graphics.Rect)>($r1);

        return;
    }
    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r1;
        boolean $z0, $z1;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.view.ViewPropertyAnimator $r3;
        android.view.animation.Interpolator $r4;
        android.support.design.widget.FloatingActionButtonImpl$1 $r5;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean isOrWillBeHidden()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        $z1 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z1 == 0 goto label2;

        r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState> = 1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewPropertyAnimator animate()>();

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(0.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(0.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(200L);

        $r4 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = new android.support.design.widget.FloatingActionButtonImpl$1;

        specialinvoke $r5.<android.support.design.widget.FloatingActionButtonImpl$1: void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, $z0, $r1);

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>($r5);

        return;

     label2:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        if $z0 == 0 goto label4;

        $b0 = 8;

     label3:
        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>($b0, $z0);

        if $r1 == null goto label5;

        interfaceinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>();

        return;

     label4:
        $b0 = 4;

        goto label3;

     label5:
        return;
    }
    boolean isOrWillBeHidden()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0;
        android.support.design.widget.VisibilityAwareImageButton $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 != 0 goto label2;

        $i0 = r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i0 = r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState>;

        if $i0 != 2 goto label3;

        return 0;

     label3:
        return 1;
    }
    boolean isOrWillBeShown()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0;
        android.support.design.widget.VisibilityAwareImageButton $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $i0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 == 0 goto label2;

        $i0 = r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState>;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i0 = r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState>;

        if $i0 != 1 goto label3;

        return 0;

     label3:
        return 1;
    }
    void jumpDrawableToCurrentState()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.StateListAnimator $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        virtualinvoke $r1.<android.support.design.widget.StateListAnimator: void jumpToCurrentState()>();

        return;
    }
    android.support.design.widget.CircularBorderDrawable newCircularDrawable()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.CircularBorderDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = new android.support.design.widget.CircularBorderDrawable;

        specialinvoke $r1.<android.support.design.widget.CircularBorderDrawable: void <init>()>();

        return $r1;
    }
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.drawable.GradientDrawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable: void <init>()>();

        return $r1;
    }
    void onAttachedToWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        boolean $z0;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.view.ViewTreeObserver $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $z0 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean requirePreDrawListener()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void ensurePreDrawListener()>();

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label1:
        return;
    }
    void onCompatShadowChanged()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return;
    }
    void onDetachedFromWindow()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.view.ViewTreeObserver$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;
        android.support.design.widget.VisibilityAwareImageButton $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        if $r1 == null goto label1;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r2 = virtualinvoke $r3.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener> = null;

     label1:
        return;
    }
    void onDrawableStateChanged(int[])
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int[] $r1;
        android.support.design.widget.StateListAnimator $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: int[];

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.StateListAnimator mStateListAnimator>;

        virtualinvoke $r2.<android.support.design.widget.StateListAnimator: void setState(int[])>($r1);

        return;
    }
    void onElevationsChanged(float, float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        android.support.design.widget.ShadowDrawableWrapper $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ>;

        $f1 = $f1 + $f0;

        virtualinvoke $r1.<android.support.design.widget.ShadowDrawableWrapper: void setShadowSize(float,float)>($f0, $f1);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void updatePadding()>();

     label1:
        return;
    }
    void onPaddingUpdated(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect $r1;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.Rect;

        return;
    }
    void onPreDraw()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        android.support.design.widget.VisibilityAwareImageButton $r1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $f0 = virtualinvoke $r1.<android.support.design.widget.VisibilityAwareImageButton: float getRotation()>();

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mRotation> = $f0;

        specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void updateFromViewRotation()>();

     label1:
        return;
    }
    boolean requirePreDrawListener()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        return 1;
    }
    void setBackgroundDrawable(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int, int)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList $r1, $r5;
        android.graphics.PorterDuff$Mode $r2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.drawable.GradientDrawable $r3;
        android.graphics.drawable.Drawable $r4;
        android.support.design.widget.CircularBorderDrawable $r6;
        android.graphics.drawable.Drawable[] r7;
        android.graphics.drawable.LayerDrawable $r8;
        android.support.design.widget.ShadowDrawableWrapper $r9;
        android.support.design.widget.VisibilityAwareImageButton $r10;
        android.content.Context $r11;
        android.support.design.widget.ShadowViewDelegate $r12;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 := @parameter1: android.graphics.PorterDuff$Mode;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable createShapeDrawable()>();

        $r4 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r3);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable> = $r4;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r1);

        if $r2 == null goto label1;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r2);

     label1:
        $r3 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.GradientDrawable createShapeDrawable()>();

        $r4 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r3);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable> = $r4;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable>;

        $r5 = staticinvoke <android.support.design.widget.FloatingActionButtonImpl: android.content.res.ColorStateList createColorStateList(int)>($i0);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r5);

        if $i1 <= 0 goto label3;

        $r6 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>($i1, $r1);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable> = $r6;

        r7 = newarray (android.graphics.drawable.Drawable)[3];

        $r6 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable>;

        r7[0] = $r6;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        r7[1] = $r4;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable>;

        r7[2] = $r4;

     label2:
        $r8 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r7);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mContentBackground> = $r8;

        $r9 = new android.support.design.widget.ShadowDrawableWrapper;

        $r10 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r11 = virtualinvoke $r10.<android.support.design.widget.VisibilityAwareImageButton: android.content.Context getContext()>();

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mContentBackground>;

        $r12 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate>;

        $f2 = interfaceinvoke $r12.<android.support.design.widget.ShadowViewDelegate: float getRadius()>();

        $f0 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        $f3 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ>;

        $f1 = $f3 + $f1;

        specialinvoke $r9.<android.support.design.widget.ShadowDrawableWrapper: void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float)>($r11, $r4, $f2, $f0, $f1);

        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable> = $r9;

        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        virtualinvoke $r9.<android.support.design.widget.ShadowDrawableWrapper: void setAddPaddingForCorners(boolean)>(0);

        $r12 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate>;

        $r9 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowDrawableWrapper mShadowDrawable>;

        interfaceinvoke $r12.<android.support.design.widget.ShadowViewDelegate: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r9);

        return;

     label3:
        r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable> = null;

        r7 = newarray (android.graphics.drawable.Drawable)[2];

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        r7[0] = $r4;

        $r4 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable>;

        r7[1] = $r4;

        goto label2;
    }
    void setBackgroundTintList(android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.content.res.ColorStateList $r1;
        android.graphics.drawable.Drawable $r2;
        android.support.design.widget.CircularBorderDrawable $r3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r1);

     label1:
        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.CircularBorderDrawable mBorderDrawable>;

        virtualinvoke $r3.<android.support.design.widget.CircularBorderDrawable: void setBorderTint(android.content.res.ColorStateList)>($r1);

     label2:
        return;
    }
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.PorterDuff$Mode $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mShapeDrawable>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r1);

     label1:
        return;
    }
    final void setElevation(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation> = $f0;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationsChanged(float,float)>($f0, $f1);

     label1:
        return;
    }
    final void setPressedTranslationZ(float)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        float $f0, $f1;
        byte $b0;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $f0 := @parameter0: float;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.<android.support.design.widget.FloatingActionButtonImpl: float mPressedTranslationZ> = $f0;

        $f1 = r0.<android.support.design.widget.FloatingActionButtonImpl: float mElevation>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onElevationsChanged(float,float)>($f1, $f0);

     label1:
        return;
    }
    void setRippleColor(int)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        int $i0;
        android.content.res.ColorStateList $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable mRippleDrawable>;

        $r1 = staticinvoke <android.support.design.widget.FloatingActionButtonImpl: android.content.res.ColorStateList createColorStateList(int)>($i0);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r1);

     label1:
        return;
    }
    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r1;
        boolean $z0, $z1;
        android.support.design.widget.VisibilityAwareImageButton $r2;
        android.view.ViewPropertyAnimator $r3;
        int $i0;
        android.view.animation.Interpolator $r4;
        android.support.design.widget.FloatingActionButtonImpl$2 $r5;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean isOrWillBeShown()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        $z1 = specialinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>();

        if $z1 == 0 goto label3;

        r0.<android.support.design.widget.FloatingActionButtonImpl: int mAnimState> = 2;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $i0 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: int getVisibility()>();

        if $i0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setAlpha(float)>(0.0F);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setScaleY(float)>(0.0F);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setScaleX(float)>(0.0F);

     label2:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        $r3 = virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: android.view.ViewPropertyAnimator animate()>();

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(1.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(1.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(200L);

        $r4 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        $r3 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = new android.support.design.widget.FloatingActionButtonImpl$2;

        specialinvoke $r5.<android.support.design.widget.FloatingActionButtonImpl$2: void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)>(r0, $z0, $r1);

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>($r5);

        return;

     label3:
        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>(0, $z0);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setAlpha(float)>(1.0F);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setScaleY(float)>(1.0F);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.VisibilityAwareImageButton mView>;

        virtualinvoke $r2.<android.support.design.widget.VisibilityAwareImageButton: void setScaleX(float)>(1.0F);

        if $r1 == null goto label4;

        interfaceinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>();

     label4:
        return;
    }
    final void updatePadding()
    {
        android.support.design.widget.FloatingActionButtonImpl r0;
        android.graphics.Rect r1;
        android.support.design.widget.ShadowViewDelegate $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.design.widget.FloatingActionButtonImpl;

        r1 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.Rect mTmpRect>;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.support.design.widget.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)>(r1);

        $r2 = r0.<android.support.design.widget.FloatingActionButtonImpl: android.support.design.widget.ShadowViewDelegate mShadowViewDelegate>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int top>;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r2.<android.support.design.widget.ShadowViewDelegate: void setShadowPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
